(function() {var implementors = {
"bevy_asset":[["impl <a class=\"trait\" href=\"bevy_reflect/struct_trait/trait.Struct.html\" title=\"trait bevy_reflect::struct_trait::Struct\">Struct</a> for <a class=\"struct\" href=\"bevy_asset/struct.AssetIndex.html\" title=\"struct bevy_asset::AssetIndex\">AssetIndex</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/any/trait.Any.html\" title=\"trait core::any::Any\">Any</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>,\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>: <a class=\"trait\" href=\"bevy_reflect/from_reflect/trait.FromReflect.html\" title=\"trait bevy_reflect::from_reflect::FromReflect\">FromReflect</a> + <a class=\"trait\" href=\"bevy_reflect/type_path/trait.TypePath.html\" title=\"trait bevy_reflect::type_path::TypePath\">TypePath</a>,</div>"]],
"bevy_ecs":[["impl <a class=\"trait\" href=\"bevy_reflect/struct_trait/trait.Struct.html\" title=\"trait bevy_reflect::struct_trait::Struct\">Struct</a> for <a class=\"struct\" href=\"bevy_ecs/component/struct.ComponentTicks.html\" title=\"struct bevy_ecs::component::ComponentTicks\">ComponentTicks</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/any/trait.Any.html\" title=\"trait core::any::Any\">Any</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>,\n    <a class=\"struct\" href=\"bevy_ecs/component/struct.Tick.html\" title=\"struct bevy_ecs::component::Tick\">Tick</a>: <a class=\"trait\" href=\"bevy_reflect/from_reflect/trait.FromReflect.html\" title=\"trait bevy_reflect::from_reflect::FromReflect\">FromReflect</a> + <a class=\"trait\" href=\"bevy_reflect/type_path/trait.TypePath.html\" title=\"trait bevy_reflect::type_path::TypePath\">TypePath</a>,</div>"],["impl <a class=\"trait\" href=\"bevy_reflect/struct_trait/trait.Struct.html\" title=\"trait bevy_reflect::struct_trait::Struct\">Struct</a> for <a class=\"struct\" href=\"bevy_ecs/component/struct.Tick.html\" title=\"struct bevy_ecs::component::Tick\">Tick</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/any/trait.Any.html\" title=\"trait core::any::Any\">Any</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>,\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>: <a class=\"trait\" href=\"bevy_reflect/from_reflect/trait.FromReflect.html\" title=\"trait bevy_reflect::from_reflect::FromReflect\">FromReflect</a> + <a class=\"trait\" href=\"bevy_reflect/type_path/trait.TypePath.html\" title=\"trait bevy_reflect::type_path::TypePath\">TypePath</a>,</div>"],["impl <a class=\"trait\" href=\"bevy_reflect/struct_trait/trait.Struct.html\" title=\"trait bevy_reflect::struct_trait::Struct\">Struct</a> for <a class=\"struct\" href=\"bevy_ecs/entity/struct.EntityHash.html\" title=\"struct bevy_ecs::entity::EntityHash\">EntityHash</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/any/trait.Any.html\" title=\"trait core::any::Any\">Any</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>,</div>"]],
"bevy_reflect":[]
};if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()