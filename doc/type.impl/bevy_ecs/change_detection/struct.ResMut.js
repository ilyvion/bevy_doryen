(function() {var type_impls = {
"bevy_ecs":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsMut%3CT%3E-for-ResMut%3C'w,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/change_detection.rs.html#592\">source</a><a href=\"#impl-AsMut%3CT%3E-for-ResMut%3C'w,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'w, T: <a class=\"trait\" href=\"bevy_ecs/system/trait.Resource.html\" title=\"trait bevy_ecs::system::Resource\">Resource</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.AsMut.html\" title=\"trait core::convert::AsMut\">AsMut</a>&lt;T&gt; for <a class=\"struct\" href=\"bevy_ecs/change_detection/struct.ResMut.html\" title=\"struct bevy_ecs::change_detection::ResMut\">ResMut</a>&lt;'w, T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/change_detection.rs.html#592\">source</a><a href=\"#method.as_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.AsMut.html#tymethod.as_mut\" class=\"fn\">as_mut</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.reference.html\">&amp;mut T</a></h4></section></summary><div class='docblock'>Converts this type into a mutable reference of the (usually inferred) input type.</div></details></div></details>","AsMut<T>","bevy_ecs::system::system_param::lifetimeless::SResMut"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsRef%3CT%3E-for-ResMut%3C'w,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/change_detection.rs.html#591\">source</a><a href=\"#impl-AsRef%3CT%3E-for-ResMut%3C'w,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'w, T: <a class=\"trait\" href=\"bevy_ecs/system/trait.Resource.html\" title=\"trait bevy_ecs::system::Resource\">Resource</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;T&gt; for <a class=\"struct\" href=\"bevy_ecs/change_detection/struct.ResMut.html\" title=\"struct bevy_ecs::change_detection::ResMut\">ResMut</a>&lt;'w, T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ref\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/change_detection.rs.html#591\">source</a><a href=\"#method.as_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.AsRef.html#tymethod.as_ref\" class=\"fn\">as_ref</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.reference.html\">&amp;T</a></h4></section></summary><div class='docblock'>Converts this type into a shared reference of the (usually inferred) input type.</div></details></div></details>","AsRef<T>","bevy_ecs::system::system_param::lifetimeless::SResMut"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-ResMut%3C'w,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/change_detection.rs.html#594\">source</a><a href=\"#impl-Debug-for-ResMut%3C'w,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'w, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"bevy_ecs/change_detection/struct.ResMut.html\" title=\"struct bevy_ecs::change_detection::ResMut\">ResMut</a>&lt;'w, T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"bevy_ecs/system/trait.Resource.html\" title=\"trait bevy_ecs::system::Resource\">Resource</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/change_detection.rs.html#594\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/1.79.0/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.79.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","bevy_ecs::system::system_param::lifetimeless::SResMut"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deref-for-ResMut%3C'w,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/change_detection.rs.html#591\">source</a><a href=\"#impl-Deref-for-ResMut%3C'w,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'w, T: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"bevy_ecs/system/trait.Resource.html\" title=\"trait bevy_ecs::system::Resource\">Resource</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/deref/trait.Deref.html\" title=\"trait core::ops::deref::Deref\">Deref</a> for <a class=\"struct\" href=\"bevy_ecs/change_detection/struct.ResMut.html\" title=\"struct bevy_ecs::change_detection::ResMut\">ResMut</a>&lt;'w, T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Target\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Target\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.79.0/core/ops/deref/trait.Deref.html#associatedtype.Target\" class=\"associatedtype\">Target</a> = T</h4></section></summary><div class='docblock'>The resulting type after dereferencing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.deref\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/change_detection.rs.html#591\">source</a><a href=\"#method.deref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/ops/deref/trait.Deref.html#tymethod.deref\" class=\"fn\">deref</a>(&amp;self) -&gt; &amp;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/deref/trait.Deref.html#associatedtype.Target\" title=\"type core::ops::deref::Deref::Target\">Target</a></h4></section></summary><div class='docblock'>Dereferences the value.</div></details></div></details>","Deref","bevy_ecs::system::system_param::lifetimeless::SResMut"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DerefMut-for-ResMut%3C'w,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/change_detection.rs.html#592\">source</a><a href=\"#impl-DerefMut-for-ResMut%3C'w,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'w, T: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"bevy_ecs/system/trait.Resource.html\" title=\"trait bevy_ecs::system::Resource\">Resource</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/deref/trait.DerefMut.html\" title=\"trait core::ops::deref::DerefMut\">DerefMut</a> for <a class=\"struct\" href=\"bevy_ecs/change_detection/struct.ResMut.html\" title=\"struct bevy_ecs::change_detection::ResMut\">ResMut</a>&lt;'w, T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deref_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/change_detection.rs.html#592\">source</a><a href=\"#method.deref_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/ops/deref/trait.DerefMut.html#tymethod.deref_mut\" class=\"fn\">deref_mut</a>(&amp;mut self) -&gt; &amp;mut Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/deref/trait.Deref.html#associatedtype.Target\" title=\"type core::ops::deref::Deref::Target\">Target</a></h4></section></summary><div class='docblock'>Mutably dereferences the value.</div></details></div></details>","DerefMut","bevy_ecs::system::system_param::lifetimeless::SResMut"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DetectChanges-for-ResMut%3C'w,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/change_detection.rs.html#591\">source</a><a href=\"#impl-DetectChanges-for-ResMut%3C'w,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'w, T: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"bevy_ecs/system/trait.Resource.html\" title=\"trait bevy_ecs::system::Resource\">Resource</a>&gt; <a class=\"trait\" href=\"bevy_ecs/change_detection/trait.DetectChanges.html\" title=\"trait bevy_ecs::change_detection::DetectChanges\">DetectChanges</a> for <a class=\"struct\" href=\"bevy_ecs/change_detection/struct.ResMut.html\" title=\"struct bevy_ecs::change_detection::ResMut\">ResMut</a>&lt;'w, T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_added\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/change_detection.rs.html#591\">source</a><a href=\"#method.is_added\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy_ecs/change_detection/trait.DetectChanges.html#tymethod.is_added\" class=\"fn\">is_added</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns <code>true</code> if this value was added after the system last ran.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_changed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/change_detection.rs.html#591\">source</a><a href=\"#method.is_changed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy_ecs/change_detection/trait.DetectChanges.html#tymethod.is_changed\" class=\"fn\">is_changed</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns <code>true</code> if this value was added or mutably dereferenced\neither since the last time the system ran or, if the system never ran,\nsince the beginning of the program. <a href=\"bevy_ecs/change_detection/trait.DetectChanges.html#tymethod.is_changed\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.last_changed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/change_detection.rs.html#591\">source</a><a href=\"#method.last_changed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy_ecs/change_detection/trait.DetectChanges.html#tymethod.last_changed\" class=\"fn\">last_changed</a>(&amp;self) -&gt; <a class=\"struct\" href=\"bevy_ecs/component/struct.Tick.html\" title=\"struct bevy_ecs::component::Tick\">Tick</a></h4></section></summary><div class='docblock'>Returns the change tick recording the time this data was most recently changed. <a href=\"bevy_ecs/change_detection/trait.DetectChanges.html#tymethod.last_changed\">Read more</a></div></details></div></details>","DetectChanges","bevy_ecs::system::system_param::lifetimeless::SResMut"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DetectChangesMut-for-ResMut%3C'w,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/change_detection.rs.html#592\">source</a><a href=\"#impl-DetectChangesMut-for-ResMut%3C'w,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'w, T: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"bevy_ecs/system/trait.Resource.html\" title=\"trait bevy_ecs::system::Resource\">Resource</a>&gt; <a class=\"trait\" href=\"bevy_ecs/change_detection/trait.DetectChangesMut.html\" title=\"trait bevy_ecs::change_detection::DetectChangesMut\">DetectChangesMut</a> for <a class=\"struct\" href=\"bevy_ecs/change_detection/struct.ResMut.html\" title=\"struct bevy_ecs::change_detection::ResMut\">ResMut</a>&lt;'w, T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Inner\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Inner\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"bevy_ecs/change_detection/trait.DetectChangesMut.html#associatedtype.Inner\" class=\"associatedtype\">Inner</a> = T</h4></section></summary><div class='docblock'>The type contained within this smart pointer <a href=\"bevy_ecs/change_detection/trait.DetectChangesMut.html#associatedtype.Inner\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_changed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/change_detection.rs.html#592\">source</a><a href=\"#method.set_changed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy_ecs/change_detection/trait.DetectChangesMut.html#tymethod.set_changed\" class=\"fn\">set_changed</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Flags this value as having been changed. <a href=\"bevy_ecs/change_detection/trait.DetectChangesMut.html#tymethod.set_changed\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_last_changed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/change_detection.rs.html#592\">source</a><a href=\"#method.set_last_changed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy_ecs/change_detection/trait.DetectChangesMut.html#tymethod.set_last_changed\" class=\"fn\">set_last_changed</a>(&amp;mut self, last_changed: <a class=\"struct\" href=\"bevy_ecs/component/struct.Tick.html\" title=\"struct bevy_ecs::component::Tick\">Tick</a>)</h4></section></summary><div class='docblock'>Manually sets the change tick recording the time when this data was last mutated. <a href=\"bevy_ecs/change_detection/trait.DetectChangesMut.html#tymethod.set_last_changed\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bypass_change_detection\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/change_detection.rs.html#592\">source</a><a href=\"#method.bypass_change_detection\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy_ecs/change_detection/trait.DetectChangesMut.html#tymethod.bypass_change_detection\" class=\"fn\">bypass_change_detection</a>(&amp;mut self) -&gt; &amp;mut Self::<a class=\"associatedtype\" href=\"bevy_ecs/change_detection/trait.DetectChangesMut.html#associatedtype.Inner\" title=\"type bevy_ecs::change_detection::DetectChangesMut::Inner\">Inner</a></h4></section></summary><div class='docblock'>Manually bypasses change detection, allowing you to mutate the underlying value without updating the change tick. <a href=\"bevy_ecs/change_detection/trait.DetectChangesMut.html#tymethod.bypass_change_detection\">Read more</a></div></details></div></details>","DetectChangesMut","bevy_ecs::system::system_param::lifetimeless::SResMut"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ResMut%3C'w,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/change_detection.rs.html#593\">source</a><a href=\"#impl-ResMut%3C'w,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'w, T: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"bevy_ecs/system/trait.Resource.html\" title=\"trait bevy_ecs::system::Resource\">Resource</a>&gt; <a class=\"struct\" href=\"bevy_ecs/change_detection/struct.ResMut.html\" title=\"struct bevy_ecs::change_detection::ResMut\">ResMut</a>&lt;'w, T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_inner\" class=\"method\"><a class=\"src rightside\" href=\"src/bevy_ecs/change_detection.rs.html#593\">source</a><h4 class=\"code-header\">pub fn <a href=\"bevy_ecs/change_detection/struct.ResMut.html#tymethod.into_inner\" class=\"fn\">into_inner</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.reference.html\">&amp;'w mut T</a></h4></section></summary><div class=\"docblock\"><p>Consume <code>self</code> and return a mutable reference to the\ncontained value while marking <code>self</code> as “changed”.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reborrow\" class=\"method\"><a class=\"src rightside\" href=\"src/bevy_ecs/change_detection.rs.html#593\">source</a><h4 class=\"code-header\">pub fn <a href=\"bevy_ecs/change_detection/struct.ResMut.html#tymethod.reborrow\" class=\"fn\">reborrow</a>(&amp;mut self) -&gt; <a class=\"struct\" href=\"bevy_ecs/change_detection/struct.Mut.html\" title=\"struct bevy_ecs::change_detection::Mut\">Mut</a>&lt;'_, T&gt;</h4></section></summary><div class=\"docblock\"><p>Returns a <code>Mut&lt;&gt;</code> with a smaller lifetime.\nThis is useful if you have <code>&amp;mut ResMut &lt;T&gt;</code>, but you need a <code>Mut&lt;T&gt;</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.map_unchanged\" class=\"method\"><a class=\"src rightside\" href=\"src/bevy_ecs/change_detection.rs.html#593\">source</a><h4 class=\"code-header\">pub fn <a href=\"bevy_ecs/change_detection/struct.ResMut.html#tymethod.map_unchanged\" class=\"fn\">map_unchanged</a>&lt;U: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt;(\n    self,\n    f: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.reference.html\">&amp;mut T</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.reference.html\">&amp;mut U</a>\n) -&gt; <a class=\"struct\" href=\"bevy_ecs/change_detection/struct.Mut.html\" title=\"struct bevy_ecs::change_detection::Mut\">Mut</a>&lt;'w, U&gt;</h4></section></summary><div class=\"docblock\"><p>Maps to an inner value by applying a function to the contained reference, without flagging a change.</p>\n<p>You should never modify the argument passed to the closure – if you want to modify the data\nwithout flagging a change, consider using <a href=\"bevy_ecs/change_detection/trait.DetectChangesMut.html#tymethod.bypass_change_detection\" title=\"method bevy_ecs::change_detection::DetectChangesMut::bypass_change_detection\"><code>DetectChangesMut::bypass_change_detection</code></a> to make your intent explicit.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"comment\">// When run, zeroes the translation of every entity.\n</span><span class=\"kw\">fn </span>reset_positions(<span class=\"kw-2\">mut </span>transforms: Query&lt;<span class=\"kw-2\">&amp;mut </span>Transform&gt;) {\n    <span class=\"kw\">for </span>transform <span class=\"kw\">in </span><span class=\"kw-2\">&amp;mut </span>transforms {\n        <span class=\"comment\">// We pinky promise not to modify `t` within the closure.\n        // Breaking this promise will result in logic errors, but will never cause undefined behavior.\n        </span><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>translation = transform.map_unchanged(|t| <span class=\"kw-2\">&amp;mut </span>t.translation);\n        <span class=\"comment\">// Only reset the translation if it isn't already zero;\n        </span>translation.set_if_neq(Vec2::ZERO);\n    }\n}</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_deref_mut\" class=\"method\"><a class=\"src rightside\" href=\"src/bevy_ecs/change_detection.rs.html#593\">source</a><h4 class=\"code-header\">pub fn <a href=\"bevy_ecs/change_detection/struct.ResMut.html#tymethod.as_deref_mut\" class=\"fn\">as_deref_mut</a>(&amp;mut self) -&gt; <a class=\"struct\" href=\"bevy_ecs/change_detection/struct.Mut.html\" title=\"struct bevy_ecs::change_detection::Mut\">Mut</a>&lt;'_, &lt;T as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/deref/trait.Deref.html\" title=\"trait core::ops::deref::Deref\">Deref</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/deref/trait.Deref.html#associatedtype.Target\" title=\"type core::ops::deref::Deref::Target\">Target</a>&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/deref/trait.DerefMut.html\" title=\"trait core::ops::deref::DerefMut\">DerefMut</a>,</div></h4></section></summary><div class=\"docblock\"><p>Allows you access to the dereferenced value of this pointer without immediately\ntriggering change detection.</p>\n</div></details></div></details>",0,"bevy_ecs::system::system_param::lifetimeless::SResMut"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SystemParam-for-ResMut%3C'a,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/system/system_param.rs.html#587-645\">source</a><a href=\"#impl-SystemParam-for-ResMut%3C'a,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, T: <a class=\"trait\" href=\"bevy_ecs/system/trait.Resource.html\" title=\"trait bevy_ecs::system::Resource\">Resource</a>&gt; <a class=\"trait\" href=\"bevy_ecs/system/trait.SystemParam.html\" title=\"trait bevy_ecs::system::SystemParam\">SystemParam</a> for <a class=\"struct\" href=\"bevy_ecs/change_detection/struct.ResMut.html\" title=\"struct bevy_ecs::change_detection::ResMut\">ResMut</a>&lt;'a, T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.State\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.State\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"bevy_ecs/system/trait.SystemParam.html#associatedtype.State\" class=\"associatedtype\">State</a> = <a class=\"struct\" href=\"bevy_ecs/component/struct.ComponentId.html\" title=\"struct bevy_ecs::component::ComponentId\">ComponentId</a></h4></section></summary><div class='docblock'>Used to store data which persists across invocations of a system.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"bevy_ecs/system/trait.SystemParam.html#associatedtype.Item\" class=\"associatedtype\">Item</a>&lt;'w, 's&gt; = <a class=\"struct\" href=\"bevy_ecs/change_detection/struct.ResMut.html\" title=\"struct bevy_ecs::change_detection::ResMut\">ResMut</a>&lt;'w, T&gt;</h4></section></summary><div class='docblock'>The item type returned when constructing this system param.\nThe value of this associated type should be <code>Self</code>, instantiated with new lifetimes. <a href=\"bevy_ecs/system/trait.SystemParam.html#associatedtype.Item\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.init_state\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/system/system_param.rs.html#591-617\">source</a><a href=\"#method.init_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy_ecs/system/trait.SystemParam.html#tymethod.init_state\" class=\"fn\">init_state</a>(world: &amp;mut <a class=\"struct\" href=\"bevy_ecs/world/struct.World.html\" title=\"struct bevy_ecs::world::World\">World</a>, system_meta: &amp;mut <a class=\"struct\" href=\"bevy_ecs/system/struct.SystemMeta.html\" title=\"struct bevy_ecs::system::SystemMeta\">SystemMeta</a>) -&gt; Self::<a class=\"associatedtype\" href=\"bevy_ecs/system/trait.SystemParam.html#associatedtype.State\" title=\"type bevy_ecs::system::SystemParam::State\">State</a></h4></section></summary><div class='docblock'>Registers any <a href=\"bevy_ecs/world/struct.World.html\" title=\"struct bevy_ecs::world::World\"><code>World</code></a> access used by this <a href=\"bevy_ecs/system/trait.SystemParam.html\" title=\"trait bevy_ecs::system::SystemParam\"><code>SystemParam</code></a>\nand creates a new instance of this param’s <a href=\"bevy_ecs/system/trait.SystemParam.html#associatedtype.State\"><code>State</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_param\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/system/system_param.rs.html#620-644\">source</a><a href=\"#method.get_param\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"bevy_ecs/system/trait.SystemParam.html#tymethod.get_param\" class=\"fn\">get_param</a>&lt;'w, 's&gt;(\n    component_id: &amp;'s mut Self::<a class=\"associatedtype\" href=\"bevy_ecs/system/trait.SystemParam.html#associatedtype.State\" title=\"type bevy_ecs::system::SystemParam::State\">State</a>,\n    system_meta: &amp;<a class=\"struct\" href=\"bevy_ecs/system/struct.SystemMeta.html\" title=\"struct bevy_ecs::system::SystemMeta\">SystemMeta</a>,\n    world: <a class=\"struct\" href=\"bevy_ecs/world/unsafe_world_cell/struct.UnsafeWorldCell.html\" title=\"struct bevy_ecs::world::unsafe_world_cell::UnsafeWorldCell\">UnsafeWorldCell</a>&lt;'w&gt;,\n    change_tick: <a class=\"struct\" href=\"bevy_ecs/component/struct.Tick.html\" title=\"struct bevy_ecs::component::Tick\">Tick</a>\n) -&gt; Self::<a class=\"associatedtype\" href=\"bevy_ecs/system/trait.SystemParam.html#associatedtype.Item\" title=\"type bevy_ecs::system::SystemParam::Item\">Item</a>&lt;'w, 's&gt;</h4></section></summary><div class='docblock'>Creates a parameter to be passed into a <a href=\"bevy_ecs/system/trait.SystemParamFunction.html\" title=\"trait bevy_ecs::system::SystemParamFunction\"><code>SystemParamFunction</code></a>. <a href=\"bevy_ecs/system/trait.SystemParam.html#tymethod.get_param\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_archetype\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/system/system_param.rs.html#147-152\">source</a><a href=\"#method.new_archetype\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"bevy_ecs/system/trait.SystemParam.html#method.new_archetype\" class=\"fn\">new_archetype</a>(\n    state: &amp;mut Self::<a class=\"associatedtype\" href=\"bevy_ecs/system/trait.SystemParam.html#associatedtype.State\" title=\"type bevy_ecs::system::SystemParam::State\">State</a>,\n    archetype: &amp;<a class=\"struct\" href=\"bevy_ecs/archetype/struct.Archetype.html\" title=\"struct bevy_ecs::archetype::Archetype\">Archetype</a>,\n    system_meta: &amp;mut <a class=\"struct\" href=\"bevy_ecs/system/struct.SystemMeta.html\" title=\"struct bevy_ecs::system::SystemMeta\">SystemMeta</a>\n)</h4></section></summary><div class='docblock'>For the specified <a href=\"bevy_ecs/archetype/struct.Archetype.html\" title=\"struct bevy_ecs::archetype::Archetype\"><code>Archetype</code></a>, registers the components accessed by this <a href=\"bevy_ecs/system/trait.SystemParam.html\" title=\"trait bevy_ecs::system::SystemParam\"><code>SystemParam</code></a> (if applicable).a <a href=\"bevy_ecs/system/trait.SystemParam.html#method.new_archetype\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.apply\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/system/system_param.rs.html#160\">source</a><a href=\"#method.apply\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy_ecs/system/trait.SystemParam.html#method.apply\" class=\"fn\">apply</a>(state: &amp;mut Self::<a class=\"associatedtype\" href=\"bevy_ecs/system/trait.SystemParam.html#associatedtype.State\" title=\"type bevy_ecs::system::SystemParam::State\">State</a>, system_meta: &amp;<a class=\"struct\" href=\"bevy_ecs/system/struct.SystemMeta.html\" title=\"struct bevy_ecs::system::SystemMeta\">SystemMeta</a>, world: &amp;mut <a class=\"struct\" href=\"bevy_ecs/world/struct.World.html\" title=\"struct bevy_ecs::world::World\">World</a>)</h4></section></summary><div class='docblock'>Applies any deferred mutations stored in this <a href=\"bevy_ecs/system/trait.SystemParam.html\" title=\"trait bevy_ecs::system::SystemParam\"><code>SystemParam</code></a>’s state.\nThis is used to apply <a href=\"bevy_ecs/system/struct.Commands.html\" title=\"struct bevy_ecs::system::Commands\"><code>Commands</code></a> during <a href=\"bevy_ecs/schedule/fn.apply_deferred.html\" title=\"fn bevy_ecs::schedule::apply_deferred\"><code>apply_deferred</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.queue\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/system/system_param.rs.html#165\">source</a><a href=\"#method.queue\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy_ecs/system/trait.SystemParam.html#method.queue\" class=\"fn\">queue</a>(\n    state: &amp;mut Self::<a class=\"associatedtype\" href=\"bevy_ecs/system/trait.SystemParam.html#associatedtype.State\" title=\"type bevy_ecs::system::SystemParam::State\">State</a>,\n    system_meta: &amp;<a class=\"struct\" href=\"bevy_ecs/system/struct.SystemMeta.html\" title=\"struct bevy_ecs::system::SystemMeta\">SystemMeta</a>,\n    world: <a class=\"struct\" href=\"bevy_ecs/world/struct.DeferredWorld.html\" title=\"struct bevy_ecs::world::DeferredWorld\">DeferredWorld</a>&lt;'_&gt;\n)</h4></section></summary><div class='docblock'>Queues any deferred mutations to be applied at the next <a href=\"bevy_ecs/schedule/fn.apply_deferred.html\" title=\"fn bevy_ecs::schedule::apply_deferred\"><code>apply_deferred</code></a>.</div></details></div></details>","SystemParam","bevy_ecs::system::system_param::lifetimeless::SResMut"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()