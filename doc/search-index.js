var searchIndex = JSON.parse('{\
"adler":{"doc":"Adler-32 checksum implementation.","t":"DFLLLLLLLLLLLLLLLL","n":["Adler32","adler32_slice","borrow","borrow_mut","checksum","clone","default","finish","fmt","from","from_checksum","into","new","try_from","try_into","type_id","write","write_slice"],"q":[[0,"adler"]],"d":["Adler-32 checksum calculator.","Calculates the Adler-32 checksum of a byte slice.","","","Returns the calculated checksum at this point in time.","","","","","Returns the argument unchanged.","Creates an <code>Adler32</code> instance from a precomputed Adler-32 …","Calls <code>U::from(self)</code>.","Creates a new Adler-32 instance with default state.","","","","","Adds <code>bytes</code> to the checksum calculation."],"i":[0,0,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4],"f":[0,[[[2,[1]]],3],[[]],[[]],[4,3],[4,4],[[],4],[4,5],[[4,6],7],[[]],[3,4],[[]],[[],4],[[],8],[[],8],[[],9],[[4,[2,[1]]]],[[4,[2,[1]]]]],"c":[],"p":[[15,"u8"],[15,"slice"],[15,"u32"],[3,"Adler32"],[15,"u64"],[3,"Formatter"],[6,"Result"],[4,"Result"],[3,"TypeId"]]},\
"ahash":{"doc":"AHash is a high performance keyed hash function.","t":"DDDGIGICLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKKLLALLLLLLLLLLLLLLKKLLLLLLLLLLLLLIDLLLLLLLLKLLLLFLLLLLL","n":["AHashMap","AHashSet","AHasher","HashMap","HashMapExt","HashSet","HashSetExt","RandomState","bitand","bitor","bitxor","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","default","default","default","deref","deref","deref_mut","deref_mut","eq","eq","equivalent","equivalent","extend","extend","extend","extend","finish","fmt","fmt","fmt","from","from","from","from","from","from","from","from_iter","from_iter","get","get_key_value","get_mut","index","insert","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_keys","into_values","new","new","new","new","random_state","remove","sub","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","with_capacity","with_capacity","with_capacity","with_capacity","with_capacity_and_hasher","with_capacity_and_hasher","with_hasher","with_hasher","write","write_u128","write_u16","write_u32","write_u64","write_u8","write_usize","RandomSource","RandomState","borrow","borrow_mut","build_hasher","clone","clone_into","default","fmt","from","gen_hasher_seed","generate_with","hash_one","into","new","set_random_source","to_owned","try_from","try_into","type_id","with_seed","with_seeds"],"q":[[0,"ahash"],[102,"ahash::random_state"]],"d":["A <code>HashMap</code> using <code>RandomState</code> to hash the items. (Requires …","A <code>HashSet</code> using <code>RandomState</code> to hash the items. (Requires …","A <code>Hasher</code> for hashing an arbitrary stream of bytes.","Type alias for HashMap&lt;K, V, ahash::RandomState&gt;","A convenience trait that can be used together with the …","Type alias for HashSet&lt;K, ahash::RandomState&gt;","A convenience trait that can be used together with the …","","Returns the intersection of <code>self</code> and <code>rhs</code> as a new …","Returns the union of <code>self</code> and <code>rhs</code> as a new <code>AHashSet&lt;T, S&gt;</code>.","Returns the symmetric difference of <code>self</code> and <code>rhs</code> as a new …","","","","","","","","","","","","","Constructs a new AHasher with fixed keys. If <code>std</code> is …","","Creates an empty <code>AHashSet&lt;T, S&gt;</code> with the <code>Default</code> value for …","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Examples","Examples","Returns the argument unchanged.","","This crates a hashmap from the provided iterator using …","This crates a hashset from the provided iterator using …","Returns a reference to the value corresponding to the key.","Returns the key-value pair corresponding to the supplied …","Returns a mutable reference to the value corresponding to …","Returns a reference to the value corresponding to the …","Inserts a key-value pair into the map.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Calls <code>U::from(self)</code>.","","","","","","Creates a consuming iterator visiting all the keys in …","Creates a consuming iterator visiting all the values in …","Constructs a new HashMap","Constructs a new HashSet","This crates a hashmap using RandomState::new which obtains …","This crates a hashset using RandomState::new. See the …","","Removes a key from the map, returning the value at the key …","Returns the difference of <code>self</code> and <code>rhs</code> as a new …","","","","","","","","","","","","","Constructs a new HashMap with a given initial capacity","Constructs a new HashSet with a given initial capacity","This crates a hashmap with the specified capacity using …","This crates a hashset with the specified capacity using …","","","","","","","","","","","","A supplier of Randomness used for different hashers. See …","Provides a Hasher factory. This is typically used (e.g. by …","","","Constructs a new AHasher with keys based on this …","","","","","Returns the argument unchanged.","","Create a new <code>RandomState</code> <code>BuildHasher</code> based on the provided …","Calculates the hash of a single value. This provides a …","Calls <code>U::from(self)</code>.","Create a new <code>RandomState</code> <code>BuildHasher</code> using random keys.","Provides an optional way to manually supply a source of …","","","","","Build a <code>RandomState</code> from a single key. The provided key …","Allows for explicitly setting the seeds to used. All …"],"i":[0,0,0,0,0,0,0,0,6,6,6,7,8,6,7,8,6,7,8,6,7,8,6,7,8,6,8,6,8,6,8,6,8,6,8,8,6,6,7,7,8,6,7,8,8,8,6,6,6,8,6,8,8,8,8,8,7,8,8,6,6,8,8,8,6,6,8,8,37,38,8,6,0,8,6,7,8,6,7,8,6,7,8,6,7,8,6,37,38,8,6,8,6,8,6,7,7,7,7,7,7,7,0,0,9,9,9,9,9,9,9,9,34,9,9,9,9,0,9,9,9,9,9,9],"f":[0,0,0,0,0,0,0,0,[[[6,[[0,[1,2,3]],[0,[4,5]]]],[6,[[0,[1,2,3]],[0,[4,5]]]]],[[6,[[0,[1,2,3]],[0,[4,5]]]]]],[[[6,[[0,[1,2,3]],[0,[4,5]]]],[6,[[0,[1,2,3]],[0,[4,5]]]]],[[6,[[0,[1,2,3]],[0,[4,5]]]]]],[[[6,[[0,[1,2,3]],[0,[4,5]]]],[6,[[0,[1,2,3]],[0,[4,5]]]]],[[6,[[0,[1,2,3]],[0,[4,5]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[7,7],[[[8,[3,3,3]]],[[8,[3,3,3]]]],[[[6,[3,3]]],[[6,[3,3]]]],[[]],[[]],[[]],[[],7],[[],[[8,[9]]]],[[],[[6,[9]]]],[8],[6],[8],[6],[[[8,[[0,[1,2]],10,4]],[8,[[0,[1,2]],10,4]]],11],[[[6,[[0,[1,2]],4]],[6,[[0,[1,2]],4]]],11],[[],11],[[],11],[[[8,[[0,[1,2,12]],12,4]],13]],[[[8,[[0,[1,2]],4]],13]],[[[6,[[0,[1,2]],4]],13]],[[[6,[[0,[1,2,12]],4]],13]],[7,14],[[7,15],16],[[[8,[17,17,4]],15],16],[[[6,[17,4]],15],16],[[]],[[[18,[9]]],8],[[]],[19,[[8,[[0,[1,2]]]]]],[[[19,[[0,[1,2]]]]],[[6,[[0,[1,2]]]]]],[[]],[[[20,[9]]],6],[13,[[8,[[0,[1,2]],9]]]],[13,[[6,[[0,[1,2]]]]]],[[[8,[[22,[[0,[2,1,21]]]],[0,[2,1]],4]],[0,[2,1,21]]],23],[[[8,[[22,[[0,[2,1,21]]]],[0,[2,1]],4]],[0,[2,1,21]]],23],[[[8,[[22,[[0,[2,1,21]]]],[0,[2,1]],4]],[0,[2,1,21]]],23],[[[8,[[0,[1,2,[22,[[0,[1,2,21]]]]]],4]],[0,[1,2,21]]]],[[[8,[[0,[2,1]],4]],[0,[2,1]]],23],[[]],[[]],[8,[[18,[9]]]],[6,[[20,[9]]]],[[]],[8],[8],[8],[6],[6],[[[8,[[0,[2,1]],4]]],[[24,[[0,[2,1]]]]]],[[[8,[[0,[2,1]],4]]],[[25,[[0,[2,1]]]]]],[[]],[[]],[[],[[8,[9]]]],[[],[[6,[9]]]],0,[[[8,[[22,[[0,[2,1,21]]]],[0,[2,1]],4]],[0,[2,1,21]]],23],[[[6,[[0,[1,2,3]],[0,[4,5]]]],[6,[[0,[1,2,3]],[0,[4,5]]]]],[[6,[[0,[1,2,3]],[0,[4,5]]]]]],[[]],[[]],[[]],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],27],[[],27],[[],27],[28],[28],[28,[[8,[9]]]],[28,[[6,[9]]]],[[28,4],[[8,[4]]]],[[28,4],[[6,[4]]]],[4,[[8,[4]]]],[4,[[6,[4]]]],[[7,[30,[29]]]],[[7,31]],[[7,32]],[[7,33]],[[7,14]],[[7,29]],[[7,28]],0,0,[[]],[[]],[9,7],[9,9],[[]],[[],9],[[9,15],16],[[]],[[],28],[[14,14,14,14],9],[[9,2],14],[[]],[[],9],[[[0,[34,35,36]]],[[26,[11]]]],[[]],[[],26],[[],26],[[],27],[28,9],[[14,14,14,14],9]],"c":[],"p":[[8,"Eq"],[8,"Hash"],[8,"Clone"],[8,"BuildHasher"],[8,"Default"],[3,"AHashSet"],[3,"AHasher"],[3,"AHashMap"],[3,"RandomState"],[8,"PartialEq"],[15,"bool"],[8,"Copy"],[8,"IntoIterator"],[15,"u64"],[3,"Formatter"],[6,"Result"],[8,"Debug"],[3,"HashMap"],[15,"array"],[3,"HashSet"],[8,"Sized"],[8,"Borrow"],[4,"Option"],[3,"IntoKeys"],[3,"IntoValues"],[4,"Result"],[3,"TypeId"],[15,"usize"],[15,"u8"],[15,"slice"],[15,"u128"],[15,"u16"],[15,"u32"],[8,"RandomSource"],[8,"Send"],[8,"Sync"],[8,"HashMapExt"],[8,"HashSetExt"]]},\
"allocator_api2":{"doc":"allocator-api2 crate.","t":"IAAKLLKAODIDIDDLLFKFLLKLLLLLLLLLLLLLLLLLLLLLLLLFKKLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["SliceExt","alloc","boxed","repeat","to_vec","to_vec","to_vec_in","vec","vec","AllocError","Allocator","Global","GlobalAlloc","Layout","LayoutError","align","align_to","alloc","alloc","alloc_zeroed","alloc_zeroed","alloc_zeroed","allocate","allocate","allocate_zeroed","allocate_zeroed","allocate_zeroed","array","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","by_ref","by_ref","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","dangling","dealloc","dealloc","deallocate","deallocate","default","eq","eq","eq","extend","extend_packed","fmt","fmt","fmt","fmt","fmt","fmt","for_value","for_value_raw","from","from","from","from","from_size_align","from_size_align_unchecked","grow","grow","grow","grow_zeroed","grow_zeroed","grow_zeroed","handle_alloc_error","hash","into","into","into","into","new","pad_to_align","padding_needed_for","provide","realloc","realloc","realloc","repeat","repeat_packed","shrink","shrink","shrink","size","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","Box","allocator","as_mut","as_ref","assume_init","assume_init","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_from","clone_from","clone_into","cmp","default","default","default","deref","deref_mut","downcast","downcast","downcast","downcast_unchecked","downcast_unchecked","downcast_unchecked","drop","eq","finish","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_iter","from_raw","from_raw_in","ge","gt","hash","into","into_boxed_slice","into_future","into_inner","into_iter","into_non_null","into_pin","into_raw","into_raw_with_allocator","into_vec","into_vec","last","le","len","lt","ne","new","new_in","new_uninit","new_uninit_in","new_uninit_slice","new_uninit_slice_in","new_zeroed","new_zeroed_in","new_zeroed_slice","new_zeroed_slice_in","next","next_back","nth","nth_back","partial_cmp","pin","pin_in","poll","size_hint","slice","to_owned","to_string","try_from","try_from","try_into","try_new","try_new_in","try_new_uninit","try_new_uninit_in","try_new_uninit_slice","try_new_zeroed","try_new_zeroed_in","try_new_zeroed_slice","type_id","write","write","write_i128","write_i16","write_i32","write_i64","write_i8","write_isize","write_u128","write_u16","write_u32","write_u64","write_u8","write_usize","Drain","IntoIter","Splice","Vec","allocator","allocator","allocator","append","as_mut","as_mut","as_mut_ptr","as_mut_slice","as_mut_slice","as_ptr","as_ref","as_ref","as_ref","as_ref","as_slice","as_slice","as_slice","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capacity","clear","clone","clone","clone_from","clone_into","clone_into","cmp","count","dedup","dedup_by","dedup_by_key","default","deref","deref_mut","drain","drop","drop","drop","drop","eq","eq","eq","eq","eq","eq","extend","extend","extend_from_slice","extend_from_within","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from_iter","from_raw_parts","from_raw_parts_in","hash","index","index_mut","insert","into","into","into","into","into_boxed_slice","into_flattened","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_raw_parts","into_raw_parts_with_alloc","is_empty","keep_rest","leak","len","ne","ne","ne","ne","ne","ne","new","new_in","next","next","next","next_back","next_back","next_back","partial_cmp","pop","push","push_within_capacity","remove","reserve","reserve_exact","resize","resize_with","retain","retain_mut","set_len","shrink_to","shrink_to_fit","size_hint","size_hint","size_hint","spare_capacity_mut","splice","split_at_spare_mut","split_off","swap_remove","to_owned","to_owned","truncate","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_reserve","try_reserve_exact","type_id","type_id","type_id","type_id","with_capacity","with_capacity_in"],"q":[[0,"allocator_api2"],[9,"allocator_api2::alloc"],[114,"allocator_api2::boxed"],[228,"allocator_api2::vec"]],"d":["Slice methods that use <code>Box</code> and <code>Vec</code> from this crate.","Memory allocation APIs","The <code>Box&lt;T&gt;</code> type for heap allocation.","Creates a vector by copying a slice <code>n</code> times.","Copies <code>self</code> into a new <code>Vec</code>.","Copies <code>self</code> into a new <code>Vec</code>.","Copies <code>self</code> into a new <code>Vec</code> with an allocator.","A contiguous growable array type with heap-allocated …","Creates a <code>Vec</code> containing the arguments.","The <code>AllocError</code> error indicates an allocation failure that …","An implementation of <code>Allocator</code> can allocate, grow, shrink, …","The global memory allocator.","A memory allocator that can be registered as the standard …","Layout of a block of memory.","The parameters given to <code>Layout::from_size_align</code> or some …","The minimum byte alignment for a memory block of this …","Creates a layout describing the record that can hold a …","Allocate memory with the global allocator.","Allocate memory as described by the given <code>layout</code>.","Allocate zero-initialized memory with the global allocator.","Behaves like <code>alloc</code>, but also ensures that the contents are …","Behaves like <code>alloc</code>, but also ensures that the contents are …","Attempts to allocate a block of memory.","","Behaves like <code>allocate</code>, but also ensures that the returned …","Behaves like <code>allocate</code>, but also ensures that the returned …","","Creates a layout describing the record for a <code>[T; n]</code>.","","","","","","","","","Creates a “by reference” adapter for this instance of …","Creates a “by reference” adapter for this instance of …","","","","","","","","","Creates a <code>NonNull</code> that is dangling, but well-aligned for …","Deallocate memory with the global allocator.","Deallocate the block of memory at the given <code>ptr</code> pointer …","Deallocates the memory referenced by <code>ptr</code>.","","","","","","Creates a layout describing the record for <code>self</code> followed by","Creates a layout describing the record for <code>self</code> followed by","","","","","","","Produces layout describing a record that could be used to …","Produces layout describing a record that could be used to …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Constructs a <code>Layout</code> from a given <code>size</code> and <code>align</code>, or …","Creates a layout, bypassing all checks.","Attempts to extend the memory block.","Attempts to extend the memory block.","","Behaves like <code>grow</code>, but also ensures that the new contents …","Behaves like <code>grow</code>, but also ensures that the new contents …","","Abort on memory allocation error or failure.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Constructs a <code>Layout</code> suitable for holding a value of type <code>T</code>.","Creates a layout by rounding the size of this layout up to …","Returns the amount of padding we must insert after <code>self</code> to …","","Reallocate memory with the global allocator.","Shrink or grow a block of memory to the given <code>new_size</code> in …","Shrink or grow a block of memory to the given <code>new_size</code> in …","Creates a layout describing the record for <code>n</code> instances of …","Creates a layout describing the record for <code>n</code> instances of …","Attempts to shrink the memory block.","Attempts to shrink the memory block.","","The minimum size in bytes for a memory block of this …","","","","","","","","","","","","","","","","","","","A pointer type for heap allocation.","Returns a reference to the underlying allocator.","","","Converts to <code>Box&lt;[T], A&gt;</code>.","Converts to <code>Box&lt;T, A&gt;</code>.","","","","","Returns a new box with a <code>clone()</code> of this box’s contents.","","","","","Copies <code>source</code>’s contents into <code>self</code> without creating a …","","","Creates a <code>Box&lt;T&gt;</code>, with the <code>Default</code> value for T.","","","","","Attempt to downcast the box to a concrete type.","Attempt to downcast the box to a concrete type.","Attempt to downcast the box to a concrete type.","Downcasts the box to a concrete type.","Downcasts the box to a concrete type.","Downcasts the box to a concrete type.","","","","","","","Converts a <code>T</code> into a <code>Box&lt;T&gt;</code>","Converts a <code>[T; N]</code> into a <code>Box&lt;[T]&gt;</code>","Converts a <code>Box&lt;str&gt;</code> into a <code>Box&lt;[u8]&gt;</code>","Converts a <code>&amp;CStr</code> into a <code>Box&lt;CStr&gt;</code>, by copying the contents …","Returns the argument unchanged.","","Converts a <code>&amp;str</code> into a <code>Box&lt;str&gt;</code>","Convert a vector into a boxed slice.","Converts a <code>&amp;[T]</code> into a <code>Box&lt;[T]&gt;</code>","","Constructs a box from a raw pointer.","Constructs a box from a raw pointer in the given allocator.","","","","Calls <code>U::from(self)</code>.","Converts a <code>Box&lt;T&gt;</code> into a <code>Box&lt;[T]&gt;</code>","","Consumes the <code>Box</code>, returning the wrapped value.","","","Converts a <code>Box&lt;T&gt;</code> into a <code>Pin&lt;Box&lt;T&gt;&gt;</code>. If <code>T</code> does not …","Consumes the <code>Box</code>, returning a wrapped raw pointer.","Consumes the <code>Box</code>, returning a wrapped raw pointer and the …","","","","","","","","Allocates memory on the heap and then places <code>x</code> into it.","Allocates memory in the given allocator then places <code>x</code> into …","Constructs a new box with uninitialized contents.","Constructs a new box with uninitialized contents in the …","Constructs a new boxed slice with uninitialized contents.","Constructs a new boxed slice with uninitialized contents …","Constructs a new <code>Box</code> with uninitialized contents, with the …","Constructs a new <code>Box</code> with uninitialized contents, with the …","Constructs a new boxed slice with uninitialized contents, …","Constructs a new boxed slice with uninitialized contents …","","","","","","Constructs a new <code>Pin&lt;Box&lt;T&gt;&gt;</code>. If <code>T</code> does not implement <code>Unpin</code>…","Constructs a new <code>Pin&lt;Box&lt;T, A&gt;&gt;</code>. If <code>T</code> does not implement …","","","","","","","Attempts to convert a <code>Box&lt;[T]&gt;</code> into a <code>Box&lt;[T; N]&gt;</code>.","","Allocates memory on the heap then places <code>x</code> into it, …","Allocates memory in the given allocator then places <code>x</code> into …","Constructs a new box with uninitialized contents on the …","Constructs a new box with uninitialized contents in the …","Constructs a new boxed slice with uninitialized contents. …","Constructs a new <code>Box</code> with uninitialized contents, with the …","Constructs a new <code>Box</code> with uninitialized contents, with the …","Constructs a new boxed slice with uninitialized contents, …","","Writes the value and converts to <code>Box&lt;T, A&gt;</code>.","","","","","","","","","","","","","","A draining iterator for <code>Vec&lt;T&gt;</code>.","An iterator that moves out of a vector.","A splicing iterator for <code>Vec</code>.","A contiguous growable array type, written as <code>Vec&lt;T&gt;</code>, short …","Returns a reference to the underlying allocator.","Returns a reference to the underlying allocator.","Returns a reference to the underlying allocator.","Moves all the elements of <code>other</code> into <code>self</code>, leaving <code>other</code> …","","","Returns an unsafe mutable pointer to the vector’s …","Returns the remaining items of this iterator as a mutable …","Extracts a mutable slice of the entire vector.","Returns a raw pointer to the vector’s buffer, or a …","","","","","Returns the remaining items of this iterator as a slice.","Returns the remaining items of this iterator as a slice.","Extracts a slice containing the entire vector.","","","","","","","","","Returns the total number of elements the vector can hold …","Clears the vector, removing all values.","","","","","","","","Removes consecutive repeated elements in the vector …","Removes all but the first of consecutive elements in the …","Removes all but the first of consecutive elements in the …","Creates an empty <code>Vec&lt;T&gt;</code>.","","","Removes the specified range from the vector in bulk, …","","","","","","","","","","","","","Clones and appends all elements in a slice to the <code>Vec</code>.","Copies elements from <code>src</code> range to the end of the vector.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Convert a boxed slice into a vector by transferring …","Convert a boxed array into a vector by transferring …","Allocate a <code>Vec&lt;u8&gt;</code> and fill it with a UTF-8 string.","Allocate a <code>Vec&lt;T&gt;</code> and fill it by cloning <code>s</code>’s items.","","Returns the argument unchanged.","Allocate a <code>Vec&lt;T&gt;</code> and fill it by cloning <code>s</code>’s items.","Returns the argument unchanged.","","Creates a <code>Vec&lt;T&gt;</code> directly from a pointer, a capacity, and …","Creates a <code>Vec&lt;T, A&gt;</code> directly from a pointer, a capacity, a …","","","","Inserts an element at position <code>index</code> within the vector, …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Converts the vector into <code>Box&lt;[T]&gt;</code>.","Takes a <code>Vec&lt;[T; N]&gt;</code> and flattens it into a <code>Vec&lt;T&gt;</code>.","","","","Creates a consuming iterator, that is, one that moves each …","","","Decomposes a <code>Vec&lt;T&gt;</code> into its raw components.","Decomposes a <code>Vec&lt;T&gt;</code> into its raw components.","Returns <code>true</code> if the vector contains no elements.","Keep unyielded elements in the source <code>Vec</code>.","Consumes and leaks the <code>Vec</code>, returning a mutable reference …","Returns the number of elements in the vector, also …","","","","","","","Constructs a new, empty <code>Vec&lt;T&gt;</code>.","Constructs a new, empty <code>Vec&lt;T, A&gt;</code>.","","","","","","","","Removes the last element from a vector and returns it, or …","Appends an element to the back of a collection.","Appends an element if there is sufficient spare capacity, …","Removes and returns the element at position <code>index</code> within …","Reserves capacity for at least <code>additional</code> more elements to …","Reserves the minimum capacity for at least <code>additional</code> more …","Resizes the <code>Vec</code> in-place so that <code>len</code> is equal to <code>new_len</code>.","Resizes the <code>Vec</code> in-place so that <code>len</code> is equal to <code>new_len</code>.","Retains only the elements specified by the predicate.","Retains only the elements specified by the predicate, …","Forces the length of the vector to <code>new_len</code>.","Shrinks the capacity of the vector with a lower bound.","Shrinks the capacity of the vector as much as possible.","","","","Returns the remaining spare capacity of the vector as a …","Creates a splicing iterator that replaces the specified …","Returns vector content as a slice of <code>T</code>, along with the …","Splits the collection into two at the given index.","Removes an element from the vector and returns it.","","","Shortens the vector, keeping the first <code>len</code> elements and …","","","","","","","","","Tries to reserve capacity for at least <code>additional</code> more …","Tries to reserve the minimum capacity for at least …","","","","","Constructs a new, empty <code>Vec&lt;T&gt;</code> with at least the specified …","Constructs a new, empty <code>Vec&lt;T, A&gt;</code> with at least the …"],"i":[0,0,0,64,64,64,64,0,0,0,0,0,0,0,0,7,7,0,65,0,65,65,6,3,6,6,3,7,3,13,7,8,3,13,7,8,6,6,3,13,7,8,3,13,7,8,7,0,65,6,3,3,13,7,8,7,7,3,13,13,7,8,8,7,7,3,13,7,8,7,7,6,6,3,6,6,3,0,7,3,13,7,8,7,7,7,8,0,65,65,7,7,6,6,3,7,3,13,7,8,13,8,3,13,7,8,3,13,7,8,3,13,7,8,0,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,0,0,0,0,58,59,4,4,4,4,4,59,4,4,58,59,4,4,58,59,4,58,59,4,62,58,59,4,62,4,4,59,4,4,59,4,4,59,4,4,4,4,4,4,4,58,59,4,62,4,4,4,4,4,4,4,4,4,4,58,59,4,62,58,59,4,4,4,4,4,4,4,62,4,4,4,4,4,4,4,58,59,4,62,4,4,58,59,4,4,4,62,4,4,4,58,4,4,4,4,4,4,4,4,4,4,58,59,62,58,59,62,4,4,4,4,4,4,4,4,4,4,4,4,4,4,58,59,62,4,4,4,4,4,59,4,4,58,59,4,62,58,59,4,62,4,4,58,59,4,62,4,4],"f":[0,0,0,[1,[[4,[2,3]]]],[[],[[4,[5,3]]]],[[],[[4,[5,3]]]],[6,[[4,[5,6]]]],0,0,0,0,0,0,0,0,[7,1],[[7,1],[[9,[7,8]]]],[7,10],[7,10],[7,10],[7,10],[7,10],[7,[[9,[[12,[[11,[10]]]],13]]]],[[3,7],[[9,[[12,[[11,[10]]]],13]]]],[7,[[9,[[12,[[11,[10]]]],13]]]],[7,[[9,[[12,[[11,[10]]]],13]]]],[[3,7],[[9,[[12,[[11,[10]]]],13]]]],[1,[[9,[7,8]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[14,14],[14,14],[3,3],[13,13],[7,7],[8,8],[[]],[[]],[[]],[[]],[7,[[12,[10]]]],[[10,7]],[[10,7]],[[[12,[10]],7]],[[3,[12,[10]],7]],[[],3],[[13,13],15],[[7,7],15],[[8,8],15],[[7,7],[[9,[8]]]],[[7,7],[[9,[7,8]]]],[[3,16],17],[[13,16],17],[[13,16],17],[[7,16],[[9,[18]]]],[[8,16],[[9,[18]]]],[[8,16],[[9,[18]]]],[14,7],[[],7],[[]],[[]],[[]],[[]],[[1,1],[[9,[7,8]]]],[[1,1],7],[[[12,[10]],7,7],[[9,[[12,[[11,[10]]]],13]]]],[[[12,[10]],7,7],[[9,[[12,[[11,[10]]]],13]]]],[[3,[12,[10]],7,7],[[9,[[12,[[11,[10]]]],13]]]],[[[12,[10]],7,7],[[9,[[12,[[11,[10]]]],13]]]],[[[12,[10]],7,7],[[9,[[12,[[11,[10]]]],13]]]],[[3,[12,[10]],7,7],[[9,[[12,[[11,[10]]]],13]]]],[7,19],[[7,20]],[[]],[[]],[[]],[[]],[[],7],[7,7],[[7,1],1],[21],[[10,7,1],10],[[10,7,1],10],[[10,7,1],10],[[7,1],[[9,[8]]]],[[7,1],[[9,[7,8]]]],[[[12,[10]],7,7],[[9,[[12,[[11,[10]]]],13]]]],[[[12,[10]],7,7],[[9,[[12,[[11,[10]]]],13]]]],[[3,[12,[10]],7,7],[[9,[[12,[[11,[10]]]],13]]]],[7,1],[[]],[[]],[[]],[[]],[[],22],[[],22],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],23],[[],23],[[],23],[[],23],0,[[[24,[14,6]]],6],[[[24,[14,6]]],14],[[[24,[14,6]]],14],[[[24,[[11,[25]],6]]],[[24,[11,6]]]],[[[24,[25,6]]],[[24,[6]]]],[[[24,[14,6]]],14],[[]],[[[24,[14,6]]],14],[[]],[[[24,[5,[0,[6,5]]]]],[[24,[5,[0,[6,5]]]]]],[[[24,[[11,[5]],[0,[6,5]]]]],[[24,[[11,[5]],[0,[6,5]]]]]],[[[24,[26]]],[[24,[26]]]],[[[24,[27]]],[[24,[27]]]],[[[24,[[11,[5]],[0,[6,5]]]],[24,[[11,[5]],[0,[6,5]]]]]],[[[24,[5,[0,[6,5]]]],[24,[5,[0,[6,5]]]]]],[[]],[[[24,[[0,[14,28]],6]],[24,[[0,[14,28]],6]]],29],[[],[[24,[30]]]],[[],[[24,[11,[0,[6,30]]]]]],[[],[[24,[27,[0,[6,30]]]]]],[[[24,[14,6]]],14],[[[24,[14,6]]],14],[[[24,[31,6]]],[[9,[[24,[31,6]],[24,[31,6]]]]]],[[[24,[31,6]]],[[9,[[24,[31,6]],[24,[31,6]]]]]],[[[24,[31,6]]],[[9,[[24,[31,6]],[24,[31,6]]]]]],[[[24,[31,6]]],[[24,[31,6]]]],[[[24,[31,6]]],[[24,[31,6]]]],[[[24,[31,6]]],[[24,[31,6]]]],[[[24,[14,6]]]],[[[24,[[0,[14,32]],6]],[24,[[0,[14,32]],6]]],15],[[[24,[[0,[14,20]],6]]],33],[[[24,[[0,[34,14]],6]],16],17],[[[24,[[0,[35,14]],6]],16],17],[[[24,[14,6]],16],17],[[],24],[36,[[24,[11]]]],[[[24,[27,6]]],[[24,[[11,[10]],6]]]],[26,[[24,[26]]]],[[]],[19],[27,[[24,[27,[0,[6,30]]]]]],[[[4,[6]]],[[24,[11,6]]]],[[[11,[2]]],[[24,[[11,[2]],[0,[6,30]]]]]],[37,[[24,[11]]]],[[],[[24,[14]]]],[6,[[24,[14,6]]]],[[[24,[[0,[14,38]],6]],[24,[[0,[14,38]],6]]],15],[[[24,[[0,[14,38]],6]],[24,[[0,[14,38]],6]]],15],[[[24,[[0,[14,39]],6]],20]],[[]],[[[24,[6]]],[[24,[11,6]]]],[[]],[[[24,[6]]]],[[]],[[[24,[14,6]]]],[[[24,[14,6]]],[[40,[[24,[14,6]]]]]],[[[24,[14,6]]]],[[[24,[14,6]]]],[[[24,[11,6,6]]],[[4,[6,6]]]],[[[24,[36,6,6]]],[[4,[6,6]]]],[[[24,[[0,[41,14]],6]]],42],[[[24,[[0,[14,38]],6]],[24,[[0,[14,38]],6]]],15],[[[24,[[0,[43,14]],6]]],1],[[[24,[[0,[14,38]],6]],[24,[[0,[14,38]],6]]],15],[[[24,[[0,[14,32]],6]],[24,[[0,[14,32]],6]]],15],[[],24],[[6,6],[[24,[6,6]]]],[[],[[24,[25]]]],[[6,6],[[24,[25,6,6]]]],[1,[[24,[[11,[25]]]]]],[[1,6],[[24,[[11,[25]],6]]]],[[],[[24,[25]]]],[[6,6],[[24,[25,6,6]]]],[1,[[24,[[11,[25]]]]]],[[1,6],[[24,[[11,[25]],6]]]],[[[24,[[0,[41,14]],6]]],42],[[[24,[[0,[44,14]],6]]],42],[[[24,[[0,[41,14]],6]],1],42],[[[24,[[0,[44,14]],6]],1],42],[[[24,[[0,[14,38]],6]],[24,[[0,[14,38]],6]]],[[42,[29]]]],[[],[[40,[24]]]],[[6,6],[[40,[[24,[6,6]]]]]],[[[40,[[24,[[0,[14,45,46]],6]]]],47],48],[[[24,[[0,[41,14]],6]]]],[[[24,[36,6]]],[[24,[11,6]]]],[[]],[[],22],[[],9],[[[24,[11,6]]],[[9,[[24,[36,6]]]]]],[[],9],[[],[[9,[24,13]]]],[[6,6],[[9,[[24,[6,6]],13]]]],[[],[[9,[[24,[25]],13]]]],[[6,6],[[9,[[24,[25,6,6]],13]]]],[1,[[9,[[24,[[11,[25]]]],13]]]],[[],[[9,[[24,[25]],13]]]],[[6,6],[[9,[[24,[25,6,6]],13]]]],[1,[[9,[[24,[[11,[25]]]],13]]]],[[],23],[[[24,[25,6]]],[[24,[6]]]],[[[24,[[0,[14,20]],6]],[11,[10]]]],[[[24,[[0,[14,20]],6]],49]],[[[24,[[0,[14,20]],6]],50]],[[[24,[[0,[14,20]],6]],51]],[[[24,[[0,[14,20]],6]],52]],[[[24,[[0,[14,20]],6]],53]],[[[24,[[0,[14,20]],6]],54]],[[[24,[[0,[14,20]],6]],55]],[[[24,[[0,[14,20]],6]],56]],[[[24,[[0,[14,20]],6]],57]],[[[24,[[0,[14,20]],6]],33]],[[[24,[[0,[14,20]],6]],10]],[[[24,[[0,[14,20]],6]],1]],0,0,0,0,[[[58,[6]]],6],[[[59,[6]]],6],[[[4,[6]]],6],[[[4,[6]],[4,[6]]]],[[[4,[6]]],[[4,[6]]]],[[[4,[6]]],11],[[[4,[6]]]],[[[59,[6]]],11],[[[4,[6]]],11],[[[4,[6]]]],[[[58,[6]]],11],[[[59,[6]]],11],[[[4,[6]]],[[4,[6]]]],[[[4,[6]]],11],[[[58,[6]]],11],[[[59,[6]]],11],[[[4,[6]]],11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[4,[6]]],1],[[[4,[6]]]],[[[59,[5,[0,[6,5]]]]],[[59,[5,[0,[6,5]]]]]],[[[4,[5,[0,[6,5]]]]],[[4,[5,[0,[6,5]]]]]],[[[4,[5,[0,[6,5]]]],[4,[5,[0,[6,5]]]]]],[[]],[[]],[[[4,[28,6]],[4,[28,6]]],29],[[[59,[6]]],1],[[[4,[32,6]]]],[[[4,[6]],60]],[[[4,[6]],60]],[[],4],[[[4,[6]]],11],[[[4,[6]]],11],[[[4,[6]],[61,[1]]],[[58,[6]]]],[[[58,[6]]]],[[[59,[6]]]],[[[4,[6]]]],[[[62,[41,6]]]],[[[4,[32,6]],[4,[6]]],15],[[[4,[32,6]],11],15],[[[4,[32,6]],36],15],[[[4,[32,6]],36],15],[[[4,[32,6]],11],15],[[[4,[32,6]],11],15],[[[4,[6]],37]],[[[4,[2,6]],37]],[[[4,[5,6]],[11,[5]]]],[[[4,[5,6]],[61,[1]]]],[[[58,[34,6]],16],17],[[[59,[34,6]],16],17],[[[4,[34,6]],16],17],[[[62,[[0,[34,41]],[0,[34,6]]]],16],17],[[]],[[]],[[[24,[11,6]]],[[4,[6]]]],[[[24,[36,6]]],[[4,[6]]]],[27,[[4,[10]]]],[[[11,[5]]],[[4,[5]]]],[36,4],[[]],[[[11,[5]]],[[4,[5]]]],[[]],[37,4],[[1,1],4],[[1,1,6],[[4,[6]]]],[[[4,[39,6]],20]],[[[4,[6]],[63,[11]]]],[[[4,[6]],[63,[11]]]],[[[4,[6]],1]],[[]],[[]],[[]],[[]],[[[4,[6]]],[[24,[11,6]]]],[[[4,[36,6]]],[[4,[6]]]],[[]],[[]],[[[4,[6]]]],[[[4,[6]]]],[[[4,[6]]]],[[]],[[[4,[6]]]],[[[4,[6]]]],[[[4,[6]]],15],[[[58,[6]]]],[[[4,[6]]],11],[[[4,[6]]],1],[[[4,[32,6]],11],15],[[[4,[32,6]],11],15],[[[4,[32,6]],36],15],[[[4,[32,6]],11],15],[[[4,[32,6]],[4,[6]]],15],[[[4,[32,6]],36],15],[[],4],[6,[[4,[6]]]],[[[58,[6]]],42],[[[59,[6]]],42],[[[62,[41,6]]],42],[[[58,[6]]],42],[[[59,[6]]],42],[[[62,[41,6]]],42],[[[4,[38,6]],[4,[38,6]]],[[42,[29]]]],[[[4,[6]]],42],[[[4,[6]]]],[[[4,[6]]],9],[[[4,[6]],1]],[[[4,[6]],1]],[[[4,[6]],1]],[[[4,[5,6]],1,5]],[[[4,[6]],1,60]],[[[4,[6]],60]],[[[4,[6]],60]],[[[4,[6]],1]],[[[4,[6]],1]],[[[4,[6]]]],[[[58,[6]]]],[[[59,[6]]]],[[[62,[41,6]]]],[[[4,[6]]],[[11,[25]]]],[[[4,[6]],[61,[1]],37],[[62,[6]]]],[[[4,[6]]]],[[[4,[5,6]],1],[[4,[5,6]]]],[[[4,[6]],1]],[[]],[[]],[[[4,[6]],1]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[[4,[6]],1],[[9,[0]]]],[[[4,[6]],1],[[9,[0]]]],[[],23],[[],23],[[],23],[[],23],[1,4],[[1,6],[[4,[6]]]]],"c":[],"p":[[15,"usize"],[8,"Copy"],[3,"Global"],[3,"Vec"],[8,"Clone"],[8,"Allocator"],[3,"Layout"],[3,"LayoutError"],[4,"Result"],[15,"u8"],[15,"slice"],[3,"NonNull"],[3,"AllocError"],[8,"Sized"],[15,"bool"],[3,"Formatter"],[6,"Result"],[3,"Error"],[15,"never"],[8,"Hasher"],[3,"Demand"],[3,"String"],[3,"TypeId"],[3,"Box"],[19,"MaybeUninit"],[3,"CStr"],[15,"str"],[8,"Ord"],[4,"Ordering"],[8,"Default"],[8,"Any"],[8,"PartialEq"],[15,"u64"],[8,"Debug"],[8,"Display"],[15,"array"],[8,"IntoIterator"],[8,"PartialOrd"],[8,"Hash"],[3,"Pin"],[8,"Iterator"],[4,"Option"],[8,"ExactSizeIterator"],[8,"DoubleEndedIterator"],[8,"Future"],[8,"Unpin"],[3,"Context"],[4,"Poll"],[15,"i128"],[15,"i16"],[15,"i32"],[15,"i64"],[15,"i8"],[15,"isize"],[15,"u128"],[15,"u16"],[15,"u32"],[3,"Drain"],[3,"IntoIter"],[8,"FnMut"],[8,"RangeBounds"],[3,"Splice"],[8,"SliceIndex"],[8,"SliceExt"],[8,"GlobalAlloc"]]},\
"arrayref":{"doc":"This package contains just four macros, which enable the …","t":"OOOO","n":["array_mut_ref","array_ref","array_refs","mut_array_refs"],"q":[[0,"arrayref"]],"d":["You can use <code>array_mut_ref</code> to generate a mutable array …","You can use <code>array_ref</code> to generate an array reference to a …","You can use <code>array_refs</code> to generate a series of array …","You can use <code>mut_array_refs</code> to generate a series of mutable …"],"i":[0,0,0,0],"f":[0,0,0,0],"c":[],"p":[]},\
"arrayvec":{"doc":"<strong>arrayvec</strong> provides the types <code>ArrayVec</code> and <code>ArrayString</code>:  …","t":"IDDSDDDQLLKLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["Array","ArrayString","ArrayVec","CAPACITY","CapacityError","Drain","IntoIter","Item","as_mut","as_mut_ptr","as_mut_slice","as_mut_slice","as_ptr","as_ref","as_ref","as_slice","as_slice","as_str","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capacity","capacity","clear","clear","clone","clone","clone","clone","clone_from","clone_from","cmp","cmp","cmp","default","default","deref","deref","deref_mut","deref_mut","dispose","drain","drop","drop","drop","element","eq","eq","eq","eq","eq","extend","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_byte_string","from_iter","from_str","ge","ge","ge","gt","gt","gt","hash","hash","insert","into","into","into","into","into","into_inner","into_iter","into_iter","into_iter","into_iter","into_iter","is_empty","is_empty","is_full","is_full","le","le","le","len","len","lt","lt","lt","new","new","new","next","next","next_back","next_back","partial_cmp","partial_cmp","partial_cmp","partial_cmp","pop","pop","pop_at","push","push","push_str","push_unchecked","remaining_capacity","remove","remove","retain","set_len","set_len","simplify","size_hint","size_hint","swap_pop","swap_remove","truncate","truncate","try_extend_from_slice","try_from","try_from","try_from","try_from","try_from","try_from","try_insert","try_into","try_into","try_into","try_into","try_into","try_push","try_push","try_push_str","type_id","type_id","type_id","type_id","type_id","write_char","write_str"],"q":[[0,"arrayvec"]],"d":["Trait for fixed size arrays.","A string with a fixed capacity.","A vector with a fixed capacity.","The array’s element capacity","Error value indicating insufficient capacity","A draining iterator for <code>ArrayVec</code>.","By-value iterator for <code>ArrayVec</code>.","The array’s element type","","Return a raw mutable pointer to the vector’s buffer.","","Return a mutable slice containing all elements of the …","Return a raw pointer to the vector’s buffer.","","","","Return a slice containing all elements of the vector.","Return a string slice of the whole <code>ArrayString</code>.","","","","","","","","","","","","","","Return the capacity of the <code>ArrayVec</code>.","Return the capacity of the <code>ArrayString</code>.","Remove all elements in the vector.","Make the string empty.","","","","","","","","","","Return an empty array","Return an empty <code>ArrayString</code>","","","","","Dispose of <code>self</code> (same as drop)","Create a draining iterator that removes the specified …","","","","Extract the overflowing element","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Create a new <code>ArrayString</code> from a <code>str</code>.","Returns the argument unchanged.","Create a new <code>ArrayString</code> from a byte string literal.","","","","","","","","","","","Insert <code>element</code> at position <code>index</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Return the inner fixed size array, if it is full to its …","","","","","","Returns whether the <code>ArrayVec</code> is empty.","Returns whether the string is empty.","Return if the <code>ArrayVec</code> is completely filled.","Return if the <code>ArrayString</code> is completely filled.","","","","Return the number of elements in the <code>ArrayVec</code>.","Return the length of the string.","","","","Create a new empty <code>ArrayVec</code>.","Create a new empty <code>ArrayString</code>.","Create a new <code>CapacityError</code> from <code>element</code>.","","","","","","","","","Remove the last element in the vector and return it.","Removes the last character from the string and returns it.","Remove the element at <code>index</code> and shift down the following …","Push <code>element</code> to the end of the vector.","Adds the given char to the end of the string.","Adds the given string slice to the end of the string.","Push <code>element</code> to the end of the vector without checking the …","Returns the capacity left in the <code>ArrayVec</code>.","Remove the element at <code>index</code> and shift down the following …","Removes a <code>char</code> from this <code>ArrayString</code> at a byte position …","Retains only the elements specified by the predicate.","Set the vector’s length without dropping or moving out …","Set the strings’s length.","Convert into a <code>CapacityError</code> that does not carry an …","","","Remove the element at <code>index</code> and swap the last element into …","Remove the element at <code>index</code> and swap the last element into …","Shortens the vector, keeping the first <code>len</code> elements and …","Shortens this <code>ArrayString</code> to the specified length.","Copy and appends all elements in a slice to the <code>ArrayVec</code>.","","","","","","","Insert <code>element</code> at position <code>index</code>.","","","","","","Push <code>element</code> to the end of the vector.","Adds the given char to the end of the string.","Adds the given string slice to the end of the string.","","","","","","",""],"i":[0,0,0,1,0,0,0,1,2,2,1,2,2,2,5,1,2,5,2,2,8,14,5,5,10,2,2,8,14,5,10,2,5,2,5,2,8,5,10,2,5,2,5,10,2,5,2,5,2,5,2,2,2,8,14,10,2,2,5,5,10,2,2,8,5,5,10,10,2,2,2,8,14,5,5,10,5,2,5,2,5,5,2,5,5,2,5,2,2,8,14,5,10,2,2,2,2,8,14,2,5,2,5,2,5,5,2,5,2,5,5,2,5,10,8,14,8,14,2,5,5,10,2,5,2,2,5,5,2,2,2,5,2,2,5,10,8,14,2,2,2,5,2,2,2,8,14,5,10,2,2,8,14,5,10,2,5,5,2,8,14,5,10,5,5],"f":[0,0,0,0,0,0,0,0,[[[2,[1]]],3],[[[2,[1]]]],[[],3],[[[2,[1]]],3],[[[2,[1]]]],[[[2,[1]]],3],[[[5,[[0,[1,4]]]]],6],[[],3],[[[2,[1]]],3],[[[5,[[0,[1,4]]]]],6],[[[2,[1]]],3],[[]],[[]],[[]],[[[5,[[0,[1,4]]]]],6],[[]],[[]],[[[2,[1]]],3],[[]],[[]],[[]],[[]],[[]],[[[2,[1]]],7],[[[5,[[0,[1,4]]]]],7],[[[2,[1]]]],[[[5,[[0,[1,4]]]]]],[[[2,[1]]],[[2,[1]]]],[[[8,[1]]],[[8,[1]]]],[[[5,[[0,[1,4]]]]],[[5,[[0,[1,4]]]]]],[[[10,[9]]],[[10,[9]]]],[[[2,[1]],[2,[1]]]],[[[5,[[0,[1,4]]]],[5,[[0,[1,4]]]]]],[[[2,[1]],[2,[1]]],11],[[[5,[[0,[1,4]]]],[5,[[0,[1,4]]]]],11],[[[10,[12]],[10,[12]]],11],[[],[[2,[1]]]],[[],[[5,[[0,[1,4]]]]]],[[[2,[1]]],3],[[[5,[[0,[1,4]]]]],6],[[[2,[1]]],3],[[[5,[[0,[1,4]]]]],6],[[[2,[1]]]],[[[2,[1]],[13,[7]]],[[14,[1]]]],[[[2,[1]]]],[[[8,[1]]]],[[[14,[1]]]],[10],[[[2,[1]],[2,[1]]],15],[[[2,[1]],3],15],[[[5,[[0,[1,4]]]],6],15],[[[5,[[0,[1,4]]]],[5,[[0,[1,4]]]]],15],[[[10,[16]],[10,[16]]],15],[[[2,[1]],17]],[[[2,[1]],18],19],[[[8,[1]],18],19],[[[5,[[0,[1,4]]]],18],19],[[[5,[[0,[1,4]]]],18],19],[[10,18],19],[[10,18],19],[[]],[1,[[2,[1]]]],[20],[[]],[[]],[[]],[6,[[21,[[5,[[0,[1,4]]]],[10,[6]]]]]],[[]],[[[0,[1,4]]],[[21,[[5,[[0,[1,4]]]],22]]]],[17,[[2,[1]]]],[6,[[21,[[5,[[0,[1,4]]]]]]]],[[[2,[1]],[2,[1]]],15],[[[5,[[0,[1,4]]]],[5,[[0,[1,4]]]]],15],[[[5,[[0,[1,4]]]],6],15],[[[2,[1]],[2,[1]]],15],[[[5,[[0,[1,4]]]],[5,[[0,[1,4]]]]],15],[[[5,[[0,[1,4]]]],6],15],[[[2,[1]],23]],[[[5,[[0,[1,4]]]],23]],[[[2,[1]],7]],[[]],[[]],[[]],[[]],[[]],[[[2,[1]]],[[21,[1,[2,[1]]]]]],[[[2,[1]]]],[[[2,[1]]],[[8,[1]]]],[[[2,[1]]]],[[]],[[]],[[[2,[1]]],15],[[[5,[[0,[1,4]]]]],15],[[[2,[1]]],15],[[[5,[[0,[1,4]]]]],15],[[[2,[1]],[2,[1]]],15],[[[5,[[0,[1,4]]]],6],15],[[[5,[[0,[1,4]]]],[5,[[0,[1,4]]]]],15],[[[2,[1]]],7],[[[5,[[0,[1,4]]]]],7],[[[2,[1]],[2,[1]]],15],[[[5,[[0,[1,4]]]],6],15],[[[5,[[0,[1,4]]]],[5,[[0,[1,4]]]]],15],[[],[[2,[1]]]],[[],[[5,[[0,[1,4]]]]]],[[],10],[[[8,[1]]],24],[[[14,[1]]],24],[[[8,[1]]],24],[[[14,[1]]],24],[[[2,[1]],[2,[1]]],[[24,[11]]]],[[[5,[[0,[1,4]]]],6],[[24,[11]]]],[[[5,[[0,[1,4]]]],[5,[[0,[1,4]]]]],[[24,[11]]]],[[[10,[25]],[10,[25]]],[[24,[11]]]],[[[2,[1]]],24],[[[5,[[0,[1,4]]]]],[[24,[26]]]],[[[2,[1]],7],24],[[[2,[1]]]],[[[5,[[0,[1,4]]]],26]],[[[5,[[0,[1,4]]]],6]],[[[2,[1]]]],[[[2,[1]]],7],[[[2,[1]],7]],[[[5,[[0,[1,4]]]],7],26],[[[2,[1]],27]],[[[2,[1]],7]],[[[5,[[0,[1,4]]]],7]],[10,10],[[[8,[1]]]],[[[14,[1]]]],[[[2,[1]],7],24],[[[2,[1]],7]],[[[2,[1]],7]],[[[5,[[0,[1,4]]]],7]],[[[2,[1]],3],[[21,[10]]]],[3,[[21,[[2,[1]]]]]],[[],21],[[],21],[[],21],[[],21],[[],21],[[[2,[1]],7],[[21,[10]]]],[[],21],[[],21],[[],21],[[],21],[[],21],[[[2,[1]]],[[21,[10]]]],[[[5,[[0,[1,4]]]],26],[[21,[[10,[26]]]]]],[[[5,[[0,[1,4]]]],6],[[21,[[10,[6]]]]]],[[],28],[[],28],[[],28],[[],28],[[],28],[[[5,[[0,[1,4]]]],26],19],[[[5,[[0,[1,4]]]],6],19]],"c":[50],"p":[[8,"Array"],[3,"ArrayVec"],[15,"slice"],[8,"Copy"],[3,"ArrayString"],[15,"str"],[15,"usize"],[3,"IntoIter"],[8,"Clone"],[3,"CapacityError"],[4,"Ordering"],[8,"Ord"],[8,"RangeBounds"],[3,"Drain"],[15,"bool"],[8,"PartialEq"],[8,"IntoIterator"],[3,"Formatter"],[6,"Result"],[15,"never"],[4,"Result"],[3,"Utf8Error"],[8,"Hasher"],[4,"Option"],[8,"PartialOrd"],[15,"char"],[8,"FnMut"],[3,"TypeId"]]},\
"async_channel":{"doc":"An async multi-producer multi-consumer channel, where each …","t":"NNNNDDDDDDEEDDLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLL","n":["Closed","Closed","Empty","Full","Receiver","Recv","RecvError","Send","SendError","Sender","TryRecvError","TrySendError","WeakReceiver","WeakSender","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bounded","capacity","capacity","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","close","close","downgrade","downgrade","drop","drop","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","into","into","into_future","into_future","into_inner","into_inner","is_closed","is_closed","is_closed","is_closed","is_empty","is_empty","is_empty","is_full","is_full","is_full","is_terminated","len","len","poll","poll","poll_next","provide","provide","provide","provide","receiver_count","receiver_count","recv","recv_blocking","send","send_blocking","sender_count","sender_count","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_poll","try_poll","try_poll_next","try_recv","try_send","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unbounded","upgrade","upgrade"],"q":[[0,"async_channel"]],"d":["The channel is closed.","The channel is empty and closed.","The channel is empty but not closed.","The channel is full but not closed.","The receiving side of a channel.","A future returned by <code>Receiver::recv()</code>.","An error returned from <code>Receiver::recv()</code>.","A future returned by <code>Sender::send()</code>.","An error returned from <code>Sender::send()</code>.","The sending side of a channel.","An error returned from <code>Receiver::try_recv()</code>.","An error returned from <code>Sender::try_send()</code>.","A <code>Receiver</code> that prevents the channel from not being closed.","A <code>Sender</code> that prevents the channel from not being closed.","","","","","","","","","","","","","","","","","","","","","Creates a bounded channel.","Returns the channel capacity if it’s bounded.","Returns the channel capacity if it’s bounded.","","","","","","","","","","","","","","","","","Closes the channel.","Closes the channel.","Downgrade the sender to a weak reference.","Downgrade the receiver to a weak reference.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Unwraps the message that couldn’t be sent.","Unwraps the message that couldn’t be sent.","Returns <code>true</code> if the channel is closed.","Returns <code>true</code> if the channel is closed.","Returns <code>true</code> if the channel is closed.","Returns <code>true</code> if the channel is empty and closed.","Returns <code>true</code> if the channel is empty.","Returns <code>true</code> if the channel is empty.","Returns <code>true</code> if the channel is empty but not closed.","Returns <code>true</code> if the channel is full.","Returns <code>true</code> if the channel is full.","Returns <code>true</code> if the channel is full but not closed.","","Returns the number of messages in the channel.","Returns the number of messages in the channel.","","","","","","","","Returns the number of receivers for the channel.","Returns the number of receivers for the channel.","Receives a message from the channel.","Receives a message from the channel using the blocking …","Sends a message into the channel.","Sends a message into this channel using the blocking …","Returns the number of senders for the channel.","Returns the number of senders for the channel.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Attempts to receive a message from the channel.","Attempts to send a message into the channel.","","","","","","","","","","","Creates an unbounded channel.","Upgrade the <code>WeakSender</code> into a <code>Sender</code>.","Upgrade the <code>WeakReceiver</code> into a <code>Receiver</code>."],"i":[9,11,11,9,0,0,0,0,0,0,0,0,0,0,2,4,5,6,8,9,10,11,17,18,2,4,5,6,8,9,10,11,17,18,0,2,4,2,4,5,6,8,9,10,11,2,4,5,6,8,9,10,11,2,4,2,4,2,4,8,9,10,11,8,9,10,11,2,4,5,6,8,8,9,9,10,10,11,11,17,18,2,4,5,6,8,9,10,11,17,18,2,4,5,6,8,9,10,11,17,18,17,18,8,9,2,4,9,11,2,4,11,2,4,9,4,2,4,17,18,4,8,9,10,11,2,4,4,4,2,2,2,4,2,4,5,6,8,9,10,11,8,9,10,11,2,4,5,6,8,9,10,11,17,18,2,4,5,6,8,9,10,11,17,18,17,18,4,4,2,2,4,5,6,8,9,10,11,17,18,0,5,6],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1],[2,[[3,[1]]]],[4,[[3,[1]]]],[2,2],[4,4],[5,5],[6,6],[[[8,[7]]],[[8,[7]]]],[[[9,[7]]],[[9,[7]]]],[10,10],[11,11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[2,12],[4,12],[2,5],[4,6],[2],[4],[[[8,[13]],[8,[13]]],12],[[[9,[13]],[9,[13]]],12],[[10,10],12],[[11,11],12],[[],12],[[],12],[[],12],[[],12],[[2,14],15],[[4,14],15],[[5,14],15],[[6,14],15],[[8,14],15],[[8,14],15],[[9,14],15],[[9,14],15],[[10,14],15],[[10,14],15],[[11,14],15],[[11,14],15],[[[17,[16]],14],15],[[[18,[16]],14],15],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[8],[9],[2,12],[4,12],[9,12],[11,12],[2,12],[4,12],[11,12],[2,12],[4,12],[9,12],[4,12],[2,1],[4,1],[[[19,[17]],20],21],[[[19,[18]],20],21],[[[19,[4]],20],[[21,[3]]]],[22],[22],[22],[22],[2,1],[4,1],[4,18],[4,[[23,[10]]]],[2,17],[2,[[23,[8]]]],[2,1],[4,1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],24],[[],24],[[],24],[[],24],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[19,20],21],[[19,20],21],[[19,20],[[21,[[3,[23]]]]]],[4,[[23,[11]]]],[2,[[23,[9]]]],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[]],[5,[[3,[2]]]],[6,[[3,[4]]]]],"c":[],"p":[[15,"usize"],[3,"Sender"],[4,"Option"],[3,"Receiver"],[3,"WeakSender"],[3,"WeakReceiver"],[8,"Clone"],[3,"SendError"],[4,"TrySendError"],[3,"RecvError"],[4,"TryRecvError"],[15,"bool"],[8,"PartialEq"],[3,"Formatter"],[6,"Result"],[8,"Debug"],[3,"Send"],[3,"Recv"],[3,"Pin"],[3,"Context"],[4,"Poll"],[3,"Demand"],[4,"Result"],[3,"String"],[3,"TypeId"]]},\
"async_executor":{"doc":"Async executors.","t":"DDCLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["Executor","LocalExecutor","Task","borrow","borrow","borrow_mut","borrow_mut","default","default","drop","fmt","fmt","from","from","into","into","is_empty","is_empty","new","new","run","run","spawn","spawn","tick","tick","try_from","try_from","try_into","try_into","try_tick","try_tick","type_id","type_id"],"q":[[0,"async_executor"]],"d":["An async executor.","A thread-local executor.","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if there are no unfinished tasks.","Returns <code>true</code> if there are no unfinished tasks.","Creates a new executor.","Creates a single-threaded executor.","Runs the executor until the given future completes.","Runs the executor until the given future completes.","Spawns a task onto the executor.","Spawns a task onto the executor.","Runs a single task.","Runs a single task.","","","","","Attempts to run a task if at least one is scheduled.","Attempts to run a task if at least one is scheduled.","",""],"i":[0,0,0,1,2,1,2,1,2,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2],"f":[0,0,0,[[]],[[]],[[]],[[]],[[],1],[[],2],[1],[[1,3],4],[[2,3],4],[[]],[[]],[[]],[[]],[1,5],[2,5],[[],1],[[],2],[[1,6]],[[2,6]],[[1,[0,[6,7]]],[[8,[7]]]],[[2,6],8],[1],[2],[[],9],[[],9],[[],9],[[],9],[1,5],[2,5],[[],10],[[],10]],"c":[],"p":[[3,"Executor"],[3,"LocalExecutor"],[3,"Formatter"],[6,"Result"],[15,"bool"],[8,"Future"],[8,"Send"],[3,"Task"],[4,"Result"],[3,"TypeId"]]},\
"async_lock":{"doc":"Async synchronization primitives.","t":"DDDDDDDDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["Barrier","BarrierWaitResult","Mutex","MutexGuard","MutexGuardArc","OnceCell","RwLock","RwLockReadGuard","RwLockUpgradableReadGuard","RwLockWriteGuard","Semaphore","SemaphoreGuard","SemaphoreGuardArc","acquire","acquire_arc","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","downgrade","downgrade","downgrade_to_upgradable","drop","drop","drop","drop","drop","drop","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","futures","get","get_mut","get_mut","get_mut","get_or_init","get_or_init_blocking","get_or_try_init","get_or_try_init_blocking","get_unchecked","into","into","into","into","into","into","into","into","into","into","into","into","into","into_inner","into_inner","into_inner","is_initialized","is_leader","lock","lock_arc","new","new","new","new","new","read","set","set_blocking","source","source","take","to_owned","to_string","to_string","to_string","to_string","to_string","try_acquire","try_acquire_arc","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_lock","try_lock_arc","try_read","try_upgradable_read","try_upgrade","try_write","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upgradable_read","upgrade","wait","wait","wait_blocking","write","Acquire","AcquireArc","BarrierWait","Lock","LockArc","Read","UpgradableRead","Upgrade","Write","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","into","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","poll","poll","poll","poll","poll","poll","poll","poll","poll","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id"],"q":[[0,"async_lock"],[199,"async_lock::futures"]],"d":["A counter to synchronize multiple tasks at the same time.","Returned by <code>Barrier::wait()</code> when all tasks have called it.","An async mutex.","A guard that releases the mutex when dropped.","An owned guard that releases the mutex when dropped.","A memory location that can be written to at most once.","An async reader-writer lock.","A guard that releases the read lock when dropped.","A guard that releases the upgradable read lock when …","A guard that releases the write lock when dropped.","A counter for limiting the number of concurrent operations.","A guard that releases the acquired permit.","An owned guard that releases the acquired permit.","Waits for a permit for a concurrent operation.","Waits for an owned permit for a concurrent operation.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Downgrades into a regular reader guard.","Downgrades into a regular reader guard.","Downgrades into an upgradable reader guard.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Create a new, initialized <code>OnceCell</code> from an existing value.","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Named futures for use with <code>async_lock</code> primitives.","Get a reference to the inner value, or <code>None</code> if the value …","Returns a mutable reference to the underlying data.","Get a mutable reference to the inner value, or <code>None</code> if the …","Returns a mutable reference to the inner value.","Either get the value or initialize it with the given …","Either get the value or initialize it with the given …","Either get the value or initialize it with the given …","Either get the value or initialize it with the given …","Get a reference to the inner value.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consumes the mutex, returning the underlying data.","Convert this <code>OnceCell</code> into the inner value, if it is …","Unwraps the lock and returns the inner value.","Tell whether or not the cell is initialized.","Returns <code>true</code> if this task was the last to call to …","Acquires the mutex.","Acquires the mutex and clones a reference to it.","Creates a new async mutex.","Create a new, uninitialized <code>OnceCell</code>.","Creates a new reader-writer lock.","Creates a barrier that can block the given number of tasks.","Creates a new semaphore with a limit of <code>n</code> concurrent …","Acquires a read lock.","Try to set the value of the cell.","Try to set the value of the cell.","Returns a reference to the mutex a guard came from.","Returns a reference to the mutex a guard came from.","Take the value out of this <code>OnceCell</code>, moving it back to the …","","","","","","","Attempts to get a permit for a concurrent operation.","Attempts to get an owned permit for a concurrent operation.","","","","","","","","","","","","","","","","","","","","","","","","","","","Attempts to acquire the mutex.","Attempts to acquire the mutex and clone a reference to it.","Attempts to acquire a read lock.","Attempts to acquire a read lock with the possiblity to …","Attempts to upgrade into a write lock.","Attempts to acquire a write lock.","","","","","","","","","","","","","","Attempts to acquire a read lock with the possiblity to …","Upgrades into a write lock.","Wait for the cell to be initialized, and then return a …","Blocks the current task until all tasks reach this point.","Wait for the cell to be initialized, and then return a …","Acquires a write lock.","The future returned by <code>Semaphore::acquire</code>.","The future returned by <code>Semaphore::acquire_arc</code>.","The future returned by <code>Barrier::wait()</code>.","The future returned by <code>Mutex::lock</code>.","The future returned by <code>Mutex::lock_arc</code>.","The future returned by <code>RwLock::read</code>.","The future returned by <code>RwLock::upgradable_read</code>.","The future returned by <code>RwLockUpgradableReadGuard::upgrade</code>.","The future returned by <code>RwLock::write</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,8,15,9,21,5,10,11,12,13,14,1,16,17,8,15,9,21,5,10,11,12,13,14,1,16,17,5,5,8,9,10,11,12,13,14,10,11,14,13,14,14,15,10,11,12,16,17,8,15,9,21,5,10,10,11,11,12,12,13,13,14,14,1,16,17,8,8,8,15,15,15,9,9,9,21,5,10,11,12,13,14,1,16,17,0,15,8,15,9,15,15,15,15,15,8,15,9,21,5,10,11,12,13,14,1,16,17,8,15,9,15,5,8,8,8,15,9,21,1,9,15,15,10,11,15,5,10,11,12,13,14,1,1,8,15,9,21,5,10,11,12,13,14,1,16,17,8,15,9,21,5,10,11,12,13,14,1,16,17,8,8,9,9,13,9,8,15,9,21,5,10,11,12,13,14,1,16,17,9,13,15,21,15,9,0,0,0,0,0,0,0,0,0,37,29,30,32,35,38,36,2,4,37,29,30,32,35,38,36,2,4,37,29,30,32,35,38,36,2,4,37,29,30,32,35,38,36,2,4,37,29,30,32,35,38,36,2,4,37,29,30,32,35,38,36,2,4,37,29,30,32,35,38,36,2,4,37,29,30,32,35,38,36,2,4,37,29,30,32,35,38,36,2,4,37,29,30,32,35,38,36,2,4],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],[[[3,[1]]],4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[5,5],[[]],[[],[[8,[[0,[6,7]]]]]],[[],[[9,[[0,[6,7]]]]]],[[[10,[7]]],7],[[[11,[7]]],7],[[[12,[7]]],7],[[[13,[7]]],7],[[[14,[7]]],7],[[[10,[7]]],7],[[[11,[7]]],7],[[[14,[7]]],7],[[[13,[7]]],[[12,[7]]]],[[[14,[7]]],[[12,[7]]]],[[[14,[7]]],[[13,[7]]]],[15],[[[10,[7]]]],[[[11,[7]]]],[[[12,[7]]]],[16],[17],[[[8,[[0,[18,7]]]],19],20],[[[15,[18]],19],20],[[[9,[[0,[18,7]]]],19],20],[[21,19],20],[[5,19],20],[[[10,[[0,[18,7]]]],19],20],[[[10,[[0,[22,7]]]],19],20],[[[11,[[0,[18,7]]]],19],20],[[[11,[[0,[22,7]]]],19],20],[[[12,[[0,[22,7]]]],19],20],[[[12,[[0,[18,7]]]],19],20],[[[13,[[0,[22,7]]]],19],20],[[[13,[[0,[18,7]]]],19],20],[[[14,[[0,[18,7]]]],19],20],[[[14,[[0,[22,7]]]],19],20],[[1,19],20],[[16,19],20],[[17,19],20],[[]],[23],[[],8],[[],15],[23],[[]],[[],9],[[]],[23],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[15,24],[[[8,[7]]],7],[15,24],[[[9,[7]]],7],[[15,25]],[[15,[0,[25,26]]]],[[15,25],27],[[15,25],27],[15],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[8],[15,24],[9],[15,28],[5,28],[[[8,[7]]],[[29,[7]]]],[[[3,[[8,[7]]]]],[[30,[7]]]],[[],8],[[],15],[[],9],[31,21],[31,1],[[[9,[7]]],[[32,[7]]]],[15,27],[15,27],[[[10,[7]]],[[8,[7]]]],[[[11,[7]]],[[3,[[8,[7]]]]]],[15,24],[[]],[[],33],[[],33],[[],33],[[],33],[[],33],[1,[[24,[16]]]],[[[3,[1]]],[[24,[17]]]],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[[8,[7]]],[[24,[[10,[7]]]]]],[[[3,[[8,[7]]]]],[[24,[[11,[7]]]]]],[[[9,[7]]],[[24,[[12,[7]]]]]],[[[9,[7]]],[[24,[[13,[7]]]]]],[[[13,[7]]],[[27,[[14,[7]],[13,[7]]]]]],[[[9,[7]]],[[24,[[14,[7]]]]]],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[[9,[7]]],[[35,[7]]]],[[[13,[7]]],[[36,[7]]]],[15],[21,37],[15],[[[9,[7]]],[[38,[7]]]],0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[37,19],20],[[[29,[7]],19],20],[[[30,[7]],19],20],[[[32,[7]],19],20],[[[35,[7]],19],20],[[[38,[7]],19],20],[[[36,[7]],19],20],[[2,19],20],[[4,19],20],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[39,[37]],40],41],[[[39,[[29,[7]]]],40],41],[[[39,[[30,[7]]]],40],41],[[[39,[[32,[7]]]],40],41],[[[39,[[35,[7]]]],40],41],[[[39,[[38,[7]]]],40],41],[[[39,[[36,[7]]]],40],41],[[[39,[2]],40],41],[[[39,[4]],40],41],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34]],"c":[],"p":[[3,"Semaphore"],[3,"Acquire"],[3,"Arc"],[3,"AcquireArc"],[3,"BarrierWaitResult"],[8,"Default"],[8,"Sized"],[3,"Mutex"],[3,"RwLock"],[3,"MutexGuard"],[3,"MutexGuardArc"],[3,"RwLockReadGuard"],[3,"RwLockUpgradableReadGuard"],[3,"RwLockWriteGuard"],[3,"OnceCell"],[3,"SemaphoreGuard"],[3,"SemaphoreGuardArc"],[8,"Debug"],[3,"Formatter"],[6,"Result"],[3,"Barrier"],[8,"Display"],[15,"never"],[4,"Option"],[8,"FnOnce"],[8,"Unpin"],[4,"Result"],[15,"bool"],[3,"Lock"],[3,"LockArc"],[15,"usize"],[3,"Read"],[3,"String"],[3,"TypeId"],[3,"UpgradableRead"],[3,"Upgrade"],[3,"BarrierWait"],[3,"Write"],[3,"Pin"],[3,"Context"],[4,"Poll"]]},\
"async_task":{"doc":"Task abstraction for building executors.","t":"DDDIDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLFLFLFLLLLLLLLLLLLLLLLLLLLLM","n":["Builder","FallibleTask","Runnable","Schedule","ScheduleInfo","Task","WithInfo","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cancel","cancel","clone","clone_into","default","detach","detach","drop","drop","fallible","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into_future","into_future","is_finished","is_finished","metadata","metadata","metadata","new","poll","poll","propagate_panic","run","schedule","schedule","schedule","spawn","spawn","spawn_local","spawn_local","spawn_unchecked","spawn_unchecked","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","waker","woken_while_running"],"q":[[0,"async_task"]],"d":["A builder that creates a new task.","A spawned task with a fallible response.","A handle to a runnable task.","The trait for scheduling functions.","Extra scheduling information that can be passed to the …","A spawned task.","Pass a scheduling function with more scheduling …","","","","","","","","","","","","","Cancels the task and waits for it to stop running.","Cancels the task and waits for it to stop running.","","","","Detaches the task to let it keep running in the background.","Detaches the task to let it keep running in the background.","","","Converts this task into a <code>FallibleTask</code>.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Returns <code>true</code> if the current task is finished.","Returns <code>true</code> if the current task is finished.","Get the metadata associated with this task.","Get the metadata associated with this task.","Adds metadata to the task.","Creates a new task builder.","","","Propagates panics that occur in the task.","Runs the task by polling its future.","The actual scheduling procedure.","Schedules the task.","","Creates a new task.","Creates a new task.","Creates a new thread-local task.","Creates a new thread-local task.","Creates a new task without <code>Send</code>, <code>Sync</code>, and <code>&#39;static</code> bounds.","Creates a new task without <code>Send</code>, <code>Sync</code>, and <code>&#39;static</code> bounds.","","","","","","","","","","","","","","","","","","","","Returns a waker associated with this task.","Indicates whether the task gets woken up while running."],"i":[0,0,0,0,0,0,0,7,1,3,6,4,11,7,1,3,6,4,11,1,3,4,4,6,1,3,7,1,1,7,1,3,6,4,11,7,1,3,6,4,11,11,11,7,1,3,6,4,11,1,3,1,3,7,1,6,6,1,3,6,7,20,7,11,0,6,0,6,0,6,4,7,1,3,6,4,11,7,1,3,6,4,11,7,1,3,6,4,11,7,4],"f":[0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,2],[3,2],[4,4],[[]],[[],[[6,[5]]]],[1],[3],[7],[1],[1,3],[[[7,[8]],9],10],[[[1,[8]],9],10],[[[3,[8]],9],10],[[[6,[8]],9],10],[[4,9],10],[[[11,[8]],9],10],[[]],[[]],[[]],[[]],[[]],[12],[[]],[[],11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,13],[3,13],[7],[1],[6,6],[[],6],[[[14,[1]],15],16],[[[14,[3]],15],16],[[6,13],6],[7,13],[[7,4]],[7],[[[11,[17]],7,4]],[[[0,[18,19]],[0,[20,19,21]]]],[[6,22,[0,[20,19,21]]]],[[18,[0,[20,19,21]]]],[[6,22,[0,[20,19,21]]]],[[18,20]],[[6,22,20]],[[]],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[7,25],0],"c":[],"p":[[3,"Task"],[4,"Option"],[3,"FallibleTask"],[3,"ScheduleInfo"],[8,"Default"],[3,"Builder"],[3,"Runnable"],[8,"Debug"],[3,"Formatter"],[6,"Result"],[3,"WithInfo"],[15,"never"],[15,"bool"],[3,"Pin"],[3,"Context"],[4,"Poll"],[8,"Fn"],[8,"Future"],[8,"Send"],[8,"Schedule"],[8,"Sync"],[8,"FnOnce"],[4,"Result"],[3,"TypeId"],[3,"Waker"]]},\
"bevy_app":{"doc":"This crate is about everything concerning the …","t":"DDIYDGYDDDNDDDNIIDIDDDDDEDDDDDLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLALLLLLLLLLLMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMM","n":["App","AppExit","AppLabel","AppLabel","AppLabelId","CreatePlugin","DynamicPlugin","First","FixedUpdate","Last","Loop","Main","MainScheduleOrder","MainSchedulePlugin","Once","Plugin","PluginGroup","PluginGroupBuilder","Plugins","PostStartup","PostUpdate","PreStartup","PreUpdate","RunFixedUpdateLoop","RunMode","ScheduleRunnerPlugin","Startup","StateTransition","SubApp","Update","add","add_after","add_before","add_event","add_plugin","add_plugins","add_schedule","add_startup_system","add_startup_systems","add_state","add_system","add_systems","app","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_label","as_label","as_label","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_str","as_str","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build","build","build","cleanup","cleanup","cleanup","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","configure_set","configure_sets","default","default","default","default","default","disable","downcast","downcast_mut","downcast_rc","downcast_ref","dyn_clone","dyn_clone","dyn_clone","dyn_clone","dyn_clone","dyn_clone","dyn_clone","dyn_clone","dyn_clone","dyn_clone","dyn_clone","dyn_clone","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","edit_schedule","empty","enable","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extract","finish","finish","finish","finish","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_world","from_world","from_world","from_world","from_world","get_added_plugins","get_schedule","get_schedule_mut","get_sub_app","get_sub_app_mut","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","init_non_send_resource","init_resource","init_schedule","insert_after","insert_non_send_resource","insert_resource","insert_sub_app","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is","is_plugin_added","is_unique","is_unique","labels","main_schedule_label","name","name","name","name","new","new","prelude","ready","ready","ready","register_type","register_type_data","remove_sub_app","run","run","run_loop","run_main","run_mode","run_once","runner","set","set","set","set_runner","start","sub_app","sub_app_mut","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update","world","wait"],"q":[[0,"bevy_app"],[624,"bevy_app::RunMode"]],"d":["A container of app logic and data.","An event that indicates the <code>App</code> should exit. This will …","A strongly-typed class of labels used to identify an <code>App</code>.","Generates an impl of the <code>AppLabel</code> trait.","A strongly-typed identifier for an <code>AppLabel</code>.","A type representing an unsafe function that returns a …","Generates a dynamic plugin entry point function for the …","Runs first in the schedule. This is run by the <code>Main</code> …","The schedule that contains systems which only run after a …","Runs last in the schedule. This is run by the <code>Main</code> …","Indicates that the <code>App</code>’s schedule should run repeatedly.","The schedule that contains the app logic that is evaluated …","Defines the schedules to be run for the <code>Main</code> schedule, …","Initializes the <code>Main</code> schedule, sub schedules,  and …","Indicates that the <code>App</code>’s schedule should run only once.","A collection of Bevy app logic and configuration.","Combines multiple <code>Plugin</code>s into a single unit.","Facilitates the creation and configuration of a <code>PluginGroup</code>…","Types that represent a set of <code>Plugin</code>s.","The schedule that runs once after <code>Startup</code>. This is run by …","The schedule that contains logic that must run after <code>Update</code>…","The schedule that runs before <code>Startup</code>. This is run by the …","The schedule that contains logic that must run before …","Runs the <code>FixedUpdate</code> schedule in a loop according until …","Determines the method used to run an <code>App</code>’s <code>Schedule</code>.","Configures an <code>App</code> to run its <code>Schedule</code> according to a given …","The schedule that runs once when the app starts. This is …","Runs state transitions. This is run by the <code>Main</code> schedule.","A <code>SubApp</code> contains its own <code>Schedule</code> and <code>World</code> separate from …","The schedule that contains app logic. This is run by the …","Adds the plugin <code>Plugin</code> at the end of this …","Adds a <code>Plugin</code> in this <code>PluginGroupBuilder</code> after the plugin …","Adds a <code>Plugin</code> in this <code>PluginGroupBuilder</code> before the plugin …","Setup the application to manage events of type <code>T</code>.","Adds a single <code>Plugin</code>.","Adds one or more <code>Plugin</code>s.","Adds a new <code>schedule</code> to the <code>App</code> under the provided <code>label</code>.","Adds a system to <code>Startup</code>.","Adds a collection of systems to <code>Startup</code>.","Adds <code>State&lt;S&gt;</code> and <code>NextState&lt;S&gt;</code> resources, <code>OnEnter</code> and …","Adds a system to the default system set and schedule of …","Adds a system to the given schedule in this app’s …","The <code>SubApp</code>’s instance of <code>App</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Converts this type into an opaque, strongly-typed label.","Converts this type into an opaque, strongly-typed label.","","","","","","","","","","","","","","Returns the representation of this label as a string …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Configures the <code>App</code> to which this plugin is added.","Configures the <code>Plugin</code>s that are to be added.","","","","Run <code>Plugin::cleanup</code> for each plugin. This is usually …","Runs after all plugins are built and finished, but before …","Runs after all plugins are built and finished, but before …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Configures a system set in the default schedule, adding …","Configures a collection of system sets in the default …","","","","","","Disables a <code>Plugin</code>, preventing it from being added to the …","Returns a boxed object from a boxed trait object if the …","Returns a mutable reference to the object within the trait …","Returns an <code>Rc</code>-ed object from an <code>Rc</code>-ed trait object if the …","Returns a reference to the object within the trait object …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Applies the function to the <code>Schedule</code> associated with <code>label</code>.","Creates a new empty <code>App</code> with minimal default configuration.","Enables a <code>Plugin</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Extracts data from main world to this sub-app.","Run <code>Plugin::finish</code> for each plugin. This is usually called …","Finish adding this plugin to the <code>App</code>, once all plugins …","Finish adding this plugin to the <code>App</code>, once all plugins …","Consumes the <code>PluginGroupBuilder</code> and builds the contained …","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Returns a vector of references to any plugins of type <code>T</code> …","Gets read-only access to the <code>Schedule</code> with the provided …","Gets read-write access to a <code>Schedule</code> with the provided …","Retrieves a <code>SubApp</code> inside this <code>App</code> with the given label, …","Retrieves a <code>SubApp</code> inside this <code>App</code> with the given label, …","","","","","","","","","","","","","","Initialize a non-send <code>Resource</code> with standard starting …","Initialize a <code>Resource</code> with standard starting values by …","Initializes a new empty <code>schedule</code> to the <code>App</code> under the …","Adds the given <code>schedule</code> after the <code>after</code> schedule","Inserts a non-send resource to the app.","Inserts a <code>Resource</code> to the current <code>App</code> and overwrites any …","Inserts an existing sub app into the app","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns true if the trait object wraps an object of type …","Checks if a <code>Plugin</code> has already been added.","If the plugin can be meaningfully instantiated several …","If the plugin can be meaningfully instantiated several …","The labels to run for the <code>Main</code> schedule (in the order they …","The schedule that systems are added to by default.","Configures a name for the <code>Plugin</code> which is primarily used …","Configures a name for the <code>Plugin</code> which is primarily used …","Configures a name for the <code>PluginGroup</code> which is primarily …","Configures a name for the <code>PluginGroup</code> which is primarily …","Creates a new <code>App</code> with some default structure to enable …","Creates a new <code>SubApp</code>.","","Check that <code>Plugin::ready</code> of all plugins returns true. This …","Has the plugin finished it’s setup? This can be useful …","Has the plugin finished it’s setup? This can be useful …","Registers the type <code>T</code> in the <code>TypeRegistry</code> resource, adding …","Adds the type data <code>D</code> to type <code>T</code> in the <code>TypeRegistry</code> …","Removes a sub app from the app. Returns <code>None</code> if the label …","Starts the application by calling the app’s runner …","Runs the <code>SubApp</code>’s default schedule.","See <code>RunMode::Loop</code>.","A system that runs the “main schedule”","Determines whether the <code>Schedule</code> is run once or repeatedly.","See <code>RunMode::Once</code>.","The runner function is primarily responsible for managing …","Sets the value of the given <code>Plugin</code>, if it exists","Sets the value of the given <code>Plugin</code>, if it exists","Sets the value of the given <code>Plugin</code>, if it exists.","Sets the function that will be called when the app is run.","Start a new builder for the <code>PluginGroup</code>.","Retrieves a <code>SubApp</code> stored inside this <code>App</code>.","Retrieves a <code>SubApp</code> stored inside this <code>App</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the [<code>TypeId</code>] used to differentiate labels.","Returns the [<code>TypeId</code>] used to differentiate labels.","","","","","","","","","","","","","","","","","","","Advances the execution of the <code>Schedule</code> by one cycle.","The main ECS <code>World</code> of the <code>App</code>. This stores and provides …","The minimum <code>Duration</code> to wait after a <code>Schedule</code> has …"],"i":[0,0,0,0,0,0,0,0,0,0,27,0,0,0,27,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,3,3,3,3,3,3,3,3,3,40,3,40,24,1,22,22,26,10,10,11,11,12,12,13,13,14,14,15,15,16,16,17,17,18,18,19,19,20,20,21,21,33,27,25,3,40,24,1,22,26,10,11,12,13,14,15,16,17,18,19,20,21,33,27,25,22,10,10,11,11,12,12,13,13,14,14,15,15,16,16,17,17,18,18,19,19,20,20,21,21,45,45,22,10,11,12,13,14,15,16,17,18,19,20,21,45,22,3,40,24,1,22,26,10,11,12,13,14,15,16,17,18,19,20,21,33,27,25,3,40,24,1,22,26,10,11,12,13,14,15,16,17,18,19,20,21,33,27,25,2,54,24,1,25,3,2,2,22,26,10,11,12,13,14,15,16,17,18,19,20,21,27,22,26,10,11,12,13,14,15,16,17,18,19,20,21,27,22,26,10,11,12,13,14,15,16,17,18,19,20,21,27,3,3,3,26,33,27,25,1,2,2,2,2,10,11,12,13,14,15,16,17,18,19,20,21,22,10,11,12,13,14,15,16,17,18,19,20,21,22,10,10,11,11,12,12,13,13,14,14,15,15,16,16,17,17,18,18,19,19,20,20,21,21,3,3,1,22,10,11,12,13,14,15,16,17,18,19,20,21,22,22,22,10,10,10,11,11,11,12,12,12,13,13,13,14,14,14,15,15,15,16,16,16,17,17,17,18,18,18,19,19,19,20,20,20,21,21,21,40,3,2,2,1,3,40,22,26,10,11,12,13,14,15,16,17,18,19,20,21,33,27,3,40,24,1,22,26,10,11,12,13,14,15,16,17,18,19,20,21,33,27,25,3,26,33,27,25,3,3,3,3,3,22,10,11,12,13,14,15,16,17,18,19,20,21,3,3,3,33,3,3,3,3,40,24,1,22,26,10,11,12,13,14,15,16,17,18,19,20,21,33,27,25,3,40,24,1,22,26,10,11,12,13,14,15,16,17,18,19,20,21,33,27,25,24,1,22,26,10,11,12,13,14,15,16,17,18,19,20,21,33,27,25,3,40,24,1,22,26,10,11,12,13,14,15,16,17,18,19,20,21,33,27,25,2,3,2,2,33,3,2,2,54,54,3,40,0,3,2,2,3,3,3,3,40,25,10,25,25,3,54,54,1,3,1,3,3,22,26,10,11,12,13,14,15,16,17,18,19,20,21,27,3,40,24,1,22,26,10,11,12,13,14,15,16,17,18,19,20,21,33,27,25,3,40,24,1,22,26,10,11,12,13,14,15,16,17,18,19,20,21,33,27,25,3,40,24,1,45,45,22,22,26,10,11,12,13,14,15,16,17,18,19,20,21,33,27,25,3,3,55],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,2],1],[[1,2],1],[[1,2],1],[3,3],[[3,2],3],[[3,4],3],[[3,5,6],3],[[3,7],3],[[3,7],3],[3,3],[[3,7],3],[[3,5,7],3],0,[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],9],[[],9],[10,9],[11,9],[[],9],[12,9],[[],9],[13,9],[[],9],[14,9],[[],9],[15,9],[[],9],[[],9],[16,9],[[],9],[17,9],[[],9],[18,9],[[],9],[19,9],[20,9],[[],9],[[],9],[21,9],[[],22],[[],22],[22,22],[10,5],[11,5],[12,5],[13,5],[14,5],[15,5],[16,5],[17,5],[18,5],[19,5],[20,5],[21,5],[[],23],[22,23],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[3],[[],1],[[24,3]],[1,1],[[25,3]],[3],[3],[3],[22,22],[26,26],[10,10],[11,11],[12,12],[13,13],[14,14],[15,15],[16,16],[17,17],[18,18],[19,19],[20,20],[21,21],[27,27],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[30,[28,29]]]],[[],[[30,[28,29]]]],[[],[[30,[28,29]]]],[[],[[30,[28,29]]]],[[],[[30,[28,29]]]],[[],[[30,[28,29]]]],[[],[[30,[28,29]]]],[[],[[30,[28,29]]]],[[],[[30,[28,29]]]],[[],[[30,[28,29]]]],[[],[[30,[28,29]]]],[[],[[30,[28,29]]]],[[],[[30,[28,29]]]],[[],[[30,[28,29]]]],[[],[[30,[28,29]]]],[[3,5,31],3],[[3,5,32],3],[[],3],[[],26],[[],33],[[],27],[[],25],[1,1],[[[30,[2]]],[[34,[[30,[2]],[30,[2]]]]]],[2,[[35,[2]]]],[[[36,[2]]],[[34,[[36,[2]],[36,[2]]]]]],[2,[[35,[2]]]],[10,[[30,[5]]]],[11,[[30,[5]]]],[12,[[30,[5]]]],[13,[[30,[5]]]],[14,[[30,[5]]]],[15,[[30,[5]]]],[16,[[30,[5]]]],[17,[[30,[5]]]],[18,[[30,[5]]]],[19,[[30,[5]]]],[20,[[30,[5]]]],[21,[[30,[5]]]],[9,37],[9,37],[9,37],[9,37],[9,37],[9,37],[9,37],[9,37],[9,37],[9,37],[9,37],[9,37],[9,37],[38],[38],[[10,38]],[[11,38]],[38],[[12,38]],[38],[[13,38]],[38],[38],[[14,38]],[[15,38]],[38],[38],[[16,38]],[38],[[17,38]],[[18,38]],[38],[[19,38]],[38],[38],[[20,38]],[38],[[21,38]],[[3,5,39],3],[[],3],[1,1],[[22,22],37],[[10,10],37],[[11,11],37],[[12,12],37],[[13,13],37],[[14,14],37],[[15,15],37],[[16,16],37],[[17,17],37],[[18,18],37],[[19,19],37],[[20,20],37],[[21,21],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[40,41]],[3],[3],[3],[[1,3]],[[3,42],43],[[40,42],43],[[22,42],43],[[26,42],43],[[10,42],43],[[11,42],43],[[12,42],43],[[13,42],43],[[14,42],43],[[15,42],43],[[16,42],43],[[17,42],43],[[18,42],43],[[19,42],43],[[20,42],43],[[21,42],43],[[33,42],43],[[27,42],43],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[41],[41],[41],[41],[41],[3,[[44,[2]]]],[[3,5],[[35,[6]]]],[[3,5],[[35,[6]]]],[[3,45],[[34,[3,45]]]],[[3,45],[[34,[3,22]]]],[[22,38]],[[10,38]],[[11,38]],[[12,38]],[[13,38]],[[14,38]],[[15,38]],[[16,38]],[[17,38]],[[18,38]],[[19,38]],[[20,38]],[[21,38]],[3,3],[3,3],[[3,5],3],[[33,5,5]],[3,3],[[3,46],3],[[3,45,40]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[30,[29]]],[[30,[8,29]]]],[[[30,[29]]],[[30,[8,29]]]],[[[30,[29]]],[[30,[8,29]]]],[[[30,[29]]],[[30,[8,29]]]],[[[30,[29]]],[[30,[8,29]]]],[[[30,[29]]],[[30,[8,29]]]],[[[30,[29]]],[[30,[8,29]]]],[[[30,[29]]],[[30,[8,29]]]],[[[30,[29]]],[[30,[8,29]]]],[[[30,[29]]],[[30,[8,29]]]],[[[30,[29]]],[[30,[8,29]]]],[[[30,[29]]],[[30,[8,29]]]],[[[30,[29]]],[[30,[8,29]]]],[[[30,[29]]],[[30,[8,29]]]],[[[30,[29]]],[[30,[8,29]]]],[[[30,[29]]],[[30,[8,29]]]],[[[30,[29]]],[[30,[8,29]]]],[[[30,[29]]],[[30,[8,29]]]],[[[30,[29]]],[[30,[8,29]]]],[[[30,[29]]],[[30,[8,29]]]],[[[30,[29]]],[[30,[8,29]]]],[47,[[47,[8]]]],[47,[[47,[8]]]],[47,[[47,[8]]]],[47,[[47,[8]]]],[47,[[47,[8]]]],[47,[[47,[8]]]],[47,[[47,[8]]]],[47,[[47,[8]]]],[47,[[47,[8]]]],[47,[[47,[8]]]],[47,[[47,[8]]]],[47,[[47,[8]]]],[47,[[47,[8]]]],[47,[[47,[8]]]],[47,[[47,[8]]]],[47,[[47,[8]]]],[47,[[47,[8]]]],[47,[[47,[8]]]],[47,[[47,[8]]]],[36,[[36,[8]]]],[36,[[36,[8]]]],[36,[[36,[8]]]],[36,[[36,[8]]]],[36,[[36,[8]]]],[36,[[36,[8]]]],[36,[[36,[8]]]],[36,[[36,[8]]]],[36,[[36,[8]]]],[36,[[36,[8]]]],[36,[[36,[8]]]],[36,[[36,[8]]]],[36,[[36,[8]]]],[36,[[36,[8]]]],[36,[[36,[8]]]],[36,[[36,[8]]]],[36,[[36,[8]]]],[36,[[36,[8]]]],[36,[[36,[8]]]],[36,[[36,[8]]]],[36,[[36,[8]]]],[2,37],[3,37],[[],37],[[],37],0,0,[[],23],[[],23],[[],48],[[],48],[[],3],[[3,[0,[49,50]]],40],0,[3,37],[3,37],[3,37],[3,3],[3,3],[[3,45],[[35,[40]]]],[3],[40],[51,25],[[41,[52,[37]]]],0,[[],25],0,[2,1],[2,1],[[1,2],1],[[3,[0,[39,50]]],3],[[],1],[[3,45],3],[[3,45],3],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],53],[[],53],[[],53],[[],53],[[],53],[[],53],[22,53],[[],53],[[],53],[[],53],[[],53],[[],53],[[],53],[[],53],[[],53],[[],53],[[],53],[[],53],[[],53],[[],53],[[],53],[[],53],[[],53],[[],53],[3],0,0],"c":[34,37,38,40],"p":[[3,"PluginGroupBuilder"],[8,"Plugin"],[3,"App"],[8,"Plugins"],[8,"ScheduleLabel"],[3,"Schedule"],[8,"IntoSystemConfigs"],[8,"Any"],[8,"DynEq"],[3,"Main"],[3,"PreStartup"],[3,"Startup"],[3,"PostStartup"],[3,"First"],[3,"PreUpdate"],[3,"StateTransition"],[3,"RunFixedUpdateLoop"],[3,"FixedUpdate"],[3,"Update"],[3,"PostUpdate"],[3,"Last"],[3,"AppLabelId"],[15,"str"],[3,"MainSchedulePlugin"],[3,"ScheduleRunnerPlugin"],[3,"AppExit"],[4,"RunMode"],[8,"TypeData"],[3,"Global"],[3,"Box"],[8,"IntoSystemSetConfig"],[8,"IntoSystemSetConfigs"],[3,"MainScheduleOrder"],[4,"Result"],[4,"Option"],[3,"Rc"],[15,"bool"],[8,"Hasher"],[8,"FnOnce"],[3,"SubApp"],[3,"World"],[3,"Formatter"],[6,"Result"],[3,"Vec"],[8,"AppLabel"],[8,"Resource"],[3,"Arc"],[3,"String"],[8,"Fn"],[8,"Send"],[3,"Duration"],[3,"Local"],[3,"TypeId"],[8,"PluginGroup"],[13,"Loop"]]},\
"bevy_derive":{"doc":"","t":"YYYYYX","n":["AppLabel","Deref","DerefMut","DynamicPlugin","EnumVariantMeta","bevy_main"],"q":[[0,"bevy_derive"]],"d":["Generates an impl of the <code>AppLabel</code> trait.","Implements <code>Deref</code> for structs. This is especially useful …","Implements <code>DerefMut</code> for structs. This is especially useful …","Generates a dynamic plugin entry point function for the …","",""],"i":[0,0,0,0,0,0],"f":[0,0,0,0,0,0],"c":[],"p":[]},\
"bevy_doryen":{"doc":"bevy_doryen is a Bevy plugin that lets you use Bevy with …","t":"NNNDDDDDDDDNDDNENDDDDEDNDDMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMLLLLLMMLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDRRRRRRRRRRRRRNNGDRRIINDDIDNNEELLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKFFFFFKMMLLMLKLLLLLLLLLLMLLLLLLLKLLLLKMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKKKKKLMKKKKLLLLLLLLLLLLKMLLLMMLKMKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLM","n":["Any","Automatic","Callback","Capture","DoryenPlugin","DoryenPluginSettings","First","FpsInfo","Input","Keys","Last","Left","MainRender","MainRenderScheduleOrder","Middle","MouseButton","Nothing","PostRender","PreRender","Render","RenderSchedulePlugin","ResizeMode","Resized","Right","RootConsole","SetFontPath","app_options","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","average_fps","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","close_requested","default","default","default","default","default","default","deref","deref_mut","doryen","dyn_clone","dyn_clone","dyn_clone","dyn_clone","dyn_clone","dyn_clone","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fps","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_world","from_world","from_world","from_world","from_world","from_world","hash","hash","hash","hash","hash","hash","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_iter","key","key_pressed","key_released","keys_pressed","keys_released","labels","mouse_button","mouse_button_listeners","mouse_button_pressed","mouse_button_released","mouse_pos","new","new","new_height","new_width","next","previous_height","previous_width","resize_mode","run_main_render","text","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","App","AppOptions","CHAR_CORNER_NE","CHAR_CORNER_NW","CHAR_CORNER_SE","CHAR_CORNER_SW","CHAR_LINE_H","CHAR_LINE_V","CHAR_SUBP_DIAG","CHAR_SUBP_E","CHAR_SUBP_N","CHAR_SUBP_NE","CHAR_SUBP_NW","CHAR_SUBP_SE","CHAR_SUBP_SW","Capture","Center","Color","Console","DEFAULT_CONSOLE_HEIGHT","DEFAULT_CONSOLE_WIDTH","DoryenApi","Engine","Exit","FileLoader","Image","InputApi","Keys","Left","Right","TextAlign","UpdateEvent","area","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","ascii","average_fps","back","blit","blit","blit_2x","blit_2x_image","blit_ex","blit_ex","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_ascii","borrow_background","borrow_foreground","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut_ascii","borrow_mut_background","borrow_mut_foreground","cell","check_file_ready","clear","clone","clone_into","clone_type_data","close_requested","color_add","color_blend","color_dist","color_mul","color_scale","con","console_height","console_width","default","default","font_path","fore","fps","from","from","from","from","from","from","from","from","from_world","from_world","fullscreen","get_ascii","get_back","get_file_content","get_fore","get_height","get_pot_height","get_pot_width","get_screen_size","get_size","get_width","height","init","input","intercept_close_request","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_iter","key","key_pressed","key_released","keys_pressed","keys_released","load_file","max_fps","mouse_button","mouse_button_pressed","mouse_button_released","mouse_pos","new","new","new","new","new_empty","next","pixel","print","print_color","put_pixel","rectangle","register_color","render","resizable","resize","resize","run","screen_height","screen_width","set_engine","set_font_path","show_cursor","text","text_color_len","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_get_size","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_load","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unsafe_ascii","unsafe_back","unsafe_fore","unsafe_get_ascii","unsafe_get_back","unsafe_get_fore","update","vsync","width","window_title"],"q":[[0,"bevy_doryen"],[456,"bevy_doryen::doryen"]],"d":["Represents any given button on a mouse.","Set the console size to match the window size …","Call the given function when the resize event is …","Emitting this event causes bevy_doryen to return …","The Bevy Doryen plugin.","DoryenPlugin settings.","Runs first in the schedule. This is run by the <code>MainRender</code> …","This resource contains the values given by <code>fps</code> and …","Provides access to the input events handled by the Doryen …","An iterator visiting all keys in arbitrary order.","Runs last in the schedule. This is run by the <code>MainRender</code> …","Represents the left button on a mouse.","The schedule that contains the render logic that is …","Defines the schedules to be run for the <code>Render</code> schedule, …","Represents the middle button on a mouse.","Represents buttons on a mouse.","Do nothing when the window is resized. This is the default …","The schedule that contains logic that must run after <code>Render</code>…","The schedule that contains logic that must run before …","The schedule that contains render logic.","Initializes the <code>Render</code> schedule, sub schedules, and …","How the <code>DoryenPlugin</code> reacts to the resize event from …","Resized event object. Whenever Doryen’s <code>resize</code> method is …","Represents the right button on a mouse.","Provides access to the root console of the Doryen engine.","When you want to change Doryen’s font path, emit an …","The <code>AppOptions</code> passed to the <code>DoryenApp</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The value given by <code>average_fps</code> on the current update tick.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Whether the window close button has been activated.","","","","","","","","","Re-export of the Doryen library types.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The value given by <code>fps</code> on the current update tick.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the current status of the given key (true if …","Returns true if the given key was pressed since the last …","Returns true if the given key was released since the last …","Returns an iterator over all the keys that were pressed …","Returns an iterator over all the keys that were released …","The labels to run for the <code>MainRender</code> schedule (in the …","Returns the current status of the given mouse button (true …","Which mouse buttons to request input data for from Doryen …","Returns true if the given mouse button was pressed since …","Returns true if the given mouse button was released since …","Returns the current mouse position in console cells …","Constructs a new <code>SetFontPath</code>","Constructs a new <code>Capture</code>","The new height of the Doryen game window.","The new width of the Doryen game window.","","The previous height of the Doryen game window.","The previous width of the Doryen game window.","What to do when the Doryen window is resized.","A system that runs the “main render schedule”","Characters typed since last update.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This is the game application. It handles the creation of …","","","","","","","","","","","","","","","Save a screenshot. parameter = file path. The file name …","","","This contains the data for a console (including the one …","","","This is the complete doryen-rs API provided to you by <code>App</code> …","This is the trait you must implement to update and render …","end the program","This provides a common way to load files for both native …","An easy way to load PNG images and blit them on the console","Provides information about user input. Possible values for …","An iterator visiting all keys in arbitrary order.","","","","What is returned by the <code>Engine::update</code> function","fill an area with values","","","","","","","","","","","","","","","","","set the character at a specific position (doesn’t change …","return the average framerate since the start of the game","set the background color at a specific position","blit (draw) a console onto another one You can use …","blit an image on a console","blit an image on the console, using the subcell characters …","blit an image on a console. See <code>Image::blit_2x</code>","blit a region of this console onto another one. see …","blit an image on a console","","","","","","","","","for fast reading of the characters values","for fast reading of the background colors","for fast reading of the characters colors","","","","","","","","","for fast writing of the characters values","for fast writing of the background colors","for fast writing of the characters colors","can change all properties of a console cell at once","return true if the file is ready in memory","fill the whole console with values","","","","Whether the window close button was clicked","","","","","","return the root console that you can use to draw things on …","the console height in characters. Default is 45","the console width in characters. Default is 80","","","the font to use. See <code>DoryenApi::set_font_path</code>. Default is …","set the character color at a specific position","return the current framerate","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Native only. Might not work on every platforms. Default is …","get the ascii code of a cell (if x,y inside the console)","get the background color of a cell (if x,y inside the …","retrieve the file content","get the foreground color of a cell (if x,y inside the …","","","","return the current screen size","","","Returns the image’s height in pixels or 0 if the image …","Called before the first game loop for one time …","return the input API to check user mouse and keyboard input","Intercepts clicks on the window close button. Can be …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","return the current status of a key (true if pressed)","return true if a key was pressed since last update.","return true if a key was released since last update.","return an iterator over all the keys that were pressed …","return an iterator over all the keys that were released …","request to load a file. returns an id you can use with …","Limit the number of frames per second to lower CPU …","return the current status of a mouse button (true if …","return true if a mouse button was pressed since last …","return true if a mouse button was released since last …","return the current mouse position in console cells …","","create a new offscreen console that you can blit on …","Create an image and load a PNG file. On the web platform, …","","Create an empty image.","","get the color of a specific pixel inside the image","write a string. If the string reaches the border of the …","write a multi-color string. Foreground color is defined by …","sets the color of a specific pixel inside the image","draw a rectangle, possibly filling it with a character.","associate a name with a color for this console. The color …","This is called before drawing the console on the screen. …","Whether the game window can be resized. Default is true.","This is called when the size of the game window has …","resizes the console","","the game window height in pixels","the game window width in pixels","","replace the current font by a new one. Put your font in …","Whether the mouse cursor should be visible in the game …","characters typed since last update","compute the length of a string containing color codes. …","","","","","","","","","","If the image has already been loaded, return its size, …","","","","","","","","","Check if the image has been loaded. Since there’s no …","","","","","","","","","set the character at a specific position (no boundary …","set the background color at a specific position (no …","set the character color at a specific position (no …","get the ascii code of a cell (no boundary check)","get the background color of a cell (no boundary check)","get the foreground color of a cell (no boundary check)","This is called 60 times per second and is independant of …","whether framerate are limited by the screen frequency. On …","Returns the image’s width in pixels or 0 if the image …","the title of the game window (only in native mode)"],"i":[13,18,18,0,0,0,0,0,0,0,0,13,0,0,13,0,18,0,0,0,0,0,0,13,0,0,26,22,30,13,13,2,2,4,4,5,5,6,6,7,7,8,8,24,10,25,12,26,14,15,16,17,18,22,30,13,2,4,5,6,7,8,24,10,25,12,26,14,15,16,17,18,2,2,4,4,5,5,6,6,7,7,8,8,2,4,5,6,7,8,14,22,30,13,2,4,5,6,7,8,24,10,25,12,26,14,15,16,17,18,22,30,13,2,4,5,6,7,8,24,10,25,12,26,14,15,16,17,18,10,12,13,2,4,5,6,7,8,10,12,14,15,16,17,18,13,2,4,5,6,7,8,10,12,14,15,16,17,18,13,2,4,5,6,7,8,10,12,14,15,16,17,18,22,22,24,25,12,26,14,25,25,0,2,4,5,6,7,8,13,2,4,5,6,7,8,2,2,4,4,5,5,6,6,7,7,8,8,13,2,4,5,6,7,8,13,13,13,2,2,2,4,4,4,5,5,5,6,6,6,7,7,7,8,8,8,22,30,13,2,4,5,6,7,8,24,10,25,12,26,14,15,16,17,18,14,22,30,13,2,4,5,6,7,8,24,10,25,12,26,14,15,16,17,18,22,24,25,12,26,14,2,4,5,6,7,8,22,30,13,2,4,5,6,7,8,24,10,25,12,26,14,15,16,17,18,22,30,13,2,4,5,6,7,8,24,10,25,12,26,14,15,16,17,18,22,30,13,2,4,5,6,7,8,24,10,25,12,26,14,15,16,17,18,22,30,13,2,4,5,6,7,8,24,10,25,12,26,14,15,16,17,18,30,22,22,22,22,22,24,22,26,22,22,22,15,17,16,16,30,16,16,26,2,22,13,2,4,5,6,7,8,10,12,14,15,16,17,18,22,30,13,2,4,5,6,7,8,24,10,25,12,26,14,15,16,17,18,22,30,13,2,4,5,6,7,8,24,10,25,12,26,14,15,16,17,18,22,30,13,2,4,5,6,7,8,24,10,25,12,26,14,15,16,17,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,60,52,0,0,0,0,0,0,60,0,0,0,0,52,52,0,0,40,60,53,58,40,45,56,52,50,60,53,58,40,45,56,52,50,40,54,40,40,45,45,45,40,45,60,53,58,40,45,56,52,50,40,40,40,60,53,58,40,45,56,52,50,40,40,40,40,50,40,52,52,52,55,0,0,0,0,0,54,53,53,53,50,53,40,54,60,53,58,40,45,56,52,50,53,50,53,40,40,50,40,40,40,40,54,40,40,45,59,54,53,60,53,58,40,45,56,52,50,60,53,58,40,45,56,52,50,60,53,40,45,56,52,50,60,53,58,40,45,56,52,50,56,55,55,55,55,55,50,53,55,55,55,55,58,40,45,50,45,56,45,40,40,45,40,40,59,53,59,40,58,53,53,58,54,53,55,40,52,60,53,58,40,45,56,52,50,45,60,53,58,40,45,56,52,50,45,60,53,58,40,45,56,52,50,40,40,40,40,40,40,59,53,45,53],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[2,3],[[],3],[[],3],[4,3],[[],3],[5,3],[[],3],[6,3],[7,3],[[],3],[8,3],[[],3],[2,9],[4,9],[5,9],[6,9],[7,9],[8,9],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[10,11]],[[12,11]],[13,13],[2,2],[4,4],[5,5],[6,6],[7,7],[8,8],[10,10],[12,12],[14,14],[15,15],[16,16],[17,17],[18,18],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[21,[19,20]]]],[[],[[21,[19,20]]]],[[],[[21,[19,20]]]],[[],[[21,[19,20]]]],[[],[[21,[19,20]]]],[[],[[21,[19,20]]]],[[],[[21,[19,20]]]],[[],[[21,[19,20]]]],[[],[[21,[19,20]]]],[[],[[21,[19,20]]]],[[],[[21,[19,20]]]],[[],[[21,[19,20]]]],[[],[[21,[19,20]]]],[[],[[21,[19,20]]]],[22,23],[[],22],[[],24],[[],25],[[],12],[[],26],[[],14],[25],[25],0,[2,[[21,[9]]]],[4,[[21,[9]]]],[5,[[21,[9]]]],[6,[[21,[9]]]],[7,[[21,[9]]]],[8,[[21,[9]]]],[3,23],[3,23],[3,23],[3,23],[3,23],[3,23],[3,23],[[2,27]],[27],[[4,27]],[27],[[5,27]],[27],[27],[[6,27]],[27],[[7,27]],[27],[[8,27]],[[13,13],23],[[2,2],23],[[4,4],23],[[5,5],23],[[6,6],23],[[7,7],23],[[8,8],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[22,28],29],[[30,28],29],[[13,28],29],[[2,28],29],[[4,28],29],[[5,28],29],[[6,28],29],[[7,28],29],[[8,28],29],[[24,28],29],[[10,28],29],[[25,28],29],[[12,28],29],[[26,28],29],[[14,28],29],[[15,28],29],[[16,28],29],[[17,28],29],[[18,28],29],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[31],[31],[31],[31],[31],[31],[[2,27]],[[4,27]],[[5,27]],[[6,27]],[[7,27]],[[8,27]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[32,[[32,[1]]]],[32,[[32,[1]]]],[32,[[32,[1]]]],[32,[[32,[1]]]],[32,[[32,[1]]]],[32,[[32,[1]]]],[32,[[32,[1]]]],[32,[[32,[1]]]],[32,[[32,[1]]]],[32,[[32,[1]]]],[32,[[32,[1]]]],[32,[[32,[1]]]],[32,[[32,[1]]]],[32,[[32,[1]]]],[32,[[32,[1]]]],[32,[[32,[1]]]],[32,[[32,[1]]]],[32,[[32,[1]]]],[32,[[32,[1]]]],[33,[[33,[1]]]],[33,[[33,[1]]]],[33,[[33,[1]]]],[33,[[33,[1]]]],[33,[[33,[1]]]],[33,[[33,[1]]]],[33,[[33,[1]]]],[33,[[33,[1]]]],[33,[[33,[1]]]],[33,[[33,[1]]]],[33,[[33,[1]]]],[33,[[33,[1]]]],[33,[[33,[1]]]],[33,[[33,[1]]]],[33,[[33,[1]]]],[33,[[33,[1]]]],[33,[[33,[1]]]],[33,[[33,[1]]]],[33,[[33,[1]]]],[[]],[[22,34],23],[[22,34],23],[[22,34],23],[22,30],[22,30],0,[[22,13],23],0,[[22,13],23],[[22,13],23],[22],[[[36,[[35,[34]]]]],15],[[[36,[[35,[34]]]]],17],0,0,[30,37],0,0,0,[31],[22,34],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[40,41,41,42,42,37,37,[37,[43]]]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[40,41,41,43]],[[],42],[[40,41,41]],[[40,41,41,40,44,44,37]],[[45,40,41,41,37]],[[45,40,41,41,41,41,[37,[41]],[37,[41]],37]],[[[49,[[47,[46]],[48,[46,20]]]],40,41,41,41,41,[37,[41]],[37,[41]],37]],[[40,41,41,41,41,40,41,41,44,44,37]],[[45,40,44,44,44,44,44,37]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[40,[[48,[42,20]]]],[40,[[48,[20]]]],[40,[[48,[20]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[40,[[48,[42,20]]]],[40,[[48,[20]]]],[40,[[48,[20]]]],[[40,41,41,[37,[43]],37,37]],[[50,51],23],[[40,37,37,[37,[43]]]],[52,52],[[]],[[],[[21,[19,20]]]],[[],23],[[]],[44],[[],41],[[]],[44],[[],40],0,0,[[],53],[[],50],0,[[40,41,41]],[[],42],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[31],[31],0,[[40,41,41],[[37,[43]]]],[[40,41,41],37],[[50,51],[[48,[46,20]]]],[[40,41,41],37],[40,42],[40,42],[40,42],[[]],[40],[40,42],[45,42],[54],[[],55],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[32,[[32,[1]]]],[32,[[32,[1]]]],[32,[[32,[1]]]],[32,[[32,[1]]]],[32,[[32,[1]]]],[32,[[32,[1]]]],[32,[[32,[1]]]],[33,[[33,[1]]]],[33,[[33,[1]]]],[33,[[33,[1]]]],[33,[[33,[1]]]],[33,[[33,[1]]]],[33,[[33,[1]]]],[33,[[33,[1]]]],[33,[[33,[1]]]],[[]],[34,23],[34,23],[34,23],[[],56],[[],56],[[50,34],[[38,[51,57]]]],0,[51,23],[51,23],[51,23],[[]],[53,58],[[42,42],40],[34,45],[[],50],[[42,42],45],[56,37],[[45,42,42],37],[[40,41,41,34,52,37,37]],[[40,41,41,34,52,37]],[[45,42,42]],[[40,41,41,42,42,37,37,[37,[43]]]],[[40,34]],[54],0,[54],[[40,42,42]],[58],0,0,[[58,[21,[59,20]]]],[34],0,[[],57],[34,51],[[]],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[45,37],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[45,23],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[40,41,41,43]],[[40,41,41]],[[40,41,41]],[[40,41,41],43],[[40,41,41]],[[40,41,41]],[54,[[37,[60]]]],0,[45,42],0],"c":[],"p":[[8,"Any"],[3,"MainRender"],[8,"DynEq"],[3,"First"],[3,"PreRender"],[3,"Render"],[3,"PostRender"],[3,"Last"],[8,"ScheduleLabel"],[3,"RenderSchedulePlugin"],[3,"App"],[3,"DoryenPlugin"],[4,"MouseButton"],[3,"FpsInfo"],[3,"SetFontPath"],[3,"Resized"],[3,"Capture"],[4,"ResizeMode"],[8,"TypeData"],[3,"Global"],[3,"Box"],[3,"Input"],[15,"bool"],[3,"MainRenderScheduleOrder"],[3,"RootConsole"],[3,"DoryenPluginSettings"],[8,"Hasher"],[3,"Formatter"],[6,"Result"],[3,"Keys"],[3,"World"],[3,"Arc"],[3,"Rc"],[15,"str"],[4,"Cow"],[8,"Into"],[4,"Option"],[4,"Result"],[3,"TypeId"],[3,"Console"],[15,"i32"],[15,"u32"],[15,"u16"],[15,"f32"],[3,"Image"],[15,"u8"],[3,"Rgba"],[3,"Vec"],[3,"ImageBuffer"],[3,"FileLoader"],[15,"usize"],[4,"TextAlign"],[3,"AppOptions"],[8,"DoryenApi"],[8,"InputApi"],[3,"Keys"],[3,"String"],[3,"App"],[8,"Engine"],[4,"UpdateEvent"]]},\
"bevy_ecs":{"doc":"Bevy ECS","t":"OAAAAAAACAAAAAAADDDDDDDSDSSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLIYDDDILLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLRIIQRDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLKLLLLLLKLLLLLLLLLLLLLLLLLLKLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLIYDDDDIDDSSNDQENDDDMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDDISDLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLIYDDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDNDIDDQDDDSSQNNNDDDNEGGDDDEDGGQIQDDIYLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDDDLLMMLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLMMLLLLLLLLLLLLLLLLMLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLMLLMMLLMMLLLLLLLLLLLLLLLLLLLLLLLLDDDDGGLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNGDGGGINNDNNNENNNNIIIIQEDNDDEDDDDGDEDDIYDNQNNDNDDIYNDNEDIYDDDNNNLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLFLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLKKLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLFLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMKMMMFFFFFFFFFFFFFFFFFDDDDDIDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMKMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLGDIIDDDDIDDIIGDDQQQQDDDDIQQDDNNNNDCQQQQDQQDGDEIIDDCCIYDDQQDIQIDDDIYIGDDALLKKKLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMKLLLLLLLLLLLLKLLKLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLKKLLLLLLLLLLLLLLLLLLLLLLLLKLLLKLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLKLLLKLLLLLLLLLLLLLLLALLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMKKLLLLLLKLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLFFFFFFFGGGGGGCDDICCDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLDLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["all_tuples","archetype","bundle","change_detection","component","entity","event","prelude","ptr","query","reflect","removal_detection","schedule","storage","system","world","Archetype","ArchetypeComponentId","ArchetypeEntity","ArchetypeGeneration","ArchetypeId","ArchetypeRow","Archetypes","EMPTY","Edges","INVALID","INVALID","archetype_components_len","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_dyn_eq","as_dyn_eq","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","cmp","components","contains","default","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_hash","dyn_hash","edges","empty","entities","entity","entity_table_row","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_world","generation","get","get_add_bundle","get_archetype_component_id","get_param","get_remove_bundle","get_sparse_set_index","get_storage_type","get_take_bundle","hash","hash","id","index","index","index_mut","init_state","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_empty","iter","len","len","new","partial_cmp","sparse_set_components","sparse_set_index","table_components","table_id","table_row","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","Bundle","Bundle","BundleId","BundleInfo","Bundles","DynamicBundle","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_dyn_eq","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","clone_type_data","components","default","dyn_eq","dyn_hash","eq","equivalent","equivalent","equivalent","fmt","from","from","from","from_world","get","get_id","get_param","get_sparse_set_index","hash","id","index","init_state","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","sparse_set_index","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","CHECK_TICK_THRESHOLD","DetectChanges","DetectChangesMut","Inner","MAX_CHANGE_AGE","Mut","MutUntyped","NonSendMut","Ref","Res","ResMut","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_mut","as_mut","as_mut","as_mut","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bypass_change_detection","bypass_change_detection","bypass_change_detection","bypass_change_detection","bypass_change_detection","clone","clone_fetch","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","fetch","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","get_param","get_param","get_param","init_fetch","init_state","init_state","init_state","init_state","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","is_added","is_added","is_added","is_added","is_added","is_added","is_added","is_changed","is_changed","is_changed","is_changed","is_changed","is_changed","is_changed","last_changed","last_changed","last_changed","last_changed","last_changed","last_changed","last_changed","map","map_unchanged","map_unchanged","map_unchanged","matches_component_set","new","new","reborrow","reborrow","reborrow","reborrow","set_archetype","set_changed","set_changed","set_changed","set_changed","set_changed","set_if_neq","set_last_changed","set_last_changed","set_last_changed","set_last_changed","set_last_changed","set_table","shrink","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","update_archetype_component_access","update_component_access","with_type","Component","Component","ComponentDescriptor","ComponentId","ComponentIdFor","ComponentInfo","ComponentStorage","ComponentTicks","Components","MAX","STORAGE_TYPE","SparseSet","SparseStorage","Storage","StorageType","Table","TableStorage","Tick","TickCells","added","added_tick","apply","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_dyn_eq","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","changed","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","cmp","component_id","default","default","deref","drop","dyn_eq","dyn_eq","dyn_eq","dyn_hash","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from_world","from_world","get","get","get_id","get_info","get_info_unchecked","get_name","get_param","get_param","get_resource_id","get_sparse_set_index","hash","id","index","init_component","init_component_with_descriptor","init_non_send","init_resource","init_state","init_state","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_added","is_changed","is_empty","is_newer_than","is_send_and_sync","iter","last_changed_tick","layout","len","name","name","new","new","new","new_archetype","new_resource","new_with_layout","partial_cmp","resource_id","set","set_changed","sparse_set_index","storage_type","storage_type","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","Entities","Entity","EntityLocation","EntityMap","EntityMapper","MapEntities","PLACEHOLDER","ReserveEntitiesIterator","alloc","alloc_at","apply","archetype_id","archetype_row","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_dyn_eq","as_reflect","as_reflect_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clone","clone","clone_fetch","clone_into","clone_into","clone_type_data","clone_type_data","clone_value","cmp","contains","crate_name","default","deserialize","dyn_eq","dyn_hash","entry","eq","eq","equivalent","equivalent","equivalent","erased_serialize","fetch","flush","flush_and_reserve_invalid_assuming_no_entities","flush_as_invalid","fmt","fmt","fmt","fmt","free","from","from","from","from","from","from","from","from_bits","from_raw","from_reflect","from_world","generation","get","get","get_map","get_map_mut","get_or_reserve","get_param","get_represented_type_info","get_sparse_set_index","get_type_registration","hash","index","init_fetch","init_state","init_state","insert","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_iter","into_reflect","is_empty","is_empty","iter","keys","len","len","map_entities","matches_component_set","module_path","next","partial_cmp","reflect_crate_name","reflect_hash","reflect_module_path","reflect_mut","reflect_owned","reflect_partial_eq","reflect_path","reflect_path_mut","reflect_ref","reflect_short_type_path","reflect_type_ident","reflect_type_path","remove","reserve","reserve_entities","reserve_entity","resolve_from_id","serialize","set","set_archetype","set_table","short_type_path","shrink","size_hint","sparse_set_index","table_id","table_row","to_bits","to_owned","to_owned","total_count","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_ident","type_info","type_name","type_path","update_archetype_component_access","update_component_access","values","world_scope","Event","Event","EventId","EventReader","EventWriter","Events","ManualEventIterator","ManualEventIteratorWithId","ManualEventReader","apply","apply","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_dyn_eq","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clear","clear","clone","clone_into","clone_type_data","cmp","count","count","default","default","drain","dyn_eq","dyn_hash","eq","equivalent","equivalent","equivalent","extend","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_world","from_world","get_event","get_param","get_param","get_reader","get_reader_current","hash","id","init_state","init_state","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_iter","into_iter","into_iter","is_empty","is_empty","is_empty","iter","iter","iter_current_update_events","iter_with_id","iter_with_id","last","last","len","len","len","len","len","missed_events","new","new_archetype","new_archetype","next","next","nth","nth","oldest_event_count","oldest_id","partial_cmp","send","send","send_batch","send_default","send_default","size_hint","size_hint","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update","update_system","without_id","Access","Added","AliasedMutability","AnyOf","ArchetypeFilter","BatchingStrategy","Changed","Fetch","FilteredAccess","FilteredAccessSet","Has","IS_ARCHETYPAL","IS_DENSE","Item","MultipleEntities","NoEntities","NoSuchEntity","NopWorldQuery","Or","QueryCombinationIter","QueryDoesNotMatch","QueryEntityError","QueryFetch","QueryItem","QueryIter","QueryManyIter","QueryParIter","QuerySingleError","QueryState","ROQueryFetch","ROQueryItem","ReadOnly","ReadOnlyWorldQuery","State","With","Without","WorldQuery","WorldQuery","access","access_mut","add","add_read","add_read","add_write","add_write","and_with","and_without","append_or","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_nop","as_readonly","batch_size_limits","batches_per_thread","batches_per_thread","batching_strategy","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clear","clone","clone","clone","clone","clone","clone_fetch","clone_fetch","clone_fetch","clone_fetch","clone_fetch","clone_fetch","clone_fetch","clone_fetch","clone_fetch","clone_fetch","clone_fetch","clone_fetch","clone_fetch","clone_fetch","clone_fetch","clone_fetch","clone_fetch","clone_fetch","clone_fetch","clone_fetch","clone_fetch","clone_fetch","clone_fetch","clone_fetch","clone_fetch","clone_fetch","clone_fetch","clone_fetch","clone_fetch","clone_fetch","clone_fetch","clone_fetch","clone_fetch","clone_fetch","clone_fetch","clone_fetch","clone_fetch","clone_fetch","clone_fetch","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","combined_access","default","default","default","dyn_eq","dyn_eq","dyn_eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extend","extend","extend","extend_access","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch_next","fetch_next","filter_fetch","filter_fetch","filter_fetch","filter_fetch","filter_fetch","filter_fetch","filter_fetch","filter_fetch","filter_fetch","filter_fetch","filter_fetch","filter_fetch","filter_fetch","filter_fetch","filter_fetch","filter_fetch","filter_fetch","filter_fetch","filter_fetch","filter_fetch","fixed","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","for_each","for_each","for_each_mut","for_each_mut","for_each_unchecked","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_world","from_world","from_world","from_world","get","get_conflicts","get_conflicts","get_conflicts","get_conflicts_single","get_manual","get_many","get_many_mut","get_mut","get_param","get_single","get_single_mut","get_single_unchecked","get_single_unchecked_manual","get_unchecked","grow","has_any_write","has_read","has_read_all","has_write","init","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_iter","into_iter","into_iter","is_compatible","is_compatible","is_compatible","is_empty","iter","iter_combinations","iter_combinations_mut","iter_combinations_unchecked","iter_manual","iter_many","iter_many_manual","iter_many_mut","iter_mut","iter_unchecked","len","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","max_batch_size","min_batch_size","new","new","new","new_archetype","next","next","next","par_iter","par_iter_mut","provide","provide","read_all","read_all","reads","reads_and_writes","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","single","single_mut","size_hint","size_hint","size_hint","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetypes","update_archetypes_unsafe_world_cell","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","validate_world","writes","AppTypeRegistry","ReflectComponent","ReflectComponentFns","ReflectMapEntities","ReflectResource","ReflectResourceFns","apply","apply","apply","apply","apply_or_insert","apply_or_insert","apply_or_insert","apply_or_insert","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","contains","contains","copy","copy","copy","copy","default","deref","deref_mut","fn_pointers","fn_pointers","from","from","from","from","from","from","from_type","from_type","from_type","from_world","from_world","from_world","insert","insert","insert","insert","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","map_all_entities","map_entities","new","new","new","new","reflect","reflect","reflect","reflect","reflect_mut","reflect_mut","reflect_mut","reflect_unchecked_mut","reflect_unchecked_mut","reflect_unchecked_mut","reflect_unchecked_mut","remove","remove","remove","remove","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","RemovedComponentEntity","RemovedComponentEvents","RemovedComponentReader","RemovedComponents","RemovedIter","RemovedIterWithId","apply","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clone","clone_into","clone_type_data","default","default","deref","deref_mut","events","fmt","fmt","fmt","from","from","from","from","from_world","from_world","get","get_param","get_param","init_state","init_state","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_iter","is_empty","iter","iter_with_id","len","new","new_archetype","reader","reader_mut","reader_mut_with_events","send","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","update","Ambiguity","AndThen","AnonymousSet","BoxedCondition","BoxedScheduleLabel","BoxedSystemSet","Condition","Configs","CrossDependency","Dag","DependencyCycle","DependencyLoop","Error","ExecutorKind","HierarchyCycle","HierarchyLoop","HierarchyRedundancy","Ignore","IntoSystemConfigs","IntoSystemSet","IntoSystemSetConfig","IntoSystemSetConfigs","Iter","LogLevel","MainThreadExecutor","MultiThreaded","MultiThreadedExecutor","NextState","NodeId","NotSystem","OnEnter","OnExit","OnTransition","OrElse","Schedule","ScheduleBuildError","ScheduleBuildSettings","ScheduleGraph","ScheduleLabel","ScheduleLabel","Schedules","Set","Set","SetsHaveOrderButIntersect","Simple","SimpleExecutor","SingleThreaded","SingleThreadedExecutor","State","States","States","System","SystemConfig","SystemConfig","SystemConfigs","SystemSchedule","SystemSet","SystemSet","SystemSetConfig","SystemSetConfigs","SystemTypeSet","SystemTypeSetAmbiguity","Uninitialized","Warn","add_system","add_systems","after","after","after","after","after","after","after","after","after","ambiguity_detection","ambiguous_with","ambiguous_with","ambiguous_with","ambiguous_with","ambiguous_with","ambiguous_with","ambiguous_with","ambiguous_with","ambiguous_with","ambiguous_with_all","ambiguous_with_all","ambiguous_with_all","ambiguous_with_all","ambiguous_with_all","ambiguous_with_all","ambiguous_with_all","ambiguous_with_all","ambiguous_with_all","and_then","and_then","apply_deferred","apply_deferred","apply_deferred","apply_state_transition","archetype_component_access","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_ref","as_ref","as_ref","as_ref","before","before","before","before","before","before","before","before","before","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_schedule","cached_topsort","chain","chain","chain","chain","chain","chain","check_change_tick","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","cmp","common_conditions","component_access","configure_set","configure_sets","conflicting_systems","contains","default","default","default","default","default","default","default","default","default","default","default","default","default","dependency","deref","distributive_run_if","distributive_run_if","distributive_run_if","dyn_clone","dyn_clone","dyn_clone","dyn_clone","dyn_clone","dyn_clone","dyn_clone","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","get","get","get_executor_kind","get_last_run","get_mut","get_set_at","get_system_at","graph","graph","graph_mut","hash","hash","hash","hash","hash","hash","hash","hash","hierarchy","hierarchy_detection","in_schedule","in_schedule","in_schedule","in_schedule","in_schedule","in_schedule","in_set","in_set","in_set","in_set","in_set","in_set","in_set","in_set","in_set","initialize","initialize","initialize","inner_type_id","inner_type_id","insert","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_config","into_config","into_configs","into_system","into_system_set","into_system_set","into_system_set","is_anonymous","is_anonymous","is_anonymous","is_exclusive","is_send","is_set","is_system","iter","iter_mut","name","new","new","new","new","new","new","new","new","new","new","on_startup","on_startup","on_startup","on_startup","on_startup","on_startup","or_else","or_else","partial_cmp","provide","remove","remove_entry","report_sets","run","run","run_enter_schedule","run_if","run_if","run_if","run_if","run_if","run_if","run_unsafe","set","set_apply_final_deferred","set_at","set_build_settings","set_executor_kind","set_last_run","system_at","system_sets","system_type","system_type","system_type","systems","to","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update_archetype_component_access","use_shortnames","variants","chained","collective_conditions","configs","any_component_removed","any_with_component","in_state","not","on_event","resource_added","resource_changed","resource_changed_or_removed","resource_equals","resource_exists","resource_exists_and_changed","resource_exists_and_equals","resource_removed","run_once","state_changed","state_exists","state_exists_and_equals","Column","ComponentSparseSet","ResourceData","Resources","SparseSet","SparseSetIndex","SparseSets","Storages","Table","TableId","TableRow","Tables","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capacity","clear","clear","clear","clone","clone","clone_into","clone_into","clone_type_data","clone_type_data","component_count","contains","contains","default","default","default","default","default","drop","dyn_eq","dyn_eq","empty","entities","entity_capacity","entity_count","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from_world","from_world","from_world","from_world","from_world","get","get","get","get","get","get","get_added_ticks","get_added_ticks","get_added_ticks_slice","get_added_ticks_unchecked","get_changed_ticks","get_changed_ticks","get_changed_ticks_slice","get_changed_ticks_unchecked","get_column","get_data","get_data","get_data_mut","get_data_ptr","get_data_slice","get_data_unchecked","get_mut","get_or_insert_with","get_sparse_set_index","get_ticks","get_ticks","get_ticks","get_ticks_unchecked","get_with_ticks","has_column","id","index","index","index","index_mut","indices","insert","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_present","item_layout","iter","iter","iter","iter","iter","iter_mut","len","len","len","len","len","len","new","new","new","non_send_resources","remove","resources","sparse_set_index","sparse_sets","tables","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","values","values_mut","with_capacity","BoxedSystem","CombinatorSystem","Combine","Command","CommandQueue","Commands","Deferred","Despawn","EntityCommand","EntityCommands","ExclusiveFunctionSystem","ExclusiveSystemParam","ExclusiveSystemParamFunction","ExclusiveSystemParamItem","FunctionSystem","In","In","In","In","In","InitResource","Insert","InsertOrSpawnBatch","InsertResource","IntoSystem","Item","Item","Local","LogComponents","MissingComponent","MissingReadAccess","MissingWriteAccess","NoSuchEntity","NonSend","NonSendMut","Out","Out","Out","Out","ParallelCommands","Param","Param","ParamSet","PipeSystem","Query","QueryComponentError","ReadOnlySystem","ReadOnlySystemParam","Remove","RemoveResource","Res","ResMut","Resource","Resource","Spawn","SpawnBatch","State","State","StaticSystemParam","System","System","SystemBuffer","SystemChangeTick","SystemMeta","SystemName","SystemParam","SystemParam","SystemParamFunction","SystemParamItem","SystemState","WithEntity","adapter","add","add","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply_deferred","apply_deferred","apply_deferred","apply_deferred","archetype_component_access","archetype_component_access","archetype_component_access","archetype_component_access","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_ref","assert_is_read_only_system","assert_is_system","assert_system_does_not_conflict","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bundle","bundle","bundles_iter","bundles_iter","check_change_tick","check_change_tick","check_change_tick","check_change_tick","clone","clone","clone","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","combine","command_scope","commands","component_access","component_access","component_access","component_access","contains","default","default_system_sets","default_system_sets","default_system_sets","default_system_sets","default_system_sets","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","despawn","dyn_eq","entity","entity","entity","entity","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","for_each","for_each_mut","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_world","from_world","get","get","get_component","get_component_mut","get_component_unchecked_mut","get_entity","get_inner","get_last_run","get_last_run","get_last_run","get_last_run","get_manual","get_manual_mut","get_many","get_many_mut","get_mut","get_mut","get_or_spawn","get_param","get_param","get_param","get_param","get_param","get_param","get_param","get_param","get_param","get_param","get_param","get_param","get_param","get_param","get_param","get_param","get_param","get_param","get_param","get_param","get_param","get_single","get_single_mut","get_unchecked","get_unchecked_manual","id","init","init","init","init_resource","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","initialize","initialize","initialize","initialize","insert","insert_or_spawn_batch","insert_resource","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_configs","into_configs","into_configs","into_inner","into_iter","into_iter","into_iter","into_iter","into_system","into_system","into_system","into_system","is_added","is_changed","is_empty","is_exclusive","is_exclusive","is_exclusive","is_exclusive","is_send","is_send","is_send","is_send","is_send","iter","iter_combinations","iter_combinations_mut","iter_combinations_unsafe","iter_inner","iter_many","iter_many_mut","iter_many_unsafe","iter_mut","iter_unsafe","last_run","lifetimeless","log_components","many","many_mut","matches_world","meta","name","name","name","name","name","name","new","new","new","new","new","new","new_archetype","new_archetype","new_archetype","new_archetype","new_archetype","new_archetype","new_archetype","new_archetype","new_archetype","new_archetype","new_archetype","new_archetype","new_archetype","new_archetype","new_from_entities","p0","p0","p0","p0","p0","p0","p0","p0","p1","p1","p1","p1","p1","p1","p1","p2","p2","p2","p2","p2","p2","p3","p3","p3","p3","p3","p4","p4","p4","p4","p5","p5","p5","p6","p6","p7","par_iter","par_iter_mut","pipe","provide","push","remove","remove_resource","resource","run","run","run","run","run","run","run_readonly","run_readonly","run_unsafe","run_unsafe","run_unsafe","run_unsafe","set_last_run","set_last_run","set_last_run","set_last_run","set_non_send","single","single_mut","spawn","spawn_batch","spawn_empty","this_run","to_owned","to_owned","to_owned","to_readonly","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetypes","update_archetypes_unsafe_world_cell","with_entity","with_entity","dbg","error","ignore","info","new","unwrap","warn","Read","SCommands","SQuery","SRes","SResMut","Write","CHECK_TICK_THRESHOLD","EntityMut","EntityRef","FromWorld","Mut","Ref","SpawnBatchIter","World","WorldBorrow","WorldBorrowMut","WorldCell","WorldId","add_schedule","archetype","archetype","archetypes","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_dyn_eq","as_unsafe_world_cell","as_unsafe_world_cell_readonly","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bundles","cell","change_tick","check_change_ticks","clear_all","clear_entities","clear_resources","clear_trackers","clone","clone","clone_fetch","clone_into","clone_into","clone_type_data","clone_type_data","component_id","components","contains","contains","contains_id","contains_id","contains_non_send","contains_resource","contains_type_id","contains_type_id","default","deref","deref","deref_mut","despawn","despawn","drop","drop","drop","drop","dyn_eq","dyn_hash","entities","entities_mut","entity","entity_mut","eq","equivalent","equivalent","equivalent","error","fetch","fmt","fmt","from","from","from","from","from","from","from","from","from","from_world","from_world","from_world","get","get","get","get_by_id","get_by_id","get_by_id","get_change_ticks","get_change_ticks","get_change_ticks_by_id","get_change_ticks_by_id","get_entity","get_entity_mut","get_mut","get_mut","get_mut_by_id","get_mut_by_id","get_non_send_by_id","get_non_send_mut_by_id","get_non_send_resource","get_non_send_resource","get_non_send_resource_mut","get_non_send_resource_mut","get_or_spawn","get_param","get_param","get_ref","get_resource","get_resource","get_resource_by_id","get_resource_mut","get_resource_mut","get_resource_mut_by_id","get_resource_or_insert_with","get_sparse_set_index","hash","id","id","id","increment_change_tick","init_component","init_component_with_descriptor","init_fetch","init_non_send_resource","init_resource","init_state","init_state","init_state","insert","insert_by_id","insert_by_ids","insert_non_send_by_id","insert_non_send_resource","insert_or_spawn_batch","insert_resource","insert_resource_by_id","inspect_entity","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_iter","into_world_mut","is_resource_added","is_resource_changed","iter_entities","last_change_tick","len","location","location","matches_component_set","new","new","next","non_send_resource","non_send_resource","non_send_resource_mut","non_send_resource_mut","query","query_filtered","read_change_tick","remove","remove_non_send_by_id","remove_non_send_resource","remove_resource","remove_resource_by_id","removed","removed_components","removed_with_id","resource","resource","resource_mut","resource_mut","resource_scope","run_schedule","run_schedule_ref","schedule_scope","send_event","send_event","send_event_batch","send_event_batch","send_event_default","send_event_default","set_archetype","set_table","shrink","size_hint","sparse_set_index","spawn","spawn_batch","spawn_empty","storages","take","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_run_schedule","try_schedule_scope","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unsafe_world_cell","update_archetype_component_access","update_component_access","update_location","world","world","world_mut","world_scope","TryRunScheduleError","as_any","as_any_mut","borrow","borrow_mut","fmt","fmt","from","into","into_any","into_any_arc","into_any_rc","provide","to_string","try_from","try_into","type_id","UnsafeEntityCell","UnsafeWorldCell","archetype","archetypes","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","bundles","change_tick","clone","clone","clone_into","clone_into","clone_type_data","clone_type_data","components","contains","contains_id","contains_type_id","entities","from","from","get","get_by_id","get_change_ticks","get_change_ticks_by_id","get_entity","get_mut","get_mut_by_id","get_non_send_resource","get_non_send_resource_by_id","get_non_send_resource_mut","get_non_send_resource_mut_by_id","get_ref","get_resource","get_resource_by_id","get_resource_mut","get_resource_mut_by_id","id","id","increment_change_tick","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","last_change_tick","location","read_change_tick","storages","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","world","world","world_metadata","world_mut"],"q":[[0,"bevy_ecs"],[16,"bevy_ecs::archetype"],[209,"bevy_ecs::bundle"],[276,"bevy_ecs::change_detection"],[463,"bevy_ecs::component"],[718,"bevy_ecs::entity"],[915,"bevy_ecs::event"],[1089,"bevy_ecs::query"],[1914,"bevy_ecs::reflect"],[2066,"bevy_ecs::removal_detection"],[2153,"bevy_ecs::schedule"],[2861,"bevy_ecs::schedule::SystemConfigs"],[2864,"bevy_ecs::schedule::common_conditions"],[2881,"bevy_ecs::storage"],[3134,"bevy_ecs::system"],[3904,"bevy_ecs::system::adapter"],[3911,"bevy_ecs::system::lifetimeless"],[3917,"bevy_ecs::world"],[4202,"bevy_ecs::world::error"],[4219,"bevy_ecs::world::unsafe_world_cell"]],"d":["Helper macro to generate tuple pyramids. Useful to …","Types for defining <code>Archetype</code>s, collections of entities …","Types for handling <code>Bundle</code>s.","Types that detect when their internal data mutate.","Types for declaring and storing <code>Component</code>s.","Entity handling types.","Event handling types.","Most commonly used re-exported types.","","Contains APIs for retrieving component data from the world.","Types that enable reflection support.","Alerting events when a component is removed from an entity.","Contains APIs for ordering systems and executing them on a …","Storage layouts for ECS data.","Tools for controlling behavior in an ECS application.","Defines the <code>World</code> and APIs for accessing it directly.","Metadata for a single archetype within a <code>World</code>.","An opaque unique joint ID for a <code>Component</code> in an <code>Archetype</code> …","Metadata about an <code>Entity</code> in a <code>Archetype</code>.","An opaque generational id that changes every time the set …","An opaque unique ID for a single <code>Archetype</code> within a <code>World</code>.","An opaque location within a <code>Archetype</code>.","The backing store of all <code>Archetype</code>s within a <code>World</code>.","The ID for the <code>Archetype</code> without any components.","Archetypes and bundles form a graph. Adding or removing a …","Index indicating an invalid archetype row. This is meant …","Safety:","Returns the number of components that are stored in …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Gets an iterator of all of the components in the archetype.","Checks if the archetype contains a specific component. …","","","","","","","","Fetches a immutable reference to the archetype’s <code>Edges</code>, …","Fetches an immutable reference to the archetype without …","Fetches the entities contained in this archetype.","The ID of the entity.","Fetches the row in the <code>Table</code> where the components for the …","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the current archetype generation. This is an ID …","Fetches an immutable reference to an <code>Archetype</code> using its …","Checks the cache for the target archetype when adding a …","Fetches the corresponding <code>ArchetypeComponentId</code> for a …","","Checks the cache for the target archetype when removing a …","","Gets the type of storage where a component in the …","Checks the cache for the target archetype when removing a …","","","Fetches the ID for the archetype.","","Gets the index of the row.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Checks if the archetype has any entities.","Returns a read-only iterator over all archetypes.","Gets the total number of entities that belong to the …","Fetches the total number of <code>Archetype</code>s within the world.","Creates a <code>ArchetypeRow</code>.","","Gets an iterator of all of the components stored in …","","Gets an iterator of all of the components stored in <code>Table</code>s.","Fetches the archetype’s <code>Table</code> ID.","The row in the <code>Table</code> where the entity’s components are …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The <code>Bundle</code> trait enables insertion and removal of <code>Component</code>…","","For a specific <code>World</code>, this stores a unique value …","Stores metadata associated with a specific type of <code>Bundle</code> …","Metadata for bundles. Stores a <code>BundleInfo</code> for each type of …","The parts from <code>Bundle</code> that don’t require statically …","","","","","","","","","","","","","","","","","","Returns the ID of each component stored in this bundle.","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Gets the metadata associated with a specific type of …","Gets the value identifying a specific type of bundle. …","","","","Returns a value identifying the associated <code>Bundle</code> type.","Returns the index of the associated <code>Bundle</code> type.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","The (arbitrarily chosen) minimum number of world tick …","Types that can read change detection information. This …","Types that implement reliable change detection.","The type contained within this smart pointer","The maximum change tick difference that won’t overflow …","Unique mutable borrow of an entity’s component","Unique mutable borrow of resources or an entity’s …","Unique borrow of a non-<code>Send</code> resource.","Shared borrow of an entity’s component with access to …","Shared borrow of a <code>Resource</code>.","Unique mutable borrow of a <code>Resource</code>.","","","","","","","","","","","","","","","","Returns a pointer to the value without taking ownership of …","","","","","","Returns an immutable pointer to the value without taking …","","","","","","","","","","","","","Manually bypasses change detection, allowing you to mutate …","","","","","Copies a reference to a resource.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Convert this <code>ResMut</code> into a <code>Mut</code>. This allows keeping the …","Returns the argument unchanged.","Convert this <code>NonSendMut</code> into a <code>Mut</code>. This allows keeping …","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Due to lifetime limitations of the <code>Deref</code> trait, this …","Consume <code>self</code> and return a mutable reference to the …","Consume <code>self</code> and return a mutable reference to the …","Returns the reference wrapped by this type. The reference …","Consume <code>self</code> and return a mutable reference to the …","Returns the pointer to the value, marking it as changed.","","","","","","","Returns <code>true</code> if this value was added after the system last …","","","","","","","Returns <code>true</code> if this value was added or mutably …","","","","","","","Returns the change tick recording the time this data was …","","","","","","","Map <code>Ref</code> to a different type using <code>f</code>.","Maps to an inner value by applying a function to the …","Maps to an inner value by applying a function to the …","Maps to an inner value by applying a function to the …","","Create a new <code>Ref</code> using provided values.","Creates a new change-detection enabled smart pointer. In …","Returns a <code>Mut&lt;&gt;</code> with a smaller lifetime. This is useful if …","Returns a <code>Mut&lt;&gt;</code> with a smaller lifetime. This is useful if …","Returns a <code>Mut&lt;&gt;</code> with a smaller lifetime. This is useful if …","Returns a <code>MutUntyped</code> with a smaller lifetime. This is …","","Flags this value as having been changed.","","","","","Overwrites this smart pointer with the given value, if and …","Manually sets the change tick recording the time when this …","","","","","","","","","","","","","","","","","","","","","","","","","","","Transforms this <code>MutUntyped</code> into a <code>Mut&lt;T&gt;</code> with the same …","A data type that can be used to store data for an entity.","","A value describing a component or resource, which may or …","A value which uniquely identifies the type of a <code>Component</code> …","A <code>SystemParam</code> that provides access to the <code>ComponentId</code> for …","Stores metadata for a type of component or resource stored …","Types used to specify the storage strategy for a component.","Records when a component was added and when it was last …","Stores metadata associated with each kind of <code>Component</code> in …","The maximum relative age for a change tick. The value of …","A value indicating the storage strategy specified by this …","Provides fast addition and removal of components, but …","Marker type for components stored in a <code>ComponentSparseSet</code>.","A marker type indicating the storage type used for this …","The storage used for a specific component type.","Provides fast and cache-friendly iteration, but slower …","Marker type for components stored in a <code>Table</code>.","A value that tracks when a system ran relative to other …","Interior-mutable access to the <code>Tick</code>s for a single …","The tick indicating when the value was added to the world.","Returns the tick recording the time this component was …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The tick indicating the last time the value was modified.","","","","","","","","","","","","","","","","Returns the <code>ComponentId</code> of the given <code>Component</code> type <code>T</code>.","","","","Get the function which should be called to clean up values …","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Gets the value of this change tick.","Gets the <code>ComponentId</code> for the type <code>T</code>.","Type-erased equivalent of <code>Components::component_id</code>.","Gets the metadata associated with the given component.","Gets the metadata associated with the given component.","Returns the name associated with the given component.","","","Type-erased equivalent of <code>Components::resource_id</code>.","","","Returns a value uniquely identifying the current component.","Returns the index of the current component.","Initializes a component of type <code>T</code> with this instance. If a …","Initializes a component described by <code>descriptor</code>.","Initializes a non-send resource of type <code>T</code> with this …","Initializes a <code>Resource</code> of type <code>T</code> with this instance. If a …","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns <code>true</code> if the component was added after the system …","Returns <code>true</code> if the component was added or mutably …","Returns <code>true</code> if there are no components registered with …","Returns <code>true</code> if this <code>Tick</code> occurred since the system’s …","Returns <code>true</code> if the underlying component type can be …","Gets an iterator over all components registered with this …","Returns the tick recording the time this component was …","Returns the layout used to store values of this component …","Returns the number of components registered with this …","Returns the name of the current component.","Returns the name of the current component.","Create a new <code>ComponentDescriptor</code> for the type <code>T</code>.","Creates a new <code>ComponentId</code>.","Creates a new <code>Tick</code> wrapping the given value.","","Create a new <code>ComponentDescriptor</code> for a resource.","Create a new <code>ComponentDescriptor</code>.","","Returns the <code>ComponentId</code> of the given <code>Resource</code> type <code>T</code>.","Sets the value of this change tick.","Manually sets the change tick.","","Returns a value indicating the storage strategy for the …","Returns a value indicating the storage strategy for the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the <code>TypeId</code> of the underlying component type. …","","Returns the <code>TypeId</code> of the underlying component type. …","","","","","","","","A <code>World</code>’s internal metadata store on all of its entities.","Lightweight identifier of an entity.","A location of an entity in an archetype.","A mapping from one set of entities to another.","A wrapper for <code>EntityMap</code>, augmenting it with the ability to …","Operation to map all contained <code>Entity</code> fields in a type to …","An entity ID with a placeholder value. This may or may not …","An <code>Iterator</code> returning a sequence of <code>Entity</code> values from …","Allocate an entity ID directly.","Allocate a specific entity ID, overwriting its generation.","","The ID of the <code>Archetype</code> the <code>Entity</code> belongs to.","The index of the <code>Entity</code> within its <code>Archetype</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Clears all <code>Entity</code> from the World.","","","","","","","","","","Returns true if the <code>Entities</code> contains <code>entity</code>.","","","","","","Gets the given entity’s corresponding entry in the map …","","","","","","","","Allocates space for entities previously reserved with …","Safety","Flushes all reserved entities to an “invalid” state. …","","","","","Destroy an entity, allowing it to be reused.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Reconstruct an <code>Entity</code> previously destructured with …","Creates a new entity ID with the specified <code>index</code> and a …","","","Returns the generation of this Entity’s index. The …","Returns the corresponding mapped entity.","Returns the location of an <code>Entity</code>. Note: for pending …","Gets a reference to the underlying <code>EntityMap</code>.","Gets a mutable reference to the underlying <code>EntityMap</code>","Returns the corresponding mapped entity or reserves a new …","","","","","","Return a transiently unique identifier.","","","","Inserts an entities pair into the map.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","Returns true if the map contains no elements.","Checks if any entity is currently active.","An iterator visiting all (key, value) pairs in arbitrary …","An iterator visiting all keys in arbitrary order.","Returns the number of elements in the map.","The count of currently allocated entities.","Updates all <code>Entity</code> references stored inside using …","","","","","","","","","","","","","","","","","Removes an <code>entity</code> from the map, returning the mapped value …","Ensure at least <code>n</code> allocations can succeed without …","Reserve entity IDs concurrently.","Reserve one entity ID concurrently.","Get the <code>Entity</code> with a given id, if it exists in this …","","","","","","","","","The ID of the <code>Table</code> the <code>Entity</code> belongs to.","The index of the <code>Entity</code> within its <code>Table</code>.","Convert to a form convenient for passing outside of rust.","","","The count of all entities in the <code>World</code> that have ever been …","","","","","","","","","","","","","","","","","","","","","","","","","An iterator visiting all values in arbitrary order.","Creates an <code>EntityMapper</code> from this <code>EntityMap</code> and scoped to …","A type that can be stored in an <code>Events&lt;E&gt;</code> resource You can …","","An <code>EventId</code> uniquely identifies an event stored in a …","Reads events of type <code>T</code> in order and tracks which events …","Sends events of type <code>T</code>.","An event collection that represents the events that …","An iterator that yields any unread events from an …","An iterator that yields any unread events (and their IDs) …","Stores the state for an <code>EventReader</code>. Access to the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Removes all events.","Consumes all available events.","See <code>EventReader::clear()</code>","","","","","","","","","Creates a draining iterator that removes all events.","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Get a specific event by id if it still exists in the …","","","Gets a new <code>ManualEventReader</code>. This will include all events …","Gets a new <code>ManualEventReader</code>. This will ignore all events …","","Uniquely identifies the event associated with this ID.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Returns true if there are no events currently stored in …","Returns <code>true</code> if there are no events available to read.","See <code>EventReader::is_empty()</code>","Iterates over the events this <code>EventReader</code> has not seen …","See <code>EventReader::iter</code>","Iterates over events that happened since the last “update…","Like <code>iter</code>, except also returning the <code>EventId</code> of the events.","See <code>EventReader::iter_with_id</code>","","","","Returns the number of events currently stored in the event …","Determines the number of events available to be read from …","See <code>EventReader::len</code>","","Amount of events we missed.","Creates a new iterator that yields any <code>events</code> that have …","","","","","","","Returns the index of the oldest event stored in the event …","Oldest id still in the events buffer.","","“Sends” an <code>event</code> by writing it to the current event …","Sends an <code>event</code>, which can later be read by <code>EventReader</code>s.","Sends a list of <code>events</code> all at once, which can later be …","Sends the default value of the event. Useful when the …","Sends the default value of the event. Useful when the …","","","","","","","","","","","","","","","","","","","","","","","","","","Swaps the event buffers and clears the oldest event …","A system that calls <code>Events::update</code> once per frame.","Iterate over only the events.","Tracks read and write access to specific elements in a …","A filter on a component that only retains results added …","The <code>Entity</code> was requested mutably more than once.","The <code>AnyOf</code> query parameter fetches entities with any of the …","A marker trait to indicate that the filter works at an …","Dictates how a parallel query chunks up large …","A filter on a component that only retains results added or …","Per archetype/table state used by this <code>WorldQuery</code> to fetch …","An <code>Access</code> that has been filtered to include and exclude …","A collection of <code>FilteredAccess</code> instances.","Returns a bool that describes if an entity has the …","Returns true if (and only if) this Fetch relies strictly …","Returns true if (and only if) every table of every …","The item returned by this <code>WorldQuery</code>","Multiple entities fit the query.","No entity fits the query.","The given <code>Entity</code> does not exist.","<code>WorldQuery</code> used to nullify queries by turning <code>Query&lt;Q&gt;</code> …","A filter that tests if any of the given filters apply.","An iterator over <code>K</code>-sized combinations of query items …","The given <code>Entity</code>’s components do not match the query.","An error that occurs when retrieving a specific <code>Entity</code>’s …","The <code>Fetch</code> of a <code>WorldQuery</code>, which is used to store state …","The item type returned when a <code>WorldQuery</code> is iterated over","An <code>Iterator</code> over query results of a <code>Query</code>.","An <code>Iterator</code> over the query items generated from an …","A parallel iterator over query results of a <code>Query</code>.","An error that occurs when evaluating a <code>Query</code> or <code>QueryState</code> …","Provides scoped access to a <code>World</code> state according to a …","The read-only <code>Fetch</code> of a <code>WorldQuery</code>, which is used to …","The read-only variant of the item type returned when a …","The read-only variant of this <code>WorldQuery</code>, which satisfies …","A world query that is read only.","State used to construct a <code>Self::Fetch</code>. This will be cached …","Filter that selects entities with a component <code>T</code>.","Filter that selects entities without a component <code>T</code>.","Types that can be fetched from a <code>World</code> using a <code>Query</code>.","Implement <code>WorldQuery</code> to use a struct as a parameter in a …","Returns a reference to the underlying unfiltered access.","Returns a mutable reference to the underlying unfiltered …","Adds the filtered access to the set.","Adds access to the element given by <code>index</code>.","Adds access to the element given by <code>index</code>.","Adds exclusive access to the element given by <code>index</code>.","Adds exclusive access to the element given by <code>index</code>.","Adds a <code>With</code> filter: corresponds to a conjunction (AND) …","Adds a <code>Without</code> filter: corresponds to a conjunction (AND) …","Appends an array of filters: corresponds to a disjunction …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Converts this <code>QueryState</code> reference to a <code>QueryState</code> that …","Converts this <code>QueryState</code> reference to a <code>QueryState</code> that …","The upper and lower limits for how large a batch of …","Configures the number of batches to assign to each thread …","The number of batches per thread in the <code>ComputeTaskPool</code>. …","Changes the batching strategy used when iterating.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Removes all accesses.","Removes all accesses stored in this set.","","","","","","While this function can be called for any query, it is …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a reference to the unfiltered access of the entire …","","","","","","","","","","","","","","","","","","","Adds all access from <code>other</code>.","Adds all access and filters from <code>other</code>.","Adds all of the accesses from the passed set to <code>self</code>.","Adds all of the accesses from <code>other</code> to <code>self</code>.","Fetch <code>Self::Item</code> for either the given <code>entity</code> in the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get next result from the query","Get next combination of queried components","Safety","Safety","","","","","","","","","","","","","","","","","","","Declares a batching strategy with a fixed batch size.","","","","","","","","","Runs <code>func</code> on each query result in parallel.","Runs <code>func</code> on each query result for the given <code>World</code>. This …","Runs <code>func</code> on each query result in parallel.","Runs <code>func</code> on each query result for the given <code>World</code>. This …","Runs <code>func</code> on each query result for the given <code>World</code>. This …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Gets the query result for the given <code>World</code> and <code>Entity</code>.","Returns a vector of elements that the access and <code>other</code> …","Returns a vector of elements that this and <code>other</code> cannot …","Returns a vector of elements that this set and <code>other</code> …","Returns a vector of elements that this set and <code>other</code> …","Gets the query result for the given <code>World</code> and <code>Entity</code>.","Returns the read-only query results for the given array of …","Returns the query results for the given array of <code>Entity</code>.","Gets the query result for the given <code>World</code> and <code>Entity</code>.","","Returns a single immutable query result when there is …","Returns a single mutable query result when there is …","Returns a query result when there is exactly one entity …","Returns a query result when there is exactly one entity …","Gets the query result for the given <code>World</code> and <code>Entity</code>.","Increases the set capacity to the specified amount.","Returns <code>true</code> if this accesses anything mutably.","Returns <code>true</code> if this can access the element given by <code>index</code>.","Returns <code>true</code> if this has access to all indexed elements …","Returns <code>true</code> if this can exclusively access the element …","","Creates a new instance of this fetch.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates and initializes a <code>State</code> for this <code>WorldQuery</code> type.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns <code>true</code> if the access and <code>other</code> can be active at the …","Returns <code>true</code> if this and <code>other</code> can be active at the same …","Returns <code>true</code> if this and <code>other</code> can be active at the same …","Checks if the query is empty for the given <code>World</code>, where …","Returns an <code>Iterator</code> over the query results for the given …","Returns an <code>Iterator</code> over all possible combinations of <code>K</code> …","Returns an <code>Iterator</code> over all possible combinations of <code>K</code> …","Returns an <code>Iterator</code> over all possible combinations of <code>K</code> …","Returns an <code>Iterator</code> over the query results for the given …","Returns an <code>Iterator</code> over the read-only query items …","Returns an <code>Iterator</code> over the read-only query items …","Returns an iterator over the query items generated from an …","Returns an <code>Iterator</code> over the query results for the given …","Returns an <code>Iterator</code> over the query results for the given …","","Returns <code>true</code> if this query matches a set of components. …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Configures the maximum allowed batch size of this instance.","Configures the minimum allowed batch size of this instance.","Creates a new <code>QueryState</code> from a given <code>World</code> and inherits …","Creates an empty <code>Access</code> collection.","Creates a new unconstrained default batching strategy.","Update the current <code>QueryState</code> with information from the …","","","","Returns a parallel iterator over the query results for the …","Returns a parallel iterator over the query results for the …","","","Sets this as having access to all indexed elements (i.e. …","Sets the underlying unfiltered access as having access to …","Returns the indices of the elements this has non-exclusive …","Returns the indices of the elements this has access to.","Adjusts internal state to account for the next <code>Archetype</code>. …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Adjusts internal state to account for the next <code>Table</code>. This …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This function manually implements subtyping for the query …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a single immutable query result when there is …","Returns a single mutable query result when there is …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","For the given <code>archetype</code>, adds any component accessed used …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Updates the state’s internal view of the <code>World</code>’s …","Updates the state’s internal view of the <code>world</code>’s …","Adds any component accesses used by this <code>WorldQuery</code> to …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Panics","Returns the indices of the elements this has exclusive …","A <code>Resource</code> storing <code>TypeRegistry</code> for type registrations …","A struct used to operate on reflected <code>Component</code> of a type.","The raw function pointers needed to make up a …","For a specific type of component, this maps any fields …","A struct used to operate on reflected <code>Resource</code> of a type.","The raw function pointers needed to make up a …","Uses reflection to set the value of this <code>Component</code> type in …","Uses reflection to set the value of this <code>Resource</code> type in …","Function pointer implementing <code>ReflectComponent::apply()</code>.","Function pointer implementing <code>ReflectResource::apply()</code>.","Uses reflection to set the value of this <code>Component</code> type in …","Uses reflection to set the value of this <code>Resource</code> type in …","Function pointer implementing …","Function pointer implementing …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns whether entity contains this <code>Component</code>","Function pointer implementing <code>ReflectComponent::contains()</code>.","Gets the value of this <code>Component</code> type from entity from …","Gets the value of this <code>Resource</code> type from <code>source_world</code> and …","Function pointer implementing <code>ReflectComponent::copy()</code>.","Function pointer implementing <code>ReflectResource::copy()</code>.","","","","The underlying function pointers implementing methods on …","The underlying function pointers implementing methods on …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Constructs default reflected <code>Component</code> from world using …","","Function pointer implementing …","Insert a reflected <code>Component</code> into the entity like <code>insert()</code>.","Insert a reflected <code>Resource</code> into the world like <code>insert()</code>.","Function pointer implementing <code>ReflectComponent::insert()</code>.","Function pointer implementing <code>ReflectResource::insert()</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","A general method for applying <code>MapEntities</code> behavior to all …","A general method for applying <code>MapEntities</code> behavior to …","Create a custom implementation of <code>ReflectComponent</code>.","Get the default set of <code>ReflectComponentFns</code> for a specific …","Create a custom implementation of <code>ReflectResource</code>.","Get the default set of <code>ReflectResourceFns</code> for a specific …","Gets the value of this <code>Component</code> type from the entity as a …","Gets the value of this <code>Resource</code> type from the world as a …","Function pointer implementing <code>ReflectComponent::reflect()</code>.","Function pointer implementing <code>ReflectResource::reflect()</code>.","Gets the value of this <code>Component</code> type from the entity as a …","Gets the value of this <code>Resource</code> type from the world as a …","Function pointer implementing …","Safety","Safety","Function pointer implementing …","Function pointer implementing …","Removes this <code>Component</code> type from the entity. Does nothing …","Removes this <code>Resource</code> type from the world. Does nothing if …","Function pointer implementing <code>ReflectComponent::remove()</code>.","Function pointer implementing <code>ReflectResource::remove()</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Wrapper around <code>Entity</code> for <code>RemovedComponents</code>. Internally, …","Stores the <code>RemovedComponents</code> event buffers for all types …","Wrapper around a <code>ManualEventReader&lt;RemovedComponentEntity&gt;</code> …","A <code>SystemParam</code> that grants access to the entities that had …","Iterator over entities that had a specific component …","Iterator over entities that had a specific component …","","","","","","","","","","","","","","","","","","Consumes all available events.","","","","","","","","Fetch underlying <code>Events</code>.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Gets the event storage for a given component.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Returns <code>true</code> if there are no events available to read.","Iterates over the events this <code>RemovedComponents</code> has not …","Like <code>iter</code>, except also returning the <code>EventId</code> of the events.","Determines the number of removal events available to be …","Creates an empty storage buffer for component removal …","","Fetch underlying <code>ManualEventReader</code>.","Fetch underlying <code>ManualEventReader</code> mutably.","Destructures to get a mutable reference to the …","Sends a removal event for the specified component.","","","","","","","","","","","","","","For each type of component, swaps the event buffers and …","Systems with conflicting access have indeterminate run …","Combines the outputs of two systems using the <code>&amp;&amp;</code> operator.","A <code>SystemSet</code> implicitly created when using …","A type-erased run condition stored in a <code>Box</code>.","A shorthand for <code>Box&lt;dyn ScheduleLabel&gt;</code>.","A shorthand for <code>Box&lt;dyn SystemSet&gt;</code>.","A system that determines if one or more scheduled systems …","Configuration for a tuple of nested <code>SystemConfigs</code> …","Tried to order a system (set) relative to a system set it …","A directed acyclic graph structure.","The dependency graph contains a cycle.","A system (set) has been told to run before itself.","Occurrences are logged and result in errors.","Specifies how a <code>Schedule</code> will be run.","The hierarchy of system sets contains a cycle.","A system set contains itself.","The hierarchy of system sets contains redundant edges.","Occurrences are completely ignored.","Types that can convert into a <code>SystemConfigs</code>.","Types that can be converted into a <code>SystemSet</code>.","Types that can be converted into a <code>SystemSetConfig</code>.","Types that can convert into a <code>SystemSetConfigs</code>.","The type returned when iterating over all <code>variants</code> of this …","Specifies how schedule construction should respond to …","New-typed <code>ThreadExecutor</code> <code>Resource</code> that is used to run …","Runs the schedule using a thread pool. Non-conflicting …","Runs the schedule using a thread pool. Non-conflicting …","The next state of <code>State&lt;S&gt;</code>.","Unique identifier for a system or system set stored in a …","Invokes <code>Not</code> with the output of another system.","The label of a <code>Schedule</code> that runs whenever <code>State&lt;S&gt;</code> enters …","The label of a <code>Schedule</code> that runs whenever <code>State&lt;S&gt;</code> exits …","The label of a <code>Schedule</code> that <strong>only</strong> runs whenever <code>State&lt;S&gt;</code> …","Combines the outputs of two systems using the <code>||</code> operator.","A collection of systems, and the metadata and executor …","Category of errors encountered during schedule …","Specifies miscellaneous settings for schedule construction.","Metadata for a <code>Schedule</code>.","A strongly-typed label.","Derive macro generating an impl of the trait <code>ScheduleLabel</code>.","Resource that stores <code>Schedule</code>s mapped to <code>ScheduleLabel</code>s.","Identifier for a system set.","The type of <code>SystemSet</code> this instance converts into.","Tried to order system sets that share systems.","Like <code>SingleThreaded</code> but calls <code>apply_deferred</code> immediately …","A variant of <code>SingleThreadedExecutor</code> that calls …","Runs the schedule using a single thread.","Runs the schedule using a single thread.","A finite-state machine whose transitions have associated …","Types that can define world-wide states in a finite-state …","","Identifier for a system.","Stores configuration for a single system.","Configuration for a single system.","A collection of <code>SystemConfig</code>.","Holds systems and conditions of a <code>Schedule</code> sorted in …","Types that identify logical groups of systems.","Derive macro generating an impl of the trait <code>SystemSet</code>.","A <code>SystemSet</code> with scheduling metadata.","A collection of <code>SystemSetConfig</code>.","A <code>SystemSet</code> grouping instances of the same function.","Tried to order a system (set) relative to all instances of …","Tried to run a schedule before all of its systems have …","Occurrences are logged only.","Add a system to the schedule.","Add a collection of systems to the schedule.","","Run after all systems in <code>set</code>.","Run after all systems in <code>set</code>.","","Run after all systems in <code>set</code>.","Run after all systems in <code>set</code>.","","Run after all systems in <code>set</code>.","Run after all systems in <code>set</code>.","Determines whether the presence of ambiguities (systems …","","Suppress warnings and errors that would result from these …","Suppress warnings and errors that would result from these …","","Suppress warnings and errors that would result from …","Suppress warnings and errors that would result from …","","Suppress warnings and errors that would result from …","Suppress warnings and errors that would result from …","","Suppress warnings and errors that would result from these …","Suppress warnings and errors that would result from these …","","Suppress warnings and errors that would result from …","Suppress warnings and errors that would result from …","","Suppress warnings and errors that would result from …","Suppress warnings and errors that would result from …","Returns a new run condition that only returns <code>true</code> if both …","Returns a new run condition that only returns <code>true</code> if both …","Instructs the executor to call <code>System::apply_deferred</code> on …","Directly applies any accumulated <code>Deferred</code> system …","","If a new state is queued in <code>NextState&lt;S&gt;</code>, this system:","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Casts this value to a form where it can be compared with …","","","","","","","","","","","","","","","Run before all systems in <code>set</code>.","Run before all systems in <code>set</code>.","","Run before all systems in <code>set</code>.","Run before all systems in <code>set</code>.","","Run before all systems in <code>set</code>.","Run before all systems in <code>set</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Build a <code>SystemSchedule</code> optimized for scheduler access from …","A cached topological ordering of the graph.","","Treat this collection as a sequence of systems.","Treat this collection as a sequence of systems.","","Treat this collection as a sequence of system sets.","Treat this collection as a sequence of system sets.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A collection of run conditions that may be useful in any …","","Configures a system set in this schedule, adding it if it …","Configures a collection of system sets in this schedule, …","Returns the list of systems that conflict with each other, …","Does a schedule with the provided label already exist?","","","","","","","","","","","","","","Returns the <code>Dag</code> of the dependencies in the schedule.","","","Add a run condition to each contained system.","Add a run condition to each contained system.","Creates a boxed clone of the label corresponding to this …","Clones this <code>ScheduleLabel</code>","","","","","","","","","","","","","Feeds this value into the given <code>Hasher</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","The state being exited.","","","","","","","","","","","","","","Returns a reference to the schedule associated with <code>label</code>, …","Get the current state.","Returns the schedule’s current execution strategy.","","Returns a mutable reference to the schedule associated …","Returns the set at the given <code>NodeId</code>, if it exists.","Returns the system at the given <code>NodeId</code>, if it exists.","Returns the <code>ScheduleGraph</code>.","The directed graph of the stored systems, connected by …","Returns a mutable reference to the <code>ScheduleGraph</code>.","","","","","","","","","Returns the <code>Dag</code> of the hierarchy.","Determines whether the presence of redundant edges in the …","This used to add the system to the provided <code>schedule</code>.","This used to add the system to the provided <code>schedule</code>.","This used to configure the set in the provided <code>schedule</code>.","This used to configure the set in the provided <code>schedule</code>.","This used to configure the sets in the provided <code>schedule</code>.","This used to configure the sets in the provided <code>schedule</code>.","","Add these systems to the provided <code>set</code>.","Add these systems to the provided <code>set</code>.","","Add to the provided <code>set</code>.","Add to the provided <code>set</code>.","","Add these system sets to the provided <code>set</code>.","Add these system sets to the provided <code>set</code>.","Initializes any newly-added systems and conditions, …","","Initializes any newly-added systems and conditions by …","Return’s the TypeId of this label, or the the ID of the …","Return’s the TypeId of this label, or the the ID of the …","Inserts a labeled schedule into the map.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Converts this instance to its associated <code>SystemSet</code> type.","","","Returns <code>true</code> if this system set is an <code>AnonymousSet</code>.","Returns <code>true</code> if this system set is an <code>AnonymousSet</code>.","","","","Returns <code>true</code> if the identified node is a system set.","Returns <code>true</code> if the identified node is a system.","Returns an iterator over all schedules. Iteration order is …","Returns an iterator over mutable references to all …","","Creates a new multi-threaded executor for use with a …","Constructs an empty <code>Schedule</code>.","Creates a new executor that can be used to run systems on …","Creates a new simple executor for use in a <code>Schedule</code>. This …","Creates a new single-threaded executor for use in a …","Creates an empty <code>SystemSchedule</code>.","Constructs an empty <code>Schedules</code> with zero initial capacity.","Creates an empty <code>ScheduleGraph</code> with default settings.","Default build settings. See the field-level documentation …","Creates a new state with a specific value.","This used to add the system to <code>CoreSchedule::Startup</code>. This …","This used to add the system to <code>CoreSchedule::Startup</code>. This …","This used to configure the set in the <code>CoreSchedule::Startup</code>…","This used to configure the set in the <code>CoreSchedule::Startup</code>…","This used to configure the sets in the …","This used to configure the sets in the …","Returns a new run condition that returns <code>true</code> if either …","Returns a new run condition that returns <code>true</code> if either …","","","Removes the schedule corresponding to the <code>label</code> from the …","Removes the (schedule, label) pair corresponding to the …","If set to true, report all system sets the conflicting …","Runs all systems in this schedule on the <code>world</code>, using its …","","Run the enter schedule (if it exists) for the current …","","Run the systems only if the <code>Condition</code> is <code>true</code>.","Run the systems only if the <code>Condition</code> is <code>true</code>.","","Run the systems in this set only if the <code>Condition</code> is <code>true</code>.","Run the systems in this set only if the <code>Condition</code> is <code>true</code>.","","Tentatively set a planned state transition to <code>Some(state)</code>.","Set whether the schedule applies deferred system buffers …","Returns the set at the given <code>NodeId</code>.","Changes miscellaneous build settings.","Sets the schedule’s execution strategy.","","Returns the system at the given <code>NodeId</code>.","Returns an iterator over all system sets in this schedule.","Returns <code>Some</code> if this system set is a <code>SystemTypeSet</code>.","Returns <code>Some</code> if this system set is a <code>SystemTypeSet</code>.","","Returns an iterator over all systems in this schedule.","The state being entered.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","If set to true, node names will be shortened instead of …","Returns an iterator over all the state variants.","If <code>true</code>, adds <code>before -&gt; after</code> ordering constraints between …","Run conditions applied to everything in the tuple.","Configuration for each element of the tuple.","Generates a <code>Condition</code>-satisfying closure that returns <code>true</code> …","Generates a <code>Condition</code>-satisfying closure that returns <code>true</code> …","Generates a <code>Condition</code>-satisfying closure that returns <code>true</code> …","Generates a <code>Condition</code> that inverses the result of passed …","Generates a <code>Condition</code>-satisfying closure that returns <code>true</code> …","Generates a <code>Condition</code>-satisfying closure that returns <code>true</code> …","Generates a <code>Condition</code>-satisfying closure that returns <code>true</code> …","Generates a <code>Condition</code>-satisfying closure that returns <code>true</code> …","Generates a <code>Condition</code>-satisfying closure that returns <code>true</code> …","Generates a <code>Condition</code>-satisfying closure that returns <code>true</code> …","Generates a <code>Condition</code>-satisfying closure that returns <code>true</code> …","Generates a <code>Condition</code>-satisfying closure that returns <code>true</code> …","Generates a <code>Condition</code>-satisfying closure that returns <code>true</code> …","Generates a <code>Condition</code>-satisfying closure that returns <code>true</code> …","Generates a <code>Condition</code>-satisfying closure that returns <code>true</code> …","Generates a <code>Condition</code>-satisfying closure that returns <code>true</code> …","Generates a <code>Condition</code>-satisfying closure that returns <code>true</code> …","A type-erased contiguous container for data of a …","A sparse data structure of Components","The type-erased backing storage and metadata for a single …","The backing store for all <code>Resource</code>s stored in the <code>World</code>.","A data structure that blends dense and sparse storage","Represents something that can be stored in a <code>SparseSet</code> as …","A collection of <code>ComponentSparseSet</code> storages, indexed by …","The raw data stores of a World","A column-oriented structure-of-arrays based storage for …","An opaque unique ID for a <code>Table</code> within a <code>World</code>.","A opaque newtype for rows in <code>Table</code>s. Specifies a single …","A collection of <code>Table</code> storages, indexed by <code>TableId</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the total number of elements the <code>SparseSet</code> can …","Clears all resources.","Clears all of the elements from the sparse set.","Clears the column, removing all values.","","","","","","","Gets the number of components being stored in the table.","Returns <code>true</code> if the sparse set has a component value for …","Returns <code>true</code> if the sparse set contains a value for <code>index</code>.","","","","","","","","","The <code>TableId</code> of the <code>Table</code> without any components.","Fetches a read-only slice of the entities stored within …","Gets the maximum number of entities the table can …","Gets the number of entities currently being stored in the …","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Fetches a <code>Table</code> by its <code>TableId</code>.","Gets read-only access to a resource, if it exists.","Returns a reference to the entity’s component value.","Returns a reference to the value for <code>index</code>.","Gets a reference to the <code>ComponentSparseSet</code> of a <code>ComponentId</code>…","Fetches a reference to the data and change detection ticks …","Returns a reference to the “added” tick of the entity…","Fetches the “added” change detection ticks for the …","Fetches the slice to the <code>Column</code>’s “added” change …","Fetches the “added” change detection ticks for the …","Returns a reference to the “changed” tick of the entity…","Fetches the “changed” change detection ticks for the …","Fetches the slice to the <code>Column</code>’s “changed” change …","Fetches the “changed” change detection ticks for the …","Fetches a read-only reference to the <code>Column</code> for a given …","Returns a reference to the resource, if it exists.","Fetches a read-only reference to the data at <code>row</code>.","Fetches a mutable reference to the data at <code>row</code>.","Fetches the data pointer to the first element of the <code>Column</code>…","Fetches the slice to the <code>Column</code>’s data cast to a given …","Fetches a read-only reference to the data at <code>row</code>. Unlike …","Returns a mutable reference to the value for <code>index</code>.","Returns a reference to the value for <code>index</code>, inserting one …","Creates a new instance of this type with the specified …","Returns a reference to the resource’s change ticks, if …","Returns a reference to the “added” and “changed” …","Fetches the change detection ticks for the value at <code>row</code>.","Fetches the change detection ticks for the value at <code>row</code>. …","Returns references to the entity’s component value and …","Checks if the table contains a <code>Column</code> for a given <code>Component</code>…","Gets the <code>ArchetypeComponentId</code> for the resource.","","Gets the underlying table index from the ID.","Gets the index of the row.","","Returns an iterator visiting all keys (indices) in …","Inserts <code>value</code> at <code>index</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","Checks if the <code>Table</code> is empty or not.","Returns true if this collection contains no <code>Table</code>s","Returns true if there are no resources stored in the <code>World</code>,","Returns <code>true</code> if the sparse set contains no component …","Returns <code>true</code> if the sparse set contains no elements.","Returns true if this collection contains no …","Checks if the column is empty. Returns <code>true</code> if there are …","Returns true if the resource is populated.","Fetches the <code>Layout</code> for the underlying type.","Iterates over the <code>Column</code>s of the <code>Table</code>.","Iterates through all of the tables stored within in <code>TableId</code>…","Iterate over all resources that have been initialized, …","Returns an iterator visiting all key-value pairs in …","An Iterator visiting all (<code>ComponentId</code>, <code>ComponentSparseSet</code>) …","Returns an iterator visiting all key-value pairs in …","Returns the number of <code>Table</code>s this collection contains","The total number of resources stored in the <code>World</code>","Returns the number of component values in the sparse set.","Returns the number of elements in the sparse set.","Returns the number of <code>ComponentSparseSet</code>s this collection …","Gets the current number of elements stored in the column.","Creates a new <code>SparseSet</code>.","Creates a new <code>TableId</code>.","Creates a <code>TableRow</code>.","Backing storage for <code>!Send</code> resources.","Removes and returns the value for <code>index</code>.","Backing storage for resources.","Gets the sparse set index corresponding to this instance.","Backing storage for <code>SparseSet</code> components.","Backing storage for <code>Table</code> components.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns an iterator visiting all values in arbitrary order.","Returns an iterator visiting all values mutably in …","Creates a new <code>SparseSet</code> with a specified initial capacity.","A convenience type alias for a boxed <code>System</code> trait object.","A <code>System</code> defined by combining two other systems. The …","Customizes the behavior of a <code>CombinatorSystem</code>.","A <code>World</code> mutation.","Densely and efficiently stores a queue of heterogenous …","A <code>Command</code> queue to perform impactful changes to the <code>World</code>.","A <code>SystemParam</code> that stores a buffer which gets applied to …","A <code>Command</code> that despawns a specific entity. This will emit …","A <code>Command</code> which gets executed for a given <code>Entity</code>.","A list of commands that will be run to modify an entity.","A function system that runs with exclusive <code>World</code> access.","A parameter that can be used in an exclusive system (a …","A trait implemented for all exclusive system functions …","Shorthand way of accessing the associated type …","The <code>System</code> counter part of an ordinary function.","Wrapper type to mark a <code>SystemParam</code> as an input.","The input type for a <code>CombinatorSystem</code>.","The input type to this system. See <code>System::In</code>.","The input type to this system. See <code>System::In</code>.","The system’s input. See <code>In</code> for <code>FunctionSystem</code>s.","A <code>Command</code> that inserts a <code>Resource</code> into the world using a …","A <code>Command</code> that adds the components in a <code>Bundle</code> to an …","A <code>Command</code> that consumes an iterator to add a series of …","A <code>Command</code> that inserts a <code>Resource</code> into the world.","Conversion trait to turn something into a <code>System</code>.","The item type returned when constructing this system param.","The item type returned when constructing this system param.","A system local <code>SystemParam</code>.","<code>Command</code> to log the components of a given entity. See …","The given <code>Entity</code> does not have the requested component.","The <code>Query</code> does not have read access to the requested …","The <code>Query</code> does not have write access to the requested …","The requested <code>Entity</code> does not exist.","Shared borrow of a non-<code>Send</code> resource.","","The output type for a <code>CombinatorSystem</code>.","The return type of this system. See <code>System::Out</code>.","The return type of this system. See <code>System::Out</code>.","The system’s output.","An alternative to <code>Commands</code> that can be used in parallel …","The <code>ExclusiveSystemParam</code>/s defined by this system’s <code>fn</code> …","The <code>SystemParam</code>/s used by this system to access the <code>World</code>.","A collection of potentially conflicting <code>SystemParam</code>s …","A <code>System</code> created by piping the output of the first system …","System parameter that provides selective access to the …","An error that occurs when retrieving a specific <code>Entity</code>’s …","<code>System</code> types that do not modify the <code>World</code> when run. This …","A <code>SystemParam</code> that only reads a given <code>World</code>.","A <code>Command</code> that removes components from an entity. For a …","A <code>Command</code> that removes the resource <code>R</code> from the world.","","","A type that can be inserted into a <code>World</code> as a singleton.","","A <code>Command</code> that spawns a new entity and adds the components …","A <code>Command</code> that consumes an iterator of <code>Bundle</code>s to spawn a …","Used to store data which persists across invocations of a …","Used to store data which persists across invocations of a …","A helper for using system parameters in generic contexts","An ECS system that can be added to a <code>Schedule</code>","The type of <code>System</code> that this instance converts into.","Types that can be used with <code>Deferred&lt;T&gt;</code> in systems. This …","A <code>SystemParam</code> that reads the previous and current change …","The metadata of a <code>System</code>.","Name of the system that corresponds to this …","A parameter that can be used in a <code>System</code>.","Implement <code>SystemParam</code> to use a struct as a parameter in a …","A trait implemented for all functions that can be used as …","Shorthand way of accessing the associated type …","Holds on to persistent state required to drive <code>SystemParam</code> …","Turns an <code>EntityCommand</code> type into a <code>Command</code> type.","A collection of common adapters for piping the result of a …","Pushes an <code>EntityCommand</code> to the queue, which will get …","Pushes a generic <code>Command</code> to the command queue.","Applies this command, causing it to mutate the provided …","Executes this command for the given <code>Entity</code>.","Applies any deferred mutations to the <code>World</code>.","","","","","","","","","Applies all state queued up for <code>SystemParam</code> values. For …","Applies any deferred mutations stored in this <code>SystemParam</code>…","Applies any deferred mutations stored in this <code>SystemParam</code>…","","","","","","","","","","","","Execute the queued <code>Command</code>s in the world. This clears the …","","","","","","Applies any <code>Deferred</code> system parameters (or other system …","","","","Returns the system’s archetype component <code>Access</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Ensure that a given function is a read-only system.","Ensure that a given function is a system.","Ensures that the provided system doesn’t with itself.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The <code>Bundle</code> containing the components that will be added to …","The <code>Bundle</code> of components that will be added to the …","The iterator that returns the <code>Bundle</code>s which will be added …","The iterator that returns each entity ID and corresponding …","Checks any <code>Tick</code>s stored on this system and wraps their …","","","","Clone the combined system. The cloned instance must be …","","","","","","","","","When used in a <code>CombinatorSystem</code>, this function customizes …","Temporarily provides access to the <code>Commands</code> for the …","Returns the underlying <code>Commands</code>.","Returns the system’s component <code>Access</code>.","","","","Returns <code>true</code> if the given <code>Entity</code> matches the query.","","","","","Returns the system’s default system sets.","Returns the system’s default system sets.","","","","","","","","","Despawns the entity.","","Returns the <code>EntityCommands</code> for the requested <code>Entity</code>.","The entity to which the components will be added.","The entity that will be despawned.","The entity from which the components will be removed.","","","","","","","","","","","","","","","","","Runs <code>f</code> on each read-only query item.","Runs <code>f</code> on each query item.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Retrieve the <code>SystemParam</code> values. This can only be called …","Returns the read-only query item for the given <code>Entity</code>.","Returns a shared reference to the component <code>T</code> of the given …","Returns a mutable reference to the component <code>T</code> of the …","Returns a mutable reference to the component <code>T</code> of the …","Returns the <code>EntityCommands</code> for the requested <code>Entity</code>, if it …","Returns the query item for the given <code>Entity</code>, with the …","Gets the tick indicating the last time this system ran.","","","","Retrieve the <code>SystemParam</code> values. This can only be called …","Retrieve the mutable <code>SystemParam</code> values.  This will not …","Returns the read-only query items for the given array of …","Returns the query items for the given array of <code>Entity</code>.","Retrieve the mutable <code>SystemParam</code> values.","Returns the query item for the given <code>Entity</code>.","Pushes a <code>Command</code> to the queue for creating a new <code>Entity</code> if …","Creates a parameter to be passed into an …","Creates a parameter to be passed into a <code>SystemParamFunction</code>…","","","","","","","","","","","","","","","","","","","","Returns a single read-only query item when there is …","Returns a single query item when there is exactly one …","Returns the query item for the given <code>Entity</code>.","Retrieve the <code>SystemParam</code> values. This will not update …","Returns the <code>Entity</code> id of the entity.","Creates a new instance of this param’s <code>State</code>.","","","Pushes a <code>Command</code> to the queue for inserting a <code>Resource</code> in …","Registers any <code>World</code> access used by this <code>SystemParam</code> and …","","","","","","","","","","","","","","","","","","Initialize the system.","","","","Adds a <code>Bundle</code> of components to the entity.","Pushes a <code>Command</code> to the queue for creating entities, if …","Pushes a <code>Command</code> to the queue for inserting a <code>Resource</code> in …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the value of the parameter","","","","","Turns this value into its corresponding <code>System</code>.","","","","Returns <code>true</code> if the resource was added after the system …","Returns <code>true</code> if the resource was added or mutably …","Returns <code>true</code> if there are no query items.","Returns true if the system must be run exclusively.","","","","Returns true if the system is <code>Send</code>.","","","","Returns true if the system is <code>Send</code>.","Returns an <code>Iterator</code> over the read-only query items.","Returns a <code>QueryCombinationIter</code> over all combinations of <code>K</code> …","Returns a <code>QueryCombinationIter</code> over all combinations of <code>K</code> …","Iterates over all possible combinations of <code>K</code> query items …","Returns an <code>Iterator</code> over the query items, with the actual …","Returns an <code>Iterator</code> over the read-only query items …","Returns an iterator over the query items generated from an …","Returns an <code>Iterator</code> over the query items generated from an …","Returns an <code>Iterator</code> over the query items.","Returns an <code>Iterator</code> over the query items.","Returns the <code>World</code> change tick seen by the system the …","Contains type aliases for built-in <code>SystemParam</code>s with …","Logs the components of the entity at the info level.","Returns the read-only query items for the given array of …","Returns the query items for the given array of <code>Entity</code>.","Returns <code>true</code> if <code>world_id</code> matches the <code>World</code> that was used …","Gets the metadata for this instance.","Returns the system’s name.","","","","Gets the name of the system.","Returns the system’s name","Creates a new system that combines two inner systems.","Creates a <code>Command</code> which will insert a default created …","Creates a <code>Command</code> which will remove a <code>Resource</code> from the …","Creates a new <code>SystemState</code> with default state.","Returns a new <code>Commands</code> instance from a <code>CommandQueue</code> and a …","Creates a <code>Command</code> which will remove the specified <code>Entity</code> …","","For the specified <code>Archetype</code>, registers the components …","For the specified <code>Archetype</code>, registers the components …","","","","","","","","","","","","Returns a new <code>Commands</code> instance from a <code>CommandQueue</code> and an …","Gets exclusive access to the 0th parameter in this <code>ParamSet</code>…","Gets exclusive access to the 0th parameter in this <code>ParamSet</code>…","Gets exclusive access to the 0th parameter in this <code>ParamSet</code>…","Gets exclusive access to the 0th parameter in this <code>ParamSet</code>…","Gets exclusive access to the 0th parameter in this <code>ParamSet</code>…","Gets exclusive access to the 0th parameter in this <code>ParamSet</code>…","Gets exclusive access to the 0th parameter in this <code>ParamSet</code>…","Gets exclusive access to the 0th parameter in this <code>ParamSet</code>…","Gets exclusive access to the 1st parameter in this <code>ParamSet</code>…","Gets exclusive access to the 1st parameter in this <code>ParamSet</code>…","Gets exclusive access to the 1st parameter in this <code>ParamSet</code>…","Gets exclusive access to the 1st parameter in this <code>ParamSet</code>…","Gets exclusive access to the 1st parameter in this <code>ParamSet</code>…","Gets exclusive access to the 1st parameter in this <code>ParamSet</code>…","Gets exclusive access to the 1st parameter in this <code>ParamSet</code>…","Gets exclusive access to the 2nd parameter in this <code>ParamSet</code>…","Gets exclusive access to the 2nd parameter in this <code>ParamSet</code>…","Gets exclusive access to the 2nd parameter in this <code>ParamSet</code>…","Gets exclusive access to the 2nd parameter in this <code>ParamSet</code>…","Gets exclusive access to the 2nd parameter in this <code>ParamSet</code>…","Gets exclusive access to the 2nd parameter in this <code>ParamSet</code>…","Gets exclusive access to the 3rd parameter in this <code>ParamSet</code>…","Gets exclusive access to the 3rd parameter in this <code>ParamSet</code>…","Gets exclusive access to the 3rd parameter in this <code>ParamSet</code>…","Gets exclusive access to the 3rd parameter in this <code>ParamSet</code>…","Gets exclusive access to the 3rd parameter in this <code>ParamSet</code>…","Gets exclusive access to the 4th parameter in this <code>ParamSet</code>…","Gets exclusive access to the 4th parameter in this <code>ParamSet</code>…","Gets exclusive access to the 4th parameter in this <code>ParamSet</code>…","Gets exclusive access to the 4th parameter in this <code>ParamSet</code>…","Gets exclusive access to the 5th parameter in this <code>ParamSet</code>…","Gets exclusive access to the 5th parameter in this <code>ParamSet</code>…","Gets exclusive access to the 5th parameter in this <code>ParamSet</code>…","Gets exclusive access to the 6th parameter in this <code>ParamSet</code>…","Gets exclusive access to the 6th parameter in this <code>ParamSet</code>…","Gets exclusive access to the 7th parameter in this <code>ParamSet</code>…","Returns a parallel iterator over the query results for the …","Returns a parallel iterator over the query results for the …","Pass the output of this system <code>A</code> into a second system <code>B</code>, …","","Push a <code>Command</code> onto the queue.","Removes a <code>Bundle</code> of components from the entity.","Pushes a <code>Command</code> to the queue for removing a <code>Resource</code> from …","The resource that will be added to the world.","Executes this system once. See <code>System::run</code>.","Executes this system once. See <code>System::run</code> or …","","","Runs the system with the given input in the world.","Runs the system with the given input in the world.","Runs this system with the given input in the world.","Runs this system with the given input in the world.","Runs the system with the given input in the world. Unlike …","","","","Overwrites the tick indicating the last time this system …","","","","Sets the system to be not <code>Send</code>.","Returns a single read-only query item when there is …","Returns a single query item when there is exactly one …","Pushes a <code>Command</code> to the queue for creating a new entity …","Pushes a <code>Command</code> to the queue for creating entities with a …","Pushes a <code>Command</code> to the queue for creating a new empty …","Returns the current <code>World</code> change tick seen by the system.","","","","Returns another <code>Query</code> from this that fetches the read-only …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the <code>TypeId</code> of the underlying system type.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Update the system’s archetype component <code>Access</code>.","","","","Updates the state’s internal view of the <code>World</code>’s …","Updates the state’s internal view of the <code>world</code>’s …","Returns a <code>Command</code> which executes this <code>EntityCommand</code> for …","Returns a <code>Command</code> which executes this <code>EntityCommand</code> for …","System adapter that utilizes the …","System adapter that utilizes the …","System adapter that ignores the output of the previous …","System adapter that utilizes the <code>bevy_utils::tracing::info!</code>…","Converts a regular function into a system adapter.","System adapter that unwraps the <code>Ok</code> variant of a <code>Result</code>. …","System adapter that utilizes the <code>bevy_utils::tracing::warn!</code>…","A shorthand for writing <code>&amp;&#39;static T</code>.","<code>Commands</code> with <code>&#39;static</code> lifetimes.","A <code>Query</code> with <code>&#39;static</code> lifetimes.","A <code>Res</code> with <code>&#39;static</code> lifetimes.","A <code>ResMut</code> with <code>&#39;static</code> lifetimes.","A shorthand for writing <code>&amp;&#39;static mut T</code>.","","A mutable reference to a particular <code>Entity</code> and all of its …","A read-only reference to a particular <code>Entity</code> and all of …","Creates an instance of the type this trait is implemented …","","","An iterator that spawns a series of entities and returns …","Stores and exposes operations on entities, components, …","A read-only borrow of some data stored in a <code>World</code>. This …","A mutable borrow of some data stored in a <code>World</code>. This type …","Exposes safe mutable access to multiple resources at a …","A unique identifier for a <code>World</code>.","Adds the specified <code>Schedule</code> to the world. The schedule can …","Returns the archetype that the current entity belongs to.","Returns the archetype that the current entity belongs to.","Retrieves this world’s Archetypes collection","","","","","","","","","","","","","","","","","","","Creates a new <code>UnsafeWorldCell</code> view with complete …","Creates a new <code>UnsafeWorldCell</code> view with only read access …","","","","","","","","","","","","","","","","","Retrieves this world’s Bundles collection","Retrieves a <code>WorldCell</code>, which safely enables multiple …","Reads the current change tick of this world.","Iterates all component change ticks and clamps any older …","Runs both <code>clear_entities</code> and <code>clear_resources</code>, invalidating …","Despawns all entities in this <code>World</code>.","Clears all resources in this <code>World</code>.","Clears the internal component tracker state.","","","","","","","","Returns the <code>ComponentId</code> of the given <code>Component</code> type <code>T</code>.","Retrieves this world’s Components collection","Returns <code>true</code> if the current entity has a component of type …","Returns <code>true</code> if the current entity has a component of type …","Returns <code>true</code> if the current entity has a component …","Returns <code>true</code> if the current entity has a component …","Returns <code>true</code> if a resource of type <code>R</code> exists. Otherwise …","Returns <code>true</code> if a resource of type <code>R</code> exists. Otherwise …","Returns <code>true</code> if the current entity has a component with …","Returns <code>true</code> if the current entity has a component with …","","","","","Despawns the current entity.","Despawns the given <code>entity</code>, if it exists. This will also …","","","","","","","Retrieves this world’s Entities collection","Retrieves this world’s Entities collection mutably","Retrieves an <code>EntityRef</code> that exposes read-only operations …","Retrieves an <code>EntityMut</code> that exposes read and write …","","","","","Contains error types returned by bevy’s schedule.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Creates <code>Self</code> using data from the given World","","","Gets access to the component of type <code>T</code> for the current …","Retrieves a reference to the given <code>entity</code>’s Component of …","Gets access to the component of type <code>T</code> for the current …","Gets the component of the given <code>ComponentId</code> from the …","Retrieves an immutable untyped reference to the given …","Gets the component of the given <code>ComponentId</code> from the …","Retrieves the change ticks for the given component. This …","Retrieves the change ticks for the given component. This …","Retrieves the change ticks for the given <code>ComponentId</code>. This …","Retrieves the change ticks for the given <code>ComponentId</code>. This …","Retrieves an <code>EntityRef</code> that exposes read-only operations …","Retrieves an <code>EntityMut</code> that exposes read and write …","Gets mutable access to the component of type <code>T</code> for the …","Retrieves a mutable reference to the given <code>entity</code>’s …","Gets a <code>MutUntyped</code> of the component of the given <code>ComponentId</code>…","Retrieves a mutable untyped reference to the given <code>entity</code>…","Gets a <code>!Send</code> resource to the resource with the id …","Gets a <code>!Send</code> resource to the resource with the id …","Gets an immutable reference to the non-send resource of …","Gets a reference to the non-send resource of the given …","Gets a mutable reference to the non-send resource of the …","Gets a mutable reference to the non-send resource of the …","Returns an <code>EntityMut</code> for the given <code>entity</code> (if it exists) …","","","Gets access to the component of type <code>T</code> for the current …","Gets a reference to the resource of the given type","Gets a reference to the resource of the given type if it …","Gets a pointer to the resource with the id <code>ComponentId</code> if …","Gets a mutable reference to the resource of the given type","Gets a mutable reference to the resource of the given type …","Gets a pointer to the resource with the id <code>ComponentId</code> if …","Gets a mutable reference to the resource of type <code>T</code> if it …","","","Returns the ID of the current entity.","Retrieves this <code>World</code>’s unique ID","Returns the ID of the current entity.","Increments the world’s current change tick and returns …","Initializes a new <code>Component</code> type and returns the …","Initializes a new <code>Component</code> type and returns the …","","Initializes a new non-send resource and returns the …","Initializes a new resource and returns the <code>ComponentId</code> …","","","","Adds a <code>Bundle</code> of components to the entity.","Inserts a dynamic <code>Component</code> into the entity.","Inserts a dynamic <code>Bundle</code> into the entity.","Inserts a new <code>!Send</code> resource with the given <code>value</code>. Will …","Inserts a new non-send resource with the given <code>value</code>.","For a given batch of (Entity, Bundle) pairs, either spawns …","Inserts a new resource with the given <code>value</code>.","Inserts a new resource with the given <code>value</code>. Will replace …","Returns the components of an <code>Entity</code> through <code>ComponentInfo</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","Returns this <code>EntityMut</code>’s <code>World</code>, consuming itself.","Return’s <code>true</code> if a resource of type <code>R</code> exists and was …","Return’s <code>true</code> if a resource of type <code>R</code> exists and was …","Returns an <code>Entity</code> iterator of current entities.","When called from within an exclusive system (a <code>System</code> that …","","Gets metadata indicating the location where the current …","Gets metadata indicating the location where the current …","","Creates a new empty World","Create a new, unique <code>WorldId</code>. Returns <code>None</code> if the supply …","","Gets an immutable reference to the non-send resource of …","Gets an immutable reference to the non-send resource of …","Gets a mutable reference to the non-send resource of the …","Gets a mutable reference to the non-send resource of the …","Returns <code>QueryState</code> for the given <code>WorldQuery</code>, which is used …","Returns <code>QueryState</code> for the given filtered <code>WorldQuery</code>, …","Reads the current change tick of this world.","Removes any components in the <code>Bundle</code> from the entity.","Removes the resource of a given type, if it exists. …","Removes a <code>!Send</code> resource from the world and returns it, if …","Removes the resource of a given type and returns it, if it …","Removes the resource of a given type, if it exists. …","Returns an iterator of entities that had components of …","Retrieves this world’s <code>RemovedComponentEvents</code> collection","Returns an iterator of entities that had components with …","Gets a reference to the resource of the given type","Gets a reference to the resource of the given type","Gets a mutable reference to the resource of the given type","Gets a mutable reference to the resource of the given type","Temporarily removes the requested resource from this <code>World</code>…","Runs the <code>Schedule</code> associated with the <code>label</code> a single time.","Runs the <code>Schedule</code> associated with the <code>label</code> a single time.","Temporarily removes the schedule associated with <code>label</code> …","Sends an <code>Event</code>.","Sends an <code>Event</code>.","Sends a batch of <code>Event</code>s from an iterator.","Sends a batch of <code>Event</code>s from an iterator.","Sends the default value of the <code>Event</code> of type <code>E</code>.","Sends the default value of the <code>Event</code> of type <code>E</code>.","","","","","","Spawns a new <code>Entity</code> with a given <code>Bundle</code> of components and …","Spawns a batch of entities with the same component Bundle …","Spawns a new <code>Entity</code> and returns a corresponding <code>EntityMut</code>, …","Retrieves this world’s Storages collection","Removes all components in the <code>Bundle</code> from the entity and …","","","","","","","","","","","","","","","","","","","Attempts to run the <code>Schedule</code> associated with the <code>label</code> a …","Temporarily removes the schedule associated with <code>label</code> …","","","","","","","","","Contains types that allow disjoint mutable access to a …","","","Updates the internal entity location to match the current …","Gets read-only access to the world that the current entity …","Gets read-only access to the world that the current entity …","Returns this <code>EntityMut</code>’s world.","Gives mutable access to this <code>EntityMut</code>’s <code>World</code> in a …","The error type returned by <code>World::try_run_schedule</code> if the …","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","A interior-mutable reference to a particular <code>Entity</code> and …","Variant of the <code>World</code> where resource and component accesses …","Returns the archetype that the current entity belongs to.","Retrieves this world’s Archetypes collection","","","","","","","","","Retrieves this world’s Bundles collection","Gets the current change tick of this world.","","","","","","","Retrieves this world’s Components collection","Returns <code>true</code> if the current entity has a component of type …","Returns <code>true</code> if the current entity has a component …","Returns <code>true</code> if the current entity has a component with …","Retrieves this world’s Entities collection","Returns the argument unchanged.","Returns the argument unchanged.","Safety","Gets the component of the given <code>ComponentId</code> from the …","Retrieves the change ticks for the given component. This …","Retrieves the change ticks for the given <code>ComponentId</code>. This …","Retrieves an <code>UnsafeEntityCell</code> that exposes read and write …","Safety","Retrieves a mutable untyped reference to the given <code>entity</code>…","Gets a reference to the non-send resource of the given …","Gets a <code>!Send</code> resource to the resource with the id …","Gets a mutable reference to the non-send resource of the …","Gets a <code>!Send</code> resource to the resource with the id …","Safety","Gets a reference to the resource of the given type if it …","Gets a pointer to the resource with the id <code>ComponentId</code> if …","Gets a mutable reference to the resource of the given type …","Gets a pointer to the resource with the id <code>ComponentId</code> if …","Retrieves this world’s unique ID.","Returns the ID of the current entity.","Increments the world’s current change tick and returns …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Returns the <code>Tick</code> indicating the last time that …","Gets metadata indicating the location where the current …","Reads the current change tick of this world.","Provides unchecked access to the internal data stores of …","","","","","","","","","Gets a reference to the <code>&amp;World</code> this <code>UnsafeWorldCell</code> …","Gets the world that the current entity belongs to.","Gets a reference to the <code>World</code> this <code>UnsafeWorldCell</code> belong …","Gets a mutable reference to the <code>World</code> this <code>UnsafeWorldCell</code> …"],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,5,6,1,19,13,1,5,5,6,6,17,7,7,8,8,19,13,1,5,6,17,7,8,6,8,19,13,1,5,6,17,7,8,19,13,1,5,6,17,7,8,5,6,7,8,5,6,7,8,5,6,7,8,7,13,13,17,5,6,7,8,6,8,13,1,13,19,13,5,6,7,8,5,5,5,6,6,6,7,7,7,8,8,8,5,6,7,8,19,13,1,5,6,17,7,8,17,1,1,17,13,1,17,8,13,17,6,8,13,1,5,1,1,19,13,1,5,6,17,7,8,19,13,1,5,6,17,7,8,19,13,1,5,6,17,7,8,19,13,1,5,6,17,7,8,13,1,13,1,5,7,13,8,13,13,19,5,6,7,8,19,13,1,5,6,17,7,8,19,13,1,5,6,17,7,8,19,13,1,5,6,17,7,8,0,0,0,0,0,0,37,27,27,38,37,27,38,27,37,27,38,37,27,38,27,27,27,37,38,27,27,27,27,27,27,27,37,27,38,38,38,38,38,27,27,37,27,38,37,27,38,37,27,38,37,27,38,37,27,38,27,27,37,27,38,37,27,38,37,27,38,0,0,0,236,0,0,0,0,0,0,0,45,40,41,46,42,43,45,40,41,46,42,43,40,41,42,43,45,40,41,46,42,43,45,40,41,46,42,43,45,40,41,46,42,43,236,40,41,42,43,45,46,45,40,41,46,42,40,41,42,46,45,40,41,46,42,43,45,45,40,41,46,46,42,42,42,43,45,40,41,46,45,40,41,46,45,40,41,46,42,43,45,40,41,46,42,43,45,40,41,46,42,45,40,41,46,42,43,45,40,41,46,42,43,45,40,40,46,42,42,237,45,40,41,46,42,43,237,45,40,41,46,42,43,237,45,40,41,46,42,43,46,40,41,42,46,46,42,40,41,42,43,46,236,40,41,42,43,236,236,40,41,42,43,46,46,45,40,41,46,42,43,45,40,41,46,42,43,45,40,41,46,42,43,46,46,43,0,0,0,0,0,0,0,0,0,30,238,31,0,50,0,31,0,0,0,57,56,59,239,240,61,31,31,60,15,15,58,30,30,57,56,59,239,240,61,31,60,15,58,30,57,56,59,15,239,240,61,31,60,15,58,30,57,56,59,239,240,61,31,60,15,58,30,57,56,59,57,31,15,30,57,56,31,15,30,57,56,31,15,30,56,15,58,31,58,59,60,31,15,30,15,31,15,30,31,31,31,15,15,15,30,30,30,61,31,60,15,58,30,57,56,239,240,61,31,60,15,15,58,30,57,56,59,31,58,30,59,58,58,58,58,58,59,58,15,15,60,15,58,58,58,58,58,59,239,240,61,31,60,15,58,30,57,56,59,239,240,61,31,60,15,58,30,57,56,59,239,240,61,31,60,15,58,30,56,59,239,240,61,31,60,15,58,30,57,56,59,56,56,58,30,60,58,56,60,58,61,60,61,15,30,59,61,61,15,58,30,56,15,61,60,31,15,30,57,56,239,240,61,31,60,15,58,30,57,56,59,239,240,61,31,60,15,58,30,57,56,59,239,240,61,61,31,60,60,15,58,30,57,56,59,0,0,0,0,0,0,21,0,68,68,21,69,69,80,83,71,21,21,21,68,69,80,83,71,21,21,68,69,21,21,21,80,83,71,21,68,69,80,83,71,21,68,69,68,21,69,21,21,69,21,69,21,21,68,21,71,21,21,21,71,21,69,21,21,21,21,21,68,68,68,71,21,68,69,68,80,83,71,21,21,68,69,21,21,21,71,21,71,68,80,80,80,68,21,21,21,21,21,21,21,68,71,80,83,71,21,68,69,80,83,71,21,21,68,69,80,83,71,21,68,69,80,83,71,21,68,69,83,21,71,68,71,71,71,68,241,21,21,83,21,21,21,21,21,21,21,21,21,21,21,21,21,71,68,68,68,68,21,21,21,21,21,21,83,21,69,69,21,21,69,68,80,83,71,21,68,69,80,83,71,21,68,69,80,83,71,21,68,69,21,21,21,21,21,21,71,71,0,0,0,0,0,0,0,0,0,91,98,93,93,94,90,91,98,92,95,93,94,90,91,98,92,95,93,93,94,90,91,98,92,95,93,94,90,91,98,92,95,90,91,92,93,93,93,93,94,95,90,92,90,93,93,93,93,93,93,90,93,93,90,91,92,95,93,94,90,91,98,92,95,90,92,90,91,98,90,90,93,93,91,98,93,94,90,91,98,92,95,93,94,90,91,98,92,95,93,94,90,91,98,92,95,93,94,90,91,98,92,95,94,91,95,90,91,92,91,92,90,91,92,94,95,94,90,91,92,95,92,95,91,98,94,95,94,95,90,90,93,90,98,98,90,98,94,95,93,93,93,94,90,91,98,92,95,93,94,90,91,98,92,95,93,94,90,91,98,92,95,90,90,95,0,0,110,0,0,0,0,103,0,0,0,103,103,103,115,115,110,0,0,0,110,0,0,0,0,0,0,0,0,0,0,103,0,103,0,0,0,0,55,55,102,54,55,54,55,55,55,55,242,243,106,244,245,246,120,112,113,108,105,54,54,55,55,102,247,248,107,110,110,115,242,243,106,244,245,246,120,112,113,108,105,54,55,102,247,248,107,110,115,105,105,107,107,107,108,242,243,106,244,245,246,120,112,113,108,105,54,55,102,247,248,107,110,115,242,243,106,244,245,246,120,112,113,108,105,54,55,102,247,248,107,110,115,54,102,54,55,102,107,110,103,242,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,106,244,245,246,246,246,246,246,246,246,246,246,246,246,246,246,246,246,246,247,248,54,55,102,107,110,54,55,102,107,110,102,54,55,102,54,55,110,54,55,110,54,54,54,55,55,55,110,110,110,54,55,102,55,103,242,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,106,244,245,246,246,246,246,246,246,246,246,246,246,246,246,246,246,246,246,247,248,112,113,103,103,246,246,246,246,246,246,246,246,246,246,246,246,246,246,246,246,247,248,107,105,54,55,102,110,110,115,115,108,105,108,105,105,242,243,106,244,245,246,120,112,113,108,105,54,55,102,102,247,248,107,110,115,105,54,55,102,105,54,55,102,102,105,105,105,105,105,105,105,105,105,105,54,54,54,54,54,105,103,242,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,106,244,245,246,246,246,246,246,246,246,246,246,246,246,246,246,246,246,246,247,248,103,242,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,106,244,245,246,246,246,246,246,246,246,246,246,246,246,246,246,246,246,246,247,248,242,243,106,244,245,246,120,112,113,108,105,54,55,102,247,248,107,110,115,242,243,106,244,245,246,120,112,113,108,105,54,55,102,247,248,107,110,115,242,243,106,244,245,246,108,105,54,55,102,247,248,107,110,115,242,243,106,244,245,246,120,112,113,108,105,54,55,102,247,248,107,110,115,120,112,113,54,55,102,105,105,105,105,105,105,105,105,105,105,105,120,103,242,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,106,244,245,246,246,246,246,246,246,246,246,246,246,246,246,246,246,246,246,247,248,107,107,105,54,107,105,120,112,113,105,105,110,115,54,55,54,54,103,242,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,106,244,245,246,246,246,246,246,246,246,246,246,246,246,246,246,246,246,246,247,248,103,242,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,106,244,245,246,246,246,246,246,246,246,246,246,246,246,246,246,246,246,246,247,248,103,242,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,106,244,245,246,246,246,246,246,246,246,246,246,246,246,246,246,246,246,246,247,248,105,105,120,112,113,54,55,102,107,110,110,115,242,243,106,244,245,246,120,112,113,108,105,54,55,102,247,248,107,110,115,242,243,106,244,245,246,120,112,113,108,105,54,55,102,247,248,107,110,115,242,243,106,244,245,246,120,112,113,108,105,54,55,102,247,248,107,110,115,103,242,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,106,244,245,246,246,246,246,246,246,246,246,246,246,246,246,246,246,246,246,247,248,105,105,103,242,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,106,244,245,246,246,246,246,246,246,246,246,246,246,246,246,246,246,246,246,247,248,105,54,0,0,0,0,0,0,124,126,127,129,124,126,127,129,124,127,128,126,129,130,124,127,128,126,129,130,124,127,128,126,129,130,124,127,128,126,129,130,124,127,128,126,129,130,124,127,128,126,129,130,124,127,128,126,129,130,124,127,124,126,127,129,130,130,130,124,126,124,127,128,126,129,130,124,128,126,124,130,127,124,126,127,129,124,127,128,126,129,130,124,127,128,126,129,130,124,127,128,126,129,130,124,127,128,126,129,130,128,128,124,127,126,129,124,126,127,129,124,126,127,124,126,127,129,124,126,127,129,124,127,128,126,129,130,124,127,128,126,129,130,124,127,128,126,129,130,124,127,128,126,129,130,0,0,0,0,0,0,133,78,134,135,133,78,134,135,133,78,134,135,133,78,134,135,133,133,78,78,78,134,135,134,134,133,78,134,135,78,134,135,133,134,135,135,135,133,135,133,78,134,135,133,78,134,135,133,78,134,135,133,78,134,135,133,133,133,133,133,133,135,133,133,133,133,135,78,78,134,135,133,78,134,135,133,78,134,135,133,135,155,0,0,0,0,0,0,140,155,0,155,155,160,0,155,155,155,160,0,0,0,0,148,0,0,169,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,157,141,155,169,0,169,0,0,0,0,157,0,140,0,0,0,0,0,0,0,155,155,160,138,138,140,139,139,142,163,163,143,164,164,161,140,139,139,142,163,163,143,164,164,140,139,139,142,163,163,143,164,164,144,144,0,138,147,0,147,249,140,142,143,166,138,158,158,147,159,167,168,169,169,154,157,157,165,156,153,155,160,161,162,162,149,149,150,150,151,151,170,171,249,140,142,143,166,138,158,147,159,167,168,169,154,157,165,156,153,155,160,161,162,149,150,151,170,171,152,158,157,162,149,149,150,150,151,151,152,149,150,151,140,139,139,142,163,163,143,164,164,249,140,142,143,166,138,158,147,159,167,168,169,154,157,165,156,153,155,160,161,162,149,150,151,170,171,249,140,142,143,166,138,158,147,159,167,168,169,154,157,165,156,153,155,160,161,162,149,150,151,170,171,153,156,140,139,139,143,164,164,147,158,147,159,157,160,161,162,149,150,151,158,147,159,157,160,161,162,149,150,151,158,147,159,157,160,161,162,149,150,151,157,0,147,138,138,153,165,166,138,159,167,168,169,154,165,156,153,161,170,171,153,170,140,139,139,172,152,158,162,149,150,151,158,169,157,162,149,150,151,152,158,157,162,149,149,150,150,151,151,172,158,169,157,160,152,162,149,150,151,170,158,158,158,169,169,169,157,157,157,162,162,162,149,149,149,150,150,150,151,151,151,158,157,155,155,160,161,162,149,150,151,170,171,249,140,142,143,166,138,158,147,159,167,168,169,154,157,165,156,153,155,160,161,162,149,150,151,170,171,151,166,138,159,167,168,169,154,165,156,153,161,170,171,165,170,138,147,165,153,153,138,156,138,172,158,157,152,162,149,150,151,153,161,139,139,163,163,164,164,140,139,139,142,163,163,143,164,164,138,147,153,152,152,165,249,140,142,143,166,138,158,147,159,167,168,169,154,157,165,156,153,155,160,161,162,149,150,151,170,171,249,140,142,143,166,138,158,147,159,167,168,169,154,157,165,156,153,155,160,161,162,149,150,151,170,171,249,140,142,143,166,138,158,147,159,167,168,169,154,157,165,156,153,155,160,161,162,149,150,151,170,171,249,140,142,143,166,138,158,147,159,167,168,169,154,157,165,156,153,155,160,161,162,149,150,151,170,171,158,162,147,147,141,158,162,172,172,162,147,147,157,157,165,165,147,166,138,159,167,168,154,165,153,161,170,139,139,163,163,164,164,144,144,157,155,165,165,161,138,147,0,140,139,139,142,163,163,147,171,138,153,138,138,147,153,153,172,172,158,153,151,158,147,159,157,160,161,162,149,150,151,155,249,140,142,143,166,138,158,147,159,167,168,169,154,157,165,156,153,155,160,161,162,149,150,151,170,171,249,140,142,143,166,138,158,147,159,167,168,169,154,157,165,156,153,155,160,161,162,149,150,151,170,171,249,140,142,143,166,138,158,147,147,159,167,168,169,154,157,165,156,153,155,160,161,162,149,150,151,170,171,147,161,148,250,250,250,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,184,53,182,179,181,178,183,34,34,22,22,180,64,184,53,182,179,181,178,183,34,22,180,64,184,53,182,179,181,178,183,34,22,180,64,184,53,182,179,181,178,183,34,22,180,64,178,179,178,180,34,22,34,22,34,22,53,181,178,182,179,178,183,64,184,34,22,34,53,53,53,34,22,34,34,34,22,22,22,181,178,34,22,180,184,53,182,179,181,178,183,34,22,180,64,182,179,178,183,64,182,179,181,178,183,180,181,180,180,180,181,180,180,180,53,184,180,180,180,180,180,178,178,101,184,181,180,180,181,53,184,182,34,22,182,178,178,184,53,182,179,181,178,183,34,22,180,64,184,53,182,179,181,178,183,34,22,180,64,178,34,22,184,53,182,179,181,178,183,34,22,180,64,53,182,179,181,178,183,180,184,180,53,182,179,178,183,178,182,179,181,178,183,180,178,34,22,64,178,64,101,64,64,34,22,184,53,182,179,181,178,183,34,22,180,64,184,53,182,179,181,178,183,34,22,180,64,184,53,182,179,181,178,183,34,22,180,64,178,178,178,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,207,209,211,146,0,0,0,0,0,251,201,0,0,221,221,221,221,0,0,207,209,211,146,0,209,211,0,0,0,0,0,0,0,0,0,0,0,0,0,0,251,201,0,0,177,0,0,0,0,0,0,0,0,0,0,0,187,189,190,188,217,191,192,194,195,197,198,199,200,202,201,201,225,225,225,225,225,225,225,225,218,220,203,203,214,189,204,205,206,146,208,210,212,146,208,210,212,208,191,187,192,194,195,197,198,199,200,210,202,212,215,225,216,218,219,213,220,228,203,214,189,204,205,206,28,221,221,222,208,191,187,192,194,195,197,198,199,200,210,202,212,215,225,216,218,219,213,220,228,203,214,189,204,205,206,28,221,222,213,0,0,0,208,191,187,192,194,195,197,198,199,200,210,202,212,215,225,216,218,219,213,220,228,203,214,189,204,205,206,28,221,222,208,191,187,192,194,195,197,198,199,200,210,202,212,215,225,216,218,219,213,220,228,203,214,189,204,205,206,28,221,222,195,204,192,194,146,208,210,212,208,212,28,208,212,28,208,212,28,207,214,187,146,208,210,212,215,203,208,210,212,146,146,216,218,219,213,220,216,218,220,187,221,189,195,205,206,221,221,221,221,215,146,216,219,213,213,204,205,206,221,221,222,215,215,208,191,187,192,194,195,197,198,199,200,210,202,212,215,225,216,218,219,219,213,220,228,203,214,189,204,205,206,28,221,222,202,203,202,215,215,215,215,189,215,146,208,210,212,202,202,215,215,202,215,189,251,201,202,215,225,225,225,225,225,225,225,225,216,216,218,219,213,220,214,189,222,215,215,215,202,187,251,202,216,189,201,215,225,225,225,225,225,225,225,225,216,218,219,213,220,214,189,222,146,208,210,212,187,189,189,208,191,187,192,194,195,197,198,199,200,210,202,212,215,225,216,218,219,213,220,228,203,214,189,204,205,206,28,221,222,208,191,187,192,194,195,197,198,199,200,210,202,212,215,225,216,218,219,213,220,228,203,214,189,204,205,206,28,221,222,208,191,187,192,194,195,197,198,199,200,210,202,212,215,225,216,218,219,213,220,228,203,214,189,204,205,206,28,221,222,208,191,187,192,194,195,197,198,199,200,210,202,212,215,225,216,218,219,213,220,228,203,214,189,204,205,206,28,221,222,208,210,212,220,215,215,216,216,177,208,210,212,219,219,215,146,208,210,212,146,208,210,212,28,215,215,215,215,215,215,215,215,215,215,222,0,187,215,215,202,202,146,208,210,212,213,28,208,197,199,202,189,206,215,201,201,225,225,225,225,225,225,225,225,220,214,189,189,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,215,215,177,221,203,187,189,198,209,211,208,210,146,146,252,252,146,208,210,212,146,208,210,212,28,215,215,189,189,189,222,208,212,28,215,213,221,208,191,187,192,194,195,197,198,199,200,210,202,212,215,225,216,218,219,213,220,228,203,214,189,204,205,206,28,221,222,208,191,187,192,194,195,197,198,199,200,210,202,212,215,225,216,218,219,213,220,228,203,214,189,204,205,206,28,221,222,146,208,208,191,187,192,194,195,197,198,199,200,210,210,202,212,212,215,225,216,218,219,213,220,228,203,214,189,204,205,206,28,221,222,146,208,210,212,202,202,188,188,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,25,125,131,25,125,232,229,230,231,25,131,123,123,125,232,229,230,231,25,131,123,123,25,25,125,232,229,230,231,25,131,123,125,232,229,230,231,25,131,123,25,25,25,25,25,25,25,25,131,123,131,131,123,131,123,25,25,125,131,125,131,25,25,125,131,25,230,231,231,125,25,232,229,230,231,123,123,25,25,25,25,123,123,123,123,0,131,25,123,125,232,229,230,231,25,131,131,123,196,25,123,125,25,131,125,25,131,125,131,125,131,25,25,125,25,125,25,25,25,229,25,229,25,25,25,123,131,229,25,25,229,25,25,25,123,123,125,25,131,25,25,25,131,25,25,25,131,123,125,125,125,25,25,25,25,25,25,125,232,229,230,231,25,131,123,125,232,229,230,231,25,131,123,125,25,131,123,125,232,229,230,231,25,131,123,232,125,25,25,25,25,232,125,131,131,25,123,232,229,25,229,25,25,25,25,125,25,25,25,25,25,25,25,229,25,229,25,25,25,25,25,229,25,229,25,229,25,131,131,131,232,123,25,25,25,25,125,131,123,125,232,229,230,231,25,131,123,125,232,229,230,231,25,131,123,25,25,125,232,229,230,231,25,131,123,0,131,131,125,125,131,125,125,0,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,0,0,132,29,29,132,29,132,29,132,29,132,29,29,29,132,29,132,29,132,29,132,132,132,29,29,132,132,132,132,132,29,132,132,29,29,29,29,132,29,29,29,29,29,132,29,29,132,29,132,29,132,29,132,29,132,29,29,29,132,29,132,29,132,29,132,29,132,29,29],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],4],[[],4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[5,5],[6,6],[7,7],[8,8],[[]],[[]],[[]],[[]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[7,7],12],[13,14],[[13,15],16],[[],17],[4,16],[4,16],[4,16],[4,16],[18],[18],[13,17],[1,13],[13,[[20,[19]]]],[19,21],[[13,5],22],[[5,5],16],[[6,6],16],[[7,7],16],[[8,8],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[5,23],24],[[6,23],24],[[7,23],24],[[8,23],24],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[25],[1,7],[[1,6],[[26,[13]]]],[[17,27],[[26,[6]]]],[[13,15],[[26,[8]]]],[[28,29,30]],[[17,27],[[26,[[26,[6]]]]]],[2,8],[[13,15],[[26,[31]]]],[[17,27],[[26,[[26,[6]]]]]],[[6,18]],[[8,18]],[13,6],[[1,6]],[5,2],[[1,6]],[[25,28]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[11,[10]]],[[11,[3,10]]]],[[[11,[10]]],[[11,[3,10]]]],[[[11,[10]]],[[11,[3,10]]]],[[[11,[10]]],[[11,[3,10]]]],[[[11,[10]]],[[11,[3,10]]]],[[[11,[10]]],[[11,[3,10]]]],[[[11,[10]]],[[11,[3,10]]]],[[[11,[10]]],[[11,[3,10]]]],[32,[[32,[3]]]],[32,[[32,[3]]]],[32,[[32,[3]]]],[32,[[32,[3]]]],[32,[[32,[3]]]],[32,[[32,[3]]]],[32,[[32,[3]]]],[32,[[32,[3]]]],[33,[[33,[3]]]],[33,[[33,[3]]]],[33,[[33,[3]]]],[33,[[33,[3]]]],[33,[[33,[3]]]],[33,[[33,[3]]]],[33,[[33,[3]]]],[33,[[33,[3]]]],[13,16],[1,14],[13,2],[1,2],[2,5],[[7,7],[[26,[12]]]],[13,14],[8,2],[13,14],[13,34],[19,22],[[]],[[]],[[]],[[]],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],0,0,0,0,0,0,[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],4],[[]],[[]],[[]],[[]],[[]],[[]],[27,27],[[]],[[],[[11,[9,10]]]],[37,[[20,[15]]]],[[],38],[4,16],[18],[[27,27],16],[[],16],[[],16],[[],16],[[27,23],24],[[]],[[]],[[]],[25],[[38,27],[[26,[37]]]],[[38,36],[[26,[27]]]],[[28,29,30]],[2,27],[[27,18]],[37,27],[27,2],[[25,28]],[[]],[[]],[[]],[[[11,[10]]],[[11,[3,10]]]],[[[11,[10]]],[[11,[3,10]]]],[[[11,[10]]],[[11,[3,10]]]],[32,[[32,[3]]]],[32,[[32,[3]]]],[32,[[32,[3]]]],[33,[[33,[3]]]],[33,[[33,[3]]]],[33,[[33,[3]]]],[27,2],[[]],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],36],[[],36],[[],36],0,0,0,0,0,0,0,0,0,0,0,[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[[40,[39]]],39],[41],[42],[43,44],[[[45,[39]]],39],[[[40,[39]]],39],[41],[46],[42],[43,47],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[40,[[0,[48,39]]]]]],[[[41,[48]]]],[[[42,[48]]]],[43],[[[45,[39]]],[[45,[39]]]],[[]],[[[45,[[0,[48,39]]]]]],[[[40,[[0,[48,39]]]]]],[[[41,[48]]]],[[[46,[48]]]],[[[42,[48]]]],[[[40,[[0,[48,39]]]]]],[[[41,[48]]]],[[[42,[48]]]],[[21,22]],[[[45,[[0,[49,48,39]]]],23],24],[[[40,[[0,[49,48,39]]]],23],24],[[[41,[[0,[49,48]]]],23],24],[[[46,[[0,[49,48]]]],23],24],[[[42,[[0,[49,48]]]],23],24],[[43,23],24],[[]],[[[40,[39]]],[[45,[39]]]],[[]],[[]],[[]],[[[42,[48]]],[[46,[48]]]],[[[40,[39]]],[[42,[39]]]],[[]],[41,42],[[]],[[28,29,30]],[[28,29,30]],[[28,29,30]],[[29,15,30,30],[[0,[50]]]],[[25,28]],[[25,28]],[[25,28]],[25,15],[[]],[[]],[[]],[[]],[[]],[[]],[[[11,[10]]],[[11,[3,10]]]],[[[11,[10]]],[[11,[3,10]]]],[[[11,[10]]],[[11,[3,10]]]],[[[11,[10]]],[[11,[3,10]]]],[[[11,[10]]],[[11,[3,10]]]],[[[11,[10]]],[[11,[3,10]]]],[32,[[32,[3]]]],[32,[[32,[3]]]],[32,[[32,[3]]]],[32,[[32,[3]]]],[32,[[32,[3]]]],[33,[[33,[3]]]],[33,[[33,[3]]]],[33,[[33,[3]]]],[33,[[33,[3]]]],[33,[[33,[3]]]],[33,[[33,[3]]]],[[[45,[39]]],39],[[[40,[[0,[48,39]]]]],[[0,[48,39]]]],[[[41,[48]]],48],[[[46,[48]]],48],[[[42,[48]]],48],[43,44],[[[45,[39]]]],[[[40,[39]]]],[[[40,[39]]]],[46],[42],[42],[[],16],[[[45,[[0,[48,39]]]]],16],[[[40,[[0,[48,39]]]]],16],[[[41,[48]]],16],[[[46,[48]]],16],[[[42,[48]]],16],[43,16],[[],16],[[[45,[[0,[48,39]]]]],16],[[[40,[[0,[48,39]]]]],16],[[[41,[48]]],16],[[[46,[48]]],16],[[[42,[48]]],16],[43,16],[[],30],[[[45,[[0,[48,39]]]]],30],[[[40,[[0,[48,39]]]]],30],[[[41,[48]]],30],[[[46,[48]]],30],[[[42,[48]]],30],[43,30],[[[46,[48]],51],[[46,[48]]]],[[[40,[[0,[48,39]]]],51],[[42,[48]]]],[[[41,[48]],51],[[42,[48]]]],[[[42,[48]],51],[[42,[48]]]],[[15,52],16],[[48,30,30,30,30],[[46,[48]]]],[[48,30,30,30,30],[[42,[48]]]],[[[40,[[0,[48,39]]]]],[[42,[[0,[48,39]]]]]],[[[41,[48]]],[[42,[48]]]],[[[42,[48]]],[[42,[48]]]],[43,43],[[[0,[50]],15,13,53]],[[]],[[[40,[[0,[48,39]]]]]],[[[41,[48]]]],[[[42,[48]]]],[43],[[]],[30],[[[40,[[0,[48,39]]]],30]],[[[41,[48]],30]],[[[42,[48]],30]],[[43,30]],[[[0,[50]],15,53]],[[[46,[50]]],[[46,[50]]]],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[15,13,[54,[8]]]],[[15,[55,[15]]]],[43,42],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[56,30],[[28,25]],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[31,31],[15,15],[30,30],[57,57],[56,56],[[]],[[]],[[]],[[]],[[]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[15,15],12],[58,[[26,[15]]]],[[],31],[[],58],[[[59,[50]]]],[60,26],[4,16],[4,16],[4,16],[18],[[31,31],16],[[15,15],16],[[30,30],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[61,23],24],[[31,23],24],[[60,23],24],[[15,23],24],[[58,23],24],[[30,23],24],[[57,23],24],[[56,23],24],[[]],[[]],[[]],[[]],[[]],[[]],[[[59,[50]]],15],[[]],[[]],[[]],[[]],[[]],[25],[25],[30,62],[[[59,[50]]],15],[[58,36],[[26,[15]]]],[[58,15],[[26,[60]]]],[[58,15],60],[[58,15],[[26,[63]]]],[[28,29,30]],[[28,29,30]],[[58,36],[[26,[15]]]],[2,15],[[15,18]],[60,15],[15,2],[[58,64],15],[[58,64,61],15],[58,15],[58,15],[[25,28]],[[25,28]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[11,[10]]],[[11,[3,10]]]],[[[11,[10]]],[[11,[3,10]]]],[[[11,[10]]],[[11,[3,10]]]],[[[11,[10]]],[[11,[3,10]]]],[[[11,[10]]],[[11,[3,10]]]],[[[11,[10]]],[[11,[3,10]]]],[[[11,[10]]],[[11,[3,10]]]],[[[11,[10]]],[[11,[3,10]]]],[[[11,[10]]],[[11,[3,10]]]],[[[11,[10]]],[[11,[3,10]]]],[[[11,[10]]],[[11,[3,10]]]],[32,[[32,[3]]]],[32,[[32,[3]]]],[32,[[32,[3]]]],[32,[[32,[3]]]],[32,[[32,[3]]]],[32,[[32,[3]]]],[32,[[32,[3]]]],[32,[[32,[3]]]],[32,[[32,[3]]]],[32,[[32,[3]]]],[33,[[33,[3]]]],[33,[[33,[3]]]],[33,[[33,[3]]]],[33,[[33,[3]]]],[33,[[33,[3]]]],[33,[[33,[3]]]],[33,[[33,[3]]]],[33,[[33,[3]]]],[33,[[33,[3]]]],[33,[[33,[3]]]],[33,[[33,[3]]]],[[56,30,30],16],[[56,30,30],16],[58,16],[[30,30,30],16],[60,16],[58,14],[56,30],[60,65],[58,2],[61,63],[60,63],[[],61],[2,15],[62,30],[[13,28]],[[],61],[[[67,[[66,[63]]]],31,65,26],61],[[15,15],[[26,[12]]]],[58,[[26,[15]]]],[[30,62]],[[56,30]],[15,2],[61,31],[60,31],[[]],[[]],[[]],[[]],[[]],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],36],[[],36],[[],36],[61,[[26,[36]]]],[[],36],[60,[[26,[36]]]],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],0,0,0,0,0,0,0,0,[68,21],[[68,21],[[26,[69]]]],[[21,70]],0,0,[[],3],[[],3],[[],3],[21,3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[21,3],[[],3],[[],3],[[],4],[21,70],[21,70],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[68],[21,21],[69,69],[[]],[[]],[[]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[21,[[11,[70]]]],[[21,21],12],[[68,21],16],[[],[[26,[63]]]],[[],71],[72,[[35,[21]]]],[4,16],[18],[[71,21],[[73,[21,21]]]],[[21,21],16],[[69,69],16],[[],16],[[],16],[[],16],[74,[[35,[75,76]]]],[[21,22]],[[68,77]],[[68,2]],[68],[[71,23],24],[[21,23],24],[[68,23],24],[[69,23],24],[[68,21],[[26,[69]]]],[[]],[[]],[[]],[78,21],[[]],[[]],[[]],[79,21],[62,21],[70,[[26,[21]]]],[25],[21,62],[[71,21],[[26,[21]]]],[[68,21],[[26,[69]]]],[80,71],[80,71],[[80,21],21],[[28,29,30]],[21,[[26,[81]]]],[2,21],[[],82],[[21,18]],[21,62],[[29,30,30]],[25],[[25,28]],[[71,21,21],[[26,[21]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[[11,[10]]],[[11,[3,10]]]],[[[11,[10]]],[[11,[3,10]]]],[[[11,[10]]],[[11,[3,10]]]],[[[11,[10]]],[[11,[3,10]]]],[[[11,[21]]],[[11,[3]]]],[[[11,[10]]],[[11,[3,10]]]],[[[11,[10]]],[[11,[3,10]]]],[32,[[32,[3]]]],[32,[[32,[3]]]],[32,[[32,[3]]]],[32,[[32,[3]]]],[32,[[32,[3]]]],[32,[[32,[3]]]],[33,[[33,[3]]]],[33,[[33,[3]]]],[33,[[33,[3]]]],[33,[[33,[3]]]],[33,[[33,[3]]]],[33,[[33,[3]]]],[[]],[[[11,[21]]],[[11,[70]]]],[71,16],[68,16],[71,14],[71,14],[71,2],[68,62],[80],[52,16],[[],[[26,[63]]]],[83,26],[[21,21],[[26,[12]]]],[[],[[26,[63]]]],[21,[[26,[79]]]],[[],[[26,[63]]]],[21,84],[[[11,[21]]],85],[[21,70],[[26,[16]]]],[63,[[35,[70,86]]]],[63,[[35,[70,86]]]],[21,87],[[],63],[[],[[26,[63]]]],[[],63],[[71,21],[[26,[21]]]],[[68,62]],[[68,62],83],[68,21],[[68,62],[[26,[21]]]],[[21,88],35],[[21,[11,[70]]],[[35,[[11,[70]]]]]],[[13,53]],[53],[[],63],[[]],[83],[21,2],0,0,[21,79],[[]],[[]],[68,2],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],[[26,[63]]]],[[],81],[21,63],[[],63],[[13,[54,[8]]]],[[[55,[15]]]],[71,14],[[71,25,51]],0,0,0,0,0,0,0,0,0,[[28,25]],[[28,25]],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[90,[89]]]],[[[91,[89]]]],[[[92,[89]],[90,[89]]]],[[[93,[89]]],[[93,[89]]]],[[]],[[],[[11,[9,10]]]],[[[93,[89]],[93,[89]]],12],[[[94,[89]]],2],[[[95,[89]]],2],[[],[[90,[89]]]],[[],[[92,[89]]]],[[[90,[89]]],14],[4,16],[18],[[[93,[89]],[93,[89]]],16],[[],16],[[],16],[[],16],[[[90,[89]],96]],[[[93,[89]],23],24],[[[93,[89]],23],24],[[[90,[[0,[49,89]]]],23],24],[[[91,[[0,[49,89]]]],23],24],[[[92,[[0,[49,89]]]],23],24],[[[95,[[0,[49,89]]]],23],24],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[25],[25],[[[90,[89]],2],26],[[28,29,30]],[[28,29,30]],[[[90,[89]]],[[92,[89]]]],[[[90,[89]]],[[92,[89]]]],[[[93,[89]],18]],0,[[25,28]],[[25,28]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[11,[10]]],[[11,[3,10]]]],[[[11,[10]]],[[11,[3,10]]]],[[[11,[10]]],[[11,[3,10]]]],[[[11,[10]]],[[11,[3,10]]]],[[[11,[10]]],[[11,[3,10]]]],[[[11,[10]]],[[11,[3,10]]]],[[[11,[10]]],[[11,[3,10]]]],[32,[[32,[3]]]],[32,[[32,[3]]]],[32,[[32,[3]]]],[32,[[32,[3]]]],[32,[[32,[3]]]],[32,[[32,[3]]]],[32,[[32,[3]]]],[33,[[33,[3]]]],[33,[[33,[3]]]],[33,[[33,[3]]]],[33,[[33,[3]]]],[33,[[33,[3]]]],[33,[[33,[3]]]],[33,[[33,[3]]]],[[]],[[[91,[89]]]],[[]],[[[90,[89]]],16],[[[91,[89]]],16],[[[92,[89]],[90,[89]]],16],[[[91,[89]]],[[94,[89]]]],[[[92,[89]],[90,[89]]],[[94,[89]]]],[[[90,[89]]],97],[[[91,[89]]],[[95,[89]]]],[[[92,[89]],[90,[89]]],[[95,[89]]]],[[[94,[89]]],26],[[[95,[89]]],26],[[[94,[89]]],2],[[[90,[89]]],2],[[[91,[89]]],2],[[[92,[89]],[90,[89]]],2],[[[95,[89]]],2],[[[92,[89]],[90,[89]]],2],[[[92,[89]],[90,[89]]],[[95,[89]]]],[[13,28]],[[13,28]],[[[94,[89]]],26],[[[95,[89]]],26],[[[94,[89]],2],26],[[[95,[89]],2],26],[[[90,[89]]],2],[[[90,[89]]],2],[[[93,[89]],[93,[89]]],[[26,[12]]]],[[[90,[89]],89]],[[[98,[89]],89]],[[[98,[89]],96]],[[[90,[99,89]]]],[[[98,[99,89]]]],[[[94,[89]]]],[[[95,[89]]]],[[]],[[],100],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[[90,[89]]]],[[[40,[[90,[89]]]]]],[[[95,[89]]],[[94,[89]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[55,[101]]],[[54,[101]]]],[[[55,[101]]],[[54,[101]]]],[[[102,[101]],[55,[101]]]],[[[54,[101]],101]],[[[55,[101]],101]],[[[54,[101]],101]],[[[55,[101]],101]],[[[55,[101]],101]],[[[55,[101]],101]],[[[55,[101]],[55,[101]]]],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[[105,[103,104]]],[[105,[[106,[103]],104]]]],[[[105,[103,104]]],105],0,[[107,2],107],0,[[[108,[103,104]],107],[[108,[103,104]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[54,[101]]]],[[[102,[101]]]],[[[54,[[0,[109,101]]]]],[[54,[[0,[109,101]]]]]],[[[55,[[0,[109,101]]]]],[[55,[[0,[109,101]]]]]],[[[102,[[0,[109,101]]]]],[[102,[[0,[109,101]]]]]],[107,107],[110,110],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[[102,[101]]],[[54,[101]]]],[[],[[54,[101]]]],[[],[[55,[101]]]],[[],[[102,[101]]]],[4,16],[4,16],[4,16],[[[54,[[0,[111,101]]]],[54,[[0,[111,101]]]]],16],[[[55,[[0,[111,101]]]],[55,[[0,[111,101]]]]],16],[[110,110],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[[54,[101]],[54,[101]]]],[[[55,[101]],[55,[101]]]],[[[102,[101]],[102,[101]]]],[[[55,[101]],[55,[101]]]],[[21,22]],[[21,22]],[[21,22]],[[21,22]],[[21,22]],[[21,22]],[[21,22]],[[21,22]],[[21,22]],[[21,22]],[[21,22]],[[21,22]],[[21,22]],[[21,22]],[[21,22]],[[21,22]],[[21,22]],[[21,22]],[[21,22]],[[21,22]],[[21,22]],[[21,22]],[[21,22]],[[21,22]],[[21,22]],[[21,22]],[[21,22]],[[21,22]],[[21,22]],[[21,22]],[[21,22]],[[21,22]],[[21,22]],[[21,22]],[[21,22]],[[21,22]],[[21,22]],[[21,22]],[[21,22]],[[[112,[103,104,14]]],26],[[[113,[103,104]]],[[26,[114]]]],[[21,22],16],[[21,22],16],[[21,22],16],[[21,22],16],[[21,22],16],[[21,22],16],[[21,22],16],[[21,22],16],[[21,22],16],[[21,22],16],[[21,22],16],[[21,22],16],[[21,22],16],[[21,22],16],[[21,22],16],[[21,22],16],[[21,22],16],[[21,22],16],[[21,22],16],[[21,22],16],[2,107],[[[105,[103,104]],23],24],[[[54,[[0,[101,49]]]],23],24],[[[55,[[0,[49,101]]]],23],24],[[[102,[[0,[49,101]]]],23],24],[[110,23],24],[[110,23],24],[[115,23],24],[[115,23],24],[[[108,[104,104]],[0,[52,116,117,109]]]],[[[105,[103,104]],25,77]],[[[108,[103,104]],[0,[52,116,117,109]]]],[[[105,[103,104]],25,77]],[[[105,[103,104]],29,77]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[55,[101]]],[[102,[101]]]],[[]],[[]],[[]],[[]],[[]],[25,[[105,[103,104]]]],[25],[25],[25],[[[105,[103,104]],25,21],[[35,[[118,[103]],110]]]],[[[54,[101]],[54,[101]]],[[119,[101]]]],[[[55,[101]],[55,[101]]],[[119,[101]]]],[[[102,[101]],[102,[101]]],[[119,[101]]]],[[[102,[101]],[55,[101]]],[[119,[101]]]],[[[105,[103,104]],25,21],[[35,[[118,[103]],110]]]],[[[105,[103,104]],25,[114,[21]]],[[35,[[114,[[118,[103]]]],110]]]],[[[105,[103,104]],25,[114,[21]]],[[35,[114,110]]]],[[[105,[103,104]],25,21],[[35,[110]]]],[28],[[[105,[103,104]],25],[[35,[[118,[103]],115]]]],[[[105,[103,104]],25],[[35,[115]]]],[[[105,[103,104]],29],[[35,[115]]]],[[[105,[103,104]],29,30,30],[[35,[115]]]],[[[105,[103,104]],29,21],[[35,[110]]]],[[[54,[101]],2]],[[[54,[101]]],16],[[[54,[101]],101],16],[[[54,[101]]],16],[[[54,[101]],101],16],[[25,28]],[[29,30,30]],[[29,30,30]],[[29,30,30]],[[29,30,30]],[[29,30,30]],[[29,30,30]],[[29,30,30]],[[29,30,30]],[[29,30,30]],[[29,30,30]],[[29,30,30]],[[29,30,30]],[[29,30,30]],[[29,30,30]],[[29,30,30]],[[29,30,30]],[[29,30,30]],[[29,30,30]],[[29,30,30]],[[29,15,30,30]],[[29,15,30,30]],[[29,30,30]],[[29,30,30]],[[29,30,30]],[[29,30,30]],[[29,30,30]],[[29,30,30]],[[29,30,30]],[[29,30,30]],[[29,30,30]],[[29,30,30]],[[29,30,30]],[[29,30,30]],[[29,30,30]],[[29,30,30]],[[29,30,30]],[[29,30,30]],[[29,15,30,30]],[[29,15,30,30]],[25],[25,15],[25],[25],[25],[25],[25],[25],[25],[25],[25],[25],[25],[25],[25],[25],[25],[25],[25],[25,15],[25,15],[25],[25],[25],[25],[25],[25],[25],[25],[25],[25],[25],[25],[25],[25],[25],[25],[25,15],[25,15],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[11,[10]]],[[11,[3,10]]]],[[[11,[10]]],[[11,[3,10]]]],[[[11,[10]]],[[11,[3,10]]]],[[[11,[10]]],[[11,[3,10]]]],[[[11,[10]]],[[11,[3,10]]]],[[[11,[10]]],[[11,[3,10]]]],[[[11,[10]]],[[11,[3,10]]]],[[[11,[10]]],[[11,[3,10]]]],[[[11,[10]]],[[11,[3,10]]]],[[[11,[10]]],[[11,[3,10]]]],[[[11,[10]]],[[11,[3,10]]]],[[[11,[10]]],[[11,[3,10]]]],[[[11,[10]]],[[11,[3,10]]]],[[[11,[10]]],[[11,[3,10]]]],[[[11,[10]]],[[11,[3,10]]]],[[[11,[10]]],[[11,[3,10]]]],[[[11,[10]]],[[11,[3,10]]]],[[[11,[10]]],[[11,[3,10]]]],[[[11,[10]]],[[11,[3,10]]]],[32,[[32,[3]]]],[32,[[32,[3]]]],[32,[[32,[3]]]],[32,[[32,[3]]]],[32,[[32,[3]]]],[32,[[32,[3]]]],[32,[[32,[3]]]],[32,[[32,[3]]]],[32,[[32,[3]]]],[32,[[32,[3]]]],[32,[[32,[3]]]],[32,[[32,[3]]]],[32,[[32,[3]]]],[32,[[32,[3]]]],[32,[[32,[3]]]],[32,[[32,[3]]]],[33,[[33,[3]]]],[33,[[33,[3]]]],[33,[[33,[3]]]],[33,[[33,[3]]]],[33,[[33,[3]]]],[33,[[33,[3]]]],[33,[[33,[3]]]],[33,[[33,[3]]]],[33,[[33,[3]]]],[33,[[33,[3]]]],[33,[[33,[3]]]],[33,[[33,[3]]]],[33,[[33,[3]]]],[33,[[33,[3]]]],[33,[[33,[3]]]],[33,[[33,[3]]]],[33,[[33,[3]]]],[33,[[33,[3]]]],[33,[[33,[3]]]],[[]],[[]],[[]],[[[54,[101]],[54,[101]]],16],[[[55,[101]],[55,[101]]],16],[[[102,[101]],[102,[101]]],16],[[[105,[103,104]],25,30,30],16],[[[105,[103,104]],25],120],[[[105,[103,104]],25],113],[[[105,[103,104]],25],[[113,[103,104]]]],[[[105,[103,104]],29],[[113,[103,104]]]],[[[105,[103,104]],25],120],[[[105,[103,104]],25,96],112],[[[105,[103,104]],25,96],112],[[[105,[103,104]],25,96],[[112,[103,104]]]],[[[105,[103,104]],25],[[120,[103,104]]]],[[[105,[103,104]],29],[[120,[103,104]]]],[[[120,[103,[0,[121,104]]]]],2],[52,16],[52,16],[52,16],[52,16],[52,16],[52,16],[52,16],[52,16],[52,16],[52,16],[52,16],[52,16],[52,16],[52,16],[52,16],[52,16],[52,16],[52,16],[52,16],[[15,52],16],[[15,52],16],[52,16],[52,16],[52,16],[52,16],[52,16],[52,16],[52,16],[52,16],[52,16],[52,16],[52,16],[52,16],[52,16],[52,16],[52,16],[52,16],[[15,52],16],[[15,52],16],[[107,2],107],[[107,2],107],[25,[[105,[103,104]]]],[[],[[54,[101]]]],[[],107],[[[105,[103,104]],13]],[[[120,[103,104]]],26],[[[112,[104,104,14]]],26],[[[113,[104,104]]],26],[[[105,[103,104]],25],108],[[[105,[103,104]],25],[[108,[103,104]]]],[122],[122],[[[54,[101]]]],[[[55,[101]]]],[[[54,[101]]],14],[[[54,[101]]],14],[[13,53]],[[13,53]],[[13,53]],[[13,53]],[[13,53]],[[13,53]],[[13,53]],[[13,53]],[[13,53]],[[13,53]],[[13,53]],[[13,53]],[[13,53]],[[13,53]],[[13,53]],[[13,53]],[[13,53]],[[13,53]],[[13,53]],[[15,13,53]],[[15,13,53]],[[13,53]],[[13,53]],[[13,53]],[[13,53]],[[13,53]],[[13,53]],[[13,53]],[[13,53]],[[13,53]],[[13,53]],[[13,53]],[[13,53]],[[13,53]],[[13,53]],[[13,53]],[[13,53]],[[15,13,53]],[[15,13,53]],[53],[53],[53],[53],[53],[53],[53],[53],[53],[53],[53],[53],[53],[53],[53],[53],[53],[53],[53],[[15,53]],[53],[53],[53],[53],[53],[53],[53],[53],[53],[53],[53],[53],[53],[53],[53],[53],[53],[[15,53]],[[15,53]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[105,[103,104]],25],[[118,[103]]]],[[[105,[103,104]],25]],[[[120,[103,104]]]],[[[112,[104,104,14]]]],[[[113,[104,104]]]],[[]],[[]],[[]],[[]],[[]],[[],100],[[],100],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[13,[54,[8]]]],[[13,[54,[8]]]],[[13,[54,[8]]]],[[13,[54,[8]]]],[[13,[54,[8]]]],[[13,[54,[8]]]],[[13,[54,[8]]]],[[13,[54,[8]]]],[[13,[54,[8]]]],[[13,[54,[8]]]],[[13,[54,[8]]]],[[13,[54,[8]]]],[[13,[54,[8]]]],[[13,[54,[8]]]],[[13,[54,[8]]]],[[13,[54,[8]]]],[[13,[54,[8]]]],[[13,[54,[8]]]],[[13,[54,[8]]]],[[15,13,[54,[8]]]],[[15,13,[54,[8]]]],[[13,[54,[8]]]],[[13,[54,[8]]]],[[13,[54,[8]]]],[[13,[54,[8]]]],[[13,[54,[8]]]],[[13,[54,[8]]]],[[13,[54,[8]]]],[[13,[54,[8]]]],[[13,[54,[8]]]],[[13,[54,[8]]]],[[13,[54,[8]]]],[[13,[54,[8]]]],[[13,[54,[8]]]],[[13,[54,[8]]]],[[13,[54,[8]]]],[[13,[54,[8]]]],[[15,13,[54,[8]]]],[[15,13,[54,[8]]]],[[[105,[103,104]],25]],[[[105,[103,104]],29]],[[[55,[15]]]],[[[55,[15]]]],[[[55,[15]]]],[[[55,[15]]]],[[[55,[15]]]],[[[55,[15]]]],[[[55,[15]]]],[[[55,[15]]]],[[[55,[15]]]],[[[55,[15]]]],[[[55,[15]]]],[[[55,[15]]]],[[[55,[15]]]],[[[55,[15]]]],[[[55,[15]]]],[[[55,[15]]]],[[[55,[15]]]],[[[55,[15]]]],[[[55,[15]]]],[[15,[55,[15]]]],[[15,[55,[15]]]],[[[55,[15]]]],[[[55,[15]]]],[[[55,[15]]]],[[[55,[15]]]],[[[55,[15]]]],[[[55,[15]]]],[[[55,[15]]]],[[[55,[15]]]],[[[55,[15]]]],[[[55,[15]]]],[[[55,[15]]]],[[[55,[15]]]],[[[55,[15]]]],[[[55,[15]]]],[[[55,[15]]]],[[[55,[15]]]],[[15,[55,[15]]]],[[15,[55,[15]]]],[[[105,[103,104]],123]],[[[54,[101]]],14],0,0,0,0,0,0,[[124,125,70]],[[126,25,70]],0,0,[[124,125,70]],[[126,25,70]],0,0,[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[124,124],[127,127],[128,128],[126,126],[129,129],[130,130],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[124,131],16],0,[[124,25,25,21,21]],[[126,25,25]],0,0,[[],130],[130],[130],[124,127],[126,129],[[]],[[]],[[]],[[]],[[]],[[]],[[],124],[[],128],[[],126],[[124,25],[[11,[70]]]],[25],0,[[124,125,70]],[[126,25,70]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[[11,[10]]],[[11,[3,10]]]],[[[11,[10]]],[[11,[3,10]]]],[[[11,[10]]],[[11,[3,10]]]],[[[11,[10]]],[[11,[3,10]]]],[[[11,[10]]],[[11,[3,10]]]],[[[11,[10]]],[[11,[3,10]]]],[32,[[32,[3]]]],[32,[[32,[3]]]],[32,[[32,[3]]]],[32,[[32,[3]]]],[32,[[32,[3]]]],[32,[[32,[3]]]],[33,[[33,[3]]]],[33,[[33,[3]]]],[33,[[33,[3]]]],[33,[[33,[3]]]],[33,[[33,[3]]]],[33,[[33,[3]]]],[[128,25,71]],[[128,25,71,[20,[21]]]],[127,124],[[],127],[[126,129],126],[[],129],[[124,131],[[26,[70]]]],[[126,25],[[26,[70]]]],0,0,[[124,125],[[26,[[42,[70]]]]]],[[126,25],[[26,[[42,[70]]]]]],0,[[124,132],[[26,[[42,[70]]]]]],[[126,29],[[26,[[42,[70]]]]]],0,0,[[124,125]],[[126,25]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],0,0,0,0,0,0,[[28,25]],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[133,[50]]]],[78,78],[[]],[[],[[11,[9,10]]]],[[],[[134,[50]]]],[[],135],[[[134,[50]]]],[[[134,[50]]]],[[[133,[50]]],[[26,[[90,[78]]]]]],[[78,23],24],[[[134,[[0,[50,49]]]],23],24],[[135,23],24],[[]],[[]],[[]],[[]],[25],[25],[[135,[67,[15]]],[[26,[[90,[78]]]]]],[[28,29,30]],[[28,29,30]],[[25,28]],[[25,28]],[[]],[[]],[[]],[[]],[[[11,[10]]],[[11,[3,10]]]],[[[11,[10]]],[[11,[3,10]]]],[[[11,[10]]],[[11,[3,10]]]],[[[11,[10]]],[[11,[3,10]]]],[32,[[32,[3]]]],[32,[[32,[3]]]],[32,[[32,[3]]]],[32,[[32,[3]]]],[33,[[33,[3]]]],[33,[[33,[3]]]],[33,[[33,[3]]]],[33,[[33,[3]]]],[[[133,[50]]]],[[[133,[50]]],16],[[[133,[50]]],136],[[[133,[50]]],137],[[[133,[50]]],2],[[],135],[[13,28]],[[[133,[50]]],[[92,[78]]]],[[[133,[50]]],[[92,[78]]]],[[[133,[50]]],26],[[135,[67,[15]],21]],[[]],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],36],[[],36],[[],36],[[],36],[135],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[138,139],138],[[138,139],138],[[140,141],140],[141,140],[141,140],[[142,141],142],[141,142],[141,142],[[143,141],143],[141,143],[141,143],0,[[140,141],140],[141,140],[141,140],[[142,141],142],[141,142],[141,142],[[143,141],143],[141,143],[141,143],[140,140],[[],140],[[],140],[142,142],[[],142],[[],142],[143,143],[[],143],[[],143],[144,145],[144,145],[25],[[138,25]],[[[147,[146]],25]],[25],[[[147,[146]]],[[54,[8]]]],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],4],[[],4],[[],4],[[],4],[[],4],[[[149,[148]]],4],[[[150,[148]]],4],[[],4],[[[151,[148]]],4],[[],4],[152,152],[[[149,[148]]],152],[[[150,[148]]],152],[[[151,[148]]],152],[[140,141],140],[141,140],[141,140],[[142,141],142],[141,142],[141,142],[[143,141],143],[141,143],[141,143],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[153,58],[[35,[154,155]]]],[156,[[20,[157]]]],[140,140],[[],140],[[],140],[143,143],[[],143],[[],143],[[[147,[146]],30]],[158,158],[[[147,[[0,[109,146]]]]],[[147,[[0,[109,146]]]]]],[159,159],[157,157],[160,160],[161,161],[162,162],[[[149,[[0,[109,148]]]]],[[149,[[0,[109,148]]]]]],[[[150,[[0,[109,148]]]]],[[150,[[0,[109,148]]]]]],[[[151,[[0,[109,148]]]]],[[151,[[0,[109,148]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[157,157],12],0,[[[147,[146]]],[[54,[15]]]],[[138,163],138],[[138,164],138],[153,20],[[165,152],16],[[],166],[[],138],[[],159],[[],167],[[],168],[[],169],[[],154],[[],165],[[],156],[[],153],[[],161],[[],[[170,[[0,[99,148]]]]]],[[],[[171,[[0,[99,148]]]]]],[153,156],[[[170,[148]]]],[[140,[0,[144,109]]],140],[[[0,[144,109]]],140],[[[0,[144,109]]],140],[[],[[11,[172]]]],[[],[[11,[152]]]],[158,[[11,[172]]]],[162,[[11,[172]]]],[[[149,[148]]],[[11,[152]]]],[[[150,[148]]],[[11,[152]]]],[[[151,[148]]],[[11,[152]]]],[4,16],[4,16],[4,16],[4,16],[4,16],[4,16],[4,16],[18],[18],[18],[18],[[[149,[148]],18]],[18],[[[150,[148]],18]],[18],[[[151,[148]],18]],[18],[[172,172],16],[[158,158],16],[[169,169],16],[[157,157],16],[[160,160],16],[[152,152],16],[[162,162],16],[[[149,[[0,[111,148]]]],[149,[[0,[111,148]]]]],16],[[[150,[[0,[111,148]]]],[150,[[0,[111,148]]]]],16],[[[151,[[0,[111,148]]]],[151,[[0,[111,148]]]]],16],[[[170,[148]],148],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[158,23],24],[[157,23],24],[[155,23],24],[[155,23],24],[[160,23],24],[[161,23],24],[[162,23],24],[[[149,[[0,[49,148]]]],23],24],[[[150,[[0,[49,148]]]],23],24],[[[151,[[0,[49,148]]]],23],24],[[[170,[[0,[49,148]]]],23],24],[[[171,[[0,[49,148]]]],23],24],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[25],[25],[25],[25],[25],[25],[25],[25],[25],[25],[25],[25],[25],[[165,152],[[26,[138]]]],[[[170,[148]]],148],[138,169],[[[147,[146]]],30],[[165,152],[[26,[138]]]],[[153,157],[[26,[172]]]],[[153,157],[[26,[146]]]],[138,153],[156,[[173,[157]]]],[138,153],[[172,18]],[[158,18]],[[157,18]],[[152,18]],[[162,18]],[[[149,[[0,[174,148]]]],18]],[[[150,[[0,[174,148]]]],18]],[[[151,[[0,[174,148]]]],18]],[153,156],0,[152,140],[152,140],[152,143],[152,143],[152,143],[152,143],[[140,172],140],[172,140],[172,140],[[142,172],142],[172,142],[172,142],[[143,172],143],[172,143],[172,143],[[138,25],[[35,[155]]]],[[[147,[146]],25]],[[153,25]],[[],36],[[],36],[[165,152,138],[[26,[138]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[11,[10]]],[[11,[3,10]]]],[[[11,[10]]],[[11,[3,10]]]],[[[11,[10]]],[[11,[3,10]]]],[[[11,[10]]],[[11,[3,10]]]],[[[11,[10]]],[[11,[3,10]]]],[[[11,[10]]],[[11,[3,10]]]],[[[11,[10]]],[[11,[3,10]]]],[[[11,[10]]],[[11,[3,10]]]],[[[11,[10]]],[[11,[3,10]]]],[[[11,[10]]],[[11,[3,10]]]],[[[11,[10]]],[[11,[3,10]]]],[[[11,[10]]],[[11,[3,10]]]],[[[11,[10]]],[[11,[3,10]]]],[[[11,[10]]],[[11,[3,10]]]],[[[11,[10]]],[[11,[3,10]]]],[[[11,[10]]],[[11,[3,10]]]],[[[11,[10]]],[[11,[3,10]]]],[[[11,[10]]],[[11,[3,10]]]],[[[11,[10]]],[[11,[3,10]]]],[[[11,[10]]],[[11,[3,10]]]],[[[11,[10]]],[[11,[3,10]]]],[[[11,[10]]],[[11,[3,10]]]],[[[11,[10]]],[[11,[3,10]]]],[[[11,[10]]],[[11,[3,10]]]],[[[11,[10]]],[[11,[3,10]]]],[[[11,[10]]],[[11,[3,10]]]],[32,[[32,[3]]]],[32,[[32,[3]]]],[32,[[32,[3]]]],[32,[[32,[3]]]],[32,[[32,[3]]]],[32,[[32,[3]]]],[32,[[32,[3]]]],[32,[[32,[3]]]],[32,[[32,[3]]]],[32,[[32,[3]]]],[32,[[32,[3]]]],[32,[[32,[3]]]],[32,[[32,[3]]]],[32,[[32,[3]]]],[32,[[32,[3]]]],[32,[[32,[3]]]],[32,[[32,[3]]]],[32,[[32,[3]]]],[32,[[32,[3]]]],[32,[[32,[3]]]],[32,[[32,[3]]]],[32,[[32,[3]]]],[32,[[32,[3]]]],[32,[[32,[3]]]],[32,[[32,[3]]]],[32,[[32,[3]]]],[33,[[33,[3]]]],[33,[[33,[3]]]],[33,[[33,[3]]]],[33,[[33,[3]]]],[33,[[33,[3]]]],[33,[[33,[3]]]],[33,[[33,[3]]]],[33,[[33,[3]]]],[33,[[33,[3]]]],[33,[[33,[3]]]],[33,[[33,[3]]]],[33,[[33,[3]]]],[33,[[33,[3]]]],[33,[[33,[3]]]],[33,[[33,[3]]]],[33,[[33,[3]]]],[33,[[33,[3]]]],[33,[[33,[3]]]],[33,[[33,[3]]]],[33,[[33,[3]]]],[33,[[33,[3]]]],[33,[[33,[3]]]],[33,[[33,[3]]]],[33,[[33,[3]]]],[33,[[33,[3]]]],[33,[[33,[3]]]],[[],142],[[],142],[[],140],[[]],[[]],[[]],[[]],[[],16],[[],16],[162,16],[[[147,[146]]],16],[[[147,[146]]],16],[157,16],[157,16],[165,14],[165,14],[[[147,[146]]],[[66,[63]]]],[[],166],[[],138],[[],159],[[],167],[[],168],[[],154],[[],165],[[],153],[[],161],[148,[[170,[148]]]],[[],140],[[],140],[[],143],[[],143],[[],143],[[],143],[144,175],[144,175],[[157,157],[[26,[12]]]],[122],[[165,152],[[26,[138]]]],[[165,152],26],0,[[138,25]],[[[147,[146]],25]],[25],[[140,144],140],[144,140],[144,140],[[142,144],142],[144,142],[144,142],[[[147,[146]],29]],[[[171,[148]],148]],[[138,16],138],[[153,157],172],[[138,161],138],[[138,169],138],[[[147,[146]],30]],[[153,157],146],[153,14],[[],[[26,[36]]]],[[],[[26,[36]]]],[158,[[26,[36]]]],[153,14],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],100],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[[147,[146]]],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[[147,[146]],29]],0,[[]],0,0,0,[[],77],[[],[[0,[77,109]]]],[148,[[0,[77,109]]]],[[[177,[176]]],147],[[],[[0,[77,109]]]],[[],[[0,[77,109]]]],[[],[[0,[77,109]]]],[[],[[0,[77,109]]]],[[[0,[39,111]]],77],[[],[[0,[77,109]]]],[[],[[0,[77,109]]]],[[[0,[39,111]]],77],[[],[[0,[77,109]]]],[[],[[0,[77,109]]]],[[],[[0,[77,109]]]],[[],[[0,[77,109]]]],[148,[[0,[77,109]]]],0,0,0,0,0,0,0,0,0,0,0,0,[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[178,[101]]],2],[179],[[[178,[101]]]],[180],[34,34],[22,22],[[]],[[]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[53,2],[[181,21],16],[[[178,[101]],101],16],[[],182],[[],179],[[],[[178,[101]]]],[[],183],[[],64],[184],[4,16],[4,16],[[],34],[53,[[20,[21]]]],[53,2],[53,2],[[34,34],16],[[22,22],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[181,23],24],[[[178,[49,49]],23],24],[[34,23],24],[[22,23],24],[[180,23],24],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[25],[25],[25],[25],[25],[[182,34],[[26,[53]]]],[[179,15],[[26,[184]]]],[[181,21],[[26,[47]]]],[[[178,[101]],101],26],[[183,15],[[26,[181]]]],[[180,22],26],[[181,21],[[26,[[185,[30]]]]]],[[180,22],[[26,[[185,[30]]]]]],[180,[[20,[[185,[30]]]]]],[[180,22],[[185,[30]]]],[[181,21],[[26,[[185,[30]]]]]],[[180,22],[[26,[[185,[30]]]]]],[180,[[20,[[185,[30]]]]]],[[180,22],[[185,[30]]]],[[53,15],[[26,[180]]]],[184,[[26,[47]]]],[[180,22],[[26,[47]]]],[[180,22],[[26,[44]]]],[180,47],[180,[[20,[185]]]],[[180,22],47],[[[178,[101]],101],26],[[[178,[101]],101,51]],[2],[184,[[26,[56]]]],[[181,21],[[26,[56]]]],[[180,22],[[26,[56]]]],[[180,22],56],[[181,21],26],[[53,15],16],[184,8],[[182,34]],[34,2],[22,2],[[182,34]],[[[178,[101]]],14],[[[178,[101]],101]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[11,[10]]],[[11,[3,10]]]],[[[11,[10]]],[[11,[3,10]]]],[[[11,[10]]],[[11,[3,10]]]],[[[11,[10]]],[[11,[3,10]]]],[[[11,[10]]],[[11,[3,10]]]],[[[11,[10]]],[[11,[3,10]]]],[[[11,[10]]],[[11,[3,10]]]],[[[11,[10]]],[[11,[3,10]]]],[[[11,[10]]],[[11,[3,10]]]],[[[11,[10]]],[[11,[3,10]]]],[[[11,[10]]],[[11,[3,10]]]],[32,[[32,[3]]]],[32,[[32,[3]]]],[32,[[32,[3]]]],[33,[[33,[3]]]],[33,[[33,[3]]]],[33,[[33,[3]]]],[33,[[33,[3]]]],[33,[[33,[3]]]],[33,[[33,[3]]]],[33,[[33,[3]]]],[33,[[33,[3]]]],[33,[[33,[3]]]],[33,[[33,[3]]]],[33,[[33,[3]]]],[53,16],[182,16],[179,16],[181,16],[[[178,[101]]],16],[183,16],[180,16],[184,16],[180,65],[53,14],[182,[[186,[53]]]],[179,14],[[[178,[101]]],14],[183,14],[[[178,[101]]],14],[182,2],[179,2],[181,2],[[[178,[101]]],2],[183,2],[180,2],[[],178],[2,34],[2,22],0,[[[178,[101]],101],26],0,[[],2],0,0,[[]],[[]],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[[178,[101]]],14],[[[178,[101]]],14],[2,[[178,[101]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[187,188],187],[[189,190]],[25],[[21,25]],[[28,25]],[[[191,[188]],25]],[[[192,[[0,[96,116,117]]]],25]],[[[194,[[0,[96,116,117]],193]],25]],[[[195,[193]],25]],[[[197,[[0,[39,196]]]],25]],[[[198,[39]],25]],[[[199,[39]],25]],[[200,25]],[[[202,[201]],25]],[[28,25]],[[28,25]],[[28,25]],[[28,25]],[[28,25]],[[28,25]],[[28,25]],[[28,25]],[[28,25]],[[28,25]],[[28,25]],[[28,25]],[[203,28,25]],[[203,25]],[[28,25]],[[28,25]],[[[204,[193]],25]],[[205,25]],[[[206,[193]],25]],[25],[[[208,[[207,[146,146]],146,146]],25]],[[[210,[209]],25]],[[[212,[211]],25]],[[],[[54,[8]]]],[[[208,[[207,[146,146]],146,146]]],[[54,[8]]]],[[[210,[209]]],[[54,[8]]]],[[[212,[211]]],[[54,[8]]]],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[213,63],[177],[177],[177],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[30],[[[208,[[207,[146,146]],146,146]],30]],[[[210,[209]],30]],[[[212,[211]],30]],[[[208,[109,109]]],[[208,[109,109]]]],[[[212,[[0,[211,109]]]]],[[212,[[0,[211,109]]]]]],[28,28],[[]],[[]],[[]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[51,51]],[[214,51]],[187,189],[[],[[54,[15]]]],[[[208,[[207,[146,146]],146,146]]],[[54,[15]]]],[[[210,[209]]],[[54,[15]]]],[[[212,[211]]],[[54,[15]]]],[[[215,[103,104]],21],16],[[],203],[[[208,[[207,[146,146]],146,146]]],[[119,[[11,[172]]]]]],[[[210,[209]]],[[119,[[11,[172]]]]]],[[[212,[211]]],[[119,[[11,[172]]]]]],[[],[[119,[[11,[172]]]]]],[[],[[119,[[11,[172]]]]]],[[[216,[[0,[196,116,117]]]]]],[[[218,[217]]]],[219],[213],[[[220,[201]]]],[[[216,[[0,[196,116,117]]]]]],[[[218,[217]]]],[[[220,[201]]]],[187],[4,16],[[189,21],187],0,0,0,[[221,221],16],[[],16],[[],16],[[],16],[[[215,[103,104]],23],24],[[146,23],24],[[[216,[[0,[49,196,116,117]]]],23],24],[[[219,[49]],23],24],[[213,23],24],[[213,23],24],[[[204,[49]],23],24],[[205,23],24],[[[206,[49]],23],24],[[221,23],24],[[221,23],24],[[222,23],24],[[[215,[103,104]],77]],[[[215,[103,104]],77]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[41,219],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[25,[[202,[201]]]],[25],[[[202,[223,201]],25],[[224,[223,201]]]],[[[215,[103,104]],21],[[35,[[118,[103]],110]]]],[[[215,[103,104]],21],[[35,[50,221]]]],[[[215,[103,104]],21],[[35,[[42,[50]],221]]]],[[[215,[103,104]],21],[[35,[[42,[50]],221]]]],[[189,21],[[26,[187]]]],[[[215,[104,104]],21],[[35,[[118,[104]],110]]]],[[],30],[[[208,[[207,[146,146]],146,146]]],30],[[[210,[209]]],30],[[[212,[211]]],30],[[[202,[223,201]],25],[[224,[223,201]]]],[[[202,[201]],25],[[224,[201]]]],[[[215,[103,104]],[114,[21]]],[[35,[[114,[[118,[103]]]],110]]]],[[[215,[103,104]],[114,[21]]],[[35,[114,110]]]],[[[202,[201]],25],[[224,[201]]]],[[[215,[103,104]],21],[[35,[110]]]],[[189,21],187],[28],[[28,29,30]],[28],[[28,29,30]],[[28,29,30]],[[28,29,30]],[[28,29,30]],[[28,29,30]],[[28,29,30]],[[28,29,30]],[[28,29,30]],[[28,29,30]],[[28,29,30]],[28],[[28,29,30]],[[28,29,30]],[[28,29,30]],[[28,29,30]],[[28,29,30]],[[28,29,30]],[[28,29,30]],[[[215,[103,104]]],[[35,[[118,[103]],115]]]],[[[215,[103,104]]],[[35,[115]]]],[[[215,[103,104]],21],[[35,[110]]]],[[[202,[201]],29],[[224,[201]]]],[187,21],[[25,28]],[[25,28]],[[25,28]],[189],[[25,28]],[[25,28]],[[25,28]],[[25,28]],[[25,28]],[[25,28]],[[25,28]],[[25,28]],[[25,28]],[[25,28]],[[25,28]],[[25,28]],[[25,28]],[[25,28]],[[25,28]],[[25,28]],[[25,28]],[[25,28]],[25],[[[208,[[207,[146,146]],146,146]],25]],[[[210,[209]],25]],[[[212,[211]],25]],[[187,193],187],[[189,[0,[96,116,117]]]],[[189,39]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[11,[10]]],[[11,[3,10]]]],[[[11,[10]]],[[11,[3,10]]]],[[[11,[10]]],[[11,[3,10]]]],[[[11,[10]]],[[11,[3,10]]]],[[[11,[10]]],[[11,[3,10]]]],[[[11,[10]]],[[11,[3,10]]]],[[[11,[10]]],[[11,[3,10]]]],[[[11,[10]]],[[11,[3,10]]]],[[[11,[10]]],[[11,[3,10]]]],[[[11,[10]]],[[11,[3,10]]]],[[[11,[10]]],[[11,[3,10]]]],[[[11,[10]]],[[11,[3,10]]]],[[[11,[10]]],[[11,[3,10]]]],[[[11,[10]]],[[11,[3,10]]]],[[[11,[10]]],[[11,[3,10]]]],[[[11,[10]]],[[11,[3,10]]]],[[[11,[10]]],[[11,[3,10]]]],[[[11,[10]]],[[11,[3,10]]]],[[[11,[10]]],[[11,[3,10]]]],[[[11,[10]]],[[11,[3,10]]]],[[[11,[10]]],[[11,[3,10]]]],[[[11,[10]]],[[11,[3,10]]]],[[[11,[10]]],[[11,[3,10]]]],[[[11,[10]]],[[11,[3,10]]]],[[[11,[10]]],[[11,[3,10]]]],[[[11,[10]]],[[11,[3,10]]]],[[[11,[10]]],[[11,[3,10]]]],[[[11,[10]]],[[11,[3,10]]]],[[[11,[10]]],[[11,[3,10]]]],[[[11,[10]]],[[11,[3,10]]]],[32,[[32,[3]]]],[32,[[32,[3]]]],[32,[[32,[3]]]],[32,[[32,[3]]]],[32,[[32,[3]]]],[32,[[32,[3]]]],[32,[[32,[3]]]],[32,[[32,[3]]]],[32,[[32,[3]]]],[32,[[32,[3]]]],[32,[[32,[3]]]],[32,[[32,[3]]]],[32,[[32,[3]]]],[32,[[32,[3]]]],[32,[[32,[3]]]],[32,[[32,[3]]]],[32,[[32,[3]]]],[32,[[32,[3]]]],[32,[[32,[3]]]],[32,[[32,[3]]]],[32,[[32,[3]]]],[32,[[32,[3]]]],[32,[[32,[3]]]],[32,[[32,[3]]]],[32,[[32,[3]]]],[32,[[32,[3]]]],[32,[[32,[3]]]],[32,[[32,[3]]]],[32,[[32,[3]]]],[32,[[32,[3]]]],[33,[[33,[3]]]],[33,[[33,[3]]]],[33,[[33,[3]]]],[33,[[33,[3]]]],[33,[[33,[3]]]],[33,[[33,[3]]]],[33,[[33,[3]]]],[33,[[33,[3]]]],[33,[[33,[3]]]],[33,[[33,[3]]]],[33,[[33,[3]]]],[33,[[33,[3]]]],[33,[[33,[3]]]],[33,[[33,[3]]]],[33,[[33,[3]]]],[33,[[33,[3]]]],[33,[[33,[3]]]],[33,[[33,[3]]]],[33,[[33,[3]]]],[33,[[33,[3]]]],[33,[[33,[3]]]],[33,[[33,[3]]]],[33,[[33,[3]]]],[33,[[33,[3]]]],[33,[[33,[3]]]],[33,[[33,[3]]]],[33,[[33,[3]]]],[33,[[33,[3]]]],[33,[[33,[3]]]],[33,[[33,[3]]]],[[],140],[[],140],[[],140],[[[220,[201]]],[[224,[201]]]],[[[215,[103,104]]]],[[[215,[103,104]]]],[[[216,[[0,[196,116]]]]]],[[[216,[[0,[196,116]]]]]],[[]],[[]],[[]],[[]],[219,16],[219,16],[[[215,[103,104]]],16],[[],16],[[[208,[[207,[146,146]],146,146]]],16],[[[210,[209]]],16],[[[212,[211]]],16],[[],16],[[[208,[[207,[146,146]],146,146]]],16],[[[210,[209]]],16],[[[212,[211]]],16],[28,16],[[[215,[103,104]]],120],[[[215,[103,104]]],113],[[[215,[103,104]]],[[113,[103,104]]]],[[[215,[103,104]]],[[113,[103,104]]]],[[[215,[104,104]]],120],[[[215,[103,104]],96],112],[[[215,[103,104]],96],[[112,[103,104]]]],[[[215,[103,104]],96],[[112,[103,104]]]],[[[215,[103,104]]],[[120,[103,104]]]],[[[215,[103,104]]],[[120,[103,104]]]],[222,30],0,[187],[[[215,[103,104]],[114,[21]]],[[114,[[118,[103]]]]]],[[[215,[103,104]],[114,[21]]],114],[[[202,[201]],123],16],[[[202,[201]]],28],[[],[[66,[63]]]],[[[208,[[207,[146,146]],146,146]]],[[66,[63]]]],[[[210,[209]]],[[66,[63]]]],[[[212,[211]]],[[66,[63]]]],[213,63],[28,63],[[[66,[63]]],208],[[],[[197,[[0,[39,196]]]]]],[[],[[199,[39]]]],[25,[[202,[201]]]],[[203,25],189],[21,206],[[13,28]],[[13,28]],[[13,28]],[[13,28]],[[13,28]],[[13,28]],[[13,28]],[[13,28]],[[13,28]],[[13,28]],[[13,28]],[[13,28]],[[13,28]],[[13,28]],[[203,68],189],[225,[[224,[201]]]],[225,[[224,[201]]]],[225,[[224,[201]]]],[225,[[224,[201]]]],[225,[[224,[201]]]],[225,[[224,[201]]]],[225,[[224,[201]]]],[225,[[224,[201]]]],[225,[[224,[201]]]],[225,[[224,[201]]]],[225,[[224,[201]]]],[225,[[224,[201]]]],[225,[[224,[201]]]],[225,[[224,[201]]]],[225,[[224,[201]]]],[225,[[224,[201]]]],[225,[[224,[201]]]],[225,[[224,[201]]]],[225,[[224,[201]]]],[225,[[224,[201]]]],[225,[[224,[201]]]],[225,[[224,[201]]]],[225,[[224,[201]]]],[225,[[224,[201]]]],[225,[[224,[201]]]],[225,[[224,[201]]]],[225,[[224,[201]]]],[225,[[224,[201]]]],[225,[[224,[201]]]],[225,[[224,[201]]]],[225,[[224,[201]]]],[225,[[224,[201]]]],[225,[[224,[201]]]],[225,[[224,[201]]]],[225,[[224,[201]]]],[225,[[224,[201]]]],[[[215,[103,104]]],108],[[[215,[103,104]]],[[108,[103,104]]]],[177,226],[122],[[203,190]],[187,187],[189],0,[[25,227]],[224],[[[208,[[207,[146,146]],146,146]],25]],[[[210,[209]],25]],[25],[25],[25],[25],[29],[[[208,[[207,[146,146]],146,146]],29]],[[[210,[209]],29]],[[[212,[211]],29]],[30],[[[208,[[207,[146,146]],146,146]],30]],[[[210,[209]],30]],[[[212,[211]],30]],[28],[[[215,[103,104]]],[[118,[103]]]],[[[215,[103,104]]]],[[189,193],187],[[189,[0,[96,116,117]]]],[189,187],[222,30],[[]],[[]],[[]],[[[215,[103,104]]],215],[[],100],[[],100],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],36],[[[208,[[207,[146,146]],146,146]]],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[[210,[209]]],36],[[],36],[[],36],[[[212,[211]]],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[29],[[[208,[[207,[146,146]],146,146]],29]],[[[210,[209]],29]],[[[212,[211]],29]],[[[202,[201]],25]],[[[202,[201]],29]],[[48,21],[[191,[48]]]],[[48,21],[[191,[48]]]],[[[228,[49]]]],[[[228,[[35,[49]]]]]],[228],[[[228,[49]]]],[77,77],[[[228,[[35,[49]]]]]],[[[228,[[35,[49]]]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[25,138,152]],[125,13],[131,13],[25,1],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],4],[25,29],[25,29],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[25,38],[25,229],[25,30],[25],[25],[25],[25],[25],[131,131],[123,123],[[]],[[]],[[]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[25,[[26,[15]]]],[25,58],[125,16],[131,16],[[125,15],16],[[131,15],16],[25,16],[25,16],[[125,36],16],[[131,36],16],[[],25],[230],[231],[231],[125],[[25,21],16],[[[232,[14]]]],[229],[230],[231],[4,16],[18],[25,68],[25,68],[[25,21],131],[[25,21],125],[[123,123],16],[[],16],[[],16],[[],16],0,[[21,22]],[[25,23],24],[[123,23],24],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[125,131],[[]],[25],[25],[25,123],[125,[[26,[50]]]],[[25,21],[[26,[50]]]],[131,[[26,[50]]]],[[125,15],[[26,[47]]]],[[25,21,15],[[26,[47]]]],[[131,15],[[26,[47]]]],[125,[[26,[56]]]],[131,[[26,[56]]]],[[125,15],[[26,[56]]]],[[131,15],[[26,[56]]]],[[25,21],[[26,[131]]]],[[25,21],[[26,[125]]]],[125,[[26,[[42,[50]]]]]],[[25,21],[[26,[[42,[50]]]]]],[[125,15],[[26,[43]]]],[[25,21,15],[[26,[43]]]],[[25,15],[[26,[47]]]],[[25,15],[[26,[43]]]],[229,[[26,[230]]]],[25,26],[229,[[26,[231]]]],[25,[[26,[42]]]],[[25,21],[[26,[125]]]],[[28,29,30]],[[28,29,30]],[131,[[26,[[46,[50]]]]]],[229,[[26,[[230,[39]]]]]],[25,[[26,[39]]]],[[25,15],[[26,[47]]]],[229,[[26,[[231,[39]]]]]],[25,[[26,[[42,[39]]]]]],[[25,15],[[26,[43]]]],[[25,51],[[42,[39]]]],[2,123],[[123,18]],[125,21],[25,123],[131,21],[25,30],[25,15],[[25,61],15],[[29,30,30]],[25,15],[25,15],[[25,28]],[25],[[25,28]],[[125,193],125],[[125,15,233],125],[[125,[20,[15]],14],125],[[25,15,233]],[25],[[25,96],[[35,[[119,[21]]]]]],[[25,39]],[[25,15,233]],[[25,21],[[119,[60]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[11,[10]]],[[11,[3,10]]]],[[[11,[10]]],[[11,[3,10]]]],[[[11,[10]]],[[11,[3,10]]]],[[[11,[10]]],[[11,[3,10]]]],[[[11,[10]]],[[11,[3,10]]]],[[[11,[10]]],[[11,[3,10]]]],[[[11,[10]]],[[11,[3,10]]]],[[[11,[10]]],[[11,[3,10]]]],[32,[[32,[3]]]],[32,[[32,[3]]]],[32,[[32,[3]]]],[32,[[32,[3]]]],[33,[[33,[3]]]],[33,[[33,[3]]]],[33,[[33,[3]]]],[33,[[33,[3]]]],[33,[[33,[3]]]],[33,[[33,[3]]]],[33,[[33,[3]]]],[33,[[33,[3]]]],[[]],[125,25],[25,16],[25,16],[25,14],[25,30],[[[232,[97]]],2],[125,69],[131,69],[52,16],[[],25],[[],[[26,[123]]]],[[[232,[14]]],[[26,[21]]]],[229,230],[25],[229,231],[25,42],[25,[[105,[103]]]],[25,[[105,[103,104]]]],[25,30],[125,125],[[25,15],26],[25,26],[25,[[26,[39]]]],[[25,15],26],[25,14],[25,135],[[25,15],14],[229,[[230,[39]]]],[25,39],[229,[[231,[39]]]],[25,[[42,[39]]]],[[25,51]],[[25,[234,[152]]]],[[25,152]],[[25,[234,[152]],51]],[[229,89]],[[25,89]],[[229,14]],[[25,96]],[229],[25],[[13,53]],[53],[[]],[[[232,[14]]]],[123,2],[[25,193],125],[[25,96],232],[25,125],[25,64],[125,[[26,[193]]]],[[]],[[]],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[25,[234,[152]]],[[35,[235]]]],[[25,[234,[152]],51],[[35,[235]]]],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],0,[[13,[54,[8]]]],[[[55,[15]]]],[125],[125,25],[131,25],[125,25],[[125,51]],0,[[],3],[[],3],[[]],[[]],[[235,23],24],[[235,23],24],[[]],[[]],[[[11,[10]]],[[11,[3,10]]]],[32,[[32,[3]]]],[33,[[33,[3]]]],[122],[[],100],[[],35],[[],35],[[],36],0,0,[132,13],[29,1],[[],3],[[],3],[[],3],[[],3],[[]],[[]],[[]],[[]],[29,38],[29,30],[29,29],[132,132],[[]],[[]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[29,58],[132,16],[[132,15],16],[[132,36],16],[29,68],[[]],[[]],[132,[[26,[50]]]],[[132,15],[[26,[47]]]],[132,[[26,[56]]]],[[132,15],[[26,[56]]]],[[29,21],[[26,[132]]]],[132,[[26,[[42,[50]]]]]],[[132,15],[[26,[43]]]],[29,26],[[29,15],[[26,[47]]]],[29,[[26,[42]]]],[[29,15],[[26,[43]]]],[132,[[26,[[46,[50]]]]]],[29,[[26,[39]]]],[[29,15],[[26,[47]]]],[29,[[26,[[42,[39]]]]]],[[29,15],[[26,[43]]]],[29,123],[132,21],[29,30],[[]],[[]],[[[11,[10]]],[[11,[3,10]]]],[[[11,[10]]],[[11,[3,10]]]],[32,[[32,[3]]]],[32,[[32,[3]]]],[33,[[33,[3]]]],[33,[[33,[3]]]],[29,30],[132,69],[29,30],[29,64],[[]],[[]],[[],35],[[],35],[[],35],[[],35],[[],36],[[],36],[29,25],[132,29],[29,25],[29,25]],"c":[1111,1118,2217,2580,2581,2582,2583,2584,2585,2732,2733,2734,2735,2736,2737,4148,4275],"p":[[3,"Archetypes"],[15,"usize"],[8,"Any"],[8,"DynEq"],[3,"ArchetypeRow"],[3,"ArchetypeId"],[3,"ArchetypeGeneration"],[3,"ArchetypeComponentId"],[8,"TypeData"],[3,"Global"],[3,"Box"],[4,"Ordering"],[3,"Archetype"],[8,"Iterator"],[3,"ComponentId"],[15,"bool"],[3,"Edges"],[8,"Hasher"],[3,"ArchetypeEntity"],[15,"slice"],[3,"Entity"],[3,"TableRow"],[3,"Formatter"],[6,"Result"],[3,"World"],[4,"Option"],[3,"BundleId"],[3,"SystemMeta"],[3,"UnsafeWorldCell"],[3,"Tick"],[4,"StorageType"],[3,"Arc"],[3,"Rc"],[3,"TableId"],[4,"Result"],[3,"TypeId"],[3,"BundleInfo"],[3,"Bundles"],[8,"Resource"],[3,"ResMut"],[3,"NonSendMut"],[3,"Mut"],[3,"MutUntyped"],[3,"PtrMut"],[3,"Res"],[3,"Ref"],[3,"Ptr"],[8,"Sized"],[8,"Debug"],[8,"Component"],[8,"FnOnce"],[8,"Fn"],[3,"Table"],[3,"Access"],[3,"FilteredAccess"],[3,"ComponentTicks"],[3,"TickCells"],[3,"Components"],[3,"ComponentIdFor"],[3,"ComponentInfo"],[3,"ComponentDescriptor"],[15,"u32"],[15,"str"],[3,"Storages"],[3,"Layout"],[4,"Cow"],[8,"Into"],[3,"Entities"],[3,"EntityLocation"],[8,"Reflect"],[3,"EntityMap"],[8,"Deserializer"],[6,"Entry"],[8,"Serializer"],[3,"Ok"],[3,"Error"],[8,"FnMut"],[3,"RemovedComponentEntity"],[15,"u64"],[3,"EntityMapper"],[4,"TypeInfo"],[3,"TypeRegistration"],[3,"ReserveEntitiesIterator"],[4,"ReflectMut"],[4,"ReflectOwned"],[4,"ReflectPathError"],[4,"ReflectRef"],[8,"Serializer"],[8,"Event"],[3,"Events"],[3,"EventReader"],[3,"ManualEventReader"],[3,"EventId"],[3,"ManualEventIterator"],[3,"ManualEventIteratorWithId"],[8,"IntoIterator"],[8,"ExactSizeIterator"],[3,"EventWriter"],[8,"Default"],[3,"String"],[8,"SparseSetIndex"],[3,"FilteredAccessSet"],[8,"WorldQuery"],[8,"ReadOnlyWorldQuery"],[3,"QueryState"],[3,"NopWorldQuery"],[3,"BatchingStrategy"],[3,"QueryParIter"],[8,"Clone"],[4,"QueryEntityError"],[8,"PartialEq"],[3,"QueryManyIter"],[3,"QueryCombinationIter"],[15,"array"],[4,"QuerySingleError"],[8,"Send"],[8,"Sync"],[6,"ROQueryItem"],[3,"Vec"],[3,"QueryIter"],[8,"ArchetypeFilter"],[3,"Demand"],[3,"WorldId"],[3,"ReflectComponent"],[3,"EntityMut"],[3,"ReflectResource"],[3,"ReflectComponentFns"],[3,"ReflectMapEntities"],[3,"ReflectResourceFns"],[3,"AppTypeRegistry"],[3,"EntityRef"],[3,"UnsafeEntityCell"],[3,"RemovedComponents"],[3,"RemovedComponentReader"],[3,"RemovedComponentEvents"],[6,"RemovedIter"],[6,"RemovedIterWithId"],[3,"Schedule"],[8,"IntoSystemConfigs"],[4,"SystemConfigs"],[8,"IntoSystemSet"],[3,"SystemSetConfig"],[3,"SystemSetConfigs"],[8,"Condition"],[6,"AndThen"],[8,"System"],[3,"NotSystem"],[8,"States"],[3,"OnEnter"],[3,"OnExit"],[3,"OnTransition"],[8,"ScheduleLabel"],[3,"ScheduleGraph"],[3,"SystemSchedule"],[4,"ScheduleBuildError"],[3,"Dag"],[4,"NodeId"],[3,"SystemTypeSet"],[3,"MainThreadExecutor"],[4,"LogLevel"],[3,"ScheduleBuildSettings"],[3,"AnonymousSet"],[8,"IntoSystemSetConfig"],[8,"IntoSystemSetConfigs"],[3,"Schedules"],[3,"MultiThreadedExecutor"],[3,"SimpleExecutor"],[3,"SingleThreadedExecutor"],[4,"ExecutorKind"],[3,"State"],[3,"NextState"],[8,"SystemSet"],[6,"DiGraphMap"],[8,"Hash"],[6,"OrElse"],[8,"Not"],[8,"IntoSystem"],[3,"SparseSet"],[3,"Resources"],[3,"Column"],[3,"ComponentSparseSet"],[3,"Tables"],[3,"SparseSets"],[3,"ResourceData"],[3,"UnsafeCell"],[3,"Iter"],[3,"EntityCommands"],[8,"EntityCommand"],[3,"Commands"],[8,"Command"],[3,"WithEntity"],[3,"SpawnBatch"],[8,"Bundle"],[3,"InsertOrSpawnBatch"],[3,"Insert"],[8,"FromWorld"],[3,"InitResource"],[3,"InsertResource"],[3,"RemoveResource"],[3,"LogComponents"],[8,"SystemParam"],[3,"SystemState"],[3,"CommandQueue"],[3,"Spawn"],[3,"Despawn"],[3,"Remove"],[8,"Combine"],[3,"CombinatorSystem"],[8,"ExclusiveSystemParamFunction"],[3,"ExclusiveFunctionSystem"],[8,"SystemParamFunction"],[3,"FunctionSystem"],[3,"SystemName"],[3,"ParallelCommands"],[3,"Query"],[3,"Local"],[8,"SystemBuffer"],[3,"Deferred"],[3,"NonSend"],[3,"StaticSystemParam"],[4,"QueryComponentError"],[3,"SystemChangeTick"],[8,"ReadOnlySystemParam"],[6,"SystemParamItem"],[3,"ParamSet"],[6,"PipeSystem"],[6,"ExclusiveSystemParamItem"],[3,"In"],[3,"WorldCell"],[3,"WorldBorrow"],[3,"WorldBorrowMut"],[3,"SpawnBatchIter"],[3,"OwningPtr"],[8,"AsRef"],[3,"TryRunScheduleError"],[8,"DetectChangesMut"],[8,"DetectChanges"],[8,"ComponentStorage"],[3,"TableStorage"],[3,"SparseStorage"],[8,"MapEntities"],[3,"Has"],[3,"AnyOf"],[3,"With"],[3,"Without"],[3,"Or"],[3,"Added"],[3,"Changed"],[3,"SystemConfig"],[13,"Configs"],[8,"ExclusiveSystemParam"],[8,"ReadOnlySystem"]],"a":{"apply_system_buffers":[2249]}},\
"bevy_ecs_macros":{"doc":"","t":"YYYYYYYYYO","n":["Bundle","Component","Event","Resource","ScheduleLabel","States","SystemParam","SystemSet","WorldQuery","impl_param_set"],"q":[[0,"bevy_ecs_macros"]],"d":["","","","","Derive macro generating an impl of the trait <code>ScheduleLabel</code>.","","Implement <code>SystemParam</code> to use a struct as a parameter in a …","Derive macro generating an impl of the trait <code>SystemSet</code>.","Implement <code>WorldQuery</code> to use a struct as a parameter in a …",""],"i":[0,0,0,0,0,0,0,0,0,0],"f":[0,0,0,0,0,0,0,0,0,0],"c":[],"p":[]},\
"bevy_macro_utils":{"doc":"","t":"DDLLLLLLLFFFLLLFFFLLLLLLLLLLLLLLL","n":["BevyManifest","Symbol","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","default","derive_boxed_label","derive_label","ensure_no_collision","fmt","from","from","get_lit_bool","get_lit_str","get_named_struct_fields","get_path","get_path_direct","get_subcrate","into","into","maybe_get_path","parse_str","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id"],"q":[[0,"bevy_macro_utils"]],"d":["","","","","","","","","","Derive a label trait","Derive a label trait","Finds an identifier that will not conflict with the …","","Returns the argument unchanged.","Returns the argument unchanged.","","","Get the fields of a data structure if that structure is a …","","Returns the path for the crate with the given name.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","",""],"i":[0,0,2,1,2,1,1,1,2,0,0,0,1,2,1,0,0,0,2,2,2,2,1,2,2,1,1,2,1,2,1,2,1],"f":[0,0,[[]],[[]],[[]],[[]],[1,1],[[]],[[],2],[[3,4],5],[[3,4,6],5],[[7,5],7],[[1,8],9],[[]],[[]],[[1,10],[[12,[11]]]],[[1,10],[[12,[13]]]],[14,[[12,[15]]]],[[2,6],4],[6,4],[[2,6],[[16,[4]]]],[[]],[[]],[[2,6],[[16,[4]]]],[6,17],[[]],[[],18],[[],19],[[],19],[[],19],[[],19],[[],20],[[],20]],"c":[],"p":[[3,"Symbol"],[3,"BevyManifest"],[3,"DeriveInput"],[3,"Path"],[3,"TokenStream"],[15,"str"],[3,"Ident"],[3,"Formatter"],[6,"Result"],[4,"Expr"],[15,"bool"],[6,"Result"],[3,"LitStr"],[4,"Data"],[3,"FieldsNamed"],[4,"Option"],[8,"Parse"],[3,"String"],[4,"Result"],[3,"TypeId"]]},\
"bevy_ptr":{"doc":"<code>bevy_ptr</code>","t":"DIDDDDDILLLLLLLLLLLLLLLLLLLLLLLLLLLLLFKLKLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLL","n":["Aligned","IsAligned","OwningPtr","Ptr","PtrMut","ThinSlicePtr","Unaligned","UnsafeCellDeref","as_mut","as_ptr","as_ptr","as_ptr","as_ref","as_ref","assert_unique","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","byte_add","byte_add","byte_add","byte_offset","byte_offset","byte_offset","clone","clone","clone","clone","dangling_with_align","deref","deref","deref_mut","deref_mut","drop_as","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","get","into","into","into","into","into","into","make","new","new","new","promote","read","read","read_unaligned","reborrow","to_unaligned","to_unaligned","to_unaligned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id"],"q":[[0,"bevy_ptr"]],"d":["Used as a type argument to <code>Ptr</code>, <code>PtrMut</code> and <code>OwningPtr</code> to …","Trait that is only implemented for <code>Aligned</code> and <code>Unaligned</code> …","Type-erased Box-like pointer to some unknown type chosen …","Type-erased borrow of some unknown type chosen when …","Type-erased mutable borrow of some unknown type chosen …","Conceptually equivalent to <code>&amp;&#39;a [T]</code> but with length …","Used as a type argument to <code>Ptr</code>, <code>PtrMut</code> and <code>OwningPtr</code> to …","Extension trait for helper methods on <code>UnsafeCell</code>","Gets a mutable pointer from this owned pointer.","Gets the underlying pointer, erasing the associated …","Gets the underlying pointer, erasing the associated …","Gets the underlying pointer, erasing the associated …","Gets an immutable reference from this mutable reference","Gets an immutable pointer from this owned pointer.","Transforms this <code>Ptr</code> into an <code>PtrMut</code>","","","","","","","","","","","","","Calculates the offset from a pointer (convenience for …","Calculates the offset from a pointer (convenience for …","Calculates the offset from a pointer (convenience for …","Calculates the offset from a pointer. As the pointer is …","Calculates the offset from a pointer. As the pointer is …","Calculates the offset from a pointer. As the pointer is …","","","","","Creates a dangling pointer with specified alignment. See …","Safety","Transforms this <code>Ptr&lt;T&gt;</code> into a <code>&amp;T</code> with the same lifetime","Safety","Transforms this <code>PtrMut&lt;T&gt;</code> into a <code>&amp;mut T</code> with the same …","Consumes the <code>OwningPtr</code> to drop the underlying data of type …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Indexes the slice without doing bounds checks","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consumes a value and creates an <code>OwningPtr</code> to it while …","Creates a new instance from a raw pointer.","Creates a new instance from a raw pointer.","Creates a new instance from a raw pointer.","Transforms this <code>PtrMut</code> into an <code>OwningPtr</code>","Returns a copy of the contained value.","Consumes the <code>OwningPtr</code> to obtain ownership of the …","Consumes the <code>OwningPtr</code> to obtain ownership of the …","Gets a <code>PtrMut</code> from this with a smaller lifetime.","Removes the alignment requirement of this pointer","Removes the alignment requirement of this pointer","Removes the alignment requirement of this pointer","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,2,3,2,5,3,2,5,3,2,8,9,10,5,3,2,8,9,10,5,3,2,5,3,2,5,8,9,10,5,0,21,5,21,3,2,3,2,5,3,3,2,8,8,9,10,5,5,8,3,2,8,9,10,5,2,3,2,5,3,21,2,2,3,3,2,5,3,2,8,9,10,5,3,2,8,9,10,5,3,2,8,9,10,5],"f":[0,0,0,0,0,0,0,0,[[[2,[1]]],[[3,[1]]]],[[[3,[1]]],4],[[[2,[1]]],4],[[[5,[1]]],4],[[[3,[1]]],[[5,[1]]]],[[[2,[1]]],[[5,[1]]]],[[[5,[1]]],[[3,[1]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[3,[1]],6],[[3,[1]]]],[[[2,[1]],6],[[2,[1]]]],[[[5,[1]],6],[[5,[1]]]],[[[3,[1]],7],[[3,[1]]]],[[[2,[1]],7],[[2,[1]]]],[[[5,[1]],7],[[5,[1]]]],[8,8],[9,9],[10,10],[[[5,[[0,[11,1]]]]],[[5,[[0,[11,1]]]]]],[12,[[13,[4]]]],[[]],[[[5,[1]]]],[[]],[[[3,[1]]]],[[[2,[1]]]],[[[3,[1]],14],15],[[[2,[1]],14],15],[[[5,[1]],14],15],[[],3],[[]],[[]],[[]],[16,8],[[]],[[]],[[]],[[],5],[[8,6]],[[]],[[]],[[]],[[]],[[]],[[]],[17],[[[13,[4]]],[[3,[1]]]],[[[13,[4]]],[[2,[1]]]],[[[13,[4]]],[[5,[1]]]],[[[3,[1]]],[[2,[1]]]],[[],18],[[[2,[1]]]],[[[2,[10]]]],[[[3,[1]]],[[3,[1]]]],[[[3,[9]]],[[3,[10]]]],[[[2,[9]]],[[2,[10]]]],[[[5,[9]]],[[5,[10]]]],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20]],"c":[],"p":[[8,"IsAligned"],[3,"OwningPtr"],[3,"PtrMut"],[15,"u8"],[3,"Ptr"],[15,"usize"],[15,"isize"],[3,"ThinSlicePtr"],[3,"Aligned"],[3,"Unaligned"],[8,"Clone"],[3,"NonZeroUsize"],[3,"NonNull"],[3,"Formatter"],[6,"Result"],[15,"slice"],[8,"FnOnce"],[8,"Copy"],[4,"Result"],[3,"TypeId"],[8,"UnsafeCellDeref"]]},\
"bevy_reflect":{"doc":"Reflection in Rust.","t":"INNNNDDDDDDDDDIEINNNNDNNNNNNDIYIIIIIINNNNNNNNNINNNNDDINNNNDDSSSSDDIYDDDEEEEDINNNNNNNNDDSINNNNNNNNDDINNNNDDDIEIYDDDIYIINNNNDDDNNNNDEDEELKLLLLLLLLFFFFKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKKKKKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKKKKLLLLLLLLLLLLLLLFFFLLLLLLLLLLLLLLLLCLKKKKLLLLLLKKLLLLLLLKKLLKKKKLLLLLLLLLKKKKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLKLLLLLLLLMKKKLLLLKLKLKKKLLLLLLKKKLLLLLLKKKLLLLKLLLLLLLLLLLLLKLLLLLLLLLLLLOOOOOLKLLLLLKLLLLLLKLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKKKLLLLLLLLLLKKKKLLLLLLLLKKKLLLFFFFFFFLLLLLLLLLLLLLLLLLLLKKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLKLLLLLLLLLLLLLLLLKLLLLLLLLKLLLLLLLLKLLLLLLLLLLLLLLLLLLKLLLLLLLLLKLLLLLLLLLKLLLLLLLLKLLLLLLLLXKLLLLLLLLKLLLLLLLLLLKKLLLALLLKLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLAFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFFFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLKKLLLLLLLLLLLLLLLLLLLLKLLLLLLLLKLALLLLLLKLLKLLLLLKLLMMMMMMMMMMMMMMMMMMMMMMMDNIDDDNDDEDDDDDDDDMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLMMMMMMMMMMLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLMMMDLLLLLLLLLLLLLLLLLLDGGDGQDILLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLL","n":["Array","Array","Array","Array","Array","ArrayInfo","ArrayIter","DynamicArray","DynamicEnum","DynamicList","DynamicMap","DynamicStruct","DynamicTuple","DynamicTupleStruct","DynamicTypePath","DynamicVariant","Enum","Enum","Enum","Enum","Enum","EnumInfo","ExpectedIdent","ExpectedList","ExpectedStruct","ExpectedStructVariant","ExpectedToken","ExpectedTupleVariant","FieldIter","FromReflect","FromReflect","FromType","GetField","GetPath","GetTupleField","GetTupleStructField","GetTypeRegistration","IndexParseError","InvalidDowncast","InvalidField","InvalidFieldIndex","InvalidListIndex","InvalidStructVariantField","InvalidTupleIndex","InvalidTupleStructIndex","InvalidTupleVariantIndex","List","List","List","List","List","ListInfo","ListIter","Map","Map","Map","Map","Map","MapInfo","MapIter","NAMESPACE_DNS","NAMESPACE_OID","NAMESPACE_URL","NAMESPACE_X500","NamedField","ParsedPath","Reflect","Reflect","ReflectDeserialize","ReflectFromPtr","ReflectFromReflect","ReflectMut","ReflectOwned","ReflectPathError","ReflectRef","ReflectSerialize","Struct","Struct","Struct","Struct","Struct","Struct","Struct","Struct","Struct","StructInfo","StructVariantInfo","TYPE_UUID","Tuple","Tuple","Tuple","Tuple","Tuple","Tuple","Tuple","Tuple","Tuple","TupleFieldIter","TupleInfo","TupleStruct","TupleStruct","TupleStruct","TupleStruct","TupleStruct","TupleStructFieldIter","TupleStructInfo","TupleVariantInfo","TypeData","TypeInfo","TypePath","TypePath","TypeRegistration","TypeRegistry","TypeRegistryArc","TypeUuid","TypeUuid","TypeUuidDynamic","Typed","UnexpectedToken","Unit","Unit","Unit","UnitVariantInfo","UnnamedField","Uuid","Value","Value","Value","Value","ValueInfo","VariantField","VariantFieldIter","VariantInfo","VariantType","add_registration","apply","apply","apply","apply","apply","apply","apply","apply","apply","array_apply","array_debug","array_hash","array_partial_eq","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_braced","as_bytes","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_fields","as_hyphenated","as_ref","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_ptr","as_reflect_ptr_mut","as_simple","as_u128","as_u64_pair","as_urn","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","braced","capacity","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","cmp","cmp","contains_variant","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","data","data_mut","debug","debug","debug","debug","debug","debug","debug","debug","debug","default","default","default","default","default","default","default","default","default","default","deserialize","deserialize","downcast","downcast","downcast_mut","downcast_mut","downcast_rc","downcast_ref","downcast_ref","drain","drain","drain","drain","drain","drain","drain","drain","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_hash","dyn_hash","dyn_hash","element","element_mut","empty","encode_buffer","enum_debug","enum_hash","enum_partial_eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_serde","erased_serialize","field","field","field","field","field","field","field","field","field","field","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_names","field_names","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes_le","from_bytes_ref","from_fields","from_fields_le","from_ref","from_reflect","from_reflect","from_reflect","from_slice","from_slice_le","from_str","from_type","from_type","from_type","from_type","from_type","from_u128","from_u128_le","from_u64_pair","from_vec","func","get","get","get","get","get","get","get","get_at","get_at","get_at_mut","get_at_mut","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_serializable","get_timestamp","get_type_data","get_type_data_mut","get_type_info","get_type_registration","get_type_registration","get_variant","get_version","get_version_num","get_with_name","get_with_name_mut","get_with_short_name","get_with_short_name_mut","hash","hash","hash","hyphenated","impl_from_reflect_value","impl_reflect_struct","impl_reflect_value","impl_type_path","impl_type_uuid","index","index_of","index_of","index_of","index_of","index_of","index_of","insert","insert","insert","insert","insert","insert","insert","insert_boxed","insert_boxed","insert_boxed","insert_boxed","insert_boxed","internal","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_bytes","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","is","is","is","is","is","is","is","is","is","is","is","is","is","is_dynamic","is_dynamic","is_dynamic","is_dynamic","is_dynamic","is_dynamic","is_dynamic","is_dynamic","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_nil","is_variant","is_variant","item_is","item_is","item_type_id","item_type_id","item_type_name","item_type_name","iter","iter","iter","iter","iter","iter","iter","iter","iter","iter","iter","iter","iter","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_mut","key_is","key_type_id","key_type_name","len","len","len","len","len","len","list_apply","list_debug","list_hash","list_partial_eq","map_apply","map_debug","map_partial_eq","module_path","module_path","module_path","module_path","module_path","module_path","module_path","module_path","module_path","module_path","name","name","name","name","name","name","name","name","name","name_at","name_at","name_at","name_at","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_v4","new_with_index","next","next","next","next","next","next","next","nil","of","parse","parse_str","partial_cmp","partial_cmp","path","path","path_mut","path_mut","pop","pop","pop","prelude","provide","push","push","push","push","push_box","read","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_element","reflect_element_mut","reflect_hash","reflect_hash","reflect_hash","reflect_hash","reflect_hash","reflect_hash","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_trait","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","register","register_type_data","remove","remove","remove","remove","represents","serde","serializable","serializable","serialize","set","set","set","set","set","set","set","set","set","set_represented_type","set_represented_type","set_represented_type","set_represented_type","set_represented_type","set_represented_type","set_represented_type","set_variant","set_variant_with_index","short_name","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","simple","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","source","std_traits","struct_debug","struct_partial_eq","take","take_from_reflect","take_from_reflect","to_bytes_le","to_fields_le","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_u128_le","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_parse","try_parse_ascii","tuple_apply","tuple_debug","tuple_partial_eq","tuple_struct_debug","tuple_struct_partial_eq","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_info","type_info","type_info","type_info","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_uuid","urn","utility","value","value_is","value_type_id","value_type_name","variant","variant_at","variant_index","variant_index","variant_len","variant_name","variant_name","variant_names","variant_path","variant_path","variant_path","variant_type","variant_type","write","field","field","field_index","index","index","index","index","index","index","index","index","index","index","index","index","index","index","list_index","token","token","tuple_index","tuple_struct_index","tuple_variant_index","ArraySerializer","Borrowed","DeserializeValue","EnumSerializer","ListSerializer","MapSerializer","Owned","ReflectSerializer","ReflectValueSerializer","Serializable","SerializationData","StructSerializer","TupleSerializer","TupleStructSerializer","TypeRegistrationDeserializer","TypedReflectDeserializer","TypedReflectSerializer","UntypedReflectDeserializer","array","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","clone_type_data","deserialize","deserialize","deserialize","deserialize","enum_value","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_empty","is_ignored_field","len","list","map","new","new","new","new","new","new","registry","registry","registry","registry","registry","registry","registry","registry","registry","registry","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","struct_value","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tuple","tuple_struct","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value","value","value","ReflectDefault","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","clone_type_data","default","from","from_type","into","into_any","into_any_arc","into_any_rc","to_owned","try_from","try_into","type_id","GenericTypeCell","GenericTypeInfoCell","GenericTypePathCell","NonGenericTypeCell","NonGenericTypeInfoCell","Stored","TypePathComponent","TypedProperty","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","from","from","from","get_or_insert","get_or_set","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","new","new","reflect_hasher","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id"],"q":[[0,"bevy_reflect"],[1589,"bevy_reflect::ReflectPathError"],[1612,"bevy_reflect::serde"],[1868,"bevy_reflect::std_traits"],[1887,"bevy_reflect::utility"]],"d":["A trait used to power array-like operations via reflection.","","","","","A container for compile-time array info.","An iterator over an <code>Array</code>.","A fixed-size list of reflected values.","A dynamic representation of an enum.","A list of reflected values.","An ordered mapping between reflected values.","A struct type which allows fields to be added at runtime.","A tuple which allows fields to be added at runtime.","A tuple struct which allows fields to be added at runtime.","Dynamic dispatch for <code>TypePath</code>.","A dynamic representation of an enum variant.","A trait used to power enum-like operations via reflection.","","","","","A container for compile-time enum info, used by <code>TypeInfo</code>.","","","","","","","An iterator over the field values of a struct.","A trait that enables types to be dynamically constructed …","Derives the <code>FromReflect</code> trait.","Trait used to generate <code>TypeData</code> for trait reflection.","A convenience trait which combines fetching and …","A trait which allows nested <code>Reflect</code> values to be retrieved …","A convenience trait which combines fetching and …","A convenience trait which combines fetching and …","A trait which allows a type to generate its …","","","","","","","","","","A trait used to power list-like operations via reflection.","","","","","A container for compile-time list info.","An iterator over an <code>List</code>.","A trait used to power map-like operations via reflection.","","","","","A container for compile-time map info.","An iterator over the key-value pairs of a <code>Map</code>.","UUID namespace for Domain Name System (DNS).","UUID namespace for ISO Object Identifiers (OIDs).","UUID namespace for Uniform Resource Locators (URLs).","UUID namespace for X.500 Distinguished Names (DNs).","The named field of a reflected struct.","A pre-parsed path to an element within a type.","The core trait of <code>bevy_reflect</code>, used for accessing and …","The main derive macro used by <code>bevy_reflect</code> for deriving …","A struct used to deserialize reflected instances of a type.","<code>Reflect</code> values are commonly used in situations where the …","Type data that represents the <code>FromReflect</code> trait and allows …","A mutable enumeration of “kinds” of reflected type.","An owned enumeration of “kinds” of reflected type.","An error returned from a failed path string query.","An immutable enumeration of “kinds” of reflected type.","A struct used to serialize reflected instances of a type.","A trait used to power struct-like operations via reflection…","","","","","","","Struct enums take the form:","Struct enums take the form:","A container for compile-time named struct info.","Type info for struct variants.","","A trait used to power tuple-like operations via reflection.","","","","","","","Tuple enums take the form:","Tuple enums take the form:","An iterator over the field values of a tuple.","A container for compile-time tuple info.","A trait used to power tuple struct-like operations via …","","","","","An iterator over the field values of a tuple struct.","A container for compile-time tuple struct info.","Type info for tuple variants.","A trait used to type-erase type metadata.","Compile-time type information for various reflected types.","A static accessor to type paths and names.","Derives the <code>TypePath</code> trait, providing a stable alternative …","Runtime storage for type metadata, registered into the …","A registry of reflected types.","A synchronized wrapper around a <code>TypeRegistry</code>.","A trait for types with a statically associated UUID.","","A trait for types with an associated UUID.","A static accessor to compile-time type information.","","","Unit enums take the form:","Unit enums take the form:","Type info for unit variants.","The unnamed field of a reflected tuple or tuple struct.","A Universally Unique Identifier (UUID).","","","","","A container for compile-time info related to general value …","","An iterator over the fields in the current enum variant.","A container for compile-time enum variant info.","Describes the form of an enum variant.","Registers the type described by <code>registration</code>.","Applies a reflected value to this value.","","","","","","","","","Applies the reflected array data to the given array.","The default debug formatter for <code>Array</code> types.","Returns the <code>u64</code> hash of the given array.","Compares two arrays (one concrete and one reflected) to …","Returns the value as a <code>&amp;dyn Any</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the value as a <code>&amp;mut dyn Any</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get a borrowed <code>Braced</code> formatter.","Returns a slice of 16 octets containing the value.","","","","Returns the four field values of the UUID.","Get a borrowed <code>Hyphenated</code> formatter.","","Casts this type to a reflected value.","","","","","","","","","Casts this type to a mutable reflected value.","","","","","","","","","Safety","Safety","Get a borrowed <code>Simple</code> formatter.","Returns a 128bit value containing the value.","Returns two 64bit values containing the value.","Get a borrowed <code>Urn</code> formatter.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get a <code>Braced</code> formatter.","The compile-time capacity of the array.","","","","","","","","","","","","","","","","","","","","","","","","","","Clones the map, producing a <code>DynamicMap</code>.","Clones the struct into a <code>DynamicStruct</code>.","Clones the struct into a <code>DynamicTuple</code>.","Clones the struct into a <code>DynamicTupleStruct</code>.","","Clones the list, producing a <code>DynamicArray</code>.","Clones the list, producing a <code>DynamicArray</code>.","Clones the list, producing a <code>DynamicList</code>.","Clones the list, producing a <code>DynamicList</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Clones the value as a <code>Reflect</code> trait object.","","","","","","","","","","","Checks if a variant with the given name exists within this …","","Returns the name of the crate the type is in, or <code>None</code> if …","Returns the name of the crate the type is in, or <code>None</code> if …","","","","","","","","Returns a reference to the value of type <code>T</code> in this …","Returns a mutable reference to the value of type <code>T</code> in this …","Debug formatter for the value.","Debug formatter for the value.","","","","","","","","","","","","","","","","","","","Deserializes a reflected value.","Downcasts the value to type <code>T</code>, consuming the trait object.","Returns a boxed object from a boxed trait object if the …","Downcasts the value to type <code>T</code> by mutable reference.","Returns a mutable reference to the object within the trait …","Returns an <code>Rc</code>-ed object from an <code>Rc</code>-ed trait object if the …","Downcasts the value to type <code>T</code> by reference.","Returns a reference to the object within the trait object …","Drain the elements of this array to get a vector of owned …","Drain the elements of this list to get a vector of owned …","Drain the key-value pairs of this map to get a vector of …","Drain the fields of this tuple to get a vector of owned …","","","","","","","","","","","","Gets a typed, read-only reference to the specified element …","Gets a typed, read-only reference to the specified element …","Create a type registry with <em>no</em> registered types.","A buffer that can be used for <code>encode_...</code> calls, that is …","The default debug formatter for <code>Enum</code> types.","Returns the <code>u64</code> hash of the given enum.","Compares an <code>Enum</code> with a <code>Reflect</code> value.","","","","","","","","","","","","","","","","","","","Returns a reference to the value of the field named <code>name</code> …","Returns a reference to the value of the field with index …","Returns a reference to the value of the field with index …","Returns a reference to the value of the field (in the …","Get the field with the given name.","","","","","Get the field with the given name.","Returns a reference to the value of the field with index …","Returns a reference to the value of the field (in the …","Get the field at the given index.","","Get the field at the given index.","Get the field at the given index.","","Get the field at the given index.","Get the field at the given index.","Returns a mutable reference to the value of the field with …","Returns a mutable reference to the value of the field (in …","","","Returns the number of fields in the struct.","Returns the number of fields in the tuple.","Returns the number of fields in the tuple struct.","Returns the number of fields in the current variant.","The total number of fields in this struct.","","The total number of fields in this tuple.","","The total number of fields in this struct.","","","The total number of fields in this variant.","The total number of fields in this variant.","Returns a mutable reference to the value of the field …","Returns a mutable reference to the value of the field with …","Returns a mutable reference to the value of the field with …","Returns a mutable reference to the value of the field (in …","","","","","A slice containing the names of all fields in order.","A slice containing the names of all fields in order.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","Create a <code>DynamicEnum</code> from an existing one.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates a UUID using the supplied bytes.","Creates a UUID using the supplied bytes in little endian …","Creates a reference to a UUID from a reference to the …","Creates a UUID from four field values.","Creates a UUID from four field values in little-endian …","Create a <code>DynamicEnum</code> from an existing one.","Constructs a concrete instance of <code>Self</code> from a reflected …","","Perform a <code>FromReflect::from_reflect</code> conversion on the …","Creates a UUID using the supplied bytes.","Creates a UUID using the supplied bytes in little endian …","","","","","","","Creates a UUID from a 128bit value.","Creates a UUID from a 128bit value in little-endian order.","Creates a UUID from two 64bit values.","","","Returns a reference to the element at <code>index</code>, or <code>None</code> if …","Returns a reference to the element at <code>index</code>, or <code>None</code> if …","Returns a reference to the value associated with the given …","Returns a reference to the <code>TypeRegistration</code> of the type …","","","","Returns the key-value pair at <code>index</code> by reference, or <code>None</code> …","","Returns the key-value pair at <code>index</code> by reference where the …","","Returns a reference to the value of the field named <code>name</code>, …","Returns a reference to the value of the field with index …","Returns a reference to the value of the field with index …","","","","","","","Returns a mutable reference to the value of the field …","Returns a mutable reference to the value of the field with …","Returns a mutable reference to the value of the field with …","","","","","","","Returns a mutable reference to the element at <code>index</code>, or …","Returns a mutable reference to the element at <code>index</code>, or …","Returns a mutable reference to the value associated with …","Returns a mutable reference to the <code>TypeRegistration</code> of the …","","","","Returns the <code>TypeInfo</code> of the type <em>represented</em> by this value.","","","","","","","","","Turn the value into a serializable representation","If the UUID is the correct version (v1, v6, or v7) this …","Returns a reference to the <code>TypeData</code> of type <code>T</code> associated …","Returns a mutable reference to the <code>TypeData</code> of type <code>T</code> …","Returns the <code>TypeInfo</code> associated with the given <code>TypeId</code>.","","","Returns the variant of the UUID structure.","Returns the version of the UUID.","Returns the version number of the UUID.","Returns a reference to the <code>TypeRegistration</code> of the type …","Returns a mutable reference to the <code>TypeRegistration</code> of the …","Returns a reference to the <code>TypeRegistration</code> of the type …","Returns a mutable reference to the <code>TypeRegistration</code> of the …","","","","Get a <code>Hyphenated</code> formatter.","A macro used to generate a <code>FromReflect</code> trait …","A replacement for <code>#[derive(Reflect)]</code> to be used with …","A macro used to generate reflection trait implementations …","A replacement for deriving <code>TypePath</code> for use on foreign …","Derives <code>TypeUuid</code> for the given type. This is used …","Returns the index of the field.","Returns the index of the field (in the current variant) …","Get the index of the field with the given name.","Gets the index of the field with the given name.","","Get the index of the variant with the given name.","Get the index of the field with the given name.","Inserts an element at position <code>index</code> within the list, …","Inserts an instance of <code>T</code> into this registration’s type …","","Inserts a typed key-value pair into the map.","Inserts a field named <code>name</code> with the typed value <code>value</code> into …","Appends a typed element with value <code>value</code> to the tuple.","Appends a typed element with value <code>value</code> to the tuple …","Inserts a key-value pair into the map.","","Inserts a field named <code>name</code> with value <code>value</code> into the …","Appends an element with value <code>value</code> to the tuple.","Appends an element with value <code>value</code> to the tuple struct.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns the value as a <code>Box&lt;dyn Any&gt;</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consumes self and returns the underlying byte value of the …","","","","","","","","","","Casts this type to a boxed reflected value.","","","","","","","","","Returns <code>true</code> if the underlying value is of type <code>T</code>, or <code>false</code>","Returns true if the trait object wraps an object of type …","Check if the given type matches the array type.","Check if the given type matches the field type.","Check if the given type matches the field type.","Check if the given type matches the list type.","Check if the given type matches the map type.","Check if the given type matches the struct type.","Check if the given type matches the tuple type.","Check if the given type matches the tuple struct type.","Check if the given type matches the underlying type.","Check if the given type matches the value type.","Check if the given type matches the enum type.","Indicates whether or not this type is a <em>dynamic</em> type.","Indicates whether or not this type is a <em>dynamic</em> type.","","","","","","","Returns <code>true</code> if the collection contains no elements.","Returns <code>true</code> if the collection contains no elements.","Returns <code>true</code> if the collection contains no elements.","Returns <code>true</code> if the collection contains no elements.","Returns <code>true</code> if the list contains no elements.","Returns <code>true</code> if the list contains no elements.","Tests if the UUID is nil (all zeros).","Returns true if the current variant’s type matches the …","Returns true if the current variant’s type matches the …","Check if the given type matches the array item type.","Check if the given type matches the list item type.","The <code>TypeId</code> of the array item.","The <code>TypeId</code> of the list item.","The type name of the array item.","The type name of the list item.","Returns an iterator over the array.","Returns an iterator over the list.","Returns an iterator over the key-value pairs of the map.","Returns an iterator over the <code>TypeRegistration</code>s of the …","","","","Iterate over the fields of this struct.","Iterate over the fields of this tuple.","Iterate over the fields of this struct.","Iterate over the variants of this enum.","Iterate over the fields of this variant.","Iterate over the fields of this variant.","Returns an iterator over the values of the reflectable …","Returns an iterator over the values of the tuple’s …","Returns an iterator over the values of the tuple struct’…","Returns an iterator over the values of the current variant…","","","","","Returns a mutable iterator over the <code>TypeRegistration</code>s of …","Check if the given type matches the key type.","The <code>TypeId</code> of the key.","The type name of the key.","Returns the number of elements in the array.","Returns the number of elements in the list.","Returns the number of elements in the map.","","","","Applies the elements of <code>b</code> to the corresponding elements of …","The default debug formatter for <code>List</code> types.","Returns the <code>u64</code> hash of the given list.","Compares a <code>List</code> with a <code>Reflect</code> value.","Applies the elements of reflected map <code>b</code> to the …","The default debug formatter for <code>Map</code> types.","Compares a <code>Map</code> with a <code>Reflect</code> value.","","Returns the path to the moudle the type is in, or <code>None</code> if …","Returns the path to the moudle the type is in, or <code>None</code> if …","","","","","","","","","The name of the field.","The name of the struct.","The name of the struct.","The name of the enum.","","The name of this variant.","The name of this variant.","The name of this variant.","Returns the name of the field with index <code>index</code>.","Returns the name of the field (in the current variant) …","","","Creates a new <code>ArrayIter</code>.","Creates a new <code>ListIter</code>.","Creates a new <code>MapIter</code>.","","","","Create a type registry with default registrations for …","","Create a new <code>ArrayInfo</code>.","","Create a new <code>NamedField</code>.","","Create a new <code>ListInfo</code>.","Create a new <code>MapInfo</code>.","Create a new <code>StructInfo</code>.","Create a new <code>TupleInfo</code>.","Create a new <code>TupleStructInfo</code>.","","Create a new <code>DynamicEnum</code> to represent an enum at runtime.","Create a new <code>EnumInfo</code>.","Create a new <code>StructVariantInfo</code>.","Create a new <code>TupleVariantInfo</code>.","Create a new <code>UnitVariantInfo</code>.","Creates a random UUID.","Create a new <code>DynamicEnum</code> with a variant index to represent …","","","","","","","","The ‘nil UUID’ (all zeros).","Creates type registration information for <code>T</code>.","Parses a <code>ParsedPath</code> from a string.","Parses a <code>Uuid</code> from a string of hexadecimal digits with …","","","Returns a statically typed reference to the value …","Returns a statically typed reference to the value …","Returns a statically typed mutable reference to the value …","Returns a statically typed mutable reference to the value …","Removes the <em>back</em> element from the list and returns it, or …","Removes the <em>back</em> element from the list and returns it, or …","","","","Appends an element to the <em>back</em> of the list.","Appends an element to the <em>back</em> of the list.","Appends a typed value to the list.","","Appends a <code>Reflect</code> trait object to the list.","Takes a read lock on the underlying <code>TypeRegistry</code>.","See <code>TypePath::crate_name</code>.","","","","","","","","","Gets a read-only reference to the specified element on the …","Gets a mutable reference to the specified element on the …","Returns a hash of the value (which includes the type).","Returns a hash of the value (which includes the type).","","","","","See <code>TypePath::module_path</code>.","","","","","","","","","Returns a mutable enumeration of “kinds” of type.","","","","","","","","","Returns an owned enumeration of “kinds” of type.","","","","","","","","","Returns a “partial equality” comparison result.","Returns a “partial equality” comparison result.","","","","","","","","","Returns a reference to the value specified by <code>path</code>.","","","","","","","","","","Returns a mutable reference to the value specified by <code>path</code>.","","","","","","","","","","Returns an enumeration of “kinds” of type.","","","","","","","","","See <code>TypePath::short_type_path</code>.","","","","","","","","","A macro that automatically generates type data for traits, …","See <code>TypePath::type_ident</code>.","","","","","","","","","See <code>TypePath::type_path</code>.","","","","","","","","","Registers the type <code>T</code>, adding reflect data as specified in …","Registers the type data <code>D</code> for type <code>T</code>.","Removes and returns the element at position <code>index</code> within …","Removes an entry from the map.","","","Returns <code>true</code> if the underlying value represents a value of …","","Returns a serializable version of the value.","Returns a serializable version of the value.","","Performs a type-checked assignment of a reflected value to …","","","","","","","","","Sets the type to be represented by this <code>DynamicArray</code>.","Sets the type to be represented by this <code>DynamicList</code>.","Sets the type to be represented by this <code>DynamicMap</code>.","Sets the type to be represented by this <code>DynamicStruct</code>.","Sets the type to be represented by this <code>DynamicTuple</code>.","Sets the type to be represented by this <code>DynamicTupleStruct</code>.","Sets the type to be represented by this <code>DynamicEnum</code>.","Set the current enum variant represented by this struct.","Set the current enum variant represented by this struct …","Returns the short name of the type.","Returns a short, pretty-print enabled path to the type.","","","","","","","","","Get a <code>Simple</code> formatter.","","","","","","","","","","The default debug formatter for <code>Struct</code> types.","Compares a <code>Struct</code> with a <code>Reflect</code> value.","Downcasts the value to type <code>T</code>, unboxing and consuming the …","Attempts to downcast the given value to <code>Self</code> using, …","Attempts to downcast the given value to <code>Self</code> using, …","Returns the bytes of the UUID in little-endian order.","Returns the four field values of the UUID in little-endian …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a 128bit little-endian value containing the value.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Parses a <code>Uuid</code> from a string of hexadecimal digits with …","Parses a <code>Uuid</code> from a string of hexadecimal digits with …","Applies the elements of <code>b</code> to the corresponding elements of …","The default debug formatter for <code>Tuple</code> types.","Compares a <code>Tuple</code> with a <code>Reflect</code> value.","The default debug formatter for <code>TupleStruct</code> types.","Compares a <code>TupleStruct</code> with a <code>Reflect</code> value.","","","","","","","","","","","","","Returns the <code>TypeId</code> of the type.","","","The <code>TypeId</code> of the array.","","","","The <code>TypeId</code> of the field.","","The <code>TypeId</code> of the field.","","","The <code>TypeId</code> of the list.","","The <code>TypeId</code> of the map.","","","","","","The <code>TypeId</code> of the struct.","","","The <code>TypeId</code> of the tuple.","","The <code>TypeId</code> of the tuple struct.","","","The <code>TypeId</code> of the underlying type.","","","The <code>TypeId</code> of the value.","","","","Returns the <code>TypeId</code> that the <code>ReflectFromPtr</code> was constructed …","","","","The <code>TypeId</code> of the enum.","","","","","","","","Returns the name of the type, or <code>None</code> if it is anonymous.","Returns the name of the type, or <code>None</code> if it is anonymous.","","","","","","","","Returns the compile-time info for the underlying type.","","","Returns a reference to the registration’s <code>TypeInfo</code>","Returns the type name of the underlying type.","","","Returns the name of the type.","The type name of the array.","","The type name of the field.","The type name of the field.","The type name of the list.","","The type name of the map.","","The type name of the struct.","","The type name of the tuple.","","The type name of the tuple struct.","","The name of the underlying type.","The type name of the value.","","The type name of the enum.","Returns the fully qualified path of the underlying type.","","","","","","","","","","Get a <code>Urn</code> formatter.","Helpers for working with Bevy reflection.","","Check if the given type matches the value type.","The <code>TypeId</code> of the value.","The type name of the value.","Get a variant with the given name.","Get a variant at the given index.","The index of the current variant.","","The number of variants in this enum.","The name of the current variant.","","A slice containing the names of all variants in order.","Returns the full path to the current variant.","Returns the full path to the current variant.","Returns the full path to the given variant.","The type of the current variant.","","Takes a write lock on the underlying <code>TypeRegistry</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A general purpose serializer for reflected types.","","","Contains data relevant to the automatic reflect powered …","","","","A deserializer for type registrations.","A deserializer for reflected types whose <code>TypeInfo</code> is known.","A serializer for reflected types whose type is known and …","A general purpose deserializer for reflected types.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns true if there are no ignored fields.","Returns true if the given index corresponds to a field …","Returns the number of ignored fields.","","","","","","","","Creates a new <code>SerializationData</code> instance given:","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A struct used to provide the default value of a type.","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","A container for <code>TypedProperty</code> over generic types, allowing …","See <code>GenericTypeCell</code>.","See <code>GenericTypeCell</code>.","A container for <code>TypeInfo</code> over non-generic types, allowing …","See <code>NonGenericTypeCell</code>.","","Used to store a <code>String</code> in a <code>GenericTypePathCell</code> as part of …","A type that can be stored in a (<code>Non</code>)<code>GenericTypeCell</code>.","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns a reference to the <code>TypedProperty</code> stored in the …","Returns a reference to the <code>TypedProperty</code> stored in the …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","Initialize a <code>NonGenericTypeCell</code> for non-generic types.","Initialize a <code>GenericTypeCell</code> for generic types.","Deterministic fixed state hasher to be used by …","","","","","","","","",""],"i":[0,101,99,100,42,0,0,0,0,0,0,0,0,0,0,0,0,101,99,100,42,0,64,64,64,64,64,64,0,0,0,0,0,0,0,0,0,64,64,64,64,64,64,64,64,64,0,101,99,100,42,0,0,0,101,99,100,42,0,0,4,4,4,4,0,0,0,0,0,0,0,0,0,0,0,0,0,101,99,100,94,42,47,49,50,0,0,127,0,101,99,100,94,42,47,49,50,0,0,0,101,99,100,42,0,0,0,0,0,0,0,0,0,0,0,0,0,0,64,47,49,50,0,0,0,101,99,100,42,0,0,0,0,0,1,3,4,5,6,7,8,9,10,11,0,0,0,0,3,83,84,85,101,99,100,4,4,4,88,89,90,1,2,91,94,31,5,5,33,34,35,36,6,6,37,7,7,64,64,38,38,39,8,8,40,9,9,41,10,10,42,43,44,45,46,25,47,11,11,48,49,49,50,51,52,53,3,83,84,85,101,99,100,4,4,88,89,90,1,2,91,94,31,5,5,33,34,35,36,6,6,37,7,7,64,38,39,8,8,40,9,9,41,10,10,42,43,44,45,46,25,47,11,11,48,49,50,51,52,53,4,4,4,38,49,4,4,4,3,4,5,6,7,8,9,10,11,3,4,5,6,7,8,9,10,11,25,25,4,4,4,4,83,84,85,101,99,100,4,88,89,90,1,2,91,94,31,5,33,34,35,36,6,37,7,64,38,39,8,40,9,41,10,42,43,44,45,46,25,47,11,48,49,50,51,52,53,83,84,85,101,99,100,4,88,89,90,1,2,91,94,31,5,33,34,35,36,6,37,7,64,38,39,8,40,9,41,10,42,43,44,45,46,25,47,11,48,49,50,51,52,53,4,31,4,2,31,33,34,35,36,37,38,39,40,41,42,43,44,45,46,25,47,48,49,50,51,52,53,93,75,76,77,65,12,12,92,92,5,6,7,8,9,10,11,4,2,31,33,34,35,36,37,38,39,40,41,42,43,44,45,46,25,47,48,49,50,51,52,53,54,4,2,31,33,34,35,36,37,38,39,40,41,42,43,44,45,46,25,47,48,49,50,51,52,53,3,4,5,6,7,8,9,10,11,4,38,48,4,128,128,5,6,7,8,9,10,11,2,2,3,3,4,6,7,8,9,10,11,4,1,6,7,8,9,10,44,47,11,4,46,3,54,3,54,54,3,54,12,92,93,76,5,6,7,9,4,64,38,49,4,38,49,38,38,1,4,0,0,0,4,64,38,49,4,4,4,64,64,64,38,38,38,49,49,49,0,4,75,76,77,65,39,8,9,10,11,51,75,65,39,8,40,41,11,51,52,75,65,8,11,75,76,77,65,39,8,40,9,41,10,11,51,52,75,76,77,65,8,9,10,11,39,51,3,4,4,4,4,2,31,5,33,34,36,6,37,7,64,64,38,38,39,8,40,9,41,10,42,43,44,47,11,48,49,50,51,52,53,83,84,85,101,99,100,4,4,4,4,4,88,89,90,1,2,91,94,31,5,33,34,35,36,6,37,7,64,64,38,39,8,40,9,41,10,42,43,44,45,46,25,47,47,47,47,11,11,48,49,50,51,52,53,4,4,4,4,4,11,129,4,35,4,4,4,130,35,45,46,25,4,4,4,5,46,12,92,93,1,5,6,7,93,7,93,7,131,132,133,75,76,77,8,9,10,131,132,133,75,76,77,8,9,10,12,92,93,1,5,6,7,3,4,5,6,7,8,9,10,11,45,4,1,1,1,134,4,4,4,4,1,1,1,1,4,38,49,4,0,0,0,0,0,34,65,39,8,11,48,51,92,2,6,7,8,9,10,93,7,8,9,10,44,83,84,85,101,99,100,4,88,89,90,1,2,91,94,31,5,33,34,35,36,6,37,7,64,38,39,8,40,9,41,10,42,43,44,45,46,25,47,11,48,49,50,51,52,53,3,83,84,85,101,99,100,4,4,88,89,90,1,2,91,94,31,5,5,33,34,35,36,6,6,37,7,7,64,38,39,8,8,40,9,9,41,10,10,42,43,44,45,46,25,47,11,11,48,49,50,51,52,53,83,84,85,101,99,100,4,88,89,90,1,2,91,94,31,5,33,34,35,36,6,37,7,64,38,39,8,40,9,41,10,42,43,44,45,46,25,47,11,48,49,50,51,52,53,83,84,85,101,99,100,4,88,89,90,1,2,91,94,31,5,33,34,35,36,6,37,7,64,38,39,8,40,9,41,10,42,43,44,45,46,25,47,11,48,49,50,51,52,53,4,83,84,85,88,89,90,91,6,7,3,4,5,6,7,8,9,10,11,3,54,31,33,34,36,37,39,40,41,42,43,48,3,3,5,6,7,8,9,10,12,12,92,92,93,93,4,65,65,31,36,31,36,31,36,12,92,93,1,5,6,7,39,40,41,48,51,52,75,76,77,65,8,9,10,11,1,37,37,37,12,92,93,5,6,7,0,0,0,0,0,0,0,4,128,128,5,6,7,8,9,10,11,94,33,39,41,48,50,51,52,53,75,65,8,11,83,84,85,88,89,90,1,91,31,5,33,34,36,37,39,40,41,43,11,48,51,52,53,4,11,83,84,85,88,89,90,91,4,2,38,4,4,38,135,135,135,135,92,92,6,0,64,92,92,6,6,6,44,136,4,5,6,7,8,9,10,11,38,38,3,3,4,5,6,11,136,4,5,6,7,8,9,10,11,3,4,5,6,7,8,9,10,11,3,4,5,6,7,8,9,10,11,3,3,4,5,6,7,8,9,10,11,135,3,4,5,6,7,8,9,10,11,135,3,4,5,6,7,8,9,10,11,3,4,5,6,7,8,9,10,11,136,4,5,6,7,8,9,10,11,0,136,4,5,6,7,8,9,10,11,136,4,5,6,7,8,9,10,11,1,1,92,93,6,7,3,0,3,3,4,3,4,5,6,7,8,9,10,11,5,6,7,8,9,10,11,11,11,2,128,4,5,6,7,8,9,10,11,4,83,84,85,88,89,90,91,64,0,0,0,3,129,129,4,4,4,2,31,33,34,35,36,37,38,39,40,41,42,43,44,45,46,25,47,48,49,50,51,52,53,4,64,38,4,83,84,85,101,99,100,4,4,88,89,90,1,2,91,94,31,5,33,34,35,36,6,37,7,64,38,39,8,40,9,41,10,42,43,44,45,46,25,47,11,48,49,50,51,52,53,83,84,85,101,99,100,4,88,89,90,1,2,91,94,31,5,33,34,35,36,6,37,7,64,38,39,8,40,9,41,10,42,43,44,45,46,25,47,11,48,49,50,51,52,53,4,4,0,0,0,0,0,83,84,85,101,99,100,4,88,89,90,1,2,2,91,94,31,31,5,33,33,34,34,35,36,36,6,37,37,7,64,38,39,39,8,40,40,9,41,41,10,42,42,43,43,44,45,46,25,25,47,11,48,48,49,50,51,52,53,4,128,128,5,6,7,8,9,10,11,137,3,4,2,3,138,4,2,31,5,33,34,36,6,37,7,39,8,40,9,41,10,42,43,11,48,128,4,5,6,7,8,9,10,11,138,4,0,94,37,37,37,48,48,65,11,48,65,11,48,65,65,48,65,11,44,139,140,141,142,139,141,143,144,140,145,146,147,148,149,150,151,152,146,147,148,144,143,145,0,78,0,0,0,0,78,0,0,0,0,0,0,0,0,0,0,0,120,108,109,110,78,111,112,113,114,115,116,117,118,119,120,106,108,109,110,78,111,112,113,114,115,116,117,118,119,120,106,108,109,110,78,78,111,112,113,114,115,116,117,118,119,120,106,108,109,110,78,111,112,113,114,115,116,117,118,119,120,106,106,106,106,153,108,109,110,116,111,112,113,114,115,116,117,118,119,120,106,108,109,110,78,111,112,113,114,115,116,117,118,119,120,106,108,109,110,78,111,112,113,114,115,116,117,118,119,120,106,108,109,110,78,111,112,113,114,115,116,117,118,119,120,106,108,109,110,111,112,113,114,115,116,117,118,119,120,106,108,109,110,78,111,112,113,114,115,116,117,118,119,120,106,106,106,106,119,118,108,109,110,111,112,106,111,112,113,114,115,116,117,118,119,120,111,112,113,114,115,116,117,118,119,120,114,106,108,109,110,78,111,112,113,114,115,116,117,118,119,120,106,108,109,110,78,111,112,113,114,115,116,117,118,119,120,106,117,115,108,109,110,78,111,112,113,114,115,116,117,118,119,120,106,111,112,113,0,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,0,0,0,0,0,122,0,0,154,125,123,154,125,123,154,125,123,154,125,123,154,125,123,123,125,154,125,123,154,125,123,154,125,123,154,125,123,125,123,0,154,125,123,154,125,123,154,125,123],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,2]],[3],[[4,3]],[[5,3]],[[6,3]],[[7,3]],[[8,3]],[[9,3]],[[10,3]],[[11,3]],[[12,3]],[[12,13],14],[12,[[16,[15]]]],[[12,3],[[16,[17]]]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[4,18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[5,18],[[],18],[[],18],[[],18],[[],18],[[],18],[6,18],[[],18],[7,18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[8,18],[[],18],[9,18],[[],18],[[],18],[[],18],[10,18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[11,18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[4,18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[5,18],[[],18],[[],18],[[],18],[[],18],[6,18],[[],18],[[],18],[7,18],[[],18],[[],18],[[],18],[[],18],[[],18],[8,18],[[],18],[[],18],[9,18],[[],18],[[],18],[10,18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[11,18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[4,19],[4,[[21,[20]]]],[[],22],[[],22],[[],22],[4],[4,23],[4,[[24,[20]]]],[[],3],[4,3],[5,3],[6,3],[7,3],[8,3],[9,3],[10,3],[11,3],[[],3],[4,3],[5,3],[6,3],[7,3],[8,3],[9,3],[10,3],[11,3],[[25,26],3],[[25,27],3],[4,28],[4,29],[4],[4,30],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[4,19],[31,32],[4,4],[2,2],[31,31],[33,33],[34,34],[35,35],[36,36],[37,37],[38,38],[39,39],[40,40],[41,41],[42,42],[43,43],[44,44],[45,45],[46,46],[25,25],[47,47],[48,48],[49,49],[50,50],[51,51],[52,52],[53,53],[[],7],[[],8],[[],9],[[],10],[[],11],[[],5],[[],5],[[],6],[[],6],[5,5],[6,6],[7,7],[8,8],[9,9],[10,10],[11,11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[55,[54]]]],[[],[[55,[54,56]]]],[[],[[55,[54,56]]]],[[],[[55,[54,56]]]],[[],[[55,[54,56]]]],[[],[[55,[54,56]]]],[[],[[55,[54,56]]]],[[],[[55,[54,56]]]],[[],[[55,[54,56]]]],[[],[[55,[54,56]]]],[[],[[55,[54,56]]]],[[],[[55,[54,56]]]],[[],[[55,[54,56]]]],[[],[[55,[54,56]]]],[[],[[55,[54,56]]]],[[],[[55,[54,56]]]],[[],[[55,[54,56]]]],[[],[[55,[54,56]]]],[[],[[55,[54,56]]]],[[],[[55,[54,56]]]],[[],[[55,[54,56]]]],[[],[[55,[54,56]]]],[[],[[55,[54,56]]]],[[],[[55,[54,56]]]],[[],[[55,[54,56]]]],[[],[[55,[54,56]]]],[[],[[55,[3]]]],[4,[[55,[3]]]],[5,[[55,[3]]]],[6,[[55,[3]]]],[7,[[55,[3]]]],[8,[[55,[3]]]],[9,[[55,[3]]]],[10,[[55,[3]]]],[11,[[55,[3]]]],[[4,4],57],[[38,38],57],[[48,58],17],[[],[[16,[58]]]],[[],[[16,[58]]]],[[],[[16,[58]]]],[[],[[16,[58]]]],[[],[[16,[58]]]],[[],[[16,[58]]]],[[],[[16,[58]]]],[[],[[16,[58]]]],[[],[[16,[58]]]],[[],[[16,[58]]]],[2,[[16,[54]]]],[2,[[16,[54]]]],[13,14],[13,14],[[4,13],14],[[6,13],14],[[7,13],14],[[8,13],14],[[9,13],14],[[10,13],14],[[11,13],14],[[],4],[[],1],[[],6],[[],7],[[],8],[[],9],[[],10],[[],44],[[],47],[[],11],[59,[[60,[4]]]],[[46,59],[[60,[[55,[3]]]]]],[[[55,[3]]],[[60,[[55,[3]],[55,[3]]]]]],[[[55,[54]]],[[60,[[55,[54]],[55,[54]]]]]],[3,[[16,[3]]]],[54,[[16,[54]]]],[[[61,[54]]],[[60,[[61,[54]],[61,[54]]]]]],[3,[[16,[3]]]],[54,[[16,[54]]]],[55,[[62,[[55,[3]]]]]],[55,[[62,[[55,[3]]]]]],[55,62],[55,[[62,[[55,[3]]]]]],[[[55,[5]]],[[62,[[55,[3]]]]]],[[[55,[6]]],[[62,[[55,[3]]]]]],[[[55,[7]]],62],[[[55,[9]]],[[62,[[55,[3]]]]]],[22,17],[22,17],[22,17],[22,17],[63],[63],[63],[[38,3],[[60,[3,64]]]],[[38,3],[[60,[3,64]]]],[[],1],[[],[[21,[20]]]],[[65,13],14],[65,[[16,[15]]]],[[65,3],[[16,[17]]]],[[4,4],17],[[64,64],17],[[38,38],17],[[49,49],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],0,[66,[[60,[67,68]]]],[58,[[16,[3]]]],[32,[[16,[3]]]],[32,[[16,[3]]]],[58,[[16,[3]]]],[[39,58],[[16,[33]]]],[[8,58],[[16,[3]]]],[[9,32],[[16,[3]]]],[[10,32],[[16,[3]]]],[[11,58],[[16,[3]]]],[[51,58],[[16,[33]]]],[32,[[16,[3]]]],[32,[[16,[3]]]],[[39,32],[[16,[33]]]],[[8,32],[[16,[3]]]],[[40,32],[[16,[34]]]],[[41,32],[[16,[34]]]],[[11,32],[[16,[3]]]],[[51,32],[[16,[33]]]],[[52,32],[[16,[34]]]],[32,[[16,[3]]]],[32,[[16,[3]]]],[[8,32],[[16,[3]]]],[[11,32],[[16,[3]]]],[[],32],[[],32],[[],32],[[],32],[39,32],[8,32],[40,32],[9,32],[41,32],[10,32],[11,32],[51,32],[52,32],[58,[[16,[3]]]],[32,[[16,[3]]]],[32,[[16,[3]]]],[58,[[16,[3]]]],[[8,58],[[16,[3]]]],[[9,32],[[16,[3]]]],[[10,32],[[16,[3]]]],[[11,58],[[16,[3]]]],[39,[[24,[58]]]],[51,[[24,[58]]]],[[3,13],14],[[4,13],[[60,[69]]]],[[4,13],[[60,[69]]]],[[4,13],[[60,[69]]]],[[4,13],[[60,[69]]]],[[2,13],14],[[31,13],14],[[5,13],14],[[33,13],14],[[34,13],14],[[36,13],14],[[6,13],14],[[37,13],14],[[7,13],14],[[64,13],14],[[64,13],14],[[38,13],14],[[38,13],14],[[39,13],14],[[8,13],14],[[40,13],14],[[9,13],14],[[41,13],14],[[10,13],14],[[42,13],14],[[43,13],14],[[44,13],14],[[47,13],14],[[11,13],14],[[48,13],14],[[49,13],14],[[50,13],14],[[51,13],14],[[52,13],14],[[53,13],14],[[]],[[]],[[]],[[]],[[]],[[]],[28,4],[23,4],[[]],[19,4],[30,4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[70,64],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[9,47],[[]],[[],47],[8,47],[65,11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[21,[20]]],4],[[[21,[20]]],4],[[[21,[20]]],4],[[71,72,72,[21,[20]]],4],[[71,72,72,[21,[20]]],4],[65,11],[3,16],[3,[[16,[4]]]],[[35,3],[[16,[[55,[3]]]]]],[[[24,[20]]],[[60,[4,73]]]],[[[24,[20]]],[[60,[4,73]]]],[58,[[60,[4]]]],[[]],[[],35],[[],45],[[],46],[[],25],[29,4],[29,4],[[15,15],4],[[[62,[3]]],5],0,[32,[[16,[3]]]],[32,[[16,[3]]]],[3,[[16,[3]]]],[[1,74],[[16,[2]]]],[[5,32],[[16,[3]]]],[[6,32],[[16,[3]]]],[[7,3],[[16,[3]]]],[32,16],[[7,32],16],[32,16],[[7,32],16],[58,[[16,[3]]]],[32,[[16,[3]]]],[32,[[16,[3]]]],[[75,58],[[16,[3]]]],[[76,32],[[16,[3]]]],[[77,32],[[16,[3]]]],[58,[[16,[3]]]],[32,[[16,[3]]]],[32,[[16,[3]]]],[58,[[16,[3]]]],[32,[[16,[3]]]],[32,[[16,[3]]]],[[75,58],[[16,[3]]]],[[76,32],[[16,[3]]]],[[77,32],[[16,[3]]]],[58,[[16,[3]]]],[32,[[16,[3]]]],[32,[[16,[3]]]],[32,[[16,[3]]]],[32,[[16,[3]]]],[3,[[16,[3]]]],[[1,74],[[16,[2]]]],[[5,32],[[16,[3]]]],[[6,32],[[16,[3]]]],[[7,3],[[16,[3]]]],[[],[[16,[42]]]],[4,[[16,[42]]]],[5,[[16,[42]]]],[6,[[16,[42]]]],[7,[[16,[42]]]],[8,[[16,[42]]]],[9,[[16,[42]]]],[10,[[16,[42]]]],[11,[[16,[42]]]],[[45,3],78],[4,[[16,[79]]]],[[1,74],[[16,[54]]]],[[1,74],[[16,[54]]]],[[1,74],[[16,[42]]]],[[],2],[[],2],[4,80],[4,[[16,[81]]]],[4,32],[[1,58],[[16,[2]]]],[[1,58],[[16,[2]]]],[[1,58],[[16,[2]]]],[[1,58],[[16,[2]]]],[[4,63]],[[38,63]],[[49,63]],[4,23],0,0,0,0,0,[34,32],[58,[[16,[32]]]],[[39,58],[[16,[32]]]],[[8,58],[[16,[32]]]],[[11,58],[[16,[32]]]],[[48,58],[[16,[32]]]],[[51,58],[[16,[32]]]],[[32,[55,[3]]]],[[2,54]],[[6,32,[55,[3]]]],[[7,3,3]],[[8,58,3]],[[9,3]],[[10,3]],[[[55,[3]],[55,[3]]],[[16,[[55,[3]]]]]],[[7,[55,[3]],[55,[3]]],[[16,[[55,[3]]]]]],[[8,58,[55,[3]]]],[[9,[55,[3]]]],[[10,[55,[3]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[55,[[55,[18]]]],[[[55,[56]]],[[55,[18,56]]]],[[[55,[56]]],[[55,[18,56]]]],[[[55,[56]]],[[55,[18,56]]]],[[[55,[56]]],[[55,[18,56]]]],[[[55,[56]]],[[55,[18,56]]]],[[[55,[56]]],[[55,[18,56]]]],[[[55,[56]]],[[55,[18,56]]]],[[[55,[4]]],[[55,[18]]]],[[[55,[56]]],[[55,[18,56]]]],[[[55,[56]]],[[55,[18,56]]]],[[[55,[56]]],[[55,[18,56]]]],[[[55,[56]]],[[55,[18,56]]]],[[[55,[56]]],[[55,[18,56]]]],[[[55,[56]]],[[55,[18,56]]]],[[[55,[56]]],[[55,[18,56]]]],[[[55,[56]]],[[55,[18,56]]]],[[[55,[56]]],[[55,[18,56]]]],[[[55,[5]]],[[55,[18]]]],[[[55,[56]]],[[55,[18,56]]]],[[[55,[56]]],[[55,[18,56]]]],[[[55,[56]]],[[55,[18,56]]]],[[[55,[56]]],[[55,[18,56]]]],[[[55,[6]]],[[55,[18]]]],[[[55,[56]]],[[55,[18,56]]]],[[[55,[56]]],[[55,[18,56]]]],[[[55,[56]]],[[55,[18,56]]]],[[[55,[7]]],[[55,[18]]]],[[[55,[56]]],[[55,[18,56]]]],[[[55,[56]]],[[55,[18,56]]]],[[[55,[56]]],[[55,[18,56]]]],[[[55,[8]]],[[55,[18]]]],[[[55,[56]]],[[55,[18,56]]]],[[[55,[56]]],[[55,[18,56]]]],[[[55,[56]]],[[55,[18,56]]]],[[[55,[9]]],[[55,[18]]]],[[[55,[56]]],[[55,[18,56]]]],[[[55,[10]]],[[55,[18]]]],[[[55,[56]]],[[55,[18,56]]]],[[[55,[56]]],[[55,[18,56]]]],[[[55,[56]]],[[55,[18,56]]]],[[[55,[56]]],[[55,[18,56]]]],[[[55,[56]]],[[55,[18,56]]]],[[[55,[56]]],[[55,[18,56]]]],[[[55,[56]]],[[55,[18,56]]]],[[[55,[56]]],[[55,[18,56]]]],[[[55,[11]]],[[55,[18]]]],[[[55,[56]]],[[55,[18,56]]]],[[[55,[56]]],[[55,[18,56]]]],[[[55,[56]]],[[55,[18,56]]]],[[[55,[56]]],[[55,[18,56]]]],[[[55,[56]]],[[55,[18,56]]]],[[[55,[56]]],[[55,[18,56]]]],[[[55,[56]]],[[55,[18,56]]]],[82,[[82,[18]]]],[82,[[82,[18]]]],[82,[[82,[18]]]],[82,[[82,[18]]]],[82,[[82,[18]]]],[82,[[82,[18]]]],[82,[[82,[18]]]],[82,[[82,[18]]]],[82,[[82,[18]]]],[82,[[82,[18]]]],[82,[[82,[18]]]],[82,[[82,[18]]]],[82,[[82,[18]]]],[82,[[82,[18]]]],[82,[[82,[18]]]],[82,[[82,[18]]]],[82,[[82,[18]]]],[82,[[82,[18]]]],[82,[[82,[18]]]],[82,[[82,[18]]]],[82,[[82,[18]]]],[82,[[82,[18]]]],[82,[[82,[18]]]],[82,[[82,[18]]]],[82,[[82,[18]]]],[82,[[82,[18]]]],[82,[[82,[18]]]],[82,[[82,[18]]]],[82,[[82,[18]]]],[82,[[82,[18]]]],[82,[[82,[18]]]],[82,[[82,[18]]]],[82,[[82,[18]]]],[82,[[82,[18]]]],[82,[[82,[18]]]],[82,[[82,[18]]]],[82,[[82,[18]]]],[82,[[82,[18]]]],[82,[[82,[18]]]],[82,[[82,[18]]]],[82,[[82,[18]]]],[82,[[82,[18]]]],[82,[[82,[18]]]],[82,[[82,[18]]]],[82,[[82,[18]]]],[61,[[61,[18]]]],[61,[[61,[18]]]],[61,[[61,[18]]]],[61,[[61,[18]]]],[61,[[61,[18]]]],[61,[[61,[18]]]],[61,[[61,[18]]]],[61,[[61,[18]]]],[61,[[61,[18]]]],[61,[[61,[18]]]],[61,[[61,[18]]]],[61,[[61,[18]]]],[61,[[61,[18]]]],[61,[[61,[18]]]],[61,[[61,[18]]]],[61,[[61,[18]]]],[61,[[61,[18]]]],[61,[[61,[18]]]],[61,[[61,[18]]]],[61,[[61,[18]]]],[61,[[61,[18]]]],[61,[[61,[18]]]],[61,[[61,[18]]]],[61,[[61,[18]]]],[61,[[61,[18]]]],[61,[[61,[18]]]],[61,[[61,[18]]]],[61,[[61,[18]]]],[61,[[61,[18]]]],[61,[[61,[18]]]],[61,[[61,[18]]]],[61,[[61,[18]]]],[61,[[61,[18]]]],[61,[[61,[18]]]],[61,[[61,[18]]]],[61,[[61,[18]]]],[61,[[61,[18]]]],[61,[[61,[18]]]],[61,[[61,[18]]]],[61,[[61,[18]]]],[61,[[61,[18]]]],[61,[[61,[18]]]],[61,[[61,[18]]]],[61,[[61,[18]]]],[61,[[61,[18]]]],[4,[[21,[20]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[6],[7],[55,[[55,[3]]]],[[[55,[4]]],[[55,[3]]]],[[[55,[5]]],[[55,[3]]]],[[[55,[6]]],[[55,[3]]]],[[[55,[7]]],[[55,[3]]]],[[[55,[8]]],[[55,[3]]]],[[[55,[9]]],[[55,[3]]]],[[[55,[10]]],[[55,[3]]]],[[[55,[11]]],[[55,[3]]]],[3,17],[54,17],[31,17],[33,17],[34,17],[36,17],[37,17],[39,17],[40,17],[41,17],[42,17],[43,17],[48,17],[[],17],[[],17],[5,17],[6,17],[7,17],[8,17],[9,17],[10,17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[4,17],[49,17],[49,17],[31,17],[36,17],[31,74],[36,74],[31,58],[36,58],[[],83],[[],84],[[],85],[1,86],[5,83],[6,84],[7,85],[39,[[87,[33]]]],[40,[[87,[34]]]],[41,[[87,[34]]]],[48,[[87,[50]]]],[51,[[87,[33]]]],[52,[[87,[34]]]],[[],88],[[],89],[[],90],[[],91],[8,88],[9,89],[10,90],[11,91],[1,86],[37,17],[37,74],[37,58],[[],32],[[],32],[[],32],[5,32],[6,32],[7,32],[[92,3]],[[92,13],14],[92,[[16,[15]]]],[[92,3],[[16,[17]]]],[[93,3]],[[93,13],14],[[93,3],[[16,[17]]]],[[],[[16,[58]]]],[[],[[16,[58]]]],[[],[[16,[58]]]],[[],[[16,[58]]]],[[],[[16,[58]]]],[[],[[16,[58]]]],[[],[[16,[58]]]],[[],[[16,[58]]]],[[],[[16,[58]]]],[[],[[16,[58]]]],[94,[[16,[58]]]],[33,58],[39,58],[41,58],[48,58],[50,58],[51,58],[52,58],[53,58],[32,[[16,[58]]]],[32,[[16,[58]]]],[[8,32],[[16,[58]]]],[[11,32],[[16,[58]]]],[12,83],[92,84],[93,85],[75,88],[76,89],[77,90],[[],1],[65,91],[32,31],[[[55,[[24,[[55,[3]]]]]]],5],[58,33],[32,34],[[],36],[[],37],[[58,[24,[33]]],39],[[[24,[34]]],40],[[58,[24,[34]]],41],[[],43],[[[96,[95]],[96,[47]]],11],[[58,[24,[50]]],48],[[58,[24,[33]]],51],[[58,[24,[34]]],52],[58,53],[[],4],[[32,[96,[95]],[96,[47]]],11],[83,16],[84,16],[85,16],[88,16],[89,16],[90,16],[91,16],[[],4],[[],2],[58,[[60,[38,64]]]],[58,[[60,[4,73]]]],[[4,4],[[16,[57]]]],[[38,38],[[16,[57]]]],[58,[[60,[3,64]]]],[58,[[60,[3,64]]]],[58,[[60,[3,64]]]],[58,[[60,[3,64]]]],[[],[[16,[[55,[3]]]]]],[[],[[16,[[55,[3]]]]]],[6,[[16,[[55,[3]]]]]],0,[97],[[[55,[3]]]],[[[55,[3]]]],[[6,3]],[[6,[55,[3]]]],[[6,[55,[3]]]],[44,[[98,[1]]]],[[],[[16,[58]]]],[[],[[16,[58]]]],[[],[[16,[58]]]],[[],[[16,[58]]]],[[],[[16,[58]]]],[[],[[16,[58]]]],[[],[[16,[58]]]],[[],[[16,[58]]]],[[],[[16,[58]]]],[[38,3],[[60,[3,64]]]],[[38,3],[[60,[3,64]]]],[[],[[16,[15]]]],[[],[[16,[15]]]],[4,[[16,[15]]]],[5,[[16,[15]]]],[6,[[16,[15]]]],[11,[[16,[15]]]],[[],[[16,[58]]]],[[],[[16,[58]]]],[[],[[16,[58]]]],[[],[[16,[58]]]],[[],[[16,[58]]]],[[],[[16,[58]]]],[[],[[16,[58]]]],[[],[[16,[58]]]],[[],[[16,[58]]]],[[],99],[4,99],[5,99],[6,99],[7,99],[8,99],[9,99],[10,99],[11,99],[55,100],[[[55,[4]]],100],[[[55,[5]]],100],[[[55,[6]]],100],[[[55,[7]]],100],[[[55,[8]]],100],[[[55,[9]]],100],[[[55,[10]]],100],[[[55,[11]]],100],[3,[[16,[17]]]],[3,[[16,[17]]]],[[4,3],[[16,[17]]]],[[5,3],[[16,[17]]]],[[6,3],[[16,[17]]]],[[7,3],[[16,[17]]]],[[8,3],[[16,[17]]]],[[9,3],[[16,[17]]]],[[10,3],[[16,[17]]]],[[11,3],[[16,[17]]]],[58,[[60,[3,64]]]],[[3,58],[[60,[3,64]]]],[58,[[60,[3,64]]]],[58,[[60,[3,64]]]],[58,[[60,[3,64]]]],[58,[[60,[3,64]]]],[58,[[60,[3,64]]]],[58,[[60,[3,64]]]],[58,[[60,[3,64]]]],[58,[[60,[3,64]]]],[58,[[60,[3,64]]]],[[3,58],[[60,[3,64]]]],[58,[[60,[3,64]]]],[58,[[60,[3,64]]]],[58,[[60,[3,64]]]],[58,[[60,[3,64]]]],[58,[[60,[3,64]]]],[58,[[60,[3,64]]]],[58,[[60,[3,64]]]],[58,[[60,[3,64]]]],[[],101],[4,101],[5,101],[6,101],[7,101],[8,101],[9,101],[10,101],[11,101],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],0,[[],[[16,[58]]]],[[],[[16,[58]]]],[[],[[16,[58]]]],[[],[[16,[58]]]],[[],[[16,[58]]]],[[],[[16,[58]]]],[[],[[16,[58]]]],[[],[[16,[58]]]],[[],[[16,[58]]]],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[1],[1],[32,[[55,[3]]]],[3,[[16,[[55,[3]]]]]],[[6,32],[[55,[3]]]],[[7,3],[[16,[[55,[3]]]]]],[3,17],0,[[],[[16,[78]]]],[[],[[16,[78]]]],[[4,102],60],[[[55,[3]]],[[60,[[55,[3]]]]]],[[4,[55,[3]]],[[60,[[55,[3]]]]]],[[5,[55,[3]]],[[60,[[55,[3]]]]]],[[6,[55,[3]]],[[60,[[55,[3]]]]]],[[7,[55,[3]]],[[60,[[55,[3]]]]]],[[8,[55,[3]]],[[60,[[55,[3]]]]]],[[9,[55,[3]]],[[60,[[55,[3]]]]]],[[10,[55,[3]]],[[60,[[55,[3]]]]]],[[11,[55,[3]]],[[60,[[55,[3]]]]]],[[5,[16,[42]]]],[[6,[16,[42]]]],[[7,[16,[42]]]],[[8,[16,[42]]]],[[9,[16,[42]]]],[[10,[16,[42]]]],[[11,[16,[42]]]],[[11,[96,[95]],[96,[47]]]],[[11,32,[96,[95]],[96,[47]]]],[2,58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[4,28],[83],[84],[85],[88],[89],[90],[91],[64,[[16,[103]]]],0,[[75,13],14],[[75,3],[[16,[17]]]],[[[55,[3]]],[[60,[3,[55,[3]]]]]],[[[55,[3]]],[[60,[[55,[3]]]]]],[[[55,[3]]],[[60,[[55,[3]]]]]],[4,[[21,[20]]]],[4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],95],[[],95],[[],95],[4,29],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[58,[[60,[4]]]],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[58,[[60,[4,73]]]],[[[24,[20]]],[[60,[4,73]]]],[[76,3]],[[76,13],14],[[76,3],[[16,[17]]]],[[77,13],14],[[77,3],[[16,[17]]]],[[],74],[[],74],[[],74],[[],74],[[],74],[[],74],[[],74],[[],74],[[],74],[[],74],[[],74],[[],74],[2,74],[[],74],[[],74],[31,74],[[],74],[[],74],[[],74],[33,74],[[],74],[34,74],[[],74],[[],74],[36,74],[[],74],[37,74],[[],74],[[],74],[[],74],[[],74],[[],74],[39,74],[[],74],[[],74],[40,74],[[],74],[41,74],[[],74],[[],74],[42,74],[[],74],[[],74],[43,74],[[],74],[[],74],[[],74],[25,74],[[],74],[[],74],[[],74],[48,74],[[],74],[[],74],[[],74],[[],74],[[],74],[[],74],[[],[[16,[58]]]],[[],[[16,[58]]]],[[],[[16,[58]]]],[[],[[16,[58]]]],[[],[[16,[58]]]],[[],[[16,[58]]]],[[],[[16,[58]]]],[[],[[16,[58]]]],[[],[[16,[58]]]],[[],[[16,[58]]]],[[],42],[[],42],[[],42],[2,42],[[],58],[[],58],[4,58],[2,58],[31,58],[5,58],[33,58],[34,58],[36,58],[6,58],[37,58],[7,58],[39,58],[8,58],[40,58],[9,58],[41,58],[10,58],[42,58],[43,58],[11,58],[48,58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],4],[4,30],0,[94,3],[37,17],[37,74],[37,58],[[48,58],[[16,[50]]]],[[48,32],[[16,[50]]]],[[],32],[11,32],[48,32],[[],58],[11,58],[48,[[24,[58]]]],[[],95],[[],95],[[48,58],95],[[],49],[11,49],[44,[[104,[1]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[]],[[]],[[]],[78,105],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[106,106],[[]],[[],[[55,[54,56]]]],[[107,1],[[60,[[55,[3]],68]]]],[[108,59],60],[[109,59],60],[[110,59],60],0,[66,[[60,[67,68]]]],[66,[[60,[67,68]]]],[66,[[60,[67,68]]]],[66,[[60,[67,68]]]],[66,[[60,[67,68]]]],[66,[[60,[67,68]]]],[66,[[60,[67,68]]]],[66,[[60,[67,68]]]],[66,[[60,[67,68]]]],[66,[[60,[67,68]]]],[[106,13],14],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[55,[56]]],[[55,[18,56]]]],[[[55,[56]]],[[55,[18,56]]]],[[[55,[56]]],[[55,[18,56]]]],[[[55,[56]]],[[55,[18,56]]]],[[[55,[56]]],[[55,[18,56]]]],[[[55,[56]]],[[55,[18,56]]]],[[[55,[56]]],[[55,[18,56]]]],[[[55,[56]]],[[55,[18,56]]]],[[[55,[56]]],[[55,[18,56]]]],[[[55,[56]]],[[55,[18,56]]]],[[[55,[56]]],[[55,[18,56]]]],[[[55,[56]]],[[55,[18,56]]]],[[[55,[56]]],[[55,[18,56]]]],[[[55,[56]]],[[55,[18,56]]]],[[[55,[56]]],[[55,[18,56]]]],[82,[[82,[18]]]],[82,[[82,[18]]]],[82,[[82,[18]]]],[82,[[82,[18]]]],[82,[[82,[18]]]],[82,[[82,[18]]]],[82,[[82,[18]]]],[82,[[82,[18]]]],[82,[[82,[18]]]],[82,[[82,[18]]]],[82,[[82,[18]]]],[82,[[82,[18]]]],[82,[[82,[18]]]],[82,[[82,[18]]]],[61,[[61,[18]]]],[61,[[61,[18]]]],[61,[[61,[18]]]],[61,[[61,[18]]]],[61,[[61,[18]]]],[61,[[61,[18]]]],[61,[[61,[18]]]],[61,[[61,[18]]]],[61,[[61,[18]]]],[61,[[61,[18]]]],[61,[[61,[18]]]],[61,[[61,[18]]]],[61,[[61,[18]]]],[61,[[61,[18]]]],[61,[[61,[18]]]],[106,17],[[106,32],17],[106,32],0,0,[1,108],[1,109],[[2,1],110],[[3,1],111],[[3,1],112],[86,106],0,0,0,0,0,0,0,0,0,0,[[111,102],60],[[112,102],60],[[113,102],60],[[114,102],60],[[115,102],60],[[116,102],60],[[117,102],60],[[118,102],60],[[119,102],60],[[120,102],60],0,[[]],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],0,0,[[],74],[[],74],[[],74],[[],74],[[],74],[[],74],[[],74],[[],74],[[],74],[[],74],[[],74],[[],74],[[],74],[[],74],[[],74],0,0,0,0,[[],18],[[],18],[[]],[[]],[121,121],[[]],[[],[[55,[54,56]]]],[121,[[55,[3]]]],[[]],[[],121],[[]],[[[55,[56]]],[[55,[18,56]]]],[82,[[82,[18]]]],[61,[[61,[18]]]],[[]],[[],60],[[],60],[[],74],0,0,0,0,0,0,0,0,[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[123,[122]],124]],[[[125,[122]],124]],[[]],[[]],[[]],[[[55,[56]]],[[55,[18,56]]]],[[[55,[56]]],[[55,[18,56]]]],[[[55,[56]]],[[55,[18,56]]]],[82,[[82,[18]]]],[82,[[82,[18]]]],[82,[[82,[18]]]],[61,[[61,[18]]]],[61,[[61,[18]]]],[61,[[61,[18]]]],[[],[[125,[122]]]],[[],[[123,[122]]]],[[],126],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],74],[[],74],[[],74]],"c":[],"p":[[3,"TypeRegistry"],[3,"TypeRegistration"],[8,"Reflect"],[3,"Uuid"],[3,"DynamicArray"],[3,"DynamicList"],[3,"DynamicMap"],[3,"DynamicStruct"],[3,"DynamicTuple"],[3,"DynamicTupleStruct"],[3,"DynamicEnum"],[8,"Array"],[3,"Formatter"],[6,"Result"],[15,"u64"],[4,"Option"],[15,"bool"],[8,"Any"],[3,"Braced"],[15,"u8"],[15,"array"],[8,"DynEq"],[3,"Hyphenated"],[15,"slice"],[3,"ReflectFromPtr"],[3,"Ptr"],[3,"PtrMut"],[3,"Simple"],[15,"u128"],[3,"Urn"],[3,"ArrayInfo"],[15,"usize"],[3,"NamedField"],[3,"UnnamedField"],[3,"ReflectFromReflect"],[3,"ListInfo"],[3,"MapInfo"],[3,"ParsedPath"],[3,"StructInfo"],[3,"TupleInfo"],[3,"TupleStructInfo"],[4,"TypeInfo"],[3,"ValueInfo"],[3,"TypeRegistryArc"],[3,"ReflectSerialize"],[3,"ReflectDeserialize"],[4,"DynamicVariant"],[3,"EnumInfo"],[4,"VariantType"],[4,"VariantInfo"],[3,"StructVariantInfo"],[3,"TupleVariantInfo"],[3,"UnitVariantInfo"],[8,"TypeData"],[3,"Box"],[3,"Global"],[4,"Ordering"],[15,"str"],[8,"Deserializer"],[4,"Result"],[3,"Rc"],[3,"Vec"],[8,"Hasher"],[4,"ReflectPathError"],[8,"Enum"],[8,"Serializer"],[3,"Ok"],[3,"Error"],[3,"Error"],[3,"ParseIntError"],[15,"u32"],[15,"u16"],[3,"Error"],[3,"TypeId"],[8,"Struct"],[8,"Tuple"],[8,"TupleStruct"],[4,"Serializable"],[3,"Timestamp"],[4,"Variant"],[4,"Version"],[3,"Arc"],[3,"ArrayIter"],[3,"ListIter"],[3,"MapIter"],[8,"Iterator"],[3,"Iter"],[3,"FieldIter"],[3,"TupleFieldIter"],[3,"TupleStructFieldIter"],[3,"VariantFieldIter"],[8,"List"],[8,"Map"],[4,"VariantField"],[3,"String"],[8,"Into"],[3,"Demand"],[6,"RwLockReadGuard"],[4,"ReflectMut"],[4,"ReflectOwned"],[4,"ReflectRef"],[8,"Serializer"],[8,"Error"],[6,"RwLockWriteGuard"],[8,"Serialize"],[3,"SerializationData"],[8,"Deserializer"],[3,"UntypedReflectDeserializer"],[3,"TypeRegistrationDeserializer"],[3,"TypedReflectDeserializer"],[3,"ReflectSerializer"],[3,"TypedReflectSerializer"],[3,"ReflectValueSerializer"],[3,"StructSerializer"],[3,"TupleStructSerializer"],[3,"EnumSerializer"],[3,"TupleSerializer"],[3,"MapSerializer"],[3,"ListSerializer"],[3,"ArraySerializer"],[3,"ReflectDefault"],[8,"TypedProperty"],[3,"GenericTypeCell"],[8,"FnOnce"],[3,"NonGenericTypeCell"],[3,"AHasher"],[8,"TypeUuid"],[8,"TypePath"],[8,"FromReflect"],[8,"FromType"],[8,"GetField"],[8,"GetTupleField"],[8,"GetTupleStructField"],[8,"GetTypeRegistration"],[8,"GetPath"],[8,"DynamicTypePath"],[8,"Typed"],[8,"TypeUuidDynamic"],[13,"InvalidField"],[13,"InvalidStructVariantField"],[13,"InvalidFieldIndex"],[13,"ExpectedIdent"],[13,"InvalidTupleStructIndex"],[13,"InvalidTupleIndex"],[13,"InvalidTupleVariantIndex"],[13,"InvalidListIndex"],[13,"UnexpectedToken"],[13,"ExpectedToken"],[13,"ExpectedStruct"],[13,"ExpectedList"],[13,"ExpectedStructVariant"],[13,"ExpectedTupleVariant"],[8,"DeserializeValue"],[3,"TypePathComponent"]]},\
"bevy_reflect_derive":{"doc":"This crate contains macros used by Bevy’s <code>Reflect</code> API.","t":"YYYYOOOOOX","n":["FromReflect","Reflect","TypePath","TypeUuid","impl_from_reflect_value","impl_reflect_struct","impl_reflect_value","impl_type_path","impl_type_uuid","reflect_trait"],"q":[[0,"bevy_reflect_derive"]],"d":["Derives the <code>FromReflect</code> trait.","The main derive macro used by <code>bevy_reflect</code> for deriving …","Derives the <code>TypePath</code> trait, providing a stable alternative …","","A macro used to generate a <code>FromReflect</code> trait …","A replacement for <code>#[derive(Reflect)]</code> to be used with …","A macro used to generate reflection trait implementations …","A replacement for deriving <code>TypePath</code> for use on foreign …","Derives <code>TypeUuid</code> for the given type. This is used …","A macro that automatically generates type data for traits, …"],"i":[0,0,0,0,0,0,0,0,0,0],"f":[0,0,0,0,0,0,0,0,0,0],"c":[],"p":[]},\
"bevy_tasks":{"doc":"bevy_tasks","t":"DDDIIIDDDDDDLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["AsyncComputeTaskPool","ComputeTaskPool","IoTaskPool","ParallelIterator","ParallelSlice","ParallelSliceMut","Scope","Task","TaskPool","TaskPoolBuilder","ThreadExecutor","ThreadExecutorTicker","all","all","any","any","available_parallelism","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","by_ref","by_ref","cancel","chain","chain","cloned","cloned","collect","collect","copied","copied","count","count","cycle","cycle","default","default","default","deref","deref","deref","detach","drop","drop","filter","filter","filter_map","filter_map","flat_map","flat_map","flatten","flatten","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fold","fold","for_each","for_each","from","from","from","from","from","from","from","from","from","fuse","fuse","get","get","get","get_thread_executor","init","init","init","inspect","inspect","into","into","into","into","into","into","into","into","into","into_future","is_finished","is_same","last","last","map","map","max","max","max_by","max_by","max_by_key","max_by_key","min","min","min_by","min_by","min_by_key","min_by_key","new","new","new","new","next_batch","nth","nth","num_threads","on_thread_destroy","on_thread_spawn","par_chunk_map","par_chunk_map","par_chunk_map_mut","par_chunk_map_mut","par_splat_map","par_splat_map","par_splat_map_mut","par_splat_map_mut","partition","partition","poll","position","position","prelude","product","product","scope","scope_with_executor","size_hint","size_hint","spawn","spawn","spawn","spawn_local","spawn_on_external","spawn_on_scope","stack_size","sum","sum","thread_name","thread_num","tick","tick_global_task_pools_on_main_thread","ticker","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_poll","try_tick","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","with_local_executor"],"q":[[0,"bevy_tasks"]],"d":["A newtype for a task pool for CPU-intensive work that may …","A newtype for a task pool for CPU-intensive work that must …","A newtype for a task pool for IO-intensive work (i.e. …","<code>ParallelIterator</code> closely emulates the <code>std::iter::Iterator</code> …","Provides functions for mapping read-only slices across a …","Provides functions for mapping mutable slices across a …","A <code>TaskPool</code> scope for running one or more non-<code>&#39;static</code> …","Wraps <code>async_executor::Task</code>, a spawned future.","A thread pool for executing tasks. Tasks are futures that …","Used to create a <code>TaskPool</code>","An executor that can only be ticked on the thread it was …","Used to tick the <code>ThreadExecutor</code>. The executor does not …","Tests if every element of the parallel iterator matches a …","Tests if every element of the parallel iterator matches a …","Tests if any element of the parallel iterator matches a …","Tests if any element of the parallel iterator matches a …","Gets the logical CPU core count available to the current …","","","","","","","","","","","","","","","","","","","Creates a new <code>TaskPool</code> based on the current options.","Borrows a parallel iterator, rather than consuming it.","Borrows a parallel iterator, rather than consuming it.","Cancels the task and waits for it to stop running.","Takes two parallel iterators and returns a parallel …","Takes two parallel iterators and returns a parallel …","Creates a parallel iterator which clones all of its items.","Creates a parallel iterator which clones all of its items.","Transforms a parallel iterator into a collection.","Transforms a parallel iterator into a collection.","Creates a parallel iterator which copies all of its items.","Creates a parallel iterator which copies all of its items.","Consumes the parallel iterator and returns the number of …","Consumes the parallel iterator and returns the number of …","Repeats a parallel iterator endlessly.","Repeats a parallel iterator endlessly.","","","","","","","Detaches the task to let it keep running in the …","","","Creates a parallel iterator which uses a closure to …","Creates a parallel iterator which uses a closure to …","Creates a parallel iterator that both filters and maps.","Creates a parallel iterator that both filters and maps.","Creates a parallel iterator that works like map, but …","Creates a parallel iterator that works like map, but …","Creates a parallel iterator that flattens nested structure.","Creates a parallel iterator that flattens nested structure.","","","","","","","","","Repeatedly applies a function to items of each batch of a …","Repeatedly applies a function to items of each batch of a …","Calls a closure on each item of a parallel iterator.","Calls a closure on each item of a parallel iterator.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates a parallel iterator which ends after the first …","Creates a parallel iterator which ends after the first …","Gets the global <code>ComputeTaskPool</code> instance.","Gets the global <code>AsyncComputeTaskPool</code> instance.","Gets the global <code>IoTaskPool</code> instance.","Each thread should only create one <code>ThreadExecutor</code>, …","Initializes the global <code>ComputeTaskPool</code> instance.","Initializes the global <code>AsyncComputeTaskPool</code> instance.","Initializes the global <code>IoTaskPool</code> instance.","Does something with each item of a parallel iterator, …","Does something with each item of a parallel iterator, …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Returns <code>true</code> if the current task is finished.","Returns true if <code>self</code> and <code>other</code>’s executor is same","Consumes the parallel iterator and returns the last item.","Consumes the parallel iterator and returns the last item.","Takes a closure and creates a parallel iterator which …","Takes a closure and creates a parallel iterator which …","Returns the maximum item of a parallel iterator.","Returns the maximum item of a parallel iterator.","Returns the item that gives the maximum value with respect …","Returns the item that gives the maximum value with respect …","Returns the item that gives the maximum value from the …","Returns the item that gives the maximum value from the …","Returns the minimum item of a parallel iterator.","Returns the minimum item of a parallel iterator.","Returns the item that gives the minimum value with respect …","Returns the item that gives the minimum value with respect …","Returns the item that gives the minimum value from the …","Returns the item that gives the minimum value from the …","Creates a new task from a given <code>async_executor::Task</code>","Creates a new <code>TaskPoolBuilder</code> instance","Create a <code>TaskPool</code> with the default configuration.","create a new <code>ThreadExecutor</code>","Returns the next batch of items for processing.","Consumes the parallel iterator and returns the nth item.","Consumes the parallel iterator and returns the nth item.","Override the number of threads created for the pool. If …","Sets a callback that is invoked once for every created …","Sets a callback that is invoked once for every created …","Splits the slice in chunks of size <code>chunks_size</code> or less and …","Splits the slice in chunks of size <code>chunks_size</code> or less and …","Splits the slice in chunks of size <code>chunks_size</code> or less and …","Splits the slice in chunks of size <code>chunks_size</code> or less and …","Splits the slice into a maximum of <code>max_tasks</code> chunks, and …","Splits the slice into a maximum of <code>max_tasks</code> chunks, and …","Splits the slice into a maximum of <code>max_tasks</code> chunks, and …","Splits the slice into a maximum of <code>max_tasks</code> chunks, and …","Consumes a parallel iterator, creating two collections …","Consumes a parallel iterator, creating two collections …","","Searches for an element in a parallel iterator, returning …","Searches for an element in a parallel iterator, returning …","","Multiplies all the items of a parallel iterator.","Multiplies all the items of a parallel iterator.","Allows spawning non-<code>&#39;static</code> futures on the thread pool. …","This allows passing an external executor to spawn tasks …","Returns the bounds on the remaining number of items in the …","Returns the bounds on the remaining number of items in the …","Spawns a static future onto the thread pool. The returned …","Spawns a scoped future onto the thread pool. The scope <em>must</em>…","Spawn a task on the thread executor","Spawns a static future on the thread-local async executor …","Spawns a scoped future onto the thread of the external …","Spawns a scoped future onto the thread the scope is run …","Override the stack size of the threads created for the pool","Sums the items of a parallel iterator.","Sums the items of a parallel iterator.","Override the name of the threads created for the pool. If …","Return the number of threads owned by the task pool","Tick the thread executor.","A function used by <code>bevy_core</code> to tick the global tasks …","Gets the <code>ThreadExecutorTicker</code> for this executor. Use this …","","","","","","","","","","","","","","","","","","","","Synchronously try to tick a task on the executor. Returns …","","","","","","","","","","Runs a function with the local executor. Typically used to …"],"i":[0,0,0,0,0,0,0,0,0,0,0,0,11,11,11,11,0,9,8,1,17,14,15,16,13,21,9,8,1,17,14,15,16,13,21,8,11,11,9,11,11,11,11,11,11,11,11,11,11,11,11,8,1,13,14,15,16,9,1,17,11,11,11,11,11,11,11,11,9,1,17,14,15,16,13,21,11,11,11,11,9,8,1,17,14,15,16,13,21,11,11,14,15,16,1,14,15,16,11,11,9,8,1,17,14,15,16,13,21,9,9,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,9,8,1,13,11,11,11,8,8,8,36,36,37,37,36,36,37,37,11,11,9,11,11,0,11,11,1,1,11,11,1,17,13,1,17,17,8,11,11,8,1,21,0,13,9,8,1,17,14,15,16,13,21,9,8,1,17,14,15,16,13,21,9,21,9,8,1,17,14,15,16,13,21,1],"f":[0,0,0,0,0,0,0,0,0,0,0,0,[[1,[0,[2,3,4,5]]],6],[[1,[0,[2,3,4,5]]],6],[[1,[0,[2,3,4,5]]],6],[[1,[0,[2,3,4,5]]],6],[[],7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[8,1],[[]],[[]],[9,10],[11,[[0,[11]]]],[11,[[0,[11]]]],[11,[[0,[11]]]],[11,[[0,[11]]]],[1,12],[1,12],[11,[[0,[11]]]],[11,[[0,[11]]]],[1,7],[1,7],[5,[[0,[5]]]],[5,[[0,[5]]]],[[],8],[[],1],[[],13],[14],[15],[16],[9],[1],[17],[2,[[0,[2]]]],[2,[[0,[2]]]],[2,[[0,[2]]]],[2,[[0,[2]]]],[2,[[0,[2]]]],[2,[[0,[2]]]],0,0,[[[9,[18]],19],20],[[1,19],20],[[[17,[18]],19],20],[[14,19],20],[[15,19],20],[[16,19],20],[[13,19],20],[[21,19],20],[[1,[0,[5,3,4]],[0,[2,3,4,5]]],[[22,[[0,[5,3,4]]]]]],[[1,[0,[5,3,4]],[0,[2,3,4,5]]],[[22,[[0,[5,3,4]]]]]],[[1,[0,[2,3,5,4]]]],[[1,[0,[2,3,5,4]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[],14],[[],15],[[],16],[[],[[23,[13]]]],[24,14],[24,15],[24,16],[2,[[0,[2]]]],[2,[[0,[2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[9,6],[[13,13],6],[1,10],[1,10],[[[0,[2,3,5]]],[[0,[[0,[2,3,5]]]]]],[[[0,[2,3,5]]],[[0,[[0,[2,3,5]]]]]],[1,10],[1,10],[[1,[0,[2,3,4,5]]],10],[[1,[0,[2,3,4,5]]],10],[[1,[0,[2,3,4,5]]],10],[[1,[0,[2,3,4,5]]],10],[1,10],[1,10],[[1,[0,[2,3,4,5]]],10],[[1,[0,[2,3,4,5]]],10],[[1,[0,[2,3,4,5]]],10],[[1,[0,[2,3,4,5]]],10],[25,9],[[],8],[[],1],[[],13],[[],10],[[1,7],10],[[1,7],10],[[8,7],8],[[8,[0,[26,3,4]]],8],[[8,[0,[26,3,4]]],8],[[1,7,[0,[26,3,4]]],[[22,[3]]]],[[1,7,[0,[26,3,4]]],[[22,[3]]]],[[1,7,[0,[26,3,4]]],[[22,[3]]]],[[1,7,[0,[26,3,4]]],[[22,[3]]]],[[1,[10,[7]],[0,[26,3,4]]],[[22,[3]]]],[[1,[10,[7]],[0,[26,3,4]]],[[22,[3]]]],[[1,[10,[7]],[0,[26,3,4]]],[[22,[3]]]],[[1,[10,[7]],[0,[26,3,4]]],[[22,[3]]]],[[1,[0,[2,3,4,5]]]],[[1,[0,[2,3,4,5]]]],[[[27,[9]],28],29],[[1,[0,[2,3,4,5]]],[[10,[7]]]],[[1,[0,[2,3,4,5]]],[[10,[7]]]],0,[1,[[30,[[0,[30,3]]]]]],[1,[[30,[[0,[30,3]]]]]],[[1,24],[[22,[3]]]],[[1,6,[10,[13]],24],[[22,[3]]]],[[]],[[]],[[1,[0,[31,3]]],[[9,[3]]]],[[[17,[3]],[0,[31,3]]]],[[13,[0,[31,3]]],[[25,[3]]]],[[1,31],9],[[[17,[3]],[0,[31,3]]]],[[[17,[3]],[0,[31,3]]]],[[8,7],8],[1,[[32,[[0,[32,3]]]]]],[1,[[32,[[0,[32,3]]]]]],[[8,33],8],[1,7],[21],[[]],[13,[[10,[21]]]],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[27,28],29],[21,6],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[1,24]]],"c":[],"p":[[3,"TaskPool"],[8,"FnMut"],[8,"Send"],[8,"Sync"],[8,"Clone"],[15,"bool"],[15,"usize"],[3,"TaskPoolBuilder"],[3,"Task"],[4,"Option"],[8,"ParallelIterator"],[8,"FromIterator"],[3,"ThreadExecutor"],[3,"ComputeTaskPool"],[3,"AsyncComputeTaskPool"],[3,"IoTaskPool"],[3,"Scope"],[8,"Debug"],[3,"Formatter"],[6,"Result"],[3,"ThreadExecutorTicker"],[3,"Vec"],[3,"Arc"],[8,"FnOnce"],[3,"Task"],[8,"Fn"],[3,"Pin"],[3,"Context"],[4,"Poll"],[8,"Product"],[8,"Future"],[8,"Sum"],[3,"String"],[4,"Result"],[3,"TypeId"],[8,"ParallelSlice"],[8,"ParallelSliceMut"]]},\
"bevy_utils":{"doc":"General utilities for first-party Bevy engine crates.","t":"DGDGDDGGDGSSSSSSSSDDDGIDSGGDSLLOLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLOOLLLOLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALKLFLLLLLLLLLLCLLLLLLLLLLLLLLALLLLLLLLLLLLLLLCALLLLLLLLLLLLLAACLLLLLLLLLLLCLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFIIKKKKCCDLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["AHasher","BoxedFuture","Duration","Entry","FixedState","FloatOrd","HashMap","HashSet","Hashed","Instant","MAX","MICROSECOND","MILLISECOND","NAMESPACE_DNS","NAMESPACE_OID","NAMESPACE_URL","NAMESPACE_X500","NANOSECOND","OnDrop","PassHash","PassHasher","PreHashMap","PreHashMapExt","RandomState","SECOND","StableHashMap","StableHashSet","Uuid","ZERO","add","add_assign","all_tuples","as_any","as_any","as_any","as_any","as_braced","as_bytes","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_fields","as_hyphenated","as_micros","as_millis","as_nanos","as_ref","as_secs","as_secs_f32","as_secs_f64","as_simple","as_u128","as_u64_pair","as_urn","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","braced","build_hasher","build_hasher","build_hasher","checked_add","checked_div","checked_mul","checked_sub","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","default","default","default","default","default","default","default","default","define_boxed_label","define_label","deref","deserialize","deserialize","detailed_trace","div","div_assign","div_duration_f32","div_duration_f64","div_f32","div_f64","drop","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_hash","dyn_hash","dyn_hash","dyn_hash","encode_buffer","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","finish","finish","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes_le","from_bytes_ref","from_fields","from_fields_le","from_micros","from_millis","from_nanos","from_secs","from_secs_f32","from_secs_f64","from_slice","from_slice_le","from_str","from_u128","from_u128_le","from_u64_pair","futures","generate_with","get_or_insert_with","get_or_insert_with","get_short_name","get_timestamp","get_variant","get_version","get_version_num","hash","hash","hash","hash","hash","hash_one","hashbrown","hyphenated","into","into","into","into","into","into","into","into","into","into","into_bytes","is_nil","is_zero","label","mul","mul_assign","mul_f32","mul_f64","neg","new","new","new","new","new_v4","nil","parse_str","partial_cmp","partial_cmp","partial_cmp","petgraph","prelude","saturating_add","saturating_mul","saturating_sub","serialize","serialize","simple","sub","sub_assign","subsec_micros","subsec_millis","subsec_nanos","sum","sum","synccell","syncunsafecell","thiserror","to_bytes_le","to_fields_le","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_u128_le","tracing","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_secs_f32","try_from_secs_f64","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_parse","try_parse_ascii","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","urn","with_seed","with_seeds","write","write","write_u128","write_u16","write_u32","write_u64","write_u64","write_u8","write_usize","now_or_never","DynEq","DynHash","as_any","as_dyn_eq","dyn_eq","dyn_hash","default","default","SyncCell","borrow","borrow_mut","from","from_mut","get","into","new","read","to_inner","try_from","try_into","type_id","SyncUnsafeCell","UnsafeCell","as_slice_of_cells","borrow","borrow","borrow_mut","borrow_mut","default","default","fmt","from","from","from","from","from","from","from_mut","from_mut","get","get","get_mut","get_mut","into","into","into_inner","into_inner","new","new","raw_get","raw_get","try_from","try_from","try_into","try_into","type_id","type_id"],"q":[[0,"bevy_utils"],[313,"bevy_utils::futures"],[314,"bevy_utils::label"],[320,"bevy_utils::prelude"],[322,"bevy_utils::synccell"],[335,"bevy_utils::syncunsafecell"]],"d":["A <code>Hasher</code> for hashing an arbitrary stream of bytes.","An owned and dynamically typed Future used when you can’…","A <code>Duration</code> type to represent a span of time, typically …","A shortcut alias for <code>hashbrown::hash_map::Entry</code>.","A hasher builder that will create a fixed hasher.","A wrapper for floats that implements <code>Ord</code>, <code>Eq</code>, and <code>Hash</code> …","A <code>HashMap</code> implementing aHash, a high speed keyed hashing …","A <code>HashSet</code> implementing aHash, a high speed keyed hashing …","A pre-hashed value of a specific type. Pre-hashing enables …","","The maximum duration.","The duration of one microsecond.","The duration of one millisecond.","UUID namespace for Domain Name System (DNS).","UUID namespace for ISO Object Identifiers (OIDs).","UUID namespace for Uniform Resource Locators (URLs).","UUID namespace for X.500 Distinguished Names (DNs).","The duration of one nanosecond.","A type which calls a function when dropped. This can be …","A <code>BuildHasher</code> that results in a <code>PassHasher</code>.","A no-op hash that only works on <code>u64</code>s. Will panic if …","A <code>HashMap</code> pre-configured to use <code>Hashed</code> keys and <code>PassHash</code> …","Extension methods intended to add functionality to …","Provides a Hasher factory. This is typically used (e.g. by …","The duration of one second.","A stable hash map implementing aHash, a high speed keyed …","A stable hash set implementing aHash, a high speed keyed …","A Universally Unique Identifier (UUID).","A duration of zero time.","","","Helper macro to generate tuple pyramids. Useful to …","","","","","Get a borrowed <code>Braced</code> formatter.","Returns a slice of 16 octets containing the value.","","","","","Returns the four field values of the UUID.","Get a borrowed <code>Hyphenated</code> formatter.","Returns the total number of whole microseconds contained …","Returns the total number of whole milliseconds contained …","Returns the total number of nanoseconds contained by this …","","Returns the number of <em>whole</em> seconds contained by this …","Returns the number of seconds contained by this <code>Duration</code> …","Returns the number of seconds contained by this <code>Duration</code> …","Get a borrowed <code>Simple</code> formatter.","Returns a 128bit value containing the value.","Returns two 64bit values containing the value.","Get a borrowed <code>Urn</code> formatter.","","","","","","","","","","","","","","","","","","","","","Get a <code>Braced</code> formatter.","","","Constructs a new AHasher with keys based on this …","Checked <code>Duration</code> addition. Computes <code>self + other</code>, …","Checked <code>Duration</code> division. Computes <code>self / other</code>, …","Checked <code>Duration</code> multiplication. Computes <code>self * other</code>, …","Checked <code>Duration</code> subtraction. Computes <code>self - other</code>, …","","","","","","","","","","","","","","","","","","An ergonomic abbreviation for <code>Default::default()</code> to make …","","","","","Constructs a new AHasher with fixed keys. If <code>std</code> is …","","","Macro to define a new label trait","Macro to define a new label trait","","","","Like <code>tracing::trace</code>, but conditional on cargo feature …","","","Divide <code>Duration</code> by <code>Duration</code> and return <code>f32</code>.","Divide <code>Duration</code> by <code>Duration</code> and return <code>f64</code>.","Divide <code>Duration</code> by <code>f32</code>.","Divide <code>Duration</code> by <code>f64</code>.","","","","","","","","","","A buffer that can be used for <code>encode_...</code> calls, that is …","A fast impl of <code>PartialEq</code> that first checks that <code>other</code>’s …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates a UUID using the supplied bytes.","Creates a UUID using the supplied bytes in little endian …","Creates a reference to a UUID from a reference to the …","Creates a UUID from four field values.","Creates a UUID from four field values in little-endian …","Creates a new <code>Duration</code> from the specified number of …","Creates a new <code>Duration</code> from the specified number of …","Creates a new <code>Duration</code> from the specified number of …","Creates a new <code>Duration</code> from the specified number of whole …","Creates a new <code>Duration</code> from the specified number of …","Creates a new <code>Duration</code> from the specified number of …","Creates a UUID using the supplied bytes.","Creates a UUID using the supplied bytes in little endian …","","Creates a UUID from a 128bit value.","Creates a UUID from a 128bit value in little-endian order.","Creates a UUID from two 64bit values.","Utilities for working with <code>Future</code>s.","Create a new <code>RandomState</code> <code>BuildHasher</code> based on the provided …","Tries to get or insert the value for the given <code>key</code> using …","","Shortens a type name to remove all module paths.","If the UUID is the correct version (v1, v6, or v7) this …","Returns the variant of the UUID structure.","Returns the version of the UUID.","Returns the version number of the UUID.","The pre-computed hash.","","","","","Calculates the hash of a single value. This provides a …","","Get a <code>Hyphenated</code> formatter.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consumes self and returns the underlying byte value of the …","Tests if the UUID is nil (all zeros).","Returns true if this <code>Duration</code> spans no time.","Traits used by label implementations","","","Multiplies <code>Duration</code> by <code>f32</code>.","Multiplies <code>Duration</code> by <code>f64</code>.","","Pre-hashes the given value using the <code>BuildHasher</code> …","Returns an object that will invoke the specified callback …","Create a new <code>RandomState</code> <code>BuildHasher</code> using random keys.","Creates a new <code>Duration</code> from the specified number of whole …","Creates a random UUID.","The ‘nil UUID’ (all zeros).","Parses a <code>Uuid</code> from a string of hexadecimal digits with …","","","","","","Saturating <code>Duration</code> addition. Computes <code>self + other</code>, …","Saturating <code>Duration</code> multiplication. Computes <code>self * other</code>, …","Saturating <code>Duration</code> subtraction. Computes <code>self - other</code>, …","","","Get a <code>Simple</code> formatter.","","","Returns the fractional part of this <code>Duration</code>, in whole …","Returns the fractional part of this <code>Duration</code>, in whole …","Returns the fractional part of this <code>Duration</code>, in …","","","A reimplementation of the currently unstable …","A reimplementation of the currently unstable …","","Returns the bytes of the UUID in little-endian order.","Returns the four field values of the UUID in little-endian …","","","","","","","","","Returns a 128bit little-endian value containing the value.","","","","","","","","","","","","","The checked version of <code>from_secs_f32</code>.","The checked version of <code>from_secs_f64</code>.","","","","","","","","","","","Parses a <code>Uuid</code> from a string of hexadecimal digits with …","Parses a <code>Uuid</code> from a string of hexadecimal digits with …","","","","","","","","","","","Get a <code>Urn</code> formatter.","Build a <code>RandomState</code> from a single key. The provided key …","Allows for explicitly setting the seeds to used. All …","","","","","","","","","","Consumes the future, polls it once, and immediately …","An object safe version of <code>Eq</code>. This trait is automatically …","An object safe version of <code>Hash</code>. This trait is …","Casts the type to <code>dyn Any</code>.","Casts the type to <code>dyn Any</code>.","This method tests for <code>self</code> and <code>other</code> values to be equal.","Feeds this value into the given <code>Hasher</code>.","","","See <code>Exclusive</code> for stdlib’s upcoming implementation, …","","","Returns the argument unchanged.","Build a mutable reference to a <code>SyncCell</code> from a mutable …","Get a reference to this <code>SyncCell</code>’s inner value.","Calls <code>U::from(self)</code>.","Construct a new instance of a <code>SyncCell</code> from the given …","For types that implement <code>Sync</code>, get shared access to this …","Deconstruct this <code>SyncCell</code> into its inner value.","","","","<code>UnsafeCell</code>, but <code>Sync</code>.","The core primitive for interior mutability in Rust.","Returns a <code>&amp;[SyncUnsafeCell&lt;T&gt;]</code> from a <code>&amp;SyncUnsafeCell&lt;[T]&gt;</code>.","","","","","Creates an <code>SyncUnsafeCell</code>, with the <code>Default</code> value for T.","Creates an <code>UnsafeCell</code>, with the <code>Default</code> value for T.","","","Returns the argument unchanged.","Creates a new <code>SyncUnsafeCell&lt;T&gt;</code> containing the given value.","Returns the argument unchanged.","Creates a new <code>UnsafeCell&lt;T&gt;</code> containing the given value.","","Returns a <code>&amp;mut SyncUnsafeCell&lt;T&gt;</code> from a <code>&amp;mut T</code>.","Converts from <code>&amp;mut T</code> to <code>&amp;mut UnsafeCell&lt;T&gt;</code>.","Gets a mutable pointer to the wrapped value.","Gets a mutable pointer to the wrapped value.","Returns a mutable reference to the underlying data.","Returns a mutable reference to the underlying data.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Unwraps the value.","Unwraps the value, consuming the cell.","Constructs a new instance of <code>SyncUnsafeCell</code> which will …","Constructs a new instance of <code>UnsafeCell</code> which will wrap …","Gets a mutable pointer to the wrapped value.","Gets a mutable pointer to the wrapped value. The …","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,1,1,1,3,3,3,3,1,0,0,0,0,0,0,1,0,0,0,1,1,1,0,23,24,3,1,3,3,23,24,3,1,3,3,1,1,1,3,1,1,1,3,3,3,3,23,31,24,16,18,27,3,17,19,1,23,31,24,16,18,27,3,17,19,1,3,16,18,19,1,1,1,1,23,24,16,3,17,19,1,23,24,16,3,17,19,1,24,3,1,0,16,18,27,3,17,19,1,0,0,23,3,1,0,1,1,1,1,1,1,31,23,24,3,1,23,24,3,1,3,23,24,3,1,23,23,23,24,24,24,3,3,3,1,1,1,27,17,23,24,16,27,3,3,3,3,17,19,1,23,31,24,16,18,27,3,3,3,3,3,17,19,1,3,3,3,3,3,1,1,1,1,1,1,3,3,3,3,3,3,0,19,62,44,0,3,3,3,3,23,23,24,3,1,19,0,3,23,31,24,16,18,27,3,17,19,1,3,3,1,0,1,1,1,1,24,23,31,19,1,3,3,3,24,3,1,0,0,1,1,1,3,1,3,1,1,1,1,1,1,1,0,0,0,3,3,23,24,16,3,17,19,1,3,3,0,23,31,24,16,18,27,3,3,17,19,1,1,1,23,31,24,16,18,27,3,17,19,1,3,3,23,31,24,16,18,27,3,17,19,1,3,19,19,27,17,17,17,17,27,17,17,17,0,0,0,7,63,7,63,0,0,0,57,57,57,57,57,57,57,57,57,57,57,57,0,0,59,59,60,59,60,59,60,60,59,59,59,60,60,60,59,60,59,60,59,60,59,60,59,60,59,60,59,60,59,60,59,60,59,60],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,1],1],[[1,1]],0,[[],2],[[],2],[[],2],[[],2],[3,4],[3,[[6,[5]]]],[[],7],[[],7],[[],7],[[],7],[3],[3,8],[1,9],[1,9],[1,9],[3,[[10,[5]]]],[1,11],[1,12],[1,13],[3,14],[3,9],[3],[3,15],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[3,4],[16,17],[18],[19,17],[[1,1],[[20,[1]]]],[[1,21],[[20,[1]]]],[[1,21],[[20,[1]]]],[[1,1],[[20,[1]]]],[[[23,[22]]],[[23,[22]]]],[24,24],[16,16],[3,3],[17,17],[19,19],[1,1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[24,24],25],[[3,3],25],[[1,1],25],[[],26],[[],16],[[],18],[[],27],[[],3],[[],17],[[],19],[[],1],0,0,[23],[28,[[29,[3]]]],[28,[[29,[1]]]],0,[[1,21],1],[[1,21]],[[1,1],12],[[1,1],13],[[1,12],1],[[1,13],1],[[[31,[30]]]],[7,32],[7,32],[7,32],[7,32],[33],[33],[33],[33],[[],[[6,[5]]]],[[[23,[34]],[23,[34]]],32],[[24,24],32],[[3,3],32],[[1,1],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[27,11],[17,11],[[[23,[35]],36],37],[[24,36],37],[[16,36],37],[[27,36],37],[[3,36],[[29,[38]]]],[[3,36],[[29,[38]]]],[[3,36],[[29,[38]]]],[[3,36],[[29,[38]]]],[[17,36],[[29,[38]]]],[[19,36],[[29,[38]]]],[[1,36],[[29,[38]]]],[[]],[[]],[[]],[[]],[[]],[[]],[15,3],[4,3],[[]],[8,3],[14,3],[[]],[[]],[[]],[[[6,[5]]],3],[[[6,[5]]],3],[[[6,[5]]],3],[[21,39,39,[6,[5]]],3],[[21,39,39,[6,[5]]],3],[11,1],[11,1],[11,1],[11,1],[12,1],[13,1],[[[10,[5]]],[[29,[3,40]]]],[[[10,[5]]],[[29,[3,40]]]],[41,[[29,[3]]]],[9,3],[9,3],[[11,11],3],0,[[11,11,11,11],19],[[23,30]],[[[44,[[0,[42,43,34,22]]]],[23,[[0,[42,43,34,22]]]],30]],[41,45],[3,[[20,[46]]]],[3,47],[3,[[20,[48]]]],[3,49],[[[23,[42,[0,[50,26]]]]],11],[[23,33]],[[24,33]],[[3,33]],[[1,33]],[[19,42],11],0,[3,8],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[3,[[6,[5]]]],[3,32],[1,32],0,[[1,21],1],[[1,21]],[[1,12],1],[[1,13],1],[24],[42,[[23,[42,[0,[50,26]]]]]],[30,[[31,[30]]]],[[],19],[[11,21],1],[[],3],[[],3],[41,[[29,[3,40]]]],[[24,24],[[20,[25]]]],[[3,3],[[20,[25]]]],[[1,1],[[20,[25]]]],0,0,[[1,1],1],[[1,21],1],[[1,1],1],[[3,51],29],[[1,51],29],[3,14],[[1,1],1],[[1,1]],[1,21],[1,21],[1,21],[52,1],[52,1],0,0,0,[3,[[6,[5]]]],[3],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],45],[3,9],0,[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[41,[[29,[3]]]],[[],29],[[],29],[[],29],[12,[[29,[1,53]]]],[13,[[29,[1,53]]]],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[41,[[29,[3,40]]]],[[[10,[5]]],[[29,[3,40]]]],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[3,15],[49,19],[[11,11,11,11],19],[[27,[10,[5]]]],[[17,[10,[5]]]],[[17,9]],[[17,39]],[[17,21]],[[27,11]],[[17,11]],[[17,5]],[[17,49]],[55,20],0,0,[[],2],[[],7],[7,32],[33],0,0,0,[[]],[[]],[[]],[56,[[57,[56]]]],[[[57,[56]]],56],[[]],[56,[[57,[56]]]],[[[57,[58,56]]],[58,56]],[[[57,[56]]],56],[[],29],[[],29],[[],54],0,0,[[[59,[10]]],[[10,[59]]]],[[]],[[]],[[]],[[]],[[],[[59,[26]]]],[[],[[60,[26]]]],[[[60,[56]],36],[[29,[38]]]],[61],[[]],[[],59],[[]],[[],60],[61],[56,[[59,[56]]]],[56,[[60,[56]]]],[[[59,[56]]]],[[[60,[56]]]],[[[59,[56]]],56],[[[60,[56]]],56],[[]],[[]],[59],[60],[[],59],[[],60],[[]],[60],[[],29],[[],29],[[],29],[[],29],[[],54],[[],54]],"c":[],"p":[[3,"Duration"],[8,"Any"],[3,"Uuid"],[3,"Braced"],[15,"u8"],[15,"array"],[8,"DynEq"],[3,"Hyphenated"],[15,"u128"],[15,"slice"],[15,"u64"],[15,"f32"],[15,"f64"],[3,"Simple"],[3,"Urn"],[3,"FixedState"],[3,"AHasher"],[3,"PassHash"],[3,"RandomState"],[4,"Option"],[15,"u32"],[8,"Clone"],[3,"Hashed"],[3,"FloatOrd"],[4,"Ordering"],[8,"Default"],[3,"PassHasher"],[8,"Deserializer"],[4,"Result"],[8,"FnOnce"],[3,"OnDrop"],[15,"bool"],[8,"Hasher"],[8,"PartialEq"],[8,"Debug"],[3,"Formatter"],[6,"Result"],[3,"Error"],[15,"u16"],[3,"Error"],[15,"str"],[8,"Hash"],[8,"Eq"],[6,"PreHashMap"],[3,"String"],[3,"Timestamp"],[4,"Variant"],[4,"Version"],[15,"usize"],[8,"BuildHasher"],[8,"Serializer"],[8,"Iterator"],[3,"TryFromFloatSecsError"],[3,"TypeId"],[8,"Future"],[8,"Sized"],[3,"SyncCell"],[8,"Sync"],[3,"SyncUnsafeCell"],[3,"UnsafeCell"],[15,"never"],[8,"PreHashMapExt"],[8,"DynHash"]]},\
"bevy_utils_proc_macros":{"doc":"","t":"O","n":["all_tuples"],"q":[[0,"bevy_utils_proc_macros"]],"d":["Helper macro to generate tuple pyramids. Useful to …"],"i":[0],"f":[0],"c":[],"p":[]},\
"bit_set":{"doc":"An implementation of a set using a bit vector as an …","t":"DDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["BitSet","Difference","Intersection","Iter","SymmetricDifference","Union","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capacity","clear","clone","clone","clone","clone","clone","clone","clone_from","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","contains","default","difference","difference_with","eq","equivalent","extend","fmt","from","from","from","from","from","from","from_bit_vec","from_bytes","from_iter","get_ref","hash","insert","intersect_with","intersection","into","into","into","into","into","into","into_bit_vec","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","is_disjoint","is_empty","is_subset","is_superset","iter","len","new","next","next","next","next","next","partial_cmp","remove","reserve_len","reserve_len_exact","shrink_to_fit","size_hint","size_hint","size_hint","size_hint","size_hint","symmetric_difference","symmetric_difference_with","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","union","union_with","with_capacity"],"q":[[0,"bit_set"]],"d":["","","","An iterator for <code>BitSet</code>.","","","","","","","","","","","","","","","Returns the capacity in bits for this bit vector. …","Clears all bits in this set","","","","","","","","","","","","","","","Returns <code>true</code> if this set contains the specified integer.","","Iterator over each usize stored in the <code>self</code> setminus <code>other</code>.","Makes this bit vector the difference with the specified …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates a new <code>BitSet</code> from the given bit vector.","","","Returns a reference to the underlying bit vector.","","Adds a value to the set. Returns <code>true</code> if the value was not …","Intersects in-place with the specified other bit vector.","Iterator over each usize stored in <code>self</code> intersect <code>other</code>. …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consumes this set to return the underlying bit vector.","","","","","","","Returns <code>true</code> if the set has no elements in common with …","Returns whether there are no bits set in this set","Returns <code>true</code> if the set is a subset of another.","Returns <code>true</code> if the set is a superset of another.","Iterator over each usize stored in the <code>BitSet</code>.","Returns the number of set bits in this set.","Creates a new empty <code>BitSet</code>.","","","","","","","Removes a value from the set. Returns <code>true</code> if the value was","Reserves capacity for the given <code>BitSet</code> to contain <code>len</code> …","Reserves the minimum capacity for the given <code>BitSet</code> to …","Truncates the underlying vector to the least length …","","","","","","Iterator over each usize stored in the symmetric …","Makes this bit vector the symmetric difference with the …","","","","","","","","","","","","","","","","","","","","","","","","","Iterator over each usize stored in <code>self</code> union <code>other</code>. See …","Unions in-place with the specified other bit vector.","Creates a new <code>BitSet</code> with initially no contents, able to …"],"i":[0,0,0,0,0,0,2,5,6,7,8,9,2,5,6,7,8,9,2,2,2,5,6,7,8,9,2,2,5,6,7,8,9,2,2,2,2,2,2,2,2,2,2,5,6,7,8,9,2,2,2,2,2,2,2,2,2,5,6,7,8,9,2,2,5,6,7,8,9,2,2,2,2,2,2,2,5,6,7,8,9,2,2,2,2,2,5,6,7,8,9,2,2,2,5,6,7,8,9,2,5,6,7,8,9,2,5,6,7,8,9,2,5,6,7,8,9,2,2,2],"f":[0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[2,[1]]],3],[[[2,[1]]]],[[[2,[1]]],[[2,[1]]]],[[[5,[4]]],[[5,[4]]]],[[[6,[4]]],[[6,[4]]]],[[[7,[4]]],[[7,[4]]]],[[[8,[4]]],[[8,[4]]]],[[[9,[4]]],[[9,[4]]]],[[[2,[1]],[2,[1]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[[2,[1]],[2,[1]]],10],[[[2,[1]],3],11],[[],[[2,[1]]]],[[[2,[1]],[2,[1]]],[[8,[1]]]],[[[2,[1]],[2,[1]]]],[[[2,[1]],[2,[1]]],11],[[],11],[[[2,[1]],12]],[[[2,[1]],13],14],[[]],[[]],[[]],[[]],[[]],[[]],[15,[[2,[16]]]],[[[18,[17]]],[[2,[16]]]],[12,[[2,[1]]]],[[[2,[1]]],[[15,[1]]]],[[[2,[1]],19]],[[[2,[1]],3],11],[[[2,[1]],[2,[1]]]],[[[2,[1]],[2,[1]]],[[7,[1]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[[2,[1]]],[[15,[1]]]],[[[2,[1]]],[[5,[1]]]],[[]],[[]],[[]],[[]],[[]],[[[2,[1]],[2,[1]]],11],[[[2,[1]]],11],[[[2,[1]],[2,[1]]],11],[[[2,[1]],[2,[1]]],11],[[[2,[1]]],[[5,[1]]]],[[[2,[1]]],3],[[],[[2,[16]]]],[[[5,[1]]],[[20,[3]]]],[[[6,[1]]],[[20,[3]]]],[[[7,[1]]],[[20,[3]]]],[[[8,[1]]],[[20,[3]]]],[[[9,[1]]],[[20,[3]]]],[[[2,[1]],[2,[1]]],[[20,[10]]]],[[[2,[1]],3],11],[[[2,[1]],3]],[[[2,[1]],3]],[[[2,[1]]]],[[[5,[1]]]],[[[6,[1]]]],[[[7,[1]]]],[[[8,[1]]]],[[[9,[1]]]],[[[2,[1]],[2,[1]]],[[9,[1]]]],[[[2,[1]],[2,[1]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[[2,[1]],[2,[1]]],[[6,[1]]]],[[[2,[1]],[2,[1]]]],[3,[[2,[16]]]]],"c":[],"p":[[8,"BitBlock"],[3,"BitSet"],[15,"usize"],[8,"Clone"],[3,"Iter"],[3,"Union"],[3,"Intersection"],[3,"Difference"],[3,"SymmetricDifference"],[4,"Ordering"],[15,"bool"],[8,"IntoIterator"],[3,"Formatter"],[6,"Result"],[3,"BitVec"],[15,"u32"],[15,"u8"],[15,"slice"],[8,"Hasher"],[4,"Option"],[4,"Result"],[3,"TypeId"]]},\
"bit_vec":{"doc":"Collections implemented with bit vectors.","t":"IDDDDLLLLKLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLK","n":["BitBlock","BitVec","Blocks","IntoIter","Iter","all","and","any","append","bits","blocks","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bytes","capacity","clear","clone","clone","clone","clone_from","clone_into","clone_into","clone_into","cmp","count_ones","default","difference","eq","eq_vec","equivalent","extend","fmt","from","from","from","from","from_byte","from_bytes","from_elem","from_fn","from_iter","get","grow","hash","index","intersect","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","is_empty","iter","len","nand","negate","new","next","next","next","next_back","next_back","next_back","none","nor","one","or","partial_cmp","pop","push","reserve","reserve_exact","set","set_all","set_len","shrink_to_fit","size_hint","size_hint","split_off","storage","storage_mut","to_bytes","to_owned","to_owned","to_owned","truncate","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","union","with_capacity","xnor","xor","zero"],"q":[[0,"bit_vec"]],"d":["Abstracts over a pile of bits (basically unsigned …","The bitvector type.","An iterator over the blocks of a <code>BitVec</code>.","","An iterator for <code>BitVec</code>.","Returns <code>true</code> if all bits are 1.","Calculates the bitwise <code>and</code> of two bitvectors.","Returns <code>true</code> if any bit is 1.","Moves all bits from <code>other</code> into <code>Self</code>, leaving <code>other</code> empty.","How many bits it has","Iterator over the underlying blocks of data","","","","","","","","","How many bytes it has","Returns the capacity in bits for this bit vector. …","Clears all bits in this vector.","","","","","","","","","Count the number of 1’s in the bitwise repr","","Calculates the difference between two bitvectors.","","Compares a <code>BitVec</code> to a slice of <code>bool</code>s. Both the <code>BitVec</code> and …","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert a byte into this type (lowest-order bits set)","Transforms a byte-vector into a <code>BitVec</code>. Each byte becomes …","Creates a <code>BitVec</code> that holds <code>nbits</code> elements, setting each …","Creates a <code>BitVec</code> of the specified length where the value …","","Retrieves the value at index <code>i</code>, or <code>None</code> if the index is …","Grows the <code>BitVec</code> in-place, adding <code>n</code> copies of <code>value</code> to the …","","","Calculates the intersection of two bitvectors. This acts …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Returns true if there are no bits in this vector","Returns an iterator over the elements of the vector in …","Returns the total number of bits in this vector","Calculates the nand of two bitvectors.","Flips all bits.","Creates an empty <code>BitVec</code>.","","","","","","","Returns <code>true</code> if all bits are 0.","Calculates the nor of two bitvectors.","Get <code>1</code>","Calculates the bitwise <code>or</code> of two bitvectors.","","Removes the last bit from the BitVec, and returns it. …","Pushes a <code>bool</code> onto the end.","Reserves capacity for at least <code>additional</code> more bits to be …","Reserves the minimum capacity for exactly <code>additional</code> more …","Sets the value of a bit at an index <code>i</code>.","Sets all bits to 1.","Sets the number of bits that this BitVec considers …","Shrinks the capacity of the underlying storage as much as …","","","Splits the <code>BitVec</code> into two at the given bit, retaining the …","Exposes the raw block storage of this BitVec","Exposes the raw block storage of this BitVec","Organises the bits into bytes, such that the first bit in …","","","","Shortens a <code>BitVec</code>, dropping excess elements.","","","","","","","","","","","","","Calculates the union of two bitvectors. This acts like the …","Constructs a new, empty <code>BitVec</code> with the specified capacity.","Calculates the xnor of two bitvectors.","Calculates the xor of two bitvectors.","Get <code>0</code>"],"i":[0,0,0,0,0,2,2,2,2,1,2,2,18,7,5,2,18,7,5,1,2,2,2,7,5,2,2,7,5,2,1,2,2,2,2,2,2,2,2,18,7,5,1,2,2,2,2,2,2,2,2,2,2,18,7,5,2,2,18,7,5,2,2,2,2,2,2,18,7,5,18,7,5,2,2,1,2,2,2,2,2,2,2,2,2,2,7,5,2,2,2,2,2,7,5,2,2,18,7,5,2,18,7,5,2,18,7,5,2,2,2,2,1],"f":[0,0,0,0,0,[[[2,[1]]],3],[[[2,[1]],[2,[1]]],3],[[[2,[1]]],3],[[[2,[1]],[2,[1]]]],[[],4],[[[2,[1]]],[[5,[1]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],4],[[[2,[1]]],4],[[[2,[1]]]],[[[2,[1]]],[[2,[1]]]],[[[7,[6]]],[[7,[6]]]],[[[5,[6]]],[[5,[6]]]],[[[2,[1]],[2,[1]]]],[[]],[[]],[[]],[[[2,[1]],[2,[1]]],8],[[],4],[[],[[2,[1]]]],[[[2,[1]],[2,[1]]],3],[[[2,[1]],[2,[1]]],3],[[[2,[1]],[9,[3]]],3],[[],3],[[[2,[1]],10]],[[[2,[1]],11],12],[[]],[[]],[[]],[[]],[13],[[[9,[13]]],[[2,[14]]]],[[4,3],[[2,[14]]]],[[4,15],[[2,[14]]]],[10,[[2,[1]]]],[[[2,[1]],4],[[16,[3]]]],[[[2,[1]],4,3]],[[[2,[1]],17]],[[[2,[1]],4],3],[[[2,[1]],[2,[1]]],3],[[]],[[]],[[]],[[]],[[[2,[1]]],[[18,[1]]]],[[[2,[1]]],[[7,[1]]]],[[]],[[]],[[]],[[[2,[1]]],3],[[[2,[1]]],[[7,[1]]]],[[[2,[1]]],4],[[[2,[1]],[2,[1]]],3],[[[2,[1]]]],[[],[[2,[14]]]],[[[18,[1]]],[[16,[3]]]],[[[7,[1]]],[[16,[3]]]],[[[5,[1]]],[[16,[1]]]],[[[18,[1]]],[[16,[3]]]],[[[7,[1]]],[[16,[3]]]],[[[5,[1]]],[[16,[1]]]],[[[2,[1]]],3],[[[2,[1]],[2,[1]]],3],[[]],[[[2,[1]],[2,[1]]],3],[[[2,[1]],[2,[1]]],[[16,[8]]]],[[[2,[1]]],[[16,[3]]]],[[[2,[1]],3]],[[[2,[1]],4]],[[[2,[1]],4]],[[[2,[1]],4,3]],[[[2,[1]]]],[[[2,[1]],4]],[[[2,[1]]]],[[[7,[1]]]],[[[5,[1]]]],[[[2,[1]],4],[[2,[1]]]],[[[2,[1]]],[[9,[1]]]],[[[2,[1]]],[[19,[1]]]],[[[2,[1]]],[[19,[13]]]],[[]],[[]],[[]],[[[2,[1]],4]],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],21],[[],21],[[],21],[[],21],[[[2,[1]],[2,[1]]],3],[4,[[2,[14]]]],[[[2,[1]],[2,[1]]],3],[[[2,[1]],[2,[1]]],3],[[]]],"c":[51,108],"p":[[8,"BitBlock"],[3,"BitVec"],[15,"bool"],[15,"usize"],[3,"Blocks"],[8,"Clone"],[3,"Iter"],[4,"Ordering"],[15,"slice"],[8,"IntoIterator"],[3,"Formatter"],[6,"Result"],[15,"u8"],[15,"u32"],[8,"FnMut"],[4,"Option"],[8,"Hasher"],[3,"IntoIter"],[3,"Vec"],[4,"Result"],[3,"TypeId"]]},\
"bitflags":{"doc":"A typesafe bitmask flag generator useful for sets of …","t":"O","n":["bitflags"],"q":[[0,"bitflags"]],"d":["The macro used to generate the flag structures."],"i":[0],"f":[0],"c":[],"p":[]},\
"bytemuck":{"doc":"This crate gives small utilities for casting between plain …","t":"NICIQSSINIEINNIIILLFFFFFFFALLLLLFFLLLLLLOOLLLLLLLLLLFFFFFFFFLFFLFLLLLLLLLLLLLLQIENNLLFFFFFLLLLLLFFLLKFFFFFFLFFLFL","n":["AlignmentMismatch","AnyBitPattern","CheckedBitPattern","Contiguous","Int","MAX_VALUE","MIN_VALUE","NoUninit","OutputSliceWouldHaveSlop","Pod","PodCastError","PodInOption","SizeMismatch","TargetAlignmentGreaterAndInputNotAligned","TransparentWrapper","Zeroable","ZeroableInOption","borrow","borrow_mut","bytes_of","bytes_of_mut","cast","cast_mut","cast_ref","cast_slice","cast_slice_mut","checked","clone","eq","fmt","fmt","from","from_bytes","from_bytes_mut","from_integer","from_integer","hash","into","into_integer","into_integer","offset_of","offset_of","peel","peel","peel_mut","peel_mut","peel_ref","peel_ref","peel_slice","peel_slice","peel_slice_mut","peel_slice_mut","pod_align_to","pod_align_to_mut","pod_read_unaligned","try_cast","try_cast_mut","try_cast_ref","try_cast_slice","try_cast_slice_mut","try_from","try_from_bytes","try_from_bytes_mut","try_into","try_pod_read_unaligned","type_id","wrap","wrap","wrap_mut","wrap_mut","wrap_ref","wrap_ref","wrap_slice","wrap_slice","wrap_slice_mut","wrap_slice_mut","zeroed","zeroed","Bits","CheckedBitPattern","CheckedCastError","InvalidBitPattern","PodCastError","borrow","borrow_mut","cast","cast_mut","cast_ref","cast_slice","cast_slice_mut","clone","eq","fmt","fmt","from","from","from_bytes","from_bytes_mut","hash","into","is_valid_bit_pattern","pod_read_unaligned","try_cast","try_cast_mut","try_cast_ref","try_cast_slice","try_cast_slice_mut","try_from","try_from_bytes","try_from_bytes_mut","try_into","try_pod_read_unaligned","type_id"],"q":[[0,"bytemuck"],[78,"bytemuck::checked"]],"d":["For this type of cast the alignments must be exactly the …","Marker trait for “plain old data” types that are valid …","","A trait indicating that:","The primitive integer type with an identical …","The upper <em>inclusive</em> bound for valid instances of this type.","The lower <em>inclusive</em> bound for valid instances of this type.","Marker trait for “plain old data” types with no uninit …","If the element size changes then the output slice changes …","Marker trait for “plain old data”.","The things that can go wrong when casting between <code>Pod</code> data …","Trait for types which are Pod when wrapped in Option.","When casting a slice you can’t convert between ZST …","You tried to cast a slice to an element type with a higher …","A trait which indicates that a type is a …","Trait for types that can be safely created with <code>zeroed</code>.","Trait for types which are Zeroable when wrapped in Option.","","","Re-interprets <code>&amp;T</code> as <code>&amp;[u8]</code>.","Re-interprets <code>&amp;mut T</code> as <code>&amp;mut [u8]</code>.","Cast <code>T</code> into <code>U</code>","Cast <code>&amp;mut T</code> into <code>&amp;mut U</code>.","Cast <code>&amp;T</code> into <code>&amp;U</code>.","Cast <code>&amp;[A]</code> into <code>&amp;[B]</code>.","Cast <code>&amp;mut [T]</code> into <code>&amp;mut [U]</code>.","Checked versions of the casting functions exposed in crate …","","","","","Returns the argument unchanged.","Re-interprets <code>&amp;[u8]</code> as <code>&amp;T</code>.","Re-interprets <code>&amp;mut [u8]</code> as <code>&amp;mut T</code>.","If <code>value</code> is within the range for valid instances of this …","If <code>value</code> is within the range for valid instances of this …","","Calls <code>U::from(self)</code>.","Perform the conversion from <code>C</code> into the underlying integral …","Perform the conversion from <code>C</code> into the underlying integral …","Find the offset in bytes of the given <code>$field</code> of <code>$Type</code>. …","Find the offset in bytes of the given <code>$field</code> of <code>$Type</code>. …","Convert the wrapper type into the inner type.","Convert the wrapper type into the inner type.","Convert a mutable reference to the wrapper type into a …","Convert a mutable reference to the wrapper type into a …","Convert a reference to the wrapper type into a reference …","Convert a reference to the wrapper type into a reference …","Convert a slice to the wrapped type into a slice to the …","Convert a slice to the wrapped type into a slice to the …","Convert a mutable slice to the wrapped type into a mutable …","Convert a mutable slice to the wrapped type into a mutable …","As <code>align_to</code>, but safe because of the <code>Pod</code> bound.","As <code>align_to_mut</code>, but safe because of the <code>Pod</code> bound.","Reads the slice into a <code>T</code> value.","Try to cast <code>T</code> into <code>U</code>.","Try to convert a <code>&amp;mut T</code> into <code>&amp;mut U</code>.","Try to convert a <code>&amp;T</code> into <code>&amp;U</code>.","Try to convert <code>&amp;[A]</code> into <code>&amp;[B]</code> (possibly with a change in …","Try to convert <code>&amp;mut [A]</code> into <code>&amp;mut [B]</code> (possibly with a …","","Re-interprets <code>&amp;[u8]</code> as <code>&amp;T</code>.","Re-interprets <code>&amp;mut [u8]</code> as <code>&amp;mut T</code>.","","Reads from the bytes as if they were a <code>T</code>.","","Convert the inner type into the wrapper type.","Convert the inner type into the wrapper type.","Convert a mutable reference to the inner type into a …","Convert a mutable reference to the inner type into a …","Convert a reference to the inner type into a reference to …","Convert a reference to the inner type into a reference to …","Convert a slice to the inner type into a slice to the …","Convert a slice to the inner type into a slice to the …","Convert a mutable slice to the inner type into a mutable …","Convert a mutable slice to the inner type into a mutable …","Calls <code>zeroed</code>.","Calls <code>zeroed</code>.","<code>Self</code> <em>must</em> have the same layout as the specified <code>Bits</code> …","A marker trait that allows types that have some invalid …","The things that can go wrong when casting between …","When casting to a <code>CheckedBitPattern</code> type, it is possible …","An error occurred during a true-<code>Pod</code> cast","","","Cast <code>T</code> into <code>U</code>","Cast <code>&amp;mut T</code> into <code>&amp;mut U</code>.","Cast <code>&amp;T</code> into <code>&amp;U</code>.","Cast <code>&amp;[A]</code> into <code>&amp;[B]</code>.","Cast <code>&amp;mut [T]</code> into <code>&amp;mut [U]</code>.","","","","","","Returns the argument unchanged.","Re-interprets <code>&amp;[u8]</code> as <code>&amp;T</code>.","Re-interprets <code>&amp;mut [u8]</code> as <code>&amp;mut T</code>.","","Calls <code>U::from(self)</code>.","If this function returns true, then it must be valid to …","Reads the slice into a <code>T</code> value.","Try to cast <code>T</code> into <code>U</code>.","Try to convert a <code>&amp;mut T</code> into <code>&amp;mut U</code>.","Try to convert a <code>&amp;T</code> into <code>&amp;U</code>.","Try to convert <code>&amp;[A]</code> into <code>&amp;[B]</code> (possibly with a change in …","Try to convert <code>&amp;mut [A]</code> into <code>&amp;mut [B]</code> (possibly with a …","","Re-interprets <code>&amp;[u8]</code> as <code>&amp;T</code>.","Re-interprets <code>&amp;mut [u8]</code> as <code>&amp;mut T</code>.","","Reads from the bytes as if they were a <code>T</code>.",""],"i":[5,0,0,0,16,16,16,0,5,0,0,0,5,5,0,0,0,5,5,0,0,0,0,0,0,0,0,5,5,5,5,5,0,0,16,16,5,5,16,16,0,0,17,17,17,17,17,17,17,17,17,17,0,0,0,0,0,0,0,0,5,0,0,5,0,5,17,17,17,17,17,17,17,17,17,17,18,18,14,0,0,15,15,15,15,0,0,0,0,0,15,15,15,15,15,15,0,0,15,15,14,0,0,0,0,0,0,15,0,0,15,0,15],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[1,[[3,[2]]]],[[[0,[1,4]]],[[3,[2]]]],[1,4],[[[0,[1,4]]],[[0,[1,4]]]],[1,4],[[[3,[1]]],[[3,[4]]]],[[[3,[[0,[1,4]]]]],[[3,[[0,[1,4]]]]]],0,[5,5],[[5,5],6],[[5,7],8],[[5,7],8],[[]],[[[3,[2]]],4],[[[3,[2]]],[[0,[1,4]]]],[[],9],[[],9],[[5,10]],[[]],[[]],[[]],0,0,[11,11],[11,11],[[]],[[]],[[]],[[]],[[[3,[11]]],[[3,[11]]]],[[[3,[11]]],[[3,[11]]]],[[[3,[11]]],[[3,[11]]]],[[[3,[11]]],[[3,[11]]]],[[[3,[1]]]],[[[3,[[0,[1,4]]]]]],[[[3,[2]]],4],[1,[[12,[4,5]]]],[[[0,[1,4]]],[[12,[[0,[1,4]],5]]]],[1,[[12,[4,5]]]],[[[3,[1]]],[[12,[[3,[4]],5]]]],[[[3,[[0,[1,4]]]]],[[12,[[3,[[0,[1,4]]]],5]]]],[[],12],[[[3,[2]]],[[12,[4,5]]]],[[[3,[2]]],[[12,[[0,[1,4]],5]]]],[[],12],[[[3,[2]]],[[12,[4,5]]]],[[],13],[11,11],[11,11],[[]],[[]],[[]],[[]],[[[3,[11]]],[[3,[11]]]],[[[3,[11]]],[[3,[11]]]],[[[3,[11]]],[[3,[11]]]],[[[3,[11]]],[[3,[11]]]],[[]],[[]],0,0,0,0,0,[[]],[[]],[1,14],[[[0,[1,4]]],[[0,[1,14]]]],[1,14],[[[3,[1]]],[[3,[14]]]],[[[3,[[0,[1,4]]]]],[[3,[[0,[1,14]]]]]],[15,15],[[15,15],6],[[15,7],8],[[15,7],8],[5,15],[[]],[[[3,[2]]],14],[[[3,[2]]],[[0,[1,14]]]],[[15,10]],[[]],[[],6],[[[3,[2]]],14],[1,[[12,[14,15]]]],[[[0,[1,4]]],[[12,[[0,[14,1]],15]]]],[1,[[12,[14,15]]]],[[[3,[1]]],[[12,[[3,[14]],15]]]],[[[3,[[0,[1,4]]]]],[[12,[[3,[[0,[14,1]]]],15]]]],[[],12],[[[3,[2]]],[[12,[14,15]]]],[[[3,[2]]],[[12,[[0,[14,1]],15]]]],[[],12],[[[3,[2]]],[[12,[14,15]]]],[[],13]],"c":[],"p":[[8,"NoUninit"],[15,"u8"],[15,"slice"],[8,"AnyBitPattern"],[4,"PodCastError"],[15,"bool"],[3,"Formatter"],[6,"Result"],[4,"Option"],[8,"Hasher"],[8,"Sized"],[4,"Result"],[3,"TypeId"],[8,"CheckedBitPattern"],[4,"CheckedCastError"],[8,"Contiguous"],[8,"TransparentWrapper"],[8,"Zeroable"]]},\
"byteorder":{"doc":"This crate provides convenience methods for encoding and …","t":"GEIGEGGIILLLLLLLLLLLLLLLLLLLLKLLKLLLLLLKLLKLLKLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLKLLLLKLLLLKLLLLLLLKLLLLKLLLLLLLKLLLLKLLLLLLKLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLKLLKLLLLKLLLLLKLLLLKLLLLLKLLLLKLLLLKLLLLKLLLL","n":["BE","BigEndian","ByteOrder","LE","LittleEndian","NativeEndian","NetworkEndian","ReadBytesExt","WriteBytesExt","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","cmp","default","default","eq","eq","equivalent","equivalent","fmt","fmt","from","from","from_slice_f32","from_slice_f32","from_slice_f32","from_slice_f64","from_slice_f64","from_slice_f64","from_slice_i128","from_slice_i16","from_slice_i32","from_slice_i64","from_slice_u128","from_slice_u128","from_slice_u128","from_slice_u16","from_slice_u16","from_slice_u16","from_slice_u32","from_slice_u32","from_slice_u32","from_slice_u64","from_slice_u64","from_slice_u64","hash","hash","into","into","partial_cmp","partial_cmp","read_f32","read_f32","read_f32","read_f32_into","read_f32_into","read_f32_into","read_f32_into_unchecked","read_f32_into_unchecked","read_f32_into_unchecked","read_f64","read_f64","read_f64","read_f64_into","read_f64_into","read_f64_into","read_f64_into_unchecked","read_f64_into_unchecked","read_f64_into_unchecked","read_i128","read_i128","read_i128","read_i128_into","read_i128_into","read_i128_into","read_i16","read_i16","read_i16","read_i16_into","read_i16_into","read_i16_into","read_i24","read_i24","read_i24","read_i32","read_i32","read_i32","read_i32_into","read_i32_into","read_i32_into","read_i48","read_i48","read_i48","read_i64","read_i64","read_i64","read_i64_into","read_i64_into","read_i64_into","read_i8","read_i8","read_i8_into","read_i8_into","read_int","read_int","read_int","read_int128","read_int128","read_int128","read_u128","read_u128","read_u128","read_u128","read_u128","read_u128_into","read_u128_into","read_u128_into","read_u128_into","read_u128_into","read_u16","read_u16","read_u16","read_u16","read_u16","read_u16_into","read_u16_into","read_u16_into","read_u16_into","read_u16_into","read_u24","read_u24","read_u24","read_u32","read_u32","read_u32","read_u32","read_u32","read_u32_into","read_u32_into","read_u32_into","read_u32_into","read_u32_into","read_u48","read_u48","read_u48","read_u64","read_u64","read_u64","read_u64","read_u64","read_u64_into","read_u64_into","read_u64_into","read_u64_into","read_u64_into","read_u8","read_u8","read_uint","read_uint","read_uint","read_uint","read_uint","read_uint128","read_uint128","read_uint128","read_uint128","read_uint128","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","write_f32","write_f32","write_f32","write_f32_into","write_f64","write_f64","write_f64","write_f64_into","write_i128","write_i128","write_i128","write_i128_into","write_i16","write_i16","write_i16","write_i16_into","write_i24","write_i24","write_i24","write_i32","write_i32","write_i32","write_i32_into","write_i48","write_i48","write_i48","write_i64","write_i64","write_i64","write_i64_into","write_i8","write_i8","write_i8_into","write_int","write_int","write_int","write_int128","write_int128","write_int128","write_u128","write_u128","write_u128","write_u128","write_u128","write_u128_into","write_u128_into","write_u128_into","write_u16","write_u16","write_u16","write_u16","write_u16","write_u16_into","write_u16_into","write_u16_into","write_u24","write_u24","write_u24","write_u32","write_u32","write_u32","write_u32","write_u32","write_u32_into","write_u32_into","write_u32_into","write_u48","write_u48","write_u48","write_u64","write_u64","write_u64","write_u64","write_u64","write_u64_into","write_u64_into","write_u64_into","write_u8","write_u8","write_uint","write_uint","write_uint","write_uint","write_uint","write_uint128","write_uint128","write_uint128","write_uint128","write_uint128"],"q":[[0,"byteorder"]],"d":["A type alias for <code>BigEndian</code>.","Defines big-endian serialization.","<code>ByteOrder</code> describes types that can serialize integers as …","A type alias for <code>LittleEndian</code>.","Defines little-endian serialization.","Defines system native-endian serialization.","Defines network byte order serialization.","Extends <code>Read</code> with methods for reading numbers. (For <code>std::io</code>…","Extends <code>Write</code> with methods for writing numbers. (For …","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Converts the given slice of IEEE754 single-precision (4 …","","","Converts the given slice of IEEE754 double-precision (8 …","","","Converts the given slice of signed 128 bit integers to a …","Converts the given slice of signed 16 bit integers to a …","Converts the given slice of signed 32 bit integers to a …","Converts the given slice of signed 64 bit integers to a …","Converts the given slice of unsigned 128 bit integers to a …","","","Converts the given slice of unsigned 16 bit integers to a …","","","Converts the given slice of unsigned 32 bit integers to a …","","","Converts the given slice of unsigned 64 bit integers to a …","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Reads a IEEE754 single-precision (4 bytes) floating point …","Reads a IEEE754 single-precision (4 bytes) floating point …","Reads a IEEE754 single-precision (4 bytes) floating point …","Reads a sequence of IEEE754 single-precision (4 bytes) …","Reads a sequence of IEEE754 single-precision (4 bytes) …","Reads IEEE754 single-precision (4 bytes) floating point …","<strong>DEPRECATED</strong>.","<strong>DEPRECATED</strong>.","<strong>DEPRECATED</strong>.","Reads a IEEE754 double-precision (8 bytes) floating point …","Reads a IEEE754 double-precision (8 bytes) floating point …","Reads a IEEE754 double-precision (8 bytes) floating point …","Reads a sequence of IEEE754 double-precision (8 bytes) …","Reads a sequence of IEEE754 double-precision (8 bytes) …","Reads IEEE754 single-precision (4 bytes) floating point …","<strong>DEPRECATED</strong>.","<strong>DEPRECATED</strong>.","<strong>DEPRECATED</strong>.","Reads a signed 128 bit integer from the underlying reader.","Reads a signed 128 bit integer from the underlying reader.","Reads a signed 128 bit integer from <code>buf</code>.","Reads a sequence of signed 128 bit integers from the …","Reads a sequence of signed 128 bit integers from the …","Reads signed 128 bit integers from <code>src</code> into <code>dst</code>.","Reads a signed 16 bit integer from the underlying reader.","Reads a signed 16 bit integer from the underlying reader.","Reads a signed 16 bit integer from <code>buf</code>.","Reads a sequence of signed 16 bit integers from the …","Reads a sequence of signed 16 bit integers from the …","Reads signed 16 bit integers from <code>src</code> to <code>dst</code>.","Reads a signed 24 bit integer from the underlying reader.","Reads a signed 24 bit integer from the underlying reader.","Reads a signed 24 bit integer from <code>buf</code>, stored in i32.","Reads a signed 32 bit integer from the underlying reader.","Reads a signed 32 bit integer from the underlying reader.","Reads a signed 32 bit integer from <code>buf</code>.","Reads a sequence of signed 32 bit integers from the …","Reads a sequence of signed 32 bit integers from the …","Reads signed 32 bit integers from <code>src</code> into <code>dst</code>.","Reads a signed 48 bit integer from the underlying reader.","Reads a signed 48 bit integer from the underlying reader.","Reads a signed 48 bit integer from <code>buf</code>, stored in i64.","Reads a signed 64 bit integer from the underlying reader.","Reads a signed 64 bit integer from the underlying reader.","Reads a signed 64 bit integer from <code>buf</code>.","Reads a sequence of signed 64 bit integers from the …","Reads a sequence of signed 64 bit integers from the …","Reads signed 64 bit integers from <code>src</code> into <code>dst</code>.","Reads a signed 8 bit integer from the underlying reader.","Reads a signed 8 bit integer from the underlying reader.","Reads a sequence of signed 8 bit integers from the …","Reads a sequence of signed 8 bit integers from the …","Reads a signed n-bytes integer from the underlying reader.","Reads a signed n-bytes integer from the underlying reader.","Reads a signed n-bytes integer from <code>buf</code>.","Reads a signed n-bytes integer from the underlying reader.","Reads a signed n-bytes integer from the underlying reader.","Reads a signed n-bytes integer from <code>buf</code>.","Reads an unsigned 128 bit integer from <code>buf</code>.","Reads an unsigned 128 bit integer from the underlying …","Reads an unsigned 128 bit integer from the underlying …","","","Reads unsigned 128 bit integers from <code>src</code> into <code>dst</code>.","Reads a sequence of unsigned 128 bit integers from the …","Reads a sequence of unsigned 128 bit integers from the …","","","Reads an unsigned 16 bit integer from <code>buf</code>.","Reads an unsigned 16 bit integer from the underlying …","Reads an unsigned 16 bit integer from the underlying …","","","Reads unsigned 16 bit integers from <code>src</code> into <code>dst</code>.","Reads a sequence of unsigned 16 bit integers from the …","Reads a sequence of unsigned 16 bit integers from the …","","","Reads an unsigned 24 bit integer from the underlying …","Reads an unsigned 24 bit integer from the underlying …","Reads an unsigned 24 bit integer from <code>buf</code>, stored in u32.","Reads an unsigned 32 bit integer from <code>buf</code>.","Reads an unsigned 32 bit integer from the underlying …","Reads an unsigned 32 bit integer from the underlying …","","","Reads unsigned 32 bit integers from <code>src</code> into <code>dst</code>.","Reads a sequence of unsigned 32 bit integers from the …","Reads a sequence of unsigned 32 bit integers from the …","","","Reads an unsigned 48 bit integer from the underlying …","Reads an unsigned 48 bit integer from the underlying …","Reads an unsigned 48 bit integer from <code>buf</code>, stored in u64.","Reads an unsigned 64 bit integer from <code>buf</code>.","Reads an unsigned 64 bit integer from the underlying …","Reads an unsigned 64 bit integer from the underlying …","","","Reads unsigned 64 bit integers from <code>src</code> into <code>dst</code>.","Reads a sequence of unsigned 64 bit integers from the …","Reads a sequence of unsigned 64 bit integers from the …","","","Reads an unsigned 8 bit integer from the underlying reader.","Reads an unsigned 8 bit integer from the underlying reader.","Reads an unsigned n-bytes integer from <code>buf</code>.","Reads an unsigned n-bytes integer from the underlying …","Reads an unsigned n-bytes integer from the underlying …","","","Reads an unsigned n-bytes integer from <code>buf</code>.","Reads an unsigned n-bytes integer from the underlying …","Reads an unsigned n-bytes integer from the underlying …","","","","","","","","","","","Writes a IEEE754 single-precision (4 bytes) floating point …","Writes a IEEE754 single-precision (4 bytes) floating point …","Writes a IEEE754 single-precision (4 bytes) floating point …","Writes IEEE754 single-precision (4 bytes) floating point …","Writes a IEEE754 double-precision (8 bytes) floating point …","Writes a IEEE754 double-precision (8 bytes) floating point …","Writes a IEEE754 double-precision (8 bytes) floating point …","Writes IEEE754 double-precision (8 bytes) floating point …","Writes a signed 128 bit integer to the underlying writer.","Writes a signed 128 bit integer to the underlying writer.","Writes a signed 128 bit integer <code>n</code> to <code>buf</code>.","Writes signed 128 bit integers from <code>src</code> into <code>dst</code>.","Writes a signed 16 bit integer to the underlying writer.","Writes a signed 16 bit integer to the underlying writer.","Writes a signed 16 bit integer <code>n</code> to <code>buf</code>.","Writes signed 16 bit integers from <code>src</code> into <code>dst</code>.","Writes a signed 24 bit integer to the underlying writer.","Writes a signed 24 bit integer to the underlying writer.","Writes a signed 24 bit integer <code>n</code> to <code>buf</code>, stored in i32.","Writes a signed 32 bit integer to the underlying writer.","Writes a signed 32 bit integer to the underlying writer.","Writes a signed 32 bit integer <code>n</code> to <code>buf</code>.","Writes signed 32 bit integers from <code>src</code> into <code>dst</code>.","Writes a signed 48 bit integer to the underlying writer.","Writes a signed 48 bit integer to the underlying writer.","Writes a signed 48 bit integer <code>n</code> to <code>buf</code>, stored in i64.","Writes a signed 64 bit integer to the underlying writer.","Writes a signed 64 bit integer to the underlying writer.","Writes a signed 64 bit integer <code>n</code> to <code>buf</code>.","Writes signed 64 bit integers from <code>src</code> into <code>dst</code>.","Writes a signed 8 bit integer to the underlying writer.","Writes a signed 8 bit integer to the underlying writer.","Writes signed 8 bit integers from <code>src</code> into <code>dst</code>.","Writes a signed n-bytes integer to the underlying writer.","Writes a signed n-bytes integer to the underlying writer.","Writes a signed integer <code>n</code> to <code>buf</code> using only <code>nbytes</code>.","Writes a signed n-bytes integer to the underlying writer.","Writes a signed n-bytes integer to the underlying writer.","Writes a signed integer <code>n</code> to <code>buf</code> using only <code>nbytes</code>.","Writes an unsigned 128 bit integer <code>n</code> to <code>buf</code>.","Writes an unsigned 128 bit integer to the underlying …","Writes an unsigned 128 bit integer to the underlying …","","","Writes unsigned 128 bit integers from <code>src</code> into <code>dst</code>.","","","Writes an unsigned 16 bit integer <code>n</code> to <code>buf</code>.","Writes an unsigned 16 bit integer to the underlying writer.","Writes an unsigned 16 bit integer to the underlying writer.","","","Writes unsigned 16 bit integers from <code>src</code> into <code>dst</code>.","","","Writes an unsigned 24 bit integer to the underlying writer.","Writes an unsigned 24 bit integer to the underlying writer.","Writes an unsigned 24 bit integer <code>n</code> to <code>buf</code>, stored in u32.","Writes an unsigned 32 bit integer <code>n</code> to <code>buf</code>.","Writes an unsigned 32 bit integer to the underlying writer.","Writes an unsigned 32 bit integer to the underlying writer.","","","Writes unsigned 32 bit integers from <code>src</code> into <code>dst</code>.","","","Writes an unsigned 48 bit integer to the underlying writer.","Writes an unsigned 48 bit integer to the underlying writer.","Writes an unsigned 48 bit integer <code>n</code> to <code>buf</code>, stored in u64.","Writes an unsigned 64 bit integer <code>n</code> to <code>buf</code>.","Writes an unsigned 64 bit integer to the underlying writer.","Writes an unsigned 64 bit integer to the underlying writer.","","","Writes unsigned 64 bit integers from <code>src</code> into <code>dst</code>.","","","Writes an unsigned 8 bit integer to the underlying writer.","Writes an unsigned 8 bit integer to the underlying writer.","Writes an unsigned integer <code>n</code> to <code>buf</code> using only <code>nbytes</code>.","Writes an unsigned n-bytes integer to the underlying …","Writes an unsigned n-bytes integer to the underlying …","","","Writes an unsigned integer <code>n</code> to <code>buf</code> using only <code>nbytes</code>.","Writes an unsigned n-bytes integer to the underlying …","Writes an unsigned n-bytes integer to the underlying …","",""],"i":[0,0,0,0,0,0,0,0,0,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,26,1,2,26,1,2,26,26,26,26,26,1,2,26,1,2,26,1,2,26,1,2,1,2,1,2,1,2,27,27,26,27,27,26,27,27,26,27,27,26,27,27,26,27,27,26,27,27,26,27,27,26,27,27,26,27,27,26,27,27,26,27,27,26,27,27,26,27,27,26,27,27,26,27,27,26,27,27,27,27,27,27,26,27,27,26,26,27,27,1,2,26,27,27,1,2,26,27,27,1,2,26,27,27,1,2,27,27,26,26,27,27,1,2,26,27,27,1,2,27,27,26,26,27,27,1,2,26,27,27,1,2,27,27,26,27,27,1,2,26,27,27,1,2,1,2,1,2,1,2,1,2,28,28,26,26,28,28,26,26,28,28,26,26,28,28,26,26,28,28,26,28,28,26,26,28,28,26,28,28,26,26,28,28,26,28,28,26,28,28,26,26,28,28,1,2,26,1,2,26,28,28,1,2,26,1,2,28,28,26,26,28,28,1,2,26,1,2,28,28,26,26,28,28,1,2,26,1,2,28,28,26,28,28,1,2,26,28,28,1,2],"f":[0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[1,1],[2,2],[[]],[[]],[[1,1],3],[[2,2],3],[[],1],[[],2],[[1,1],4],[[2,2],4],[[],4],[[],4],[[1,5],6],[[2,5],6],[[]],[[]],[[[8,[7]]]],[[[8,[7]]]],[[[8,[7]]]],[[[8,[9]]]],[[[8,[9]]]],[[[8,[9]]]],[[[8,[10]]]],[[[8,[11]]]],[[[8,[12]]]],[[[8,[13]]]],[[[8,[14]]]],[[[8,[14]]]],[[[8,[14]]]],[[[8,[15]]]],[[[8,[15]]]],[[[8,[15]]]],[[[8,[16]]]],[[[8,[16]]]],[[[8,[16]]]],[[[8,[17]]]],[[[8,[17]]]],[[[8,[17]]]],[[1,18]],[[2,18]],[[]],[[]],[[1,1],[[19,[3]]]],[[2,2],[[19,[3]]]],[[],[[20,[7]]]],[[],[[20,[7]]]],[[[8,[21]]],7],[[[8,[7]]],20],[[[8,[7]]],20],[[[8,[21]],[8,[7]]]],[[[8,[7]]],20],[[[8,[7]]],20],[[[8,[21]],[8,[7]]]],[[],[[20,[9]]]],[[],[[20,[9]]]],[[[8,[21]]],9],[[[8,[9]]],20],[[[8,[9]]],20],[[[8,[21]],[8,[9]]]],[[[8,[9]]],20],[[[8,[9]]],20],[[[8,[21]],[8,[9]]]],[[],[[20,[10]]]],[[],[[20,[10]]]],[[[8,[21]]],10],[[[8,[10]]],20],[[[8,[10]]],20],[[[8,[21]],[8,[10]]]],[[],[[20,[11]]]],[[],[[20,[11]]]],[[[8,[21]]],11],[[[8,[11]]],20],[[[8,[11]]],20],[[[8,[21]],[8,[11]]]],[[],[[20,[12]]]],[[],[[20,[12]]]],[[[8,[21]]],12],[[],[[20,[12]]]],[[],[[20,[12]]]],[[[8,[21]]],12],[[[8,[12]]],20],[[[8,[12]]],20],[[[8,[21]],[8,[12]]]],[[],[[20,[13]]]],[[],[[20,[13]]]],[[[8,[21]]],13],[[],[[20,[13]]]],[[],[[20,[13]]]],[[[8,[21]]],13],[[[8,[13]]],20],[[[8,[13]]],20],[[[8,[21]],[8,[13]]]],[[],[[20,[22]]]],[[],[[20,[22]]]],[[[8,[22]]],20],[[[8,[22]]],20],[23,[[20,[13]]]],[23,[[20,[13]]]],[[[8,[21]],23],13],[23,[[20,[10]]]],[23,[[20,[10]]]],[[[8,[21]],23],10],[[[8,[21]]],14],[[],[[20,[14]]]],[[],[[20,[14]]]],[[[8,[21]]],14],[[[8,[21]]],14],[[[8,[21]],[8,[14]]]],[[[8,[14]]],20],[[[8,[14]]],20],[[[8,[21]],[8,[14]]]],[[[8,[21]],[8,[14]]]],[[[8,[21]]],15],[[],[[20,[15]]]],[[],[[20,[15]]]],[[[8,[21]]],15],[[[8,[21]]],15],[[[8,[21]],[8,[15]]]],[[[8,[15]]],20],[[[8,[15]]],20],[[[8,[21]],[8,[15]]]],[[[8,[21]],[8,[15]]]],[[],[[20,[16]]]],[[],[[20,[16]]]],[[[8,[21]]],16],[[[8,[21]]],16],[[],[[20,[16]]]],[[],[[20,[16]]]],[[[8,[21]]],16],[[[8,[21]]],16],[[[8,[21]],[8,[16]]]],[[[8,[16]]],20],[[[8,[16]]],20],[[[8,[21]],[8,[16]]]],[[[8,[21]],[8,[16]]]],[[],[[20,[17]]]],[[],[[20,[17]]]],[[[8,[21]]],17],[[[8,[21]]],17],[[],[[20,[17]]]],[[],[[20,[17]]]],[[[8,[21]]],17],[[[8,[21]]],17],[[[8,[21]],[8,[17]]]],[[[8,[17]]],20],[[[8,[17]]],20],[[[8,[21]],[8,[17]]]],[[[8,[21]],[8,[17]]]],[[],[[20,[21]]]],[[],[[20,[21]]]],[[[8,[21]],23],17],[23,[[20,[17]]]],[23,[[20,[17]]]],[[[8,[21]],23],17],[[[8,[21]],23],17],[[[8,[21]],23],14],[23,[[20,[14]]]],[23,[[20,[14]]]],[[[8,[21]],23],14],[[[8,[21]],23],14],[[]],[[]],[[],24],[[],24],[[],24],[[],24],[[],25],[[],25],[7,20],[7,20],[[[8,[21]],7]],[[[8,[7]],[8,[21]]]],[9,20],[9,20],[[[8,[21]],9]],[[[8,[9]],[8,[21]]]],[10,20],[10,20],[[[8,[21]],10]],[[[8,[10]],[8,[21]]]],[11,20],[11,20],[[[8,[21]],11]],[[[8,[11]],[8,[21]]]],[12,20],[12,20],[[[8,[21]],12]],[12,20],[12,20],[[[8,[21]],12]],[[[8,[12]],[8,[21]]]],[13,20],[13,20],[[[8,[21]],13]],[13,20],[13,20],[[[8,[21]],13]],[[[8,[13]],[8,[21]]]],[22,20],[22,20],[[[8,[22]],[8,[21]]]],[[13,23],20],[[13,23],20],[[[8,[21]],13,23]],[[10,23],20],[[10,23],20],[[[8,[21]],10,23]],[[[8,[21]],14]],[14,20],[14,20],[[[8,[21]],14]],[[[8,[21]],14]],[[[8,[14]],[8,[21]]]],[[[8,[14]],[8,[21]]]],[[[8,[14]],[8,[21]]]],[[[8,[21]],15]],[15,20],[15,20],[[[8,[21]],15]],[[[8,[21]],15]],[[[8,[15]],[8,[21]]]],[[[8,[15]],[8,[21]]]],[[[8,[15]],[8,[21]]]],[16,20],[16,20],[[[8,[21]],16]],[[[8,[21]],16]],[16,20],[16,20],[[[8,[21]],16]],[[[8,[21]],16]],[[[8,[16]],[8,[21]]]],[[[8,[16]],[8,[21]]]],[[[8,[16]],[8,[21]]]],[17,20],[17,20],[[[8,[21]],17]],[[[8,[21]],17]],[17,20],[17,20],[[[8,[21]],17]],[[[8,[21]],17]],[[[8,[17]],[8,[21]]]],[[[8,[17]],[8,[21]]]],[[[8,[17]],[8,[21]]]],[21,20],[21,20],[[[8,[21]],17,23]],[[17,23],20],[[17,23],20],[[[8,[21]],17,23]],[[[8,[21]],17,23]],[[[8,[21]],14,23]],[[14,23],20],[[14,23],20],[[[8,[21]],14,23]],[[[8,[21]],14,23]]],"c":[63,64,65,72,73,74],"p":[[4,"BigEndian"],[4,"LittleEndian"],[4,"Ordering"],[15,"bool"],[3,"Formatter"],[6,"Result"],[15,"f32"],[15,"slice"],[15,"f64"],[15,"i128"],[15,"i16"],[15,"i32"],[15,"i64"],[15,"u128"],[15,"u16"],[15,"u32"],[15,"u64"],[8,"Hasher"],[4,"Option"],[6,"Result"],[15,"u8"],[15,"i8"],[15,"usize"],[4,"Result"],[3,"TypeId"],[8,"ByteOrder"],[8,"ReadBytesExt"],[8,"WriteBytesExt"]]},\
"calloop":{"doc":"Calloop, a Callback-based Event Loop","t":"SNNDSSNCQQDIDCDNDDQENDESDDNNCQDDSLLLOOOLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLAMLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLALALLLLKMMKLLLKLLALALLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLMMDDNENDDLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLEDNNNGLLLLMLLLLLLLLLLMLLLLLLLLLLLLLLDLLMLLMLMLLLLLLLLLLDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLGDGLLLLLLFLLLLLLDNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNEDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLMMMMMMMMMMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLNEDDNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNNNNNELLLLLLLLLLLLLL","n":["BOTH","Continue","Disable","Dispatcher","EMPTY","EMPTY","Edge","Error","Error","Event","EventLoop","EventSource","Idle","InsertError","Interest","Level","LoopHandle","LoopSignal","Metadata","Mode","OneShot","Poll","PostAction","READ","Readiness","RegistrationToken","Remove","Reregister","Result","Ret","Token","TokenFactory","WRITE","adapt_io","as_source_mut","as_source_ref","batch_register","batch_reregister","batch_unregister","bitor","bitor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cancel","channel","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","disable","dispatch","enable","eq","eq","eq","error","error","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","generic","get_signal","handle","insert_idle","insert_source","into","into","into","into","into","into","into","into","into","into","into","into","into","into_source_inner","io","new","ping","post_run","post_run","pre_run","pre_run","process_events","readable","readable","register","register","register_dispatcher","remove","reregister","reregister","run","signals","stop","timer","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","token","transient","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_new","try_new_high_precision","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unregister","unregister","update","wakeup","writable","writable","Channel","ChannelError","Closed","Event","Msg","Sender","SyncSender","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","channel","clone","clone","clone_into","clone_into","drop","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","into","into","into","into","into","process_events","provide","recv","register","reregister","send","send","source","sync_channel","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_recv","try_send","type_id","type_id","type_id","type_id","type_id","unregister","Error","InsertError","InvalidToken","IoError","OtherError","Result","borrow","borrow","borrow_mut","borrow_mut","error","fmt","fmt","fmt","fmt","from","from","from","from","from","from","inserted","into","into","provide","provide","source","source","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id","Generic","borrow","borrow_mut","file","fmt","from","interest","into","mode","new","new_with_error","process_events","register","reregister","try_from","try_into","type_id","unregister","unwrap","Async","Readable","Writable","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","drop","fmt","fmt","fmt","from","from","from","get_mut","into","into","into","into_future","into_future","into_inner","poll","poll","readable","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","writable","Ping","PingError","PingSource","borrow","borrow_mut","fmt","fmt","from","into","make_ping","provide","source","to_string","try_from","try_into","type_id","Event","SIGABRT","SIGALRM","SIGBUS","SIGCHLD","SIGCONT","SIGFPE","SIGHUP","SIGILL","SIGINT","SIGIO","SIGKILL","SIGPIPE","SIGPROF","SIGPWR","SIGQUIT","SIGSEGV","SIGSTKFLT","SIGSTOP","SIGSYS","SIGTERM","SIGTRAP","SIGTSTP","SIGTTIN","SIGTTOU","SIGURG","SIGUSR1","SIGUSR2","SIGVTALRM","SIGWINCH","SIGXCPU","SIGXFSZ","Signal","SignalError","Signals","add_signals","as_ref","as_str","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","drop","eq","eq","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_str","full_info","hash","hash","into","into","into","into","into","iterator","new","partial_cmp","process_events","provide","register","remove_signals","reregister","set_signals","siginfo","signal","source","ssi_addr","ssi_addr_lsb","ssi_arch","ssi_band","ssi_call_addr","ssi_code","ssi_errno","ssi_fd","ssi_int","ssi_overrun","ssi_pid","ssi_ptr","ssi_signo","ssi_status","ssi_stime","ssi_syscall","ssi_tid","ssi_trapno","ssi_uid","ssi_utime","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","unregister","Drop","TimeoutAction","TimeoutFuture","Timer","ToDuration","ToInstant","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","current_deadline","fmt","fmt","fmt","from","from","from","from_deadline","from_deadline","from_duration","from_duration","immediate","into","into","into","into_future","poll","process_events","register","reregister","set_deadline","set_duration","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unregister","Disable","Keep","None","Register","Remove","TransientSource","borrow","borrow_mut","fmt","from","from","into","map","process_events","register","reregister","try_from","try_into","type_id","unregister"],"q":[[0,"calloop"],[218,"calloop::channel"],[287,"calloop::error"],[323,"calloop::generic"],[342,"calloop::io"],[378,"calloop::ping"],[394,"calloop::signals"],[529,"calloop::timer"],[573,"calloop::transient"]],"d":["Shorthand for read and write interest","Continue listening for events on this source as before","Disable this source","An event source with its callback.","Shorthand for empty interest","Shorthand for empty readiness","Edge-triggering","","The error type returned from <code>process_events()</code> (not the …","The type of events generated by your source.","An event loop","Trait representing an event source","An idle callback that was inserted in this loop","","Interest to register regarding the file descriptor","Level-triggering","An handle to an event loop","A signal that can be shared between thread to stop or …","Some metadata of your event source","Possible modes for registering a file descriptor","Single event generation","The polling system","Possible actions that can be requested to the event loop …","Shorthand for read interest","Readiness for a file descriptor notification","A token representing a registration in the <code>EventLoop</code>.","Remove this source from the eventloop","Trigger a re-registration of this source","","The return type of the user callback","A token (for implementation of the <code>EventSource</code> trait)","Factory for creating tokens in your registrations","Shorthand for write interest","Wrap an IO object into an async adapter","Returns a mutable reference to the event source.","Returns an immutable reference to the event source.","Register a set of event sources. Effectively calls …","Reregister a set of event sources. Effectively calls …","Unregister a set of event sources. Effectively calls …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Cancel the idle callback if it was not already run","An MPSC channel whose receiving end is an event source","","","","","","","","","","","","","","","","","","","Disables this event source.","Dispatch pending events to their callbacks","Enables this previously disabled event source.","","","","Error types used and generated by Calloop.","Is the FD in an error state","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","A generic event source wrapping an IO objects or file …","Get a signal to stop this event loop from running","Retrieve a loop handle","Inserts an idle callback.","Inserts a new event source in the loop.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consumes the Dispatcher and returns the inner event source.","Adapters for async IO objects","Builds a dispatcher.","Ping to the event loop","Notification that the current polling session ended","Notification that the current polling session ended","Notification that a polling session is going to start","Notification that a polling session is going to start","Process any relevant events","Wait for the FD to be readable","Is the FD readable","Register yourself to this poll instance","Register a new file descriptor for polling","Registers a <code>Dispatcher</code> in the loop.","Removes this source from the event loop.","Re-register your file descriptors","Update the registration for a file descriptor","Run this event loop","Event source for tracking Unix signals","Stop the event loop","Timer event source","","","","","","","","","","Produce a new unique token","Wrapper for a transient Calloop event source.","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a new event loop","Create a new event loop in high precision mode","","","","","","","","","","","","","","Unregister your file descriptors","Unregister a file descriptor","Makes this source update its registration.","Wake up the event loop","Wait for the FD to be writable","Is the FD writable","The receiving end of the channel","An error arising from processing events for a channel.","The channel was closed","The events generated by the channel event source","A message was received and is bundled here","The sender end of a channel","The sender end of a synchronous channel","","","","","","","","","","","Create a new asynchronous channel","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Proxy for <code>mpsc::Receiver::recv</code> to manually poll events.","","","Send a message to the channel","Send a message to the synchronous channel","","Create a new synchronous, bounded channel","","","","","","","","","","","","","","Proxy for <code>mpsc::Receiver::try_recv</code> to manually poll events.","Send a message to the synchronous channel","","","","","","","The primary error type used by Calloop covering internal …","An error generated when trying to insert an event source","When an event source is registered (or re- or …","This variant wraps a <code>std::io::Error</code>, which might arise from","Any other unexpected error kind (most likely from a user …","<code>Result</code> alias using Calloop’s error type.","","","","","The generated error","","","","","","Converts a <code>nix::Error</code> into a wrapped version of the …","Converts the <code>InsertError</code> into Calloop’s error type, …","Returns the argument unchanged.","","Returns the argument unchanged.","The source that could not be inserted","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","A generic event source wrapping a FD-backed type","","","The wrapped FD-backed type","","Returns the argument unchanged.","The programmed interest","Calls <code>U::from(self)</code>.","The programmed mode","Wrap a FD-backed type into a <code>Generic</code> event source that uses","Wrap a FD-backed type into a <code>Generic</code> event source using an …","","","","","","","","Unwrap the <code>Generic</code> source to retrieve the underlying type","Adapter for async IO manipulations","A future that resolves once the associated object becomes …","A future that resolves once the associated object becomes …","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Mutably access the underlying IO object","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Remove the async adapter and retrieve the underlying object","","","A future that resolves once the object becomes ready for …","","","","","","","","","","A future that resolves once the object becomes ready for …","The ping event source","An error arising from processing events for a ping.","The Ping handle","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Create a new ping event source","","","","","","","An event generated by the signal event source","Abort","Alarm clock","Bus error","To parent on child stop or exit","Continue a stopped process","Floating point exception","Hangup","Illegal instruction (not reset when caught)","Interrupt","Input/output possible signal","Kill (cannot be caught or ignored)","Write on a pipe with no one to read it","Profiling time alarm","Power failure imminent.","Quit","Segmentation violation","Stack fault (obsolete)","Sendable stop signal not from tty","Bad system call","Software termination signal from kill","Trace trap (not reset when caught)","Stop signal from tty","To readers pgrp upon background tty read","Like TTIN if (tp-&gt;t_local&amp;LTOSTOP)","Urgent condition on IO channel","User defined signal 1","User defined signal 2","Virtual time alarm","Window size changes","Exceeded CPU time limit","Exceeded file size limit","Types of operating system signals","An error arising from processing events for a process …","An event source for receiving Unix signals","Add a list of signals to the signals source","","Returns name of signal.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Access the full <code>siginfo_t</code> associated with this signal event","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Iterate through all signals defined by this OS","Create a new signal event source listening on the …","","","","","Remove a list of signals from the signals source","","Replace the list of signals of the source","","Retrieve the signal number that was receive","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Don’t reschedule this timer","Action to reschedule a timeout if necessary","A future that resolves once a certain timeout is expired","A timer event source","Reschedule this timer to a given <code>Duration</code> in the future","Reschedule this timer to a given <code>Instant</code>","","","","","","","Get the current deadline of this <code>Timer</code>","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Create a future that resolves at a given instant","Create a timer that will fire at a given instant","Create a future that resolves after a given duration","Create a timer that will fire after a given duration from …","Create a timer that will fire immediately when inserted in …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Changes the deadline of this timer to an <code>Instant</code>","Changes the deadline of this timer to a <code>Duration</code> from now","","","","","","","","","","","The source needs to be disabled but kept.","The source should be kept in the loop.","The source has been removed from the loop and dropped …","The source needs to be registered with the loop.","The source needs to be removed from the loop.","A <code>TransientSource</code> wraps a Calloop event source and manages …","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Apply a function to the enclosed source, if it exists. It …","","","","","","",""],"i":[12,9,9,0,12,13,11,0,5,5,0,0,0,0,0,11,0,0,5,0,11,0,0,12,0,0,9,9,0,5,0,0,12,1,6,6,0,0,0,9,9,22,1,17,6,10,11,12,13,25,14,15,16,9,22,1,17,6,10,11,12,13,25,14,15,16,9,10,0,1,6,11,12,13,14,15,16,9,1,6,11,12,13,14,15,16,9,1,17,1,14,15,9,0,13,22,1,17,6,10,11,12,13,25,14,15,16,9,22,1,17,6,10,11,12,13,25,14,15,16,9,0,17,17,1,1,22,1,17,6,10,11,12,13,25,14,15,16,9,6,0,6,0,5,5,5,5,5,12,13,5,22,1,1,5,22,17,0,16,0,1,6,11,12,13,14,15,16,9,25,0,22,1,17,6,10,11,12,13,25,14,15,16,9,22,1,17,6,10,11,12,13,25,14,15,16,9,17,17,22,1,17,6,10,11,12,13,25,14,15,16,9,5,22,1,16,12,13,0,0,35,0,35,0,0,35,32,33,36,37,35,32,33,36,37,0,32,33,32,33,32,35,32,33,36,37,37,35,32,33,36,37,35,32,33,36,37,36,37,36,36,36,32,33,37,0,32,33,37,35,32,33,36,37,35,32,33,36,37,36,33,35,32,33,36,37,36,0,0,46,46,46,0,46,28,46,28,28,46,46,28,28,46,46,46,46,46,28,28,46,28,46,28,46,28,46,28,46,28,46,28,46,28,0,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,0,0,0,3,52,53,3,52,53,3,3,52,53,3,52,53,3,3,52,53,52,53,3,52,53,3,3,52,53,3,52,53,3,52,53,3,0,0,0,57,57,57,57,57,57,0,57,57,57,57,57,57,0,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,0,0,0,59,60,60,63,59,66,60,64,63,59,66,60,64,63,60,64,63,60,64,60,59,60,64,60,64,63,59,66,66,60,60,64,63,59,66,60,64,60,63,60,64,63,59,66,60,64,60,59,60,59,66,59,59,59,59,0,63,66,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,63,60,64,66,60,63,59,66,60,60,64,63,59,66,60,64,63,59,66,60,64,59,73,0,0,0,73,73,72,70,73,72,70,73,70,72,70,73,72,70,73,72,70,72,70,70,72,70,73,72,72,70,70,70,70,70,72,70,73,72,70,73,72,70,73,70,74,74,74,74,74,0,74,74,74,74,74,74,74,74,74,74,74,74,74,74],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,2],[[4,[[3,[2]]]]]],[[[6,[5]]],[[7,[5]]]],[[[6,[5]]],[[8,[5]]]],0,0,0,[[9,9]],[[9,9]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[10],0,[1,1],[6,6],[11,11],[12,12],[13,13],[14,14],[15,15],[16,16],[9,9],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[1,15],4],[[17,[20,[[19,[18]]]]],4],[[1,15],4],[[14,14],21],[[15,15],21],[[9,9],21],0,0,[[22,23],24],[[1,23],24],[[17,23],24],[[6,23],24],[[10,23],24],[[11,23],24],[[12,23],24],[[13,23],24],[[25,23],24],[[14,23],24],[[15,23],24],[[16,23],24],[[9,23],24],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[17,16],[17,1],[[1,26],10],[[1,5,27],[[29,[15,[28,[5]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[6,[5]]],5],0,[[5,27],[[6,[5]]]],0,[27,4],[27,4],[27,4],[27,4],[[13,14,27],[[29,[9]]]],0,0,[[22,25],4],[[22,30,12,11,14],4],[[1,[6,[5]]],[[4,[15]]]],[[1,15]],[[22,25],4],[[22,30,12,11,14],4],[[17,[20,[[19,[18]]]],27],4],0,[16],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[25,14],0,[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],[[4,[17]]]],[[],[[4,[17]]]],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[22,4],[[22,30],4],[[1,15],4],[16],0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[32,32],[33,33],[[]],[[]],[32],[[[35,[34]],23],24],[[[32,[34]],23],24],[[[33,[34]],23],24],[[[36,[34]],23],24],[[37,23],24],[[37,23],24],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[36,13,14,27],[[29,[9]]]],[38],[36,[[29,[39]]]],[[36,22,25],4],[[36,22,25],4],[32,[[29,[40]]]],[33,[[29,[40]]]],[37,[[19,[41]]]],[42],[[]],[[]],[[],43],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[36,[[29,[44]]]],[33,[[29,[45]]]],[[],31],[[],31],[[],31],[[],31],[[],31],[[36,22],4],0,0,0,0,0,0,[[]],[[]],[[]],[[]],0,[[46,23],24],[[46,23],24],[[28,23],[[29,[47]]]],[[28,23],24],[48,46],[49,46],[28,46],[[]],[[[50,[41]]],46],[[]],0,[[]],[[]],[38],[38],[46,[[19,[41]]]],[28,[[19,[41]]]],[[],43],[[],43],[[],29],[[],29],[[],29],[[],29],[[],31],[[],31],0,[[]],[[]],0,[[[51,[[0,[34,2]],34]],23],24],[[]],0,[[]],0,[[2,12,11],[[51,[2,48]]]],[[2,12,11],[[51,[2]]]],[[[51,[2,[20,[[50,[41]]]]]],13,14,27],[[29,[9]]]],[[[51,[2,[20,[[50,[41]]]]]],22,25],4],[[[51,[2,[20,[[50,[41]]]]]],22,25],4],[[],29],[[],29],[[],31],[[[51,[2,[20,[[50,[41]]]]]],22],4],[[[51,[2]]],2],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[[3,[2]]]],[[[3,[[0,[2,34]]]],23],24],[[[52,[[0,[34,2]]]],23],24],[[[53,[[0,[34,2]]]],23],24],[[]],[[]],[[]],[[[3,[2]]],2],[[]],[[]],[[]],[[]],[[]],[[[3,[2]]],2],[[[54,[[52,[2]]]],55],56],[[[54,[[53,[2]]]],55],56],[[[3,[2]]],[[52,[2]]]],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],31],[[],31],[[],31],[[[3,[2]]],[[53,[2]]]],0,0,0,[[]],[[]],[[57,23],24],[[57,23],24],[[]],[[]],[[],58],[38],[57,[[19,[41]]]],[[],43],[[],29],[[],29],[[],31],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[59,[61,[60]]],4],[60,62],[60,62],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[63,63],[60,60],[64,64],[[]],[[]],[[]],[[60,60],65],[59],[[60,60],21],[[64,64],21],[[],21],[[],21],[[63,23],24],[[59,23],24],[[66,23],24],[[66,23],24],[[60,23],[[29,[47]]]],[[60,23],[[29,[47]]]],[[64,23],[[29,[47]]]],[[]],[[]],[[]],[[]],[[]],[62,[[29,[60,49]]]],[63,64],[[60,67]],[[64,67]],[[]],[[]],[[]],[[]],[[]],[[],68],[[[61,[60]]],[[4,[59]]]],[[60,60],[[19,[65]]]],[[59,13,14,27],[[29,[9]]]],[38],[[59,22,25],4],[[59,[61,[60]]],4],[[59,22,25],4],[[59,[61,[60]]],4],0,[63,60],[66,[[19,[41]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[],43],[[],43],[[],29],[[],29],[[],29],[69,[[29,[60,49]]]],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],31],[[],31],[[],31],[[],31],[[],31],[[59,22],4],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[70,71],[[72,23],24],[[70,23],24],[[73,23],24],[[]],[[]],[[]],[[1,71],72],[71,70],[[1,18],72],[18,70],[[],70],[[]],[[]],[[]],[[]],[[[54,[72]],55],56],[[70,13,14,27],[[29,[9]]]],[[70,22,25],4],[[70,22,25],4],[[70,71]],[[70,18]],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],31],[[],31],[[],31],[[70,22],4],0,0,0,0,0,0,[[]],[[]],[[[74,[34]],23],24],[[]],[5,[[74,[5]]]],[[]],[[74,26],19],[[[74,[5]],13,14,27],[[29,[9]]]],[[[74,[5]],22,25],4],[[[74,[5]],22,25],4],[[],29],[[],29],[[],31],[[[74,[5]],22],4]],"c":[],"p":[[3,"LoopHandle"],[8,"AsRawFd"],[3,"Async"],[6,"Result"],[8,"EventSource"],[3,"Dispatcher"],[3,"RefMut"],[3,"Ref"],[4,"PostAction"],[3,"Idle"],[4,"Mode"],[3,"Interest"],[3,"Readiness"],[3,"Token"],[3,"RegistrationToken"],[3,"LoopSignal"],[3,"EventLoop"],[3,"Duration"],[4,"Option"],[8,"Into"],[15,"bool"],[3,"Poll"],[3,"Formatter"],[6,"Result"],[3,"TokenFactory"],[8,"FnOnce"],[8,"FnMut"],[3,"InsertError"],[4,"Result"],[6,"RawFd"],[3,"TypeId"],[3,"Sender"],[3,"SyncSender"],[8,"Debug"],[4,"Event"],[3,"Channel"],[3,"ChannelError"],[3,"Demand"],[3,"RecvError"],[3,"SendError"],[8,"Error"],[15,"usize"],[3,"String"],[4,"TryRecvError"],[4,"TrySendError"],[4,"Error"],[3,"Error"],[3,"Error"],[4,"Errno"],[3,"Box"],[3,"Generic"],[3,"Readable"],[3,"Writable"],[3,"Pin"],[3,"Context"],[4,"Poll"],[3,"PingError"],[6,"Result"],[3,"Signals"],[4,"Signal"],[15,"slice"],[15,"str"],[3,"Event"],[3,"siginfo"],[4,"Ordering"],[3,"SignalError"],[8,"Hasher"],[3,"SignalIterator"],[15,"i32"],[3,"Timer"],[3,"Instant"],[3,"TimeoutFuture"],[4,"TimeoutAction"],[4,"TransientSource"]]},\
"cfg_if":{"doc":"A macro for defining <code>#[cfg]</code> if-else statements.","t":"O","n":["cfg_if"],"q":[[0,"cfg_if"]],"d":["The main macro provided by this crate. See crate …"],"i":[0],"f":[0],"c":[],"p":[]},\
"color_quant":{"doc":"Color quantization library","t":"DLLLLLLLLLLLLLL","n":["NeuQuant","borrow","borrow_mut","color_map_rgb","color_map_rgba","from","index_of","init","into","lookup","map_pixel","new","try_from","try_into","type_id"],"q":[[0,"color_quant"]],"d":["","","","Returns the RGBA color map calculated from the sample.","Returns the RGBA color map calculated from the sample.","Returns the argument unchanged.","Finds the best-matching index in the color map.","Initializes the neuronal network and trains it with the …","Calls <code>U::from(self)</code>.","Lookup pixel values for color at <code>idx</code> in the colormap.","Maps the rgba-pixel in-place to the best-matching color in …","Creates a new neuronal network and trains it with the …","","",""],"i":[0,1,1,1,1,1,1,1,1,1,1,1,1,1,1],"f":[0,[[]],[[]],[1,[[3,[2]]]],[1,[[3,[2]]]],[[]],[[1,[4,[2]]],5],[[1,[4,[2]]]],[[]],[[1,5],[[7,[[6,[2]]]]]],[[1,[4,[2]]]],[[8,5,[4,[2]]],1],[[],9],[[],9],[[],10]],"c":[],"p":[[3,"NeuQuant"],[15,"u8"],[3,"Vec"],[15,"slice"],[15,"usize"],[15,"array"],[4,"Option"],[15,"i32"],[4,"Result"],[3,"TypeId"]]},\
"concurrent_queue":{"doc":"A concurrent multi-producer multi-consumer queue.","t":"NNDNNEEDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["Closed","Closed","ConcurrentQueue","Empty","Full","PopError","PushError","TryIter","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bounded","capacity","clone","clone","clone","clone_into","clone_into","clone_into","close","eq","eq","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","into","into","into","into","into_inner","into_iter","is_closed","is_closed","is_closed","is_empty","is_empty","is_full","is_full","len","next","pop","provide","provide","push","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_iter","type_id","type_id","type_id","type_id","unbounded"],"q":[[0,"concurrent_queue"]],"d":["The queue is empty and closed.","The queue is closed.","A concurrent queue.","The queue is empty but not closed.","The queue is full but not closed.","Error which occurs when popping from an empty queue.","Error which occurs when pushing into a full or closed …","An iterator that pops items from a <code>ConcurrentQueue</code>.","","","","","","","","","Creates a new bounded queue.","Returns the capacity of the queue.","","","","","","","Closes the queue.","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Unwraps the item that couldn’t be pushed.","","Returns <code>true</code> if the queue is closed.","Returns <code>true</code> if the queue is empty and closed.","Returns <code>true</code> if the queue is closed.","Returns <code>true</code> if the queue is empty.","Returns <code>true</code> if the queue is empty but not closed.","Returns <code>true</code> if the queue is full.","Returns <code>true</code> if the queue is full but not closed.","Returns the number of items in the queue.","","Attempts to pop an item from the queue.","","","Attempts to push an item into the queue.","","","","","","","","","","","","","","Get an iterator over the items in the queue.","","","","","Creates a new unbounded queue."],"i":[6,7,0,6,7,0,0,0,2,5,6,7,2,5,6,7,2,2,5,6,7,5,6,7,2,6,7,6,7,2,5,6,6,7,7,2,5,6,7,2,5,6,7,7,5,2,6,7,2,6,2,7,2,5,2,6,7,2,5,6,7,6,7,2,5,6,7,2,5,6,7,2,2,5,6,7,2],"f":[0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,2],[2,[[3,[1]]]],[[[5,[4]]],[[5,[4]]]],[6,6],[[[7,[4]]],[[7,[4]]]],[[]],[[]],[[]],[2,8],[[6,6],8],[[[7,[9]],[7,[9]]],8],[[],8],[[],8],[[2,10],11],[[5,10],11],[[6,10],11],[[6,10],11],[[[7,[12]],10],11],[[7,10],11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[7],[[]],[2,8],[6,8],[7,8],[2,8],[6,8],[2,8],[7,8],[2,1],[5,3],[2,[[13,[6]]]],[14],[14],[2,[[13,[7]]]],[[]],[[]],[[]],[[],15],[[],15],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[2,5],[[],16],[[],16],[[],16],[[],16],[[],2]],"c":[],"p":[[15,"usize"],[3,"ConcurrentQueue"],[4,"Option"],[8,"Clone"],[3,"TryIter"],[4,"PopError"],[4,"PushError"],[15,"bool"],[8,"PartialEq"],[3,"Formatter"],[6,"Result"],[8,"Debug"],[4,"Result"],[3,"Demand"],[3,"String"],[3,"TypeId"]]},\
"crc32fast":{"doc":"Fast, SIMD-accelerated CRC32 (IEEE) checksum computation.","t":"DLLLLLLLLLLFLLLLLLLLLLL","n":["Hasher","borrow","borrow_mut","clone","clone_into","combine","default","finalize","finish","fmt","from","hash","into","new","new_with_initial","new_with_initial_len","reset","to_owned","try_from","try_into","type_id","update","write"],"q":[[0,"crc32fast"]],"d":["Represents an in-progress CRC32 computation.","","","","","Combine the hash state with the hash state for the …","","Finalize the hash state and return the computed CRC32 …","","","Returns the argument unchanged.","Computes the CRC32 hash of a byte slice.","Calls <code>U::from(self)</code>.","Create a new <code>Hasher</code>.","Create a new <code>Hasher</code> with an initial CRC32 state.","Create a new <code>Hasher</code> with an initial CRC32 state.","Reset the hash state.","","","","","Process the given byte slice and update the hash state.",""],"i":[0,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1],"f":[0,[[]],[[]],[1,1],[[]],[[1,1]],[[],1],[1,2],[1,3],[[1,4],5],[[]],[[[7,[6]]],2],[[]],[[],1],[2,1],[[2,3],1],[1],[[]],[[],8],[[],8],[[],9],[[1,[7,[6]]]],[[1,[7,[6]]]]],"c":[],"p":[[3,"Hasher"],[15,"u32"],[15,"u64"],[3,"Formatter"],[6,"Result"],[15,"u8"],[15,"slice"],[4,"Result"],[3,"TypeId"]]},\
"crossbeam_utils":{"doc":"Miscellaneous tools for concurrent programming.","t":"DDALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDIQLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLL","n":["Backoff","CachePadded","atomic","borrow","borrow","borrow_mut","borrow_mut","clone","default","default","deref","deref_mut","eq","fmt","fmt","from","from","from","from","hash","into","into","into_inner","is_completed","new","new","reset","snooze","spin","try_from","try_from","try_into","try_into","type_id","type_id","AtomicCell","AtomicConsume","Val","as_ptr","borrow","borrow_mut","compare_and_swap","compare_exchange","default","drop","fetch_add","fetch_add","fetch_add","fetch_add","fetch_add","fetch_add","fetch_add","fetch_add","fetch_add","fetch_add","fetch_add","fetch_add","fetch_and","fetch_and","fetch_and","fetch_and","fetch_and","fetch_and","fetch_and","fetch_and","fetch_and","fetch_and","fetch_and","fetch_and","fetch_and","fetch_max","fetch_max","fetch_max","fetch_max","fetch_max","fetch_max","fetch_max","fetch_max","fetch_max","fetch_max","fetch_max","fetch_max","fetch_min","fetch_min","fetch_min","fetch_min","fetch_min","fetch_min","fetch_min","fetch_min","fetch_min","fetch_min","fetch_min","fetch_min","fetch_nand","fetch_nand","fetch_nand","fetch_nand","fetch_nand","fetch_nand","fetch_nand","fetch_nand","fetch_nand","fetch_nand","fetch_nand","fetch_nand","fetch_nand","fetch_or","fetch_or","fetch_or","fetch_or","fetch_or","fetch_or","fetch_or","fetch_or","fetch_or","fetch_or","fetch_or","fetch_or","fetch_or","fetch_sub","fetch_sub","fetch_sub","fetch_sub","fetch_sub","fetch_sub","fetch_sub","fetch_sub","fetch_sub","fetch_sub","fetch_sub","fetch_sub","fetch_update","fetch_xor","fetch_xor","fetch_xor","fetch_xor","fetch_xor","fetch_xor","fetch_xor","fetch_xor","fetch_xor","fetch_xor","fetch_xor","fetch_xor","fetch_xor","fmt","from","from","from","into","into_inner","is_lock_free","load","load_consume","new","store","swap","take","try_from","try_into","type_id"],"q":[[0,"crossbeam_utils"],[35,"crossbeam_utils::atomic"]],"d":["Performs exponential backoff in spin loops.","Pads and aligns a value to the length of a cache line.","Atomic types.","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns the inner value.","Returns <code>true</code> if exponential backoff has completed and …","Creates a new <code>Backoff</code>.","Pads and aligns a value to the length of a cache line.","Resets the <code>Backoff</code>.","Backs off in a blocking loop.","Backs off in a lock-free loop.","","","","","","","A thread-safe mutable memory location.","Trait which allows reading from primitive atomic types …","Type returned by <code>load_consume</code>.","Returns a raw pointer to the underlying data in this …","","","If the current value equals <code>current</code>, stores <code>new</code> into the …","If the current value equals <code>current</code>, stores <code>new</code> into the …","","","Increments the current value by <code>val</code> and returns the …","Increments the current value by <code>val</code> and returns the …","Increments the current value by <code>val</code> and returns the …","Increments the current value by <code>val</code> and returns the …","Increments the current value by <code>val</code> and returns the …","Increments the current value by <code>val</code> and returns the …","Increments the current value by <code>val</code> and returns the …","Increments the current value by <code>val</code> and returns the …","Increments the current value by <code>val</code> and returns the …","Increments the current value by <code>val</code> and returns the …","Increments the current value by <code>val</code> and returns the …","Increments the current value by <code>val</code> and returns the …","Applies bitwise “and” to the current value and returns …","Applies bitwise “and” to the current value and returns …","Applies bitwise “and” to the current value and returns …","Applies logical “and” to the current value and returns …","Applies bitwise “and” to the current value and returns …","Applies bitwise “and” to the current value and returns …","Applies bitwise “and” to the current value and returns …","Applies bitwise “and” to the current value and returns …","Applies bitwise “and” to the current value and returns …","Applies bitwise “and” to the current value and returns …","Applies bitwise “and” to the current value and returns …","Applies bitwise “and” to the current value and returns …","Applies bitwise “and” to the current value and returns …","Compares and sets the maximum of the current value and <code>val</code>,","Compares and sets the maximum of the current value and <code>val</code>,","Compares and sets the maximum of the current value and <code>val</code>,","Compares and sets the maximum of the current value and <code>val</code>,","Compares and sets the maximum of the current value and <code>val</code>,","Compares and sets the maximum of the current value and <code>val</code>,","Compares and sets the maximum of the current value and <code>val</code>,","Compares and sets the maximum of the current value and <code>val</code>,","Compares and sets the maximum of the current value and <code>val</code>,","Compares and sets the maximum of the current value and <code>val</code>,","Compares and sets the maximum of the current value and <code>val</code>,","Compares and sets the maximum of the current value and <code>val</code>,","Compares and sets the minimum of the current value and <code>val</code>,","Compares and sets the minimum of the current value and <code>val</code>,","Compares and sets the minimum of the current value and <code>val</code>,","Compares and sets the minimum of the current value and <code>val</code>,","Compares and sets the minimum of the current value and <code>val</code>,","Compares and sets the minimum of the current value and <code>val</code>,","Compares and sets the minimum of the current value and <code>val</code>,","Compares and sets the minimum of the current value and <code>val</code>,","Compares and sets the minimum of the current value and <code>val</code>,","Compares and sets the minimum of the current value and <code>val</code>,","Compares and sets the minimum of the current value and <code>val</code>,","Compares and sets the minimum of the current value and <code>val</code>,","Applies bitwise “nand” to the current value and …","Applies bitwise “nand” to the current value and …","Applies bitwise “nand” to the current value and …","Applies bitwise “nand” to the current value and …","Applies bitwise “nand” to the current value and …","Applies bitwise “nand” to the current value and …","Applies bitwise “nand” to the current value and …","Applies bitwise “nand” to the current value and …","Applies bitwise “nand” to the current value and …","Applies logical “nand” to the current value and …","Applies bitwise “nand” to the current value and …","Applies bitwise “nand” to the current value and …","Applies bitwise “nand” to the current value and …","Applies bitwise “or” to the current value and returns …","Applies bitwise “or” to the current value and returns …","Applies bitwise “or” to the current value and returns …","Applies logical “or” to the current value and returns …","Applies bitwise “or” to the current value and returns …","Applies bitwise “or” to the current value and returns …","Applies bitwise “or” to the current value and returns …","Applies bitwise “or” to the current value and returns …","Applies bitwise “or” to the current value and returns …","Applies bitwise “or” to the current value and returns …","Applies bitwise “or” to the current value and returns …","Applies bitwise “or” to the current value and returns …","Applies bitwise “or” to the current value and returns …","Decrements the current value by <code>val</code> and returns the …","Decrements the current value by <code>val</code> and returns the …","Decrements the current value by <code>val</code> and returns the …","Decrements the current value by <code>val</code> and returns the …","Decrements the current value by <code>val</code> and returns the …","Decrements the current value by <code>val</code> and returns the …","Decrements the current value by <code>val</code> and returns the …","Decrements the current value by <code>val</code> and returns the …","Decrements the current value by <code>val</code> and returns the …","Decrements the current value by <code>val</code> and returns the …","Decrements the current value by <code>val</code> and returns the …","Decrements the current value by <code>val</code> and returns the …","Fetches the value, and applies a function to it that …","Applies bitwise “xor” to the current value and returns …","Applies bitwise “xor” to the current value and returns …","Applies logical “xor” to the current value and returns …","Applies bitwise “xor” to the current value and returns …","Applies bitwise “xor” to the current value and returns …","Applies bitwise “xor” to the current value and returns …","Applies bitwise “xor” to the current value and returns …","Applies bitwise “xor” to the current value and returns …","Applies bitwise “xor” to the current value and returns …","Applies bitwise “xor” to the current value and returns …","Applies bitwise “xor” to the current value and returns …","Applies bitwise “xor” to the current value and returns …","Applies bitwise “xor” to the current value and returns …","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Consumes the atomic and returns the contained value.","Returns <code>true</code> if operations on values of this type are …","Loads a value from the atomic cell.","Loads a value from the atomic using a “consume” memory …","Creates a new atomic cell initialized with <code>val</code>.","Stores <code>val</code> into the atomic cell.","Stores <code>val</code> into the atomic cell and returns the previous …","Takes the value of the atomic cell, leaving …","","",""],"i":[0,0,0,3,2,3,2,2,3,2,2,2,2,3,2,3,2,2,2,2,3,2,2,3,3,2,3,3,3,3,2,3,2,3,2,0,0,31,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,31,15,15,15,15,15,15,15],"f":[0,0,0,[[]],[[]],[[]],[[]],[[[2,[1]]],[[2,[1]]]],[[],3],[[],[[2,[4]]]],[2],[2],[[[2,[5]],[2,[5]]],6],[[3,7],8],[[[2,[9]],7],8],[[]],[10],[[]],[[],2],[[[2,[11]],12]],[[]],[[]],[2],[3,6],[[],3],[[],2],[3],[3],[3],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],0,0,0,[15],[[]],[[]],[[[15,[[0,[16,17]]]],[0,[16,17]],[0,[16,17]]],[[0,[16,17]]]],[[[15,[[0,[16,17]]]],[0,[16,17]],[0,[16,17]]],[[13,[[0,[16,17]],[0,[16,17]]]]]],[[],[[15,[4]]]],[15],[[[15,[18]],18],18],[[[15,[19]],19],19],[[[15,[20]],20],20],[[[15,[21]],21],21],[[[15,[22]],22],22],[[[15,[23]],23],23],[[[15,[24]],24],24],[[[15,[25]],25],25],[[[15,[26]],26],26],[[[15,[27]],27],27],[[[15,[28]],28],28],[[[15,[29]],29],29],[[[15,[29]],29],29],[[[15,[25]],25],25],[[[15,[20]],20],20],[[[15,[6]],6],6],[[[15,[28]],28],28],[[[15,[19]],19],19],[[[15,[22]],22],22],[[[15,[26]],26],26],[[[15,[23]],23],23],[[[15,[18]],18],18],[[[15,[21]],21],21],[[[15,[27]],27],27],[[[15,[24]],24],24],[[[15,[25]],25],25],[[[15,[20]],20],20],[[[15,[27]],27],27],[[[15,[23]],23],23],[[[15,[26]],26],26],[[[15,[21]],21],21],[[[15,[24]],24],24],[[[15,[19]],19],19],[[[15,[28]],28],28],[[[15,[18]],18],18],[[[15,[22]],22],22],[[[15,[29]],29],29],[[[15,[23]],23],23],[[[15,[26]],26],26],[[[15,[20]],20],20],[[[15,[25]],25],25],[[[15,[29]],29],29],[[[15,[22]],22],22],[[[15,[24]],24],24],[[[15,[18]],18],18],[[[15,[21]],21],21],[[[15,[28]],28],28],[[[15,[19]],19],19],[[[15,[27]],27],27],[[[15,[18]],18],18],[[[15,[29]],29],29],[[[15,[24]],24],24],[[[15,[27]],27],27],[[[15,[21]],21],21],[[[15,[25]],25],25],[[[15,[19]],19],19],[[[15,[26]],26],26],[[[15,[23]],23],23],[[[15,[6]],6],6],[[[15,[22]],22],22],[[[15,[28]],28],28],[[[15,[20]],20],20],[[[15,[29]],29],29],[[[15,[24]],24],24],[[[15,[20]],20],20],[[[15,[6]],6],6],[[[15,[28]],28],28],[[[15,[25]],25],25],[[[15,[27]],27],27],[[[15,[18]],18],18],[[[15,[19]],19],19],[[[15,[26]],26],26],[[[15,[23]],23],23],[[[15,[21]],21],21],[[[15,[22]],22],22],[[[15,[21]],21],21],[[[15,[26]],26],26],[[[15,[28]],28],28],[[[15,[24]],24],24],[[[15,[19]],19],19],[[[15,[27]],27],27],[[[15,[20]],20],20],[[[15,[25]],25],25],[[[15,[18]],18],18],[[[15,[22]],22],22],[[[15,[23]],23],23],[[[15,[29]],29],29],[[[15,[[0,[16,17]]]],30],[[13,[[0,[16,17]],[0,[16,17]]]]]],[[[15,[19]],19],19],[[[15,[25]],25],25],[[[15,[6]],6],6],[[[15,[20]],20],20],[[[15,[28]],28],28],[[[15,[18]],18],18],[[[15,[22]],22],22],[[[15,[26]],26],26],[[[15,[21]],21],21],[[[15,[24]],24],24],[[[15,[29]],29],29],[[[15,[23]],23],23],[[[15,[27]],27],27],[[[15,[[0,[16,9]]]],7],8],[[],15],[[]],[10],[[]],[15],[[],6],[[[15,[16]]],16],[[]],[[],15],[15],[15],[[[15,[4]]],4],[[],13],[[],13],[[],14]],"c":[41],"p":[[8,"Clone"],[3,"CachePadded"],[3,"Backoff"],[8,"Default"],[8,"PartialEq"],[15,"bool"],[3,"Formatter"],[6,"Result"],[8,"Debug"],[15,"never"],[8,"Hash"],[8,"Hasher"],[4,"Result"],[3,"TypeId"],[3,"AtomicCell"],[8,"Copy"],[8,"Eq"],[15,"u16"],[15,"i64"],[15,"u64"],[15,"i32"],[15,"i128"],[15,"u32"],[15,"u128"],[15,"isize"],[15,"usize"],[15,"i8"],[15,"u8"],[15,"i16"],[8,"FnMut"],[8,"AtomicConsume"]]},\
"crossfont":{"doc":"Compatibility layer for different font engines.","t":"ENNEDDNDNDNNNNNNIDCNNDENENELMLMLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLAKLLLLLLLMLLLLLLLLLLLKMMKKLKLLLLLMLMMLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMKMMMDLLALLLLLLLLLLLNNNNNCCNCCNNNNNNNNCCCNENENNNENNNNNNCCNNCNCCNNENNNNNEENNNNNNNNEELLLLLLLLLLLLLLLLALLLLLLLLLLLLALLLLLLLLLLFFAFLLLLLLLLLLLLLLLLLLLLAALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLLDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDDDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["BitmapBuffer","Bold","Description","Error","FontDesc","FontKey","FontNotFound","GlyphKey","Italic","Metrics","MetricsNotFound","MissingGlyph","Normal","Normal","Oblique","PlatformError","Rasterize","RasterizedGlyph","Rasterizer","Rgb","Rgba","Size","Slant","Specific","Style","UnknownFontKey","Weight","add","advance","as_f32_pts","average_advance","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffer","character","character","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","default","descent","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","factor","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","font_key","from","from","from","from","from","from","from","from","from","from","from","from","from","ft","get_glyph","hash","hash","hash","hash","hash","hash","hash","height","into","into","into","into","into","into","into","into","into","into","into","kerning","left","line_height","load_font","metrics","mul","new","new","new","next","partial_cmp","provide","size","source","strikeout_position","strikeout_thickness","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","top","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","underline_position","underline_thickness","update_dpr","width","slant","weight","FreeTypeRasterizer","borrow","borrow_mut","fc","from","get_glyph","into","kerning","load_font","metrics","new","try_from","try_into","type_id","update_dpr","Application","Bgr","Black","Bold","Book","CharSet","CharSetRef","Condensed","Config","ConfigRef","Default","Expanded","Extrablack","Extrabold","Extracondensed","Extraexpanded","Extralight","Font","FontSet","FontSetRef","FtFaceLocation","Full","HintStyle","Italic","LcdFilter","Legacy","Light","Light","MatchKind","Medium","Medium","None","None","None","Normal","ObjectSet","ObjectSetRef","Oblique","Other","Pattern","Pattern","PatternHash","PatternRef","Regular","Rgb","Rgba","Roman","Scan","Semibold","Semicondensed","Semiexpanded","SetName","Slant","Slight","System","Thin","Ultracondensed","Ultraexpanded","Unknown","Vbgr","Vrgb","Weight","Width","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","char_set","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","config","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","font_list","font_match","font_set","font_sort","from","from","from","from","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","object_set","pattern","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update_config","CharSet","CharSetRef","add","as_mut","as_ptr","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","count","default","deref","deref_mut","drop","from","from","from_ptr","has_char","into","into","merge","new","subtract","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","union","Config","ConfigRef","as_mut","as_ptr","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","deref","deref_mut","drop","from","from","from_ptr","get_current","get_fonts","into","into","try_from","try_from","try_into","try_into","type_id","type_id","FontSet","FontSetRef","Iter","as_mut","as_ptr","as_ref","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deref","deref_mut","drop","from","from","from","from_ptr","into","into","into","into_iter","into_iter","into_iter","list","next","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","ObjectSet","ObjectSetRef","add_file","add_index","add_style","as_mut","as_ptr","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","default","deref","deref_mut","drop","from","from","from_ptr","into","into","new","try_from","try_from","try_into","try_into","type_id","type_id","BooleanPropertyIter","DoublePropertyIter","FtFaceLocation","HintStylePropertyIter","IntPropertyIter","LcdFilterPropertyIter","Pattern","PatternHash","PatternRef","RgbaPropertyIter","StringPropertyIter","add_capability","add_charset","add_family","add_familylang","add_fontfeatures","add_fontformat","add_foundry","add_fullname","add_fullnamelang","add_namelang","add_pixelsize","add_postscriptname","add_style","add_stylelang","antialias","as_mut","as_ptr","as_ref","aspect","autohint","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capability","clone","clone","clone_into","clone_into","color","config_substitute","decorative","default","default_substitute","deref","deref_mut","dpi","drop","embeddedbitmap","embolden","eq","eq","equivalent","equivalent","family","familylang","file","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fontfeatures","fontformat","foundry","from","from","from","from","from","from","from","from","from","from","from","from_ptr","ft_face_location","fullname","fullnamelang","get_charset","get_matrix","get_width","globaladvance","hash","hash","hash","hinting","hintstyle","index","index","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","lcdfilter","minspace","namelang","new","new","next","next","next","next","next","next","next","nth","nth","nth","nth","nth","nth","nth","path","pixelsize","pixelsizefixupfactor","postscriptname","print","render_prepare","rgba","scalable","scale","set_rgba","set_slant","set_weight","set_width","size","style","stylelang","symbol","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","verticallayout"],"q":[[0,"crossfont"],[210,"crossfont::Style"],[212,"crossfont::ft"],[227,"crossfont::ft::fc"],[390,"crossfont::ft::fc::char_set"],[427,"crossfont::ft::fc::config"],[454,"crossfont::ft::fc::font_set"],[492,"crossfont::ft::fc::object_set"],[522,"crossfont::ft::fc::pattern"]],"d":["","","","Errors occuring when using the rasterizer.","","Identifier for a Font for use in maps/etc.","Unable to find a font matching the description.","","","","Unable to find metrics for a font face.","The glyph could not be found in any font.","","","","Error from platfrom’s font system.","","","","RGB alphamask.","RGBA pixels with premultiplied alpha.","Font size stored as integer.","","","Style of font.","Requested an operation with a FontKey that isn’t known …","","","","Get the f32 size in points.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Scale factor between font “Size” type and point size.","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Rasterization powered by FreeType and Fontconfig.","Rasterize the glyph described by <code>GlyphKey</code>..","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Kerning between two characters.","","","Load the font described by <code>FontDesc</code> and <code>Size</code>.","Get <code>Metrics</code> for the given <code>FontKey</code>.","","Create a new Rasterizer.","","Create a new <code>Size</code> from a f32 size in points.","Get next font key for given size.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Update the Rasterizer’s DPI factor.","","","","Rasterizes glyphs for a single font face.","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Hinting Style.","","Lcd filter, used to reduce color fringing with subpixel …","","","","When matching, how to match.","","","","","","","","","","","","","","","","","Subpixel geometry.","","","","","","Available font sets.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","List fonts matching pattern.","Find the font closest matching the provided pattern.","","List fonts by closeness to the pattern.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Reloads the Fontconfig configuration files.","","A borrowed reference to a <code>CharSet</code>.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","A borrowed reference to a <code>Config</code>.","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Get the current configuration.","Returns one of the two sets of fonts from the …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","A borrowed reference to a <code>FontSet</code>.","Iterator over a font set.","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","A borrowed reference to a <code>ObjectSet</code>.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","Iterator over integer properties.","Iterator over integer properties.","","","Iterator over integer properties.","","","","A borrowed reference to a <code>Pattern</code>.","","","","Add charset to the pattern.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Get charset from the pattern.","Get matrix from the pattern.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Prints the pattern to stdout.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,6,7,0,0,0,17,0,5,0,17,17,5,6,5,17,0,0,0,11,11,0,0,7,0,17,0,1,10,1,12,4,5,6,7,8,9,1,10,11,12,17,4,5,6,7,8,9,1,10,11,12,17,10,9,10,4,5,6,7,8,9,1,10,11,12,4,5,6,7,8,9,1,10,11,12,1,10,12,4,5,6,7,8,9,1,4,5,6,7,8,9,1,1,4,4,5,6,7,7,8,9,1,10,11,12,17,17,9,4,5,6,7,8,9,1,1,10,11,12,17,17,0,69,4,5,6,7,8,9,1,10,4,5,6,7,8,9,1,10,11,12,17,69,10,12,69,69,1,69,4,1,8,1,17,9,17,12,12,4,5,6,7,8,9,1,10,11,12,4,7,17,10,4,5,6,7,8,9,1,10,11,12,17,4,5,6,7,8,9,1,10,11,12,17,4,5,6,7,8,9,1,10,11,12,17,12,12,69,10,70,70,0,27,27,0,27,27,27,27,27,27,27,27,27,27,27,28,35,31,31,31,0,0,32,0,0,34,32,31,31,32,32,31,29,0,0,0,33,0,30,0,34,34,31,0,31,33,34,35,33,32,0,0,30,32,0,29,0,0,31,35,0,30,29,31,32,32,0,0,33,28,31,32,32,35,35,35,0,0,34,28,29,30,31,32,35,33,34,28,29,30,31,32,35,33,0,28,29,30,31,32,33,28,29,30,31,32,33,0,34,28,29,30,31,32,35,35,33,33,0,0,0,0,34,28,29,30,30,31,31,32,32,35,35,33,34,28,29,30,31,32,35,33,0,0,28,29,30,31,32,33,34,35,33,34,28,29,30,31,32,35,33,34,28,29,30,31,32,35,33,34,28,29,30,31,32,35,33,0,0,0,42,44,44,44,44,44,42,44,44,42,44,44,42,44,44,44,44,44,42,44,42,44,42,42,44,42,44,42,44,42,44,42,44,42,42,0,0,47,47,47,47,47,36,47,47,36,47,47,47,47,36,47,47,36,47,36,47,36,47,36,47,36,0,0,0,39,39,39,51,39,39,49,51,39,39,49,39,39,39,51,39,49,39,51,39,49,51,39,49,39,51,51,39,49,51,39,49,51,39,49,0,0,38,38,38,52,52,52,52,52,38,52,52,38,52,52,52,52,52,38,52,52,38,52,52,38,52,38,52,38,0,0,0,0,0,0,0,0,0,0,0,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,40,40,40,37,37,59,56,64,65,66,67,58,40,40,37,60,61,59,56,64,65,66,67,58,40,40,37,60,61,37,40,60,40,60,37,37,37,40,37,40,40,37,40,37,37,60,61,60,61,37,37,37,59,56,64,65,66,67,58,60,61,37,37,37,59,56,64,65,66,67,58,40,37,60,61,40,37,37,37,37,37,37,37,37,60,61,37,37,37,61,59,56,64,65,66,67,58,40,37,60,61,59,56,64,65,66,67,58,37,37,37,40,61,59,56,64,65,66,67,58,59,56,64,65,66,67,58,61,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,40,37,60,59,56,64,65,66,67,58,40,37,60,61,59,56,64,65,66,67,58,40,37,60,61,59,56,64,65,66,67,58,40,37,60,61,37],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,[2,[1]]],1],0,[1,3],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[4,4],[5,5],[6,6],[7,7],[8,8],[9,9],[1,1],[10,10],[11,11],[12,12],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[1,1],13],[[],10],0,[[4,4],14],[[5,5],14],[[6,6],14],[[7,7],14],[[8,8],14],[[9,9],14],[[1,1],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],3],[[4,15],16],[[4,15],16],[[5,15],16],[[6,15],16],[[7,15],16],[[7,15],16],[[8,15],16],[[9,15],16],[[1,15],16],[[10,15],16],[[11,15],16],[[12,15],16],[[17,15],16],[[17,15],16],0,[[]],[[]],[[]],[[]],[[]],[[]],[3,1],[[]],[[]],[[]],[[]],[[]],[18,17],0,[9,[[19,[10,17]]]],[[4,20]],[[5,20]],[[6,20]],[[7,20]],[[8,20]],[[9,20]],[[1,20]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[9,9]],0,0,[[4,1],[[19,[8,17]]]],[[8,1],[[19,[12,17]]]],[[1,[2,[1]]],1],[3,[[19,[21,17]]]],[[[2,[22]],7],4],[3,1],[[],8],[[1,1],[[23,[13]]]],[24],0,[17,[[23,[25]]]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],22],[[],22],[[],22],0,[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],0,0,[3],0,0,0,0,[[]],[[]],0,[[]],[[27,9],[[19,[10,17]]]],[[]],[[27,9,9]],[[27,4,1],[[19,[8,17]]]],[[27,8,1],[[19,[12,17]]]],[3,[[19,[27,17]]]],[[],19],[[],19],[[],26],[[27,3]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[28,28],[29,29],[30,30],[31,31],[32,32],[33,33],[[]],[[]],[[]],[[]],[[]],[[]],0,[[34,15],16],[[28,15],16],[[29,15],16],[[30,15],16],[[31,15],16],[[32,15],16],[[35,15],16],[[35,15],16],[[33,15],16],[[33,15],16],[[36,37,38],[[23,[39]]]],[[36,37],[[23,[40]]]],0,[[36,37],[[23,[39]]]],[[]],[[]],[[]],[[]],[5,30],[[]],[6,31],[[]],[41,32],[[]],[41,35],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[],22],[[],22],[[],22],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[]],0,0,[[42,43],14],[44,42],[44,45],[44,42],[44,42],[[]],[[]],[[]],[44,42],[[]],[44,44],[[]],[42,46],[[],44],[44,42],[44,42],[44],[[]],[[]],[45,44],[[42,43],14],[[]],[[]],[[42,42]],[[],44],[[42,42],44],[[]],[42,44],[[],19],[[],19],[[],19],[[],19],[[],26],[[],26],[[42,42],44],0,0,[47,36],[47,48],[47,36],[[]],[47,36],[[]],[47,36],[[]],[[]],[47,36],[47,36],[47],[[]],[[]],[48,47],[[],36],[[36,28],49],[[]],[[]],[[],19],[[],19],[[],19],[[],19],[[],26],[[],26],0,0,0,[39,49],[39,50],[39,49],[[]],[39,49],[[]],[[]],[[]],[[]],[39,49],[[]],[39,49],[39,49],[39],[[]],[[]],[[]],[50,39],[[]],[[]],[[]],[[]],[39,51],[49,51],[[36,49,37,38],39],[51,23],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],26],[[],26],[[],26],0,0,[38],[38],[38],[52,38],[52,53],[52,38],[52,38],[[]],[[]],[[]],[52,38],[[]],[[],52],[52,38],[52,38],[52],[[]],[[]],[53,52],[[]],[[]],[[],52],[[],19],[[],19],[[],19],[[],19],[[],26],[[],26],0,0,0,0,0,0,0,0,0,0,0,[[37,54],14],[[37,42],14],[[37,54],14],[[37,54],14],[[37,54],14],[[37,54],14],[[37,54],14],[[37,54],14],[[37,54],14],[[37,54],14],[[37,55],14],[[37,54],14],[[37,54],14],[[37,54],14],[37,56],[40,37],[40,57],[40,37],[37,58],[37,56],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[40,37],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[40,37],[[]],[[]],[[]],[[]],[37,59],[40,40],[60,60],[[]],[[]],[37,56],[[37,36,29]],[37,56],[[],40],[37],[40,37],[40,37],[37,58],[40],[37,56],[37,56],[[60,60],14],[[61,61],14],[[],14],[[],14],[37,59],[37,59],[[37,62],[[23,[63]]]],[[59,15],16],[[56,15],16],[[64,15],16],[[65,15],16],[[66,15],16],[[67,15],16],[[58,15],16],[[60,15],16],[[61,15],16],[37,59],[37,59],[37,59],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[57,40],[[37,62],[[23,[61]]]],[37,59],[37,59],[37,[[23,[42]]]],[37,[[23,[68]]]],[37,[[23,[32]]]],[37,56],[37,60],[[60,20]],[[61,20]],[37,56],[37,66],[37,64],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[37,67],[37,56],[37,59],[[],40],[[63,41],61],[59,23],[56,23],[64,23],[65,23],[66,23],[67,23],[58,23],[[59,62],23],[[56,62],23],[[64,62],23],[[65,62],23],[[66,62],23],[[67,62],23],[[58,62],23],0,[37,58],[37,58],[37,59],[37],[[37,36,37],40],[37,65],[37,56],[37,58],[[37,35],14],[[37,30],14],[[37,31],14],[[37,32],14],[37,58],[37,59],[37,59],[37,56],[[]],[37,40],[[]],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[37,56]],"c":[],"p":[[3,"Size"],[8,"Into"],[15,"f32"],[3,"FontDesc"],[4,"Slant"],[4,"Weight"],[4,"Style"],[3,"FontKey"],[3,"GlyphKey"],[3,"RasterizedGlyph"],[4,"BitmapBuffer"],[3,"Metrics"],[4,"Ordering"],[15,"bool"],[3,"Formatter"],[6,"Result"],[4,"Error"],[4,"Error"],[4,"Result"],[8,"Hasher"],[8,"Sized"],[3,"String"],[4,"Option"],[3,"Demand"],[8,"Error"],[3,"TypeId"],[3,"FreeTypeRasterizer"],[4,"SetName"],[4,"MatchKind"],[4,"Slant"],[4,"Weight"],[4,"Width"],[4,"HintStyle"],[4,"LcdFilter"],[4,"Rgba"],[3,"ConfigRef"],[3,"PatternRef"],[3,"ObjectSetRef"],[3,"FontSet"],[3,"Pattern"],[15,"isize"],[3,"CharSetRef"],[15,"char"],[3,"CharSet"],[6,"FcCharSet"],[15,"u32"],[3,"Config"],[6,"FcConfig"],[3,"FontSetRef"],[6,"FcFontSet"],[3,"Iter"],[3,"ObjectSet"],[6,"FcObjectSet"],[15,"str"],[15,"f64"],[3,"BooleanPropertyIter"],[6,"FcPattern"],[3,"DoublePropertyIter"],[3,"StringPropertyIter"],[3,"PatternHash"],[3,"FtFaceLocation"],[15,"usize"],[3,"PathBuf"],[3,"IntPropertyIter"],[3,"RgbaPropertyIter"],[3,"HintStylePropertyIter"],[3,"LcdFilterPropertyIter"],[6,"FcMatrix"],[8,"Rasterize"],[13,"Description"]]},\
"dlib":{"doc":"dlib is a small crate providing macros to make easy the …","t":"NNNNNENNNNNNNNNNNENNNLLLLOOOLLLLLLLLLLLLLLLLLLLLMMMMMMMMM","n":["CantOpen","CreateCString","CreateCStringWithTrailing","DlClose","DlCloseUnknown","DlError","DlOpen","DlOpenUnknown","DlSym","DlSymUnknown","FreeLibrary","FreeLibraryUnknown","GetModuleHandleExW","GetModuleHandleExWUnknown","GetProcAddress","GetProcAddressUnknown","IncompatibleSize","LibLoadingError","LoadLibraryExW","LoadLibraryExWUnknown","MissingSymbol","borrow","borrow","borrow_mut","borrow_mut","external_library","ffi_dispatch","ffi_dispatch_static","fmt","fmt","fmt","fmt","from","from","into","into","provide","provide","source","source","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id","desc","desc","desc","source","source","source","source","source","source"],"q":[[0,"dlib"],[48,"dlib::LibLoadingError"]],"d":["The requested library would not be opened","Could not create a new CString.","Could not create a new CString from bytes with trailing …","The <code>dlclose</code> call failed.","The <code>dlclose</code> call failed and system did not report an error.","An error generated when failing to load a library","The <code>dlopen</code> call failed.","The <code>dlopen</code> call failed and system did not report an error.","The <code>dlsym</code> call failed.","The <code>dlsym</code> call failed and system did not report an error.","The <code>FreeLibrary</code> call failed.","The <code>FreeLibrary</code> call failed and system did not report an …","The <code>GetModuleHandleExW</code> call failed.","The <code>GetModuleHandleExW</code> call failed and system did not …","The <code>GetProcAddress</code> call failed.","The <code>GetProcAddressUnknown</code> call failed and system did not …","The requested type cannot possibly work.","Errors.","The <code>LoadLibraryW</code> call failed.","The <code>LoadLibraryW</code> call failed and system did not report an …","Some required symbol was missing in the library","","","","","Main macro of this library, used to generate the the FFI …","Macro for generically invoking a FFI function","Macro for generically accessing a FFI static","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","The source error.","The source error.","The source error.","The source error.","The source error.","The source error.","The source error.","The source error.","The source error."],"i":[1,4,4,4,4,0,4,4,4,4,4,4,4,4,4,4,4,0,4,4,1,1,4,1,4,0,0,0,1,1,4,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,12,13,14,15,16,17,18,19,20],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],0,0,0,[[1,2],3],[[1,2],3],[[4,2],[[6,[5]]]],[[4,2],[[6,[5]]]],[[]],[[]],[[]],[[]],[7],[7],[1,[[9,[8]]]],[4,[[9,[8]]]],[[],10],[[],10],[[],6],[[],6],[[],6],[[],6],[[],11],[[],11],0,0,0,0,0,0,0,0,0],"c":[],"p":[[4,"DlError"],[3,"Formatter"],[6,"Result"],[4,"LibLoadingError"],[3,"Error"],[4,"Result"],[3,"Demand"],[8,"Error"],[4,"Option"],[3,"String"],[3,"TypeId"],[13,"DlOpen"],[13,"DlSym"],[13,"DlClose"],[13,"LoadLibraryExW"],[13,"GetModuleHandleExW"],[13,"GetProcAddress"],[13,"FreeLibrary"],[13,"CreateCString"],[13,"CreateCStringWithTrailing"]]},\
"doryen_rs":{"doc":"","t":"DDRRRRRRRRRRRRRNNGDRRIINDDIDNNEELLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKFFFFFKMMLLMLKLLLLLLLLMLLLLLLLKLLLLLKMLLLLLLLLLKKKKKLMKKKKLLLLLLLLLLLLKMLLLLMMLKMKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLM","n":["App","AppOptions","CHAR_CORNER_NE","CHAR_CORNER_NW","CHAR_CORNER_SE","CHAR_CORNER_SW","CHAR_LINE_H","CHAR_LINE_V","CHAR_SUBP_DIAG","CHAR_SUBP_E","CHAR_SUBP_N","CHAR_SUBP_NE","CHAR_SUBP_NW","CHAR_SUBP_SE","CHAR_SUBP_SW","Capture","Center","Color","Console","DEFAULT_CONSOLE_HEIGHT","DEFAULT_CONSOLE_WIDTH","DoryenApi","Engine","Exit","FileLoader","Image","InputApi","Keys","Left","Right","TextAlign","UpdateEvent","area","ascii","average_fps","back","blit","blit","blit_2x","blit_2x_image","blit_ex","blit_ex","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_ascii","borrow_background","borrow_foreground","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut_ascii","borrow_mut_background","borrow_mut_foreground","cell","check_file_ready","clear","clone","clone_into","close_requested","color_add","color_blend","color_dist","color_mul","color_scale","con","console_height","console_width","default","default","font_path","fore","fps","from","from","from","from","from","from","from","from","fullscreen","get_ascii","get_back","get_file_content","get_fore","get_height","get_pot_height","get_pot_width","get_screen_size","get_size","get_width","height","init","init","input","intercept_close_request","into","into","into","into","into","into","into","into","into_iter","key","key_pressed","key_released","keys_pressed","keys_released","load_file","max_fps","mouse_button","mouse_button_pressed","mouse_button_released","mouse_pos","new","new","new","new","new_empty","next","pixel","print","print_color","put_pixel","rectangle","register_color","render","resizable","resize","resize","resize","run","screen_height","screen_width","set_engine","set_font_path","show_cursor","text","text_color_len","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_get_size","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_load","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unsafe_ascii","unsafe_back","unsafe_fore","unsafe_get_ascii","unsafe_get_back","unsafe_get_fore","update","update","vsync","width","window_title"],"q":[[0,"doryen_rs"]],"d":["This is the game application. It handles the creation of …","","","","","","","","","","","","","","","Save a screenshot. parameter = file path. The file name …","","","This contains the data for a console (including the one …","","","This is the complete doryen-rs API provided to you by <code>App</code> …","This is the trait you must implement to update and render …","end the program","This provides a common way to load files for both native …","An easy way to load PNG images and blit them on the console","Provides information about user input. Possible values for …","An iterator visiting all keys in arbitrary order.","","","","What is returned by the <code>Engine::update</code> function","fill an area with values","set the character at a specific position (doesn’t change …","return the average framerate since the start of the game","set the background color at a specific position","blit (draw) a console onto another one You can use …","blit an image on a console","blit an image on the console, using the subcell characters …","blit an image on a console. See <code>Image::blit_2x</code>","blit a region of this console onto another one. see …","blit an image on a console","","","","","","","","","for fast reading of the characters values","for fast reading of the background colors","for fast reading of the characters colors","","","","","","","","","for fast writing of the characters values","for fast writing of the background colors","for fast writing of the characters colors","can change all properties of a console cell at once","return true if the file is ready in memory","fill the whole console with values","","","Whether the window close button was clicked","","","","","","return the root console that you can use to draw things on …","the console height in characters. Default is 45","the console width in characters. Default is 80","","","the font to use. See <code>DoryenApi::set_font_path</code>. Default is …","set the character color at a specific position","return the current framerate","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Native only. Might not work on every platforms. Default is …","get the ascii code of a cell (if x,y inside the console)","get the background color of a cell (if x,y inside the …","retrieve the file content","get the foreground color of a cell (if x,y inside the …","","","","return the current screen size","","","Returns the image’s height in pixels or 0 if the image …","Called before the first game loop for one time …","Called before the first game loop for one time …","return the input API to check user mouse and keyboard input","Intercepts clicks on the window close button. Can be …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","return the current status of a key (true if pressed)","return true if a key was pressed since last update.","return true if a key was released since last update.","return an iterator over all the keys that were pressed …","return an iterator over all the keys that were released …","request to load a file. returns an id you can use with …","Limit the number of frames per second to lower CPU …","return the current status of a mouse button (true if …","return true if a mouse button was pressed since last …","return true if a mouse button was released since last …","return the current mouse position in console cells …","","create a new offscreen console that you can blit on …","Create an image and load a PNG file. On the web platform, …","","Create an empty image.","","get the color of a specific pixel inside the image","write a string. If the string reaches the border of the …","write a multi-color string. Foreground color is defined by …","sets the color of a specific pixel inside the image","draw a rectangle, possibly filling it with a character.","associate a name with a color for this console. The color …","This is called before drawing the console on the screen. …","Whether the game window can be resized. Default is true.","This is called when the size of the game window has …","This is called when the size of the game window has …","resizes the console","","the game window height in pixels","the game window width in pixels","","replace the current font by a new one. Put your font in …","Whether the mouse cursor should be visible in the game …","characters typed since last update","compute the length of a string containing color codes. …","","","","","","","","","","If the image has already been loaded, return its size, …","","","","","","","","","Check if the image has been loaded. Since there’s no …","","","","","","","","","set the character at a specific position (no boundary …","set the background color at a specific position (no …","set the character color at a specific position (no …","get the ascii code of a cell (no boundary check)","get the background color of a cell (no boundary check)","get the foreground color of a cell (no boundary check)","This is called 60 times per second and is independant of …","This is called 60 times per second and is independant of …","whether framerate are limited by the screen frequency. On …","Returns the image’s width in pixels or 0 if the image …","the title of the game window (only in native mode)"],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,27,14,0,0,0,0,0,0,27,0,0,0,0,14,14,0,0,1,1,17,1,1,8,8,8,1,8,27,15,23,1,8,20,14,11,1,1,1,27,15,23,1,8,20,14,11,1,1,1,1,11,1,14,14,18,0,0,0,0,0,17,15,15,15,11,15,1,17,27,15,23,1,8,20,14,11,15,1,1,11,1,1,1,1,17,1,1,8,24,24,17,15,27,15,23,1,8,20,14,11,20,18,18,18,18,18,11,15,18,18,18,18,23,1,8,11,8,20,8,1,1,8,1,1,24,15,24,24,1,23,15,15,23,17,15,18,1,14,27,15,23,1,8,20,14,11,8,27,15,23,1,8,20,14,11,8,27,15,23,1,8,20,14,11,1,1,1,1,1,1,24,24,15,8,15],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,2,2,3,3,[5,[4]],[5,[4]],[5,[6]]]],[[1,2,2,6]],[[],3],[[1,2,2,4]],[[1,2,2,1,7,7,[5,[4]]]],[[8,1,2,2,[5,[4]]]],[[8,1,2,2,2,2,[5,[2]],[5,[2]],[5,[4]]]],[[9,1,2,2,2,2,[5,[2]],[5,[2]],[5,[4]]]],[[1,2,2,2,2,1,2,2,7,7,[5,[4]]]],[[8,1,7,7,7,7,7,[5,[4]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,[[10,[3]]]],[1,[[10,[4]]]],[1,[[10,[4]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,[[10,[3]]]],[1,[[10,[4]]]],[1,[[10,[4]]]],[[1,2,2,[5,[6]],[5,[4]],[5,[4]]]],[[11,12],13],[[1,[5,[4]],[5,[4]],[5,[6]]]],[14,14],[[]],[[],13],[[4,4],4],[[4,4,7],4],[[4,4],2],[[4,4],4],[[4,7],4],[[],1],0,0,[[],15],[[],11],0,[[1,2,2,4]],[[],3],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[1,2,2],[[5,[6]]]],[[1,2,2],[[5,[4]]]],[[11,12],[[10,[16]]]],[[1,2,2],[[5,[4]]]],[1,3],[1,3],[1,3],[[]],[1],[1,3],[8,3],[17],[17],[[],18],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[19,13],[19,13],[19,13],[[],20],[[],20],[[11,19],[[22,[12,21]]]],0,[12,13],[12,13],[12,13],[[]],[15,23],[[3,3],1],[19,8],[[],11],[[3,3],8],[20,5],[[8,3,3],[[5,[4]]]],[[1,2,2,19,14,[5,[4]],[5,[4]]]],[[1,2,2,19,14,[5,[4]]]],[[8,3,3,4]],[[1,2,2,3,3,[5,[4]],[5,[4]],[5,[6]]]],[[1,19,4]],[17],0,[17],[17],[[1,3,3]],[23],0,0,[[23,[25,[24]]]],[19],0,[[],21],[19,12],[[]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[8,5],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[8,13],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[1,2,2,6]],[[1,2,2,4]],[[1,2,2,4]],[[1,2,2],6],[[1,2,2],4],[[1,2,2],4],[17,[[5,[27]]]],[17,[[5,[27]]]],0,[8,3],0],"c":[],"p":[[3,"Console"],[15,"i32"],[15,"u32"],[6,"Color"],[4,"Option"],[15,"u16"],[15,"f32"],[3,"Image"],[6,"RgbaImage"],[3,"Vec"],[3,"FileLoader"],[15,"usize"],[15,"bool"],[4,"TextAlign"],[3,"AppOptions"],[15,"u8"],[8,"DoryenApi"],[8,"InputApi"],[15,"str"],[3,"Keys"],[3,"String"],[4,"Result"],[3,"App"],[8,"Engine"],[3,"Box"],[3,"TypeId"],[4,"UpdateEvent"]]},\
"downcast_rs":{"doc":"Build status Latest version Documentation","t":"IIKKOKKK","n":["Downcast","DowncastSync","as_any","as_any_mut","impl_downcast","into_any","into_any_arc","into_any_rc"],"q":[[0,"downcast_rs"]],"d":["Supports conversion to <code>Any</code>. Traits to be extended by …","Extends <code>Downcast</code> to support <code>Sync</code> traits that thus support …","Convert <code>&amp;Trait</code> (where <code>Trait: Downcast</code>) to <code>&amp;Any</code>. This is …","Convert <code>&amp;mut Trait</code> (where <code>Trait: Downcast</code>) to <code>&amp;Any</code>. This …","Adds downcasting support to traits that extend …","Convert <code>Box&lt;dyn Trait&gt;</code> (where <code>Trait: Downcast</code>) to …","Convert <code>Arc&lt;Trait&gt;</code> (where <code>Trait: Downcast</code>) to <code>Arc&lt;Any&gt;</code>. …","Convert <code>Rc&lt;Trait&gt;</code> (where <code>Trait: Downcast</code>) to <code>Rc&lt;Any&gt;</code>. …"],"i":[0,0,5,5,0,5,6,5],"f":[0,0,[[],1],[[],1],0,[2,[[2,[1]]]],[3,[[3,[1]]]],[4,[[4,[1]]]]],"c":[],"p":[[8,"Any"],[3,"Box"],[3,"Arc"],[3,"Rc"],[8,"Downcast"],[8,"DowncastSync"]]},\
"erased_serde":{"doc":"github crates-io docs-rs","t":"IDGIILLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLOLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["Deserializer","Error","Result","Serialize","Serializer","borrow","borrow_mut","custom","custom","deserialize","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","erase","erase","erased_deserialize_any","erased_deserialize_bool","erased_deserialize_byte_buf","erased_deserialize_bytes","erased_deserialize_char","erased_deserialize_enum","erased_deserialize_f32","erased_deserialize_f64","erased_deserialize_i128","erased_deserialize_i16","erased_deserialize_i32","erased_deserialize_i64","erased_deserialize_i8","erased_deserialize_identifier","erased_deserialize_ignored_any","erased_deserialize_map","erased_deserialize_newtype_struct","erased_deserialize_option","erased_deserialize_seq","erased_deserialize_str","erased_deserialize_string","erased_deserialize_struct","erased_deserialize_tuple","erased_deserialize_tuple_struct","erased_deserialize_u128","erased_deserialize_u16","erased_deserialize_u32","erased_deserialize_u64","erased_deserialize_u8","erased_deserialize_unit","erased_deserialize_unit_struct","erased_is_human_readable","erased_is_human_readable","erased_serialize","erased_serialize_bool","erased_serialize_bytes","erased_serialize_char","erased_serialize_f32","erased_serialize_f64","erased_serialize_i128","erased_serialize_i16","erased_serialize_i32","erased_serialize_i64","erased_serialize_i8","erased_serialize_map","erased_serialize_newtype_struct","erased_serialize_newtype_variant","erased_serialize_none","erased_serialize_seq","erased_serialize_some","erased_serialize_str","erased_serialize_struct","erased_serialize_struct_variant","erased_serialize_tuple","erased_serialize_tuple_struct","erased_serialize_tuple_variant","erased_serialize_u128","erased_serialize_u16","erased_serialize_u32","erased_serialize_u64","erased_serialize_u8","erased_serialize_unit","erased_serialize_unit_struct","erased_serialize_unit_variant","fmt","fmt","from","into","is_human_readable","is_human_readable","is_human_readable","is_human_readable","is_human_readable","is_human_readable","is_human_readable","is_human_readable","provide","serialize","serialize","serialize","serialize","serialize","serialize_bool","serialize_bool","serialize_bool","serialize_bool","serialize_bytes","serialize_bytes","serialize_bytes","serialize_bytes","serialize_char","serialize_char","serialize_char","serialize_char","serialize_f32","serialize_f32","serialize_f32","serialize_f32","serialize_f64","serialize_f64","serialize_f64","serialize_f64","serialize_i128","serialize_i128","serialize_i128","serialize_i128","serialize_i16","serialize_i16","serialize_i16","serialize_i16","serialize_i32","serialize_i32","serialize_i32","serialize_i32","serialize_i64","serialize_i64","serialize_i64","serialize_i64","serialize_i8","serialize_i8","serialize_i8","serialize_i8","serialize_map","serialize_map","serialize_map","serialize_map","serialize_newtype_struct","serialize_newtype_struct","serialize_newtype_struct","serialize_newtype_struct","serialize_newtype_variant","serialize_newtype_variant","serialize_newtype_variant","serialize_newtype_variant","serialize_none","serialize_none","serialize_none","serialize_none","serialize_seq","serialize_seq","serialize_seq","serialize_seq","serialize_some","serialize_some","serialize_some","serialize_some","serialize_str","serialize_str","serialize_str","serialize_str","serialize_struct","serialize_struct","serialize_struct","serialize_struct","serialize_struct_variant","serialize_struct_variant","serialize_struct_variant","serialize_struct_variant","serialize_trait_object","serialize_tuple","serialize_tuple","serialize_tuple","serialize_tuple","serialize_tuple_struct","serialize_tuple_struct","serialize_tuple_struct","serialize_tuple_struct","serialize_tuple_variant","serialize_tuple_variant","serialize_tuple_variant","serialize_tuple_variant","serialize_u128","serialize_u128","serialize_u128","serialize_u128","serialize_u16","serialize_u16","serialize_u16","serialize_u16","serialize_u32","serialize_u32","serialize_u32","serialize_u32","serialize_u64","serialize_u64","serialize_u64","serialize_u64","serialize_u8","serialize_u8","serialize_u8","serialize_u8","serialize_unit","serialize_unit","serialize_unit","serialize_unit","serialize_unit_struct","serialize_unit_struct","serialize_unit_struct","serialize_unit_struct","serialize_unit_variant","serialize_unit_variant","serialize_unit_variant","serialize_unit_variant","to_string","try_from","try_into","type_id"],"q":[[0,"erased_serde"]],"d":["An object-safe equivalent of Serde’s <code>Deserializer</code> trait.","Error when a <code>Serializer</code> or <code>Deserializer</code> trait object fails.","Result type alias where the error is <code>erased_serde::Error</code>.","An object-safe equivalent of Serde’s <code>Serialize</code> trait.","An object-safe equivalent of Serde’s <code>Serializer</code> trait.","","","","","Deserialize a value of type <code>T</code> from the given trait object.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Convert any Serde <code>Deserializer</code> to a trait object.","Convert any Serde <code>Serializer</code> to a trait object.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","Serialize the given type-erased serializable value.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Implement <code>serde::Serialize</code> for a trait object that has …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,2,2,2,2,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,13,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,13,24,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,2,2,2,2,3,3,3,3,13,13,13,13,2,0,24,24,24,24,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,0,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,2,2,2,2],"f":[0,0,0,0,0,[[]],[[]],[1,2],[1,2],[3,[[5,[4,2]]]],[[3,6],[[5,[2]]]],[[3,6],[[5,[2]]]],[[3,6],[[5,[2]]]],[[3,6],[[5,[2]]]],[[3,6],[[5,[2]]]],[[3,6],[[5,[2]]]],[[3,6],[[5,[2]]]],[[3,6],[[5,[2]]]],[[3,6],[[5,[2]]]],[[3,6],[[5,[2]]]],[[3,6],[[5,[2]]]],[[3,6],[[5,[2]]]],[[3,6],[[5,[2]]]],[[3,6],[[5,[2]]]],[[3,6],[[5,[2]]]],[[3,6],[[5,[2]]]],[[3,6],[[5,[2]]]],[[3,6],[[5,[2]]]],[[3,6],[[5,[2]]]],[[3,6],[[5,[2]]]],[[3,7,[8,[7]],6],[[5,[2]]]],[[3,7,[8,[7]],6],[[5,[2]]]],[[3,7,[8,[7]],6],[[5,[2]]]],[[3,7,[8,[7]],6],[[5,[2]]]],[[3,6],[[5,[2]]]],[[3,6],[[5,[2]]]],[[3,6],[[5,[2]]]],[[3,6],[[5,[2]]]],[[3,6],[[5,[2]]]],[[3,6],[[5,[2]]]],[[3,6],[[5,[2]]]],[[3,6],[[5,[2]]]],[[3,6],[[5,[2]]]],[[3,6],[[5,[2]]]],[[3,6],[[5,[2]]]],[[3,6],[[5,[2]]]],[[3,6],[[5,[2]]]],[[3,6],[[5,[2]]]],[[3,6],[[5,[2]]]],[[3,6],[[5,[2]]]],[[3,6],[[5,[2]]]],[[3,6],[[5,[2]]]],[[3,6],[[5,[2]]]],[[3,6],[[5,[2]]]],[[3,6],[[5,[2]]]],[[3,6],[[5,[2]]]],[[3,6],[[5,[2]]]],[[3,6],[[5,[2]]]],[[3,6],[[5,[2]]]],[[3,6],[[5,[2]]]],[[3,6],[[5,[2]]]],[[3,6],[[5,[2]]]],[[3,6],[[5,[2]]]],[[3,6],[[5,[2]]]],[[3,6],[[5,[2]]]],[[3,6],[[5,[2]]]],[[3,6],[[5,[2]]]],[[3,6],[[5,[2]]]],[[3,6],[[5,[2]]]],[[3,6],[[5,[2]]]],[[3,6],[[5,[2]]]],[[3,6],[[5,[2]]]],[[3,6],[[5,[2]]]],[[3,6],[[5,[2]]]],[[3,7,6],[[5,[2]]]],[[3,7,6],[[5,[2]]]],[[3,7,6],[[5,[2]]]],[[3,7,6],[[5,[2]]]],[[3,6],[[5,[2]]]],[[3,6],[[5,[2]]]],[[3,6],[[5,[2]]]],[[3,6],[[5,[2]]]],[[3,6],[[5,[2]]]],[[3,6],[[5,[2]]]],[[3,6],[[5,[2]]]],[[3,6],[[5,[2]]]],[[3,6],[[5,[2]]]],[[3,6],[[5,[2]]]],[[3,6],[[5,[2]]]],[[3,6],[[5,[2]]]],[[3,6],[[5,[2]]]],[[3,6],[[5,[2]]]],[[3,6],[[5,[2]]]],[[3,6],[[5,[2]]]],[[3,7,[8,[7]],6],[[5,[2]]]],[[3,7,[8,[7]],6],[[5,[2]]]],[[3,7,[8,[7]],6],[[5,[2]]]],[[3,7,[8,[7]],6],[[5,[2]]]],[[3,9,6],[[5,[2]]]],[[3,9,6],[[5,[2]]]],[[3,9,6],[[5,[2]]]],[[3,9,6],[[5,[2]]]],[[3,7,9,6],[[5,[2]]]],[[3,7,9,6],[[5,[2]]]],[[3,7,9,6],[[5,[2]]]],[[3,7,9,6],[[5,[2]]]],[[3,6],[[5,[2]]]],[[3,6],[[5,[2]]]],[[3,6],[[5,[2]]]],[[3,6],[[5,[2]]]],[[3,6],[[5,[2]]]],[[3,6],[[5,[2]]]],[[3,6],[[5,[2]]]],[[3,6],[[5,[2]]]],[[3,6],[[5,[2]]]],[[3,6],[[5,[2]]]],[[3,6],[[5,[2]]]],[[3,6],[[5,[2]]]],[[3,6],[[5,[2]]]],[[3,6],[[5,[2]]]],[[3,6],[[5,[2]]]],[[3,6],[[5,[2]]]],[[3,6],[[5,[2]]]],[[3,6],[[5,[2]]]],[[3,6],[[5,[2]]]],[[3,6],[[5,[2]]]],[[3,6],[[5,[2]]]],[[3,6],[[5,[2]]]],[[3,6],[[5,[2]]]],[[3,6],[[5,[2]]]],[[3,7,6],[[5,[2]]]],[[3,7,6],[[5,[2]]]],[[3,7,6],[[5,[2]]]],[[3,7,6],[[5,[2]]]],[10,[[0,[10]]]],[11,[[0,[11]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],12],[[],12],[13,[[5,[0,2]]]],[12,[[5,[0,2]]]],[[[8,[14]]],[[5,[0,2]]]],[15,[[5,[0,2]]]],[16,[[5,[0,2]]]],[17,[[5,[0,2]]]],[18,[[5,[0,2]]]],[19,[[5,[0,2]]]],[20,[[5,[0,2]]]],[21,[[5,[0,2]]]],[22,[[5,[0,2]]]],[[[23,[9]]],[[5,[0,2]]]],[[7,24],[[5,[0,2]]]],[[7,25,7,24],[[5,[0,2]]]],[[],[[5,[0,2]]]],[[[23,[9]]],[[5,[0,2]]]],[24,[[5,[0,2]]]],[7,[[5,[0,2]]]],[[7,9],[[5,[0,2]]]],[[7,25,7,9],[[5,[0,2]]]],[9,[[5,[0,2]]]],[[7,9],[[5,[0,2]]]],[[7,25,7,9],[[5,[0,2]]]],[26,[[5,[0,2]]]],[27,[[5,[0,2]]]],[25,[[5,[0,2]]]],[28,[[5,[0,2]]]],[14,[[5,[0,2]]]],[[],[[5,[0,2]]]],[7,[[5,[0,2]]]],[[7,25,7],[[5,[0,2]]]],[[2,29],30],[[2,29],30],[[]],[[]],[3,12],[3,12],[3,12],[3,12],[13,12],[13,12],[13,12],[13,12],[31],[[[0,[32,24]],11],5],[[24,11],5],[[24,11],5],[[24,11],5],[[24,11],5],[[13,12],[[5,[0,2]]]],[[13,12],[[5,[0,2]]]],[[13,12],[[5,[0,2]]]],[[13,12],[[5,[0,2]]]],[[13,[8,[14]]],[[5,[0,2]]]],[[13,[8,[14]]],[[5,[0,2]]]],[[13,[8,[14]]],[[5,[0,2]]]],[[13,[8,[14]]],[[5,[0,2]]]],[[13,15],[[5,[0,2]]]],[[13,15],[[5,[0,2]]]],[[13,15],[[5,[0,2]]]],[[13,15],[[5,[0,2]]]],[[13,16],[[5,[0,2]]]],[[13,16],[[5,[0,2]]]],[[13,16],[[5,[0,2]]]],[[13,16],[[5,[0,2]]]],[[13,17],[[5,[0,2]]]],[[13,17],[[5,[0,2]]]],[[13,17],[[5,[0,2]]]],[[13,17],[[5,[0,2]]]],[[13,18],[[5,[0,2]]]],[[13,18],[[5,[0,2]]]],[[13,18],[[5,[0,2]]]],[[13,18],[[5,[0,2]]]],[[13,19],[[5,[0,2]]]],[[13,19],[[5,[0,2]]]],[[13,19],[[5,[0,2]]]],[[13,19],[[5,[0,2]]]],[[13,20],[[5,[0,2]]]],[[13,20],[[5,[0,2]]]],[[13,20],[[5,[0,2]]]],[[13,20],[[5,[0,2]]]],[[13,21],[[5,[0,2]]]],[[13,21],[[5,[0,2]]]],[[13,21],[[5,[0,2]]]],[[13,21],[[5,[0,2]]]],[[13,22],[[5,[0,2]]]],[[13,22],[[5,[0,2]]]],[[13,22],[[5,[0,2]]]],[[13,22],[[5,[0,2]]]],[[13,[23,[9]]],[[5,[0,2]]]],[[13,[23,[9]]],[[5,[0,2]]]],[[13,[23,[9]]],[[5,[0,2]]]],[[13,[23,[9]]],[[5,[0,2]]]],[[13,7,[0,[32,33]]],[[5,[0,2]]]],[[13,7,[0,[32,33]]],[[5,[0,2]]]],[[13,7,[0,[32,33]]],[[5,[0,2]]]],[[13,7,[0,[32,33]]],[[5,[0,2]]]],[[13,7,25,7,[0,[32,33]]],[[5,[0,2]]]],[[13,7,25,7,[0,[32,33]]],[[5,[0,2]]]],[[13,7,25,7,[0,[32,33]]],[[5,[0,2]]]],[[13,7,25,7,[0,[32,33]]],[[5,[0,2]]]],[13,[[5,[0,2]]]],[13,[[5,[0,2]]]],[13,[[5,[0,2]]]],[13,[[5,[0,2]]]],[[13,[23,[9]]],[[5,[0,2]]]],[[13,[23,[9]]],[[5,[0,2]]]],[[13,[23,[9]]],[[5,[0,2]]]],[[13,[23,[9]]],[[5,[0,2]]]],[[13,[0,[32,33]]],[[5,[0,2]]]],[[13,[0,[32,33]]],[[5,[0,2]]]],[[13,[0,[32,33]]],[[5,[0,2]]]],[[13,[0,[32,33]]],[[5,[0,2]]]],[[13,7],[[5,[0,2]]]],[[13,7],[[5,[0,2]]]],[[13,7],[[5,[0,2]]]],[[13,7],[[5,[0,2]]]],[[13,7,9],[[5,[0,2]]]],[[13,7,9],[[5,[0,2]]]],[[13,7,9],[[5,[0,2]]]],[[13,7,9],[[5,[0,2]]]],[[13,7,25,7,9],[[5,[0,2]]]],[[13,7,25,7,9],[[5,[0,2]]]],[[13,7,25,7,9],[[5,[0,2]]]],[[13,7,25,7,9],[[5,[0,2]]]],0,[[13,9],[[5,[0,2]]]],[[13,9],[[5,[0,2]]]],[[13,9],[[5,[0,2]]]],[[13,9],[[5,[0,2]]]],[[13,7,9],[[5,[0,2]]]],[[13,7,9],[[5,[0,2]]]],[[13,7,9],[[5,[0,2]]]],[[13,7,9],[[5,[0,2]]]],[[13,7,25,7,9],[[5,[0,2]]]],[[13,7,25,7,9],[[5,[0,2]]]],[[13,7,25,7,9],[[5,[0,2]]]],[[13,7,25,7,9],[[5,[0,2]]]],[[13,26],[[5,[0,2]]]],[[13,26],[[5,[0,2]]]],[[13,26],[[5,[0,2]]]],[[13,26],[[5,[0,2]]]],[[13,27],[[5,[0,2]]]],[[13,27],[[5,[0,2]]]],[[13,27],[[5,[0,2]]]],[[13,27],[[5,[0,2]]]],[[13,25],[[5,[0,2]]]],[[13,25],[[5,[0,2]]]],[[13,25],[[5,[0,2]]]],[[13,25],[[5,[0,2]]]],[[13,28],[[5,[0,2]]]],[[13,28],[[5,[0,2]]]],[[13,28],[[5,[0,2]]]],[[13,28],[[5,[0,2]]]],[[13,14],[[5,[0,2]]]],[[13,14],[[5,[0,2]]]],[[13,14],[[5,[0,2]]]],[[13,14],[[5,[0,2]]]],[13,[[5,[0,2]]]],[13,[[5,[0,2]]]],[13,[[5,[0,2]]]],[13,[[5,[0,2]]]],[[13,7],[[5,[0,2]]]],[[13,7],[[5,[0,2]]]],[[13,7],[[5,[0,2]]]],[[13,7],[[5,[0,2]]]],[[13,7,25,7],[[5,[0,2]]]],[[13,7,25,7],[[5,[0,2]]]],[[13,7,25,7],[[5,[0,2]]]],[[13,7,25,7],[[5,[0,2]]]],[[],34],[[],5],[[],5],[[],35]],"c":[],"p":[[8,"Display"],[3,"Error"],[8,"Deserializer"],[8,"Deserialize"],[4,"Result"],[8,"Visitor"],[15,"str"],[15,"slice"],[15,"usize"],[8,"Deserializer"],[8,"Serializer"],[15,"bool"],[8,"Serializer"],[15,"u8"],[15,"char"],[15,"f32"],[15,"f64"],[15,"i128"],[15,"i16"],[15,"i32"],[15,"i64"],[15,"i8"],[4,"Option"],[8,"Serialize"],[15,"u32"],[15,"u128"],[15,"u16"],[15,"u64"],[3,"Formatter"],[6,"Result"],[3,"Demand"],[8,"Sized"],[8,"Serialize"],[3,"String"],[3,"TypeId"]]},\
"event_listener":{"doc":"Notify async tasks or threads.","t":"DDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["Event","EventListener","borrow","borrow","borrow_mut","borrow_mut","default","discard","drop","drop","fmt","fmt","from","from","into","into","into_future","listen","listens_to","new","notify","notify_additional","notify_additional_relaxed","notify_relaxed","poll","same_event","try_from","try_from","try_into","try_into","type_id","type_id","wait","wait_deadline","wait_timeout"],"q":[[0,"event_listener"]],"d":["A synchronization primitive for notifying async tasks and …","A guard waiting for a notification from an <code>Event</code>.","","","","","","Drops this listener and discards its notification (if any) …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Returns a guard listening for a notification.","Returns <code>true</code> if this listener listens to the given <code>Event</code>.","Creates a new <code>Event</code>.","Notifies a number of active listeners.","Notifies a number of active and still unnotified listeners.","Notifies a number of active and still unnotified listeners …","Notifies a number of active listeners without emitting a …","","Returns <code>true</code> if both listeners listen to the same <code>Event</code>.","","","","","","","Blocks until a notification is received.","Blocks until a notification is received or a deadline is …","Blocks until a notification is received or a timeout is …"],"i":[0,0,1,2,1,2,1,2,1,2,1,2,1,2,1,2,2,1,2,1,1,1,1,1,2,2,1,2,1,2,1,2,2,2,2],"f":[0,0,[[]],[[]],[[]],[[]],[[],1],[2,3],[1],[2],[[1,4],5],[[2,4],5],[[]],[[]],[[]],[[]],[[]],[1,2],[[2,1],3],[[],1],[[1,6]],[[1,6]],[[1,6]],[[1,6]],[[[7,[2]],8],9],[[2,2],3],[[],10],[[],10],[[],10],[[],10],[[],11],[[],11],[2],[[2,12],3],[[2,13],3]],"c":[],"p":[[3,"Event"],[3,"EventListener"],[15,"bool"],[3,"Formatter"],[6,"Result"],[15,"usize"],[3,"Pin"],[3,"Context"],[4,"Poll"],[4,"Result"],[3,"TypeId"],[3,"Instant"],[3,"Duration"]]},\
"expat_sys":{"doc":"","t":"","n":[],"q":[],"d":[],"i":[],"f":[],"c":[],"p":[]},\
"fastrand":{"doc":"A simple and fast random number generator.","t":"DFLFLFLLLFLLLLFLLLFLFLLLLFLFLFLFLFLFLLFLFLLFLFLLLLLFLFLFLFLFLFLFLL","n":["Rng","alphabetic","alphabetic","alphanumeric","alphanumeric","bool","bool","borrow","borrow_mut","char","char","clone","clone_into","default","digit","digit","eq","equivalent","f32","f32","f64","f64","fill","fmt","from","get_seed","get_seed","i128","i128","i16","i16","i32","i32","i64","i64","i8","i8","into","isize","isize","lowercase","lowercase","new","seed","seed","shuffle","shuffle","to_owned","try_from","try_into","type_id","u128","u128","u16","u16","u32","u32","u64","u64","u8","u8","uppercase","uppercase","usize","usize","with_seed"],"q":[[0,"fastrand"]],"d":["A random number generator.","Generates a random <code>char</code> in ranges a-z and A-Z.","Generates a random <code>char</code> in ranges a-z and A-Z.","Generates a random <code>char</code> in ranges a-z, A-Z and 0-9.","Generates a random <code>char</code> in ranges a-z, A-Z and 0-9.","Generates a random <code>bool</code>.","Generates a random <code>bool</code>.","","","Generates a random <code>char</code> in the given range.","Generates a random <code>char</code> in the given range.","Clones the generator by deterministically deriving a new …","","","Generates a random digit in the given <code>base</code>.","Generates a random digit in the given <code>base</code>.","","","Generates a random <code>f32</code> in range <code>0..1</code>.","Generates a random <code>f32</code> in range <code>0..1</code>.","Generates a random <code>f64</code> in range <code>0..1</code>.","Generates a random <code>f64</code> in range <code>0..1</code>.","Fill a byte slice with random data.","","Returns the argument unchanged.","Gives back <strong>current</strong> seed that is being held by the …","Gives back <strong>current</strong> seed that is being held by this …","Generates a random <code>i128</code> in the given range.","Generates a random <code>i128</code> in the given range.","Generates a random <code>i16</code> in the given range.","Generates a random <code>i16</code> in the given range.","Generates a random <code>i32</code> in the given range.","Generates a random <code>i32</code> in the given range.","Generates a random <code>i64</code> in the given range.","Generates a random <code>i64</code> in the given range.","Generates a random <code>i8</code> in the given range.","Generates a random <code>i8</code> in the given range.","Calls <code>U::from(self)</code>.","Generates a random <code>isize</code> in the given range.","Generates a random <code>isize</code> in the given range.","Generates a random <code>char</code> in range a-z.","Generates a random <code>char</code> in range a-z.","Creates a new random number generator.","Initializes the thread-local generator with the given seed.","Initializes this generator with the given seed.","Shuffles a slice randomly.","Shuffles a slice randomly.","","","","","Generates a random <code>u128</code> in the given range.","Generates a random <code>u128</code> in the given range.","Generates a random <code>u16</code> in the given range.","Generates a random <code>u16</code> in the given range.","Generates a random <code>u32</code> in the given range.","Generates a random <code>u32</code> in the given range.","Generates a random <code>u64</code> in the given range.","Generates a random <code>u64</code> in the given range.","Generates a random <code>u8</code> in the given range.","Generates a random <code>u8</code> in the given range.","Generates a random <code>char</code> in range A-Z.","Generates a random <code>char</code> in range A-Z.","Generates a random <code>usize</code> in the given range.","Generates a random <code>usize</code> in the given range.","Creates a new random number generator with the initial …"],"i":[0,0,2,0,2,0,2,2,2,0,2,2,2,2,0,2,2,2,0,2,0,2,2,2,2,0,2,0,2,0,2,0,2,0,2,0,2,2,0,2,0,2,2,0,2,0,2,2,2,2,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,2],"f":[0,[[],1],[2,1],[[],1],[2,1],[[],3],[2,3],[[]],[[]],[[[4,[1]]],1],[[2,[4,[1]]],1],[2,2],[[]],[[],2],[5,1],[[2,5],1],[[2,2],3],[[],3],[[],6],[2,6],[[],7],[2,7],[[2,[9,[8]]]],[[2,10],11],[[]],[[],12],[2,12],[[[4,[13]]],13],[[2,[4,[13]]],13],[[[4,[14]]],14],[[2,[4,[14]]],14],[[[4,[15]]],15],[[2,[4,[15]]],15],[[[4,[16]]],16],[[2,[4,[16]]],16],[[[4,[17]]],17],[[2,[4,[17]]],17],[[]],[[[4,[18]]],18],[[2,[4,[18]]],18],[[],1],[2,1],[[],2],[12],[[2,12]],[9],[[2,9]],[[]],[[],19],[[],19],[[],20],[[[4,[21]]],21],[[2,[4,[21]]],21],[[[4,[22]]],22],[[2,[4,[22]]],22],[[[4,[5]]],5],[[2,[4,[5]]],5],[[[4,[12]]],12],[[2,[4,[12]]],12],[[[4,[8]]],8],[[2,[4,[8]]],8],[[],1],[2,1],[[[4,[23]]],23],[[2,[4,[23]]],23],[12,2]],"c":[],"p":[[15,"char"],[3,"Rng"],[15,"bool"],[8,"RangeBounds"],[15,"u32"],[15,"f32"],[15,"f64"],[15,"u8"],[15,"slice"],[3,"Formatter"],[6,"Result"],[15,"u64"],[15,"i128"],[15,"i16"],[15,"i32"],[15,"i64"],[15,"i8"],[15,"isize"],[4,"Result"],[3,"TypeId"],[15,"u128"],[15,"u16"],[15,"usize"]]},\
"fdeflate":{"doc":"A fast deflate implementation.","t":"NNNNDEDNNNNNNNNNNNDNLLLLLLLLFLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["BadCodeLengthHuffmanTree","BadDistanceHuffmanTree","BadLiteralLengthHuffmanTree","BadZlibHeader","Compressor","DecompressionError","Decompressor","DistanceTooFarBack","ExtraInput","InputStartsWithRun","InsufficientInput","InvalidBlockType","InvalidCodeLengthRepeat","InvalidDistanceCode","InvalidHdist","InvalidHlit","InvalidLiteralLengthCode","InvalidUncompressedBlockLength","StoredOnlyCompressor","WrongChecksum","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","compress_to_vec","compressed_size","decompress_to_vec","finish","finish","fmt","from","from","from","from","ignore_adler32","into","into","into","into","is_done","new","new","new","read","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","write_data","write_data"],"q":[[0,"fdeflate"]],"d":["The stream doesn’t specify a valid huffman tree.","The stream doesn’t specify a valid huffman tree.","The stream doesn’t specify a valid huffman tree.","The zlib header is corrupt.","Compressor that produces fdeflate compressed streams.","An error encountered while decompressing a deflate stream.","Decompressor for arbitrary zlib streams.","The stream contains a back-reference that is too far back.","Extra input data.","The stream contains contains back-reference as the first …","All input was consumed, but the end of the stream hasn’t …","A block header specifies an invalid block type.","Attempted to repeat a previous code before reading any …","The stream contains a distance code that was not allowed …","Too many distance codes were specified.","Too many literals were specified.","The stream contains a literal/length code that was not …","An uncompressed block’s NLEN value is invalid.","Compressor that only writes the stored blocks.","The deflate stream checksum is incorrect.","","","","","","","","","Compresses the given data.","Return the number of bytes that will be written to the …","Decompress the given data.","Write the remainder of the stream and return the inner …","Finish writing the final block and return the underlying …","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Ignore the checksum at the end of the stream.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns true if the decompressor has finished …","Create a new Compressor.","Creates a new <code>StoredOnlyCompressor</code> that writes to the …","Create a new decompressor.","Decompresses a chunk of data.","","","","","","","","","","","","","Write data to the compressor.","Writes the given data to the underlying writer."],"i":[5,5,5,5,0,0,0,5,5,5,5,5,5,5,5,5,5,5,0,5,8,11,14,5,8,11,14,5,0,11,0,8,11,5,8,11,14,5,14,8,11,14,5,14,8,11,14,14,8,11,14,5,8,11,14,5,8,11,14,5,8,11],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[2,[1]]],[[3,[1]]]],[4,4],[[[2,[1]]],[[6,[[3,[1]],5]]]],[[[8,[7]]],[[9,[7]]]],[[[11,[[0,[7,10]]]]],[[9,[[0,[7,10]]]]]],[[5,12],13],[[]],[[]],[[]],[[]],[14],[[]],[[]],[[]],[[]],[14,15],[7,[[9,[[8,[7]]]]]],[[[0,[7,10]]],[[9,[[11,[[0,[7,10]]]]]]]],[[],14],[[14,[2,[1]],[2,[1]],4,15],[[6,[5]]]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],16],[[],16],[[],16],[[],16],[[[8,[7]],[2,[1]]],9],[[[11,[[0,[7,10]]]],[2,[1]]],9]],"c":[],"p":[[15,"u8"],[15,"slice"],[3,"Vec"],[15,"usize"],[4,"DecompressionError"],[4,"Result"],[8,"Write"],[3,"Compressor"],[6,"Result"],[8,"Seek"],[3,"StoredOnlyCompressor"],[3,"Formatter"],[6,"Result"],[3,"Decompressor"],[15,"bool"],[3,"TypeId"]]},\
"fixedbitset":{"doc":"<code>FixedBitSet</code> is a simple fixed size set of bits.","t":"DDIDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["Difference","FixedBitSet","IndexRange","Intersection","Ones","SymmetricDifference","Union","as_mut_slice","as_slice","bitand","bitand_assign","bitand_assign","bitor","bitor_assign","bitor_assign","bitxor","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clone","clone_into","cmp","contains","copy_bit","count_ones","default","difference","difference_with","end","end","eq","equivalent","extend","fmt","fmt","fmt","from","from","from","from","from","from","from_iter","grow","hash","index","insert","insert_range","intersect_with","intersection","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","is_clear","is_disjoint","is_empty","is_subset","is_superset","len","new","next","next","next","next","next","ones","partial_cmp","put","set","set_range","start","start","symmetric_difference","symmetric_difference_with","to_owned","to_string","toggle","toggle_range","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","union","union_with","with_capacity","with_capacity_and_blocks"],"q":[[0,"fixedbitset"]],"d":["An iterator producing elements in the difference of two …","<code>FixedBitSet</code> is a simple fixed size set of bits that each …","<strong>IndexRange</strong> is implemented by Rust’s built-in range …","An iterator producing elements in the intersection of two …","An  iterator producing the indices of the set bit in a set.","An iterator producing elements in the symmetric difference …","An iterator producing elements in the union of two sets.","View the bitset as a mutable slice of <code>u32</code> blocks. Writing …","View the bitset as a slice of <code>u32</code> blocks","","","","","","","","","","","","","","","","","","","","","","Clear all bits.","","","","Return <strong>true</strong> if the bit is enabled in the <strong>FixedBitSet</strong>, <strong>false</strong>…","Copies boolean value from specified bit to the specified …","Count the number of set bits in the given bit range.","","Returns a lazy iterator over the difference of two …","In-place difference of two <code>FixedBitSet</code>s.","End index (exclusive)","End index (exclusive)","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Grow capacity to <strong>bits</strong>, all new bits initialized to zero","","","Enable <code>bit</code>.","Enables every bit in the given range.","In-place intersection of two <code>FixedBitSet</code>s.","Returns a lazy iterator over the intersection of two …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","<code>true</code> if all bits in the <code>FixedBitSet</code> are unset.","Returns <code>true</code> if <code>self</code> has no elements in common with <code>other</code>. …","<code>true</code> if the <code>FixedBitSet</code> is empty.","Returns <code>true</code> if the set is a subset of another, i.e. <code>other</code> …","Returns <code>true</code> if the set is a superset of another, i.e. <code>self</code>…","The length of the <code>FixedBitSet</code> in bits.","Create a new empty <strong>FixedBitSet</strong>.","","","","","","Iterates over all enabled bits.","","Enable <code>bit</code>, and return its previous value.","<strong>Panics</strong> if <strong>bit</strong> is out of bounds.","Sets every bit in the given range to the given state (…","Start index (inclusive)","Start index (inclusive)","Returns a lazy iterator over the symmetric difference of …","In-place symmetric difference of two <code>FixedBitSet</code>s.","","","Toggle <code>bit</code> (inverting its state).","Toggles (inverts) every bit in the given range.","","","","","","","","","","","","","","","","","","","Returns a lazy iterator over the union of two <code>FixedBitSet</code>s.","In-place union of two <code>FixedBitSet</code>s.","Create a new <strong>FixedBitSet</strong> with a specific number of bits, …","Create a new <strong>FixedBitSet</strong> with a specific number of bits, …"],"i":[0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,8,17,16,18,19,1,8,17,16,18,19,1,1,1,1,1,1,1,1,1,1,1,7,7,1,1,1,1,1,1,8,17,16,18,19,1,1,1,1,1,1,1,1,1,8,17,16,18,19,1,8,17,16,18,19,1,1,1,1,1,1,1,8,17,16,18,19,1,1,1,1,1,7,7,1,1,1,1,1,1,8,17,16,18,19,1,8,17,16,18,19,1,8,17,16,18,19,1,1,1,1,1],"f":[0,0,0,0,0,0,0,[1,[[3,[2]]]],[1,[[3,[2]]]],[[1,1],1],[[1,1]],[[1,1]],[[1,1],1],[[1,1]],[[1,1]],[[1,1],1],[[1,1]],[[1,1]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1],[1,1],[[]],[[1,1],4],[[1,5],6],[[1,5,5]],[[1,7],5],[[],1],[[1,1],8],[[1,1]],[[],9],[[],9],[[1,1],6],[[],6],[[1,10]],[[1,11],12],[[1,11],[[14,[13]]]],[[1,11],[[14,[13]]]],[[]],[[]],[[]],[[]],[[]],[[]],[10,1],[[1,5]],[[1,15]],[[1,5],6],[[1,5]],[[1,7]],[[1,1]],[[1,1],16],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,6],[[1,1],6],[1,6],[[1,1],6],[[1,1],6],[1,5],[[],1],[8,9],[17,9],[16,9],[18,9],[19,9],[1,19],[[1,1],[[9,[4]]]],[[1,5],6],[[1,5,6]],[[1,7,6]],[[],9],[[],9],[[1,1],17],[[1,1]],[[]],[[],20],[[1,5]],[[1,7]],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[1,1],18],[[1,1]],[5,1],[[5,10],1]],"c":[],"p":[[3,"FixedBitSet"],[15,"u32"],[15,"slice"],[4,"Ordering"],[15,"usize"],[15,"bool"],[8,"IndexRange"],[3,"Difference"],[4,"Option"],[8,"IntoIterator"],[3,"Formatter"],[6,"Result"],[3,"Error"],[4,"Result"],[8,"Hasher"],[3,"Intersection"],[3,"SymmetricDifference"],[3,"Union"],[3,"Ones"],[3,"String"],[3,"TypeId"]]},\
"flate2":{"doc":"A DEFLATE-based stream compression/decompression library","t":"NDDDDDDDDNNEENDDNNNNENNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLDDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["BufError","Compress","CompressError","Compression","Crc","CrcReader","CrcWriter","Decompress","DecompressError","Finish","Finish","FlushCompress","FlushDecompress","Full","GzBuilder","GzHeader","None","None","Ok","Partial","Status","StreamEnd","Sync","Sync","amount","best","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buf_read","bufread","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","combine","comment","comment","compress","compress_vec","consume","crc","crc","decompress","decompress_vec","default","default","default","default","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","extra","extra","fast","filename","filename","fill_buf","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","get_mut","get_mut","get_ref","get_ref","into","into","into","into","into","into","into","into","into","into","into","into","into","into_inner","into_inner","level","message","message","mtime","mtime","mtime_as_datetime","needs_dictionary","new","new","new","new","new","new","new","none","operating_system","operating_system","provide","provide","read","read","read","reset","reset","reset","reset","reset","sum","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","total_in","total_in","total_out","total_out","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update","write","write","write","DeflateDecoder","DeflateEncoder","GzDecoder","GzEncoder","MultiGzDecoder","ZlibDecoder","ZlibEncoder","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","flush","flush","flush","flush","flush","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","header","header","into","into","into","into","into","into","into","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","new","new","new","new","new","new","new","read","read","read","read","read","read","read","reset","reset","reset","reset","reset_data","total_in","total_in","total_in","total_in","total_out","total_out","total_out","total_out","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","write","write","write","write","write","write","DeflateDecoder","DeflateEncoder","GzDecoder","GzEncoder","MultiGzDecoder","ZlibDecoder","ZlibEncoder","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","flush","flush","flush","flush","flush","flush","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","header","header","into","into","into","into","into","into","into","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","new","new","new","new","new","new","new","new_with_buf","new_with_buf","read","read","read","read","read","read","read","reset","reset","reset","reset","total_in","total_in","total_in","total_in","total_out","total_out","total_out","total_out","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","write","write","write","write","write","write","write","DeflateDecoder","DeflateEncoder","GzDecoder","GzEncoder","MultiGzDecoder","ZlibDecoder","ZlibEncoder","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","drop","finish","finish","finish","finish","finish","finish","finish","flush","flush","flush","flush","flush","flush","flush","flush_finish","flush_finish","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","header","header","into","into","into","into","into","into","into","new","new","new","new","new","new","new","read","read","read","read","read","read","reset","reset","reset","reset","total_in","total_in","total_in","total_in","total_out","total_out","total_out","total_out","try_finish","try_finish","try_finish","try_finish","try_finish","try_finish","try_finish","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","write","write","write","write","write","write","write"],"q":[[0,"flate2"],[223,"flate2::bufread"],[348,"flate2::read"],[476,"flate2::write"]],"d":["Indicates that forward progress is not possible due to …","Raw in-memory compression stream for blocks of data.","Error returned when a compression object is used …","When compressing data, the compression level can be …","The CRC calculated by a <code>CrcReader</code>.","A wrapper around a <code>Read</code> that calculates the CRC.","A wrapper around a <code>Write</code> that calculates the CRC.","Raw in-memory decompression stream for blocks of data.","Error returned when a decompression object finds that the …","Pending input is processed and pending output is flushed.","Pending input is processed and pending output is flushed.","Values which indicate the form of flushing to be used when …","Values which indicate the form of flushing to be used when …","All output is flushed as with <code>Flush::Sync</code> and the …","A builder structure to create a new gzip Encoder.","A structure representing the header of a gzip stream.","A typical parameter for passing to …","A typical parameter for passing to …","Indicates success.","All pending output is flushed to the output buffer, but …","Possible status results of compressing some data or …","Indicates that all input has been consumed and all output …","All pending output is flushed to the output buffer and the …","All pending output is flushed to the output buffer and the …","The number of bytes that have been used to calculate the …","Optimize for the size of data being encoded.","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume this builder, creating a reader encoder in the …","Types which operate over <code>BufRead</code> streams, both encoders …","","","","","","","","","","","Combine the CRC with the CRC for the subsequent block of …","Returns the <code>comment</code> field of this gzip stream’s header, …","Configure the <code>comment</code> field in the gzip header.","Compresses the input data into the output, consuming only …","Compresses the input data into the extra space of the …","","Get the Crc for this <code>CrcReader</code>.","Get the Crc for this <code>CrcWriter</code>.","Decompresses the input data into the output, consuming …","Decompresses the input data into the extra space in the …","","","","","","","","","","","","","","Returns the <code>extra</code> field of this gzip stream’s header, if …","Configure the <code>extra</code> field in the gzip header.","Optimize for the best speed of encoding.","Returns the <code>filename</code> field of this gzip stream’s header, …","Configure the <code>filename</code> field in the gzip header.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the reader that is wrapped by …","Get a mutable reference to the writer that is wrapped by …","Get the reader that is wrapped by this <code>CrcReader</code> by …","Get the writer that is wrapped by this <code>CrcWriter</code> by …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Get the reader that is wrapped by this <code>CrcReader</code>.","Get the writer that is wrapped by this <code>CrcWriter</code>.","Returns an integer representing the compression level, …","Retrieve the implementation’s message about why the …","Retrieve the implementation’s message about why the …","This gives the most recent modification time of the …","Configure the <code>mtime</code> field in the gzip header.","Returns the most recent modification time represented by a …","Indicates whether decompression failed due to requiring a …","Create a new CRC.","Create a new <code>CrcReader</code>.","Create a new <code>CrcWriter</code>.","Create a new blank builder with no header by default.","Creates a new object ready for compressing data that it’…","Creates a new object ready for decompressing data that it…","Creates a new description of the compression level with an …","No compression is to be performed, this may actually …","Returns the <code>operating_system</code> field of this gzip stream’s …","Configure the <code>operating_system</code> field in the gzip header.","","","Types which operate over <code>Read</code> streams, both encoders and …","","Consume this builder, creating a reader encoder in the …","Reset the CRC.","Reset the Crc in this <code>CrcReader</code>.","Reset the Crc in this <code>CrcWriter</code>.","Quickly resets this compressor without having to …","Performs the equivalent of replacing this decompression …","Returns the current crc32 checksum.","","","","","","","","Returns the total number of input bytes which have been …","Returns the total number of input bytes which have been …","Returns the total number of output bytes which have been …","Returns the total number of output bytes which have been …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Update the CRC with the bytes in <code>data</code>.","Types which operate over <code>Write</code> streams, both encoders and …","","Consume this builder, creating a writer encoder in the …","A DEFLATE decoder, or decompressor.","A DEFLATE encoder, or compressor.","A gzip streaming decoder","A gzip streaming encoder","A gzip streaming decoder that decodes all members of a …","A ZLIB decoder, or decompressor.","A ZLIB encoder, or compressor.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Acquires a mutable reference to the underlying stream","Acquires a mutable reference to the underlying stream","Acquires a mutable reference to the underlying reader.","Acquires a mutable reference to the underlying stream.","Acquires a mutable reference to the underlying stream.","Acquires a mutable reference to the underlying stream","Acquires a mutable reference to the underlying stream","Acquires a reference to the underlying reader","Acquires a reference to the underlying stream","Acquires a reference to the underlying reader.","Acquires a reference to the underlying reader.","Acquires a reference to the underlying reader.","Acquires a reference to the underlying reader","Acquires a reference to the underlying stream","Returns the header associated with this stream, if it was …","Returns the current header associated with this stream, if …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consumes this encoder, returning the underlying reader.","Consumes this decoder, returning the underlying reader.","Returns the underlying stream, consuming this encoder","Consumes this decoder, returning the underlying reader.","Consumes this decoder, returning the underlying reader.","Consumes this encoder, returning the underlying reader.","Consumes this decoder, returning the underlying reader.","Creates a new encoder which will read uncompressed data …","Creates a new decoder which will decompress data read from …","Creates a new encoder which will use the given compression …","Creates a new decoder from the given reader, immediately …","Creates a new decoder from the given reader, immediately …","Creates a new encoder which will read uncompressed data …","Creates a new decoder which will decompress data read from …","","","","","","","","Resets the state of this encoder entirely, swapping out …","Resets the state of this decoder entirely, swapping out …","Resets the state of this encoder entirely, swapping out …","Resets the state of this decoder entirely, swapping out …","Resets the state of this decoder’s data","Returns the number of bytes that have been read into this …","Returns the number of bytes that the decompressor has …","Returns the number of bytes that have been read into this …","Returns the number of bytes that the decompressor has …","Returns the number of bytes that the compressor has …","Returns the number of bytes that the decompressor has …","Returns the number of bytes that the compressor has …","Returns the number of bytes that the decompressor has …","","","","","","","","","","","","","","","","","","","","","","","","","","","","A DEFLATE decoder, or decompressor.","A DEFLATE encoder, or compressor.","A gzip streaming decoder","A gzip streaming encoder","A gzip streaming decoder that decodes all members of a …","A ZLIB decoder, or decompressor.","A ZLIB encoder, or compressor.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Acquires a mutable reference to the underlying stream","Acquires a mutable reference to the underlying stream","Acquires a mutable reference to the underlying reader.","Acquires a mutable reference to the underlying stream.","Acquires a mutable reference to the underlying stream.","Acquires a mutable reference to the underlying stream","Acquires a mutable reference to the underlying stream","Acquires a reference to the underlying reader","Acquires a reference to the underlying stream","Acquires a reference to the underlying reader.","Acquires a reference to the underlying reader.","Acquires a reference to the underlying reader.","Acquires a reference to the underlying stream","Acquires a reference to the underlying stream","Returns the header associated with this stream, if it was …","Returns the current header associated with this stream, if …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consumes this encoder, returning the underlying reader.","Consumes this decoder, returning the underlying reader.","Returns the underlying stream, consuming this encoder","Consumes this decoder, returning the underlying reader.","Consumes this decoder, returning the underlying reader.","Consumes this encoder, returning the underlying reader.","Consumes this decoder, returning the underlying reader.","Creates a new encoder which will read uncompressed data …","Creates a new decoder which will decompress data read from …","Creates a new encoder which will use the given compression …","Creates a new decoder from the given reader, immediately …","Creates a new decoder from the given reader, immediately …","Creates a new encoder which will read uncompressed data …","Creates a new decoder which will decompress data read from …","Same as <code>new</code>, but the intermediate buffer for data is …","Same as <code>new</code>, but the intermediate buffer for data is …","","","","","","","","Resets the state of this encoder entirely, swapping out …","Resets the state of this decoder entirely, swapping out …","Resets the state of this encoder entirely, swapping out …","Resets the state of this decoder entirely, swapping out …","Returns the number of bytes that have been read into this …","Returns the number of bytes that the decompressor has …","Returns the number of bytes that have been read into this …","Returns the number of bytes that the decompressor has …","Returns the number of bytes that the compressor has …","Returns the number of bytes that the decompressor has …","Returns the number of bytes that the compressor has …","Returns the number of bytes that the decompressor has …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A DEFLATE decoder, or decompressor.","A DEFLATE encoder, or compressor.","A gzip streaming decoder","A gzip streaming encoder","A gzip streaming decoder that decodes all members of a …","A ZLIB decoder, or decompressor.","A ZLIB encoder, or compressor.","","","","","","","","","","","","","","","","Consumes this encoder, flushing the output stream.","Consumes this encoder, flushing the output stream.","Finish encoding this stream, returning the underlying …","Consumes this decoder, flushing the output stream.","Consumes this decoder, flushing the output stream.","Consumes this encoder, flushing the output stream.","Consumes this encoder, flushing the output stream.","","","","","","","","Consumes this encoder, flushing the output stream.","Consumes this encoder, flushing the output stream.","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Acquires a mutable reference to the underlying writer.","Acquires a mutable reference to the underlying writer.","Acquires a mutable reference to the underlying writer.","Acquires a mutable reference to the underlying writer.","Acquires a mutable reference to the underlying writer.","Acquires a mutable reference to the underlying writer.","Acquires a mutable reference to the underlying writer.","Acquires a reference to the underlying writer.","Acquires a reference to the underlying writer.","Acquires a reference to the underlying writer.","Acquires a reference to the underlying writer.","Acquires a reference to the underlying writer.","Acquires a reference to the underlying writer.","Acquires a reference to the underlying writer.","Returns the header associated with this stream.","Returns the header associated with the current member.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Creates a new encoder which will write compressed data to …","Creates a new decoder which will write uncompressed data …","Creates a new encoder which will use the given compression …","Creates a new decoder which will write uncompressed data …","Creates a new decoder which will write uncompressed data …","Creates a new encoder which will write compressed data to …","Creates a new decoder which will write uncompressed data …","","","","","","","Resets the state of this encoder entirely, swapping out …","Resets the state of this decoder entirely, swapping out …","Resets the state of this encoder entirely, swapping out …","Resets the state of this decoder entirely, swapping out …","Returns the number of bytes that have been written to this …","Returns the number of bytes that the decompressor has …","Returns the number of bytes that have been written to this …","Returns the number of bytes that the decompressor has …","Returns the number of bytes that the compressor has …","Returns the number of bytes that the decompressor has …","Returns the number of bytes that the compressor has …","Returns the number of bytes that the decompressor has …","Attempt to finish this output stream, writing out final …","Attempt to finish this output stream, writing out final …","Attempt to finish this output stream, writing out final …","Attempt to finish this output stream, writing out final …","Attempt to finish this output stream, writing out final …","Attempt to finish this output stream, writing out final …","Attempt to finish this output stream, writing out final …","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[10,0,0,0,0,0,0,0,0,8,9,0,0,8,0,0,8,9,10,8,0,10,8,9,1,3,1,19,21,7,4,16,22,8,9,23,17,10,3,1,19,21,7,4,16,22,8,9,23,17,10,3,4,0,7,8,9,10,3,7,8,9,10,3,1,7,4,16,16,19,19,21,22,22,1,7,4,3,7,8,9,10,3,8,9,10,3,7,4,3,7,4,19,21,1,19,21,7,4,16,22,8,9,23,23,17,17,10,3,1,19,21,7,4,16,22,8,9,23,17,10,3,19,21,19,21,1,19,21,7,4,16,22,8,9,23,17,10,3,19,21,3,23,17,7,4,7,23,1,19,21,4,16,22,3,3,7,4,23,17,0,19,4,1,19,21,16,22,1,7,8,9,10,3,23,17,16,22,16,22,1,19,21,7,4,16,22,8,9,23,17,10,3,1,19,21,7,4,16,22,8,9,23,17,10,3,1,19,21,7,4,16,22,8,9,23,17,10,3,1,0,21,4,0,0,0,0,0,0,0,39,40,6,41,44,42,43,39,40,6,41,44,42,43,39,40,6,41,42,43,39,40,6,41,44,42,43,39,40,6,41,44,42,43,39,40,6,41,44,42,43,39,40,6,41,44,42,43,41,44,39,40,6,41,44,42,43,39,40,6,41,44,42,43,39,40,6,41,44,42,43,39,40,6,41,44,42,43,39,40,42,43,40,39,40,42,43,39,40,42,43,39,40,6,41,44,42,43,39,40,6,41,44,42,43,39,40,6,41,44,42,43,39,40,6,41,42,43,0,0,0,0,0,0,0,45,46,34,47,48,49,50,45,46,34,47,48,49,50,45,46,34,47,48,49,50,45,46,34,47,48,49,50,45,46,34,47,48,49,50,45,46,34,47,48,49,50,45,46,34,47,48,49,50,47,48,45,46,34,47,48,49,50,45,46,34,47,48,49,50,45,46,34,47,48,49,50,46,50,45,46,34,47,48,49,50,45,46,49,50,45,46,49,50,45,46,49,50,45,46,34,47,48,49,50,45,46,34,47,48,49,50,45,46,34,47,48,49,50,45,46,34,47,48,49,50,0,0,0,0,0,0,0,51,52,38,53,54,55,56,51,52,38,53,54,55,56,38,51,52,38,53,54,55,56,51,52,38,53,54,55,56,51,55,51,52,38,53,54,55,56,51,52,38,53,54,55,56,51,52,38,53,54,55,56,51,52,38,53,54,55,56,53,54,51,52,38,53,54,55,56,51,52,38,53,54,55,56,51,52,38,53,55,56,51,52,55,56,51,52,55,56,51,52,55,56,51,52,38,53,54,55,56,51,52,38,53,54,55,56,51,52,38,53,54,55,56,51,52,38,53,54,55,56,51,52,38,53,54,55,56],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],[[],3],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[4,5,3],[[6,[5]]]],0,[7,7],[8,8],[9,9],[10,10],[3,3],[[]],[[]],[[]],[[]],[[]],[[1,1]],[7,[[13,[[12,[11]]]]]],[[4,[15,[[14,[11]]]]],4],[[16,[12,[11]],[12,[11]],8],[[18,[10,17]]]],[[16,[12,[11]],[14,[11]],8],[[18,[10,17]]]],[[[19,[5]],20]],[19,1],[21,1],[[22,[12,[11]],[12,[11]],9],[[18,[10,23]]]],[[22,[12,[11]],[14,[11]],9],[[18,[10,23]]]],[[],1],[[],7],[[],4],[[],3],[[7,7],24],[[8,8],24],[[9,9],24],[[10,10],24],[[3,3],24],[[],24],[[],24],[[],24],[[],24],[7,[[13,[[12,[11]]]]]],[[4,[15,[[14,[11]]]]],4],[[],3],[7,[[13,[[12,[11]]]]]],[[4,[15,[[14,[11]]]]],4],[[[19,[5]]],[[25,[[12,[11]]]]]],[[[21,[26]]],25],[[1,27],28],[[[19,[29]],27],28],[[[21,[29]],27],28],[[7,27],28],[[4,27],28],[[16,27],28],[[22,27],28],[[8,27],28],[[9,27],28],[[23,27],28],[[23,27],28],[[17,27],28],[[17,27],28],[[10,27],28],[[3,27],28],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[19],[21],[19],[21],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[19],[21],[3,2],[23,[[13,[30]]]],[17,[[13,[30]]]],[7,2],[[4,2],4],[7,[[13,[31]]]],[23,[[13,[2]]]],[[],1],[32,[[19,[32]]]],[26,[[21,[26]]]],[[],4],[[3,24],16],[24,22],[2,3],[[],3],[7,11],[[4,11],4],[33],[33],0,[[[19,[32]],[12,[11]]],[[25,[20]]]],[[4,32,3],[[34,[32]]]],[1],[19],[21],[16],[[22,24]],[1,2],[[]],[[]],[[]],[[]],[[]],[[],35],[[],35],[16,36],[22,36],[16,36],[22,36],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[1,[12,[11]]]],0,[[[21,[26]],[12,[11]]],[[25,[20]]]],[[4,26,3],[[38,[26]]]],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[39,[[0,[5,26]]]]],25],[[[40,[[0,[5,26]]]]],25],[[[6,[[0,[5,26]]]]],25],[[[41,[[0,[5,26]]]]],25],[[[42,[[0,[5,26]]]]],25],[[[43,[[0,[5,26]]]]],25],[[[39,[29]],27],28],[[[40,[29]],27],28],[[[6,[29]],27],28],[[[41,[29]],27],28],[[[44,[29]],27],28],[[[42,[29]],27],28],[[[43,[29]],27],28],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[39],[40],[6],[41],[44],[42],[43],[39],[40],[6],[41],[44],[42],[43],[41,[[13,[7]]]],[44,[[13,[7]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[39],[40],[6],[41],[44],[42],[43],[[5,3],[[39,[5]]]],[5,[[40,[5]]]],[[5,3],[[6,[5]]]],[5,[[41,[5]]]],[5,[[44,[5]]]],[[5,3],[[42,[5]]]],[5,[[43,[5]]]],[[[39,[5]],[12,[11]]],[[25,[20]]]],[[[40,[5]],[12,[11]]],[[25,[20]]]],[[[6,[5]],[12,[11]]],[[25,[20]]]],[[[41,[5]],[12,[11]]],[[25,[20]]]],[[[44,[5]],[12,[11]]],[[25,[20]]]],[[[42,[5]],[12,[11]]],[[25,[20]]]],[[[43,[5]],[12,[11]]],[[25,[20]]]],[39],[40],[42],[43],[40],[39,36],[40,36],[42,36],[43,36],[39,36],[40,36],[42,36],[43,36],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[[39,[[0,[5,26]]]],[12,[11]]],[[25,[20]]]],[[[40,[[0,[5,26]]]],[12,[11]]],[[25,[20]]]],[[[6,[[0,[5,26]]]],[12,[11]]],[[25,[20]]]],[[[41,[[0,[5,26]]]],[12,[11]]],[[25,[20]]]],[[[42,[[0,[5,26]]]],[12,[11]]],[[25,[20]]]],[[[43,[[0,[5,26]]]],[12,[11]]],[[25,[20]]]],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[45,[[0,[32,26]]]]],25],[[[46,[[0,[32,26]]]]],25],[[[34,[[0,[32,26]]]]],25],[[[47,[[0,[32,26]]]]],25],[[[48,[[0,[32,26]]]]],25],[[[49,[[0,[32,26]]]]],25],[[[50,[[0,[32,26]]]]],25],[[[45,[29]],27],28],[[[46,[29]],27],28],[[[34,[29]],27],28],[[[47,[29]],27],28],[[[48,[29]],27],28],[[[49,[29]],27],28],[[[50,[29]],27],28],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[45],[46],[34],[47],[48],[49],[50],[45],[46],[34],[47],[48],[49],[50],[47,[[13,[7]]]],[48,[[13,[7]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[45],[46],[34],[47],[48],[49],[50],[[32,3],[[45,[32]]]],[32,[[46,[32]]]],[[32,3],[[34,[32]]]],[32,[[47,[32]]]],[32,[[48,[32]]]],[[32,3],[[49,[32]]]],[32,[[50,[32]]]],[[32,[14,[11]]],[[46,[32]]]],[[32,[14,[11]]],[[50,[32]]]],[[[45,[32]],[12,[11]]],[[25,[20]]]],[[[46,[32]],[12,[11]]],[[25,[20]]]],[[[34,[32]],[12,[11]]],[[25,[20]]]],[[[47,[32]],[12,[11]]],[[25,[20]]]],[[[48,[32]],[12,[11]]],[[25,[20]]]],[[[49,[32]],[12,[11]]],[[25,[20]]]],[[[50,[32]],[12,[11]]],[[25,[20]]]],[45],[46],[49],[50],[45,36],[46,36],[49,36],[50,36],[45,36],[46,36],[49,36],[50,36],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[[45,[[0,[32,26]]]],[12,[11]]],[[25,[20]]]],[[[46,[[0,[32,26]]]],[12,[11]]],[[25,[20]]]],[[[34,[[0,[32,26]]]],[12,[11]]],[[25,[20]]]],[[[47,[[0,[32,26]]]],[12,[11]]],[[25,[20]]]],[[[48,[[0,[32,26]]]],[12,[11]]],[[25,[20]]]],[[[49,[[0,[32,26]]]],[12,[11]]],[[25,[20]]]],[[[50,[[0,[32,26]]]],[12,[11]]],[[25,[20]]]],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[38,[26]]]],[[[51,[26]]],[[25,[26]]]],[[[52,[26]]],[[25,[26]]]],[[[38,[26]]],[[25,[26]]]],[[[53,[26]]],[[25,[26]]]],[[[54,[26]]],[[25,[26]]]],[[[55,[26]]],[[25,[26]]]],[[[56,[26]]],[[25,[26]]]],[[[51,[26]]],25],[[[52,[26]]],25],[[[38,[26]]],25],[[[53,[26]]],25],[[[54,[26]]],25],[[[55,[26]]],25],[[[56,[26]]],25],[[[51,[26]]],[[25,[26]]]],[[[55,[26]]],[[25,[26]]]],[[[51,[[0,[29,26]]]],27],28],[[[52,[[0,[29,26]]]],27],28],[[[38,[[0,[29,26]]]],27],28],[[[53,[[0,[29,26]]]],27],28],[[[54,[[0,[29,26]]]],27],28],[[[55,[[0,[29,26]]]],27],28],[[[56,[[0,[29,26]]]],27],28],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[51,[26]]],26],[[[52,[26]]],26],[[[38,[26]]],26],[[[53,[26]]],26],[[[54,[26]]],26],[[[55,[26]]],26],[[[56,[26]]],26],[[[51,[26]]],26],[[[52,[26]]],26],[[[38,[26]]],26],[[[53,[26]]],26],[[[54,[26]]],26],[[[55,[26]]],26],[[[56,[26]]],26],[[[53,[26]]],[[13,[7]]]],[[[54,[26]]],[[13,[7]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[26,3],[[51,[26]]]],[26,[[52,[26]]]],[[26,3],[[38,[26]]]],[26,[[53,[26]]]],[26,[[54,[26]]]],[[26,3],[[55,[26]]]],[26,[[56,[26]]]],[[[51,[[0,[32,26]]]],[12,[11]]],[[25,[20]]]],[[[52,[[0,[32,26]]]],[12,[11]]],[[25,[20]]]],[[[38,[[0,[32,26]]]],[12,[11]]],[[25,[20]]]],[[[53,[[0,[32,26]]]],[12,[11]]],[[25,[20]]]],[[[55,[[0,[32,26]]]],[12,[11]]],[[25,[20]]]],[[[56,[[0,[32,26]]]],[12,[11]]],[[25,[20]]]],[[[51,[26]],26],[[25,[26]]]],[[[52,[26]],26],[[25,[26]]]],[[[55,[26]],26],[[25,[26]]]],[[[56,[26]],26],[[25,[26]]]],[[[51,[26]]],36],[[[52,[26]]],36],[[[55,[26]]],36],[[[56,[26]]],36],[[[51,[26]]],36],[[[52,[26]]],36],[[[55,[26]]],36],[[[56,[26]]],36],[[[51,[26]]],25],[[[52,[26]]],25],[[[38,[26]]],25],[[[53,[26]]],25],[[[54,[26]]],25],[[[55,[26]]],25],[[[56,[26]]],25],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[[51,[26]],[12,[11]]],[[25,[20]]]],[[[52,[26]],[12,[11]]],[[25,[20]]]],[[[38,[26]],[12,[11]]],[[25,[20]]]],[[[53,[26]],[12,[11]]],[[25,[20]]]],[[[54,[26]],[12,[11]]],[[25,[20]]]],[[[55,[26]],[12,[11]]],[[25,[20]]]],[[[56,[26]],[12,[11]]],[[25,[20]]]]],"c":[],"p":[[3,"Crc"],[15,"u32"],[3,"Compression"],[3,"GzBuilder"],[8,"BufRead"],[3,"GzEncoder"],[3,"GzHeader"],[4,"FlushCompress"],[4,"FlushDecompress"],[4,"Status"],[15,"u8"],[15,"slice"],[4,"Option"],[3,"Vec"],[8,"Into"],[3,"Compress"],[3,"CompressError"],[4,"Result"],[3,"CrcReader"],[15,"usize"],[3,"CrcWriter"],[3,"Decompress"],[3,"DecompressError"],[15,"bool"],[6,"Result"],[8,"Write"],[3,"Formatter"],[6,"Result"],[8,"Debug"],[15,"str"],[3,"SystemTime"],[8,"Read"],[3,"Demand"],[3,"GzEncoder"],[3,"String"],[15,"u64"],[3,"TypeId"],[3,"GzEncoder"],[3,"DeflateEncoder"],[3,"DeflateDecoder"],[3,"GzDecoder"],[3,"ZlibEncoder"],[3,"ZlibDecoder"],[3,"MultiGzDecoder"],[3,"DeflateEncoder"],[3,"DeflateDecoder"],[3,"GzDecoder"],[3,"MultiGzDecoder"],[3,"ZlibEncoder"],[3,"ZlibDecoder"],[3,"DeflateEncoder"],[3,"DeflateDecoder"],[3,"GzDecoder"],[3,"MultiGzDecoder"],[3,"ZlibEncoder"],[3,"ZlibDecoder"]]},\
"fontconfig":{"doc":"","t":"ARRRRRRRRRRRRRRRRRRRRGFFFFFFFFGFFFFGGFFFFFGGGGFFFFFFFFFFFFFFFFFFGFFFFFFFFFFFFFFFFFFFFFFFFFGFFFFFFFFGRRGFFFFFFGFFFFFFFFFFFFFFFFFRRRRFGGFFFFFFFFFFRGRRGFFFFFFFFFFFFFFFGFFFFGGFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFGRRRRRRGRFFFFFFFFGFFFFGFFFFFFFFFGRRRRRRRRRFFFFFGFFFFMMLLLLLLLLLLLLLLGGGGGMLLLLLLLLLLLLMMMMMMMMGGGGGDDGGDDDGGGDLLLLLLLLLLLLLLLLLLLMGMMMMM","n":["fontconfig","FC_SLANT_ITALIC","FC_SLANT_OBLIQUE","FC_SLANT_ROMAN","FC_WEIGHT_BLACK","FC_WEIGHT_BOLD","FC_WEIGHT_BOOK","FC_WEIGHT_DEMIBOLD","FC_WEIGHT_EXTRABLACK","FC_WEIGHT_EXTRABOLD","FC_WEIGHT_EXTRALIGHT","FC_WEIGHT_HEAVY","FC_WEIGHT_LIGHT","FC_WEIGHT_MEDIUM","FC_WEIGHT_NORMAL","FC_WEIGHT_REGULAR","FC_WEIGHT_SEMIBOLD","FC_WEIGHT_THIN","FC_WEIGHT_ULTRABLACK","FC_WEIGHT_ULTRABOLD","FC_WEIGHT_ULTRALIGHT","FcAtomic","FcAtomicCreate","FcAtomicDeleteNew","FcAtomicDestroy","FcAtomicLock","FcAtomicNewFile","FcAtomicOrigFile","FcAtomicReplaceOrig","FcAtomicUnlock","FcBlanks","FcBlanksAdd","FcBlanksCreate","FcBlanksDestroy","FcBlanksIsMember","FcBool","FcCache","FcCacheCopySet","FcCacheDir","FcCacheNumFont","FcCacheNumSubdir","FcCacheSubdir","FcChar16","FcChar32","FcChar8","FcCharSet","FcCharSetAddChar","FcCharSetCopy","FcCharSetCount","FcCharSetCoverage","FcCharSetCreate","FcCharSetDestroy","FcCharSetEqual","FcCharSetFirstPage","FcCharSetHasChar","FcCharSetIntersect","FcCharSetIntersectCount","FcCharSetIsSubset","FcCharSetMerge","FcCharSetNew","FcCharSetNextPage","FcCharSetSubtract","FcCharSetSubtractCount","FcCharSetUnion","FcConfig","FcConfigAppFontAddDir","FcConfigAppFontAddFile","FcConfigAppFontClear","FcConfigBuildFonts","FcConfigCreate","FcConfigDestroy","FcConfigEnableHome","FcConfigFilename","FcConfigGetBlanks","FcConfigGetCache","FcConfigGetCacheDirs","FcConfigGetConfigDirs","FcConfigGetConfigFiles","FcConfigGetCurrent","FcConfigGetFontDirs","FcConfigGetFonts","FcConfigGetRescanInterval","FcConfigHome","FcConfigParseAndLoad","FcConfigReference","FcConfigSetCurrent","FcConfigSetRescanInterval","FcConfigSubstitute","FcConfigSubstituteWithPat","FcConfigUptoDate","FcConstant","FcDefaultSubstitute","FcDirCacheLoad","FcDirCacheRead","FcDirCacheUnlink","FcDirCacheUnload","FcDirCacheValid","FcDirSave","FcDirScan","FcEndian","FcEndianBig","FcEndianLittle","FcFileCache","FcFileIsDir","FcFileScan","FcFini","FcFontList","FcFontMatch","FcFontRenderPrepare","FcFontSet","FcFontSetAdd","FcFontSetCreate","FcFontSetDestroy","FcFontSetList","FcFontSetMatch","FcFontSetPrint","FcFontSetSort","FcFontSetSortDestroy","FcFontSort","FcFreeTypeQuery","FcGetLangs","FcGetVersion","FcInit","FcInitBringUptoDate","FcInitLoadConfig","FcInitLoadConfigAndFonts","FcInitReinitialize","FcLangDifferentCountry","FcLangDifferentLang","FcLangDifferentTerritory","FcLangEqual","FcLangGetCharSet","FcLangResult","FcLangSet","FcLangSetAdd","FcLangSetCompare","FcLangSetContains","FcLangSetCopy","FcLangSetCreate","FcLangSetDestroy","FcLangSetEqual","FcLangSetGetLangs","FcLangSetHasLang","FcLangSetHash","FcMatchFont","FcMatchKind","FcMatchPattern","FcMatchScan","FcMatrix","FcMatrixCopy","FcMatrixEqual","FcMatrixMultiply","FcMatrixRotate","FcMatrixScale","FcMatrixShear","FcNameConstant","FcNameGetConstant","FcNameGetObjectType","FcNameParse","FcNameRegisterConstants","FcNameRegisterObjectTypes","FcNameUnparse","FcNameUnregisterConstants","FcNameUnregisterObjectTypes","FcObjectSet","FcObjectSetAdd","FcObjectSetBuild","FcObjectSetCreate","FcObjectSetDestroy","FcObjectType","FcPattern","FcPatternAdd","FcPatternAddBool","FcPatternAddCharSet","FcPatternAddDouble","FcPatternAddInteger","FcPatternAddLangSet","FcPatternAddMatrix","FcPatternAddString","FcPatternAddWeak","FcPatternBuild","FcPatternCreate","FcPatternDel","FcPatternDestroy","FcPatternDuplicate","FcPatternEqual","FcPatternEqualSubset","FcPatternFilter","FcPatternFormat","FcPatternGet","FcPatternGetBool","FcPatternGetCharSet","FcPatternGetDouble","FcPatternGetInteger","FcPatternGetLangSet","FcPatternGetMatrix","FcPatternGetString","FcPatternHash","FcPatternPrint","FcPatternReference","FcPatternRemove","FcResult","FcResultMatch","FcResultNoId","FcResultNoMatch","FcResultOutOfMemory","FcResultTypeMismatch","FcSetApplication","FcSetName","FcSetSystem","FcStrBasename","FcStrCmp","FcStrCmpIgnoreCase","FcStrCopy","FcStrCopyFilename","FcStrDirname","FcStrDowncase","FcStrFree","FcStrList","FcStrListCreate","FcStrListDone","FcStrListNext","FcStrPlus","FcStrSet","FcStrSetAdd","FcStrSetAddFilename","FcStrSetCreate","FcStrSetDel","FcStrSetDestroy","FcStrSetEqual","FcStrSetMember","FcStrStr","FcStrStrIgnoreCase","FcType","FcTypeBool","FcTypeCharSet","FcTypeDouble","FcTypeFTFace","FcTypeInteger","FcTypeLangSet","FcTypeMatrix","FcTypeString","FcTypeVoid","FcUcs4ToUtf8","FcUtf16Len","FcUtf16ToUcs4","FcUtf8Len","FcUtf8ToUcs4","FcValue","FcValueDestroy","FcValueEqual","FcValuePrint","FcValueSave","_type","_type","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","enum__FcLangResult","enum__FcMatchKind","enum__FcResult","enum__FcSetName","enum__FcType","fonts","from","from","from","from","from","from","into","into","into","into","into","into","name","nfont","nobject","object","object","objects","sfont","sobject","struct__FcAtomic","struct__FcBlanks","struct__FcCache","struct__FcCharSet","struct__FcConfig","struct__FcConstant","struct__FcFontSet","struct__FcGlobalCache","struct__FcLangSet","struct__FcMatrix","struct__FcObjectSet","struct__FcObjectType","struct__FcPattern","struct__FcStrList","struct__FcStrSet","struct__FcValue","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","u","union_unnamed1","value","xx","xy","yx","yy"],"q":[[0,"fontconfig"],[1,"fontconfig::fontconfig"]],"deturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,5,4,6,5,7,8,1,4,6,5,7,8,1,1,1,0,0,0,0,0,7,4,6,5,7,8,1,4,6,5,7,8,1,6,7,8,4,6,8,7,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,4,6,5,7,8,1,4,6,5,7,8,1,4,6,5,7,8,1,5,0,6,1,1,1,1],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,1],[[]],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],0,0,0,0,0,0,0],"c":[],"p":[[3,"struct__FcMatrix"],[4,"Result"],[3,"TypeId"],[3,"struct__FcObjectType"],[3,"struct__FcValue"],[3,"struct__FcConstant"],[3,"struct__FcFontSet"],[3,"struct__FcObjectSet"]]},\
"fontconfig_sys":{"doc":"","t":"","n":[],"q":[],"d":[],"i":[],"f":[],"c":[],"p":[]},\
"foreign_types":{"doc":"A framework for Rust wrappers over C APIs.","t":"QQIIDQKLLLOLKLLLLLLL","n":["CType","CType","ForeignType","ForeignTypeRef","Opaque","Ref","as_ptr","as_ptr","borrow","borrow_mut","foreign_type","from","from_ptr","from_ptr","from_ptr_mut","into","into_ptr","try_from","try_into","type_id"],"q":[[0,"foreign_types"]],"d":["The raw C type.","The raw C type.","A type implemented by wrappers over foreign types.","A trait implemented by types which reference borrowed …","An opaque type used to define <code>ForeignTypeRef</code> types.","The type representing a reference to this type.","Returns a raw pointer to the wrapped value.","Returns a raw pointer to the wrapped value.","","","A macro to easily define wrappers for foreign types.","Returns the argument unchanged.","Constructs an instance of this type from its raw type.","Constructs a shared instance of this type from its raw …","Constructs a mutable reference of this type from its raw …","Calls <code>U::from(self)</code>.","Consumes the wrapper and returns the raw pointer.","","",""],"i":[3,4,0,0,0,3,3,4,5,5,0,5,3,4,4,5,3,5,5,5],"f":[0,0,0,0,0,0,[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[],1],[[],1],[[],2]],"c":[],"p":[[4,"Result"],[3,"TypeId"],[8,"ForeignType"],[8,"ForeignTypeRef"],[3,"Opaque"]]},\
"foreign_types_macros":{"doc":"","t":"O","n":["foreign_type_impl"],"q":[[0,"foreign_types_macros"]],"d":[""],"i":[0],"f":[0],"c":[],"p":[]},\
"foreign_types_shared":{"doc":"Internal crate used by foreign-types","t":"QQIIDQKLLLLKLLLLLLL","n":["CType","CType","ForeignType","ForeignTypeRef","Opaque","Ref","as_ptr","as_ptr","borrow","borrow_mut","from","from_ptr","from_ptr","from_ptr_mut","into","into_ptr","try_from","try_into","type_id"],"q":[[0,"foreign_types_shared"]],"d":["The raw C type.","The raw C type.","A type implemented by wrappers over foreign types.","A trait implemented by types which reference borrowed …","An opaque type used to define <code>ForeignTypeRef</code> types.","The type representing a reference to this type.","Returns a raw pointer to the wrapped value.","Returns a raw pointer to the wrapped value.","","","Returns the argument unchanged.","Constructs an instance of this type from its raw type.","Constructs a shared instance of this type from its raw …","Constructs a mutable reference of this type from its raw …","Calls <code>U::from(self)</code>.","Consumes the wrapper and returns the raw pointer.","","",""],"i":[3,4,0,0,0,3,3,4,5,5,5,3,4,4,5,3,5,5,5],"f":[0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],1],[[],1],[[],2]],"c":[],"p":[[4,"Result"],[3,"TypeId"],[8,"ForeignType"],[8,"ForeignTypeRef"],[3,"Opaque"]]},\
"freetype":{"doc":"Rust wrapper around freetype 2 library","t":"GCCCCCCGCCCGCCCCCGAAAACAAAAAAAANDNNNNNNNELLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLNNNNNNNNNNNNNNENGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNLLLLLLLLLLLLLLLLLLSSSSSDSSSNENNSDSSSSSSSSDSSSSSSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLDDLMMLLLLLLLLLLLLLLMLLLLLLMLLLLLLLLLLMLLLLLLENNNNDLLLLLLLLLLLLLLLLLLLLLLLLNNDEDNDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNNNNNNELLLLLLLLLLNNNNNNNDEELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLL","n":["BBox","Bitmap","BitmapGlyph","Error","Face","FtResult","Glyph","GlyphMetrics","GlyphSlot","LcdFilter","Library","Matrix","Outline","RenderMode","Stroker","StrokerLineCap","StrokerLineJoin","Vector","bitmap","bitmap_glyph","error","face","ffi","glyph","glyph_slot","library","outline","render_mode","stroker","tt_os2","tt_postscript","Bgra","Bitmap","Gray","Gray2","Gray4","Lcd","LcdV","Mono","None","PixelMode","borrow","borrow","borrow_mut","borrow_mut","buffer","clone","clone_into","eq","equivalent","fmt","from","from","from_raw","into","into","pitch","pixel_mode","raw","rows","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","width","BitmapGlyph","bitmap","borrow","borrow_mut","clone","clone_into","drop","from","from_raw","into","left","raw","to_owned","top","try_from","try_into","type_id","ArrayTooLarge","BadArgument","BbxTooBig","CMapTableMissing","CannotOpenResource","CannotOpenStream","CannotRenderGlyph","CodeOverflow","CorruptedFontGlyphs","CorruptedFontHeader","CouldNotFindContext","DebugOpCode","DivideByZero","ENDFInExecStream","Error","ExecutionTooLong","FtResult","HmtxTableMissing","HorizHeaderMissing","Ignore","InvalidArgument","InvalidCacheHandle","InvalidCharMapFormat","InvalidCharMapHandle","InvalidCharacterCode","InvalidCodeRange","InvalidComposite","InvalidDriverHandle","InvalidFaceHandle","InvalidFileFormat","InvalidFrameOperation","InvalidFrameRead","InvalidGlyphFormat","InvalidGlyphIndex","InvalidHandle","InvalidHorizMetrics","InvalidLibraryHandle","InvalidOffset","InvalidOpcode","InvalidOutline","InvalidPPem","InvalidPath","InvalidPixelSize","InvalidPostTable","InvalidPostTableFormat","InvalidReference","InvalidSizeHandle","InvalidSlotHandle","InvalidStreamHandle","InvalidStreamOperation","InvalidStreamRead","InvalidStreamSeek","InvalidStreamSkip","InvalidTable","InvalidVersion","InvalidVertMetrics","LocationsMissing","LowerModuleVersion","Max","MissingBbxField","MissingCharsField","MissingEncodingField","MissingFontField","MissingFontboundingboxField","MissingModule","MissingProperty","MissingSizeField","MissingStartcharField","MissingStartfontField","NameTableMissing","NestedDEFS","NestedFrameAccess","NoUnicodeGlyphName","Ok","OutOfMemory","PostTableMissing","RasterCorrupted","RasterNegativeHeight","RasterOverflow","RasterUninitialized","StackOverflow","StackUnderflow","Syntax","TableMissing","TooFewArguments","TooManyCaches","TooManyDrivers","TooManyExtensions","TooManyFunctionDefs","TooManyHints","TooManyInstructionDefs","UnexpectedPixelMode","UnimplementedFeature","Unknown","UnknownFileFormat","UnlistedObject","borrow","borrow_mut","clone","clone_into","description","eq","equivalent","fmt","fmt","from","from","into","provide","to_owned","to_string","try_from","try_into","type_id","BOLD","COLOR","CROP_BITMAP","DEFAULT","FORCE_AUTOHINT","Face","IGNORE_GLOBAL_ADVANCE_WITH","IGNORE_TRANSFORM","ITALIC","KerningDefault","KerningMode","KerningUnfitted","KerningUnscaled","LINEAR_DESIGN","LoadFlag","MONOCHROME","NO_AUTOHINT","NO_BITMAP","NO_HINTING","NO_RECURSE","NO_SCALE","PEDANTIC","RENDER","StyleFlag","TARGET_LCD","TARGET_LCD_V","TARGET_LIGHT","TARGET_MONO","TARGET_NORMAL","VERTICAL_LAYOUT","all","all","ascender","attach_file","bitand","bitand","bitand_assign","bitand_assign","bitor","bitor","bitor_assign","bitor_assign","bits","bits","bitxor","bitxor","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","cmp","complement","complement","contains","contains","descender","difference","difference","drop","em_size","empty","empty","eq","eq","eq","equivalent","equivalent","equivalent","extend","extend","family_name","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from_bits","from_bits","from_bits_truncate","from_bits_truncate","from_bits_unchecked","from_bits_unchecked","from_iter","from_iter","from_raw","get_char_index","get_kerning","glyph","has_color","has_fixed_sizes","has_glyph_names","has_horizontal","has_kerning","has_vertical","hash","hash","hash","height","insert","insert","intersection","intersection","intersects","intersects","into","into","into","into","is_all","is_all","is_cid_keyed","is_empty","is_empty","is_fixed_width","is_scalable","is_sfnt","is_tricky","load_char","load_glyph","max_advance_height","max_advance_width","not","not","num_faces","partial_cmp","partial_cmp","postscript_name","raw","raw_mut","reference","remove","remove","set","set","set_char_size","set_pixel_sizes","set_transform","size_metrics","style_flags","style_name","sub","sub","sub_assign","sub_assign","symmetric_difference","symmetric_difference","to_owned","to_owned","to_owned","to_owned","toggle","toggle","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","underline_position","underline_thickness","union","union","Glyph","advance_x","advance_y","borrow","borrow_mut","clone","clone_into","drop","format","from","from_raw","get_cbox","into","raw","stroke","stroke_border","to_bitmap","to_owned","transform","try_from","try_into","type_id","GlyphSlot","SubGlyphInfo","advance","arg1","arg2","bitmap","bitmap_left","bitmap_top","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","eq","equivalent","flags","from","from","from_raw","get_glyph","get_subglyph_info","hash","index","into","into","linear_hori_advance","linear_vert_advance","metrics","outline","raw","render_glyph","to_owned","to_owned","transfrom","try_from","try_from","try_into","try_into","type_id","type_id","LcdFilter","LcdFilterDefault","LcdFilterLegacy","LcdFilterLight","LcdFilterNone","Library","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","drop","from","from","init","into","into","new_face","new_memory_face","new_stroker","raw","set_lcd_filter","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","Bezier2","Bezier3","ContourIterator","Curve","CurveIterator","Line","Outline","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","contours","contours_iter","from","from","from","from","from_raw","from_raw","from_raw","into","into","into","into","into_iter","into_iter","next","next","points","start","tags","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","Lcd","LcdV","Light","Max","Mono","Normal","RenderMode","borrow","borrow_mut","clone","clone_into","from","into","to_owned","try_from","try_into","type_id","Bevel","Butt","MiterFixed","MiterVariable","Round","Round","Square","Stroker","StrokerLineCap","StrokerLineJoin","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","drop","eq","eq","equivalent","equivalent","fmt","fmt","from","from","from","from_raw","into","into","into","raw","raw_mut","set","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","TrueTypeOS2Table","avg_char_width","borrow","borrow_mut","clone","clone_into","from","from_face","fs_selection","fs_type","into","s_family_class","s_typo_ascender","s_typo_descender","s_typo_line_gap","to_owned","try_from","try_into","type_id","us_weight_class","us_width_class","version","x_height","y_strikeout_position","y_strikeout_size","y_subscript_x_offset","y_subscript_x_size","y_subscript_y_offset","y_subscript_y_size","y_superscript_x_offset","y_superscript_x_size","y_superscript_y_offset","y_superscript_y_size","TrueTypePostscriptTable","borrow","borrow_mut","clone","clone_into","format_type","from","from_face","into","is_fixed_pitch","italic_angle","max_mem_type_1","max_mem_type_42","min_mem_type_1","min_mem_type_42","to_owned","try_from","try_into","type_id","underline_position","underline_thickness"],"q":[[0,"freetype"],[31,"freetype::bitmap"],[68,"freetype::bitmap_glyph"],[85,"freetype::error"],[199,"freetype::face"],[392,"freetype::glyph"],[414,"freetype::glyph_slot"],[458,"freetype::library"],[488,"freetype::outline"],[538,"freetype::render_mode"],[555,"freetype::stroker"],[603,"freetype::tt_os2"],[636,"freetype::tt_postscript"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An image with four 8-bit channels per pixel, representing …","","An 8-bit bitmap, generally used to represent anti-aliased …","A 2-bit per pixel bitmap, used to represent embedded …","A 4-bit per pixel bitmap, representing embedded …","An 8-bit bitmap, representing RGB or BGR decimated glyph …","An 8-bit bitmap, representing RGB or BGR decimated glyph …","A monochrome bitmap, using 1 bit per pixel. Note that …","This value is reserved.","An enumeration type used to describe the format of pixels …","","","","","A typeless pointer to the bitmap buffer. This value should …","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","The pitch’s absolute value is the number of bytes taken …","The pixel mode, i.e., how pixel bits are stored. See …","","The number of bitmap rows.","","","","","","","","The number of pixels in bitmap row.","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the set containing all flags.","Returns the set containing all flags.","","","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Adds the set of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Toggles the set of flags.","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","","","Returns an empty set of flags.","Returns an empty set of flags.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","","","","","","","","","","","","","","","","","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","","","","","","","","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","","","","","","","","Removes the specified flags in-place.","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","","","","","","","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","","","","","Toggles the specified flags in-place.","Toggles the specified flags in-place.","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Represents a retrieved glyph from the library","","","","","","","","An enumeration type used to describe the format of a given …","Returns the argument unchanged.","Create a freetype-rs glyph object from c constituent parts","Return a glyph’s ‘control box’. The control box …","Calls <code>U::from(self)</code>.","Get the underlying c glyph struct (The system actually …","","","Convert a given glyph object to a bitmap glyph object.","","Transform a glyph image if its format is scalable.","","","","A struct encapsulating the space for a glyph within a …","A description of a given subglyph returned by …","This shorthand is, depending on FT_LOAD_IGNORE_TRANSFORM, …","The subglyph’s first argument (if any).","The subglyph’s second argument (if any).","This field is used as a bitmap descriptor when the slot …","The bitmap’s left bearing expressed in integer pixels. …","The bitmap’s top bearing expressed in integer pixels. …","","","","","","","","","","","","The subglyph flags, see FT_SUBGLYPH_FLAG_XXX.","Returns the argument unchanged.","Returns the argument unchanged.","Create a <code>GlyphSlot</code> from its constituent C parts","Returns a glyph object, that is similar to a <code>GlyphSlot</code> but …","Retrieve a description of a given subglyph. Only use it if …","","The glyph index of the subglyph.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","The advance width of the unhinted glyph. Its value is …","The advance height of the unhinted glyph. Its value is …","The metrics of the last loaded glyph in the slot. The …","In freetype, the <code>Outline</code> object is a scalable glyph. This …","Get a pointer to the underlying c struct","Convert a given glyph image to a bitmap. It does so by …","","","The subglyph transformation (if any).","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","This function is used to create a new FreeType library …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Open a font file using its pathname. <code>face_index</code> should be …","Similar to <code>new_face</code>, but loads file data from a byte array …","","Get the underlying library object","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","",""],"if":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[1,[[3,[2]]]],[4,4],[[]],[[4,4],5],[[],5],[[4,6],7],[[]],[[]],[8,1],[[]],[[]],[1,9],[1,[[10,[4]]]],[1,8],[1,9],[[]],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[1,9],0,[13,1],[[]],[[]],[13,13],[[]],[13],[[]],[[14,15],13],[[]],[13,9],[13,16],[[]],[13,9],[[],11],[[],11],[[],12],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[17,17],[[]],[17,18],[[17,17],5],[[],5],[[17,6],7],[[17,6],7],[[]],[9,17],[[]],[19],[[]],[[],20],[[],11],[[],11],[[],12],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],21],[[],22],[23,24],[[23,18],10],[[21,21],21],[[22,22],22],[[21,21]],[[22,22]],[[21,21],21],[[22,22],22],[[21,21]],[[22,22]],[21,9],[22,25],[[21,21],21],[[22,22],22],[[21,21]],[[22,22]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[26,26],[21,21],[22,22],[23,23],[[]],[[]],[[]],[[]],[[21,21],27],[[22,22],27],[21,21],[22,22],[[21,21],5],[[22,22],5],[23,24],[[21,21],21],[[22,22],22],[23],[23,24],[[],21],[[],22],[[21,21],5],[[22,22],5],[[23,23],5],[[],5],[[],5],[[],5],[[21,28]],[[22,28]],[23,[[29,[20]]]],[[21,6],7],[[21,6],7],[[21,6],7],[[21,6],7],[[21,6],7],[[22,6],7],[[22,6],7],[[22,6],7],[[22,6],7],[[22,6],7],[[23,6],7],[[]],[[]],[[]],[[]],[9,[[29,[21]]]],[25,[[29,[22]]]],[9,21],[25,22],[9,21],[25,22],[28,21],[28,22],[[14,30,[29,[[32,[[31,[2]]]]]]],23],[[23,33],34],[[23,34,34,26],[[10,[35]]]],[23,36],[23,5],[23,5],[23,5],[23,5],[23,5],[23,5],[[21,37]],[[22,37]],[[23,37]],[23,24],[[21,21]],[[22,22]],[[21,21],21],[[22,22],22],[[21,21],5],[[22,22],5],[[]],[[]],[[]],[[]],[21,5],[22,5],[23,5],[21,5],[22,5],[23,5],[23,5],[23,5],[23,5],[[23,33,21],10],[[23,34,21],10],[23,24],[23,24],[21,21],[22,22],[23,24],[[21,21],[[29,[27]]]],[[22,22],[[29,[27]]]],[23,[[29,[20]]]],[23,38],[23,38],[23,10],[[21,21]],[[22,22]],[[21,21,5]],[[22,22,5]],[[23,39,39,34,34],10],[[23,34,34],10],[[23,40,35]],[23,[[29,[41]]]],[23,22],[23,[[29,[20]]]],[[21,21],21],[[22,22],22],[[21,21]],[[22,22]],[[21,21],21],[[22,22],22],[[]],[[]],[[]],[[]],[[21,21]],[[22,22]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[],12],[[],12],[23,24],[23,24],[[21,21],21],[[22,22],22],0,[42,39],[42,39],[[]],[[]],[42,42],[[]],[42],[42,43],[[]],[[14,44],42],[[42,45],46],[[]],[42,47],[[42,48],[[10,[42]]]],[[42,48,5],[[10,[42]]]],[[42,49,[29,[35]]],[[10,[13]]]],[[]],[[42,[29,[40]],[29,[35]]],10],[[],11],[[],11],[[],12],0,0,[36,35],0,0,[36,1],[36,9],[36,9],[[]],[[]],[[]],[[]],[50,50],[36,36],[[]],[[]],[[],50],[[36,36],5],[[],5],0,[[]],[[]],[[14,51],36],[36,[[10,[42]]]],[[36,34],[[10,[50]]]],[[36,37]],0,[[]],[[]],[36,52],[36,52],[36,53],[36,[[29,[54]]]],[36,55],[[36,49],10],[[]],[[]],0,[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[56,56],[[]],[57],[[]],[[]],[[],[[10,[57]]]],[[]],[[]],[[57,[59,[58]],39],[[10,[23]]]],[[57,[60,[[32,[[31,[2]]]]]],39],[[10,[23]]]],[57,[[10,[48]]]],[57,14],[[57,56],10],[[]],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[61,61],[[]],[54,[[3,[62]]]],[54,63],[[]],[[]],[[]],[[]],[64,54],[[64,39,39],65],[64,63],[[]],[[]],[[]],[[]],[[]],[[]],[65,29],[63,29],[54,[[3,[35]]]],[65,35],[54,[[3,[66]]]],[[]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[],12],[[],12],0,0,0,0,0,0,0,[[]],[[]],[49,49],[[]],[[]],[[]],[[]],[[],11],[[],11],[[],12],0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[67,67],[68,68],[[]],[[]],[48],[[67,67],5],[[68,68],5],[[],5],[[],5],[[67,6],7],[[68,6],7],[[]],[[]],[[]],[[14,69],48],[[]],[[]],[[]],[48,70],[48,70],[[48,52,67,68,52]],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[],12],0,[71,24],[[]],[[]],[71,71],[[]],[[]],[23,[[29,[71]]]],[71,72],[71,72],[[]],[71,24],[71,24],[71,24],[71,24],[[]],[[],11],[[],11],[[],12],[71,72],[71,72],[71,72],[71,24],[71,24],[71,24],[71,24],[71,24],[71,24],[71,24],[71,24],[71,24],[71,24],[71,24],0,[[]],[[]],[73,73],[[]],[73,52],[[]],[23,[[29,[73]]]],[[]],[73,74],[73,52],[73,74],[73,74],[73,74],[73,74],[[]],[[],11],[[],11],[[],12],[73,24],[73,24]],"c":[],"p":[[3,"Bitmap"],[15,"u8"],[15,"slice"],[4,"PixelMode"],[15,"bool"],[3,"Formatter"],[6,"Result"],[3,"FT_Bitmap"],[15,"i32"],[6,"FtResult"],[4,"Result"],[3,"TypeId"],[3,"BitmapGlyph"],[6,"FT_Library"],[6,"FT_BitmapGlyph"],[3,"FT_BitmapGlyphRec"],[4,"Error"],[15,"str"],[3,"Demand"],[3,"String"],[3,"LoadFlag"],[3,"StyleFlag"],[3,"Face"],[6,"FT_Short"],[6,"FT_Long"],[4,"KerningMode"],[4,"Ordering"],[8,"IntoIterator"],[4,"Option"],[6,"FT_Face"],[3,"Vec"],[3,"Rc"],[15,"usize"],[15,"u32"],[6,"Vector"],[3,"GlyphSlot"],[8,"Hasher"],[3,"FT_FaceRec"],[15,"isize"],[6,"Matrix"],[3,"FT_Size_Metrics"],[3,"Glyph"],[6,"FT_Glyph_Format"],[6,"FT_Glyph"],[6,"FT_Glyph_BBox_Mode"],[6,"BBox"],[3,"FT_GlyphRec"],[3,"Stroker"],[4,"RenderMode"],[3,"SubGlyphInfo"],[6,"FT_GlyphSlot"],[6,"FT_Fixed"],[6,"GlyphMetrics"],[3,"Outline"],[3,"FT_GlyphSlotRec"],[4,"LcdFilter"],[3,"Library"],[3,"OsStr"],[8,"AsRef"],[8,"Into"],[4,"Curve"],[6,"c_short"],[3,"ContourIterator"],[3,"FT_Outline"],[3,"CurveIterator"],[6,"c_char"],[4,"StrokerLineCap"],[4,"StrokerLineJoin"],[6,"FT_Stroker"],[6,"FT_StrokerRec"],[3,"TrueTypeOS2Table"],[6,"FT_UShort"],[3,"TrueTypePostscriptTable"],[6,"FT_ULong"]]},\
"freetype_sys":{"doc":"","t":"IFGFFDDGDDGGGFGGDDFFFFFGGRRRRRRRRRRRRRRRRRRRGRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRGGGRRRRRRRRRRRRRRRRRRRRRGGDGGGFGRRRRRRRRRRDGFFFFFFFFFFFFFGDGDFFGFGFDFFFFFFFFFFFFFFFFFGGGGRRRGRRRRRRRRRRRRRRRRRRRRRRRRRRRGGGFGDDFFGDGDGGFFFFFRRRRRRRRRRRRRRRRRRRGDFGDGDFGFGFFFFFDFFFFFFGGFFFFFFRRRRRRRRRDGGGFFGRRRRRRGGDGFFFGGGFFRRRRRRRRRRRRRRRRRRRRRRRRRFFFFFFFGGGDGGDGDGGGDGGGDGGGGGGFFFFFFFFFGGFFFFFGGGGGGGGGGDDDGDGMMMMMMMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMLLMMMMMMMMGLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMRRRRRRRRMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMKLMMMMMLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM","n":["FTErrorMethods","FT_Add_Default_Modules","FT_Alloc_Func","FT_Attach_File","FT_Attach_Stream","FT_BBox","FT_Bitmap","FT_BitmapGlyph","FT_BitmapGlyphRec","FT_Bitmap_Size","FT_Bool","FT_Byte","FT_Bytes","FT_CeilFix","FT_Char","FT_CharMap","FT_CharMapRec","FT_Data","FT_DivFix","FT_Done_Face","FT_Done_FreeType","FT_Done_Glyph","FT_Done_Library","FT_Driver","FT_DriverRec","FT_ENCODING_ADOBE_CUSTOM","FT_ENCODING_ADOBE_EXPERT","FT_ENCODING_ADOBE_LATIN_1","FT_ENCODING_ADOBE_STANDARD","FT_ENCODING_APPLE_ROMAN","FT_ENCODING_BIG5","FT_ENCODING_GB2312","FT_ENCODING_JOHAB","FT_ENCODING_MS_BIG5","FT_ENCODING_MS_GB2312","FT_ENCODING_MS_JOHAB","FT_ENCODING_MS_SJIS","FT_ENCODING_MS_SYMBOL","FT_ENCODING_MS_WANSUNG","FT_ENCODING_NONE","FT_ENCODING_OLD_LATIN_2","FT_ENCODING_SJIS","FT_ENCODING_UNICODE","FT_ENCODING_WANSUNG","FT_Encoding","FT_Err_Array_Too_Large","FT_Err_Bad_Argument","FT_Err_Bbx_Too_Big","FT_Err_CMap_Table_Missing","FT_Err_Cannot_Open_Resource","FT_Err_Cannot_Open_Stream","FT_Err_Cannot_Render_Glyph","FT_Err_Code_Overflow","FT_Err_Corrupted_Font_Glyphs","FT_Err_Corrupted_Font_Header","FT_Err_Could_Not_Find_Context","FT_Err_Debug_OpCode","FT_Err_Divide_By_Zero","FT_Err_ENDF_In_Exec_Stream","FT_Err_Execution_Too_Long","FT_Err_Hmtx_Table_Missing","FT_Err_Horiz_Header_Missing","FT_Err_Ignore","FT_Err_Invalid_Argument","FT_Err_Invalid_Cache_Handle","FT_Err_Invalid_CharMap_Format","FT_Err_Invalid_CharMap_Handle","FT_Err_Invalid_Character_Code","FT_Err_Invalid_CodeRange","FT_Err_Invalid_Composite","FT_Err_Invalid_Driver_Handle","FT_Err_Invalid_Face_Handle","FT_Err_Invalid_File_Format","FT_Err_Invalid_Frame_Operation","FT_Err_Invalid_Frame_Read","FT_Err_Invalid_Glyph_Format","FT_Err_Invalid_Glyph_Index","FT_Err_Invalid_Handle","FT_Err_Invalid_Horiz_Metrics","FT_Err_Invalid_Library_Handle","FT_Err_Invalid_Offset","FT_Err_Invalid_Opcode","FT_Err_Invalid_Outline","FT_Err_Invalid_PPem","FT_Err_Invalid_Pixel_Size","FT_Err_Invalid_Post_Table","FT_Err_Invalid_Post_Table_Format","FT_Err_Invalid_Reference","FT_Err_Invalid_Size_Handle","FT_Err_Invalid_Slot_Handle","FT_Err_Invalid_Stream_Handle","FT_Err_Invalid_Stream_Operation","FT_Err_Invalid_Stream_Read","FT_Err_Invalid_Stream_Seek","FT_Err_Invalid_Stream_Skip","FT_Err_Invalid_Table","FT_Err_Invalid_Version","FT_Err_Invalid_Vert_Metrics","FT_Err_Locations_Missing","FT_Err_Lower_Module_Version","FT_Err_Max","FT_Err_Missing_Bbx_Field","FT_Err_Missing_Chars_Field","FT_Err_Missing_Encoding_Field","FT_Err_Missing_Font_Field","FT_Err_Missing_Fontboundingbox_Field","FT_Err_Missing_Module","FT_Err_Missing_Property","FT_Err_Missing_Size_Field","FT_Err_Missing_Startchar_Field","FT_Err_Missing_Startfont_Field","FT_Err_Name_Table_Missing","FT_Err_Nested_DEFS","FT_Err_Nested_Frame_Access","FT_Err_No_Unicode_Glyph_Name","FT_Err_Ok","FT_Err_Out_Of_Memory","FT_Err_Post_Table_Missing","FT_Err_Raster_Corrupted","FT_Err_Raster_Negative_Height","FT_Err_Raster_Overflow","FT_Err_Raster_Uninitialized","FT_Err_Stack_Overflow","FT_Err_Stack_Underflow","FT_Err_Syntax_Error","FT_Err_Table_Missing","FT_Err_Too_Few_Arguments","FT_Err_Too_Many_Caches","FT_Err_Too_Many_Drivers","FT_Err_Too_Many_Extensions","FT_Err_Too_Many_Function_Defs","FT_Err_Too_Many_Hints","FT_Err_Too_Many_Instruction_Defs","FT_Err_Unimplemented_Feature","FT_Err_Unknown_File_Format","FT_Err_Unlisted_Object","FT_Error","FT_F26Dot6","FT_F2Dot14","FT_FACE_FLAG_CID_KEYED","FT_FACE_FLAG_COLOR","FT_FACE_FLAG_EXTERNAL_STREAM","FT_FACE_FLAG_FAST_GLYPHS","FT_FACE_FLAG_FIXED_SIZES","FT_FACE_FLAG_FIXED_WIDTH","FT_FACE_FLAG_GLYPH_NAMES","FT_FACE_FLAG_HINTER","FT_FACE_FLAG_HORIZONTAL","FT_FACE_FLAG_KERNING","FT_FACE_FLAG_MULTIPLE_MASTERS","FT_FACE_FLAG_SCALABLE","FT_FACE_FLAG_SFNT","FT_FACE_FLAG_TRICKY","FT_FACE_FLAG_VERTICAL","FT_FSTYPE_BITMAP_EMBEDDING_ONLY","FT_FSTYPE_EDITABLE_EMBEDDING","FT_FSTYPE_INSTALLABLE_EMBEDDING","FT_FSTYPE_NO_SUBSETTING","FT_FSTYPE_PREVIEW_AND_PRINT_EMBEDDING","FT_FSTYPE_RESTRICTED_LICENSE_EMBEDDING","FT_FWord","FT_Face","FT_FaceRec","FT_Face_Internal","FT_Face_InternalRec","FT_Fixed","FT_FloorFix","FT_Free_Func","FT_GLYPH_BBOX_GRIDFIT","FT_GLYPH_BBOX_PIXELS","FT_GLYPH_BBOX_SUBPIXELS","FT_GLYPH_BBOX_TRUNCATE","FT_GLYPH_BBOX_UNSCALED","FT_GLYPH_FORMAT_BITMAP","FT_GLYPH_FORMAT_COMPOSITE","FT_GLYPH_FORMAT_NONE","FT_GLYPH_FORMAT_OUTLINE","FT_GLYPH_FORMAT_PLOTTER","FT_Generic","FT_Generic_Finalizer","FT_Get_Char_Index","FT_Get_Charmap_Index","FT_Get_FSType_Flags","FT_Get_First_Char","FT_Get_Glyph","FT_Get_Glyph_Name","FT_Get_Kerning","FT_Get_Name_Index","FT_Get_Next_Char","FT_Get_Postscript_Name","FT_Get_Sfnt_Table","FT_Get_SubGlyph_Info","FT_Get_Track_Kerning","FT_Glyph","FT_GlyphRec","FT_GlyphSlot","FT_GlyphSlotRec","FT_GlyphSlot_Embolden","FT_GlyphSlot_Oblique","FT_Glyph_BBox_Mode","FT_Glyph_Copy","FT_Glyph_Format","FT_Glyph_Get_CBox","FT_Glyph_Metrics","FT_Glyph_Stroke","FT_Glyph_StrokeBorder","FT_Glyph_To_Bitmap","FT_Glyph_Transform","FT_HAS_COLOR","FT_HAS_FIXED_SIZES","FT_HAS_GLYPH_NAMES","FT_HAS_HORIZONTAL","FT_HAS_KERNING","FT_HAS_MULTIPLE_MASTERS","FT_HAS_VERTICAL","FT_IS_CID_KEYED","FT_IS_FIXED_WIDTH","FT_IS_SCALABLE","FT_IS_SFNT","FT_IS_TRICKY","FT_Init_FreeType","FT_Int","FT_Int16","FT_Int32","FT_Int64","FT_KERNING_DEFAULT","FT_KERNING_UNFITTED","FT_KERNING_UNSCALED","FT_Kerning_Mode","FT_LCD_FILTER_DEFAULT","FT_LCD_FILTER_LEGACY","FT_LCD_FILTER_LEGACY1","FT_LCD_FILTER_LIGHT","FT_LCD_FILTER_MAX","FT_LCD_FILTER_NONE","FT_LOAD_COLOR","FT_LOAD_CROP_BITMAP","FT_LOAD_DEFAULT","FT_LOAD_FORCE_AUTOHINT","FT_LOAD_IGNORE_GLOBAL_ADVANCE_WIDTH","FT_LOAD_IGNORE_TRANSFORM","FT_LOAD_LINEAR_DESIGN","FT_LOAD_MONOCHROME","FT_LOAD_NO_AUTOHINT","FT_LOAD_NO_BITMAP","FT_LOAD_NO_HINTING","FT_LOAD_NO_RECURSE","FT_LOAD_NO_SCALE","FT_LOAD_PEDANTIC","FT_LOAD_RENDER","FT_LOAD_TARGET_LCD","FT_LOAD_TARGET_LCD_V","FT_LOAD_TARGET_LIGHT","FT_LOAD_TARGET_MONO","FT_LOAD_TARGET_NORMAL","FT_LOAD_VERTICAL_LAYOUT","FT_LcdFilter","FT_Library","FT_LibraryRec","FT_Library_SetLcdFilter","FT_ListNode","FT_ListNodeRec","FT_ListRec","FT_Load_Char","FT_Load_Glyph","FT_Long","FT_Matrix","FT_Memory","FT_MemoryRec","FT_Module","FT_ModuleRec","FT_MulDiv","FT_MulFix","FT_New_Face","FT_New_Library","FT_New_Memory_Face","FT_OPEN_DRIVER","FT_OPEN_MEMORY","FT_OPEN_PARAMS","FT_OPEN_PATHNAME","FT_OPEN_STREAM","FT_ORIENTATION_FILL_LEFT","FT_ORIENTATION_FILL_RIGHT","FT_ORIENTATION_NONE","FT_ORIENTATION_POSTSCRIPT","FT_ORIENTATION_TRUETYPE","FT_OUTLINE_EVEN_ODD_FILL","FT_OUTLINE_HIGH_PRECISION","FT_OUTLINE_IGNORE_DROPOUTS","FT_OUTLINE_INCLUDE_STUBS","FT_OUTLINE_NONE","FT_OUTLINE_OWNER","FT_OUTLINE_REVERSE_FILL","FT_OUTLINE_SINGLE_PASS","FT_OUTLINE_SMART_DROPOUTS","FT_Offset","FT_Open_Args","FT_Open_Face","FT_Orientation","FT_Outline","FT_OutlineGlyph","FT_OutlineGlyphRec","FT_Outline_Check","FT_Outline_ConicToFunc","FT_Outline_Copy","FT_Outline_CubicToFunc","FT_Outline_Decompose","FT_Outline_Done","FT_Outline_Done_Internal","FT_Outline_Embolden","FT_Outline_EmboldenXY","FT_Outline_Funcs","FT_Outline_GetInsideBorder","FT_Outline_GetOutsideBorder","FT_Outline_Get_BBox","FT_Outline_Get_Bitmap","FT_Outline_Get_CBox","FT_Outline_Get_Orientation","FT_Outline_LineToFunc","FT_Outline_MoveToFunc","FT_Outline_New","FT_Outline_New_Internal","FT_Outline_Render","FT_Outline_Reverse","FT_Outline_Transform","FT_Outline_Translate","FT_PIXEL_MODE_BGRA","FT_PIXEL_MODE_GRAY","FT_PIXEL_MODE_GRAY2","FT_PIXEL_MODE_GRAY4","FT_PIXEL_MODE_LCD","FT_PIXEL_MODE_LCD_V","FT_PIXEL_MODE_MAX","FT_PIXEL_MODE_MONO","FT_PIXEL_MODE_NONE","FT_Parameter","FT_Pixel_Mode","FT_Pointer","FT_Pos","FT_Property_Get","FT_Property_Set","FT_PtrDist","FT_RENDER_MODE_LCD","FT_RENDER_MODE_LCD_V","FT_RENDER_MODE_LIGHT","FT_RENDER_MODE_MAX","FT_RENDER_MODE_MONO","FT_RENDER_MODE_NORMAL","FT_Raster_BitSet_Func","FT_Raster_BitTest_Func","FT_Raster_Params","FT_Realloc_Func","FT_Reference_Face","FT_Reference_Library","FT_Render_Glyph","FT_Render_Mode","FT_Renderer","FT_RendererRec","FT_Request_Size","FT_RoundFix","FT_SIZE_REQUEST_TYPE_BBOX","FT_SIZE_REQUEST_TYPE_CELL","FT_SIZE_REQUEST_TYPE_MAX","FT_SIZE_REQUEST_TYPE_NOMINAL","FT_SIZE_REQUEST_TYPE_REAL_DIM","FT_SIZE_REQUEST_TYPE_SCALES","FT_STROKER_BORDER_LEFT","FT_STROKER_BORDER_RIGHT","FT_STROKER_LINECAP_BUTT","FT_STROKER_LINECAP_ROUND","FT_STROKER_LINECAP_SQUARE","FT_STROKER_LINEJOIN_BEVEL","FT_STROKER_LINEJOIN_MITER","FT_STROKER_LINEJOIN_MITER_FIXED","FT_STROKER_LINEJOIN_MITER_VARIABLE","FT_STROKER_LINEJOIN_ROUND","FT_STYLE_FLAG_BOLD","FT_STYLE_FLAG_ITALIC","FT_SUBGLYPH_FLAG_2X2","FT_SUBGLYPH_FLAG_ARGS_ARE_WORDS","FT_SUBGLYPH_FLAG_ARGS_ARE_XY_VALUES","FT_SUBGLYPH_FLAG_ROUND_XY_TO_GRID","FT_SUBGLYPH_FLAG_SCALE","FT_SUBGLYPH_FLAG_USE_MY_METRICS","FT_SUBGLYPH_FLAG_XY_SCALE","FT_Select_CharMap","FT_Select_Size","FT_Set_Char_Size","FT_Set_Charmap","FT_Set_Default_Properties","FT_Set_Pixel_Sizes","FT_Set_Transform","FT_Sfnt_Tag","FT_Short","FT_Size","FT_SizeRec","FT_Size_Internal","FT_Size_InternalRec","FT_Size_Metrics","FT_Size_Request","FT_Size_RequestRec","FT_Size_Request_Type","FT_Slot_Internal","FT_Slot_InternalRec","FT_Span","FT_SpanFunc","FT_Stream","FT_StreamDesc","FT_StreamRec","FT_Stream_CloseFunc","FT_Stream_IoFunc","FT_String","FT_Stroker","FT_StrokerBorder","FT_StrokerRec","FT_Stroker_BeginSubPath","FT_Stroker_ConicTo","FT_Stroker_CubicTo","FT_Stroker_Done","FT_Stroker_EndSubPath","FT_Stroker_Export","FT_Stroker_ExportBorder","FT_Stroker_GetBorderCounts","FT_Stroker_GetCounts","FT_Stroker_LineCap","FT_Stroker_LineJoin","FT_Stroker_LineTo","FT_Stroker_New","FT_Stroker_ParseOutline","FT_Stroker_Rewind","FT_Stroker_Set","FT_SubGlyph","FT_SubGlyphRec","FT_Tag","FT_UFWord","FT_UInt","FT_UInt16","FT_UInt32","FT_UInt64","FT_ULong","FT_UShort","FT_UnitVector","FT_Vector","TT_OS2","TT_OS2_Internal","TT_Postscript","TT_Postscript_Internal","achVendID","advance","advance","alloc","ascender","ascender","autohint","available_sizes","base","bbox","bit_set","bit_test","bitmap","bitmap","bitmap_left","bitmap_top","black_spans","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffer","charmap","charmaps","clazz","clip_box","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","close","conic_to","contours","control_data","control_len","coverage","cubic_to","cursor","data","data","data","default","default","delta","descender","descender","descriptor","driver","driver","encoding","encoding_id","enum_FT_Sfnt_Tag_","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extensions","face","face","face","face_flags","face_index","family_name","finalizer","flags","flags","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","format","format","formatType","free","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","fsSelection","fsType","ft_sfnt_head","ft_sfnt_hhea","ft_sfnt_max","ft_sfnt_maxp","ft_sfnt_os2","ft_sfnt_pclt","ft_sfnt_post","ft_sfnt_vhea","generic","generic","generic","glyph","gray_spans","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","head","height","height","height","height","height","horiAdvance","horiBearingX","horiBearingY","horiResolution","internal","internal","internal","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","isFixedPitch","italicAngle","left","len","length","library","library","limit","line_to","linearHoriAdvance","linearVertAdvance","lsb_delta","maxMemType1","maxMemType42","max_advance","max_advance_height","max_advance_width","memory","memory","memory_base","memory_size","metrics","metrics","minMemType1","minMemType42","move_to","n_contours","n_points","next","next","num_charmaps","num_faces","num_fixed_sizes","num_glyphs","num_grays","num_params","num_subglyphs","other","outline","outline","palette","palette_mode","panose","params","pathname","pathname","pitch","pixel_mode","platform_id","pointer","points","pos","prev","read","realloc","reserved","root","root","rows","rsb_delta","sCapHeight","sFamilyClass","sTypoAscender","sTypoDescender","sTypoLineGap","shift","size","size","size","size_request_type","sizes_list","source","stream","stream","style_flags","style_name","subglyphs","succeeded","succeeded","sxHeight","tag","tags","tail","target","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","top","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","ulCodePageRange1","ulCodePageRange2","ulUnicodeRange1","ulUnicodeRange2","ulUnicodeRange3","ulUnicodeRange4","underlinePosition","underlineThickness","underline_position","underline_thickness","units_per_EM","usBreakChar","usDefaultChar","usFirstCharIndex","usLastCharIndex","usMaxContext","usWeightClass","usWidthClass","usWinAscent","usWinDescent","user","user","version","vertAdvance","vertBearingX","vertBearingY","vertResolution","width","width","width","width","x","x","x","xAvgCharWidth","xMax","xMin","x_ppem","x_ppem","x_scale","xx","xy","y","y","yMax","yMin","yStrikeoutPosition","yStrikeoutSize","ySubscriptXOffset","ySubscriptXSize","ySubscriptYOffset","ySubscriptYSize","ySuperscriptXOffset","ySuperscriptXSize","ySuperscriptYOffset","ySuperscriptYSize","y_ppem","y_ppem","y_scale","yx","yy"],"q":[[0,"freetype_sys"]],"deturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeif":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,[3,3],[4,4],[5,5],[6,6],[7,7],[8,8],[9,9],[10,10],[11,11],[12,12],[13,13],[14,14],[15,15],[16,16],[17,17],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,[[],3],[[],4],0,0,0,0,0,0,0,0,0,[[3,3],2],[[4,4],2],[[5,5],2],[[6,6],2],[[18,18],2],[[19,19],2],[[20,20],2],[[7,7],2],[[21,21],2],[[8,8],2],[[9,9],2],[[22,22],2],[[10,10],2],[[11,11],2],[[12,12],2],[[13,13],2],[[14,14],2],[[23,23],2],[[24,24],2],[[25,25],2],[[26,26],2],[[27,27],2],[[15,15],2],[[28,28],2],[[16,16],2],[[29,29],2],[[30,30],2],[[31,31],2],[[17,17],2],[[32,32],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],0,0,0,0,0,0,0,0,0,0,0,[[3,33],34],[[4,33],34],[[5,33],34],[[6,33],34],[[18,33],34],[[19,33],34],[[20,33],34],[[7,33],34],[[21,33],34],[[8,33],34],[[9,33],34],[[22,33],34],[[10,33],34],[[11,33],34],[[12,33],34],[[13,33],34],[[14,33],34],[[23,33],34],[[24,33],34],[[25,33],34],[[26,33],34],[[27,33],34],[[15,33],34],[[28,33],34],[[16,33],34],[[29,33],34],[[30,33],34],[[31,33],34],[[17,33],34],[[32,33],34],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[3,35]],[[4,35]],[[5,35]],[[6,35]],[[18,35]],[[19,35]],[[20,35]],[[7,35]],[[21,35]],[[8,35]],[[9,35]],[[22,35]],[[10,35]],[[11,35]],[[12,35]],[[13,35]],[[14,35]],[[23,35]],[[24,35]],[[25,35]],[[26,35]],[[27,35]],[[15,35]],[[28,35]],[[16,35]],[[29,35]],[[30,35]],[[31,35]],[[17,35]],[[32,35]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],2],[36,2],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"c":[],"p":[[6,"FT_Face"],[15,"bool"],[3,"FT_Vector"],[3,"FT_BBox"],[3,"FT_Matrix"],[3,"FT_UnitVector"],[3,"FT_Size_Metrics"],[3,"FT_Glyph_Metrics"],[3,"FT_Parameter"],[3,"FT_Bitmap_Size"],[3,"TT_OS2"],[3,"TT_Postscript"],[3,"FT_Span"],[3,"FT_CharMapRec"],[3,"FT_ListRec"],[3,"FT_Size_RequestRec"],[3,"FT_Outline_Funcs"],[3,"FT_Bitmap"],[3,"FT_Data"],[3,"FT_Generic"],[3,"FT_Outline"],[3,"FT_Open_Args"],[3,"FT_FaceRec"],[3,"FT_GlyphSlotRec"],[3,"FT_SizeRec"],[3,"FT_StreamRec"],[3,"FT_MemoryRec"],[3,"FT_ListNodeRec"],[3,"FT_GlyphRec"],[3,"FT_BitmapGlyphRec"],[3,"FT_OutlineGlyphRec"],[3,"FT_Raster_Params"],[3,"Formatter"],[6,"Result"],[8,"Hasher"],[6,"FT_Error"],[4,"Result"],[3,"TypeId"],[8,"FTErrorMethods"]]},\
"futures_core":{"doc":"Core traits and types for asynchronous operations in Rust.","t":"CCCCCCAOAAGQICGQIKKGQIQGQIIKKLKCCCCC","n":["FusedFuture","FusedStream","Future","Stream","TryFuture","TryStream","future","ready","stream","task","BoxFuture","Error","FusedFuture","Future","LocalBoxFuture","Ok","TryFuture","is_terminated","try_poll","BoxStream","Error","FusedStream","Item","LocalBoxStream","Ok","Stream","TryStream","is_terminated","poll_next","size_hint","try_poll_next","Context","Poll","RawWaker","RawWakerVTable","Waker"],"q":[[0,"futures_core"],[10,"futures_core::future"],[19,"futures_core::stream"],[31,"futures_core::task"]],"d":["","","","","","","Futures.","Extracts the successful type of a <code>Poll&lt;T&gt;</code>.","Asynchronous streams.","Task notification.","An owned dynamically typed <code>Future</code> for use in cases where …","The type of failures yielded by this future","A future which tracks whether or not the underlying future …","","<code>BoxFuture</code>, but without the <code>Send</code> requirement.","The type of successful values yielded by this future","A convenience for futures that return <code>Result</code> values that …","Returns <code>true</code> if the underlying future should no longer be …","Poll this <code>TryFuture</code> as if it were a <code>Future</code>.","An owned dynamically typed <code>Stream</code> for use in cases where …","The type of failures yielded by this future","A stream which tracks whether or not the underlying stream …","Values yielded by the stream.","<code>BoxStream</code>, but without the <code>Send</code> requirement.","The type of successful values yielded by this future","A stream of values produced asynchronously.","A convenience for streams that return <code>Result</code> values that …","Returns <code>true</code> if the stream should no longer be polled.","Attempt to pull out the next value of this stream, …","Returns the bounds on the remaining length of the stream.","Poll this <code>TryStream</code> as if it were a <code>Stream</code>.","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,7,0,0,0,7,0,8,7,0,9,0,10,0,9,0,0,11,10,10,9,0,0,0,0,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[2,3],[[5,[4]]]],0,0,0,0,0,0,0,0,[[],1],[[2,3],[[5,[6]]]],[[]],[[2,3],[[5,[[6,[4]]]]]],0,0,0,0,0],"c":[],"p":[[15,"bool"],[3,"Pin"],[3,"Context"],[4,"Result"],[4,"Poll"],[4,"Option"],[8,"TryFuture"],[8,"FusedFuture"],[8,"TryStream"],[8,"Stream"],[8,"FusedStream"]]},\
"futures_io":{"doc":"Asynchronous I/O","t":"IIIICCCCCCKKKKKLLKKLL","n":["AsyncBufRead","AsyncRead","AsyncSeek","AsyncWrite","Error","ErrorKind","IoSlice","IoSliceMut","Result","SeekFrom","consume","poll_close","poll_fill_buf","poll_flush","poll_read","poll_read_vectored","poll_read_vectored","poll_seek","poll_write","poll_write_vectored","poll_write_vectored"],"q":[[0,"futures_io"]],"d":["Read bytes asynchronously.","Read bytes asynchronously.","Seek bytes asynchronously.","Write bytes asynchronously.","","","","","","","Tells this buffer that <code>amt</code> bytes have been consumed from …","Attempt to close the object.","Attempt to return the contents of the internal buffer, …","Attempt to flush the object, ensuring that any buffered …","Attempt to read from the <code>AsyncRead</code> into <code>buf</code>.","Attempt to read from the <code>AsyncRead</code> into <code>bufs</code> using vectored","Attempt to read from the <code>AsyncRead</code> into <code>bufs</code> using vectored","Attempt to seek to an offset, in bytes, in a stream.","Attempt to write bytes from <code>buf</code> into the object.","Attempt to write bytes from <code>bufs</code> into the object using …","Attempt to write bytes from <code>bufs</code> into the object using …"],"i":[0,0,0,0,0,0,0,0,0,0,12,13,12,13,14,14,14,15,13,13,13],"f":[0,0,0,0,0,0,0,0,0,0,[[1,2]],[[1,3],[[5,[4]]]],[[1,3],[[5,[[4,[[7,[6]]]]]]]],[[1,3],[[5,[4]]]],[[1,3,[7,[6]]],[[5,[[4,[2]]]]]],[[1,3,[7,[8]]],[[5,[[4,[2]]]]]],[[1,3,[7,[8]]],[[5,[[4,[2]]]]]],[[1,3,9],[[5,[[4,[10]]]]]],[[1,3,[7,[6]]],[[5,[[4,[2]]]]]],[[1,3,[7,[11]]],[[5,[[4,[2]]]]]],[[1,3,[7,[11]]],[[5,[[4,[2]]]]]]],"c":[],"p":[[3,"Pin"],[15,"usize"],[3,"Context"],[6,"Result"],[4,"Poll"],[15,"u8"],[15,"slice"],[3,"IoSliceMut"],[4,"SeekFrom"],[15,"u64"],[3,"IoSlice"],[8,"AsyncBufRead"],[8,"AsyncWrite"],[8,"AsyncRead"],[8,"AsyncSeek"]]},\
"futures_lite":{"doc":"Futures, streams, and async I/O combinators.","t":"CCCCCCCCCCCCAAOAOAGGDCIDDDDDDDDDFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLFLLLLLLLLLLLFFFLFLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLFFDDCICICICIDGGDDDDDDDCCDDDDDDDDDDDDCCDDDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMFLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLCCCCCCCCCCCCDDDGGDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDCIDDDDDDDDDDDLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLFFFLLFLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLL","n":["AsyncBufRead","AsyncBufReadExt","AsyncRead","AsyncReadExt","AsyncSeek","AsyncSeekExt","AsyncWrite","AsyncWriteExt","Future","FutureExt","Stream","StreamExt","future","io","pin","prelude","ready","stream","Boxed","BoxedLocal","CatchUnwind","Future","FutureExt","Or","Pending","PollFn","PollOnce","Race","Ready","TryZip","YieldNow","Zip","block_on","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","boxed","boxed_local","catch_unwind","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","into","into","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","or","or","pending","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll_fn","poll_once","race","race","ready","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_zip","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","yield_now","zip","AssertAsync","AsyncAsSync","AsyncBufRead","AsyncBufReadExt","AsyncRead","AsyncReadExt","AsyncSeek","AsyncSeekExt","AsyncWrite","AsyncWriteExt","BlockOn","BoxedReader","BoxedWriter","BufReader","BufWriter","Bytes","Chain","CloseFuture","Cursor","Empty","Error","ErrorKind","FillBuf","FlushFuture","Lines","ReadExactFuture","ReadFuture","ReadHalf","ReadLineFuture","ReadToEndFuture","ReadToStringFuture","ReadUntilFuture","ReadVectoredFuture","Repeat","Result","SeekFrom","SeekFuture","Sink","Split","Take","WriteAllFuture","WriteFuture","WriteHalf","WriteVectoredFuture","as_mut","as_ref","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","boxed_reader","boxed_writer","buffer","buffer","bytes","chain","clone","clone","clone_into","clone_into","close","close","cmp","consume","consume","consume","consume","consume","consume","consume","context","copy","default","empty","eq","equivalent","fill_buf","fill_buf","flush","flush","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","hash","inner","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","limit","lines","new","new","new","new","new","new","partial_cmp","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_fill_buf","poll_fill_buf","poll_fill_buf","poll_fill_buf","poll_fill_buf","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_next","poll_next","poll_next","poll_read","poll_read","poll_read","poll_read","poll_read","poll_read","poll_read","poll_read","poll_read","poll_read_vectored","poll_read_vectored","poll_read_vectored","poll_read_vectored","poll_read_vectored","poll_read_vectored","poll_seek","poll_seek","poll_seek","poll_seek","poll_with","poll_write","poll_write","poll_write","poll_write","poll_write","poll_write","poll_write","poll_write","poll_write_vectored","poll_write_vectored","position","read","read","read","read_exact","read_line","read_to_end","read_to_string","read_until","read_vectored","read_vectored","repeat","seek","seek","seek","set_limit","set_position","sink","split","split","take","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll_next","try_poll_next","try_poll_next","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","with_capacity","with_capacity","write","write","write","write_all","write_vectored","write_vectored","AsyncBufRead","AsyncRead","AsyncSeek","AsyncWrite","Future","Stream","_","_","_","_","_","_","AllFuture","AnyFuture","BlockOn","Boxed","BoxedLocal","Chain","Cloned","CollectFuture","Copied","CountFuture","Cycle","Empty","Enumerate","Filter","FilterMap","FindFuture","FindMapFuture","FlatMap","Flatten","FoldFuture","ForEachFuture","Fuse","Inspect","Iter","LastFuture","Map","NextFuture","NthFuture","Once","OnceFuture","Or","PartitionFuture","Pending","PollFn","PositionFuture","Race","Repeat","RepeatWith","Scan","Skip","SkipWhile","StepBy","Stream","StreamExt","Take","TakeWhile","Then","TryCollectFuture","TryFoldFuture","TryForEachFuture","TryNextFuture","TryUnfold","Unfold","UnzipFuture","Zip","all","all","any","any","block_on","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","boxed","boxed_local","chain","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cloned","collect","copied","count","count","cycle","empty","enumerate","filter","filter_map","find","find","find_map","find_map","flat_map","flatten","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fold","fold","for_each","for_each","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","fuse","inspect","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_iter","iter","last","last","map","next","next","nth","nth","once","once_future","or","or","partition","pending","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll_fn","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","position","position","race","race","repeat","repeat_with","scan","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","skip","skip_while","step_by","take","take_while","then","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_collect","try_fold","try_for_each","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_next","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_unfold","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unfold","unzip","zip"],"q":[[0,"futures_lite"],[18,"futures_lite::future"],[155,"futures_lite::io"],[636,"futures_lite::prelude"],[648,"futures_lite::stream"]],"d":["","","","","","","","","","","","","Combinators for the <code>Future</code> trait.","Tools and combinators for I/O.","Pins a variable of type <code>T</code> on the stack and rebinds it as …","Traits <code>Future</code>, <code>Stream</code>, <code>AsyncRead</code>, <code>AsyncWrite</code>, <code>AsyncBufRead</code>,","Unwraps <code>Poll&lt;T&gt;</code> or returns <code>Pending</code>.","Combinators for the <code>Stream</code> trait.","Type alias for …","Type alias for <code>Pin&lt;Box&lt;dyn Future&lt;Output = T&gt; + &#39;static&gt;&gt;</code>.","Future for the <code>FutureExt::catch_unwind()</code> method.","","Extension trait for <code>Future</code>.","Future for the <code>or()</code> function and the <code>FutureExt::or()</code> …","Future for the <code>pending()</code> function.","Future for the <code>poll_fn()</code> function.","Future for the <code>poll_once()</code> function.","Future for the <code>race()</code> function and the <code>FutureExt::race()</code> …","Future for the <code>ready()</code> function.","Future for the <code>try_zip()</code> function.","Future for the <code>yield_now()</code> function.","Future for the <code>zip()</code> function.","Blocks the current thread on a future.","","","","","","","","","","","","","","","","","","","","","Boxes the future and changes its type to …","Boxes the future and changes its type to <code>dyn Future + &#39;a</code>.","Catches panics while polling the future.","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Returns the result of the future that completes first, …","Returns the result of <code>self</code> or <code>other</code> future, preferring <code>self</code>…","Creates a future that is always pending.","","A convenience for calling <code>Future::poll()</code> on <code>!</code><code>Unpin</code> types.","","","","","","","","","","Creates a future from a function returning <code>Poll</code>.","Polls a future just once and returns an <code>Option</code> with the …","Returns the result of the future that completes first, …","Returns the result of <code>self</code> or <code>other</code> future, with no …","Creates a future that resolves to the provided value.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Joins two fallible futures, waiting for both to complete …","","","","","","","","","","","Wakes the current task and returns <code>Poll::Pending</code> once.","Joins two futures, waiting for both to complete.","Asserts that a type implementing <code>std::io</code> traits can be …","A wrapper around a type that implements <code>AsyncRead</code> or …","","Extension trait for <code>AsyncBufRead</code>.","","Extension trait for <code>AsyncRead</code>.","","Extension trait for <code>AsyncSeek</code>.","","Extension trait for <code>AsyncWrite</code>.","Blocks on all async I/O operations and implements <code>std::io</code> …","Type alias for <code>Pin&lt;Box&lt;dyn AsyncRead + Send + &#39;static&gt;&gt;</code>.","Type alias for <code>Pin&lt;Box&lt;dyn AsyncWrite + Send + &#39;static&gt;&gt;</code>.","Adds buffering to a reader.","Adds buffering to a writer.","Reader for the <code>AsyncReadExt::bytes()</code> method.","Reader for the <code>AsyncReadExt::chain()</code> method.","Future for the <code>AsyncWriteExt::close()</code> method.","Gives an in-memory buffer a cursor for reading and writing.","Reader for the <code>empty()</code> function.","","","Future for the <code>AsyncBufReadExt::fill_buf()</code> method.","Future for the <code>AsyncWriteExt::flush()</code> method.","Stream for the <code>AsyncBufReadExt::lines()</code> method.","Future for the <code>AsyncReadExt::read_exact()</code> method.","Future for the <code>AsyncReadExt::read()</code> method.","The read half returned by <code>split()</code>.","Future for the <code>AsyncBufReadExt::read_line()</code> method.","Future for the <code>AsyncReadExt::read_to_end()</code> method.","Future for the <code>AsyncReadExt::read_to_string()</code> method.","Future for the <code>AsyncBufReadExt::read_until()</code> method.","Future for the <code>AsyncReadExt::read_vectored()</code> method.","Reader for the <code>repeat()</code> function.","","","Future for the <code>AsyncSeekExt::seek()</code> method.","Writer for the <code>sink()</code> function.","Stream for the <code>AsyncBufReadExt::split()</code> method.","Reader for the <code>AsyncReadExt::take()</code> method.","Future for the <code>AsyncWriteExt::write_all()</code> method.","Future for the <code>AsyncWriteExt::write()</code> method.","The write half returned by <code>split()</code>.","Future for the <code>AsyncWriteExt::write_vectored()</code> method.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Boxes the reader and changes its type to …","Boxes the writer and changes its type to …","Returns a reference to the internal buffer.","Returns a reference to the internal buffer.","Converts this <code>AsyncRead</code> into a <code>Stream</code> of bytes.","Creates an adapter which will chain this stream with …","","","","","Closes the writer.","Attempt to shutdown the I/O handle.","","","Consumes <code>amt</code> buffered bytes.","","","","","","The context we are using to poll the future.","Copies the entire contents of a reader into a writer.","","Creates an empty reader.","","","Returns the contents of the internal buffer, filling it …","","Flushes the stream to ensure that all buffered contents …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Gets a mutable reference to the inner I/O handle.","Gets a mutable reference to the async I/O handle.","Gets a mutable reference to the underlying reader.","Gets a mutable reference to the underlying writer.","Gets a mutable reference to the underlying buffer.","Gets a mutable reference to the underlying reader.","Gets mutable references to the underlying readers.","Gets a reference to the inner I/O handle.","Gets a reference to the async I/O handle.","Gets a reference to the underlying reader.","Gets a reference to the underlying writer.","Gets a reference to the underlying buffer.","Gets a reference to the underlying reader.","Gets references to the underlying readers.","","The actual reader/writer we are wrapping.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Extracts the inner I/O handle.","Extracts the inner async I/O handle.","Unwraps the buffered reader, returning the underlying …","Unwraps the buffered writer, returning the underlying …","Unwraps the cursor, returning the underlying buffer.","Unwraps the adapter, returning the underlying reader.","Unwraps the adapter, returning the underlying readers.","Returns the number of bytes before this adapter will …","Returns a stream over the lines of this byte stream.","Wraps an I/O handle implementing <code>std::io</code> traits.","Wraps an I/O handle implementing <code>AsyncRead</code> or <code>AsyncWrite</code> …","Wraps an async I/O handle into a blocking interface.","Creates a buffered reader with the default buffer capacity.","Creates a buffered writer with the default buffer capacity.","Creates a cursor for an in-memory buffer.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Seeks to an offset, in bytes, in the underlying reader.","Seek to the offset, in bytes, in the underlying writer.","","Poll this <code>AsyncAsSync</code> for some function.","","","","","","","","","","","Returns the current position of this cursor.","Reads some bytes from the byte stream.","","","Reads the exact number of bytes required to fill <code>buf</code>.","Reads all bytes and appends them into <code>buf</code> until a newline …","Reads the entire contents and appends them to a <code>Vec</code>.","Reads the entire contents and appends them to a <code>String</code>.","Reads all bytes and appends them into <code>buf</code> until the …","Like <code>read()</code>, except it reads into a slice of buffers.","","Creates an infinite reader that reads the same byte …","Seeks to a new position in a byte stream.","","","Puts a limit on the number of bytes.","Sets the position of this cursor.","Creates a writer that consumes and drops all data.","Splits a stream into <code>AsyncRead</code> and <code>AsyncWrite</code> halves.","Returns a stream over the contents of this reader split on …","Creates an adapter which will read at most <code>limit</code> bytes …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a buffered reader with the specified capacity.","Creates a buffered writer with the specified buffer …","Writes some bytes into the byte stream.","","","Writes an entire buffer into the byte stream.","Like <code>write()</code>, except that it writes a slice of buffers.","","","","","","","","","","","","","","Future for the <code>StreamExt::all()</code> method.","Future for the <code>StreamExt::any()</code> method.","Iterator for the <code>block_on()</code> function.","Type alias for …","Type alias for <code>Pin&lt;Box&lt;dyn Stream&lt;Item = T&gt; + &#39;static&gt;&gt;</code>.","Stream for the <code>StreamExt::chain()</code> method.","Stream for the <code>StreamExt::cloned()</code> method.","Future for the <code>StreamExt::collect()</code> method.","Stream for the <code>StreamExt::copied()</code> method.","Future for the <code>StreamExt::count()</code> method.","Stream for the <code>StreamExt::cycle()</code> method.","Stream for the <code>empty()</code> function.","Stream for the <code>StreamExt::enumerate()</code> method.","Stream for the <code>StreamExt::filter()</code> method.","Stream for the <code>StreamExt::filter_map()</code> method.","Future for the <code>StreamExt::find()</code> method.","Future for the <code>StreamExt::find_map()</code> method.","Stream for the <code>StreamExt::flat_map()</code> method.","Stream for the <code>StreamExt::flatten()</code> method.","Future for the <code>StreamExt::fold()</code> method.","Future for the <code>StreamExt::for_each()</code> method.","Stream for the <code>StreamExt::fuse()</code> method.","Stream for the <code>StreamExt::inspect()</code> method.","Stream for the <code>iter()</code> function.","Future for the <code>StreamExt::last()</code> method.","Stream for the <code>StreamExt::map()</code> method.","Future for the <code>StreamExt::next()</code> method.","Future for the <code>StreamExt::nth()</code> method.","Stream for the <code>once()</code> function.","Stream for the <code>once_future()</code> method.","Stream for the <code>or()</code> function and the <code>StreamExt::or()</code> …","Future for the <code>StreamExt::partition()</code> method.","Stream for the <code>pending()</code> function.","Stream for the <code>poll_fn()</code> function.","Future for the <code>StreamExt::position()</code> method.","Stream for the <code>race()</code> function and the <code>StreamExt::race()</code> …","Stream for the <code>repeat()</code> function.","Stream for the <code>repeat_with()</code> function.","Stream for the <code>StreamExt::scan()</code> method.","Stream for the <code>StreamExt::skip()</code> method.","Stream for the <code>StreamExt::skip_while()</code> method.","Stream for the <code>StreamExt::step_by()</code> method.","","Extension trait for <code>Stream</code>.","Stream for the <code>StreamExt::take()</code> method.","Stream for the <code>StreamExt::take_while()</code> method.","Stream for the <code>StreamExt::then()</code> method.","Future for the <code>StreamExt::try_collect()</code> method.","Future for the <code>StreamExt::try_fold()</code> method.","Future for the <code>StreamExt::try_for_each()</code> method.","Future for the <code>StreamExt::try_next()</code> method.","Stream for the <code>try_unfold()</code> function.","Stream for the <code>unfold()</code> function.","Future for the <code>StreamExt::unzip()</code> method.","Stream for the <code>StreamExt::zip()</code> method.","Tests if <code>predicate</code> returns <code>true</code> for all items in the …","","Tests if <code>predicate</code> returns <code>true</code> for any item in the stream.","","Converts a stream into a blocking iterator.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Boxes the stream and changes its type to …","Boxes the stream and changes its type to <code>dyn Stream + &#39;a</code>.","Appends another stream to the end of this one.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Clones all items.","Collects all items in the stream into a collection.","Copies all items.","Counts the number of items in the stream.","","Repeats the stream from beginning to end, forever.","Creates an empty stream.","Enumerates items, mapping them to <code>(index, item)</code>.","Keeps items of the stream for which <code>predicate</code> returns <code>true</code>.","Filters and maps items of the stream using a closure.","Finds the first item of the stream for which <code>predicate</code> …","","Applies a closure to items in the stream and returns the …","","Maps items to streams and then concatenates them.","Concatenates inner streams.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Accumulates a computation over the stream.","","Calls a closure on each item of the stream.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Fuses the stream so that it stops yielding items after the …","Calls a closure on each item and passes it on.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","Creates a stream from an iterator.","Returns the last item in the stream.","","Maps items of the stream to new values using a closure.","Retrieves the next item in the stream.","","Gets the <code>n</code>th item of the stream.","","Creates a stream that yields a single item.","Creates a stream that invokes the given future as its …","Merges two streams, preferring items from <code>stream1</code> whenever …","Merges with <code>other</code> stream, preferring items from <code>self</code> …","Partitions items into those for which <code>predicate</code> is <code>true</code> …","Creates a stream that is always pending.","","","","","","","","","","","","","","","","","","","Creates a stream from a function returning <code>Poll</code>.","A convenience for calling <code>Stream::poll_next()</code> on <code>!</code><code>Unpin</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Finds the index of the first item of the stream for which …","","Merges two streams, with no preference for either stream …","Merges with <code>other</code> stream, with no preference for either …","Creates an infinite stream that yields the same item …","Creates an infinite stream from a closure that generates …","Maps items of the stream to new values using a state value …","","","","","","","","","","Skips the first <code>n</code> items of the stream.","Skips items while <code>predicate</code> returns <code>true</code>.","Yields every <code>step</code>th item.","Takes only the first <code>n</code> items of the stream.","Takes items while <code>predicate</code> returns <code>true</code>.","Maps items of the stream to new values using an async …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Collects all items in the fallible stream into a …","Accumulates a fallible computation over the stream.","Calls a fallible closure on each item of the stream, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Retrieves the next item in the stream.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a stream from a seed value and a fallible async …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a stream from a seed value and an async closure …","Collects a stream of pairs into a pair of collections.","Zips up two streams into a single stream of pairs."],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,11,12,14,15,16,17,18,19,7,8,11,12,14,15,16,17,18,19,7,140,140,140,8,11,12,14,15,16,17,18,19,7,8,11,12,14,15,16,17,18,19,7,8,11,12,14,15,16,17,18,19,7,8,11,12,14,15,16,17,18,19,7,0,140,0,8,140,11,12,14,15,16,17,18,19,7,0,0,0,140,0,8,11,12,14,15,16,17,18,19,7,8,11,12,14,15,16,17,18,19,7,8,12,14,17,18,19,7,0,8,11,12,14,15,16,17,18,19,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,26,26,42,36,26,26,45,29,32,37,54,55,52,56,57,58,59,60,61,62,63,64,47,33,34,65,66,67,68,53,38,69,70,42,36,26,26,45,29,32,37,54,55,52,56,57,58,59,60,61,62,63,64,47,33,34,65,66,67,68,53,38,69,70,141,142,29,32,141,141,36,37,36,37,142,26,36,42,143,45,29,37,47,34,26,0,37,0,36,36,143,45,142,26,45,42,36,26,45,29,32,37,54,55,52,56,57,58,59,60,61,62,63,64,47,33,34,65,66,67,68,53,38,69,70,42,36,26,45,29,32,37,54,55,52,56,57,58,59,60,61,62,63,64,47,33,34,65,66,67,68,53,38,69,70,36,45,29,32,37,47,34,36,45,29,32,37,47,34,36,26,42,36,26,45,29,32,37,54,55,52,56,57,58,59,60,61,62,63,64,47,33,34,65,66,67,68,53,38,69,70,52,56,57,60,61,62,63,64,65,66,67,68,53,38,36,45,29,32,37,47,34,47,143,36,26,45,29,32,37,36,52,56,57,60,61,62,63,64,65,66,67,68,53,38,36,29,32,37,37,37,55,70,42,29,37,47,34,36,29,32,37,37,37,55,70,58,59,33,42,36,29,37,54,47,33,34,69,36,29,37,33,34,69,36,29,32,37,26,36,29,32,37,37,37,55,70,36,37,37,141,26,45,141,143,141,141,143,141,26,0,144,26,45,47,37,0,0,143,141,36,37,42,36,26,45,29,32,37,54,55,52,56,57,58,59,60,61,62,63,64,47,33,34,65,66,67,68,53,38,69,70,42,36,26,45,29,32,37,54,55,52,56,57,58,59,60,61,62,63,64,47,33,34,65,66,67,68,53,38,69,70,52,56,57,60,61,62,63,64,65,66,67,68,53,38,58,59,33,42,36,26,45,29,32,37,54,55,52,56,57,58,59,60,61,62,63,64,47,33,34,65,66,67,68,53,38,69,70,29,32,142,26,45,142,142,26,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,145,87,145,87,0,87,90,91,92,93,94,95,96,97,98,125,126,127,122,121,128,129,130,131,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,89,114,115,116,117,118,132,133,123,124,134,85,88,135,136,119,137,87,90,91,92,93,94,95,96,97,98,125,126,127,122,121,128,129,130,131,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,89,114,115,116,117,118,132,133,123,124,134,85,88,135,136,119,137,145,145,145,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,89,114,115,116,117,118,119,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,89,114,115,116,117,118,119,145,145,145,145,87,145,0,145,145,145,145,87,145,87,145,145,87,90,91,92,93,94,95,96,97,98,125,126,127,122,121,128,129,130,131,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,89,114,115,116,117,118,132,133,123,124,134,85,88,135,136,119,137,145,87,145,87,87,90,91,92,93,94,95,96,97,98,125,126,127,122,121,128,129,130,131,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,89,114,115,116,117,118,132,133,123,124,134,85,88,135,136,119,137,145,145,87,90,91,92,93,94,95,96,97,98,125,126,127,122,121,128,129,130,131,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,89,114,115,116,117,118,132,133,123,124,134,85,88,135,136,119,137,126,127,122,121,128,129,130,131,132,133,123,124,134,85,88,135,136,137,87,0,145,87,145,145,87,145,87,0,0,0,145,145,0,126,127,122,121,128,129,130,131,132,133,123,124,134,85,88,135,136,137,0,145,90,91,92,93,94,95,96,97,98,125,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,89,114,115,116,117,118,119,145,87,0,145,0,0,145,87,90,91,92,93,95,96,101,104,145,145,145,145,145,145,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,89,114,115,116,117,118,119,145,145,145,87,90,91,92,93,94,95,96,97,98,125,126,127,122,121,128,129,130,131,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,89,114,115,116,117,118,132,133,123,124,134,85,88,135,136,119,137,87,90,91,92,93,94,95,96,97,98,125,126,127,122,121,128,129,130,131,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,89,114,115,116,117,118,132,133,123,124,134,85,88,135,136,119,137,145,127,128,130,131,136,90,91,92,93,94,95,96,97,98,125,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,89,114,115,116,118,0,87,90,91,92,93,94,95,96,97,98,125,126,127,122,121,128,129,130,131,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,89,114,115,116,117,118,132,133,123,124,134,85,88,135,136,119,137,0,145,145],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[0,[2,3]]],[[5,[[4,[1]]]]]],[2,[[5,[[4,[1]]]]]],[[[0,[2,6]]],[[7,[[0,[2,6]]]]]],[[8,9],10],[[11,9],10],[[12,9],10],[[[14,[13]],9],10],[[15,9],10],[[[16,[[0,[1,13]],[0,[1,13]]]],9],10],[[[17,[[0,[1,13]],[0,[1,13]]]],9],10],[[[18,[13,13]],9],10],[[[19,[13,13]],9],10],[[[7,[13]],9],10],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[1,1],[[18,[1,1]]]],[[2,1],[[18,[2,1]]]],[[],8],[[[5,[8]],20],21],[[22,20],21],[[[5,[[11,[1]]]],20],21],[[[5,[[12,[23]]]],20],21],[[[5,[14]],20],21],[[[5,[15]],20],21],[[[5,[[16,[1,1]]]],20],21],[[[5,[[17,[1,1]]]],20],21],[[[5,[[18,[1,1]]]],20],21],[[[5,[[19,[1,1]]]],20],21],[[[5,[[7,[[0,[1,6]]]]]],20],21],[23,[[12,[23]]]],[1,[[11,[1]]]],[[1,1],[[19,[1,1]]]],[[2,1],[[19,[2,1]]]],[[],14],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[5,20],21],[[5,20],21],[[5,20],21],[[5,20],21],[[5,20],21],[[5,20],21],[[5,20],21],[[1,1],[[17,[1,1]]]],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],15],[[1,1],[[16,[1,1]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[26],[26],[[]],[[]],[[]],[26],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[26],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[0,[2,3]]],[[5,[[4,[27]]]]]],[[[0,[2,3]]],[[5,[[4,[28]]]]]],[29,[[31,[30]]]],[[[32,[28]]],[[31,[30]]]],[2,[[33,[2]]]],[[2,27],[[34,[2,27]]]],[[[36,[35]]],[[36,[35]]]],[[[37,[35]]],[[37,[35]]]],[[]],[[]],[22,[[38,[22]]]],[[[26,[[0,[28,22]]]]],39],[[[36,[40]],[36,[40]]],41],[[[5,[42]],43]],[[22,43]],[[[45,[[0,[44,22]]]],43]],[[[5,[[29,[27]]]],43]],[[[5,[[37,[[0,[[46,[[31,[30]]]],22]]]]]],43]],[[[5,[[47,[44]]]],43]],[[[5,[[34,[44,44]]]],43]],0,[[[0,[27,22]],[0,[28,22]]],[[39,[48]]]],[[],[[37,[49]]]],[[],42],[[[36,[50]],[36,[50]]],51],[[],51],[22,[[52,[22]]]],[[[45,[[0,[44,22]]]]],[[39,[[31,[30]]]]]],[22,[[53,[22]]]],[[[26,[[0,[28,22]]]]],39],[[[45,[[0,[28,22]]]]],39],[[42,9],10],[[[36,[13]],9],10],[[[26,[13]],9],10],[[[45,[13]],9],10],[[[29,[13]],9],10],[[[32,[13]],9],10],[[[37,[13]],9],10],[[54,9],10],[[55,9],10],[[[52,[[0,[13,2]]]],9],10],[[[56,[[0,[13,22,2]]]],9],10],[[[57,[[0,[13,22,2]]]],9],10],[[[58,[13]],9],10],[[[59,[13]],9],10],[[[60,[[0,[13,22,2]]]],9],10],[[[61,[[0,[13,22,2]]]],9],10],[[[62,[[0,[13,22,2]]]],9],10],[[[63,[[0,[13,22,2]]]],9],10],[[[64,[[0,[13,22,2]]]],9],10],[[[47,[13]],9],10],[[[33,[13]],9],10],[[[34,[13,13]],9],10],[[[65,[[0,[13,22,2]]]],9],10],[[[66,[[0,[13,22,2]]]],9],10],[[[67,[[0,[13,22,2]]]],9],10],[[[68,[[0,[13,22,2]]]],9],10],[[[53,[[0,[13,22,2]]]],9],10],[[[38,[[0,[13,22,2]]]],9],10],[[[69,[13]],9],10],[[[70,[13]],9],10],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[36],[45],[29],[[[32,[28]]],28],[37],[47],[34],[36],[45],[29],[[[32,[28]]],28],[37],[47],[34],[[[36,[71]],72]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[36],[45],[29],[[[32,[28]]],28],[37],[47],[34],[47,48],[[[0,[22,2]]],[[58,[[0,[22,2]]]]]],[[],36],[20,26],[[],45],[27,[[29,[27]]]],[28,[[32,[28]]]],[[],37],[[[36,[73]],[36,[73]]],[[74,[41]]]],[[[5,[[52,[[0,[44,22,2]]]]]],20],21],[[[5,[[56,[[0,[44,22,2]]]]]],20],21],[[[5,[[57,[[0,[44,22,2]]]]]],20],21],[[[5,[[60,[[0,[27,22,2]]]]]],20],21],[[[5,[[61,[[0,[27,22,2]]]]]],20],21],[[[5,[[62,[[0,[27,22,2]]]]]],20],21],[[[5,[[63,[[0,[27,22,2]]]]]],20],21],[[[5,[[64,[[0,[27,22,2]]]]]],20],21],[[[5,[[65,[[0,[75,22,2]]]]]],20],21],[[[5,[[66,[[0,[28,22,2]]]]]],20],21],[[[5,[[67,[[0,[28,22,2]]]]]],20],21],[[[5,[[68,[[0,[28,22,2]]]]]],20],21],[[[5,[[53,[[0,[28,22,2]]]]]],20],21],[[[5,[[38,[[0,[28,22,2]]]]]],20],21],[[[5,[[36,[76]]]],20],[[21,[39]]]],[[[5,[[29,[28]]]],20],[[21,[39]]]],[[[5,[[32,[28]]]],20],[[21,[39]]]],[[[5,[[37,[[31,[30]]]]]],20],[[21,[39]]]],[[[5,[[37,[[77,[30]]]]]],20],[[21,[39]]]],[[[5,[[37,[[77,[30]]]]]],20],[[21,[39]]]],[[[5,[55]],20],[[21,[39]]]],[[[5,[[70,[[0,[28,22]]]]]],20],[[21,[39]]]],[[[5,[42]],20],[[21,[[39,[[31,[30]]]]]]]],[[[5,[[29,[27]]]],20],[[21,[[39,[[31,[30]]]]]]]],[[[5,[[37,[[0,[[46,[[31,[30]]]],22]]]]]],20],[[21,[[39,[[31,[30]]]]]]]],[[[5,[[47,[44]]]],20],[[21,[[39,[[31,[30]]]]]]]],[[[5,[[34,[44,44]]]],20],[[21,[[39,[[31,[30]]]]]]]],[[[5,[[36,[76]]]],20],[[21,[39]]]],[[[5,[[29,[28]]]],20],[[21,[39]]]],[[[5,[[32,[28]]]],20],[[21,[39]]]],[[[5,[[37,[[77,[30]]]]]],20],[[21,[39]]]],[[[5,[[37,[[31,[30]]]]]],20],[[21,[39]]]],[[[5,[[37,[[77,[30]]]]]],20],[[21,[39]]]],[[[5,[55]],20],[[21,[39]]]],[[[5,[[70,[[0,[28,22]]]]]],20],[[21,[39]]]],[[[5,[[58,[44]]]],20],[[21,[74]]]],[[[5,[[59,[44]]]],20],[[21,[74]]]],[[[5,[[33,[[0,[27,22]]]]]],20],[[21,[74]]]],[[[5,[42]],20,[31,[30]]],[[21,[[39,[43]]]]]],[[[5,[[36,[78]]]],20,[31,[30]]],[[21,[[39,[43]]]]]],[[[5,[[29,[27]]]],20,[31,[30]]],[[21,[[39,[43]]]]]],[[[5,[[37,[[0,[[46,[[31,[30]]]],22]]]]]],20,[31,[30]]],[[21,[[39,[43]]]]]],[[[5,[54]],20,[31,[30]]],[[21,[[39,[43]]]]]],[[[5,[[47,[27]]]],20,[31,[30]]],[[21,[[39,[43]]]]]],[[[5,[[33,[27]]]],20,[31,[30]]],[[21,[[39,[43]]]]]],[[[5,[[34,[27,27]]]],20,[31,[30]]],[[21,[[39,[43]]]]]],[[[5,[[69,[[0,[27,22]]]]]],20,[31,[30]]],[[21,[[39,[43]]]]]],[[[5,[[36,[78]]]],20,[31,[79]]],[[21,[[39,[43]]]]]],[[[5,[[29,[27]]]],20,[31,[79]]],[[21,[[39,[43]]]]]],[[[5,[[37,[[0,[[46,[[31,[30]]]],22]]]]]],20,[31,[79]]],[[21,[[39,[43]]]]]],[[[5,[[33,[27]]]],20,[31,[79]]],[[21,[[39,[43]]]]]],[[[5,[[34,[27,27]]]],20,[31,[79]]],[[21,[[39,[43]]]]]],[[[5,[[69,[[0,[27,22]]]]]],20,[31,[79]]],[[21,[[39,[43]]]]]],[[[5,[[36,[80]]]],20,81],[[21,[[39,[48]]]]]],[[[5,[[29,[75]]]],20,81],[[21,[[39,[48]]]]]],[[[5,[[32,[[0,[28,75]]]]]],20,81],[[21,[[39,[48]]]]]],[[[5,[[37,[[0,[[46,[[31,[30]]]],22]]]]]],20,81],[[21,[[39,[48]]]]]],[[[26,[22]],82],39],[[[5,[[36,[76]]]],20,[31,[30]]],[[21,[[39,[43]]]]]],[[[5,[[29,[28]]]],20,[31,[30]]],[[21,[[39,[43]]]]]],[[[5,[[32,[28]]]],20,[31,[30]]],[[21,[[39,[43]]]]]],[[[5,[[37,[[77,[30]]]]]],20,[31,[30]]],[[21,[[39,[43]]]]]],[[[5,[[37,[[77,[30]]]]]],20,[31,[30]]],[[21,[[39,[43]]]]]],[[[5,[[37,[[31,[30]]]]]],20,[31,[30]]],[[21,[[39,[43]]]]]],[[[5,[55]],20,[31,[30]]],[[21,[[39,[43]]]]]],[[[5,[[70,[[0,[28,22]]]]]],20,[31,[30]]],[[21,[[39,[43]]]]]],[[[5,[[36,[76]]]],20,[31,[83]]],[[21,[[39,[43]]]]]],[[[5,[[37,[[31,[30]]]]]],20,[31,[83]]],[[21,[[39,[43]]]]]],[37,48],[[22,[31,[30]]],[[60,[22]]]],[[[26,[[0,[27,22]]]],[31,[30]]],[[39,[43]]]],[[[45,[[0,[27,22]]]],[31,[30]]],[[39,[43]]]],[[22,[31,[30]]],[[64,[22]]]],[[22,84],[[57,[22]]]],[[22,[77,[30]]],[[62,[22]]]],[[22,84],[[63,[22]]]],[[22,30,[77,[30]]],[[56,[22]]]],[[22,[31,[79]]],[[61,[22]]]],[[[26,[[0,[27,22]]]],[31,[79]]],[[39,[43]]]],[30,54],[[22,81],[[65,[22]]]],[[[26,[[0,[75,22]]]],81],[[39,[48]]]],[[[45,[[0,[75,22]]]],81],[[39,[48]]]],[[47,48]],[[37,48]],[[],55],[[[0,[27,28,22]]]],[[2,30],[[59,[2]]]],[[2,48],[[47,[2]]]],[[]],[[]],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[5,20],21],[[5,20],21],[[5,20],21],[[5,20],21],[[5,20],21],[[5,20],21],[[5,20],21],[[5,20],21],[[5,20],21],[[5,20],21],[[5,20],21],[[5,20],21],[[5,20],21],[[5,20],21],[[5,20],[[21,[[74,[24]]]]]],[[5,20],[[21,[[74,[24]]]]]],[[5,20],[[21,[[74,[24]]]]]],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[43,27],[[29,[27]]]],[[43,28],[[32,[28]]]],[[22,[31,[30]]],[[66,[22]]]],[[[26,[[0,[28,22]]]],[31,[30]]],[[39,[43]]]],[[[45,[[0,[28,22]]]],[31,[30]]],[[39,[43]]]],[[22,[31,[30]]],[[68,[22]]]],[[22,[31,[83]]],[[67,[22]]]],[[[26,[[0,[28,22]]]],[31,[83]]],[[39,[43]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[22,23],[[85,[22,23]]]],[[[87,[[0,[86,22]]]],23],51],[[22,23],[[88,[22,23]]]],[[[87,[[0,[86,22]]]],23],51],[[[0,[86,22]]],[[87,[[0,[86,22]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[0,[3,2]]],[[5,[[4,[86]]]]]],[2,[[5,[[4,[86]]]]]],[[2,[0,[86,2]]],[[89,[2,[0,[86,2]]]]]],[[[90,[35]]],[[90,[35]]]],[[[91,[35]]],[[91,[35]]]],[[[92,[35]]],[[92,[35]]]],[[[93,[35]]],[[93,[35]]]],[[[94,[35]]],[[94,[35]]]],[[[95,[35]]],[[95,[35]]]],[[[96,[35]]],[[96,[35]]]],[[[97,[35,35,35]]],[[97,[35,35,35]]]],[[[98,[35,35,35]]],[[98,[35,35,35]]]],[[[99,[35,35,35]]],[[99,[35,35,35]]]],[[[100,[35]]],[[100,[35]]]],[[[101,[35,35]]],[[101,[35,35]]]],[[[102,[35,35,35]]],[[102,[35,35,35]]]],[[[103,[[0,[35,86]]]]],[[103,[[0,[35,86]]]]]],[[[104,[35,35,35]]],[[104,[35,35,35]]]],[[[105,[35,35]]],[[105,[35,35]]]],[[[106,[35,35]]],[[106,[35,35]]]],[[[107,[35,35]]],[[107,[35,35]]]],[[[108,[35,35]]],[[108,[35,35]]]],[[[109,[35]]],[[109,[35]]]],[[[110,[35,35]]],[[110,[35,35]]]],[[[111,[35]]],[[111,[35]]]],[[[112,[35,35]]],[[112,[35,35]]]],[[[113,[35]]],[[113,[35]]]],[[[89,[35,35]]],[[89,[35,35]]]],[[[114,[35]]],[[114,[35]]]],[[[115,[35]]],[[115,[35]]]],[[[116,[35]]],[[116,[35]]]],[[[117,[35]]],[[117,[35]]]],[[[118,[35,35]]],[[118,[35,35]]]],[[[119,[[0,[35,86]],35]]],[[119,[[0,[35,86]],35]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[0,[86,2]]],[[114,[[0,[86,2]]]]]],[2,[[121,[2,[0,[49,120]]]]]],[[[0,[86,2]]],[[115,[[0,[86,2]]]]]],[2,[[122,[2]]]],[[[87,[[0,[86,22]]]]],43],[[[0,[35,2]]],[[116,[[0,[35,2]]]]]],[[],90],[2,[[117,[2]]]],[[2,23],[[105,[2,23]]]],[[2,23],[[108,[2,23]]]],[[22,23],[[123,[22,23]]]],[[[87,[[0,[86,22]]]],23],74],[[22,23],[[124,[22,23]]]],[[[87,[[0,[86,22]]]],23],74],[[2,23],[[102,[2,86,23]]]],[2,[[103,[2]]]],[[[87,[13]],9],10],[[[90,[13]],9],10],[[[91,[13]],9],10],[[[92,[13]],9],10],[[[93,[13]],9],10],[[94,9],10],[[[95,[13]],9],10],[[[96,[13]],9],10],[[[97,[13,13]],9],10],[[[98,[13,13]],9],10],[[[125,[13]],9],10],[[[126,[[0,[13,2]]]],9],10],[[[127,[[0,[13,2]]]],9],10],[[[122,[[0,[13,2]]]],9],10],[[[121,[13,13]],9],10],[[[128,[13,13]],9],10],[[[129,[13,13,13]],9],10],[[[130,[13,13,13]],9],10],[[[131,[13,13,13]],9],10],[[[99,[13,13,13]],9],10],[[[100,[13]],9],10],[[[101,[13,13]],9],10],[[[102,[13,13,13]],9],10],[[[103,[[0,[13,86]]]],9],10],[[[104,[13,13,13]],9],10],[[[105,[13,13]],9],10],[[[106,[13,13]],9],10],[[[107,[13,13]],9],10],[[[108,[13,13]],9],10],[[[109,[13]],9],10],[[[110,[13,13]],9],10],[[[111,[13]],9],10],[[[112,[13,13]],9],10],[[[113,[13]],9],10],[[[89,[13,13]],9],10],[[[114,[13]],9],10],[[[115,[13]],9],10],[[[116,[13]],9],10],[[[117,[13]],9],10],[[[118,[13,13]],9],10],[[[132,[[0,[13,2]]]],9],10],[[[133,[[0,[13,86]]]],9],10],[[[123,[[0,[13,2]],13]],9],10],[[[124,[[0,[13,2]],13]],9],10],[[[134,[[0,[13,2]],13]],9],10],[[[85,[[0,[13,2]],13]],9],10],[[[88,[[0,[13,2]],13]],9],10],[[[135,[13,13]],9],10],[[[136,[[0,[13,2]],13]],9],10],[[[119,[[0,[13,86]],13]],9],10],[[[137,[13,13,13]],9],10],[[2,23],[[130,[2,23]]]],[[[87,[[0,[86,22]]]],23]],[[2,23],[[135,[2,23]]]],[[[87,[[0,[86,22]]]],23]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[2,[[100,[2]]]],[[2,23],[[118,[2,23]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[138,91],[2,[[133,[2]]]],[[[87,[[0,[86,22]]]]],74],[[2,23],[[101,[2,23]]]],[22,[[126,[22]]]],[[[87,[[0,[86,22]]]]],74],[[22,43],[[132,[22]]]],[[[87,[[0,[86,22]]]],43],74],[[],92],[1,[[125,[1]]]],[[86,86],[[106,[86,86]]]],[[2,86],[[106,[2,86]]]],[[2,23],[[129,[2,23,[0,[49,120]]]]]],[[],93],[[[5,[[126,[[0,[86,22,2]]]]]],20],21],[[[5,[[127,[[0,[86,22,2]]]]]],20],21],[[[5,[[122,[[0,[86,2]]]]]],20],21],[[[5,[[121,[86,[0,[49,120]]]]]],20],[[21,[[0,[49,120]]]]]],[[[5,[[128,[86,[0,[49,120]]]]]],20],21],[[[5,[[129,[[0,[86,2]],23,[0,[49,120]]]]]],20],21],[[[5,[[130,[86,23]]]],20],21],[[[5,[[131,[[0,[86,22]],23]]]],20],21],[[[5,[[132,[[0,[86,22,2]]]]]],20],21],[[[5,[[133,[86]]]],20],21],[[[5,[[123,[[0,[86,22,2]],23]]]],20],21],[[[5,[[124,[[0,[86,22,2]],23]]]],20],21],[[[5,[[134,[[0,[86,22,2]],23]]]],20],21],[[[5,[[85,[[0,[86,22,2]],23]]]],20],21],[[[5,[[88,[[0,[86,22,2]],23]]]],20],21],[[[5,[[135,[86,23]]]],20],21],[[[5,[[136,[[0,[86,22,2]],23]]]],20],21],[[[5,[[137,[86,[0,[49,120]],[0,[49,120]]]]]],20],21],[23,[[94,[23]]]],[[22,20],[[21,[74]]]],[[[5,[90]],20],[[21,[74]]]],[[[5,[[91,[139]]]],20],[[21,[74]]]],[[[5,[92]],20],[[21,[74]]]],[[[5,[93]],20],[[21,[74]]]],[[[5,[[94,[23]]]],20],[[21,[74]]]],[[[5,[[95,[35]]]],20],[[21,[74]]]],[[[5,[[96,[23]]]],20],[[21,[74]]]],[[[5,[[97,[23,1]]]],20],[[21,[74]]]],[[[5,[[98,[23,1]]]],20],[[21,[74]]]],[[[5,[[125,[1]]]],20],[[21,[74]]]],[[[5,[[99,[86,23]]]],20],[[21,[74]]]],[[[5,[[100,[86]]]],20],[[21,[74]]]],[[[5,[[101,[86,23]]]],20],[[21,[74]]]],[[[5,[[102,[86,86,23]]]],20],[[21,[74]]]],[[[5,[[103,[86]]]],20],[[21,[74]]]],[[[5,[[104,[86,23,1]]]],20],[[21,[74]]]],[[[5,[[105,[86,23]]]],20],[[21,[74]]]],[[[5,[[106,[86,86]]]],20],[[21,[74]]]],[[[5,[[107,[86,86]]]],20],[[21,[74]]]],[[[5,[[108,[86,23]]]],20],[[21,[74]]]],[[[5,[[109,[86]]]],20],[[21,[74]]]],[[[5,[[110,[86,23]]]],20],[[21,[74]]]],[[[5,[[111,[86]]]],20],[[21,[74]]]],[[[5,[[112,[86,23]]]],20],[[21,[74]]]],[[[5,[[113,[86]]]],20],[[21,[74]]]],[[[5,[[89,[86,86]]]],20],[[21,[74]]]],[[[5,[[114,[86]]]],20],[[21,[74]]]],[[[5,[[115,[86]]]],20],[[21,[74]]]],[[[5,[[116,[[0,[86,35]]]]]],20],[[21,[74]]]],[[[5,[[117,[86]]]],20],[[21,[74]]]],[[[5,[[118,[86,23]]]],20],[[21,[74]]]],[[[5,[[119,[86,86]]]],20],[[21,[74]]]],[[22,23],[[134,[22,23]]]],[[[87,[[0,[86,22]]]],23],[[74,[43]]]],[[86,86],[[107,[86,86]]]],[[2,86],[[107,[2,86]]]],[35,[[95,[35]]]],[23,[[96,[23]]]],[[2,23],[[99,[2,23]]]],[[[87,[[0,[86,22]]]]]],[90],[[[91,[139]]]],[92],[93],[[[95,[35]]]],[[[96,[23]]]],[[[101,[86,23]]]],[[[104,[86,23,1]]]],[[2,43],[[111,[2]]]],[[2,23],[[112,[2,23]]]],[[2,43],[[113,[2]]]],[[2,43],[[109,[2]]]],[[2,23],[[110,[2,23]]]],[[2,23],[[104,[2,23,1]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[0,[86,2]]],[[128,[[0,[86,2]],[0,[49,120]]]]]],[[[0,[86,22,2]],23],[[131,[[0,[86,22,2]],23]]]],[[22,23],[[136,[22,23]]]],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[[0,[86,22]]],[[127,[[0,[86,22]]]]]],[[5,20],21],[[5,20],21],[[5,20],21],[[5,20],21],[[5,20],21],[[5,20],[[21,[[74,[24]]]]]],[[5,20],[[21,[[74,[24]]]]]],[[5,20],[[21,[[74,[24]]]]]],[[5,20],[[21,[[74,[24]]]]]],[[5,20],[[21,[[74,[24]]]]]],[[5,20],[[21,[[74,[24]]]]]],[[5,20],[[21,[[74,[24]]]]]],[[5,20],[[21,[[74,[24]]]]]],[[5,20],[[21,[[74,[24]]]]]],[[5,20],[[21,[[74,[24]]]]]],[[5,20],[[21,[[74,[24]]]]]],[[5,20],[[21,[[74,[24]]]]]],[[5,20],[[21,[[74,[24]]]]]],[[5,20],[[21,[[74,[24]]]]]],[[5,20],[[21,[[74,[24]]]]]],[[5,20],[[21,[[74,[24]]]]]],[[5,20],[[21,[[74,[24]]]]]],[[5,20],[[21,[[74,[24]]]]]],[[5,20],[[21,[[74,[24]]]]]],[[5,20],[[21,[[74,[24]]]]]],[[5,20],[[21,[[74,[24]]]]]],[[5,20],[[21,[[74,[24]]]]]],[[5,20],[[21,[[74,[24]]]]]],[[5,20],[[21,[[74,[24]]]]]],[[5,20],[[21,[[74,[24]]]]]],[[5,20],[[21,[[74,[24]]]]]],[[5,20],[[21,[[74,[24]]]]]],[[5,20],[[21,[[74,[24]]]]]],[[5,20],[[21,[[74,[24]]]]]],[[5,20],[[21,[[74,[24]]]]]],[23,[[98,[23,1]]]],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[23,[[97,[23,1]]]],[[[0,[86,2]]],[[137,[[0,[86,2]],[0,[49,120]],[0,[49,120]]]]]],[[2,86],[[119,[2,86]]]]],"c":[],"p":[[8,"Future"],[8,"Sized"],[8,"Send"],[3,"Box"],[3,"Pin"],[8,"UnwindSafe"],[3,"CatchUnwind"],[3,"Pending"],[3,"Formatter"],[6,"Result"],[3,"PollOnce"],[3,"PollFn"],[8,"Debug"],[3,"Ready"],[3,"YieldNow"],[3,"Zip"],[3,"TryZip"],[3,"Or"],[3,"Race"],[3,"Context"],[4,"Poll"],[8,"Unpin"],[8,"FnMut"],[4,"Result"],[3,"TypeId"],[3,"AsyncAsSync"],[8,"AsyncRead"],[8,"AsyncWrite"],[3,"BufReader"],[15,"u8"],[15,"slice"],[3,"BufWriter"],[3,"Bytes"],[3,"Chain"],[8,"Clone"],[3,"AssertAsync"],[3,"Cursor"],[3,"CloseFuture"],[6,"Result"],[8,"Ord"],[4,"Ordering"],[3,"Empty"],[15,"usize"],[8,"AsyncBufRead"],[3,"BlockOn"],[8,"AsRef"],[3,"Take"],[15,"u64"],[8,"Default"],[8,"PartialEq"],[15,"bool"],[3,"FillBuf"],[3,"FlushFuture"],[3,"Repeat"],[3,"Sink"],[3,"ReadUntilFuture"],[3,"ReadLineFuture"],[3,"Lines"],[3,"Split"],[3,"ReadFuture"],[3,"ReadVectoredFuture"],[3,"ReadToEndFuture"],[3,"ReadToStringFuture"],[3,"ReadExactFuture"],[3,"SeekFuture"],[3,"WriteFuture"],[3,"WriteVectoredFuture"],[3,"WriteAllFuture"],[3,"ReadHalf"],[3,"WriteHalf"],[8,"Hash"],[8,"Hasher"],[8,"PartialOrd"],[4,"Option"],[8,"AsyncSeek"],[8,"Write"],[3,"Vec"],[8,"Read"],[3,"IoSliceMut"],[8,"Seek"],[4,"SeekFrom"],[8,"FnOnce"],[3,"IoSlice"],[3,"String"],[3,"AllFuture"],[8,"Stream"],[3,"BlockOn"],[3,"AnyFuture"],[3,"Chain"],[3,"Empty"],[3,"Iter"],[3,"Once"],[3,"Pending"],[3,"PollFn"],[3,"Repeat"],[3,"RepeatWith"],[3,"Unfold"],[3,"TryUnfold"],[3,"Scan"],[3,"Fuse"],[3,"Map"],[3,"FlatMap"],[3,"Flatten"],[3,"Then"],[3,"Filter"],[3,"Or"],[3,"Race"],[3,"FilterMap"],[3,"Take"],[3,"TakeWhile"],[3,"Skip"],[3,"SkipWhile"],[3,"StepBy"],[3,"Cloned"],[3,"Copied"],[3,"Cycle"],[3,"Enumerate"],[3,"Inspect"],[3,"Zip"],[8,"Extend"],[3,"CollectFuture"],[3,"CountFuture"],[3,"FindFuture"],[3,"FindMapFuture"],[3,"OnceFuture"],[3,"NextFuture"],[3,"TryNextFuture"],[3,"TryCollectFuture"],[3,"PartitionFuture"],[3,"FoldFuture"],[3,"TryFoldFuture"],[3,"NthFuture"],[3,"LastFuture"],[3,"PositionFuture"],[3,"ForEachFuture"],[3,"TryForEachFuture"],[3,"UnzipFuture"],[8,"IntoIterator"],[8,"Iterator"],[8,"FutureExt"],[8,"AsyncReadExt"],[8,"AsyncWriteExt"],[8,"AsyncBufReadExt"],[8,"AsyncSeekExt"],[8,"StreamExt"]]},\
"getrandom":{"doc":"Interface to the operating system’s random number …","t":"SSDSSSSSSSSSSSSLLLLLLLLLFFLLLLL","n":["CUSTOM_START","ERRNO_NOT_POSITIVE","Error","FAILED_RDRAND","INTERNAL_START","IOS_SEC_RANDOM","NODE_CRYPTO","NODE_ES_MODULE","NODE_RANDOM_FILL_SYNC","NO_RDRAND","UNSUPPORTED","VXWORKS_RAND_SECURE","WEB_CRYPTO","WEB_GET_RANDOM_VALUES","WINDOWS_RTL_GEN_RANDOM","borrow","borrow_mut","clone","code","eq","fmt","fmt","from","from","getrandom","getrandom_uninit","into","raw_os_error","try_from","try_into","type_id"],"q":[[0,"getrandom"]],"d":["Codes at or above this point can be used by users to …","The platform-specific <code>errno</code> returned a non-positive value.","A small and <code>no_std</code> compatible error type","RDRAND instruction failed due to a hardware issue.","Codes below this point represent OS Errors (i.e. positive …","Call to iOS <code>SecRandomCopyBytes</code> failed.","Node.js does not have the <code>crypto</code> CommonJS module.","Called from an ES module on Node.js. This is unsupported, …","Calling Node.js function <code>crypto.randomFillSync</code> failed.","RDRAND instruction unsupported on this target.","This target/platform is not supported by <code>getrandom</code>.","On VxWorks, call to <code>randSecure</code> failed (random number …","The environment does not support the Web Crypto API.","Calling Web Crypto API <code>crypto.getRandomValues</code> failed.","Call to Windows <code>RtlGenRandom</code> failed.","","","","Extract the bare error code.","","","","","Returns the argument unchanged.","Fill <code>dest</code> with random bytes from the system’s preferred …","Version of the <code>getrandom</code> function which fills <code>dest</code> with …","Calls <code>U::from(self)</code>.","Extract the raw OS error code (if this error came from the …","","",""],"i":[1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[1,1],[1,2],[[1,1],3],[[1,4],5],[[1,4],5],[2,1],[[]],[[[7,[6]]],[[8,[1]]]],[[[7,[[9,[6]]]]],[[8,[[7,[6]],1]]]],[[]],[1,[[11,[10]]]],[[],8],[[],8],[[],12]],"c":[],"p":[[3,"Error"],[3,"NonZeroU32"],[15,"bool"],[3,"Formatter"],[6,"Result"],[15,"u8"],[15,"slice"],[4,"Result"],[19,"MaybeUninit"],[15,"i32"],[4,"Option"],[3,"TypeId"]]},\
"gl":{"doc":"Usage","tn":["ACTIVE_ATOMIC_COUNTER_BUFFERS","ACTIVE_ATTRIBUTES","ACTIVE_ATTRIBUTE_MAX_LENGTH","ACTIVE_PROGRAM","ACTIVE_RESOURCES","ACTIVE_SUBROUTINES","ACTIVE_SUBROUTINE_MAX_LENGTH","ACTIVE_SUBROUTINE_UNIFORMS","ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS","ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH","ACTIVE_TEXTURE","ACTIVE_UNIFORMS","ACTIVE_UNIFORM_BLOCKS","ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH","ACTIVE_UNIFORM_MAX_LENGTH","ACTIVE_VARIABLES","ALIASED_LINE_WIDTH_RANGE","ALL_BARRIER_BITS","ALL_SHADER_BITS","ALPHA","ALREADY_SIGNALED","ALWAYS","AND","AND_INVERTED","AND_REVERSE","ANY_SAMPLES_PASSED","ANY_SAMPLES_PASSED_CONSERVATIVE","ARRAY_BUFFER","ARRAY_BUFFER_BINDING","ARRAY_SIZE","ARRAY_STRIDE","ATOMIC_COUNTER_BARRIER_BIT","ATOMIC_COUNTER_BUFFER","ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTERS","ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTER_INDICES","ATOMIC_COUNTER_BUFFER_BINDING","ATOMIC_COUNTER_BUFFER_DATA_SIZE","ATOMIC_COUNTER_BUFFER_INDEX","ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER","ATOMIC_COUNTER_BUFFER_REFERENCED_BY_FRAGMENT_SHADER","ATOMIC_COUNTER_BUFFER_REFERENCED_BY_GEOMETRY_SHADER","ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_CONTROL_SHADER","ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_EVALUATION_SHADER","ATOMIC_COUNTER_BUFFER_REFERENCED_BY_VERTEX_SHADER","ATOMIC_COUNTER_BUFFER_SIZE","ATOMIC_COUNTER_BUFFER_START","ATTACHED_SHADERS","AUTO_GENERATE_MIPMAP","ActiveShaderProgram","ActiveShaderProgram","ActiveTexture","ActiveTexture","AttachShader","AttachShader","BACK","BACK_LEFT","BACK_RIGHT","BGR","BGRA","BGRA_INTEGER","BGR_INTEGER","BLEND","BLEND_COLOR","BLEND_DST","BLEND_DST_ALPHA","BLEND_DST_RGB","BLEND_EQUATION","BLEND_EQUATION_ALPHA","BLEND_EQUATION_RGB","BLEND_SRC","BLEND_SRC_ALPHA","BLEND_SRC_RGB","BLOCK_INDEX","BLUE","BLUE_INTEGER","BOOL","BOOL_VEC2","BOOL_VEC3","BOOL_VEC4","BUFFER","BUFFER_ACCESS","BUFFER_ACCESS_FLAGS","BUFFER_BINDING","BUFFER_DATA_SIZE","BUFFER_IMMUTABLE_STORAGE","BUFFER_MAPPED","BUFFER_MAP_LENGTH","BUFFER_MAP_OFFSET","BUFFER_MAP_POINTER","BUFFER_SIZE","BUFFER_STORAGE_FLAGS","BUFFER_UPDATE_BARRIER_BIT","BUFFER_USAGE","BUFFER_VARIABLE","BYTE","BeginConditionalRender","BeginConditionalRender","BeginQuery","BeginQuery","BeginQueryIndexed","BeginQueryIndexed","BeginTransformFeedback","BeginTransformFeedback","BindAttribLocation","BindAttribLocation","BindBuffer","BindBuffer","BindBufferBase","BindBufferBase","BindBufferRange","BindBufferRange","BindBuffersBase","BindBuffersBase","BindBuffersRange","BindBuffersRange","BindFragDataLocation","BindFragDataLocation","BindFragDataLocationIndexed","BindFragDataLocationIndexed","BindFramebuffer","BindFramebuffer","BindImageTexture","BindImageTexture","BindImageTextures","BindImageTextures","BindProgramPipeline","BindProgramPipeline","BindRenderbuffer","BindRenderbuffer","BindSampler","BindSampler","BindSamplers","BindSamplers","BindTexture","BindTexture","BindTextureUnit","BindTextureUnit","BindTextures","BindTextures","BindTransformFeedback","BindTransformFeedback","BindVertexArray","BindVertexArray","BindVertexBuffer","BindVertexBuffer","BindVertexBuffers","BindVertexBuffers","BlendColor","BlendColor","BlendEquation","BlendEquation","BlendEquationSeparate","BlendEquationSeparate","BlendEquationSeparatei","BlendEquationSeparatei","BlendEquationi","BlendEquationi","BlendFunc","BlendFunc","BlendFuncSeparate","BlendFuncSeparate","BlendFuncSeparatei","BlendFuncSeparatei","BlendFunci","BlendFunci","BlitFramebuffer","BlitFramebuffer","BlitNamedFramebuffer","BlitNamedFramebuffer","BufferData","BufferData","BufferStorage","BufferStorage","BufferSubData","BufferSubData","CAVEAT_SUPPORT","CCW","CLAMP_READ_COLOR","CLAMP_TO_BORDER","CLAMP_TO_EDGE","CLEAR","CLEAR_BUFFER","CLEAR_TEXTURE","CLIENT_MAPPED_BUFFER_BARRIER_BIT","CLIENT_STORAGE_BIT","CLIP_DEPTH_MODE","CLIP_DISTANCE0","CLIP_DISTANCE1","CLIP_DISTANCE2","CLIP_DISTANCE3","CLIP_DISTANCE4","CLIP_DISTANCE5","CLIP_DISTANCE6","CLIP_DISTANCE7","CLIP_ORIGIN","COLOR","COLOR_ATTACHMENT0","COLOR_ATTACHMENT1","COLOR_ATTACHMENT10","COLOR_ATTACHMENT11","COLOR_ATTACHMENT12","COLOR_ATTACHMENT13","COLOR_ATTACHMENT14","COLOR_ATTACHMENT15","COLOR_ATTACHMENT16","COLOR_ATTACHMENT17","COLOR_ATTACHMENT18","COLOR_ATTACHMENT19","COLOR_ATTACHMENT2","COLOR_ATTACHMENT20","COLOR_ATTACHMENT21","COLOR_ATTACHMENT22","COLOR_ATTACHMENT23","COLOR_ATTACHMENT24","COLOR_ATTACHMENT25","COLOR_ATTACHMENT26","COLOR_ATTACHMENT27","COLOR_ATTACHMENT28","COLOR_ATTACHMENT29","COLOR_ATTACHMENT3","COLOR_ATTACHMENT30","COLOR_ATTACHMENT31","COLOR_ATTACHMENT4","COLOR_ATTACHMENT5","COLOR_ATTACHMENT6","COLOR_ATTACHMENT7","COLOR_ATTACHMENT8","COLOR_ATTACHMENT9","COLOR_BUFFER_BIT","COLOR_CLEAR_VALUE","COLOR_COMPONENTS","COLOR_ENCODING","COLOR_LOGIC_OP","COLOR_RENDERABLE","COLOR_WRITEMASK","COMMAND_BARRIER_BIT","COMPARE_REF_TO_TEXTURE","COMPATIBLE_SUBROUTINES","COMPILE_STATUS","COMPRESSED_R11_EAC","COMPRESSED_RED","COMPRESSED_RED_RGTC1","COMPRESSED_RG","COMPRESSED_RG11_EAC","COMPRESSED_RGB","COMPRESSED_RGB8_ETC2","COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2","COMPRESSED_RGBA","COMPRESSED_RGBA8_ETC2_EAC","COMPRESSED_RGBA_BPTC_UNORM","COMPRESSED_RGB_BPTC_SIGNED_FLOAT","COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT","COMPRESSED_RG_RGTC2","COMPRESSED_SIGNED_R11_EAC","COMPRESSED_SIGNED_RED_RGTC1","COMPRESSED_SIGNED_RG11_EAC","COMPRESSED_SIGNED_RG_RGTC2","COMPRESSED_SRGB","COMPRESSED_SRGB8_ALPHA8_ETC2_EAC","COMPRESSED_SRGB8_ETC2","COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2","COMPRESSED_SRGB_ALPHA","COMPRESSED_SRGB_ALPHA_BPTC_UNORM","COMPRESSED_TEXTURE_FORMATS","COMPUTE_SHADER","COMPUTE_SHADER_BIT","COMPUTE_SUBROUTINE","COMPUTE_SUBROUTINE_UNIFORM","COMPUTE_TEXTURE","COMPUTE_WORK_GROUP_SIZE","CONDITION_SATISFIED","CONSTANT_ALPHA","CONSTANT_COLOR","CONTEXT_COMPATIBILITY_PROFILE_BIT","CONTEXT_CORE_PROFILE_BIT","CONTEXT_FLAGS","CONTEXT_FLAG_DEBUG_BIT","CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT","CONTEXT_FLAG_ROBUST_ACCESS_BIT","CONTEXT_LOST","CONTEXT_PROFILE_MASK","CONTEXT_RELEASE_BEHAVIOR","CONTEXT_RELEASE_BEHAVIOR_FLUSH","COPY","COPY_INVERTED","COPY_READ_BUFFER","COPY_READ_BUFFER_BINDING","COPY_WRITE_BUFFER","COPY_WRITE_BUFFER_BINDING","CULL_FACE","CULL_FACE_MODE","CURRENT_PROGRAM","CURRENT_QUERY","CURRENT_VERTEX_ATTRIB","CW","CheckFramebufferStatus","CheckFramebufferStatus","CheckNamedFramebufferStatus","CheckNamedFramebufferStatus","ClampColor","ClampColor","Clear","Clear","ClearBufferData","ClearBufferData","ClearBufferSubData","ClearBufferSubData","ClearBufferfi","ClearBufferfi","ClearBufferfv","ClearBufferfv","ClearBufferiv","ClearBufferiv","ClearBufferuiv","ClearBufferuiv","ClearColor","ClearColor","ClearDepth","ClearDepth","ClearDepthf","ClearDepthf","ClearNamedBufferData","ClearNamedBufferData","ClearNamedBufferSubData","ClearNamedBufferSubData","ClearNamedFramebufferfi","ClearNamedFramebufferfi","ClearNamedFramebufferfv","ClearNamedFramebufferfv","ClearNamedFramebufferiv","ClearNamedFramebufferiv","ClearNamedFramebufferuiv","ClearNamedFramebufferuiv","ClearStencil","ClearStencil","ClearTexImage","ClearTexImage","ClearTexSubImage","ClearTexSubImage","ClientWaitSync","ClientWaitSync","ClipControl","ClipControl","ColorMask","ColorMask","ColorMaski","ColorMaski","ColorP3ui","ColorP3ui","ColorP3uiv","ColorP3uiv","ColorP4ui","ColorP4ui","ColorP4uiv","ColorP4uiv","CompileShader","CompileShader","CompressedTexImage1D","CompressedTexImage1D","CompressedTexImage2D","CompressedTexImage2D","CompressedTexImage3D","CompressedTexImage3D","CompressedTexSubImage1D","CompressedTexSubImage1D","CompressedTexSubImage2D","CompressedTexSubImage2D","CompressedTexSubImage3D","CompressedTexSubImage3D","CompressedTextureSubImage1D","CompressedTextureSubImage1D","CompressedTextureSubImage2D","CompressedTextureSubImage2D","CompressedTextureSubImage3D","CompressedTextureSubImage3D","CopyBufferSubData","CopyBufferSubData","CopyImageSubData","CopyImageSubData","CopyNamedBufferSubData","CopyNamedBufferSubData","CopyTexImage1D","CopyTexImage1D","CopyTexImage2D","CopyTexImage2D","CopyTexSubImage1D","CopyTexSubImage1D","CopyTexSubImage2D","CopyTexSubImage2D","CopyTexSubImage3D","CopyTexSubImage3D","CopyTextureSubImage1D","CopyTextureSubImage1D","CopyTextureSubImage2D","CopyTextureSubImage2D","CopyTextureSubImage3D","CopyTextureSubImage3D","CreateBuffers","CreateBuffers","CreateFramebuffers","CreateFramebuffers","CreateProgram","CreateProgram","CreateProgramPipelines","CreateProgramPipelines","CreateQueries","CreateQueries","CreateRenderbuffers","CreateRenderbuffers","CreateSamplers","CreateSamplers","CreateShader","CreateShader","CreateShaderProgramv","CreateShaderProgramv","CreateTextures","CreateTextures","CreateTransformFeedbacks","CreateTransformFeedbacks","CreateVertexArrays","CreateVertexArrays","CullFace","CullFace","DEBUG_CALLBACK_FUNCTION","DEBUG_CALLBACK_USER_PARAM","DEBUG_GROUP_STACK_DEPTH","DEBUG_LOGGED_MESSAGES","DEBUG_NEXT_LOGGED_MESSAGE_LENGTH","DEBUG_OUTPUT","DEBUG_OUTPUT_SYNCHRONOUS","DEBUG_SEVERITY_HIGH","DEBUG_SEVERITY_LOW","DEBUG_SEVERITY_MEDIUM","DEBUG_SEVERITY_NOTIFICATION","DEBUG_SOURCE_API","DEBUG_SOURCE_APPLICATION","DEBUG_SOURCE_OTHER","DEBUG_SOURCE_SHADER_COMPILER","DEBUG_SOURCE_THIRD_PARTY","DEBUG_SOURCE_WINDOW_SYSTEM","DEBUG_TYPE_DEPRECATED_BEHAVIOR","DEBUG_TYPE_ERROR","DEBUG_TYPE_MARKER","DEBUG_TYPE_OTHER","DEBUG_TYPE_PERFORMANCE","DEBUG_TYPE_POP_GROUP","DEBUG_TYPE_PORTABILITY","DEBUG_TYPE_PUSH_GROUP","DEBUG_TYPE_UNDEFINED_BEHAVIOR","DECR","DECR_WRAP","DELETE_STATUS","DEPTH","DEPTH24_STENCIL8","DEPTH32F_STENCIL8","DEPTH_ATTACHMENT","DEPTH_BUFFER_BIT","DEPTH_CLAMP","DEPTH_CLEAR_VALUE","DEPTH_COMPONENT","DEPTH_COMPONENT16","DEPTH_COMPONENT24","DEPTH_COMPONENT32","DEPTH_COMPONENT32F","DEPTH_COMPONENTS","DEPTH_FUNC","DEPTH_RANGE","DEPTH_RENDERABLE","DEPTH_STENCIL","DEPTH_STENCIL_ATTACHMENT","DEPTH_STENCIL_TEXTURE_MODE","DEPTH_TEST","DEPTH_WRITEMASK","DISPATCH_INDIRECT_BUFFER","DISPATCH_INDIRECT_BUFFER_BINDING","DISPLAY_LIST","DITHER","DONT_CARE","DOUBLE","DOUBLEBUFFER","DOUBLE_MAT2","DOUBLE_MAT2x3","DOUBLE_MAT2x4","DOUBLE_MAT3","DOUBLE_MAT3x2","DOUBLE_MAT3x4","DOUBLE_MAT4","DOUBLE_MAT4x2","DOUBLE_MAT4x3","DOUBLE_VEC2","DOUBLE_VEC3","DOUBLE_VEC4","DRAW_BUFFER","DRAW_BUFFER0","DRAW_BUFFER1","DRAW_BUFFER10","DRAW_BUFFER11","DRAW_BUFFER12","DRAW_BUFFER13","DRAW_BUFFER14","DRAW_BUFFER15","DRAW_BUFFER2","DRAW_BUFFER3","DRAW_BUFFER4","DRAW_BUFFER5","DRAW_BUFFER6","DRAW_BUFFER7","DRAW_BUFFER8","DRAW_BUFFER9","DRAW_FRAMEBUFFER","DRAW_FRAMEBUFFER_BINDING","DRAW_INDIRECT_BUFFER","DRAW_INDIRECT_BUFFER_BINDING","DST_ALPHA","DST_COLOR","DYNAMIC_COPY","DYNAMIC_DRAW","DYNAMIC_READ","DYNAMIC_STORAGE_BIT","DebugMessageCallback","DebugMessageCallback","DebugMessageControl","DebugMessageControl","DebugMessageInsert","DebugMessageInsert","DeleteBuffers","DeleteBuffers","DeleteFramebuffers","DeleteFramebuffers","DeleteProgram","DeleteProgram","DeleteProgramPipelines","DeleteProgramPipelines","DeleteQueries","DeleteQueries","DeleteRenderbuffers","DeleteRenderbuffers","DeleteSamplers","DeleteSamplers","DeleteShader","DeleteShader","DeleteSync","DeleteSync","DeleteTextures","DeleteTextures","DeleteTransformFeedbacks","DeleteTransformFeedbacks","DeleteVertexArrays","DeleteVertexArrays","DepthFunc","DepthFunc","DepthMask","DepthMask","DepthRange","DepthRange","DepthRangeArrayv","DepthRangeArrayv","DepthRangeIndexed","DepthRangeIndexed","DepthRangef","DepthRangef","DetachShader","DetachShader","Disable","Disable","DisableVertexArrayAttrib","DisableVertexArrayAttrib","DisableVertexAttribArray","DisableVertexAttribArray","Disablei","Disablei","DispatchCompute","DispatchCompute","DispatchComputeIndirect","DispatchComputeIndirect","DrawArrays","DrawArrays","DrawArraysIndirect","DrawArraysIndirect","DrawArraysInstanced","DrawArraysInstanced","DrawArraysInstancedBaseInstance","DrawArraysInstancedBaseInstance","DrawBuffer","DrawBuffer","DrawBuffers","DrawBuffers","DrawElements","DrawElements","DrawElementsBaseVertex","DrawElementsBaseVertex","DrawElementsIndirect","DrawElementsIndirect","DrawElementsInstanced","DrawElementsInstanced","DrawElementsInstancedBaseInstance","DrawElementsInstancedBaseInstance","DrawElementsInstancedBaseVertex","DrawElementsInstancedBaseVertex","DrawElementsInstancedBaseVertexBaseInstance","DrawElementsInstancedBaseVertexBaseInstance","DrawRangeElements","DrawRangeElements","DrawRangeElementsBaseVertex","DrawRangeElementsBaseVertex","DrawTransformFeedback","DrawTransformFeedback","DrawTransformFeedbackInstanced","DrawTransformFeedbackInstanced","DrawTransformFeedbackStream","DrawTransformFeedbackStream","DrawTransformFeedbackStreamInstanced","DrawTransformFeedbackStreamInstanced","ELEMENT_ARRAY_BARRIER_BIT","ELEMENT_ARRAY_BUFFER","ELEMENT_ARRAY_BUFFER_BINDING","EQUAL","EQUIV","EXTENSIONS","Enable","Enable","EnableVertexArrayAttrib","EnableVertexArrayAttrib","EnableVertexAttribArray","EnableVertexAttribArray","Enablei","Enablei","EndConditionalRender","EndConditionalRender","EndQuery","EndQuery","EndQueryIndexed","EndQueryIndexed","EndTransformFeedback","EndTransformFeedback","FALSE","FASTEST","FILL","FILTER","FIRST_VERTEX_CONVENTION","FIXED","FIXED_ONLY","FLOAT","FLOAT_32_UNSIGNED_INT_24_8_REV","FLOAT_MAT2","FLOAT_MAT2x3","FLOAT_MAT2x4","FLOAT_MAT3","FLOAT_MAT3x2","FLOAT_MAT3x4","FLOAT_MAT4","FLOAT_MAT4x2","FLOAT_MAT4x3","FLOAT_VEC2","FLOAT_VEC3","FLOAT_VEC4","FRACTIONAL_EVEN","FRACTIONAL_ODD","FRAGMENT_INTERPOLATION_OFFSET_BITS","FRAGMENT_SHADER","FRAGMENT_SHADER_BIT","FRAGMENT_SHADER_DERIVATIVE_HINT","FRAGMENT_SUBROUTINE","FRAGMENT_SUBROUTINE_UNIFORM","FRAGMENT_TEXTURE","FRAMEBUFFER","FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE","FRAMEBUFFER_ATTACHMENT_BLUE_SIZE","FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING","FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE","FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE","FRAMEBUFFER_ATTACHMENT_GREEN_SIZE","FRAMEBUFFER_ATTACHMENT_LAYERED","FRAMEBUFFER_ATTACHMENT_OBJECT_NAME","FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE","FRAMEBUFFER_ATTACHMENT_RED_SIZE","FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE","FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE","FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER","FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL","FRAMEBUFFER_BARRIER_BIT","FRAMEBUFFER_BINDING","FRAMEBUFFER_BLEND","FRAMEBUFFER_COMPLETE","FRAMEBUFFER_DEFAULT","FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS","FRAMEBUFFER_DEFAULT_HEIGHT","FRAMEBUFFER_DEFAULT_LAYERS","FRAMEBUFFER_DEFAULT_SAMPLES","FRAMEBUFFER_DEFAULT_WIDTH","FRAMEBUFFER_INCOMPLETE_ATTACHMENT","FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER","FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS","FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT","FRAMEBUFFER_INCOMPLETE_MULTISAMPLE","FRAMEBUFFER_INCOMPLETE_READ_BUFFER","FRAMEBUFFER_RENDERABLE","FRAMEBUFFER_RENDERABLE_LAYERED","FRAMEBUFFER_SRGB","FRAMEBUFFER_UNDEFINED","FRAMEBUFFER_UNSUPPORTED","FRONT","FRONT_AND_BACK","FRONT_FACE","FRONT_LEFT","FRONT_RIGHT","FULL_SUPPORT","FUNC_ADD","FUNC_REVERSE_SUBTRACT","FUNC_SUBTRACT","FenceSync","FenceSync","Finish","Finish","Flush","Flush","FlushMappedBufferRange","FlushMappedBufferRange","FlushMappedNamedBufferRange","FlushMappedNamedBufferRange","FnPtr","FramebufferParameteri","FramebufferParameteri","FramebufferRenderbuffer","FramebufferRenderbuffer","FramebufferTexture","FramebufferTexture","FramebufferTexture1D","FramebufferTexture1D","FramebufferTexture2D","FramebufferTexture2D","FramebufferTexture3D","FramebufferTexture3D","FramebufferTextureLayer","FramebufferTextureLayer","FrontFace","FrontFace","GEOMETRY_INPUT_TYPE","GEOMETRY_OUTPUT_TYPE","GEOMETRY_SHADER","GEOMETRY_SHADER_BIT","GEOMETRY_SHADER_INVOCATIONS","GEOMETRY_SUBROUTINE","GEOMETRY_SUBROUTINE_UNIFORM","GEOMETRY_TEXTURE","GEOMETRY_VERTICES_OUT","GEQUAL","GET_TEXTURE_IMAGE_FORMAT","GET_TEXTURE_IMAGE_TYPE","GREATER","GREEN","GREEN_INTEGER","GUILTY_CONTEXT_RESET","GenBuffers","GenBuffers","GenFramebuffers","GenFramebuffers","GenProgramPipelines","GenProgramPipelines","GenQueries","GenQueries","GenRenderbuffers","GenRenderbuffers","GenSamplers","GenSamplers","GenTextures","GenTextures","GenTransformFeedbacks","GenTransformFeedbacks","GenVertexArrays","GenVertexArrays","GenerateMipmap","GenerateMipmap","GenerateTextureMipmap","GenerateTextureMipmap","GetActiveAtomicCounterBufferiv","GetActiveAtomicCounterBufferiv","GetActiveAttrib","GetActiveAttrib","GetActiveSubroutineName","GetActiveSubroutineName","GetActiveSubroutineUniformName","GetActiveSubroutineUniformName","GetActiveSubroutineUniformiv","GetActiveSubroutineUniformiv","GetActiveUniform","GetActiveUniform","GetActiveUniformBlockName","GetActiveUniformBlockName","GetActiveUniformBlockiv","GetActiveUniformBlockiv","GetActiveUniformName","GetActiveUniformName","GetActiveUniformsiv","GetActiveUniformsiv","GetAttachedShaders","GetAttachedShaders","GetAttribLocation","GetAttribLocation","GetBooleani_v","GetBooleani_v","GetBooleanv","GetBooleanv","GetBufferParameteri64v","GetBufferParameteri64v","GetBufferParameteriv","GetBufferParameteriv","GetBufferPointerv","GetBufferPointerv","GetBufferSubData","GetBufferSubData","GetCompressedTexImage","GetCompressedTexImage","GetCompressedTextureImage","GetCompressedTextureImage","GetCompressedTextureSubImage","GetCompressedTextureSubImage","GetDebugMessageLog","GetDebugMessageLog","GetDoublei_v","GetDoublei_v","GetDoublev","GetDoublev","GetError","GetError","GetFloati_v","GetFloati_v","GetFloatv","GetFloatv","GetFragDataIndex","GetFragDataIndex","GetFragDataLocation","GetFragDataLocation","GetFramebufferAttachmentParameteriv","GetFramebufferAttachmentParameteriv","GetFramebufferParameteriv","GetFramebufferParameteriv","GetGraphicsResetStatus","GetGraphicsResetStatus","GetInteger64i_v","GetInteger64i_v","GetInteger64v","GetInteger64v","GetIntegeri_v","GetIntegeri_v","GetIntegerv","GetIntegerv","GetInternalformati64v","GetInternalformati64v","GetInternalformativ","GetInternalformativ","GetMultisamplefv","GetMultisamplefv","GetNamedBufferParameteri64v","GetNamedBufferParameteri64v","GetNamedBufferParameteriv","GetNamedBufferParameteriv","GetNamedBufferPointerv","GetNamedBufferPointerv","GetNamedBufferSubData","GetNamedBufferSubData","GetNamedFramebufferAttachmentParameteriv","GetNamedFramebufferAttachmentParameteriv","GetNamedFramebufferParameteriv","GetNamedFramebufferParameteriv","GetNamedRenderbufferParameteriv","GetNamedRenderbufferParameteriv","GetObjectLabel","GetObjectLabel","GetObjectPtrLabel","GetObjectPtrLabel","GetPointerv","GetPointerv","GetProgramBinary","GetProgramBinary","GetProgramInfoLog","GetProgramInfoLog","GetProgramInterfaceiv","GetProgramInterfaceiv","GetProgramPipelineInfoLog","GetProgramPipelineInfoLog","GetProgramPipelineiv","GetProgramPipelineiv","GetProgramResourceIndex","GetProgramResourceIndex","GetProgramResourceLocation","GetProgramResourceLocation","GetProgramResourceLocationIndex","GetProgramResourceLocationIndex","GetProgramResourceName","GetProgramResourceName","GetProgramResourceiv","GetProgramResourceiv","GetProgramStageiv","GetProgramStageiv","GetProgramiv","GetProgramiv","GetQueryBufferObjecti64v","GetQueryBufferObjecti64v","GetQueryBufferObjectiv","GetQueryBufferObjectiv","GetQueryBufferObjectui64v","GetQueryBufferObjectui64v","GetQueryBufferObjectuiv","GetQueryBufferObjectuiv","GetQueryIndexediv","GetQueryIndexediv","GetQueryObjecti64v","GetQueryObjecti64v","GetQueryObjectiv","GetQueryObjectiv","GetQueryObjectui64v","GetQueryObjectui64v","GetQueryObjectuiv","GetQueryObjectuiv","GetQueryiv","GetQueryiv","GetRenderbufferParameteriv","GetRenderbufferParameteriv","GetSamplerParameterIiv","GetSamplerParameterIiv","GetSamplerParameterIuiv","GetSamplerParameterIuiv","GetSamplerParameterfv","GetSamplerParameterfv","GetSamplerParameteriv","GetSamplerParameteriv","GetShaderInfoLog","GetShaderInfoLog","GetShaderPrecisionFormat","GetShaderPrecisionFormat","GetShaderSource","GetShaderSource","GetShaderiv","GetShaderiv","GetString","GetString","GetStringi","GetStringi","GetSubroutineIndex","GetSubroutineIndex","GetSubroutineUniformLocation","GetSubroutineUniformLocation","GetSynciv","GetSynciv","GetTexImage","GetTexImage","GetTexLevelParameterfv","GetTexLevelParameterfv","GetTexLevelParameteriv","GetTexLevelParameteriv","GetTexParameterIiv","GetTexParameterIiv","GetTexParameterIuiv","GetTexParameterIuiv","GetTexParameterfv","GetTexParameterfv","GetTexParameteriv","GetTexParameteriv","GetTextureImage","GetTextureImage","GetTextureLevelParameterfv","GetTextureLevelParameterfv","GetTextureLevelParameteriv","GetTextureLevelParameteriv","GetTextureParameterIiv","GetTextureParameterIiv","GetTextureParameterIuiv","GetTextureParameterIuiv","GetTextureParameterfv","GetTextureParameterfv","GetTextureParameteriv","GetTextureParameteriv","GetTextureSubImage","GetTextureSubImage","GetTransformFeedbackVarying","GetTransformFeedbackVarying","GetTransformFeedbacki64_v","GetTransformFeedbacki64_v","GetTransformFeedbacki_v","GetTransformFeedbacki_v","GetTransformFeedbackiv","GetTransformFeedbackiv","GetUniformBlockIndex","GetUniformBlockIndex","GetUniformIndices","GetUniformIndices","GetUniformLocation","GetUniformLocation","GetUniformSubroutineuiv","GetUniformSubroutineuiv","GetUniformdv","GetUniformdv","GetUniformfv","GetUniformfv","GetUniformiv","GetUniformiv","GetUniformuiv","GetUniformuiv","GetVertexArrayIndexed64iv","GetVertexArrayIndexed64iv","GetVertexArrayIndexediv","GetVertexArrayIndexediv","GetVertexArrayiv","GetVertexArrayiv","GetVertexAttribIiv","GetVertexAttribIiv","GetVertexAttribIuiv","GetVertexAttribIuiv","GetVertexAttribLdv","GetVertexAttribLdv","GetVertexAttribPointerv","GetVertexAttribPointerv","GetVertexAttribdv","GetVertexAttribdv","GetVertexAttribfv","GetVertexAttribfv","GetVertexAttribiv","GetVertexAttribiv","GetnColorTable","GetnColorTable","GetnCompressedTexImage","GetnCompressedTexImage","GetnConvolutionFilter","GetnConvolutionFilter","GetnHistogram","GetnHistogram","GetnMapdv","GetnMapdv","GetnMapfv","GetnMapfv","GetnMapiv","GetnMapiv","GetnMinmax","GetnMinmax","GetnPixelMapfv","GetnPixelMapfv","GetnPixelMapuiv","GetnPixelMapuiv","GetnPixelMapusv","GetnPixelMapusv","GetnPolygonStipple","GetnPolygonStipple","GetnSeparableFilter","GetnSeparableFilter","GetnTexImage","GetnTexImage","GetnUniformdv","GetnUniformdv","GetnUniformfv","GetnUniformfv","GetnUniformiv","GetnUniformiv","GetnUniformuiv","GetnUniformuiv","HALF_FLOAT","HIGH_FLOAT","HIGH_INT","Hint","Hint","IMAGE_1D","IMAGE_1D_ARRAY","IMAGE_2D","IMAGE_2D_ARRAY","IMAGE_2D_MULTISAMPLE","IMAGE_2D_MULTISAMPLE_ARRAY","IMAGE_2D_RECT","IMAGE_3D","IMAGE_BINDING_ACCESS","IMAGE_BINDING_FORMAT","IMAGE_BINDING_LAYER","IMAGE_BINDING_LAYERED","IMAGE_BINDING_LEVEL","IMAGE_BINDING_NAME","IMAGE_BUFFER","IMAGE_CLASS_10_10_10_2","IMAGE_CLASS_11_11_10","IMAGE_CLASS_1_X_16","IMAGE_CLASS_1_X_32","IMAGE_CLASS_1_X_8","IMAGE_CLASS_2_X_16","IMAGE_CLASS_2_X_32","IMAGE_CLASS_2_X_8","IMAGE_CLASS_4_X_16","IMAGE_CLASS_4_X_32","IMAGE_CLASS_4_X_8","IMAGE_COMPATIBILITY_CLASS","IMAGE_CUBE","IMAGE_CUBE_MAP_ARRAY","IMAGE_FORMAT_COMPATIBILITY_BY_CLASS","IMAGE_FORMAT_COMPATIBILITY_BY_SIZE","IMAGE_FORMAT_COMPATIBILITY_TYPE","IMAGE_PIXEL_FORMAT","IMAGE_PIXEL_TYPE","IMAGE_TEXEL_SIZE","IMPLEMENTATION_COLOR_READ_FORMAT","IMPLEMENTATION_COLOR_READ_TYPE","INCR","INCR_WRAP","INFO_LOG_LENGTH","INNOCENT_CONTEXT_RESET","INT","INTERLEAVED_ATTRIBS","INTERNALFORMAT_ALPHA_SIZE","INTERNALFORMAT_ALPHA_TYPE","INTERNALFORMAT_BLUE_SIZE","INTERNALFORMAT_BLUE_TYPE","INTERNALFORMAT_DEPTH_SIZE","INTERNALFORMAT_DEPTH_TYPE","INTERNALFORMAT_GREEN_SIZE","INTERNALFORMAT_GREEN_TYPE","INTERNALFORMAT_PREFERRED","INTERNALFORMAT_RED_SIZE","INTERNALFORMAT_RED_TYPE","INTERNALFORMAT_SHARED_SIZE","INTERNALFORMAT_STENCIL_SIZE","INTERNALFORMAT_STENCIL_TYPE","INTERNALFORMAT_SUPPORTED","INT_2_10_10_10_REV","INT_IMAGE_1D","INT_IMAGE_1D_ARRAY","INT_IMAGE_2D","INT_IMAGE_2D_ARRAY","INT_IMAGE_2D_MULTISAMPLE","INT_IMAGE_2D_MULTISAMPLE_ARRAY","INT_IMAGE_2D_RECT","INT_IMAGE_3D","INT_IMAGE_BUFFER","INT_IMAGE_CUBE","INT_IMAGE_CUBE_MAP_ARRAY","INT_SAMPLER_1D","INT_SAMPLER_1D_ARRAY","INT_SAMPLER_2D","INT_SAMPLER_2D_ARRAY","INT_SAMPLER_2D_MULTISAMPLE","INT_SAMPLER_2D_MULTISAMPLE_ARRAY","INT_SAMPLER_2D_RECT","INT_SAMPLER_3D","INT_SAMPLER_BUFFER","INT_SAMPLER_CUBE","INT_SAMPLER_CUBE_MAP_ARRAY","INT_VEC2","INT_VEC3","INT_VEC4","INVALID_ENUM","INVALID_FRAMEBUFFER_OPERATION","INVALID_INDEX","INVALID_OPERATION","INVALID_VALUE","INVERT","ISOLINES","IS_PER_PATCH","IS_ROW_MAJOR","InvalidateBufferData","InvalidateBufferData","InvalidateBufferSubData","InvalidateBufferSubData","InvalidateFramebuffer","InvalidateFramebuffer","InvalidateNamedFramebufferData","InvalidateNamedFramebufferData","InvalidateNamedFramebufferSubData","InvalidateNamedFramebufferSubData","InvalidateSubFramebuffer","InvalidateSubFramebuffer","InvalidateTexImage","InvalidateTexImage","InvalidateTexSubImage","InvalidateTexSubImage","IsBuffer","IsBuffer","IsEnabled","IsEnabled","IsEnabledi","IsEnabledi","IsFramebuffer","IsFramebuffer","IsProgram","IsProgram","IsProgramPipeline","IsProgramPipeline","IsQuery","IsQuery","IsRenderbuffer","IsRenderbuffer","IsSampler","IsSampler","IsShader","IsShader","IsSync","IsSync","IsTexture","IsTexture","IsTransformFeedback","IsTransformFeedback","IsVertexArray","IsVertexArray","KEEP","LAST_VERTEX_CONVENTION","LAYER_PROVOKING_VERTEX","LEFT","LEQUAL","LESS","LINE","LINEAR","LINEAR_MIPMAP_LINEAR","LINEAR_MIPMAP_NEAREST","LINES","LINES_ADJACENCY","LINE_LOOP","LINE_SMOOTH","LINE_SMOOTH_HINT","LINE_STRIP","LINE_STRIP_ADJACENCY","LINE_WIDTH","LINE_WIDTH_GRANULARITY","LINE_WIDTH_RANGE","LINK_STATUS","LOCATION","LOCATION_COMPONENT","LOCATION_INDEX","LOGIC_OP_MODE","LOSE_CONTEXT_ON_RESET","LOWER_LEFT","LOW_FLOAT","LOW_INT","LineWidth","LineWidth","LinkProgram","LinkProgram","LogicOp","LogicOp","MAJOR_VERSION","MANUAL_GENERATE_MIPMAP","MAP_COHERENT_BIT","MAP_FLUSH_EXPLICIT_BIT","MAP_INVALIDATE_BUFFER_BIT","MAP_INVALIDATE_RANGE_BIT","MAP_PERSISTENT_BIT","MAP_READ_BIT","MAP_UNSYNCHRONIZED_BIT","MAP_WRITE_BIT","MATRIX_STRIDE","MAX","MAX_3D_TEXTURE_SIZE","MAX_ARRAY_TEXTURE_LAYERS","MAX_ATOMIC_COUNTER_BUFFER_BINDINGS","MAX_ATOMIC_COUNTER_BUFFER_SIZE","MAX_CLIP_DISTANCES","MAX_COLOR_ATTACHMENTS","MAX_COLOR_TEXTURE_SAMPLES","MAX_COMBINED_ATOMIC_COUNTERS","MAX_COMBINED_ATOMIC_COUNTER_BUFFERS","MAX_COMBINED_CLIP_AND_CULL_DISTANCES","MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS","MAX_COMBINED_DIMENSIONS","MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS","MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS","MAX_COMBINED_IMAGE_UNIFORMS","MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS","MAX_COMBINED_SHADER_OUTPUT_RESOURCES","MAX_COMBINED_SHADER_STORAGE_BLOCKS","MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS","MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS","MAX_COMBINED_TEXTURE_IMAGE_UNITS","MAX_COMBINED_UNIFORM_BLOCKS","MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS","MAX_COMPUTE_ATOMIC_COUNTERS","MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS","MAX_COMPUTE_IMAGE_UNIFORMS","MAX_COMPUTE_SHADER_STORAGE_BLOCKS","MAX_COMPUTE_SHARED_MEMORY_SIZE","MAX_COMPUTE_TEXTURE_IMAGE_UNITS","MAX_COMPUTE_UNIFORM_BLOCKS","MAX_COMPUTE_UNIFORM_COMPONENTS","MAX_COMPUTE_WORK_GROUP_COUNT","MAX_COMPUTE_WORK_GROUP_INVOCATIONS","MAX_COMPUTE_WORK_GROUP_SIZE","MAX_CUBE_MAP_TEXTURE_SIZE","MAX_CULL_DISTANCES","MAX_DEBUG_GROUP_STACK_DEPTH","MAX_DEBUG_LOGGED_MESSAGES","MAX_DEBUG_MESSAGE_LENGTH","MAX_DEPTH","MAX_DEPTH_TEXTURE_SAMPLES","MAX_DRAW_BUFFERS","MAX_DUAL_SOURCE_DRAW_BUFFERS","MAX_ELEMENTS_INDICES","MAX_ELEMENTS_VERTICES","MAX_ELEMENT_INDEX","MAX_FRAGMENT_ATOMIC_COUNTERS","MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS","MAX_FRAGMENT_IMAGE_UNIFORMS","MAX_FRAGMENT_INPUT_COMPONENTS","MAX_FRAGMENT_INTERPOLATION_OFFSET","MAX_FRAGMENT_SHADER_STORAGE_BLOCKS","MAX_FRAGMENT_UNIFORM_BLOCKS","MAX_FRAGMENT_UNIFORM_COMPONENTS","MAX_FRAGMENT_UNIFORM_VECTORS","MAX_FRAMEBUFFER_HEIGHT","MAX_FRAMEBUFFER_LAYERS","MAX_FRAMEBUFFER_SAMPLES","MAX_FRAMEBUFFER_WIDTH","MAX_GEOMETRY_ATOMIC_COUNTERS","MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS","MAX_GEOMETRY_IMAGE_UNIFORMS","MAX_GEOMETRY_INPUT_COMPONENTS","MAX_GEOMETRY_OUTPUT_COMPONENTS","MAX_GEOMETRY_OUTPUT_VERTICES","MAX_GEOMETRY_SHADER_INVOCATIONS","MAX_GEOMETRY_SHADER_STORAGE_BLOCKS","MAX_GEOMETRY_TEXTURE_IMAGE_UNITS","MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS","MAX_GEOMETRY_UNIFORM_BLOCKS","MAX_GEOMETRY_UNIFORM_COMPONENTS","MAX_HEIGHT","MAX_IMAGE_SAMPLES","MAX_IMAGE_UNITS","MAX_INTEGER_SAMPLES","MAX_LABEL_LENGTH","MAX_LAYERS","MAX_NAME_LENGTH","MAX_NUM_ACTIVE_VARIABLES","MAX_NUM_COMPATIBLE_SUBROUTINES","MAX_PATCH_VERTICES","MAX_PROGRAM_TEXEL_OFFSET","MAX_PROGRAM_TEXTURE_GATHER_OFFSET","MAX_RECTANGLE_TEXTURE_SIZE","MAX_RENDERBUFFER_SIZE","MAX_SAMPLES","MAX_SAMPLE_MASK_WORDS","MAX_SERVER_WAIT_TIMEOUT","MAX_SHADER_STORAGE_BLOCK_SIZE","MAX_SHADER_STORAGE_BUFFER_BINDINGS","MAX_SUBROUTINES","MAX_SUBROUTINE_UNIFORM_LOCATIONS","MAX_TESS_CONTROL_ATOMIC_COUNTERS","MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS","MAX_TESS_CONTROL_IMAGE_UNIFORMS","MAX_TESS_CONTROL_INPUT_COMPONENTS","MAX_TESS_CONTROL_OUTPUT_COMPONENTS","MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS","MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS","MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS","MAX_TESS_CONTROL_UNIFORM_BLOCKS","MAX_TESS_CONTROL_UNIFORM_COMPONENTS","MAX_TESS_EVALUATION_ATOMIC_COUNTERS","MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS","MAX_TESS_EVALUATION_IMAGE_UNIFORMS","MAX_TESS_EVALUATION_INPUT_COMPONENTS","MAX_TESS_EVALUATION_OUTPUT_COMPONENTS","MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS","MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS","MAX_TESS_EVALUATION_UNIFORM_BLOCKS","MAX_TESS_EVALUATION_UNIFORM_COMPONENTS","MAX_TESS_GEN_LEVEL","MAX_TESS_PATCH_COMPONENTS","MAX_TEXTURE_BUFFER_SIZE","MAX_TEXTURE_IMAGE_UNITS","MAX_TEXTURE_LOD_BIAS","MAX_TEXTURE_SIZE","MAX_TRANSFORM_FEEDBACK_BUFFERS","MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS","MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS","MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS","MAX_UNIFORM_BLOCK_SIZE","MAX_UNIFORM_BUFFER_BINDINGS","MAX_UNIFORM_LOCATIONS","MAX_VARYING_COMPONENTS","MAX_VARYING_FLOATS","MAX_VARYING_VECTORS","MAX_VERTEX_ATOMIC_COUNTERS","MAX_VERTEX_ATOMIC_COUNTER_BUFFERS","MAX_VERTEX_ATTRIBS","MAX_VERTEX_ATTRIB_BINDINGS","MAX_VERTEX_ATTRIB_RELATIVE_OFFSET","MAX_VERTEX_ATTRIB_STRIDE","MAX_VERTEX_IMAGE_UNIFORMS","MAX_VERTEX_OUTPUT_COMPONENTS","MAX_VERTEX_SHADER_STORAGE_BLOCKS","MAX_VERTEX_STREAMS","MAX_VERTEX_TEXTURE_IMAGE_UNITS","MAX_VERTEX_UNIFORM_BLOCKS","MAX_VERTEX_UNIFORM_COMPONENTS","MAX_VERTEX_UNIFORM_VECTORS","MAX_VIEWPORTS","MAX_VIEWPORT_DIMS","MAX_WIDTH","MEDIUM_FLOAT","MEDIUM_INT","MIN","MINOR_VERSION","MIN_FRAGMENT_INTERPOLATION_OFFSET","MIN_MAP_BUFFER_ALIGNMENT","MIN_PROGRAM_TEXEL_OFFSET","MIN_PROGRAM_TEXTURE_GATHER_OFFSET","MIN_SAMPLE_SHADING_VALUE","MIPMAP","MIRRORED_REPEAT","MIRROR_CLAMP_TO_EDGE","MULTISAMPLE","MapBuffer","MapBuffer","MapBufferRange","MapBufferRange","MapNamedBuffer","MapNamedBuffer","MapNamedBufferRange","MapNamedBufferRange","MemoryBarrier","MemoryBarrier","MemoryBarrierByRegion","MemoryBarrierByRegion","MinSampleShading","MinSampleShading","MultiDrawArrays","MultiDrawArrays","MultiDrawArraysIndirect","MultiDrawArraysIndirect","MultiDrawElements","MultiDrawElements","MultiDrawElementsBaseVertex","MultiDrawElementsBaseVertex","MultiDrawElementsIndirect","MultiDrawElementsIndirect","MultiTexCoordP1ui","MultiTexCoordP1ui","MultiTexCoordP1uiv","MultiTexCoordP1uiv","MultiTexCoordP2ui","MultiTexCoordP2ui","MultiTexCoordP2uiv","MultiTexCoordP2uiv","MultiTexCoordP3ui","MultiTexCoordP3ui","MultiTexCoordP3uiv","MultiTexCoordP3uiv","MultiTexCoordP4ui","MultiTexCoordP4ui","MultiTexCoordP4uiv","MultiTexCoordP4uiv","NAME_LENGTH","NAND","NEAREST","NEAREST_MIPMAP_LINEAR","NEAREST_MIPMAP_NEAREST","NEGATIVE_ONE_TO_ONE","NEVER","NICEST","NONE","NOOP","NOR","NOTEQUAL","NO_ERROR","NO_RESET_NOTIFICATION","NUM_ACTIVE_VARIABLES","NUM_COMPATIBLE_SUBROUTINES","NUM_COMPRESSED_TEXTURE_FORMATS","NUM_EXTENSIONS","NUM_PROGRAM_BINARY_FORMATS","NUM_SAMPLE_COUNTS","NUM_SHADER_BINARY_FORMATS","NUM_SHADING_LANGUAGE_VERSIONS","NamedBufferData","NamedBufferData","NamedBufferStorage","NamedBufferStorage","NamedBufferSubData","NamedBufferSubData","NamedFramebufferDrawBuffer","NamedFramebufferDrawBuffer","NamedFramebufferDrawBuffers","NamedFramebufferDrawBuffers","NamedFramebufferParameteri","NamedFramebufferParameteri","NamedFramebufferReadBuffer","NamedFramebufferReadBuffer","NamedFramebufferRenderbuffer","NamedFramebufferRenderbuffer","NamedFramebufferTexture","NamedFramebufferTexture","NamedFramebufferTextureLayer","NamedFramebufferTextureLayer","NamedRenderbufferStorage","NamedRenderbufferStorage","NamedRenderbufferStorageMultisample","NamedRenderbufferStorageMultisample","NormalP3ui","NormalP3ui","NormalP3uiv","NormalP3uiv","OBJECT_TYPE","OFFSET","ONE","ONE_MINUS_CONSTANT_ALPHA","ONE_MINUS_CONSTANT_COLOR","ONE_MINUS_DST_ALPHA","ONE_MINUS_DST_COLOR","ONE_MINUS_SRC1_ALPHA","ONE_MINUS_SRC1_COLOR","ONE_MINUS_SRC_ALPHA","ONE_MINUS_SRC_COLOR","OR","OR_INVERTED","OR_REVERSE","OUT_OF_MEMORY","ObjectLabel","ObjectLabel","ObjectPtrLabel","ObjectPtrLabel","PACK_ALIGNMENT","PACK_COMPRESSED_BLOCK_DEPTH","PACK_COMPRESSED_BLOCK_HEIGHT","PACK_COMPRESSED_BLOCK_SIZE","PACK_COMPRESSED_BLOCK_WIDTH","PACK_IMAGE_HEIGHT","PACK_LSB_FIRST","PACK_ROW_LENGTH","PACK_SKIP_IMAGES","PACK_SKIP_PIXELS","PACK_SKIP_ROWS","PACK_SWAP_BYTES","PATCHES","PATCH_DEFAULT_INNER_LEVEL","PATCH_DEFAULT_OUTER_LEVEL","PATCH_VERTICES","PIXEL_BUFFER_BARRIER_BIT","PIXEL_PACK_BUFFER","PIXEL_PACK_BUFFER_BINDING","PIXEL_UNPACK_BUFFER","PIXEL_UNPACK_BUFFER_BINDING","POINT","POINTS","POINT_FADE_THRESHOLD_SIZE","POINT_SIZE","POINT_SIZE_GRANULARITY","POINT_SIZE_RANGE","POINT_SPRITE_COORD_ORIGIN","POLYGON_MODE","POLYGON_OFFSET_FACTOR","POLYGON_OFFSET_FILL","POLYGON_OFFSET_LINE","POLYGON_OFFSET_POINT","POLYGON_OFFSET_UNITS","POLYGON_SMOOTH","POLYGON_SMOOTH_HINT","PRIMITIVES_GENERATED","PRIMITIVE_RESTART","PRIMITIVE_RESTART_FIXED_INDEX","PRIMITIVE_RESTART_FOR_PATCHES_SUPPORTED","PRIMITIVE_RESTART_INDEX","PROGRAM","PROGRAM_BINARY_FORMATS","PROGRAM_BINARY_LENGTH","PROGRAM_BINARY_RETRIEVABLE_HINT","PROGRAM_INPUT","PROGRAM_OUTPUT","PROGRAM_PIPELINE","PROGRAM_PIPELINE_BINDING","PROGRAM_POINT_SIZE","PROGRAM_SEPARABLE","PROVOKING_VERTEX","PROXY_TEXTURE_1D","PROXY_TEXTURE_1D_ARRAY","PROXY_TEXTURE_2D","PROXY_TEXTURE_2D_ARRAY","PROXY_TEXTURE_2D_MULTISAMPLE","PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY","PROXY_TEXTURE_3D","PROXY_TEXTURE_CUBE_MAP","PROXY_TEXTURE_CUBE_MAP_ARRAY","PROXY_TEXTURE_RECTANGLE","PatchParameterfv","PatchParameterfv","PatchParameteri","PatchParameteri","PauseTransformFeedback","PauseTransformFeedback","PixelStoref","PixelStoref","PixelStorei","PixelStorei","PointParameterf","PointParameterf","PointParameterfv","PointParameterfv","PointParameteri","PointParameteri","PointParameteriv","PointParameteriv","PointSize","PointSize","PolygonMode","PolygonMode","PolygonOffset","PolygonOffset","PopDebugGroup","PopDebugGroup","PrimitiveRestartIndex","PrimitiveRestartIndex","ProgramBinary","ProgramBinary","ProgramParameteri","ProgramParameteri","ProgramUniform1d","ProgramUniform1d","ProgramUniform1dv","ProgramUniform1dv","ProgramUniform1f","ProgramUniform1f","ProgramUniform1fv","ProgramUniform1fv","ProgramUniform1i","ProgramUniform1i","ProgramUniform1iv","ProgramUniform1iv","ProgramUniform1ui","ProgramUniform1ui","ProgramUniform1uiv","ProgramUniform1uiv","ProgramUniform2d","ProgramUniform2d","ProgramUniform2dv","ProgramUniform2dv","ProgramUniform2f","ProgramUniform2f","ProgramUniform2fv","ProgramUniform2fv","ProgramUniform2i","ProgramUniform2i","ProgramUniform2iv","ProgramUniform2iv","ProgramUniform2ui","ProgramUniform2ui","ProgramUniform2uiv","ProgramUniform2uiv","ProgramUniform3d","ProgramUniform3d","ProgramUniform3dv","ProgramUniform3dv","ProgramUniform3f","ProgramUniform3f","ProgramUniform3fv","ProgramUniform3fv","ProgramUniform3i","ProgramUniform3i","ProgramUniform3iv","ProgramUniform3iv","ProgramUniform3ui","ProgramUniform3ui","ProgramUniform3uiv","ProgramUniform3uiv","ProgramUniform4d","ProgramUniform4d","ProgramUniform4dv","ProgramUniform4dv","ProgramUniform4f","ProgramUniform4f","ProgramUniform4fv","ProgramUniform4fv","ProgramUniform4i","ProgramUniform4i","ProgramUniform4iv","ProgramUniform4iv","ProgramUniform4ui","ProgramUniform4ui","ProgramUniform4uiv","ProgramUniform4uiv","ProgramUniformMatrix2dv","ProgramUniformMatrix2dv","ProgramUniformMatrix2fv","ProgramUniformMatrix2fv","ProgramUniformMatrix2x3dv","ProgramUniformMatrix2x3dv","ProgramUniformMatrix2x3fv","ProgramUniformMatrix2x3fv","ProgramUniformMatrix2x4dv","ProgramUniformMatrix2x4dv","ProgramUniformMatrix2x4fv","ProgramUniformMatrix2x4fv","ProgramUniformMatrix3dv","ProgramUniformMatrix3dv","ProgramUniformMatrix3fv","ProgramUniformMatrix3fv","ProgramUniformMatrix3x2dv","ProgramUniformMatrix3x2dv","ProgramUniformMatrix3x2fv","ProgramUniformMatrix3x2fv","ProgramUniformMatrix3x4dv","ProgramUniformMatrix3x4dv","ProgramUniformMatrix3x4fv","ProgramUniformMatrix3x4fv","ProgramUniformMatrix4dv","ProgramUniformMatrix4dv","ProgramUniformMatrix4fv","ProgramUniformMatrix4fv","ProgramUniformMatrix4x2dv","ProgramUniformMatrix4x2dv","ProgramUniformMatrix4x2fv","ProgramUniformMatrix4x2fv","ProgramUniformMatrix4x3dv","ProgramUniformMatrix4x3dv","ProgramUniformMatrix4x3fv","ProgramUniformMatrix4x3fv","ProvokingVertex","ProvokingVertex","PushDebugGroup","PushDebugGroup","QUADS","QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION","QUERY","QUERY_BUFFER","QUERY_BUFFER_BARRIER_BIT","QUERY_BUFFER_BINDING","QUERY_BY_REGION_NO_WAIT","QUERY_BY_REGION_NO_WAIT_INVERTED","QUERY_BY_REGION_WAIT","QUERY_BY_REGION_WAIT_INVERTED","QUERY_COUNTER_BITS","QUERY_NO_WAIT","QUERY_NO_WAIT_INVERTED","QUERY_RESULT","QUERY_RESULT_AVAILABLE","QUERY_RESULT_NO_WAIT","QUERY_TARGET","QUERY_WAIT","QUERY_WAIT_INVERTED","QueryCounter","QueryCounter","R11F_G11F_B10F","R16","R16F","R16I","R16UI","R16_SNORM","R32F","R32I","R32UI","R3_G3_B2","R8","R8I","R8UI","R8_SNORM","RASTERIZER_DISCARD","READ_BUFFER","READ_FRAMEBUFFER","READ_FRAMEBUFFER_BINDING","READ_ONLY","READ_PIXELS","READ_PIXELS_FORMAT","READ_PIXELS_TYPE","READ_WRITE","RED","RED_INTEGER","REFERENCED_BY_COMPUTE_SHADER","REFERENCED_BY_FRAGMENT_SHADER","REFERENCED_BY_GEOMETRY_SHADER","REFERENCED_BY_TESS_CONTROL_SHADER","REFERENCED_BY_TESS_EVALUATION_SHADER","REFERENCED_BY_VERTEX_SHADER","RENDERBUFFER","RENDERBUFFER_ALPHA_SIZE","RENDERBUFFER_BINDING","RENDERBUFFER_BLUE_SIZE","RENDERBUFFER_DEPTH_SIZE","RENDERBUFFER_GREEN_SIZE","RENDERBUFFER_HEIGHT","RENDERBUFFER_INTERNAL_FORMAT","RENDERBUFFER_RED_SIZE","RENDERBUFFER_SAMPLES","RENDERBUFFER_STENCIL_SIZE","RENDERBUFFER_WIDTH","RENDERER","REPEAT","REPLACE","RESET_NOTIFICATION_STRATEGY","RG","RG16","RG16F","RG16I","RG16UI","RG16_SNORM","RG32F","RG32I","RG32UI","RG8","RG8I","RG8UI","RG8_SNORM","RGB","RGB10","RGB10_A2","RGB10_A2UI","RGB12","RGB16","RGB16F","RGB16I","RGB16UI","RGB16_SNORM","RGB32F","RGB32I","RGB32UI","RGB4","RGB5","RGB565","RGB5_A1","RGB8","RGB8I","RGB8UI","RGB8_SNORM","RGB9_E5","RGBA","RGBA12","RGBA16","RGBA16F","RGBA16I","RGBA16UI","RGBA16_SNORM","RGBA2","RGBA32F","RGBA32I","RGBA32UI","RGBA4","RGBA8","RGBA8I","RGBA8UI","RGBA8_SNORM","RGBA_INTEGER","RGB_INTEGER","RG_INTEGER","RIGHT","ReadBuffer","ReadBuffer","ReadPixels","ReadPixels","ReadnPixels","ReadnPixels","ReleaseShaderCompiler","ReleaseShaderCompiler","RenderbufferStorage","RenderbufferStorage","RenderbufferStorageMultisample","RenderbufferStorageMultisample","ResumeTransformFeedback","ResumeTransformFeedback","SAMPLER","SAMPLER_1D","SAMPLER_1D_ARRAY","SAMPLER_1D_ARRAY_SHADOW","SAMPLER_1D_SHADOW","SAMPLER_2D","SAMPLER_2D_ARRAY","SAMPLER_2D_ARRAY_SHADOW","SAMPLER_2D_MULTISAMPLE","SAMPLER_2D_MULTISAMPLE_ARRAY","SAMPLER_2D_RECT","SAMPLER_2D_RECT_SHADOW","SAMPLER_2D_SHADOW","SAMPLER_3D","SAMPLER_BINDING","SAMPLER_BUFFER","SAMPLER_CUBE","SAMPLER_CUBE_MAP_ARRAY","SAMPLER_CUBE_MAP_ARRAY_SHADOW","SAMPLER_CUBE_SHADOW","SAMPLES","SAMPLES_PASSED","SAMPLE_ALPHA_TO_COVERAGE","SAMPLE_ALPHA_TO_ONE","SAMPLE_BUFFERS","SAMPLE_COVERAGE","SAMPLE_COVERAGE_INVERT","SAMPLE_COVERAGE_VALUE","SAMPLE_MASK","SAMPLE_MASK_VALUE","SAMPLE_POSITION","SAMPLE_SHADING","SCISSOR_BOX","SCISSOR_TEST","SEPARATE_ATTRIBS","SET","SHADER","SHADER_BINARY_FORMATS","SHADER_COMPILER","SHADER_IMAGE_ACCESS_BARRIER_BIT","SHADER_IMAGE_ATOMIC","SHADER_IMAGE_LOAD","SHADER_IMAGE_STORE","SHADER_SOURCE_LENGTH","SHADER_STORAGE_BARRIER_BIT","SHADER_STORAGE_BLOCK","SHADER_STORAGE_BUFFER","SHADER_STORAGE_BUFFER_BINDING","SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT","SHADER_STORAGE_BUFFER_SIZE","SHADER_STORAGE_BUFFER_START","SHADER_TYPE","SHADING_LANGUAGE_VERSION","SHORT","SIGNALED","SIGNED_NORMALIZED","SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST","SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE","SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST","SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE","SMOOTH_LINE_WIDTH_GRANULARITY","SMOOTH_LINE_WIDTH_RANGE","SMOOTH_POINT_SIZE_GRANULARITY","SMOOTH_POINT_SIZE_RANGE","SRC1_ALPHA","SRC1_COLOR","SRC_ALPHA","SRC_ALPHA_SATURATE","SRC_COLOR","SRGB","SRGB8","SRGB8_ALPHA8","SRGB_ALPHA","SRGB_READ","SRGB_WRITE","STACK_OVERFLOW","STACK_UNDERFLOW","STATIC_COPY","STATIC_DRAW","STATIC_READ","STENCIL","STENCIL_ATTACHMENT","STENCIL_BACK_FAIL","STENCIL_BACK_FUNC","STENCIL_BACK_PASS_DEPTH_FAIL","STENCIL_BACK_PASS_DEPTH_PASS","STENCIL_BACK_REF","STENCIL_BACK_VALUE_MASK","STENCIL_BACK_WRITEMASK","STENCIL_BUFFER_BIT","STENCIL_CLEAR_VALUE","STENCIL_COMPONENTS","STENCIL_FAIL","STENCIL_FUNC","STENCIL_INDEX","STENCIL_INDEX1","STENCIL_INDEX16","STENCIL_INDEX4","STENCIL_INDEX8","STENCIL_PASS_DEPTH_FAIL","STENCIL_PASS_DEPTH_PASS","STENCIL_REF","STENCIL_RENDERABLE","STENCIL_TEST","STENCIL_VALUE_MASK","STENCIL_WRITEMASK","STEREO","STREAM_COPY","STREAM_DRAW","STREAM_READ","SUBPIXEL_BITS","SYNC_CONDITION","SYNC_FENCE","SYNC_FLAGS","SYNC_FLUSH_COMMANDS_BIT","SYNC_GPU_COMMANDS_COMPLETE","SYNC_STATUS","SampleCoverage","SampleCoverage","SampleMaski","SampleMaski","SamplerParameterIiv","SamplerParameterIiv","SamplerParameterIuiv","SamplerParameterIuiv","SamplerParameterf","SamplerParameterf","SamplerParameterfv","SamplerParameterfv","SamplerParameteri","SamplerParameteri","SamplerParameteriv","SamplerParameteriv","Scissor","Scissor","ScissorArrayv","ScissorArrayv","ScissorIndexed","ScissorIndexed","ScissorIndexedv","ScissorIndexedv","SecondaryColorP3ui","SecondaryColorP3ui","SecondaryColorP3uiv","SecondaryColorP3uiv","ShaderBinary","ShaderBinary","ShaderSource","ShaderSource","ShaderStorageBlockBinding","ShaderStorageBlockBinding","StencilFunc","StencilFunc","StencilFuncSeparate","StencilFuncSeparate","StencilMask","StencilMask","StencilMaskSeparate","StencilMaskSeparate","StencilOp","StencilOp","StencilOpSeparate","StencilOpSeparate","TESS_CONTROL_OUTPUT_VERTICES","TESS_CONTROL_SHADER","TESS_CONTROL_SHADER_BIT","TESS_CONTROL_SUBROUTINE","TESS_CONTROL_SUBROUTINE_UNIFORM","TESS_CONTROL_TEXTURE","TESS_EVALUATION_SHADER","TESS_EVALUATION_SHADER_BIT","TESS_EVALUATION_SUBROUTINE","TESS_EVALUATION_SUBROUTINE_UNIFORM","TESS_EVALUATION_TEXTURE","TESS_GEN_MODE","TESS_GEN_POINT_MODE","TESS_GEN_SPACING","TESS_GEN_VERTEX_ORDER","TEXTURE","TEXTURE0","TEXTURE1","TEXTURE10","TEXTURE11","TEXTURE12","TEXTURE13","TEXTURE14","TEXTURE15","TEXTURE16","TEXTURE17","TEXTURE18","TEXTURE19","TEXTURE2","TEXTURE20","TEXTURE21","TEXTURE22","TEXTURE23","TEXTURE24","TEXTURE25","TEXTURE26","TEXTURE27","TEXTURE28","TEXTURE29","TEXTURE3","TEXTURE30","TEXTURE31","TEXTURE4","TEXTURE5","TEXTURE6","TEXTURE7","TEXTURE8","TEXTURE9","TEXTURE_1D","TEXTURE_1D_ARRAY","TEXTURE_2D","TEXTURE_2D_ARRAY","TEXTURE_2D_MULTISAMPLE","TEXTURE_2D_MULTISAMPLE_ARRAY","TEXTURE_3D","TEXTURE_ALPHA_SIZE","TEXTURE_ALPHA_TYPE","TEXTURE_BASE_LEVEL","TEXTURE_BINDING_1D","TEXTURE_BINDING_1D_ARRAY","TEXTURE_BINDING_2D","TEXTURE_BINDING_2D_ARRAY","TEXTURE_BINDING_2D_MULTISAMPLE","TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY","TEXTURE_BINDING_3D","TEXTURE_BINDING_BUFFER","TEXTURE_BINDING_CUBE_MAP","TEXTURE_BINDING_CUBE_MAP_ARRAY","TEXTURE_BINDING_RECTANGLE","TEXTURE_BLUE_SIZE","TEXTURE_BLUE_TYPE","TEXTURE_BORDER_COLOR","TEXTURE_BUFFER","TEXTURE_BUFFER_BINDING","TEXTURE_BUFFER_DATA_STORE_BINDING","TEXTURE_BUFFER_OFFSET","TEXTURE_BUFFER_OFFSET_ALIGNMENT","TEXTURE_BUFFER_SIZE","TEXTURE_COMPARE_FUNC","TEXTURE_COMPARE_MODE","TEXTURE_COMPRESSED","TEXTURE_COMPRESSED_BLOCK_HEIGHT","TEXTURE_COMPRESSED_BLOCK_SIZE","TEXTURE_COMPRESSED_BLOCK_WIDTH","TEXTURE_COMPRESSED_IMAGE_SIZE","TEXTURE_COMPRESSION_HINT","TEXTURE_CUBE_MAP","TEXTURE_CUBE_MAP_ARRAY","TEXTURE_CUBE_MAP_NEGATIVE_X","TEXTURE_CUBE_MAP_NEGATIVE_Y","TEXTURE_CUBE_MAP_NEGATIVE_Z","TEXTURE_CUBE_MAP_POSITIVE_X","TEXTURE_CUBE_MAP_POSITIVE_Y","TEXTURE_CUBE_MAP_POSITIVE_Z","TEXTURE_CUBE_MAP_SEAMLESS","TEXTURE_DEPTH","TEXTURE_DEPTH_SIZE","TEXTURE_DEPTH_TYPE","TEXTURE_FETCH_BARRIER_BIT","TEXTURE_FIXED_SAMPLE_LOCATIONS","TEXTURE_GATHER","TEXTURE_GATHER_SHADOW","TEXTURE_GREEN_SIZE","TEXTURE_GREEN_TYPE","TEXTURE_HEIGHT","TEXTURE_IMAGE_FORMAT","TEXTURE_IMAGE_TYPE","TEXTURE_IMMUTABLE_FORMAT","TEXTURE_IMMUTABLE_LEVELS","TEXTURE_INTERNAL_FORMAT","TEXTURE_LOD_BIAS","TEXTURE_MAG_FILTER","TEXTURE_MAX_LEVEL","TEXTURE_MAX_LOD","TEXTURE_MIN_FILTER","TEXTURE_MIN_LOD","TEXTURE_RECTANGLE","TEXTURE_RED_SIZE","TEXTURE_RED_TYPE","TEXTURE_SAMPLES","TEXTURE_SHADOW","TEXTURE_SHARED_SIZE","TEXTURE_STENCIL_SIZE","TEXTURE_SWIZZLE_A","TEXTURE_SWIZZLE_B","TEXTURE_SWIZZLE_G","TEXTURE_SWIZZLE_R","TEXTURE_SWIZZLE_RGBA","TEXTURE_TARGET","TEXTURE_UPDATE_BARRIER_BIT","TEXTURE_VIEW","TEXTURE_VIEW_MIN_LAYER","TEXTURE_VIEW_MIN_LEVEL","TEXTURE_VIEW_NUM_LAYERS","TEXTURE_VIEW_NUM_LEVELS","TEXTURE_WIDTH","TEXTURE_WRAP_R","TEXTURE_WRAP_S","TEXTURE_WRAP_T","TIMEOUT_EXPIRED","TIMEOUT_IGNORED","TIMESTAMP","TIME_ELAPSED","TOP_LEVEL_ARRAY_SIZE","TOP_LEVEL_ARRAY_STRIDE","TRANSFORM_FEEDBACK","TRANSFORM_FEEDBACK_ACTIVE","TRANSFORM_FEEDBACK_BARRIER_BIT","TRANSFORM_FEEDBACK_BINDING","TRANSFORM_FEEDBACK_BUFFER","TRANSFORM_FEEDBACK_BUFFER_ACTIVE","TRANSFORM_FEEDBACK_BUFFER_BINDING","TRANSFORM_FEEDBACK_BUFFER_INDEX","TRANSFORM_FEEDBACK_BUFFER_MODE","TRANSFORM_FEEDBACK_BUFFER_PAUSED","TRANSFORM_FEEDBACK_BUFFER_SIZE","TRANSFORM_FEEDBACK_BUFFER_START","TRANSFORM_FEEDBACK_BUFFER_STRIDE","TRANSFORM_FEEDBACK_PAUSED","TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN","TRANSFORM_FEEDBACK_VARYING","TRANSFORM_FEEDBACK_VARYINGS","TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH","TRIANGLES","TRIANGLES_ADJACENCY","TRIANGLE_FAN","TRIANGLE_STRIP","TRIANGLE_STRIP_ADJACENCY","TRUE","TYPE","TexBuffer","TexBuffer","TexBufferRange","TexBufferRange","TexCoordP1ui","TexCoordP1ui","TexCoordP1uiv","TexCoordP1uiv","TexCoordP2ui","TexCoordP2ui","TexCoordP2uiv","TexCoordP2uiv","TexCoordP3ui","TexCoordP3ui","TexCoordP3uiv","TexCoordP3uiv","TexCoordP4ui","TexCoordP4ui","TexCoordP4uiv","TexCoordP4uiv","TexImage1D","TexImage1D","TexImage2D","TexImage2D","TexImage2DMultisample","TexImage2DMultisample","TexImage3D","TexImage3D","TexImage3DMultisample","TexImage3DMultisample","TexParameterIiv","TexParameterIiv","TexParameterIuiv","TexParameterIuiv","TexParameterf","TexParameterf","TexParameterfv","TexParameterfv","TexParameteri","TexParameteri","TexParameteriv","TexParameteriv","TexStorage1D","TexStorage1D","TexStorage2D","TexStorage2D","TexStorage2DMultisample","TexStorage2DMultisample","TexStorage3D","TexStorage3D","TexStorage3DMultisample","TexStorage3DMultisample","TexSubImage1D","TexSubImage1D","TexSubImage2D","TexSubImage2D","TexSubImage3D","TexSubImage3D","TextureBarrier","TextureBarrier","TextureBuffer","TextureBuffer","TextureBufferRange","TextureBufferRange","TextureParameterIiv","TextureParameterIiv","TextureParameterIuiv","TextureParameterIuiv","TextureParameterf","TextureParameterf","TextureParameterfv","TextureParameterfv","TextureParameteri","TextureParameteri","TextureParameteriv","TextureParameteriv","TextureStorage1D","TextureStorage1D","TextureStorage2D","TextureStorage2D","TextureStorage2DMultisample","TextureStorage2DMultisample","TextureStorage3D","TextureStorage3D","TextureStorage3DMultisample","TextureStorage3DMultisample","TextureSubImage1D","TextureSubImage1D","TextureSubImage2D","TextureSubImage2D","TextureSubImage3D","TextureSubImage3D","TextureView","TextureView","TransformFeedbackBufferBase","TransformFeedbackBufferBase","TransformFeedbackBufferRange","TransformFeedbackBufferRange","TransformFeedbackVaryings","TransformFeedbackVaryings","UNDEFINED_VERTEX","UNIFORM","UNIFORM_ARRAY_STRIDE","UNIFORM_ATOMIC_COUNTER_BUFFER_INDEX","UNIFORM_BARRIER_BIT","UNIFORM_BLOCK","UNIFORM_BLOCK_ACTIVE_UNIFORMS","UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES","UNIFORM_BLOCK_BINDING","UNIFORM_BLOCK_DATA_SIZE","UNIFORM_BLOCK_INDEX","UNIFORM_BLOCK_NAME_LENGTH","UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER","UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER","UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER","UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER","UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER","UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER","UNIFORM_BUFFER","UNIFORM_BUFFER_BINDING","UNIFORM_BUFFER_OFFSET_ALIGNMENT","UNIFORM_BUFFER_SIZE","UNIFORM_BUFFER_START","UNIFORM_IS_ROW_MAJOR","UNIFORM_MATRIX_STRIDE","UNIFORM_NAME_LENGTH","UNIFORM_OFFSET","UNIFORM_SIZE","UNIFORM_TYPE","UNKNOWN_CONTEXT_RESET","UNPACK_ALIGNMENT","UNPACK_COMPRESSED_BLOCK_DEPTH","UNPACK_COMPRESSED_BLOCK_HEIGHT","UNPACK_COMPRESSED_BLOCK_SIZE","UNPACK_COMPRESSED_BLOCK_WIDTH","UNPACK_IMAGE_HEIGHT","UNPACK_LSB_FIRST","UNPACK_ROW_LENGTH","UNPACK_SKIP_IMAGES","UNPACK_SKIP_PIXELS","UNPACK_SKIP_ROWS","UNPACK_SWAP_BYTES","UNSIGNALED","UNSIGNED_BYTE","UNSIGNED_BYTE_2_3_3_REV","UNSIGNED_BYTE_3_3_2","UNSIGNED_INT","UNSIGNED_INT_10F_11F_11F_REV","UNSIGNED_INT_10_10_10_2","UNSIGNED_INT_24_8","UNSIGNED_INT_2_10_10_10_REV","UNSIGNED_INT_5_9_9_9_REV","UNSIGNED_INT_8_8_8_8","UNSIGNED_INT_8_8_8_8_REV","UNSIGNED_INT_ATOMIC_COUNTER","UNSIGNED_INT_IMAGE_1D","UNSIGNED_INT_IMAGE_1D_ARRAY","UNSIGNED_INT_IMAGE_2D","UNSIGNED_INT_IMAGE_2D_ARRAY","UNSIGNED_INT_IMAGE_2D_MULTISAMPLE","UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY","UNSIGNED_INT_IMAGE_2D_RECT","UNSIGNED_INT_IMAGE_3D","UNSIGNED_INT_IMAGE_BUFFER","UNSIGNED_INT_IMAGE_CUBE","UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY","UNSIGNED_INT_SAMPLER_1D","UNSIGNED_INT_SAMPLER_1D_ARRAY","UNSIGNED_INT_SAMPLER_2D","UNSIGNED_INT_SAMPLER_2D_ARRAY","UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE","UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY","UNSIGNED_INT_SAMPLER_2D_RECT","UNSIGNED_INT_SAMPLER_3D","UNSIGNED_INT_SAMPLER_BUFFER","UNSIGNED_INT_SAMPLER_CUBE","UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY","UNSIGNED_INT_VEC2","UNSIGNED_INT_VEC3","UNSIGNED_INT_VEC4","UNSIGNED_NORMALIZED","UNSIGNED_SHORT","UNSIGNED_SHORT_1_5_5_5_REV","UNSIGNED_SHORT_4_4_4_4","UNSIGNED_SHORT_4_4_4_4_REV","UNSIGNED_SHORT_5_5_5_1","UNSIGNED_SHORT_5_6_5","UNSIGNED_SHORT_5_6_5_REV","UPPER_LEFT","Uniform1d","Uniform1d","Uniform1dv","Uniform1dv","Uniform1f","Uniform1f","Uniform1fv","Uniform1fv","Uniform1i","Uniform1i","Uniform1iv","Uniform1iv","Uniform1ui","Uniform1ui","Uniform1uiv","Uniform1uiv","Uniform2d","Uniform2d","Uniform2dv","Uniform2dv","Uniform2f","Uniform2f","Uniform2fv","Uniform2fv","Uniform2i","Uniform2i","Uniform2iv","Uniform2iv","Uniform2ui","Uniform2ui","Uniform2uiv","Uniform2uiv","Uniform3d","Uniform3d","Uniform3dv","Uniform3dv","Uniform3f","Uniform3f","Uniform3fv","Uniform3fv","Uniform3i","Uniform3i","Uniform3iv","Uniform3iv","Uniform3ui","Uniform3ui","Uniform3uiv","Uniform3uiv","Uniform4d","Uniform4d","Uniform4dv","Uniform4dv","Uniform4f","Uniform4f","Uniform4fv","Uniform4fv","Uniform4i","Uniform4i","Uniform4iv","Uniform4iv","Uniform4ui","Uniform4ui","Uniform4uiv","Uniform4uiv","UniformBlockBinding","UniformBlockBinding","UniformMatrix2dv","UniformMatrix2dv","UniformMatrix2fv","UniformMatrix2fv","UniformMatrix2x3dv","UniformMatrix2x3dv","UniformMatrix2x3fv","UniformMatrix2x3fv","UniformMatrix2x4dv","UniformMatrix2x4dv","UniformMatrix2x4fv","UniformMatrix2x4fv","UniformMatrix3dv","UniformMatrix3dv","UniformMatrix3fv","UniformMatrix3fv","UniformMatrix3x2dv","UniformMatrix3x2dv","UniformMatrix3x2fv","UniformMatrix3x2fv","UniformMatrix3x4dv","UniformMatrix3x4dv","UniformMatrix3x4fv","UniformMatrix3x4fv","UniformMatrix4dv","UniformMatrix4dv","UniformMatrix4fv","UniformMatrix4fv","UniformMatrix4x2dv","UniformMatrix4x2dv","UniformMatrix4x2fv","UniformMatrix4x2fv","UniformMatrix4x3dv","UniformMatrix4x3dv","UniformMatrix4x3fv","UniformMatrix4x3fv","UniformSubroutinesuiv","UniformSubroutinesuiv","UnmapBuffer","UnmapBuffer","UnmapNamedBuffer","UnmapNamedBuffer","UseProgram","UseProgram","UseProgramStages","UseProgramStages","VALIDATE_STATUS","VENDOR","VERSION","VERTEX_ARRAY","VERTEX_ARRAY_BINDING","VERTEX_ATTRIB_ARRAY_BARRIER_BIT","VERTEX_ATTRIB_ARRAY_BUFFER_BINDING","VERTEX_ATTRIB_ARRAY_DIVISOR","VERTEX_ATTRIB_ARRAY_ENABLED","VERTEX_ATTRIB_ARRAY_INTEGER","VERTEX_ATTRIB_ARRAY_LONG","VERTEX_ATTRIB_ARRAY_NORMALIZED","VERTEX_ATTRIB_ARRAY_POINTER","VERTEX_ATTRIB_ARRAY_SIZE","VERTEX_ATTRIB_ARRAY_STRIDE","VERTEX_ATTRIB_ARRAY_TYPE","VERTEX_ATTRIB_BINDING","VERTEX_ATTRIB_RELATIVE_OFFSET","VERTEX_BINDING_BUFFER","VERTEX_BINDING_DIVISOR","VERTEX_BINDING_OFFSET","VERTEX_BINDING_STRIDE","VERTEX_PROGRAM_POINT_SIZE","VERTEX_SHADER","VERTEX_SHADER_BIT","VERTEX_SUBROUTINE","VERTEX_SUBROUTINE_UNIFORM","VERTEX_TEXTURE","VIEWPORT","VIEWPORT_BOUNDS_RANGE","VIEWPORT_INDEX_PROVOKING_VERTEX","VIEWPORT_SUBPIXEL_BITS","VIEW_CLASS_128_BITS","VIEW_CLASS_16_BITS","VIEW_CLASS_24_BITS","VIEW_CLASS_32_BITS","VIEW_CLASS_48_BITS","VIEW_CLASS_64_BITS","VIEW_CLASS_8_BITS","VIEW_CLASS_96_BITS","VIEW_CLASS_BPTC_FLOAT","VIEW_CLASS_BPTC_UNORM","VIEW_CLASS_RGTC1_RED","VIEW_CLASS_RGTC2_RG","VIEW_CLASS_S3TC_DXT1_RGB","VIEW_CLASS_S3TC_DXT1_RGBA","VIEW_CLASS_S3TC_DXT3_RGBA","VIEW_CLASS_S3TC_DXT5_RGBA","VIEW_COMPATIBILITY_CLASS","ValidateProgram","ValidateProgram","ValidateProgramPipeline","ValidateProgramPipeline","VertexArrayAttribBinding","VertexArrayAttribBinding","VertexArrayAttribFormat","VertexArrayAttribFormat","VertexArrayAttribIFormat","VertexArrayAttribIFormat","VertexArrayAttribLFormat","VertexArrayAttribLFormat","VertexArrayBindingDivisor","VertexArrayBindingDivisor","VertexArrayElementBuffer","VertexArrayElementBuffer","VertexArrayVertexBuffer","VertexArrayVertexBuffer","VertexArrayVertexBuffers","VertexArrayVertexBuffers","VertexAttrib1d","VertexAttrib1d","VertexAttrib1dv","VertexAttrib1dv","VertexAttrib1f","VertexAttrib1f","VertexAttrib1fv","VertexAttrib1fv","VertexAttrib1s","VertexAttrib1s","VertexAttrib1sv","VertexAttrib1sv","VertexAttrib2d","VertexAttrib2d","VertexAttrib2dv","VertexAttrib2dv","VertexAttrib2f","VertexAttrib2f","VertexAttrib2fv","VertexAttrib2fv","VertexAttrib2s","VertexAttrib2s","VertexAttrib2sv","VertexAttrib2sv","VertexAttrib3d","VertexAttrib3d","VertexAttrib3dv","VertexAttrib3dv","VertexAttrib3f","VertexAttrib3f","VertexAttrib3fv","VertexAttrib3fv","VertexAttrib3s","VertexAttrib3s","VertexAttrib3sv","VertexAttrib3sv","VertexAttrib4Nbv","VertexAttrib4Nbv","VertexAttrib4Niv","VertexAttrib4Niv","VertexAttrib4Nsv","VertexAttrib4Nsv","VertexAttrib4Nub","VertexAttrib4Nub","VertexAttrib4Nubv","VertexAttrib4Nubv","VertexAttrib4Nuiv","VertexAttrib4Nuiv","VertexAttrib4Nusv","VertexAttrib4Nusv","VertexAttrib4bv","VertexAttrib4bv","VertexAttrib4d","VertexAttrib4d","VertexAttrib4dv","VertexAttrib4dv","VertexAttrib4f","VertexAttrib4f","VertexAttrib4fv","VertexAttrib4fv","VertexAttrib4iv","VertexAttrib4iv","VertexAttrib4s","VertexAttrib4s","VertexAttrib4sv","VertexAttrib4sv","VertexAttrib4ubv","VertexAttrib4ubv","VertexAttrib4uiv","VertexAttrib4uiv","VertexAttrib4usv","VertexAttrib4usv","VertexAttribBinding","VertexAttribBinding","VertexAttribDivisor","VertexAttribDivisor","VertexAttribFormat","VertexAttribFormat","VertexAttribI1i","VertexAttribI1i","VertexAttribI1iv","VertexAttribI1iv","VertexAttribI1ui","VertexAttribI1ui","VertexAttribI1uiv","VertexAttribI1uiv","VertexAttribI2i","VertexAttribI2i","VertexAttribI2iv","VertexAttribI2iv","VertexAttribI2ui","VertexAttribI2ui","VertexAttribI2uiv","VertexAttribI2uiv","VertexAttribI3i","VertexAttribI3i","VertexAttribI3iv","VertexAttribI3iv","VertexAttribI3ui","VertexAttribI3ui","VertexAttribI3uiv","VertexAttribI3uiv","VertexAttribI4bv","VertexAttribI4bv","VertexAttribI4i","VertexAttribI4i","VertexAttribI4iv","VertexAttribI4iv","VertexAttribI4sv","VertexAttribI4sv","VertexAttribI4ubv","VertexAttribI4ubv","VertexAttribI4ui","VertexAttribI4ui","VertexAttribI4uiv","VertexAttribI4uiv","VertexAttribI4usv","VertexAttribI4usv","VertexAttribIFormat","VertexAttribIFormat","VertexAttribIPointer","VertexAttribIPointer","VertexAttribL1d","VertexAttribL1d","VertexAttribL1dv","VertexAttribL1dv","VertexAttribL2d","VertexAttribL2d","VertexAttribL2dv","VertexAttribL2dv","VertexAttribL3d","VertexAttribL3d","VertexAttribL3dv","VertexAttribL3dv","VertexAttribL4d","VertexAttribL4d","VertexAttribL4dv","VertexAttribL4dv","VertexAttribLFormat","VertexAttribLFormat","VertexAttribLPointer","VertexAttribLPointer","VertexAttribP1ui","VertexAttribP1ui","VertexAttribP1uiv","VertexAttribP1uiv","VertexAttribP2ui","VertexAttribP2ui","VertexAttribP2uiv","VertexAttribP2uiv","VertexAttribP3ui","VertexAttribP3ui","VertexAttribP3uiv","VertexAttribP3uiv","VertexAttribP4ui","VertexAttribP4ui","VertexAttribP4uiv","VertexAttribP4uiv","VertexAttribPointer","VertexAttribPointer","VertexBindingDivisor","VertexBindingDivisor","VertexP2ui","VertexP2ui","VertexP2uiv","VertexP2uiv","VertexP3ui","VertexP3ui","VertexP3uiv","VertexP3uiv","VertexP4ui","VertexP4ui","VertexP4uiv","VertexP4uiv","Viewport","Viewport","ViewportArrayv","ViewportArrayv","ViewportIndexedf","ViewportIndexedf","ViewportIndexedfv","ViewportIndexedfv","WAIT_FAILED","WRITE_ONLY","WaitSync","WaitSync","XOR","ZERO","ZERO_TO_ONE","borrow","borrow_mut","from","into","load_with","new","try_from","try_into","type_id","types","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","GLDEBUGPROC","GLDEBUGPROCAMD","GLDEBUGPROCARB","GLDEBUGPROCKHR","GLbitfield","GLboolean","GLbyte","GLchar","GLcharARB","GLclampd","GLclampf","GLclampx","GLdouble","GLeglImageOES","GLenum","GLfixed","GLfloat","GLhalf","GLhalfARB","GLhalfNV","GLhandleARB","GLint","GLint64","GLint64EXT","GLintptr","GLintptrARB","GLshort","GLsizei","GLsizeiptr","GLsizeiptrARB","GLsync","GLubyte","GLuint","GLuint64","GLuint64EXT","GLushort","GLvdpauSurfaceNV","GLvoid","__GLsync","_cl_context","_cl_event","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","from","from","from","into","into","into","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id"],"q":[[0,"gl"],[2747,"gl::ActiveShaderProgram"],[2749,"gl::ActiveTexture"],[2751,"gl::AttachShader"],[2753,"gl::BeginConditionalRender"],[2755,"gl::BeginQuery"],[2757,"gl::BeginQueryIndexed"],[2759,"gl::BeginTransformFeedback"],[2761,"gl::BindAttribLocation"],[2763,"gl::BindBuffer"],[2765,"gl::BindBufferBase"],[2767,"gl::BindBufferRange"],[2769,"gl::BindBuffersBase"],[2771,"gl::BindBuffersRange"],[2773,"gl::BindFragDataLocation"],[2775,"gl::BindFragDataLocationIndexed"],[2777,"gl::BindFramebuffer"],[2779,"gl::BindImageTexture"],[2781,"gl::BindImageTextures"],[2783,"gl::BindProgramPipeline"],[2785,"gl::BindRenderbuffer"],[2787,"gl::BindSampler"],[2789,"gl::BindSamplers"],[2791,"gl::BindTexture"],[2793,"gl::BindTextureUnit"],[2795,"gl::BindTextures"],[2797,"gl::BindTransformFeedback"],[2799,"gl::BindVertexArray"],[2801,"gl::BindVertexBuffer"],[2803,"gl::BindVertexBuffers"],[2805,"gl::BlendColor"],[2807,"gl::BlendEquation"],[2809,"gl::BlendEquationSeparate"],[2811,"gl::BlendEquationSeparatei"],[2813,"gl::BlendEquationi"],[2815,"gl::BlendFunc"],[2817,"gl::BlendFuncSeparate"],[2819,"gl::BlendFuncSeparatei"],[2821,"gl::BlendFunci"],[2823,"gl::BlitFramebuffer"],[2825,"gl::BlitNamedFramebuffer"],[2827,"gl::BufferData"],[2829,"gl::BufferStorage"],[2831,"gl::BufferSubData"],[2833,"gl::CheckFramebufferStatus"],[2835,"gl::CheckNamedFramebufferStatus"],[2837,"gl::ClampColor"],[2839,"gl::Clear"],[2841,"gl::ClearBufferData"],[2843,"gl::ClearBufferSubData"],[2845,"gl::ClearBufferfi"],[2847,"gl::ClearBufferfv"],[2849,"gl::ClearBufferiv"],[2851,"gl::ClearBufferuiv"],[2853,"gl::ClearColor"],[2855,"gl::ClearDepth"],[2857,"gl::ClearDepthf"],[2859,"gl::ClearNamedBufferData"],[2861,"gl::ClearNamedBufferSubData"],[2863,"gl::ClearNamedFramebufferfi"],[2865,"gl::ClearNamedFramebufferfv"],[2867,"gl::ClearNamedFramebufferiv"],[2869,"gl::ClearNamedFramebufferuiv"],[2871,"gl::ClearStencil"],[2873,"gl::ClearTexImage"],[2875,"gl::ClearTexSubImage"],[2877,"gl::ClientWaitSync"],[2879,"gl::ClipControl"],[2881,"gl::ColorMask"],[2883,"gl::ColorMaski"],[2885,"gl::ColorP3ui"],[2887,"gl::ColorP3uiv"],[2889,"gl::ColorP4ui"],[2891,"gl::ColorP4uiv"],[2893,"gl::CompileShader"],[2895,"gl::CompressedTexImage1D"],[2897,"gl::CompressedTexImage2D"],[2899,"gl::CompressedTexImage3D"],[2901,"gl::CompressedTexSubImage1D"],[2903,"gl::CompressedTexSubImage2D"],[2905,"gl::CompressedTexSubImage3D"],[2907,"gl::CompressedTextureSubImage1D"],[2909,"gl::CompressedTextureSubImage2D"],[2911,"gl::CompressedTextureSubImage3D"],[2913,"gl::CopyBufferSubData"],[2915,"gl::CopyImageSubData"],[2917,"gl::CopyNamedBufferSubData"],[2919,"gl::CopyTexImage1D"],[2921,"gl::CopyTexImage2D"],[2923,"gl::CopyTexSubImage1D"],[2925,"gl::CopyTexSubImage2D"],[2927,"gl::CopyTexSubImage3D"],[2929,"gl::CopyTextureSubImage1D"],[2931,"gl::CopyTextureSubImage2D"],[2933,"gl::CopyTextureSubImage3D"],[2935,"gl::CreateBuffers"],[2937,"gl::CreateFramebuffers"],[2939,"gl::CreateProgram"],[2941,"gl::CreateProgramPipelines"],[2943,"gl::CreateQueries"],[2945,"gl::CreateRenderbuffers"],[2947,"gl::CreateSamplers"],[2949,"gl::CreateShader"],[2951,"gl::CreateShaderProgramv"],[2953,"gl::CreateTextures"],[2955,"gl::CreateTransformFeedbacks"],[2957,"gl::CreateVertexArrays"],[2959,"gl::CullFace"],[2961,"gl::DebugMessageCallback"],[2963,"gl::DebugMessageControl"],[2965,"gl::DebugMessageInsert"],[2967,"gl::DeleteBuffers"],[2969,"gl::DeleteFramebuffers"],[2971,"gl::DeleteProgram"],[2973,"gl::DeleteProgramPipelines"],[2975,"gl::DeleteQueries"],[2977,"gl::DeleteRenderbuffers"],[2979,"gl::DeleteSamplers"],[2981,"gl::DeleteShader"],[2983,"gl::DeleteSync"],[2985,"gl::DeleteTextures"],[2987,"gl::DeleteTransformFeedbacks"],[2989,"gl::DeleteVertexArrays"],[2991,"gl::DepthFunc"],[2993,"gl::DepthMask"],[2995,"gl::DepthRange"],[2997,"gl::DepthRangeArrayv"],[2999,"gl::DepthRangeIndexed"],[3001,"gl::DepthRangef"],[3003,"gl::DetachShader"],[3005,"gl::Disable"],[3007,"gl::DisableVertexArrayAttrib"],[3009,"gl::DisableVertexAttribArray"],[3011,"gl::Disablei"],[3013,"gl::DispatchCompute"],[3015,"gl::DispatchComputeIndirect"],[3017,"gl::DrawArrays"],[3019,"gl::DrawArraysIndirect"],[3021,"gl::DrawArraysInstanced"],[3023,"gl::DrawArraysInstancedBaseInstance"],[3025,"gl::DrawBuffer"],[3027,"gl::DrawBuffers"],[3029,"gl::DrawElements"],[3031,"gl::DrawElementsBaseVertex"],[3033,"gl::DrawElementsIndirect"],[3035,"gl::DrawElementsInstanced"],[3037,"gl::DrawElementsInstancedBaseInstance"],[3039,"gl::DrawElementsInstancedBaseVertex"],[3041,"gl::DrawElementsInstancedBaseVertexBaseInstance"],[3043,"gl::DrawRangeElements"],[3045,"gl::DrawRangeElementsBaseVertex"],[3047,"gl::DrawTransformFeedback"],[3049,"gl::DrawTransformFeedbackInstanced"],[3051,"gl::DrawTransformFeedbackStream"],[3053,"gl::DrawTransformFeedbackStreamInstanced"],[3055,"gl::Enable"],[3057,"gl::EnableVertexArrayAttrib"],[3059,"gl::EnableVertexAttribArray"],[3061,"gl::Enablei"],[3063,"gl::EndConditionalRender"],[3065,"gl::EndQuery"],[3067,"gl::EndQueryIndexed"],[3069,"gl::EndTransformFeedback"],[3071,"gl::FenceSync"],[3073,"gl::Finish"],[3075,"gl::Flush"],[3077,"gl::FlushMappedBufferRange"],[3079,"gl::FlushMappedNamedBufferRange"],[3081,"gl::FramebufferParameteri"],[3083,"gl::FramebufferRenderbuffer"],[3085,"gl::FramebufferTexture"],[3087,"gl::FramebufferTexture1D"],[3089,"gl::FramebufferTexture2D"],[3091,"gl::FramebufferTexture3D"],[3093,"gl::FramebufferTextureLayer"],[3095,"gl::FrontFace"],[3097,"gl::GenBuffers"],[3099,"gl::GenFramebuffers"],[3101,"gl::GenProgramPipelines"],[3103,"gl::GenQueries"],[3105,"gl::GenRenderbuffers"],[3107,"gl::GenSamplers"],[3109,"gl::GenTextures"],[3111,"gl::GenTransformFeedbacks"],[3113,"gl::GenVertexArrays"],[3115,"gl::GenerateMipmap"],[3117,"gl::GenerateTextureMipmap"],[3119,"gl::GetActiveAtomicCounterBufferiv"],[3121,"gl::GetActiveAttrib"],[3123,"gl::GetActiveSubroutineName"],[3125,"gl::GetActiveSubroutineUniformName"],[3127,"gl::GetActiveSubroutineUniformiv"],[3129,"gl::GetActiveUniform"],[3131,"gl::GetActiveUniformBlockName"],[3133,"gl::GetActiveUniformBlockiv"],[3135,"gl::GetActiveUniformName"],[3137,"gl::GetActiveUniformsiv"],[3139,"gl::GetAttachedShaders"],[3141,"gl::GetAttribLocation"],[3143,"gl::GetBooleani_v"],[3145,"gl::GetBooleanv"],[3147,"gl::GetBufferParameteri64v"],[3149,"gl::GetBufferParameteriv"],[3151,"gl::GetBufferPointerv"],[3153,"gl::GetBufferSubData"],[3155,"gl::GetCompressedTexImage"],[3157,"gl::GetCompressedTextureImage"],[3159,"gl::GetCompressedTextureSubImage"],[3161,"gl::GetDebugMessageLog"],[3163,"gl::GetDoublei_v"],[3165,"gl::GetDoublev"],[3167,"gl::GetError"],[3169,"gl::GetFloati_v"],[3171,"gl::GetFloatv"],[3173,"gl::GetFragDataIndex"],[3175,"gl::GetFragDataLocation"],[3177,"gl::GetFramebufferAttachmentParameteriv"],[3179,"gl::GetFramebufferParameteriv"],[3181,"gl::GetGraphicsResetStatus"],[3183,"gl::GetInteger64i_v"],[3185,"gl::GetInteger64v"],[3187,"gl::GetIntegeri_v"],[3189,"gl::GetIntegerv"],[3191,"gl::GetInternalformati64v"],[3193,"gl::GetInternalformativ"],[3195,"gl::GetMultisamplefv"],[3197,"gl::GetNamedBufferParameteri64v"],[3199,"gl::GetNamedBufferParameteriv"],[3201,"gl::GetNamedBufferPointerv"],[3203,"gl::GetNamedBufferSubData"],[3205,"gl::GetNamedFramebufferAttachmentParameteriv"],[3207,"gl::GetNamedFramebufferParameteriv"],[3209,"gl::GetNamedRenderbufferParameteriv"],[3211,"gl::GetObjectLabel"],[3213,"gl::GetObjectPtrLabel"],[3215,"gl::GetPointerv"],[3217,"gl::GetProgramBinary"],[3219,"gl::GetProgramInfoLog"],[3221,"gl::GetProgramInterfaceiv"],[3223,"gl::GetProgramPipelineInfoLog"],[3225,"gl::GetProgramPipelineiv"],[3227,"gl::GetProgramResourceIndex"],[3229,"gl::GetProgramResourceLocation"],[3231,"gl::GetProgramResourceLocationIndex"],[3233,"gl::GetProgramResourceName"],[3235,"gl::GetProgramResourceiv"],[3237,"gl::GetProgramStageiv"],[3239,"gl::GetProgramiv"],[3241,"gl::GetQueryBufferObjecti64v"],[3243,"gl::GetQueryBufferObjectiv"],[3245,"gl::GetQueryBufferObjectui64v"],[3247,"gl::GetQueryBufferObjectuiv"],[3249,"gl::GetQueryIndexediv"],[3251,"gl::GetQueryObjecti64v"],[3253,"gl::GetQueryObjectiv"],[3255,"gl::GetQueryObjectui64v"],[3257,"gl::GetQueryObjectuiv"],[3259,"gl::GetQueryiv"],[3261,"gl::GetRenderbufferParameteriv"],[3263,"gl::GetSamplerParameterIiv"],[3265,"gl::GetSamplerParameterIuiv"],[3267,"gl::GetSamplerParameterfv"],[3269,"gl::GetSamplerParameteriv"],[3271,"gl::GetShaderInfoLog"],[3273,"gl::GetShaderPrecisionFormat"],[3275,"gl::GetShaderSource"],[3277,"gl::GetShaderiv"],[3279,"gl::GetString"],[3281,"gl::GetStringi"],[3283,"gl::GetSubroutineIndex"],[3285,"gl::GetSubroutineUniformLocation"],[3287,"gl::GetSynciv"],[3289,"gl::GetTexImage"],[3291,"gl::GetTexLevelParameterfv"],[3293,"gl::GetTexLevelParameteriv"],[3295,"gl::GetTexParameterIiv"],[3297,"gl::GetTexParameterIuiv"],[3299,"gl::GetTexParameterfv"],[3301,"gl::GetTexParameteriv"],[3303,"gl::GetTextureImage"],[3305,"gl::GetTextureLevelParameterfv"],[3307,"gl::GetTextureLevelParameteriv"],[3309,"gl::GetTextureParameterIiv"],[3311,"gl::GetTextureParameterIuiv"],[3313,"gl::GetTextureParameterfv"],[3315,"gl::GetTextureParameteriv"],[3317,"gl::GetTextureSubImage"],[3319,"gl::GetTransformFeedbackVarying"],[3321,"gl::GetTransformFeedbacki64_v"],[3323,"gl::GetTransformFeedbacki_v"],[3325,"gl::GetTransformFeedbackiv"],[3327,"gl::GetUniformBlockIndex"],[3329,"gl::GetUniformIndices"],[3331,"gl::GetUniformLocation"],[3333,"gl::GetUniformSubroutineuiv"],[3335,"gl::GetUniformdv"],[3337,"gl::GetUniformfv"],[3339,"gl::GetUniformiv"],[3341,"gl::GetUniformuiv"],[3343,"gl::GetVertexArrayIndexed64iv"],[3345,"gl::GetVertexArrayIndexediv"],[3347,"gl::GetVertexArrayiv"],[3349,"gl::GetVertexAttribIiv"],[3351,"gl::GetVertexAttribIuiv"],[3353,"gl::GetVertexAttribLdv"],[3355,"gl::GetVertexAttribPointerv"],[3357,"gl::GetVertexAttribdv"],[3359,"gl::GetVertexAttribfv"],[3361,"gl::GetVertexAttribiv"],[3363,"gl::GetnColorTable"],[3365,"gl::GetnCompressedTexImage"],[3367,"gl::GetnConvolutionFilter"],[3369,"gl::GetnHistogram"],[3371,"gl::GetnMapdv"],[3373,"gl::GetnMapfv"],[3375,"gl::GetnMapiv"],[3377,"gl::GetnMinmax"],[3379,"gl::GetnPixelMapfv"],[3381,"gl::GetnPixelMapuiv"],[3383,"gl::GetnPixelMapusv"],[3385,"gl::GetnPolygonStipple"],[3387,"gl::GetnSeparableFilter"],[3389,"gl::GetnTexImage"],[3391,"gl::GetnUniformdv"],[3393,"gl::GetnUniformfv"],[3395,"gl::GetnUniformiv"],[3397,"gl::GetnUniformuiv"],[3399,"gl::Hint"],[3401,"gl::InvalidateBufferData"],[3403,"gl::InvalidateBufferSubData"],[3405,"gl::InvalidateFramebuffer"],[3407,"gl::InvalidateNamedFramebufferData"],[3409,"gl::InvalidateNamedFramebufferSubData"],[3411,"gl::InvalidateSubFramebuffer"],[3413,"gl::InvalidateTexImage"],[3415,"gl::InvalidateTexSubImage"],[3417,"gl::IsBuffer"],[3419,"gl::IsEnabled"],[3421,"gl::IsEnabledi"],[3423,"gl::IsFramebuffer"],[3425,"gl::IsProgram"],[3427,"gl::IsProgramPipeline"],[3429,"gl::IsQuery"],[3431,"gl::IsRenderbuffer"],[3433,"gl::IsSampler"],[3435,"gl::IsShader"],[3437,"gl::IsSync"],[3439,"gl::IsTexture"],[3441,"gl::IsTransformFeedback"],[3443,"gl::IsVertexArray"],[3445,"gl::LineWidth"],[3447,"gl::LinkProgram"],[3449,"gl::LogicOp"],[3451,"gl::MapBuffer"],[3453,"gl::MapBufferRange"],[3455,"gl::MapNamedBuffer"],[3457,"gl::MapNamedBufferRange"],[3459,"gl::MemoryBarrier"],[3461,"gl::MemoryBarrierByRegion"],[3463,"gl::MinSampleShading"],[3465,"gl::MultiDrawArrays"],[3467,"gl::MultiDrawArraysIndirect"],[3469,"gl::MultiDrawElements"],[3471,"gl::MultiDrawElementsBaseVertex"],[3473,"gl::MultiDrawElementsIndirect"],[3475,"gl::MultiTexCoordP1ui"],[3477,"gl::MultiTexCoordP1uiv"],[3479,"gl::MultiTexCoordP2ui"],[3481,"gl::MultiTexCoordP2uiv"],[3483,"gl::MultiTexCoordP3ui"],[3485,"gl::MultiTexCoordP3uiv"],[3487,"gl::MultiTexCoordP4ui"],[3489,"gl::MultiTexCoordP4uiv"],[3491,"gl::NamedBufferData"],[3493,"gl::NamedBufferStorage"],[3495,"gl::NamedBufferSubData"],[3497,"gl::NamedFramebufferDrawBuffer"],[3499,"gl::NamedFramebufferDrawBuffers"],[3501,"gl::NamedFramebufferParameteri"],[3503,"gl::NamedFramebufferReadBuffer"],[3505,"gl::NamedFramebufferRenderbuffer"],[3507,"gl::NamedFramebufferTexture"],[3509,"gl::NamedFramebufferTextureLayer"],[3511,"gl::NamedRenderbufferStorage"],[3513,"gl::NamedRenderbufferStorageMultisample"],[3515,"gl::NormalP3ui"],[3517,"gl::NormalP3uiv"],[3519,"gl::ObjectLabel"],[3521,"gl::ObjectPtrLabel"],[3523,"gl::PatchParameterfv"],[3525,"gl::PatchParameteri"],[3527,"gl::PauseTransformFeedback"],[3529,"gl::PixelStoref"],[3531,"gl::PixelStorei"],[3533,"gl::PointParameterf"],[3535,"gl::PointParameterfv"],[3537,"gl::PointParameteri"],[3539,"gl::PointParameteriv"],[3541,"gl::PointSize"],[3543,"gl::PolygonMode"],[3545,"gl::PolygonOffset"],[3547,"gl::PopDebugGroup"],[3549,"gl::PrimitiveRestartIndex"],[3551,"gl::ProgramBinary"],[3553,"gl::ProgramParameteri"],[3555,"gl::ProgramUniform1d"],[3557,"gl::ProgramUniform1dv"],[3559,"gl::ProgramUniform1f"],[3561,"gl::ProgramUniform1fv"],[3563,"gl::ProgramUniform1i"],[3565,"gl::ProgramUniform1iv"],[3567,"gl::ProgramUniform1ui"],[3569,"gl::ProgramUniform1uiv"],[3571,"gl::ProgramUniform2d"],[3573,"gl::ProgramUniform2dv"],[3575,"gl::ProgramUniform2f"],[3577,"gl::ProgramUniform2fv"],[3579,"gl::ProgramUniform2i"],[3581,"gl::ProgramUniform2iv"],[3583,"gl::ProgramUniform2ui"],[3585,"gl::ProgramUniform2uiv"],[3587,"gl::ProgramUniform3d"],[3589,"gl::ProgramUniform3dv"],[3591,"gl::ProgramUniform3f"],[3593,"gl::ProgramUniform3fv"],[3595,"gl::ProgramUniform3i"],[3597,"gl::ProgramUniform3iv"],[3599,"gl::ProgramUniform3ui"],[3601,"gl::ProgramUniform3uiv"],[3603,"gl::ProgramUniform4d"],[3605,"gl::ProgramUniform4dv"],[3607,"gl::ProgramUniform4f"],[3609,"gl::ProgramUniform4fv"],[3611,"gl::ProgramUniform4i"],[3613,"gl::ProgramUniform4iv"],[3615,"gl::ProgramUniform4ui"],[3617,"gl::ProgramUniform4uiv"],[3619,"gl::ProgramUniformMatrix2dv"],[3621,"gl::ProgramUniformMatrix2fv"],[3623,"gl::ProgramUniformMatrix2x3dv"],[3625,"gl::ProgramUniformMatrix2x3fv"],[3627,"gl::ProgramUniformMatrix2x4dv"],[3629,"gl::ProgramUniformMatrix2x4fv"],[3631,"gl::ProgramUniformMatrix3dv"],[3633,"gl::ProgramUniformMatrix3fv"],[3635,"gl::ProgramUniformMatrix3x2dv"],[3637,"gl::ProgramUniformMatrix3x2fv"],[3639,"gl::ProgramUniformMatrix3x4dv"],[3641,"gl::ProgramUniformMatrix3x4fv"],[3643,"gl::ProgramUniformMatrix4dv"],[3645,"gl::ProgramUniformMatrix4fv"],[3647,"gl::ProgramUniformMatrix4x2dv"],[3649,"gl::ProgramUniformMatrix4x2fv"],[3651,"gl::ProgramUniformMatrix4x3dv"],[3653,"gl::ProgramUniformMatrix4x3fv"],[3655,"gl::ProvokingVertex"],[3657,"gl::PushDebugGroup"],[3659,"gl::QueryCounter"],[3661,"gl::ReadBuffer"],[3663,"gl::ReadPixels"],[3665,"gl::ReadnPixels"],[3667,"gl::ReleaseShaderCompiler"],[3669,"gl::RenderbufferStorage"],[3671,"gl::RenderbufferStorageMultisample"],[3673,"gl::ResumeTransformFeedback"],[3675,"gl::SampleCoverage"],[3677,"gl::SampleMaski"],[3679,"gl::SamplerParameterIiv"],[3681,"gl::SamplerParameterIuiv"],[3683,"gl::SamplerParameterf"],[3685,"gl::SamplerParameterfv"],[3687,"gl::SamplerParameteri"],[3689,"gl::SamplerParameteriv"],[3691,"gl::Scissor"],[3693,"gl::ScissorArrayv"],[3695,"gl::ScissorIndexed"],[3697,"gl::ScissorIndexedv"],[3699,"gl::SecondaryColorP3ui"],[3701,"gl::SecondaryColorP3uiv"],[3703,"gl::ShaderBinary"],[3705,"gl::ShaderSource"],[3707,"gl::ShaderStorageBlockBinding"],[3709,"gl::StencilFunc"],[3711,"gl::StencilFuncSeparate"],[3713,"gl::StencilMask"],[3715,"gl::StencilMaskSeparate"],[3717,"gl::StencilOp"],[3719,"gl::StencilOpSeparate"],[3721,"gl::TexBuffer"],[3723,"gl::TexBufferRange"],[3725,"gl::TexCoordP1ui"],[3727,"gl::TexCoordP1uiv"],[3729,"gl::TexCoordP2ui"],[3731,"gl::TexCoordP2uiv"],[3733,"gl::TexCoordP3ui"],[3735,"gl::TexCoordP3uiv"],[3737,"gl::TexCoordP4ui"],[3739,"gl::TexCoordP4uiv"],[3741,"gl::TexImage1D"],[3743,"gl::TexImage2D"],[3745,"gl::TexImage2DMultisample"],[3747,"gl::TexImage3D"],[3749,"gl::TexImage3DMultisample"],[3751,"gl::TexParameterIiv"],[3753,"gl::TexParameterIuiv"],[3755,"gl::TexParameterf"],[3757,"gl::TexParameterfv"],[3759,"gl::TexParameteri"],[3761,"gl::TexParameteriv"],[3763,"gl::TexStorage1D"],[3765,"gl::TexStorage2D"],[3767,"gl::TexStorage2DMultisample"],[3769,"gl::TexStorage3D"],[3771,"gl::TexStorage3DMultisample"],[3773,"gl::TexSubImage1D"],[3775,"gl::TexSubImage2D"],[3777,"gl::TexSubImage3D"],[3779,"gl::TextureBarrier"],[3781,"gl::TextureBuffer"],[3783,"gl::TextureBufferRange"],[3785,"gl::TextureParameterIiv"],[3787,"gl::TextureParameterIuiv"],[3789,"gl::TextureParameterf"],[3791,"gl::TextureParameterfv"],[3793,"gl::TextureParameteri"],[3795,"gl::TextureParameteriv"],[3797,"gl::TextureStorage1D"],[3799,"gl::TextureStorage2D"],[3801,"gl::TextureStorage2DMultisample"],[3803,"gl::TextureStorage3D"],[3805,"gl::TextureStorage3DMultisample"],[3807,"gl::TextureSubImage1D"],[3809,"gl::TextureSubImage2D"],[3811,"gl::TextureSubImage3D"],[3813,"gl::TextureView"],[3815,"gl::TransformFeedbackBufferBase"],[3817,"gl::TransformFeedbackBufferRange"],[3819,"gl::TransformFeedbackVaryings"],[3821,"gl::Uniform1d"],[3823,"gl::Uniform1dv"],[3825,"gl::Uniform1f"],[3827,"gl::Uniform1fv"],[3829,"gl::Uniform1i"],[3831,"gl::Uniform1iv"],[3833,"gl::Uniform1ui"],[3835,"gl::Uniform1uiv"],[3837,"gl::Uniform2d"],[3839,"gl::Uniform2dv"],[3841,"gl::Uniform2f"],[3843,"gl::Uniform2fv"],[3845,"gl::Uniform2i"],[3847,"gl::Uniform2iv"],[3849,"gl::Uniform2ui"],[3851,"gl::Uniform2uiv"],[3853,"gl::Uniform3d"],[3855,"gl::Uniform3dv"],[3857,"gl::Uniform3f"],[3859,"gl::Uniform3fv"],[3861,"gl::Uniform3i"],[3863,"gl::Uniform3iv"],[3865,"gl::Uniform3ui"],[3867,"gl::Uniform3uiv"],[3869,"gl::Uniform4d"],[3871,"gl::Uniform4dv"],[3873,"gl::Uniform4f"],[3875,"gl::Uniform4fv"],[3877,"gl::Uniform4i"],[3879,"gl::Uniform4iv"],[3881,"gl::Uniform4ui"],[3883,"gl::Uniform4uiv"],[3885,"gl::UniformBlockBinding"],[3887,"gl::UniformMatrix2dv"],[3889,"gl::UniformMatrix2fv"],[3891,"gl::UniformMatrix2x3dv"],[3893,"gl::UniformMatrix2x3fv"],[3895,"gl::UniformMatrix2x4dv"],[3897,"gl::UniformMatrix2x4fv"],[3899,"gl::UniformMatrix3dv"],[3901,"gl::UniformMatrix3fv"],[3903,"gl::UniformMatrix3x2dv"],[3905,"gl::UniformMatrix3x2fv"],[3907,"gl::UniformMatrix3x4dv"],[3909,"gl::UniformMatrix3x4fv"],[3911,"gl::UniformMatrix4dv"],[3913,"gl::UniformMatrix4fv"],[3915,"gl::UniformMatrix4x2dv"],[3917,"gl::UniformMatrix4x2fv"],[3919,"gl::UniformMatrix4x3dv"],[3921,"gl::UniformMatrix4x3fv"],[3923,"gl::UniformSubroutinesuiv"],[3925,"gl::UnmapBuffer"],[3927,"gl::UnmapNamedBuffer"],[3929,"gl::UseProgram"],[3931,"gl::UseProgramStages"],[3933,"gl::ValidateProgram"],[3935,"gl::ValidateProgramPipeline"],[3937,"gl::VertexArrayAttribBinding"],[3939,"gl::VertexArrayAttribFormat"],[3941,"gl::VertexArrayAttribIFormat"],[3943,"gl::VertexArrayAttribLFormat"],[3945,"gl::VertexArrayBindingDivisor"],[3947,"gl::VertexArrayElementBuffer"],[3949,"gl::VertexArrayVertexBuffer"],[3951,"gl::VertexArrayVertexBuffers"],[3953,"gl::VertexAttrib1d"],[3955,"gl::VertexAttrib1dv"],[3957,"gl::VertexAttrib1f"],[3959,"gl::VertexAttrib1fv"],[3961,"gl::VertexAttrib1s"],[3963,"gl::VertexAttrib1sv"],[3965,"gl::VertexAttrib2d"],[3967,"gl::VertexAttrib2dv"],[3969,"gl::VertexAttrib2f"],[3971,"gl::VertexAttrib2fv"],[3973,"gl::VertexAttrib2s"],[3975,"gl::VertexAttrib2sv"],[3977,"gl::VertexAttrib3d"],[3979,"gl::VertexAttrib3dv"],[3981,"gl::VertexAttrib3f"],[3983,"gl::VertexAttrib3fv"],[3985,"gl::VertexAttrib3s"],[3987,"gl::VertexAttrib3sv"],[3989,"gl::VertexAttrib4Nbv"],[3991,"gl::VertexAttrib4Niv"],[3993,"gl::VertexAttrib4Nsv"],[3995,"gl::VertexAttrib4Nub"],[3997,"gl::VertexAttrib4Nubv"],[3999,"gl::VertexAttrib4Nuiv"],[4001,"gl::VertexAttrib4Nusv"],[4003,"gl::VertexAttrib4bv"],[4005,"gl::VertexAttrib4d"],[4007,"gl::VertexAttrib4dv"],[4009,"gl::VertexAttrib4f"],[4011,"gl::VertexAttrib4fv"],[4013,"gl::VertexAttrib4iv"],[4015,"gl::VertexAttrib4s"],[4017,"gl::VertexAttrib4sv"],[4019,"gl::VertexAttrib4ubv"],[4021,"gl::VertexAttrib4uiv"],[4023,"gl::VertexAttrib4usv"],[4025,"gl::VertexAttribBinding"],[4027,"gl::VertexAttribDivisor"],[4029,"gl::VertexAttribFormat"],[4031,"gl::VertexAttribI1i"],[4033,"gl::VertexAttribI1iv"],[4035,"gl::VertexAttribI1ui"],[4037,"gl::VertexAttribI1uiv"],[4039,"gl::VertexAttribI2i"],[4041,"gl::VertexAttribI2iv"],[4043,"gl::VertexAttribI2ui"],[4045,"gl::VertexAttribI2uiv"],[4047,"gl::VertexAttribI3i"],[4049,"gl::VertexAttribI3iv"],[4051,"gl::VertexAttribI3ui"],[4053,"gl::VertexAttribI3uiv"],[4055,"gl::VertexAttribI4bv"],[4057,"gl::VertexAttribI4i"],[4059,"gl::VertexAttribI4iv"],[4061,"gl::VertexAttribI4sv"],[4063,"gl::VertexAttribI4ubv"],[4065,"gl::VertexAttribI4ui"],[4067,"gl::VertexAttribI4uiv"],[4069,"gl::VertexAttribI4usv"],[4071,"gl::VertexAttribIFormat"],[4073,"gl::VertexAttribIPointer"],[4075,"gl::VertexAttribL1d"],[4077,"gl::VertexAttribL1dv"],[4079,"gl::VertexAttribL2d"],[4081,"gl::VertexAttribL2dv"],[4083,"gl::VertexAttribL3d"],[4085,"gl::VertexAttribL3dv"],[4087,"gl::VertexAttribL4d"],[4089,"gl::VertexAttribL4dv"],[4091,"gl::VertexAttribLFormat"],[4093,"gl::VertexAttribLPointer"],[4095,"gl::VertexAttribP1ui"],[4097,"gl::VertexAttribP1uiv"],[4099,"gl::VertexAttribP2ui"],[4101,"gl::VertexAttribP2uiv"],[4103,"gl::VertexAttribP3ui"],[4105,"gl::VertexAttribP3uiv"],[4107,"gl::VertexAttribP4ui"],[4109,"gl::VertexAttribP4uiv"],[4111,"gl::VertexAttribPointer"],[4113,"gl::VertexBindingDivisor"],[4115,"gl::VertexP2ui"],[4117,"gl::VertexP2uiv"],[4119,"gl::VertexP3ui"],[4121,"gl::VertexP3uiv"],[4123,"gl::VertexP4ui"],[4125,"gl::VertexP4uiv"],[4127,"gl::Viewport"],[4129,"gl::ViewportArrayv"],[4131,"gl::ViewportIndexedf"],[4133,"gl::ViewportIndexedfv"],[4135,"gl::WaitSync"],[4137,"gl::types"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fallbacks: ActiveTextureARB","","Fallbacks: AttachObjectARB","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fallbacks: BeginConditionalRenderNV","","Fallbacks: BeginQueryARB","","","","Fallbacks: BeginTransformFeedbackEXT, …","","Fallbacks: BindAttribLocationARB","","Fallbacks: BindBufferARB","","Fallbacks: BindBufferBaseEXT, BindBufferBaseNV","","Fallbacks: BindBufferRangeEXT, BindBufferRangeNV","","","","","","Fallbacks: BindFragDataLocationEXT","","Fallbacks: BindFragDataLocationIndexedEXT","","","","","","","","","","","","","","","","Fallbacks: BindTextureEXT","","","","","","","","Fallbacks: BindVertexArrayOES","","","","","","Fallbacks: BlendColorEXT","","Fallbacks: BlendEquationEXT","","Fallbacks: BlendEquationSeparateEXT","","Fallbacks: BlendEquationSeparateIndexedAMD, …","","Fallbacks: BlendEquationIndexedAMD, BlendEquationiARB, …","","","","Fallbacks: BlendFuncSeparateEXT, BlendFuncSeparateINGR","","Fallbacks: BlendFuncSeparateIndexedAMD, …","","Fallbacks: BlendFuncIndexedAMD, BlendFunciARB, …","","Fallbacks: BlitFramebufferEXT, BlitFramebufferNV","","","","Fallbacks: BufferDataARB","","Fallbacks: BufferStorageEXT","","Fallbacks: BufferSubDataARB","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fallbacks: CheckFramebufferStatusEXT","","","","Fallbacks: ClampColorARB","","","","","","","","","","","","","","","","","","","","Fallbacks: ClearDepthfOES","","","","","","","","","","","","","","","","Fallbacks: ClearTexImageEXT","","Fallbacks: ClearTexSubImageEXT","","Fallbacks: ClientWaitSyncAPPLE","","Fallbacks: ClipControlEXT","","","","Fallbacks: ColorMaskIndexedEXT, ColorMaskiEXT, …","","","","","","","","","","Fallbacks: CompileShaderARB","","Fallbacks: CompressedTexImage1DARB","","Fallbacks: CompressedTexImage2DARB","","Fallbacks: CompressedTexImage3DARB","","Fallbacks: CompressedTexSubImage1DARB","","Fallbacks: CompressedTexSubImage2DARB","","Fallbacks: CompressedTexSubImage3DARB","","","","","","","","Fallbacks: CopyBufferSubDataNV","","Fallbacks: CopyImageSubDataEXT, CopyImageSubDataOES","","","","Fallbacks: CopyTexImage1DEXT","","Fallbacks: CopyTexImage2DEXT","","Fallbacks: CopyTexSubImage1DEXT","","Fallbacks: CopyTexSubImage2DEXT","","Fallbacks: CopyTexSubImage3DEXT","","","","","","","","","","","","Fallbacks: CreateProgramObjectARB","","","","","","","","","","Fallbacks: CreateShaderObjectARB","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fallbacks: DebugMessageCallbackARB, DebugMessageCallbackKHR","","Fallbacks: DebugMessageControlARB, DebugMessageControlKHR","","Fallbacks: DebugMessageInsertARB, DebugMessageInsertKHR","","Fallbacks: DeleteBuffersARB","","Fallbacks: DeleteFramebuffersEXT","","","","","","Fallbacks: DeleteQueriesARB","","Fallbacks: DeleteRenderbuffersEXT","","","","","","Fallbacks: DeleteSyncAPPLE","","","","Fallbacks: DeleteTransformFeedbacksNV","","Fallbacks: DeleteVertexArraysAPPLE, DeleteVertexArraysOES","","","","","","","","","","","","Fallbacks: DepthRangefOES","","Fallbacks: DetachObjectARB","","","","","","Fallbacks: DisableVertexAttribArrayARB","","Fallbacks: DisableIndexedEXT, DisableiEXT, DisableiNV, …","","","","","","Fallbacks: DrawArraysEXT","","","","Fallbacks: DrawArraysInstancedANGLE, …","","Fallbacks: DrawArraysInstancedBaseInstanceEXT","","","","Fallbacks: DrawBuffersARB, DrawBuffersATI, DrawBuffersEXT","","","","Fallbacks: DrawElementsBaseVertexEXT, …","","","","Fallbacks: DrawElementsInstancedANGLE, …","","Fallbacks: DrawElementsInstancedBaseInstanceEXT","","Fallbacks: DrawElementsInstancedBaseVertexEXT, …","","Fallbacks: DrawElementsInstancedBaseVertexBaseInstanceEXT","","Fallbacks: DrawRangeElementsEXT","","Fallbacks: DrawRangeElementsBaseVertexEXT, …","","Fallbacks: DrawTransformFeedbackEXT, …","","Fallbacks: DrawTransformFeedbackInstancedEXT","","","","","","","","","","","","","","","","Fallbacks: EnableVertexAttribArrayARB","","Fallbacks: EnableIndexedEXT, EnableiEXT, EnableiNV, …","","Fallbacks: EndConditionalRenderNV, EndConditionalRenderNVX","","Fallbacks: EndQueryARB","","","","Fallbacks: EndTransformFeedbackEXT, EndTransformFeedbackNV","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fallbacks: FenceSyncAPPLE","","","","","","Fallbacks: FlushMappedBufferRangeAPPLE, …","","","","","","","Fallbacks: FramebufferRenderbufferEXT","","Fallbacks: FramebufferTextureARB, FramebufferTextureEXT, …","","Fallbacks: FramebufferTexture1DEXT","","Fallbacks: FramebufferTexture2DEXT","","Fallbacks: FramebufferTexture3DEXT","","Fallbacks: FramebufferTextureLayerARB, …","","","","","","","","","","","","","","","","","","","","Fallbacks: GenBuffersARB","","Fallbacks: GenFramebuffersEXT","","","","Fallbacks: GenQueriesARB","","Fallbacks: GenRenderbuffersEXT","","","","","","Fallbacks: GenTransformFeedbacksNV","","Fallbacks: GenVertexArraysAPPLE, GenVertexArraysOES","","Fallbacks: GenerateMipmapEXT","","","","","","Fallbacks: GetActiveAttribARB","","","","","","","","Fallbacks: GetActiveUniformARB","","","","","","","","","","","","Fallbacks: GetAttribLocationARB","","Fallbacks: GetBooleanIndexedvEXT","","","","","","Fallbacks: GetBufferParameterivARB","","Fallbacks: GetBufferPointervARB, GetBufferPointervOES","","Fallbacks: GetBufferSubDataARB","","Fallbacks: GetCompressedTexImageARB","","","","","","Fallbacks: GetDebugMessageLogARB, GetDebugMessageLogKHR","","Fallbacks: GetDoubleIndexedvEXT, GetDoublei_vEXT","","","","","","Fallbacks: GetFloatIndexedvEXT, GetFloati_vEXT, …","","","","Fallbacks: GetFragDataIndexEXT","","Fallbacks: GetFragDataLocationEXT","","Fallbacks: GetFramebufferAttachmentParameterivEXT","","","","Fallbacks: GetGraphicsResetStatusEXT, …","","","","Fallbacks: GetInteger64vAPPLE","","Fallbacks: GetIntegerIndexedvEXT","","","","","","","","Fallbacks: GetMultisamplefvNV","","","","","","","","","","","","","","","","Fallbacks: GetObjectLabelKHR","","Fallbacks: GetObjectPtrLabelKHR","","Fallbacks: GetPointervEXT, GetPointervKHR","","Fallbacks: GetProgramBinaryOES","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fallbacks: GetQueryObjecti64vEXT","","Fallbacks: GetQueryObjectivARB, GetQueryObjectivEXT","","Fallbacks: GetQueryObjectui64vEXT","","Fallbacks: GetQueryObjectuivARB","","Fallbacks: GetQueryivARB","","Fallbacks: GetRenderbufferParameterivEXT","","Fallbacks: GetSamplerParameterIivEXT, …","","Fallbacks: GetSamplerParameterIuivEXT, …","","","","","","","","","","Fallbacks: GetShaderSourceARB","","","","","","","","","","","","Fallbacks: GetSyncivAPPLE","","","","","","","","Fallbacks: GetTexParameterIivEXT, GetTexParameterIivOES","","Fallbacks: GetTexParameterIuivEXT, GetTexParameterIuivOES","","","","","","","","","","","","","","","","","","","","","","Fallbacks: GetTransformFeedbackVaryingEXT","","","","","","","","","","","","Fallbacks: GetUniformLocationARB","","","","","","Fallbacks: GetUniformfvARB","","Fallbacks: GetUniformivARB","","Fallbacks: GetUniformuivEXT","","","","","","","","Fallbacks: GetVertexAttribIivEXT","","Fallbacks: GetVertexAttribIuivEXT","","Fallbacks: GetVertexAttribLdvEXT","","Fallbacks: GetVertexAttribPointervARB, …","","Fallbacks: GetVertexAttribdvARB, GetVertexAttribdvNV","","Fallbacks: GetVertexAttribfvARB, GetVertexAttribfvNV","","Fallbacks: GetVertexAttribivARB, GetVertexAttribivNV","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fallbacks: GetnUniformfvEXT, GetnUniformfvKHR","","Fallbacks: GetnUniformivEXT, GetnUniformivKHR","","Fallbacks: GetnUniformuivKHR","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fallbacks: IsBufferARB","","","","Fallbacks: IsEnabledIndexedEXT, IsEnablediEXT, …","","Fallbacks: IsFramebufferEXT","","","","","","Fallbacks: IsQueryARB","","Fallbacks: IsRenderbufferEXT","","","","","","Fallbacks: IsSyncAPPLE","","","","Fallbacks: IsTransformFeedbackNV","","Fallbacks: IsVertexArrayAPPLE, IsVertexArrayOES","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fallbacks: LinkProgramallbacks: MapBufferARB, MapBufferOES","","Fallbacks: MapBufferRangeEXT","","","","","","Fallbacks: MemoryBarrierEXT","","","","Fallbacks: MinSampleShadingARB, MinSampleShadingOES","","Fallbacks: MultiDrawArraysEXT","","Fallbacks: MultiDrawArraysIndirectAMD, …","","Fallbacks: MultiDrawElementsEXT","","Fallbacks: MultiDrawElementsBaseVertexEXT","","Fallbacks: MultiDrawElementsIndirectAMD, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fallbacks: NamedBufferStorageEXT","","Fallbacks: NamedBufferSubDataEXT","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fallbacks: ObjectLabelKHR","","Fallbacks: ObjectPtrLabelKHR","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fallbacks: PatchParameteriEXT, PatchParameteriOES","","Fallbacks: PauseTransformFeedbackNV","","","","","","Fallbacks: PointParameterfARB, PointParameterfEXT, …","","Fallbacks: PointParameterfvARB, PointParameterfvEXT, …","","Fallbacks: PointParameteriNV","","Fallbacks: PointParameterivNV","","","","Fallbacks: PolygonModeNV","","","","Fallbacks: PopDebugGroupKHR","","","","Fallbacks: ProgramBinaryOES","","Fallbacks: ProgramParameteriARB, ProgramParameteriEXT","","","","","","Fallbacks: ProgramUniform1fEXT","","Fallbacks: ProgramUniform1fvEXT","","Fallbacks: ProgramUniform1iEXT","","Fallbacks: ProgramUniform1ivEXT","","Fallbacks: ProgramUniform1uiEXT","","Fallbacks: ProgramUniform1uivEXT","","","","","","Fallbacks: ProgramUniform2fEXT","","Fallbacks: ProgramUniform2fvEXT","","Fallbacks: ProgramUniform2iEXT","","Fallbacks: ProgramUniform2ivEXT","","Fallbacks: ProgramUniform2uiEXT","","Fallbacks: ProgramUniform2uivEXT","","","","","","Fallbacks: ProgramUniform3fEXT","","Fallbacks: ProgramUniform3fvEXT","","Fallbacks: ProgramUniform3iEXT","","Fallbacks: ProgramUniform3ivEXT","","Fallbacks: ProgramUniform3uiEXT","","Fallbacks: ProgramUniform3uivEXT","","","","","","Fallbacks: ProgramUniform4fEXT","","Fallbacks: ProgramUniform4fvEXT","","Fallbacks: ProgramUniform4iEXT","","Fallbacks: ProgramUniform4ivEXT","","Fallbacks: ProgramUniform4uiEXT","","Fallbacks: ProgramUniform4uivEXT","","","","Fallbacks: ProgramUniformMatrix2fvEXT","","","","Fallbacks: ProgramUniformMatrix2x3fvEXT","","","","Fallbacks: ProgramUniformMatrix2x4fvEXT","","","","Fallbacks: ProgramUniformMatrix3fvEXT","","","","Fallbacks: ProgramUniformMatrix3x2fvEXT","","","","Fallbacks: ProgramUniformMatrix3x4fvEXT","","","","Fallbacks: ProgramUniformMatrix4fvEXT","","","","Fallbacks: ProgramUniformMatrix4x2fvEXT","","","","Fallbacks: ProgramUniformMatrix4x3fvEXT","","Fallbacks: ProvokingVertexEXT","","Fallbacks: PushDebugGroupKHR","","","","","","","","","","","","","","","","","","","","","Fallbacks: QueryCounterEXT","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fallbacks: ReadnPixelsARB, ReadnPixelsEXT, ReadnPixelsKHR","","","","Fallbacks: RenderbufferStorageEXT","","Fallbacks: RenderbufferStorageMultisampleEXT, …","","Fallbacks: ResumeTransformFeedbackNV","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fallbacks: SampleCoverageARB","","","","Fallbacks: SamplerParameterIivEXT, SamplerParameterIivOES","","Fallbacks: SamplerParameterIuivEXT, SamplerParameterIuivOES","","","","","","","","","","","","Fallbacks: ScissorArrayvNV, ScissorArrayvOES","","Fallbacks: ScissorIndexedNV, ScissorIndexedOES","","Fallbacks: ScissorIndexedvNV, ScissorIndexedvOES","","","","","","","","Fallbacks: ShaderSourceARB","","","","","","","","","","","","","","Fallbacks: StencilOpSeparateallbacks: TexBufferARB, TexBufferEXT, TexBufferOES","","Fallbacks: TexBufferRangeEXT, TexBufferRangeOES","","","","","","","","","","","","","","","","","","","","","","","","Fallbacks: TexImage3DEXT","","","","Fallbacks: TexParameterIivEXT, TexParameterIivOES","","Fallbacks: TexParameterIuivEXT, TexParameterIuivOES","","","","","","","","","","Fallbacks: TexStorage1DEXT","","Fallbacks: TexStorage2DEXT","","","","Fallbacks: TexStorage3DEXT","","Fallbacks: TexStorage3DMultisampleOES","","Fallbacks: TexSubImage1DEXT","","Fallbacks: TexSubImage2DEXT","","Fallbacks: TexSubImage3DEXT","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fallbacks: TextureViewEXT, TextureViewOES","","","","","","Fallbacks: TransformFeedbackVaryingsEXT","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fallbacks: Uniform1fARB","","Fallbacks: Uniform1fvARB","","Fallbacks: Uniform1iARB","","Fallbacks: Uniform1ivARB","","Fallbacks: Uniform1uiEXT","","Fallbacks: Uniform1uivEXT","","","","","","Fallbacks: Uniform2fARB","","Fallbacks: Uniform2fvARB","","Fallbacks: Uniform2iARB","","Fallbacks: Uniform2ivARB","","Fallbacks: Uniform2uiEXT","","Fallbacks: Uniform2uivEXT","","","","","","Fallbacks: Uniform3fARB","","Fallbacks: Uniform3fvARB","","Fallbacks: Uniform3iARB","","Fallbacks: Uniform3ivARB","","Fallbacks: Uniform3uiEXT","","Fallbacks: Uniform3uivEXT","","","","","","Fallbacks: Uniform4fARB","","Fallbacks: Uniform4fvARB","","Fallbacks: Uniform4iARB","","Fallbacks: Uniform4ivARB","","Fallbacks: Uniform4uiEXT","","Fallbacks: Uniform4uivEXT","","","","","","Fallbacks: UniformMatrix2fvARB","","","","Fallbacks: UniformMatrix2x3fvNV","","","","Fallbacks: UniformMatrix2x4fvNV","","","","Fallbacks: UniformMatrix3fvARB","","","","Fallbacks: UniformMatrix3x2fvNV","","","","Fallbacks: UniformMatrix3x4fvNV","","","","Fallbacks: UniformMatrix4fvARB","","","","Fallbacks: UniformMatrix4x2fvNV","","","","Fallbacks: UniformMatrix4x3fvNV","","","","Fallbacks: UnmapBufferARB, UnmapBufferOES","","","","Fallbacks: UseProgramObjectARB","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fallbacks: ValidateProgramARB","","","","","","","","","","","","","","","","","","","","Fallbacks: VertexAttrib1dARB, VertexAttrib1dNV","","Fallbacks: VertexAttrib1dvARB, VertexAttrib1dvNV","","Fallbacks: VertexAttrib1fARB, VertexAttrib1fNV","","Fallbacks: VertexAttrib1fvARB, VertexAttrib1fvNV","","Fallbacks: VertexAttrib1sARB, VertexAttrib1sNV","","Fallbacks: VertexAttrib1svARB, VertexAttrib1svNV","","Fallbacks: VertexAttrib2dARB, VertexAttrib2dNV","","Fallbacks: VertexAttrib2dvARB, VertexAttrib2dvNV","","Fallbacks: VertexAttrib2fARB, VertexAttrib2fNV","","Fallbacks: VertexAttrib2fvARB, VertexAttrib2fvNV","","Fallbacks: VertexAttrib2sARB, VertexAttrib2sNV","","Fallbacks: VertexAttrib2svARB, VertexAttrib2svNV","","Fallbacks: VertexAttrib3dARB, VertexAttrib3dNV","","Fallbacks: VertexAttrib3dvARB, VertexAttrib3dvNV","","Fallbacks: VertexAttrib3fARB, VertexAttrib3fNV","","Fallbacks: VertexAttrib3fvARB, VertexAttrib3fvNV","","Fallbacks: VertexAttrib3sARB, VertexAttrib3sNV","","Fallbacks: VertexAttrib3svARB, VertexAttrib3svNV","","Fallbacks: VertexAttrib4NbvARB","","Fallbacks: VertexAttrib4NivARB","","Fallbacks: VertexAttrib4NsvARB","","Fallbacks: VertexAttrib4NubARB, VertexAttrib4ubNV","","Fallbacks: VertexAttrib4NubvARB, VertexAttrib4ubvNV","","Fallbacks: VertexAttrib4NuivARB","","Fallbacks: VertexAttrib4NusvARB","","Fallbacks: VertexAttrib4bvARB","","Fallbacks: VertexAttrib4dARB, VertexAttrib4dNV","","Fallbacks: VertexAttrib4dvARB, VertexAttrib4dvNV","","Fallbacks: VertexAttrib4fARB, VertexAttrib4fNV","","Fallbacks: VertexAttrib4fvARB, VertexAttrib4fvNV","","Fallbacks: VertexAttrib4ivARB","","Fallbacks: VertexAttrib4sARB, VertexAttrib4sNV","","Fallbacks: VertexAttrib4svARB, VertexAttrib4svNV","","Fallbacks: VertexAttrib4ubvARB","","Fallbacks: VertexAttrib4uivARB","","Fallbacks: VertexAttrib4usvARB","","","","Fallbacks: VertexAttribDivisorANGLE, …","","","","Fallbacks: VertexAttribI1iEXT","","Fallbacks: VertexAttribI1ivEXT","","Fallbacks: VertexAttribI1uiEXT","","Fallbacks: VertexAttribI1uivEXT","","Fallbacks: VertexAttribI2iEXT","","Fallbacks: VertexAttribI2ivEXT","","Fallbacks: VertexAttribI2uiEXT","","Fallbacks: VertexAttribI2uivEXT","","Fallbacks: VertexAttribI3iEXT","","Fallbacks: VertexAttribI3ivEXT","","Fallbacks: VertexAttribI3uiEXT","","Fallbacks: VertexAttribI3uivEXT","","Fallbacks: VertexAttribI4bvEXT","","Fallbacks: VertexAttribI4iEXT","","Fallbacks: VertexAttribI4ivEXT","","Fallbacks: VertexAttribI4svEXT","","Fallbacks: VertexAttribI4ubvEXT","","Fallbacks: VertexAttribI4uiEXT","","Fallbacks: VertexAttribI4uivEXT","","Fallbacks: VertexAttribI4usvEXT","","","","Fallbacks: VertexAttribIPointerEXT","","Fallbacks: VertexAttribL1dEXT","","Fallbacks: VertexAttribL1dvEXT","","Fallbacks: VertexAttribL2dEXT","","Fallbacks: VertexAttribL2dvEXT","","Fallbacks: VertexAttribL3dEXT","","Fallbacks: VertexAttribL3dvEXT","","Fallbacks: VertexAttribL4dEXT","","Fallbacks: VertexAttribL4dvEXT","","","","Fallbacks: VertexAttribLPointerEXT","","","","","","","","","","","","","","","","","","Fallbacks: VertexAttribPointerARB","","","","","","","","","","","","","","","","","","Fallbacks: ViewportArrayvNV, ViewportArrayvOES","","Fallbacks: ViewportIndexedfOES, ViewportIndexedfNV","","Fallbacks: ViewportIndexedfvOES, ViewportIndexedfvNV","","","","Fallbacks: WaitSyncAPPLE","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Load each OpenGL symbol using a custom load function. This …","Creates a <code>FnPtr</code> from a load attempteturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,22,22,22,22,0,22,22,22,22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,26,27,28,26,27,28,26,27,28,26,27,28,26,27,28,26,27,28,26,27,28],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,1]],0,[2],0,[[1,1]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,2]],0,[[2,1]],0,[[2,1,1]],0,[2],0,[[1,1,3]],0,[[2,1]],0,[[2,1,1]],0,[[2,1,1,4,5]],0,[[2,1,6,1]],0,[[2,1,6,1,4,5]],0,[[1,1,3]],0,[[1,1,1,3]],0,[[2,1]],0,[[1,1,7,8,7,2,2]],0,[[1,6,1]],0,[1],0,[[2,1]],0,[[1,1]],0,[[1,6,1]],0,[[2,1]],0,[[1,1]],0,[[1,6,1]],0,[[2,1]],0,[1],0,[[1,1,4,6]],0,[[1,6,1,4,6]],0,[[9,9,9,9]],0,[2],0,[[2,2]],0,[[1,2,2]],0,[[1,2]],0,[[2,2]],0,[[2,2,2,2]],0,[[1,2,2,2,2]],0,[[1,2,2]],0,[[7,7,7,7,7,7,7,7,10,2]],0,[[1,1,7,7,7,7,7,7,7,7,10,2]],0,[[2,5,11,2]],0,[[2,5,11,10]],0,[[2,4,5,11]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[2,2],0,[[1,2],2],0,[[2,2]],0,[10],0,[[2,2,2,2,11]],0,[[2,2,4,5,2,2,11]],0,[[2,7,9,7]],0,[[2,7,9]],0,[[2,7,7]],0,[[2,7,1]],0,[[9,9,9,9]],0,[12],0,[9],0,[[1,2,2,2,11]],0,[[1,2,4,5,2,2,11]],0,[[1,2,7,9,7]],0,[[1,2,7,9]],0,[[1,2,7,7]],0,[[1,2,7,1]],0,[7],0,[[1,7,2,2,11]],0,[[1,7,7,7,7,6,6,6,2,2,11]],0,[[13,10,14],2],0,[[2,2]],0,[[8,8,8,8]],0,[[1,8,8,8,8]],0,[[2,1]],0,[[2,1]],0,[[2,1]],0,[[2,1]],0,[1],0,[[2,7,2,6,7,6,11]],0,[[2,7,2,6,6,7,6,11]],0,[[2,7,2,6,6,6,7,6,11]],0,[[2,7,7,6,2,6,11]],0,[[2,7,7,7,6,6,2,6,11]],0,[[2,7,7,7,7,6,6,6,2,6,11]],0,[[1,7,7,6,2,6,11]],0,[[1,7,7,7,6,6,2,6,11]],0,[[1,7,7,7,7,6,6,6,2,6,11]],0,[[2,2,4,4,5]],0,[[1,2,7,7,7,7,1,2,7,7,7,7,6,6,6]],0,[[1,1,4,4,5]],0,[[2,7,2,7,7,6,7]],0,[[2,7,2,7,7,6,6,7]],0,[[2,7,7,7,7,6]],0,[[2,7,7,7,7,7,6,6]],0,[[2,7,7,7,7,7,7,6,6]],0,[[1,7,7,7,7,6]],0,[[1,7,7,7,7,7,6,6]],0,[[1,7,7,7,7,7,7,6,6]],0,[[6,1]],0,[[6,1]],0,[[],1],0,[[6,1]],0,[[2,6,1]],0,[[6,1]],0,[[6,1]],0,[2,1],0,[[2,6,3],1],0,[[2,6,1]],0,[[6,1]],0,[[6,1]],0,[2],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[15,11]],0,[[2,2,2,6,1,8]],0,[[2,2,1,2,6,3]],0,[[6,1]],0,[[6,1]],0,[1],0,[[6,1]],0,[[6,1]],0,[[6,1]],0,[[6,1]],0,[1],0,[13],0,[[6,1]],0,[[6,1]],0,[[6,1]],0,[2],0,[8],0,[[12,12]],0,[[1,6,12]],0,[[1,12,12]],0,[[9,9]],0,[[1,1]],0,[2],0,[[1,1]],0,[1],0,[[2,1]],0,[[1,1,1]],0,[4],0,[[2,7,6]],0,[[2,11]],0,[[2,7,6,6]],0,[[2,7,6,6,1]],0,[2],0,[[6,2]],0,[[2,6,2,11]],0,[[2,6,2,11,7]],0,[[2,2,11]],0,[[2,6,2,11,6]],0,[[2,6,2,11,6,1]],0,[[2,6,2,11,6,7]],0,[[2,6,2,11,6,7,1]],0,[[2,1,1,6,2,11]],0,[[2,1,1,6,2,11,7]],0,[[2,1]],0,[[2,1,6]],0,[[2,1,1]],0,[[2,1,1,6]],0,0,0,0,0,0,0,[2],0,[[1,1]],0,[1],0,[[2,1]],0,[[]],0,[2],0,[[2,1]],0,[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[2,10],13],0,[[]],0,[[]],0,[[2,4,5]],0,[[1,4,5]],0,0,[[2,2,7]],0,[[2,2,2,1]],0,[[2,2,1,7]],0,[[2,2,2,1,7]],0,[[2,2,2,1,7]],0,[[2,2,2,1,7,7]],0,[[2,2,1,7,7]],0,[2],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[6,1]],0,[[6,1]],0,[[6,1]],0,[[6,1]],0,[[6,1]],0,[[6,1]],0,[[6,1]],0,[[6,1]],0,[[6,1]],0,[2],0,[1],0,[[1,1,2,7]],0,[[1,1,6,6,7,2,3]],0,[[1,2,1,6,6,3]],0,[[1,2,1,6,6,3]],0,[[1,2,1,2,7]],0,[[1,1,6,6,7,2,3]],0,[[1,1,6,6,3]],0,[[1,1,2,7]],0,[[1,1,6,6,3]],0,[[1,6,1,2,7]],0,[[1,6,6,1]],0,[[1,3],7],0,[[2,1,8]],0,[[2,8]],0,[[2,2,16]],0,[[2,2,7]],0,[[2,2,11]],0,[[2,4,5,11]],0,[[2,7,11]],0,[[1,7,6,11]],0,[[1,7,7,7,7,6,6,6,6,11]],0,[[1,6,2,2,1,2,6,3],1],0,[[2,1,12]],0,[[2,12]],0,[[],2],0,[[2,1,9]],0,[[2,9]],0,[[1,3],7],0,[[1,3],7],0,[[2,2,2,7]],0,[[2,2,7]],0,[[],2],0,[[2,1,16]],0,[[2,16]],0,[[2,1,7]],0,[[2,7]],0,[[2,2,2,6,16]],0,[[2,2,2,6,7]],0,[[2,1,9]],0,[[1,2,16]],0,[[1,2,7]],0,[[1,2,11]],0,[[1,4,5,11]],0,[[1,2,2,7]],0,[[1,2,7]],0,[[1,2,7]],0,[[2,1,6,6,3]],0,[[11,6,6,3]],0,[[2,11]],0,[[1,6,6,2,11]],0,[[1,6,6,3]],0,[[1,2,2,7]],0,[[1,6,6,3]],0,[[1,2,7]],0,[[1,2,3],1],0,[[1,2,3],7],0,[[1,2,3],7],0,[[1,2,1,6,6,3]],0,[[1,2,1,6,2,6,6,7]],0,[[1,2,2,7]],0,[[1,2,7]],0,[[1,1,2,4]],0,[[1,1,2,4]],0,[[1,1,2,4]],0,[[1,1,2,4]],0,[[2,1,2,7]],0,[[1,2,16]],0,[[1,2,7]],0,[[1,2,14]],0,[[1,2,1]],0,[[2,2,7]],0,[[2,2,7]],0,[[1,2,7]],0,[[1,2,1]],0,[[1,2,9]],0,[[1,2,7]],0,[[1,6,6,3]],0,[[2,2,7,7]],0,[[1,6,6,3]],0,[[1,2,7]],0,[2,17],0,[[2,1],17],0,[[1,2,3],1],0,[[1,2,3],7],0,[[13,2,6,6,7]],0,[[2,7,2,2,11]],0,[[2,7,2,9]],0,[[2,7,2,7]],0,[[2,2,7]],0,[[2,2,1]],0,[[2,2,9]],0,[[2,2,7]],0,[[1,7,2,2,6,11]],0,[[1,7,2,9]],0,[[1,7,2,7]],0,[[1,2,7]],0,[[1,2,1]],0,[[1,2,9]],0,[[1,2,7]],0,[[1,7,7,7,7,6,6,6,2,2,6,11]],0,[[1,1,6,6,6,2,3]],0,[[1,2,1,16]],0,[[1,2,1,7]],0,[[1,2,7]],0,[[1,3],1],0,[[1,6,3,1]],0,[[1,3],7],0,[[2,7,1]],0,[[1,7,12]],0,[[1,7,9]],0,[[1,7,7]],0,[[1,7,1]],0,[[1,1,2,16]],0,[[1,1,2,7]],0,[[1,2,7]],0,[[1,2,7]],0,[[1,2,1]],0,[[1,2,12]],0,[[1,2,11]],0,[[1,2,12]],0,[[1,2,9]],0,[[1,2,7]],0,[[2,2,2,6,11]],0,[[2,7,6,11]],0,[[2,2,2,6,11]],0,[[2,8,2,2,6,11]],0,[[2,2,6,12]],0,[[2,2,6,9]],0,[[2,2,6,7]],0,[[2,8,2,2,6,11]],0,[[2,6,9]],0,[[2,6,1]],0,[[2,6,18]],0,[[6,17]],0,[[2,2,2,6,11,6,11,11]],0,[[2,7,2,2,6,11]],0,[[1,7,6,12]],0,[[1,7,6,9]],0,[[1,7,6,7]],0,[[1,7,6,1]],0,0,0,0,[[2,2]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],0,[[1,4,5]],0,[[2,6,2]],0,[[1,6,2]],0,[[1,6,2,7,7,6,6]],0,[[2,6,2,7,7,6,6]],0,[[1,7]],0,[[1,7,7,7,7,6,6,6]],0,[1,8],0,[2,8],0,[[2,1],8],0,[1,8],0,[1,8],0,[1,8],0,[1,8],0,[1,8],0,[1,8],0,[1,8],0,[13,8],0,[1,8],0,[1,8],0,[1,8],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[9],0,[1],0,[2],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[2,2],11],0,[[2,4,5,10],11],0,[[1,2],11],0,[[1,4,5,10],11],0,[10],0,[10],0,[9],0,[[2,7,6,6]],0,[[2,11,6,6]],0,[[2,6,2,11,6]],0,[[2,6,2,11,6,7]],0,[[2,2,11,6,6]],0,[[2,2,1]],0,[[2,2,1]],0,[[2,2,1]],0,[[2,2,1]],0,[[2,2,1]],0,[[2,2,1]],0,[[2,2,1]],0,[[2,2,1]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,5,11,2]],0,[[1,5,11,10]],0,[[1,4,5,11]],0,[[1,2]],0,[[1,6,2]],0,[[1,2,7]],0,[[1,2]],0,[[1,2,2,1]],0,[[1,2,1,7]],0,[[1,2,1,7,7]],0,[[1,2,6,6]],0,[[1,6,2,6,6]],0,[[2,1]],0,[[2,1]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[2,1,6,3]],0,[[11,6,3]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[2,9]],0,[[2,7]],0,[[]],0,[[2,9]],0,[[2,7]],0,[[2,9]],0,[[2,9]],0,[[2,7]],0,[[2,7]],0,[9],0,[[2,2]],0,[[9,9]],0,[[]],0,[1],0,[[1,2,11,6]],0,[[1,2,7]],0,[[1,7,12]],0,[[1,7,6,12]],0,[[1,7,9]],0,[[1,7,6,9]],0,[[1,7,7]],0,[[1,7,6,7]],0,[[1,7,1]],0,[[1,7,6,1]],0,[[1,7,12,12]],0,[[1,7,6,12]],0,[[1,7,9,9]],0,[[1,7,6,9]],0,[[1,7,7,7]],0,[[1,7,6,7]],0,[[1,7,1,1]],0,[[1,7,6,1]],0,[[1,7,12,12,12]],0,[[1,7,6,12]],0,[[1,7,9,9,9]],0,[[1,7,6,9]],0,[[1,7,7,7,7]],0,[[1,7,6,7]],0,[[1,7,1,1,1]],0,[[1,7,6,1]],0,[[1,7,12,12,12,12]],0,[[1,7,6,12]],0,[[1,7,9,9,9,9]],0,[[1,7,6,9]],0,[[1,7,7,7,7,7]],0,[[1,7,6,7]],0,[[1,7,1,1,1,1]],0,[[1,7,6,1]],0,[[1,7,6,8,12]],0,[[1,7,6,8,9]],0,[[1,7,6,8,12]],0,[[1,7,6,8,9]],0,[[1,7,6,8,12]],0,[[1,7,6,8,9]],0,[[1,7,6,8,12]],0,[[1,7,6,8,9]],0,[[1,7,6,8,12]],0,[[1,7,6,8,9]],0,[[1,7,6,8,12]],0,[[1,7,6,8,9]],0,[[1,7,6,8,12]],0,[[1,7,6,8,9]],0,[[1,7,6,8,12]],0,[[1,7,6,8,9]],0,[[1,7,6,8,12]],0,[[1,7,6,8,9]],0,[2],0,[[2,1,6,3]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,2]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[2],0,[[7,7,6,6,2,2,11]],0,[[7,7,6,6,2,2,6,11]],0,[[]],0,[[2,2,6,6]],0,[[2,6,2,6,6]],0,[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[9,8]],0,[[1,10]],0,[[1,2,7]],0,[[1,2,1]],0,[[1,2,9]],0,[[1,2,9]],0,[[1,2,7]],0,[[1,2,7]],0,[[7,7,6,6]],0,[[1,6,7]],0,[[1,7,7,6,6]],0,[[1,7]],0,[[2,1]],0,[[2,1]],0,[[6,1,2,11,6]],0,[[1,6,3,7]],0,[[1,1,1]],0,[[2,7,1]],0,[[2,2,7,1]],0,[1],0,[[2,1]],0,[[2,2,2]],0,[[2,2,2,2]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[2,2,1]],0,[[2,2,1,4,5]],0,[[2,1]],0,[[2,1]],0,[[2,1]],0,[[2,1]],0,[[2,1]],0,[[2,1]],0,[[2,1]],0,[[2,1]],0,[[2,7,7,6,7,2,2,11]],0,[[2,7,7,6,6,7,2,2,11]],0,[[2,6,2,6,6,8]],0,[[2,7,7,6,6,6,7,2,2,11]],0,[[2,6,2,6,6,6,8]],0,[[2,2,7]],0,[[2,2,1]],0,[[2,2,9]],0,[[2,2,9]],0,[[2,2,7]],0,[[2,2,7]],0,[[2,6,2,6]],0,[[2,6,2,6,6]],0,[[2,6,2,6,6,8]],0,[[2,6,2,6,6,6]],0,[[2,6,2,6,6,6,8]],0,[[2,7,7,6,2,2,11]],0,[[2,7,7,7,6,6,2,2,11]],0,[[2,7,7,7,7,6,6,6,2,2,11]],0,[[]],0,[[1,2,1]],0,[[1,2,1,4,5]],0,[[1,2,7]],0,[[1,2,1]],0,[[1,2,9]],0,[[1,2,9]],0,[[1,2,7]],0,[[1,2,7]],0,[[1,6,2,6]],0,[[1,6,2,6,6]],0,[[1,6,2,6,6,8]],0,[[1,6,2,6,6,6]],0,[[1,6,2,6,6,6,8]],0,[[1,7,7,6,2,2,11]],0,[[1,7,7,7,6,6,2,2,11]],0,[[1,7,7,7,7,6,6,6,2,2,11]],0,[[1,2,1,2,1,1,1,1]],0,[[1,1,1]],0,[[1,1,1,4,5]],0,[[1,6,3,2]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[7,12]],0,[[7,6,12]],0,[[7,9]],0,[[7,6,9]],0,[[7,7]],0,[[7,6,7]],0,[[7,1]],0,[[7,6,1]],0,[[7,12,12]],0,[[7,6,12]],0,[[7,9,9]],0,[[7,6,9]],0,[[7,7,7]],0,[[7,6,7]],0,[[7,1,1]],0,[[7,6,1]],0,[[7,12,12,12]],0,[[7,6,12]],0,[[7,9,9,9]],0,[[7,6,9]],0,[[7,7,7,7]],0,[[7,6,7]],0,[[7,1,1,1]],0,[[7,6,1]],0,[[7,12,12,12,12]],0,[[7,6,12]],0,[[7,9,9,9,9]],0,[[7,6,9]],0,[[7,7,7,7,7]],0,[[7,6,7]],0,[[7,1,1,1,1]],0,[[7,6,1]],0,[[1,1,1]],0,[[7,6,8,12]],0,[[7,6,8,9]],0,[[7,6,8,12]],0,[[7,6,8,9]],0,[[7,6,8,12]],0,[[7,6,8,9]],0,[[7,6,8,12]],0,[[7,6,8,9]],0,[[7,6,8,12]],0,[[7,6,8,9]],0,[[7,6,8,12]],0,[[7,6,8,9]],0,[[7,6,8,12]],0,[[7,6,8,9]],0,[[7,6,8,12]],0,[[7,6,8,9]],0,[[7,6,8,12]],0,[[7,6,8,9]],0,[[2,6,1]],0,[2,8],0,[1,8],0,[1],0,[[1,10,1]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],0,[1],0,[[1,1,1]],0,[[1,1,7,2,8,1]],0,[[1,1,7,2,1]],0,[[1,1,7,2,1]],0,[[1,1,1]],0,[[1,1]],0,[[1,1,1,4,6]],0,[[1,1,6,1,4,6]],0,[[1,12]],0,[[1,12]],0,[[1,9]],0,[[1,9]],0,[[1,19]],0,[[1,19]],0,[[1,12,12]],0,[[1,12]],0,[[1,9,9]],0,[[1,9]],0,[[1,19,19]],0,[[1,19]],0,[[1,12,12,12]],0,[[1,12]],0,[[1,9,9,9]],0,[[1,9]],0,[[1,19,19,19]],0,[[1,19]],0,[[1,20]],0,[[1,7]],0,[[1,19]],0,[[1,17,17,17,17]],0,[[1,17]],0,[[1,1]],0,[[1,18]],0,[[1,20]],0,[[1,12,12,12,12]],0,[[1,12]],0,[[1,9,9,9,9]],0,[[1,9]],0,[[1,7]],0,[[1,19,19,19,19]],0,[[1,19]],0,[[1,17]],0,[[1,1]],0,[[1,18]],0,[[1,1]],0,[[1,1]],0,[[1,7,2,8,1]],0,[[1,7]],0,[[1,7]],0,[[1,1]],0,[[1,1]],0,[[1,7,7]],0,[[1,7]],0,[[1,1,1]],0,[[1,1]],0,[[1,7,7,7]],0,[[1,7]],0,[[1,1,1,1]],0,[[1,1]],0,[[1,20]],0,[[1,7,7,7,7]],0,[[1,7]],0,[[1,19]],0,[[1,17]],0,[[1,1,1,1,1]],0,[[1,1]],0,[[1,18]],0,[[1,7,2,1]],0,[[1,7,2,6,11]],0,[[1,12]],0,[[1,12]],0,[[1,12,12]],0,[[1,12]],0,[[1,12,12,12]],0,[[1,12]],0,[[1,12,12,12,12]],0,[[1,12]],0,[[1,7,2,1]],0,[[1,7,2,6,11]],0,[[1,2,8,1]],0,[[1,2,8,1]],0,[[1,2,8,1]],0,[[1,2,8,1]],0,[[1,2,8,1]],0,[[1,2,8,1]],0,[[1,2,8,1]],0,[[1,2,8,1]],0,[[1,7,2,8,6,11]],0,[[1,1]],0,[[2,1]],0,[[2,1]],0,[[2,1]],0,[[2,1]],0,[[2,1]],0,[[2,1]],0,[[7,7,6,6]],0,[[1,6,9]],0,[[1,9,9,9,9]],0,[[1,9]],0,0,0,[[13,10,14]],0,0,0,[[]],[[]],[[]],[[]],[21],[11,22],[[],23],[[],23],[[],24],0,[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],24],[[],24],[[],24]],"c":[],"p":[[6,"GLuint"],[6,"GLenum"],[6,"GLchar"],[6,"GLintptr"],[6,"GLsizeiptr"],[6,"GLsizei"],[6,"GLint"],[6,"GLboolean"],[6,"GLfloat"],[6,"GLbitfield"],[6,"c_void"],[6,"GLdouble"],[6,"GLsync"],[6,"GLuint64"],[6,"GLDEBUGPROC"],[6,"GLint64"],[6,"GLubyte"],[6,"GLushort"],[6,"GLshort"],[6,"GLbyte"],[8,"FnMut"],[3,"FnPtr"],[4,"Result"],[3,"TypeId"],[15,"bool"],[4,"__GLsync"],[4,"_cl_context"],[4,"_cl_event"]]},\
"glutin":{"doc":"The purpose of this library is to provide an OpenGL <code>Context</code>…","t":"ENDDIENDNENNNHDEENNNNNNNENNNNNNNDDNDGDENNENNNNNNGMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLMLLLMMLMMALLLLLLLLLLAAAMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLAMMLMAMLLLMLMMLLLMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMALLLLLLLLLLLLLLLLMMMMNNDDNNDDIEELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFMMMMMMENDNDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNSNNNNNNNNGNNNNNGNSNNNNNNNNNNNNNNNNNNNENDNNNNENNNNNENNNNNNNNNNNNNNNNNNNNNNNNNNENNNNNNNENNNNNNNNNNNNNNNNNNDNNNNNSNNNNNNNNNNNNNNDNENNENNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNSNGNNNNNNENNNNNNNNDNENNNNNNNENNNNNNNNNNNNENNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLMLLMLLLLLMLMLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNEEDDDDDSNNNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLIQKKAAIQKNNNNNNNGNIIGNINNNINNNIENENNNIIENEGLLLLLLKKKKLLLLLLLLLLLLLLLLLLLLLKKKKLFLLLLLLLLLLLLLLKKKKKKKKKKKKKKKKAKKKKDDDDNDDDDDDENLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMMLLLLLLLLLLLMALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLMLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALMLLMMMMLLLMLMMMRRRRRRRRRRRRRRRDRRRGRRRRRRRRRRRRRRRRRRRRRRRRRRRRRGRGRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRDRGRRRRRRRGRRRRRRRRGRRRDRRRRRRGRRRRRGRRRRRRRRRRRRRRRRRRRRRRRRRRRGRRRRGRRRRRRRRRRRRRRRRRRRRRRRRGRRRRRRRRRRRRRRRRRGGRRRRRRRRRRRRRRRRRDRRRRRRRRRRRRRRRRRRRGRRRRGRRRRRRRRRRRRRRRRRRRRRRRRRGRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRDRRRRRRRRRRRRGRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRGGRRRRRRRRRRRRRRRRRRRRRRGRGRRRRRRRRRRGRRGRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRGRRRRRRRRRRRRRRRGDDRRRRRRRRRGRRRRRRRGRRRRRRRRGRRRRRRRGRRRRRRRRRRRRRDRRRRRRRGRRRRRRRRGRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRMMMMMMMMMMMMMMMMMMMMGGDDMMMMMMMMMRDGGNMMMMMMMMMMMMMMMMDDMMMMMGDDMMMDMMDMMMMMDDDRDDMGMGGMMMMMMMMMMMMMMMMMMMMMMMDDMMMMMMMMMMMMMMMMMMMMMMMDDMDDDDMMMMMMMMMMMMMMMMMGMMMMMMMMMMMMMMMGMMMMMMMMMMMMMMMMMMMGMDTMEMDDDMDMRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRDDMMMMMMMMMGMMGMMDGGDGDDMMMMMMMMMMMMMMMMMMMMMMDMDMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMGGGGMMMMMMMMDDMMDRRDRRMMRRDDRRRRRDRRDRMDMRDDGGDGMMFGMMRRDRDRRDDRDDDRRGGMMMMMMMMMRRMRRRDRRMRRRRRGDDRDRGMGNNNDENENNGNNNNNNNNMRRDDRRRNGRRRRDTFRRRRRRDRRRRRRRRRRRRRRRRRRRRDRMMMDRRDRRDRRRRMMMFRRRRRRRRRRDRDRMMMMMMMRDDMRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRDMMDMGMMMDDDDRMMMMMMRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRDGGDDMDMMMMGGGMMMMMMMMMMMMMMMMRRMRMRMMDMDMMDMMMMMDDMMRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRMMMDMGDMMMMMMGMMMMMDMDGGMGGMMDMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMDDDDMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMGDDDDDDDDDDDDMMMMMMMMMMDMMMMDDDDMMMMMMMMMMMMMMMMMMMMMMMMMMMMMGMMMMMMMDMMMMMMMMMDMMMMMMMMMMMMMMMMMMMMDMMMMMMMMMDGMMMMMMMMMMMMDMMDMMMMMMMMMMMMDMMDDDMMDMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMDMMMMMMMMDGDRMMMMMMMRMMMMMMMMDDDMRMMDGMGGGRMMMMMMMMMMMMMMDMMMMRMRMDMDMDMMMMMDDMMMMRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRMMMMGMMMMMMMMMMMMMMMMMMMMMMMMMMMMDGMMMMMMGMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMDGMMMGGGMMGMMGMMGGGMMMMMMGMMMMMMMMMMMGMMMMGMMMMMMMMMMMMMGMMMMMMMMMMMGMMMMMRDRGRDRRMMMMMMMMMMMMMMRRMMMMMMMMMMMMMMMMMMMMMMMDMMMMRDRGMMMMMMGGGRRRDRGRGGMMMMMGRGRGMMGMMGGGGDRGRMMMMMMMMMMMMMMMMMMMMMMMMMMGGMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMRRRRRMRRGGDGRRMGEGRGGGMMMRRRRRRRRRRMMMMMMMMRGRGRRRRRGGGRGRGRDRMMMMRRRRRRRRMGGGGRGMMMMMMGGMMGMMMMMMMMMMMMMMMMMMMMGRDRGGGMMMMMMMMMDNDMMMMMMMMDMMMMDDDGMMGMMMMMMMMMGDGMMMMMMMMMMMMMMMMMDMMMMMMMMMMMMMMMMMMMDMMMRRRRRRDEDDEDEDDDDEEDDDEEDDDEDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDEMLMMMMMMMMMMMMMMMMMMMMMMMLMMMMMMMMMMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMLMMLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMLLMLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMLMMMMMMMMMMMMMMMMMMMMMMMMMMMMLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMEEMMMMMMMMGMMAMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMDNNRGNGNNNNNNESDENIDDEDEDNNDNDNNNDNNENNNNNNENNNNDNNNNRRENDMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMFMMLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLMFMMFLLLLLLLLLLLLLLLLLLLLAMMFALLLLLLLMLMMMMMMMLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMFMMMMDDLLLLLLLLLLLLLLLLLLNNNEDDNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNNNENNNNNNNNNEENNNNNNENNNNDNNNNNNNNNNNNNNNNNNNNEENNNDDDNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMM","n":["Api","Compatibility","Context","ContextBuilder","ContextCurrentState","ContextError","ContextLost","ContextWrapper","Core","CreationError","CreationErrors","Flush","FunctionUnavailable","GL_CORE","GlAttributes","GlProfile","GlRequest","GlThenGles","IoError","Latest","NoAvailablePixelFormat","NoBackendAvailable","NoError","None","NotCurrent","NotRobust","NotSupported","OpenGl","OpenGlEs","OpenGlVersionNotSupported","OsError","OsError","PixelFormat","PixelFormatRequirements","PlatformSpecific","PossiblyCurrent","RawContext","Rect","ReleaseBehavior","RobustLoseContextOnReset","RobustNoResetNotification","Robustness","RobustnessNotSupported","Specific","TryRobustLoseContextOnReset","TryRobustNoResetNotification","WebGl","Window","WindowedContext","alpha_bits","alpha_bits","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffer_age","build_headless","build_osmesa","build_raw_wayland_context","build_raw_x11_context","build_surfaceless","build_windowed","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","color_bits","color_bits","context","debug","default","default","default","depth_bits","depth_bits","deref","double_buffer","double_buffer","dpi","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","error","event","event_loop","float_color_buffer","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get_api","get_api","get_egl_display","get_pixel_format","get_proc_address","get_proc_address","gl_attr","hardware_accelerated","hardware_accelerated","height","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_current","is_current","make_current","make_current","make_not_current","make_not_current","map_sharing","monitor","multisampling","multisampling","new","pf_reqs","platform","profile","provide","provide","raw_handle","release_behavior","resize","robustness","sharing","source","split","split","srgb","srgb","stencil_bits","stencil_bits","stereoscopy","stereoscopy","swap_buffers","swap_buffers_with_damage","swap_buffers_with_damage_supported","to_gl_version","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","treat_as_current","treat_as_current","treat_as_not_current","treat_as_not_current","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","version","vsync","width","window","window","window","with_depth_buffer","with_double_buffer","with_gl","with_gl_debug_flag","with_gl_profile","with_gl_robustness","with_hardware_acceleration","with_multisampling","with_pixel_format","with_shared_lists","with_srgb","with_stencil_buffer","with_stereoscopy","with_vsync","x","y","opengl_version","opengles_version","Logical","Logical","LogicalPosition","LogicalSize","Physical","Physical","PhysicalPosition","PhysicalSize","Pixel","Position","Size","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast","cast","cast","cast","cast","clamp","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default","default","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_f64","from_logical","from_logical","from_physical","from_physical","hash","hash","hash","hash","height","height","into","into","into","into","into","into","new","new","new","new","new","new","to_logical","to_logical","to_logical","to_logical","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_physical","to_physical","to_physical","to_physical","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","validate_scale_factor","width","width","x","x","y","y","ExternalError","NotSupported","NotSupportedError","Os","OsError","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","into","into","into","provide","provide","provide","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","A","ALT","AbntC1","AbntC2","Added","Apostrophe","Apps","Asterisk","At","Ax","AxisId","AxisMotion","B","Back","Backslash","Button","ButtonId","C","CTRL","Calculator","Calibrated","Cancelled","Capital","Caret","CloseRequested","Colon","Comma","Commit","Compose","Convert","Copy","CursorEntered","CursorLeft","CursorMoved","Cut","D","Delete","Destroyed","DeviceEvent","DeviceEvent","DeviceId","Disabled","Down","DroppedFile","E","ElementState","Enabled","End","Ended","Equals","Escape","Event","F","F1","F10","F11","F12","F13","F14","F15","F16","F17","F18","F19","F2","F20","F21","F22","F23","F24","F3","F4","F5","F6","F7","F8","F9","Focused","Force","G","Grave","H","Home","HoveredFile","HoveredFileCancelled","I","Ime","Ime","Init","Insert","J","K","Kana","Kanji","Key","Key0","Key1","Key2","Key3","Key4","Key5","Key6","Key7","Key8","Key9","KeyboardInput","KeyboardInput","L","LAlt","LBracket","LControl","LOGO","LShift","LWin","Left","Left","LineDelta","LoopDestroyed","M","Mail","MainEventsCleared","MediaSelect","MediaStop","Middle","Minus","ModifiersChanged","ModifiersState","Motion","MouseButton","MouseInput","MouseMotion","MouseScrollDelta","MouseWheel","MouseWheel","Moved","Moved","Mute","MyComputer","N","NavigateBackward","NavigateForward","NewEvents","NextTrack","NoConvert","Normalized","Numlock","Numpad0","Numpad1","Numpad2","Numpad3","Numpad4","Numpad5","Numpad6","Numpad7","Numpad8","Numpad9","NumpadAdd","NumpadComma","NumpadDecimal","NumpadDivide","NumpadEnter","NumpadEquals","NumpadMultiply","NumpadSubtract","O","OEM102","Occluded","Other","P","PageDown","PageUp","Paste","Pause","Period","PixelDelta","PlayPause","Plus","Poll","Power","Preedit","Pressed","PrevTrack","Q","R","RAlt","RBracket","RControl","RShift","RWin","ReceivedCharacter","RedrawEventsCleared","RedrawRequested","Released","Removed","Resized","ResumeTimeReached","Resumed","Return","Right","Right","S","SHIFT","ScaleFactorChanged","ScanCode","Scroll","Semicolon","Slash","Sleep","Snapshot","Space","StartCause","Started","Stop","Suspended","Sysrq","T","Tab","Text","ThemeChanged","Touch","Touch","TouchPhase","TouchpadPressure","U","Underline","Unlabeled","Up","UserEvent","V","VirtualKeyCode","VolumeDown","VolumeUp","W","WaitCancelled","Wake","WebBack","WebFavorites","WebForward","WebHome","WebRefresh","WebSearch","WebStop","WindowEvent","WindowEvent","X","Y","Yen","Z","all","alt","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","complement","contains","ctrl","default","device_id","difference","dummy","empty","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","force","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","hash","hash","hash","hash","hash","hash","hash","hash","id","insert","intersection","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_all","is_empty","location","logo","map_nonuser_event","modifiers","normalized","not","partial_cmp","partial_cmp","partial_cmp","phase","remove","scancode","set","shift","state","sub","sub_assign","symmetric_difference","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_static","to_static","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","virtual_keycode","axis","button","codepoint","delta","delta","state","value","device_id","event","event","window_id","altitude_angle","force","max_possible_force","requested_resume","requested_resume","start","start","axis","button","delta","device_id","device_id","device_id","device_id","device_id","device_id","device_id","device_id","input","is_synthetic","modifiers","modifiers","modifiers","new_inner_size","phase","position","pressure","scale_factor","stage","state","value","Always","ControlFlow","DeviceEventFilter","EventLoop","EventLoopBuilder","EventLoopClosed","EventLoopProxy","EventLoopWindowTarget","Exit","ExitWithCode","Never","Poll","Unfocused","Wait","WaitUntil","available_monitors","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","create_proxy","default","default","default","default","deref","eq","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","hash","hash","into","into","into","into","into","into","into","is_wayland","is_x11","new","new","partial_cmp","primary_monitor","provide","raw_display_handle","run","run_return","send_event","set_device_event_filter","set_exit","set_exit_with_code","set_poll","set_wait","set_wait_until","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","wayland_display","with_any_thread","with_user_event","with_user_event","with_wayland","with_x11","MonitorHandle","VideoMode","bit_depth","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","cmp","eq","eq","equivalent","equivalent","fmt","fmt","fmt","from","from","hash","into","into","monitor","name","native_id","partial_cmp","partial_cmp","position","refresh_rate_millihertz","refresh_rate_millihertz","scale_factor","size","size","to_owned","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","video_modes","ContextTraitExt","Handle","get_egl_display","raw_handle","run_return","unix","EventLoopExtRunReturn","UserEvent","run_return","Combo","Dark","Desktop","Dialog","Dnd","Dock","DropdownMenu","EGLContext","Egl","EventLoopBuilderExtUnix","EventLoopWindowTargetExtUnix","GLXContext","Glx","HeadlessContextExt","LibraryOpenError","Light","Menu","MonitorHandleExtUnix","Normal","Notification","PopupMenu","RawContextExt","RawHandle","Splash","Theme","Toolbar","Tooltip","Utility","WindowBuilderExtUnix","WindowExtUnix","XNotSupported","XOpenDisplayFailed","XWindowType","XlibErrorHook","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build_osmesa","build_raw_wayland_context","build_raw_x11_context","build_surfaceless","clone","clone","clone","clone_into","clone_into","clone_into","default","eq","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","hash","into","into","into","is_ready","is_wayland","is_x11","native_id","provide","register_xlib_error_hook","source","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","wayland_display","wayland_display","wayland_set_csd_theme","wayland_surface","with_any_thread","with_base_size","with_gtk_theme_variant","with_name","with_override_redirect","with_resize_increments","with_wayland","with_wayland_csd_theme","with_x11","with_x11_screen","with_x11_visual","with_x11_window_type","x11","xcb_connection","xlib_display","xlib_screen_id","xlib_window","DeviceId","EventLoop","EventLoopProxy","EventLoopWindowTarget","LibraryOpenError","MonitorHandle","UnownedWindow","VideoMode","Window","XConnection","XError","XNotSupported","XOpenDisplayFailed","alloc_class_hint","alloc_size_hints","alloc_wm_hints","available_monitors","available_monitors","bit_depth","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","change_property","check_errors","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","create_proxy","current_monitor","cursor_cache","deref","description","display","drag_window","drop","drop","dummy","dummy","eq","eq","eq","equivalent","equivalent","equivalent","error_code","ffi","flush_requests","fmt","fmt","fmt","fmt","fmt","fmt","focus_window","from","from","from","from","from","from","from","from","from","from","fullscreen","get_atom","get_atom_unchecked","get_atoms","get_crtc_mode","get_frame_extents_heuristic","get_geometry","get_monitor_for_window","get_motif_hints","get_normal_hints","get_output_info","get_property","get_wm_hints","get_xft_dpi","hash","hash","hash","id","ignore_error","inner_position","inner_size","into","into","into","into","into","into","into","into","into","into","is_decorated","is_maximized","is_resizable","is_top_level","is_visible","keycode_to_keysym","latest_error","lookup_keysym","lookup_utf8","minor_code","monitor","name","native_identifier","new","new","outer_position","outer_size","partial_cmp","partial_cmp","position","primary_monitor","primary_monitor","provide","query_keymap","query_pointer","raw_display_handle","raw_display_handle","raw_window_handle","refresh_rate_millihertz","refresh_rate_millihertz","request_code","request_redraw","request_user_attention","run","run_return","scale_factor","scale_factor","select_xinput_events","select_xkb_events","select_xrandr_input","send_client_msg","send_event","send_event","set_always_on_top","set_crtc_config","set_cursor_grab","set_cursor_hittest","set_cursor_icon","set_cursor_icon","set_cursor_position","set_cursor_position_physical","set_cursor_visible","set_decorations","set_device_event_filter","set_fullscreen","set_ime_allowed","set_ime_position","set_inner_size","set_max_inner_size","set_maximized","set_min_inner_size","set_minimized","set_motif_hints","set_normal_hints","set_outer_position","set_resizable","set_title","set_visible","set_window_icon","set_wm_hints","shared_state","size","size","sync_with_server","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","translate_coords","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update_cached_wm_info","update_device_event_filter","util","video_modes","x11_fd","x_connection","xcb_connection","xconn","xcursor","xinput2","xlib","xlib_display","xlib_screen_id","xlib_window","xlib_xcb","xlib_xconnection","xrandr","xrandr_1_5","xrender","Above","AllHints","AllTemporary","AllValues","AllocAll","AllocNone","AllowExposures","AlreadyGrabbed","Always","AnyButton","AnyKey","AnyModifier","AnyPropertyType","ArcChord","ArcPieSlice","AspectRatio","AsyncBoth","AsyncKeyboard","AsyncPointer","Atom","AutoRepeatModeDefault","AutoRepeatModeOff","AutoRepeatModeOn","BadAccess","BadAlloc","BadAtom","BadColor","BadCursor","BadDrawable","BadFont","BadGC","BadGlyph","BadGlyphSet","BadIDChoice","BadImplementation","BadLength","BadMatch","BadName","BadPictFormat","BadPictOp","BadPicture","BadPixmap","BadRRCrtc","BadRRMode","BadRROutput","BadRRProvider","BadRequest","BadValue","BadWindow","BarrierEventID","Below","Bool","BottomIf","Button1","Button1Mask","Button1MotionMask","Button2","Button2Mask","Button2MotionMask","Button3","Button3Mask","Button3MotionMask","Button4","Button4Mask","Button4MotionMask","Button5","Button5Mask","Button5MotionMask","ButtonMotionMask","ButtonPress","ButtonPressMask","ButtonRelease","ButtonReleaseMask","CPAlphaMap","CPAlphaXOrigin","CPAlphaYOrigin","CPClipMask","CPClipXOrigin","CPClipYOrigin","CPComponentAlpha","CPDither","CPGraphicsExposure","CPLastBit","CPPolyEdge","CPPolyMode","CPRepeat","CPSubwindowMode","CWBackPixel","CWBackPixmap","CWBackingPixel","CWBackingPlanes","CWBackingStore","CWBitGravity","CWBorderPixel","CWBorderPixmap","CWBorderWidth","CWColormap","CWCursor","CWDontPropagate","CWEventMask","CWHeight","CWOverrideRedirect","CWSaveUnder","CWSibling","CWStackMode","CWWidth","CWWinGravity","CWX","CWY","CapButt","CapNotLast","CapProjecting","CapRound","CenterGravity","CirculateNotify","CirculateRequest","ClientMessage","ClientMessageData","ClipByChildren","Colormap","ColormapChangeMask","ColormapInstalled","ColormapNotify","ColormapUninstalled","Complex","ConfigureNotify","ConfigureRequest","Connection","ControlMapIndex","ControlMask","Convex","CoordModeOrigin","CoordModePrevious","CopyFromParent","CreateNotify","CurrentTime","Cursor","CursorShape","DefaultBlanking","DefaultExposures","Depth","DestroyAll","DestroyNotify","DirectColor","DisableAccess","DisableScreenInterval","DisableScreenSaver","Display","DoBlue","DoGreen","DoRed","DontAllowExposures","DontPreferBlanking","Drawable","EastGravity","EnableAccess","EnterNotify","EnterWindowMask","EvenOddRule","Expose","ExposureMask","False","FamilyChaos","FamilyDECnet","FamilyInternet","FamilyInternet6","FamilyServerInterpreted","FillOpaqueStippled","FillSolid","FillStippled","FillTiled","FilterBest","FilterBilinear","FilterConvolution","FilterFast","FilterGood","FilterNearest","FirstExtensionError","FocusChangeMask","FocusIn","FocusOut","Font","FontChange","FontLeftToRight","FontRightToLeft","ForgetGravity","GC","GCArcMode","GCBackground","GCCapStyle","GCClipMask","GCClipXOrigin","GCClipYOrigin","GCDashList","GCDashOffset","GCFillRule","GCFillStyle","GCFont","GCForeground","GCFunction","GCGraphicsExposures","GCJoinStyle","GCLastBit","GCLineStyle","GCLineWidth","GCPlaneMask","GCStipple","GCSubwindowMode","GCTile","GCTileStipXOrigin","GCTileStipYOrigin","GContext","GXand","GXandInverted","GXandReverse","GXclear","GXcopy","GXcopyInverted","GXequiv","GXinvert","GXnand","GXnoop","GXnor","GXor","GXorInverted","GXorReverse","GXset","GXxor","GenericEvent","Glyph","GlyphSet","GrabFrozen","GrabInvalidTime","GrabModeAsync","GrabModeSync","GrabNotViewable","GrabSuccess","GraphicsExpose","GravityNotify","GrayScale","HeightValue","HostDelete","HostInsert","IconMaskHint","IconPixmapHint","IconPositionHint","IconWindowHint","IconicState","ImageFns","IncludeInferiors","InputFocus","InputHint","InputOnly","InputOutput","IsUnmapped","IsUnviewable","IsViewable","JoinBevel","JoinMiter","JoinRound","KBAutoRepeatMode","KBBellDuration","KBBellPercent","KBBellPitch","KBKey","KBKeyClickPercent","KBLed","KBLedMode","KeyCode","KeyPress","KeyPressMask","KeyRelease","KeyReleaseMask","KeySym","KeymapNotify","KeymapStateMask","LASTEvent","LSBFirst","LastExtensionError","LeaveNotify","LeaveWindowMask","LedModeOff","LedModeOn","LineDoubleDash","LineOnOffDash","LineSolid","LockMapIndex","LockMask","LowerHighest","MSBFirst","MapNotify","MapRequest","MappingBusy","MappingFailed","MappingKeyboard","MappingModifier","MappingNotify","MappingPointer","MappingSuccess","Mask","Mod1MapIndex","Mod1Mask","Mod2MapIndex","Mod2Mask","Mod3MapIndex","Mod3Mask","Mod4MapIndex","Mod4Mask","Mod5MapIndex","Mod5Mask","MotionNotify","NoEventMask","NoExpose","NoSymbol","NoValue","Nonconvex","NorthEastGravity","NorthGravity","NorthWestGravity","NotUseful","NotifyAncestor","NotifyDetailNone","NotifyGrab","NotifyHint","NotifyInferior","NotifyNonlinear","NotifyNonlinearVirtual","NotifyNormal","NotifyPointer","NotifyPointerRoot","NotifyUngrab","NotifyVirtual","NotifyWhileGrabbed","OpenError","Opposite","OwnerGrabButtonMask","PAllHints","PAspect","PBaseSize","PMaxSize","PMinSize","PPosition","PResizeInc","PSize","PWinGravity","ParentRelative","PictFormat","PictFormatAlpha","PictFormatAlphaMask","PictFormatBlue","PictFormatBlueMask","PictFormatColormap","PictFormatDepth","PictFormatGreen","PictFormatGreenMask","PictFormatID","PictFormatRed","PictFormatRedMask","PictFormatType","PictOpAdd","PictOpAtop","PictOpAtopReverse","PictOpBlendMaximum","PictOpBlendMinimum","PictOpClear","PictOpColorBurn","PictOpColorDodge","PictOpConjointAtop","PictOpConjointAtopReverse","PictOpConjointClear","PictOpConjointDst","PictOpConjointIn","PictOpConjointInReverse","PictOpConjointMaximum","PictOpConjointMinimum","PictOpConjointOut","PictOpConjointOutReverse","PictOpConjointOver","PictOpConjointOverReverse","PictOpConjointSrc","PictOpConjointXor","PictOpDarken","PictOpDifference","PictOpDisjointAtop","PictOpDisjointAtopReverse","PictOpDisjointClear","PictOpDisjointDst","PictOpDisjointIn","PictOpDisjointInReverse","PictOpDisjointMaximum","PictOpDisjointMinimum","PictOpDisjointOut","PictOpDisjointOutReverse","PictOpDisjointOver","PictOpDisjointOverReverse","PictOpDisjointSrc","PictOpDisjointXor","PictOpDst","PictOpExclusion","PictOpHSLColor","PictOpHSLHue","PictOpHSLLuminosity","PictOpHSLSaturation","PictOpHardLight","PictOpIn","PictOpInReverse","PictOpLighten","PictOpMaximum","PictOpMinimum","PictOpMultiply","PictOpOut","PictOpOutReverse","PictOpOver","PictOpOverReverse","PictOpOverlay","PictOpSaturate","PictOpScreen","PictOpSoftLight","PictOpSrc","PictOpXor","PictStandardA1","PictStandardA4","PictStandardA8","PictStandardARGB32","PictStandardRGB24","PictTypeDirect","PictTypeIndexed","Picture","Pixmap","PlaceOnBottom","PlaceOnTop","PointerMotionHintMask","PointerMotionMask","PointerRoot","PointerWindow","PolyEdgeSharp","PolyEdgeSmooth","PolyModeImprecise","PolyModePrecise","PreferBlanking","PropModeAppend","PropModePrepend","PropModeReplace","PropertyChangeMask","PropertyDelete","PropertyNewValue","PropertyNotify","PseudoColor","RANDR_MAJOR","RANDR_MINOR","RANDR_NAME","RRCrtc","RRCrtcChangeNotifyMask","RRMode","RRNotify","RRNotify_CrtcChange","RRNotify_OutputChange","RRNotify_OutputProperty","RRNotify_ProviderChange","RRNotify_ProviderProperty","RRNotify_ResourceChange","RRNumberErrors","RRNumberEvents","RRNumberRequests","RROutput","RROutputChangeNotifyMask","RROutputPropertyNotifyMask","RRProvider","RRProviderChangeNotifyMask","RRProviderPropertyNotifyMask","RRResourceChangeNotifyMask","RRScreenChangeNotify","RRScreenChangeNotifyMask","RRSetConfigFailed","RRSetConfigInvalidConfigTime","RRSetConfigInvalidTime","RRSetConfigSuccess","RRTransformProjective","RRTransformScaleDown","RRTransformScaleUp","RRTransformUnit","RR_BCast","RR_CSync","RR_CSyncNegative","RR_CSyncPositive","RR_Capability_None","RR_Capability_SinkOffload","RR_Capability_SinkOutput","RR_Capability_SourceOffload","RR_Capability_SourceOutput","RR_ClockDivideBy2","RR_Connected","RR_Disconnected","RR_DoubleClock","RR_DoubleScan","RR_HSkewPresent","RR_HSyncNegative","RR_HSyncPositive","RR_Interlace","RR_PROPERTY_BACKLIGHT","RR_PROPERTY_BORDER","RR_PROPERTY_BORDER_DIMENSIONS","RR_PROPERTY_CLONE_LIST","RR_PROPERTY_COMPATIBILITY_LIST","RR_PROPERTY_CONNECTOR_NUMBER","RR_PROPERTY_CONNECTOR_TYPE","RR_PROPERTY_GUID","RR_PROPERTY_RANDR_EDID","RR_PROPERTY_RANDR_TILE","RR_PROPERTY_SIGNAL_FORMAT","RR_PROPERTY_SIGNAL_PROPERTIES","RR_PixelMultiplex","RR_Reflect_X","RR_Reflect_Y","RR_Rotate_0","RR_Rotate_180","RR_Rotate_270","RR_Rotate_90","RR_UnknownConnection","RR_VSyncNegative","RR_VSyncPositive","RaiseLowest","Region","RenderNumberErrors","ReparentNotify","RepeatNone","RepeatNormal","RepeatPad","RepeatReflect","ReplayKeyboard","ReplayPointer","ResizeRedirectMask","ResizeRequest","RetainPermanent","RetainTemporary","RevertToNone","RevertToParent","RevertToPointerRoot","Rotation","Screen","ScreenFormat","ScreenSaverActive","ScreenSaverReset","SelectionClear","SelectionNotify","SelectionRequest","SetModeDelete","SetModeInsert","ShiftMapIndex","ShiftMask","SizeID","SouthEastGravity","SouthGravity","SouthWestGravity","StateHint","StaticColor","StaticGravity","StaticGray","Status","StippleShape","StructureNotifyMask","SubPixelHorizontalBGR","SubPixelHorizontalRGB","SubPixelNone","SubPixelUnknown","SubPixelVerticalBGR","SubPixelVerticalRGB","SubpixelOrder","SubstructureNotifyMask","SubstructureRedirectMask","Success","SyncBoth","SyncKeyboard","SyncPointer","TileShape","Time","TopIf","True","TrueColor","USPosition","USSize","UnmapGravity","UnmapNotify","Unsorted","VisibilityChangeMask","VisibilityFullyObscured","VisibilityNotify","VisibilityPartiallyObscured","VisibilityUnobscured","Visual","VisualAllMask","VisualBitsPerRGBMask","VisualBlueMaskMask","VisualClassMask","VisualColormapSizeMask","VisualDepthMask","VisualGreenMaskMask","VisualID","VisualIDMask","VisualNoMask","VisualRedMaskMask","VisualScreenMask","WestGravity","WhenMapped","WidthValue","WindingRule","Window","WindowGroupHint","XA_ARC","XA_ATOM","XA_BITMAP","XA_CAP_HEIGHT","XA_CARDINAL","XA_COLORMAP","XA_COPYRIGHT","XA_CURSOR","XA_CUT_BUFFER0","XA_CUT_BUFFER1","XA_CUT_BUFFER2","XA_CUT_BUFFER3","XA_CUT_BUFFER4","XA_CUT_BUFFER5","XA_CUT_BUFFER6","XA_CUT_BUFFER7","XA_DRAWABLE","XA_END_SPACE","XA_FAMILY_NAME","XA_FONT","XA_FONT_NAME","XA_FULL_NAME","XA_INTEGER","XA_ITALIC_ANGLE","XA_MAX_SPACE","XA_MIN_SPACE","XA_NORM_SPACE","XA_NOTICE","XA_PIXMAP","XA_POINT","XA_POINT_SIZE","XA_PRIMARY","XA_QUAD_WIDTH","XA_RECTANGLE","XA_RESOLUTION","XA_RESOURCE_MANAGER","XA_RGB_BEST_MAP","XA_RGB_BLUE_MAP","XA_RGB_COLOR_MAP","XA_RGB_DEFAULT_MAP","XA_RGB_GRAY_MAP","XA_RGB_GREEN_MAP","XA_RGB_RED_MAP","XA_SECONDARY","XA_STRIKEOUT_ASCENT","XA_STRIKEOUT_DESCENT","XA_STRING","XA_SUBSCRIPT_X","XA_SUBSCRIPT_Y","XA_SUPERSCRIPT_X","XA_SUPERSCRIPT_Y","XA_UNDERLINE_POSITION","XA_UNDERLINE_THICKNESS","XA_VISUALID","XA_WEIGHT","XA_WINDOW","XA_WM_CLASS","XA_WM_CLIENT_MACHINE","XA_WM_COMMAND","XA_WM_HINTS","XA_WM_ICON_NAME","XA_WM_ICON_SIZE","XA_WM_NAME","XA_WM_NORMAL_HINTS","XA_WM_SIZE_HINTS","XA_WM_TRANSIENT_FOR","XA_WM_ZOOM_HINTS","XA_X_HEIGHT","XActivateScreenSaver","XAddConnectionWatch","XAddExtension","XAddHost","XAddHosts","XAddPixel","XAddToExtensionList","XAddToSaveSet","XAllPlanes","XAllocClassHint","XAllocColor","XAllocColorCells","XAllocColorPlanes","XAllocIconSize","XAllocNamedColor","XAllocSizeHints","XAllocStandardColormap","XAllocWMHints","XAllowDeviceEvents","XAllowEvents","XAnimCursor","XAnyClassPtr","XAnyEvent","XArc","XAutoRepeatOff","XAutoRepeatOn","XBaseFontNameListOfFontSet","XBell","XBitmapBitOrder","XBitmapPad","XBitmapUnit","XBlackPixel","XBlackPixelOfScreen","XBufferOverflow","XButtonEvent","XButtonPressedEvent","XButtonReleasedEvent","XCBOwnsEventQueue","XCellsOfScreen","XChangeActivePointerGrab","XChangeDeviceControl","XChangeDeviceDontPropagateList","XChangeDeviceKeyMapping","XChangeDeviceProperty","XChangeFeedbackControl","XChangeGC","XChangeKeyboardControl","XChangeKeyboardDevice","XChangeKeyboardMapping","XChangePointerControl","XChangePointerDevice","XChangeProperty","XChangeSaveSet","XChangeWindowAttributes","XChar2b","XCharStruct","XCheckIfEvent","XCheckMaskEvent","XCheckTypedEvent","XCheckTypedWindowEvent","XCheckWindowEvent","XCircle","XCirculateEvent","XCirculateRequestEvent","XCirculateSubwindows","XCirculateSubwindowsDown","XCirculateSubwindowsUp","XClassHint","XClearArea","XClearWindow","XClientMessageEvent","XClipBox","XCloseDevice","XCloseDisplay","XCloseIM","XCloseOM","XColor","XColormapEvent","XComposeStatus","XCompoundTextStyle","XConfigureEvent","XConfigureRequestEvent","XConfigureWindow","XConicalGradient","XConnectionNumber","XConnectionWatchProc","XContext","XContextDependentDrawing","XContextualDrawing","XConvertCase","XConvertSelection","XCopyArea","XCopyColormapAndFree","XCopyGC","XCopyPlane","XCreateBitmapFromData","XCreateColormap","XCreateFontCursor","XCreateFontSet","XCreateGC","XCreateGlyphCursor","XCreateIC","XCreateImage","XCreateOC","XCreatePixmap","XCreatePixmapCursor","XCreatePixmapFromBitmapData","XCreateRegion","XCreateSimpleWindow","XCreateWindow","XCreateWindowEvent","XCrossingEvent","XDefaultColormap","XDefaultColormapOfScreen","XDefaultDepth","XDefaultDepthOfScreen","XDefaultGC","XDefaultGCOfScreen","XDefaultRootWindow","XDefaultScreen","XDefaultScreenOfDisplay","XDefaultString","XDefaultVisual","XDefaultVisualOfScreen","XDefineCursor","XDeleteContext","XDeleteDeviceProperty","XDeleteModifiermapEntry","XDeleteProperty","XDestroyIC","XDestroyImage","XDestroyOC","XDestroyRegion","XDestroySubwindows","XDestroyWindow","XDestroyWindowEvent","XDevice","XDeviceBell","XDeviceControl","XDeviceInfo","XDeviceState","XDeviceTimeCoord","XDirectionalDependentDrawing","XDisableAccessControl","XDisplayCells","XDisplayHeight","XDisplayHeightMM","XDisplayKeycodes","XDisplayMotionBufferSize","XDisplayName","XDisplayOfIM","XDisplayOfOM","XDisplayOfScreen","XDisplayPlanes","XDisplayString","XDisplayWidth","XDisplayWidthMM","XDoesBackingStore","XDoesSaveUnders","XDouble","XDrawArc","XDrawArcs","XDrawImageString","XDrawImageString16","XDrawLine","XDrawLines","XDrawPoint","XDrawPoints","XDrawRectangle","XDrawRectangles","XDrawSegments","XDrawString","XDrawString16","XDrawText","XDrawText16","XEDataObject","XEHeadOfExtensionList","XESetBeforeFlush","XESetCloseDisplay","XESetCopyEventCookie","XESetCopyGC","XESetCreateFont","XESetCreateGC","XESetError","XESetErrorString","XESetEventToWire","XESetFlushGC","XESetFreeFont","XESetFreeGC","XESetPrintErrorValues","XESetWireToError","XESetWireToEvent","XESetWireToEventCookie","XEmptyRegion","XEnableAccessControl","XEnterWindowEvent","XEqualRegion","XErrorEvent","XEvent","XEventMaskOfScreen","XEventQueueOwner","XEventsQueued","XExposeEvent","XExtCodes","XExtData","XExtendedMaxRequestSize","XExtensionVersion","XExtentsOfFontSet","XF86XK_AddFavorite","XF86XK_ApplicationLeft","XF86XK_ApplicationRight","XF86XK_AudioCycleTrack","XF86XK_AudioForward","XF86XK_AudioLowerVolume","XF86XK_AudioMedia","XF86XK_AudioMicMute","XF86XK_AudioMute","XF86XK_AudioNext","XF86XK_AudioPause","XF86XK_AudioPlay","XF86XK_AudioPrev","XF86XK_AudioRaiseVolume","XF86XK_AudioRandomPlay","XF86XK_AudioRecord","XF86XK_AudioRepeat","XF86XK_AudioRewind","XF86XK_AudioStop","XF86XK_Away","XF86XK_Back","XF86XK_BackForward","XF86XK_Battery","XF86XK_Blue","XF86XK_Bluetooth","XF86XK_Book","XF86XK_BrightnessAdjust","XF86XK_CD","XF86XK_Calculater","XF86XK_Calculator","XF86XK_Calendar","XF86XK_Clear","XF86XK_ClearGrab","XF86XK_Close","XF86XK_Community","XF86XK_ContrastAdjust","XF86XK_Copy","XF86XK_Cut","XF86XK_CycleAngle","XF86XK_DOS","XF86XK_Display","XF86XK_Documents","XF86XK_Eject","XF86XK_Excel","XF86XK_Explorer","XF86XK_Favorites","XF86XK_Finance","XF86XK_Forward","XF86XK_FrameBack","XF86XK_FrameForward","XF86XK_Game","XF86XK_Go","XF86XK_Green","XF86XK_Hibernate","XF86XK_History","XF86XK_HomePage","XF86XK_HotLinks","XF86XK_KbdBrightnessDown","XF86XK_KbdBrightnessUp","XF86XK_KbdLightOnOff","XF86XK_Launch0","XF86XK_Launch1","XF86XK_Launch2","XF86XK_Launch3","XF86XK_Launch4","XF86XK_Launch5","XF86XK_Launch6","XF86XK_Launch7","XF86XK_Launch8","XF86XK_Launch9","XF86XK_LaunchA","XF86XK_LaunchB","XF86XK_LaunchC","XF86XK_LaunchD","XF86XK_LaunchE","XF86XK_LaunchF","XF86XK_LightBulb","XF86XK_LogGrabInfo","XF86XK_LogOff","XF86XK_LogWindowTree","XF86XK_Mail","XF86XK_MailForward","XF86XK_Market","XF86XK_Meeting","XF86XK_Memo","XF86XK_MenuKB","XF86XK_MenuPB","XF86XK_Messenger","XF86XK_ModeLock","XF86XK_MonBrightnessDown","XF86XK_MonBrightnessUp","XF86XK_Music","XF86XK_MyComputer","XF86XK_MySites","XF86XK_New","XF86XK_News","XF86XK_Next_VMode","XF86XK_OfficeHome","XF86XK_Open","XF86XK_OpenURL","XF86XK_Option","XF86XK_Paste","XF86XK_Phone","XF86XK_Pictures","XF86XK_PowerDown","XF86XK_PowerOff","XF86XK_Prev_VMode","XF86XK_Q","XF86XK_Red","XF86XK_Refresh","XF86XK_Reload","XF86XK_Reply","XF86XK_RockerDown","XF86XK_RockerEnter","XF86XK_RockerUp","XF86XK_RotateWindows","XF86XK_RotationKB","XF86XK_RotationPB","XF86XK_Save","XF86XK_ScreenSaver","XF86XK_ScrollClick","XF86XK_ScrollDown","XF86XK_ScrollUp","XF86XK_Search","XF86XK_Select","XF86XK_Send","XF86XK_Shop","XF86XK_Sleep","XF86XK_Spell","XF86XK_SplitScreen","XF86XK_Standby","XF86XK_Start","XF86XK_Stop","XF86XK_Subtitle","XF86XK_Support","XF86XK_Suspend","XF86XK_Switch_VT_1","XF86XK_Switch_VT_10","XF86XK_Switch_VT_11","XF86XK_Switch_VT_12","XF86XK_Switch_VT_2","XF86XK_Switch_VT_3","XF86XK_Switch_VT_4","XF86XK_Switch_VT_5","XF86XK_Switch_VT_6","XF86XK_Switch_VT_7","XF86XK_Switch_VT_8","XF86XK_Switch_VT_9","XF86XK_TaskPane","XF86XK_Terminal","XF86XK_Time","XF86XK_ToDoList","XF86XK_Tools","XF86XK_TopMenu","XF86XK_TouchpadOff","XF86XK_TouchpadOn","XF86XK_TouchpadToggle","XF86XK_Travel","XF86XK_UWB","XF86XK_Ungrab","XF86XK_User1KB","XF86XK_User2KB","XF86XK_UserPB","XF86XK_VendorHome","XF86XK_Video","XF86XK_View","XF86XK_WLAN","XF86XK_WWW","XF86XK_WakeUp","XF86XK_WebCam","XF86XK_WheelButton","XF86XK_Word","XF86XK_Xfer","XF86XK_Yellow","XF86XK_ZoomIn","XF86XK_ZoomOut","XF86XK_iTouch","XFeedbackControl","XFeedbackState","XFetchBuffer","XFetchBytes","XFetchName","XFillArc","XFillArcs","XFillPolygon","XFillRectangle","XFillRectangles","XFilterEvent","XFilters","XFindContext","XFindOnExtensionList","XFixed","XFlush","XFlushGC","XFocusChangeEvent","XFocusInEvent","XFocusOutEvent","XFontProp","XFontSet","XFontSetExtents","XFontStruct","XFontsOfFontSet","XForceScreenSaver","XFree","XFreeColormap","XFreeColors","XFreeCursor","XFreeDeviceControl","XFreeDeviceList","XFreeDeviceMotionEvents","XFreeDeviceState","XFreeEventData","XFreeExtensionList","XFreeFeedbackList","XFreeFont","XFreeFontInfo","XFreeFontNames","XFreeFontPath","XFreeFontSet","XFreeGC","XFreeModifiermap","XFreePixmap","XFreeStringList","XGCValues","XGContextFromGC","XGenericEventCookie","XGeometry","XGetAtomName","XGetAtomNames","XGetClassHint","XGetCommand","XGetDefault","XGetDeviceButtonMapping","XGetDeviceControl","XGetDeviceDontPropagateList","XGetDeviceFocus","XGetDeviceKeyMapping","XGetDeviceModifierMapping","XGetDeviceMotionEvents","XGetDeviceProperty","XGetErrorDatabaseText","XGetErrorText","XGetEventData","XGetExtensionVersion","XGetFeedbackControl","XGetFontPath","XGetFontProperty","XGetGCValues","XGetGeometry","XGetICValues","XGetIMValues","XGetIconName","XGetIconSizes","XGetImage","XGetInputFocus","XGetKeyboardControl","XGetKeyboardMapping","XGetModifierMapping","XGetMotionEvents","XGetNormalHints","XGetOCValues","XGetOMValues","XGetPixel","XGetPointerControl","XGetPointerMapping","XGetRGBColormaps","XGetScreenSaver","XGetSelectedExtensionEvents","XGetSelectionOwner","XGetSizeHints","XGetStandardColormap","XGetSubImage","XGetTextProperty","XGetTransientForHint","XGetVisualInfo","XGetWMClientMachine","XGetWMColormapWindows","XGetWMHints","XGetWMIconName","XGetWMName","XGetWMNormalHints","XGetWMProtocols","XGetWMSizeHints","XGetWindowAttributes","XGetWindowProperty","XGetXCBConnection","XGetZoomHints","XGlyphElt16","XGlyphElt32","XGlyphElt8","XGlyphInfo","XGrabButton","XGrabDevice","XGrabDeviceButton","XGrabDeviceKey","XGrabKey","XGrabKeyboard","XGrabPointer","XGrabServer","XGraphicsExposeEvent","XGravityEvent","XHeightMMOfScreen","XHeightOfScreen","XHostAddress","XIAcceptTouch","XIAddMaster","XIAddMasterInfo","XIAllDevices","XIAllMasterDevices","XIAllowEvents","XIAllowTouchEvents","XIAlreadyGrabbed","XIAnyButton","XIAnyClassInfo","XIAnyHierarchyChangeInfo","XIAnyKeycode","XIAsyncDevice","XIAsyncPair","XIAsyncPairedDevice","XIAttachSlave","XIAttachSlaveInfo","XIAttachToMaster","XIBarrierDeviceIsGrabbed","XIBarrierEvent","XIBarrierPointerReleased","XIBarrierReleasePointer","XIBarrierReleasePointerInfo","XIBarrierReleasePointers","XIButtonClass","XIButtonClassInfo","XIButtonState","XIC","XICCEncodingStyle","XICCallback","XICProc","XIChangeHierarchy","XIChangeProperty","XIClearMask","XID","XIDefineCursor","XIDeleteProperty","XIDependentTouch","XIDetachSlave","XIDetachSlaveInfo","XIDeviceChange","XIDeviceChangedEvent","XIDeviceDisabled","XIDeviceEnabled","XIDeviceEvent","XIDeviceInfo","XIDirectTouch","XIEnterEvent","XIEvent","XIEventMask","XIFloating","XIFloatingSlave","XIFocusInEvent","XIFocusOutEvent","XIFreeDeviceInfo","XIGetClientPointer","XIGetFocus","XIGetProperty","XIGetSelectedEvents","XIGrabButton","XIGrabDevice","XIGrabEnter","XIGrabFocusIn","XIGrabFrozen","XIGrabInvalidTime","XIGrabKeycode","XIGrabModeAsync","XIGrabModeSync","XIGrabModeTouch","XIGrabModifiers","XIGrabNotViewable","XIGrabSuccess","XIGrabTouchBegin","XIGrabtypeButton","XIGrabtypeEnter","XIGrabtypeFocusIn","XIGrabtypeKeycode","XIGrabtypeTouchBegin","XIGroupState","XIHierarchyEvent","XIHierarchyInfo","XIKeyClass","XIKeyClassInfo","XIKeyRepeat","XILeaveEvent","XIListProperties","XIM","XIMAbsolutePosition","XIMBackwardChar","XIMBackwardWord","XIMCallback","XIMCaretDirection","XIMCaretDown","XIMCaretStyle","XIMCaretUp","XIMDontChange","XIMFeedback","XIMForwardChar","XIMForwardWord","XIMIsInvisible","XIMIsPrimary","XIMIsSecondary","XIMLineEnd","XIMLineStart","XIMNextLine","XIMOfIC","XIMPreeditArea","XIMPreeditCallbacks","XIMPreeditCaretCallbackStruct","XIMPreeditDrawCallbackStruct","XIMPreeditNone","XIMPreeditNothing","XIMPreeditPosition","XIMPreviousLine","XIMProc","XIMStatusArea","XIMStatusCallbacks","XIMStatusNone","XIMStatusNothing","XIMText","XIMTextString","XIMaskIsSet","XIMasterAdded","XIMasterKeyboard","XIMasterPointer","XIMasterRemoved","XIModeAbsolute","XIModeRelative","XIModifierState","XINotifyAncestor","XINotifyDetailNone","XINotifyGrab","XINotifyInferior","XINotifyNonlinear","XINotifyNonlinearVirtual","XINotifyNormal","XINotifyPassiveGrab","XINotifyPassiveUngrab","XINotifyPointer","XINotifyPointerRoot","XINotifyUngrab","XINotifyVirtual","XINotifyWhileGrabbed","XIPointerEmulated","XIPropModeAppend","XIPropModePrepend","XIPropModeReplace","XIPropertyCreated","XIPropertyDeleted","XIPropertyEvent","XIPropertyModified","XIQueryDevice","XIQueryPointer","XIQueryVersion","XIRawEvent","XIRejectTouch","XIRemoveMaster","XIRemoveMasterInfo","XIReplayDevice","XIScrollClass","XIScrollClassInfo","XIScrollFlagNoEmulation","XIScrollFlagPreferred","XIScrollTypeHorizontal","XIScrollTypeVertical","XISelectEvents","XISetClientPointer","XISetFocus","XISetMask","XISlaveAdded","XISlaveAttached","XISlaveDetached","XISlaveKeyboard","XISlavePointer","XISlaveRemoved","XISlaveSwitch","XISyncDevice","XISyncPair","XITouchClass","XITouchClassInfo","XITouchEmulatingPointer","XITouchOwnershipEvent","XITouchPendingEnd","XIUndefineCursor","XIUngrabButton","XIUngrabDevice","XIUngrabEnter","XIUngrabFocusIn","XIUngrabKeycode","XIUngrabTouchBegin","XIValuatorClass","XIValuatorClassInfo","XIValuatorState","XIWarpPointer","XI_2_Major","XI_2_Minor","XI_BarrierHit","XI_BarrierHitMask","XI_BarrierLeave","XI_BarrierLeaveMask","XI_ButtonPress","XI_ButtonPressMask","XI_ButtonRelease","XI_ButtonReleaseMask","XI_DeviceChanged","XI_DeviceChangedMask","XI_Enter","XI_EnterMask","XI_FocusIn","XI_FocusInMask","XI_FocusOut","XI_FocusOutMask","XI_HierarchyChanged","XI_HierarchyChangedMask","XI_KeyPress","XI_KeyPressMask","XI_KeyRelease","XI_KeyReleaseMask","XI_LASTEVENT","XI_Leave","XI_LeaveMask","XI_Motion","XI_MotionMask","XI_PropertyEvent","XI_PropertyEventMask","XI_RawButtonPress","XI_RawButtonPressMask","XI_RawButtonRelease","XI_RawButtonReleaseMask","XI_RawKeyPress","XI_RawKeyPressMask","XI_RawKeyRelease","XI_RawKeyReleaseMask","XI_RawMotion","XI_RawMotionMask","XI_RawTouchBegin","XI_RawTouchBeginMask","XI_RawTouchEnd","XI_RawTouchEndMask","XI_RawTouchUpdate","XI_RawTouchUpdateMask","XI_TouchBegin","XI_TouchBeginMask","XI_TouchEnd","XI_TouchEndMask","XI_TouchOwnership","XI_TouchOwnershipChangedMask","XI_TouchUpdate","XI_TouchUpdateMask","XIconSize","XIconifyWindow","XIfEvent","XImage","XImageByteOrder","XIndexValue","XInitExtension","XInitImage","XInitThreads","XInput","XInput2","XInputClass","XInputClassInfo","XInput_2_0","XInsertModifiermapEntry","XInstallColormap","XInternAtom","XInternAtoms","XInternalConnectionNumbers","XIntersectRegion","XK_0","XK_1","XK_2","XK_3","XK_4","XK_5","XK_6","XK_7","XK_8","XK_9","XK_A","XK_AE","XK_Aacute","XK_Abreve","XK_AccessX_Enable","XK_AccessX_Feedback_Enable","XK_Acircumflex","XK_Adiaeresis","XK_Agrave","XK_Alt_L","XK_Alt_R","XK_Amacron","XK_Aogonek","XK_App","XK_Arabic_ain","XK_Arabic_alef","XK_Arabic_alefmaksura","XK_Arabic_beh","XK_Arabic_comma","XK_Arabic_dad","XK_Arabic_dal","XK_Arabic_damma","XK_Arabic_dammatan","XK_Arabic_fatha","XK_Arabic_fathatan","XK_Arabic_feh","XK_Arabic_ghain","XK_Arabic_ha","XK_Arabic_hah","XK_Arabic_hamza","XK_Arabic_hamzaonalef","XK_Arabic_hamzaonwaw","XK_Arabic_hamzaonyeh","XK_Arabic_hamzaunderalef","XK_Arabic_heh","XK_Arabic_jeem","XK_Arabic_kaf","XK_Arabic_kasra","XK_Arabic_kasratan","XK_Arabic_khah","XK_Arabic_lam","XK_Arabic_maddaonalef","XK_Arabic_meem","XK_Arabic_noon","XK_Arabic_qaf","XK_Arabic_question_mark","XK_Arabic_ra","XK_Arabic_sad","XK_Arabic_seen","XK_Arabic_semicolon","XK_Arabic_shadda","XK_Arabic_sheen","XK_Arabic_sukun","XK_Arabic_switch","XK_Arabic_tah","XK_Arabic_tatweel","XK_Arabic_teh","XK_Arabic_tehmarbuta","XK_Arabic_thal","XK_Arabic_theh","XK_Arabic_waw","XK_Arabic_yeh","XK_Arabic_zah","XK_Arabic_zain","XK_Aring","XK_Atilde","XK_AudibleBell_Enable","XK_B","XK_BackSpace","XK_Begin","XK_BounceKeys_Enable","XK_Break","XK_Byelorussian_SHORTU","XK_Byelorussian_shortu","XK_C","XK_CH","XK_C_H","XK_C_h","XK_Cabovedot","XK_Cacute","XK_Cancel","XK_Caps_Lock","XK_Ccaron","XK_Ccedilla","XK_Ccircumflex","XK_Ch","XK_Clear","XK_Control_L","XK_Control_R","XK_Cyrillic_A","XK_Cyrillic_BE","XK_Cyrillic_CHE","XK_Cyrillic_DE","XK_Cyrillic_DZHE","XK_Cyrillic_E","XK_Cyrillic_EF","XK_Cyrillic_EL","XK_Cyrillic_EM","XK_Cyrillic_EN","XK_Cyrillic_ER","XK_Cyrillic_ES","XK_Cyrillic_GHE","XK_Cyrillic_HA","XK_Cyrillic_HARDSIGN","XK_Cyrillic_I","XK_Cyrillic_IE","XK_Cyrillic_IO","XK_Cyrillic_JE","XK_Cyrillic_KA","XK_Cyrillic_LJE","XK_Cyrillic_NJE","XK_Cyrillic_O","XK_Cyrillic_PE","XK_Cyrillic_SHA","XK_Cyrillic_SHCHA","XK_Cyrillic_SHORTI","XK_Cyrillic_SOFTSIGN","XK_Cyrillic_TE","XK_Cyrillic_TSE","XK_Cyrillic_U","XK_Cyrillic_VE","XK_Cyrillic_YA","XK_Cyrillic_YERU","XK_Cyrillic_YU","XK_Cyrillic_ZE","XK_Cyrillic_ZHE","XK_Cyrillic_a","XK_Cyrillic_be","XK_Cyrillic_che","XK_Cyrillic_de","XK_Cyrillic_dzhe","XK_Cyrillic_e","XK_Cyrillic_ef","XK_Cyrillic_el","XK_Cyrillic_em","XK_Cyrillic_en","XK_Cyrillic_er","XK_Cyrillic_es","XK_Cyrillic_ghe","XK_Cyrillic_ha","XK_Cyrillic_hardsign","XK_Cyrillic_i","XK_Cyrillic_ie","XK_Cyrillic_io","XK_Cyrillic_je","XK_Cyrillic_ka","XK_Cyrillic_lje","XK_Cyrillic_nje","XK_Cyrillic_o","XK_Cyrillic_pe","XK_Cyrillic_sha","XK_Cyrillic_shcha","XK_Cyrillic_shorti","XK_Cyrillic_softsign","XK_Cyrillic_te","XK_Cyrillic_tse","XK_Cyrillic_u","XK_Cyrillic_ve","XK_Cyrillic_ya","XK_Cyrillic_yeru","XK_Cyrillic_yu","XK_Cyrillic_ze","XK_Cyrillic_zhe","XK_D","XK_Dcaron","XK_Delete","XK_Down","XK_Dstroke","XK_E","XK_ENG","XK_ETH","XK_Eabovedot","XK_Eacute","XK_Ecaron","XK_Ecircumflex","XK_Ediaeresis","XK_Egrave","XK_Eisu_Shift","XK_Eisu_toggle","XK_Emacron","XK_End","XK_Eogonek","XK_Escape","XK_Eth","XK_Execute","XK_F","XK_F1","XK_F10","XK_F11","XK_F12","XK_F13","XK_F14","XK_F15","XK_F16","XK_F17","XK_F18","XK_F19","XK_F2","XK_F20","XK_F21","XK_F22","XK_F23","XK_F24","XK_F25","XK_F26","XK_F27","XK_F28","XK_F29","XK_F3","XK_F30","XK_F31","XK_F32","XK_F33","XK_F34","XK_F35","XK_F4","XK_F5","XK_F6","XK_F7","XK_F8","XK_F9","XK_Find","XK_First_Virtual_Screen","XK_G","XK_Gabovedot","XK_Gbreve","XK_Gcedilla","XK_Gcircumflex","XK_Greek_ALPHA","XK_Greek_ALPHAaccent","XK_Greek_BETA","XK_Greek_CHI","XK_Greek_DELTA","XK_Greek_EPSILON","XK_Greek_EPSILONaccent","XK_Greek_ETA","XK_Greek_ETAaccent","XK_Greek_GAMMA","XK_Greek_IOTA","XK_Greek_IOTAaccent","XK_Greek_IOTAdiaeresis","XK_Greek_KAPPA","XK_Greek_LAMBDA","XK_Greek_LAMDA","XK_Greek_MU","XK_Greek_NU","XK_Greek_OMEGA","XK_Greek_OMEGAaccent","XK_Greek_OMICRON","XK_Greek_OMICRONaccent","XK_Greek_PHI","XK_Greek_PI","XK_Greek_PSI","XK_Greek_RHO","XK_Greek_SIGMA","XK_Greek_TAU","XK_Greek_THETA","XK_Greek_UPSILON","XK_Greek_UPSILONaccent","XK_Greek_UPSILONdieresis","XK_Greek_XI","XK_Greek_ZETA","XK_Greek_accentdieresis","XK_Greek_alpha","XK_Greek_alphaaccent","XK_Greek_beta","XK_Greek_chi","XK_Greek_delta","XK_Greek_epsilon","XK_Greek_epsilonaccent","XK_Greek_eta","XK_Greek_etaaccent","XK_Greek_finalsmallsigma","XK_Greek_gamma","XK_Greek_horizbar","XK_Greek_iota","XK_Greek_iotaaccent","XK_Greek_iotaaccentdieresis","XK_Greek_iotadieresis","XK_Greek_kappa","XK_Greek_lambda","XK_Greek_lamda","XK_Greek_mu","XK_Greek_nu","XK_Greek_omega","XK_Greek_omegaaccent","XK_Greek_omicron","XK_Greek_omicronaccent","XK_Greek_phi","XK_Greek_pi","XK_Greek_psi","XK_Greek_rho","XK_Greek_sigma","XK_Greek_switch","XK_Greek_tau","XK_Greek_theta","XK_Greek_upsilon","XK_Greek_upsilonaccent","XK_Greek_upsilonaccentdieresis","XK_Greek_upsilondieresis","XK_Greek_xi","XK_Greek_zeta","XK_H","XK_Hankaku","XK_Hcircumflex","XK_Hebrew_switch","XK_Help","XK_Henkan","XK_Henkan_Mode","XK_Hiragana","XK_Hiragana_Katakana","XK_Home","XK_Hstroke","XK_Hyper_L","XK_Hyper_R","XK_I","XK_ISO_Center_Object","XK_ISO_Continuous_Underline","XK_ISO_Discontinuous_Underline","XK_ISO_Emphasize","XK_ISO_Enter","XK_ISO_Fast_Cursor_Down","XK_ISO_Fast_Cursor_Left","XK_ISO_Fast_Cursor_Right","XK_ISO_Fast_Cursor_Up","XK_ISO_First_Group","XK_ISO_First_Group_Lock","XK_ISO_Group_Latch","XK_ISO_Group_Lock","XK_ISO_Group_Shift","XK_ISO_Last_Group","XK_ISO_Last_Group_Lock","XK_ISO_Left_Tab","XK_ISO_Level2_Latch","XK_ISO_Level3_Latch","XK_ISO_Level3_Lock","XK_ISO_Level3_Shift","XK_ISO_Level5_Latch","XK_ISO_Level5_Lock","XK_ISO_Level5_Shift","XK_ISO_Lock","XK_ISO_Move_Line_Down","XK_ISO_Move_Line_Up","XK_ISO_Next_Group","XK_ISO_Next_Group_Lock","XK_ISO_Partial_Line_Down","XK_ISO_Partial_Line_Up","XK_ISO_Partial_Space_Left","XK_ISO_Partial_Space_Right","XK_ISO_Prev_Group","XK_ISO_Prev_Group_Lock","XK_ISO_Release_Both_Margins","XK_ISO_Release_Margin_Left","XK_ISO_Release_Margin_Right","XK_ISO_Set_Margin_Left","XK_ISO_Set_Margin_Right","XK_Iabovedot","XK_Iacute","XK_Icircumflex","XK_Idiaeresis","XK_Igrave","XK_Imacron","XK_Insert","XK_Iogonek","XK_Itilde","XK_J","XK_Jcircumflex","XK_K","XK_KP_0","XK_KP_1","XK_KP_2","XK_KP_3","XK_KP_4","XK_KP_5","XK_KP_6","XK_KP_7","XK_KP_8","XK_KP_9","XK_KP_Add","XK_KP_Begin","XK_KP_Decimal","XK_KP_Delete","XK_KP_Divide","XK_KP_Down","XK_KP_End","XK_KP_Enter","XK_KP_Equal","XK_KP_F1","XK_KP_F2","XK_KP_F3","XK_KP_F4","XK_KP_Home","XK_KP_Insert","XK_KP_Left","XK_KP_Multiply","XK_KP_Next","XK_KP_Page_Down","XK_KP_Page_Up","XK_KP_Prior","XK_KP_Right","XK_KP_Separator","XK_KP_Space","XK_KP_Subtract","XK_KP_Tab","XK_KP_Up","XK_Kana_Lock","XK_Kana_Shift","XK_Kanji","XK_Katakana","XK_Kcedilla","XK_L","XK_L1","XK_L10","XK_L2","XK_L3","XK_L4","XK_L5","XK_L6","XK_L7","XK_L8","XK_L9","XK_Lacute","XK_Last_Virtual_Screen","XK_Lcaron","XK_Lcedilla","XK_Left","XK_Linefeed","XK_Lstroke","XK_M","XK_Macedonia_DSE","XK_Macedonia_GJE","XK_Macedonia_KJE","XK_Macedonia_dse","XK_Macedonia_gje","XK_Macedonia_kje","XK_Massyo","XK_Menu","XK_Meta_L","XK_Meta_R","XK_Mode_switch","XK_MouseKeys_Accel_Enable","XK_MouseKeys_Enable","XK_Muhenkan","XK_Multi_key","XK_N","XK_Nacute","XK_Ncaron","XK_Ncedilla","XK_Next","XK_Next_Virtual_Screen","XK_Ntilde","XK_Num_Lock","XK_O","XK_Oacute","XK_Ocircumflex","XK_Odiaeresis","XK_Odoubleacute","XK_Ograve","XK_Omacron","XK_Ooblique","XK_Otilde","XK_Overlay1_Enable","XK_Overlay2_Enable","XK_P","XK_Page_Down","XK_Page_Up","XK_Pause","XK_Pointer_Accelerate","XK_Pointer_Button1","XK_Pointer_Button2","XK_Pointer_Button3","XK_Pointer_Button4","XK_Pointer_Button5","XK_Pointer_Button_Dflt","XK_Pointer_DblClick1","XK_Pointer_DblClick2","XK_Pointer_DblClick3","XK_Pointer_DblClick4","XK_Pointer_DblClick5","XK_Pointer_DblClick_Dflt","XK_Pointer_DfltBtnNext","XK_Pointer_DfltBtnPrev","XK_Pointer_Down","XK_Pointer_DownLeft","XK_Pointer_DownRight","XK_Pointer_Drag1","XK_Pointer_Drag2","XK_Pointer_Drag3","XK_Pointer_Drag4","XK_Pointer_Drag5","XK_Pointer_Drag_Dflt","XK_Pointer_EnableKeys","XK_Pointer_Left","XK_Pointer_Right","XK_Pointer_Up","XK_Pointer_UpLeft","XK_Pointer_UpRight","XK_Prev_Virtual_Screen","XK_Print","XK_Prior","XK_Q","XK_R","XK_R1","XK_R10","XK_R11","XK_R12","XK_R13","XK_R14","XK_R15","XK_R2","XK_R3","XK_R4","XK_R5","XK_R6","XK_R7","XK_R8","XK_R9","XK_Racute","XK_Rcaron","XK_Rcedilla","XK_Redo","XK_RepeatKeys_Enable","XK_Return","XK_Right","XK_Romaji","XK_S","XK_Sacute","XK_Scaron","XK_Scedilla","XK_Scircumflex","XK_Scroll_Lock","XK_Select","XK_Serbian_DJE","XK_Serbian_DZE","XK_Serbian_JE","XK_Serbian_LJE","XK_Serbian_NJE","XK_Serbian_TSHE","XK_Serbian_dje","XK_Serbian_dze","XK_Serbian_je","XK_Serbian_lje","XK_Serbian_nje","XK_Serbian_tshe","XK_Shift_L","XK_Shift_Lock","XK_Shift_R","XK_SlowKeys_Enable","XK_StickyKeys_Enable","XK_Super_L","XK_Super_R","XK_Sys_Req","XK_T","XK_THORN","XK_Tab","XK_Tcaron","XK_Tcedilla","XK_Terminate_Server","XK_Thorn","XK_Touroku","XK_Tslash","XK_U","XK_Uacute","XK_Ubreve","XK_Ucircumflex","XK_Udiaeresis","XK_Udoubleacute","XK_Ugrave","XK_Ukrainian_I","XK_Ukrainian_IE","XK_Ukrainian_YI","XK_Ukrainian_i","XK_Ukrainian_ie","XK_Ukrainian_yi","XK_Ukranian_I","XK_Ukranian_JE","XK_Ukranian_YI","XK_Ukranian_i","XK_Ukranian_je","XK_Ukranian_yi","XK_Umacron","XK_Undo","XK_Uogonek","XK_Up","XK_Uring","XK_Utilde","XK_V","XK_W","XK_Win_L","XK_Win_R","XK_X","XK_Y","XK_Yacute","XK_Z","XK_Zabovedot","XK_Zacute","XK_Zcaron","XK_Zenkaku","XK_Zenkaku_Hankaku","XK_a","XK_aacute","XK_abovedot","XK_abreve","XK_acircumflex","XK_acute","XK_adiaeresis","XK_ae","XK_agrave","XK_amacron","XK_ampersand","XK_aogonek","XK_apostrophe","XK_approximate","XK_aring","XK_asciicircum","XK_asciitilde","XK_asterisk","XK_at","XK_atilde","XK_b","XK_backslash","XK_ballotcross","XK_bar","XK_blank","XK_botintegral","XK_botleftparens","XK_botleftsqbracket","XK_botleftsummation","XK_botrightparens","XK_botrightsqbracket","XK_botrightsummation","XK_bott","XK_botvertsummationconnector","XK_braceleft","XK_braceright","XK_bracketleft","XK_bracketright","XK_breve","XK_brokenbar","XK_c","XK_c_h","XK_cabovedot","XK_cacute","XK_careof","XK_caret","XK_caron","XK_ccaron","XK_ccedilla","XK_ccircumflex","XK_cedilla","XK_cent","XK_ch","XK_checkerboard","XK_checkmark","XK_circle","XK_club","XK_colon","XK_comma","XK_copyright","XK_cr","XK_crossinglines","XK_currency","XK_cursor","XK_d","XK_dagger","XK_dcaron","XK_dead_A","XK_dead_E","XK_dead_I","XK_dead_O","XK_dead_U","XK_dead_a","XK_dead_abovecomma","XK_dead_abovedot","XK_dead_abovereversedcomma","XK_dead_abovering","XK_dead_aboveverticalline","XK_dead_acute","XK_dead_belowbreve","XK_dead_belowcircumflex","XK_dead_belowcomma","XK_dead_belowdiaeresis","XK_dead_belowdot","XK_dead_belowmacron","XK_dead_belowring","XK_dead_belowtilde","XK_dead_belowverticalline","XK_dead_breve","XK_dead_capital_schwa","XK_dead_caron","XK_dead_cedilla","XK_dead_circumflex","XK_dead_currency","XK_dead_dasia","XK_dead_diaeresis","XK_dead_doubleacute","XK_dead_doublegrave","XK_dead_e","XK_dead_grave","XK_dead_greek","XK_dead_hook","XK_dead_horn","XK_dead_i","XK_dead_invertedbreve","XK_dead_iota","XK_dead_longsolidusoverlay","XK_dead_lowline","XK_dead_macron","XK_dead_o","XK_dead_ogonek","XK_dead_perispomeni","XK_dead_psili","XK_dead_semivoiced_sound","XK_dead_small_schwa","XK_dead_stroke","XK_dead_tilde","XK_dead_u","XK_dead_voiced_sound","XK_decimalpoint","XK_degree","XK_diaeresis","XK_diamond","XK_digitspace","XK_division","XK_dollar","XK_doubbaselinedot","XK_doubleacute","XK_doubledagger","XK_doublelowquotemark","XK_downarrow","XK_downcaret","XK_downshoe","XK_downstile","XK_downtack","XK_dstroke","XK_e","XK_eabovedot","XK_eacute","XK_ecaron","XK_ecircumflex","XK_ediaeresis","XK_egrave","XK_ellipsis","XK_em3space","XK_em4space","XK_emacron","XK_emdash","XK_emfilledcircle","XK_emfilledrect","XK_emopencircle","XK_emopenrectangle","XK_emspace","XK_endash","XK_enfilledcircbullet","XK_enfilledsqbullet","XK_eng","XK_enopencircbullet","XK_enopensquarebullet","XK_enspace","XK_eogonek","XK_equal","XK_eth","XK_exclam","XK_exclamdown","XK_f","XK_femalesymbol","XK_ff","XK_figdash","XK_filledlefttribullet","XK_filledrectbullet","XK_filledrighttribullet","XK_filledtribulletdown","XK_filledtribulletup","XK_fiveeighths","XK_fivesixths","XK_fourfifths","XK_function","XK_g","XK_gabovedot","XK_gbreve","XK_gcedilla","XK_gcircumflex","XK_grave","XK_greater","XK_greaterthanequal","XK_guillemotleft","XK_guillemotright","XK_h","XK_hairspace","XK_hcircumflex","XK_heart","XK_hebrew_aleph","XK_hebrew_ayin","XK_hebrew_bet","XK_hebrew_beth","XK_hebrew_chet","XK_hebrew_dalet","XK_hebrew_daleth","XK_hebrew_doublelowline","XK_hebrew_finalkaph","XK_hebrew_finalmem","XK_hebrew_finalnun","XK_hebrew_finalpe","XK_hebrew_finalzade","XK_hebrew_finalzadi","XK_hebrew_gimel","XK_hebrew_gimmel","XK_hebrew_he","XK_hebrew_het","XK_hebrew_kaph","XK_hebrew_kuf","XK_hebrew_lamed","XK_hebrew_mem","XK_hebrew_nun","XK_hebrew_pe","XK_hebrew_qoph","XK_hebrew_resh","XK_hebrew_samech","XK_hebrew_samekh","XK_hebrew_shin","XK_hebrew_taf","XK_hebrew_taw","XK_hebrew_tet","XK_hebrew_teth","XK_hebrew_waw","XK_hebrew_yod","XK_hebrew_zade","XK_hebrew_zadi","XK_hebrew_zain","XK_hebrew_zayin","XK_hexagram","XK_horizconnector","XK_horizlinescan1","XK_horizlinescan3","XK_horizlinescan5","XK_horizlinescan7","XK_horizlinescan9","XK_hstroke","XK_ht","XK_hyphen","XK_i","XK_iacute","XK_icircumflex","XK_identical","XK_idiaeresis","XK_idotless","XK_ifonlyif","XK_igrave","XK_imacron","XK_implies","XK_includedin","XK_includes","XK_infinity","XK_integral","XK_intersection","XK_iogonek","XK_itilde","XK_j","XK_jcircumflex","XK_jot","XK_k","XK_kana_A","XK_kana_CHI","XK_kana_E","XK_kana_FU","XK_kana_HA","XK_kana_HE","XK_kana_HI","XK_kana_HO","XK_kana_HU","XK_kana_I","XK_kana_KA","XK_kana_KE","XK_kana_KI","XK_kana_KO","XK_kana_KU","XK_kana_MA","XK_kana_ME","XK_kana_MI","XK_kana_MO","XK_kana_MU","XK_kana_N","XK_kana_NA","XK_kana_NE","XK_kana_NI","XK_kana_NO","XK_kana_NU","XK_kana_O","XK_kana_RA","XK_kana_RE","XK_kana_RI","XK_kana_RO","XK_kana_RU","XK_kana_SA","XK_kana_SE","XK_kana_SHI","XK_kana_SO","XK_kana_SU","XK_kana_TA","XK_kana_TE","XK_kana_TI","XK_kana_TO","XK_kana_TSU","XK_kana_TU","XK_kana_U","XK_kana_WA","XK_kana_WO","XK_kana_YA","XK_kana_YO","XK_kana_YU","XK_kana_a","XK_kana_closingbracket","XK_kana_comma","XK_kana_conjunctive","XK_kana_e","XK_kana_fullstop","XK_kana_i","XK_kana_middledot","XK_kana_o","XK_kana_openingbracket","XK_kana_switch","XK_kana_tsu","XK_kana_tu","XK_kana_u","XK_kana_ya","XK_kana_yo","XK_kana_yu","XK_kappa","XK_kcedilla","XK_kra","XK_l","XK_lacute","XK_latincross","XK_lcaron","XK_lcedilla","XK_leftanglebracket","XK_leftarrow","XK_leftcaret","XK_leftdoublequotemark","XK_leftmiddlecurlybrace","XK_leftopentriangle","XK_leftpointer","XK_leftradical","XK_leftshoe","XK_leftsinglequotemark","XK_leftt","XK_lefttack","XK_less","XK_lessthanequal","XK_lf","XK_logicaland","XK_logicalor","XK_lowleftcorner","XK_lowrightcorner","XK_lstroke","XK_m","XK_macron","XK_malesymbol","XK_maltesecross","XK_marker","XK_masculine","XK_minus","XK_minutes","XK_mu","XK_multiply","XK_musicalflat","XK_musicalsharp","XK_n","XK_nabla","XK_nacute","XK_ncaron","XK_ncedilla","XK_nl","XK_nobreakspace","XK_notequal","XK_notsign","XK_ntilde","XK_numbersign","XK_numerosign","XK_o","XK_oacute","XK_ocircumflex","XK_odiaeresis","XK_odoubleacute","XK_ogonek","XK_ograve","XK_omacron","XK_oneeighth","XK_onefifth","XK_onehalf","XK_onequarter","XK_onesixth","XK_onesuperior","XK_onethird","XK_openrectbullet","XK_openstar","XK_opentribulletdown","XK_opentribulletup","XK_ordfeminine","XK_oslash","XK_otilde","XK_overbar","XK_overline","XK_p","XK_paragraph","XK_parenleft","XK_parenright","XK_partialderivative","XK_percent","XK_period","XK_periodcentered","XK_phonographcopyright","XK_plus","XK_plusminus","XK_prescription","XK_prolongedsound","XK_punctspace","XK_q","XK_quad","XK_question","XK_questiondown","XK_quotedbl","XK_quoteleft","XK_quoteright","XK_r","XK_racute","XK_radical","XK_rcaron","XK_rcedilla","XK_registered","XK_rightanglebracket","XK_rightarrow","XK_rightcaret","XK_rightdoublequotemark","XK_rightmiddlecurlybrace","XK_rightmiddlesummation","XK_rightopentriangle","XK_rightpointer","XK_rightshoe","XK_rightsinglequotemark","XK_rightt","XK_righttack","XK_s","XK_sacute","XK_scaron","XK_scedilla","XK_scircumflex","XK_script_switch","XK_seconds","XK_section","XK_semicolon","XK_semivoicedsound","XK_seveneighths","XK_signaturemark","XK_signifblank","XK_similarequal","XK_singlelowquotemark","XK_slash","XK_soliddiamond","XK_space","XK_ssharp","XK_sterling","XK_t","XK_tcaron","XK_tcedilla","XK_telephone","XK_telephonerecorder","XK_therefore","XK_thinspace","XK_thorn","XK_threeeighths","XK_threefifths","XK_threequarters","XK_threesuperior","XK_topintegral","XK_topleftparens","XK_topleftradical","XK_topleftsqbracket","XK_topleftsummation","XK_toprightparens","XK_toprightsqbracket","XK_toprightsummation","XK_topt","XK_topvertsummationconnector","XK_trademark","XK_trademarkincircle","XK_tslash","XK_twofifths","XK_twosuperior","XK_twothirds","XK_u","XK_uacute","XK_ubreve","XK_ucircumflex","XK_udiaeresis","XK_udoubleacute","XK_ugrave","XK_umacron","XK_underbar","XK_underscore","XK_union","XK_uogonek","XK_uparrow","XK_upcaret","XK_upleftcorner","XK_uprightcorner","XK_upshoe","XK_upstile","XK_uptack","XK_uring","XK_utilde","XK_v","XK_variation","XK_vertbar","XK_vertconnector","XK_voicedsound","XK_vt","XK_w","XK_x","XK_y","XK_yacute","XK_ydiaeresis","XK_yen","XK_z","XK_zabovedot","XK_zacute","XK_zcaron","XKeyEvent","XKeyPressedEvent","XKeyReleasedEvent","XKeyboardControl","XKeyboardState","XKeycodeToKeysym","XKeymapEvent","XKeysymToKeycode","XKeysymToString","XKillClient","XLastKnownRequestProcessed","XLeaveWindowEvent","XLineFixed","XLinearGradient","XListDepths","XListDeviceProperties","XListExtensions","XListFonts","XListFontsWithInfo","XListHosts","XListInputDevices","XListInstalledColormaps","XListPixmapFormats","XListProperties","XLoadFont","XLoadQueryFont","XLocaleOfFontSet","XLocaleOfIM","XLocaleOfOM","XLockDisplay","XLookupBoth","XLookupChars","XLookupColor","XLookupKeySym","XLookupKeysym","XLookupNone","XLookupString","XLowerWindow","XMapEvent","XMapRaised","XMapRequestEvent","XMapSubwindows","XMapWindow","XMappingEvent","XMaskEvent","XMatchVisualInfo","XMaxCmapsOfScreen","XMaxRequestSize","XMinCmapsOfScreen","XModifierKeymap","XMotionEvent","XMoveResizeWindow","XMoveWindow","XNArea","XNAreaNeeded","XNAreaNeeded_0","XNArea_0","XNBackground","XNBackgroundPixmap","XNBackgroundPixmap_0","XNBackground_0","XNClientWindow","XNClientWindow_0","XNColormap","XNColormap_0","XNCursor","XNCursor_0","XNDestroyCallback","XNDestroyCallback_0","XNFilterEvents","XNFilterEvents_0","XNFocusWindow","XNFocusWindow_0","XNFontSet","XNFontSet_0","XNForeground","XNForeground_0","XNGeometryCallback","XNGeometryCallback_0","XNHotKey","XNHotKeyState","XNHotKeyState_0","XNHotKey_0","XNInputStyle","XNInputStyle_0","XNLineSpace","XNLineSpace_0","XNPreeditAttributes","XNPreeditAttributes_0","XNPreeditCaretCallback","XNPreeditCaretCallback_0","XNPreeditDoneCallback","XNPreeditDoneCallback_0","XNPreeditDrawCallback","XNPreeditDrawCallback_0","XNPreeditStartCallback","XNPreeditStartCallback_0","XNPreeditState","XNPreeditStateNotifyCallback","XNPreeditStateNotifyCallback_0","XNPreeditState_0","XNQueryICValuesList","XNQueryICValuesList_0","XNQueryIMValuesList","XNQueryIMValuesList_0","XNQueryInputStyle","XNQueryInputStyle_0","XNR6PreeditCallback","XNR6PreeditCallback_0","XNResetState","XNResetState_0","XNResourceClass","XNResourceClass_0","XNResourceName","XNResourceName_0","XNSeparatorofNestedList","XNSeparatorofNestedList_0","XNSpotLocation","XNSpotLocation_0","XNStatusAttributes","XNStatusAttributes_0","XNStatusDoneCallback","XNStatusDoneCallback_0","XNStatusDrawCallback","XNStatusDrawCallback_0","XNStatusStartCallback","XNStatusStartCallback_0","XNStdColormap","XNStdColormap_0","XNStringConversion","XNStringConversionCallback","XNStringConversionCallback_0","XNStringConversion_0","XNVaNestedList","XNVaNestedList_0","XNVisiblePosition","XNVisiblePosition_0","XNegative","XNewModifiermap","XNextEvent","XNextRequest","XNoExposeEvent","XNoOp","XOM","XOMCharSetList","XOMOfOC","XOffsetRegion","XOpenDevice","XOpenDisplay","XOpenIM","XOpenOM","XOrientation","XParseColor","XParseGeometry","XPeekEvent","XPeekIfEvent","XPending","XPixmapFormatValues","XPlanesOfScreen","XPoint","XPointDouble","XPointFixed","XPointInRegion","XPointer","XPointerMovedEvent","XPolygonRegion","XProcessInternalConnection","XPropertyEvent","XProtocolRevision","XProtocolVersion","XPutBackEvent","XPutImage","XPutPixel","XQLength","XQueryBestCursor","XQueryBestSize","XQueryBestStipple","XQueryBestTile","XQueryColor","XQueryColors","XQueryDeviceState","XQueryExtension","XQueryFont","XQueryKeymap","XQueryPointer","XQueryTextExtents","XQueryTextExtents16","XQueryTree","XRRAddOutputMode","XRRAddOutputMode","XRRAllocGamma","XRRAllocGamma","XRRAllocModeInfo","XRRAllocModeInfo","XRRAllocateMonitor","XRRChangeOutputProperty","XRRChangeOutputProperty","XRRChangeProviderProperty","XRRChangeProviderProperty","XRRConfigCurrentConfiguration","XRRConfigCurrentConfiguration","XRRConfigCurrentRate","XRRConfigCurrentRate","XRRConfigRates","XRRConfigRates","XRRConfigRotations","XRRConfigRotations","XRRConfigSizes","XRRConfigSizes","XRRConfigTimes","XRRConfigTimes","XRRConfigureOutputProperty","XRRConfigureOutputProperty","XRRConfigureProviderProperty","XRRConfigureProviderProperty","XRRCreateMode","XRRCreateMode","XRRCrtcChangeNotifyEvent","XRRCrtcGamma","XRRCrtcInfo","XRRCrtcTransformAttributes","XRRDeleteMonitor","XRRDeleteOutputMode","XRRDeleteOutputMode","XRRDeleteOutputProperty","XRRDeleteOutputProperty","XRRDeleteProviderProperty","XRRDeleteProviderProperty","XRRDestroyMode","XRRDestroyMode","XRRFreeCrtcInfo","XRRFreeCrtcInfo","XRRFreeGamma","XRRFreeGamma","XRRFreeModeInfo","XRRFreeModeInfo","XRRFreeMonitors","XRRFreeOutputInfo","XRRFreeOutputInfo","XRRFreePanning","XRRFreePanning","XRRFreeProviderInfo","XRRFreeProviderInfo","XRRFreeProviderResources","XRRFreeProviderResources","XRRFreeScreenConfigInfo","XRRFreeScreenConfigInfo","XRRFreeScreenResources","XRRFreeScreenResources","XRRGetCrtcGamma","XRRGetCrtcGamma","XRRGetCrtcGammaSize","XRRGetCrtcGammaSize","XRRGetCrtcInfo","XRRGetCrtcInfo","XRRGetCrtcTransform","XRRGetCrtcTransform","XRRGetMonitors","XRRGetOutputInfo","XRRGetOutputInfo","XRRGetOutputPrimary","XRRGetOutputPrimary","XRRGetOutputProperty","XRRGetOutputProperty","XRRGetPanning","XRRGetPanning","XRRGetProviderInfo","XRRGetProviderInfo","XRRGetProviderProperty","XRRGetProviderProperty","XRRGetProviderResources","XRRGetProviderResources","XRRGetScreenInfo","XRRGetScreenInfo","XRRGetScreenResources","XRRGetScreenResources","XRRGetScreenResourcesCurrent","XRRGetScreenResourcesCurrent","XRRGetScreenSizeRange","XRRGetScreenSizeRange","XRRListOutputProperties","XRRListOutputProperties","XRRListProviderProperties","XRRListProviderProperties","XRRModeFlags","XRRModeInfo","XRRMonitorInfo","XRRNotifyEvent","XRROutputChangeNotifyEvent","XRROutputInfo","XRROutputPropertyNotifyEvent","XRRPanning","XRRPropertyInfo","XRRProviderChangeNotifyEvent","XRRProviderInfo","XRRProviderPropertyNotifyEvent","XRRProviderResources","XRRQueryExtension","XRRQueryExtension","XRRQueryOutputProperty","XRRQueryOutputProperty","XRRQueryProviderProperty","XRRQueryProviderProperty","XRRQueryVersion","XRRQueryVersion","XRRRates","XRRRates","XRRResourceChangeNotifyEvent","XRRRootToScreen","XRRRootToScreen","XRRRotations","XRRRotations","XRRScreenChangeNotifyEvent","XRRScreenConfiguration","XRRScreenResources","XRRScreenSize","XRRSelectInput","XRRSelectInput","XRRSetCrtcConfig","XRRSetCrtcConfig","XRRSetCrtcGamma","XRRSetCrtcGamma","XRRSetCrtcTransform","XRRSetCrtcTransform","XRRSetMonitor","XRRSetOutputPrimary","XRRSetOutputPrimary","XRRSetPanning","XRRSetPanning","XRRSetProviderOffloadSink","XRRSetProviderOffloadSink","XRRSetProviderOutputSource","XRRSetProviderOutputSource","XRRSetScreenConfig","XRRSetScreenConfig","XRRSetScreenConfigAndRate","XRRSetScreenConfigAndRate","XRRSetScreenSize","XRRSetScreenSize","XRRSizes","XRRSizes","XRRTimes","XRRTimes","XRRUpdateConfiguration","XRRUpdateConfiguration","XRadialGradient","XRaiseWindow","XReadBitmapFile","XReadBitmapFileData","XRebindKeysym","XRecolorCursor","XReconfigureWMWindow","XRectInRegion","XRectangle","XRefreshKeyboardMapping","XRegisterIMInstantiateCallback","XRemoveConnectionWatch","XRemoveFromSaveSet","XRemoveHost","XRemoveHosts","XRenderAddGlyphs","XRenderAddTraps","XRenderChangePicture","XRenderColor","XRenderComposite","XRenderCompositeDoublePoly","XRenderCompositeString16","XRenderCompositeString32","XRenderCompositeString8","XRenderCompositeText16","XRenderCompositeText32","XRenderCompositeText8","XRenderCompositeTrapezoids","XRenderCompositeTriFan","XRenderCompositeTriStrip","XRenderCompositeTriangles","XRenderCreateAnimCursor","XRenderCreateConicalGradient","XRenderCreateCursor","XRenderCreateGlyphSet","XRenderCreateLinearGradient","XRenderCreatePicture","XRenderCreateRadialGradient","XRenderCreateSolidFill","XRenderDirectFormat","XRenderFillRectangle","XRenderFillRectangles","XRenderFindFormat","XRenderFindStandardFormat","XRenderFindVisualFormat","XRenderFreeGlyphSet","XRenderFreeGlyphs","XRenderFreePicture","XRenderParseColor","XRenderPictFormat","XRenderPictureAttributes","XRenderQueryExtension","XRenderQueryFilters","XRenderQueryFormats","XRenderQueryPictIndexValues","XRenderQuerySubpixelOrder","XRenderQueryVersion","XRenderReferenceGlyphSet","XRenderSetPictureClipRectangles","XRenderSetPictureClipRegion","XRenderSetPictureFilter","XRenderSetPictureTransform","XRenderSetSubpixelOrder","XReparentEvent","XReparentWindow","XResetScreenSaver","XResizeRequestEvent","XResizeWindow","XResourceManagerString","XRestackWindows","XRootWindow","XRootWindowOfScreen","XRotateBuffers","XRotateWindowProperties","XSaveContext","XScreenCount","XScreenNumberOfScreen","XScreenOfDisplay","XScreenResourceString","XSegment","XSelectExtensionEvent","XSelectInput","XSelectionClearEvent","XSelectionEvent","XSelectionRequestEvent","XSendEvent","XSendExtensionEvent","XServerInterpretedAddress","XServerVendor","XSetAccessControl","XSetAfterFunction","XSetArcMode","XSetAuthorization","XSetBackground","XSetClassHint","XSetClipMask","XSetClipOrigin","XSetClipRectangles","XSetCloseDownMode","XSetCommand","XSetDashes","XSetDeviceButtonMapping","XSetDeviceFocus","XSetDeviceMode","XSetDeviceModifierMapping","XSetDeviceValuators","XSetErrorHandler","XSetEventQueueOwner","XSetFillRule","XSetFillStyle","XSetFont","XSetFontPath","XSetForeground","XSetFunction","XSetGraphicsExposures","XSetICFocus","XSetICValues","XSetIMValues","XSetIOErrorHandler","XSetIconName","XSetIconSizes","XSetInputFocus","XSetLineAttributes","XSetLocaleModifiers","XSetModifierMapping","XSetNormalHints","XSetOCValues","XSetOMValues","XSetPlaneMask","XSetPointerMapping","XSetRGBColormaps","XSetRegion","XSetScreenSaver","XSetSelectionOwner","XSetSizeHints","XSetStandardColormap","XSetStandardProperties","XSetState","XSetStipple","XSetSubwindowMode","XSetTSOrigin","XSetTextProperty","XSetTile","XSetTransientForHint","XSetWMClientMachine","XSetWMColormapWindows","XSetWMHints","XSetWMIconName","XSetWMName","XSetWMNormalHints","XSetWMProperties","XSetWMProtocols","XSetWMSizeHints","XSetWindowAttributes","XSetWindowBackground","XSetWindowBackgroundPixmap","XSetWindowBorder","XSetWindowBorderPixmap","XSetWindowBorderWidth","XSetWindowColormap","XSetZoomHints","XShrinkRegion","XSizeHints","XSpanFix","XStandardColormap","XStdICCTextStyle","XStoreBuffer","XStoreBytes","XStoreColor","XStoreColors","XStoreName","XStoreNamedColor","XStringListToTextProperty","XStringStyle","XStringToKeysym","XSubImage","XSubtractRegion","XSupportsLocale","XSync","XSynchronize","XTextExtents","XTextExtents16","XTextItem","XTextItem16","XTextProperty","XTextPropertyToStringList","XTextStyle","XTextWidth","XTextWidth16","XTimeCoord","XTransform","XTranslateCoordinates","XTrap","XTrapezoid","XTriangle","XUTF8StringStyle","XUndefineCursor","XUngrabButton","XUngrabDevice","XUngrabDeviceButton","XUngrabDeviceKey","XUngrabKey","XUngrabKeyboard","XUngrabPointer","XUngrabServer","XUninstallColormap","XUnionRectWithRegion","XUnionRegion","XUnloadFont","XUnlockDisplay","XUnmapEvent","XUnmapSubwindows","XUnmapWindow","XUnregisterIMInstantiateCallback","XUnsetICFocus","XUrgencyHint","XVaCreateNestedList","XValue","XVendorRelease","XVisibilityEvent","XVisualIDFromVisual","XVisualInfo","XWMGeometry","XWMHints","XWarpPointer","XWhitePixel","XWhitePixelOfScreen","XWidthMMOfScreen","XWidthOfScreen","XWindowAttributes","XWindowChanges","XWindowEvent","XWithdrawWindow","XWriteBitmapFile","XXorRegion","XYBitmap","XYPixmap","X_PROTOCOL","X_PROTOCOL_REVISION","X_RRAddOutputMode","X_RRChangeOutputProperty","X_RRChangeProviderProperty","X_RRConfigureOutputProperty","X_RRConfigureProviderProperty","X_RRCreateMode","X_RRDeleteMonitor","X_RRDeleteOutputMode","X_RRDeleteOutputProperty","X_RRDeleteProviderProperty","X_RRDestroyMode","X_RRGetCrtcGamma","X_RRGetCrtcGammaSize","X_RRGetCrtcInfo","X_RRGetCrtcTransform","X_RRGetMonitors","X_RRGetOutputInfo","X_RRGetOutputPrimary","X_RRGetOutputProperty","X_RRGetPanning","X_RRGetProviderInfo","X_RRGetProviderProperty","X_RRGetProviders","X_RRGetScreenInfo","X_RRGetScreenResources","X_RRGetScreenResourcesCurrent","X_RRGetScreenSizeRange","X_RRListOutputProperties","X_RRListProviderProperties","X_RROldGetScreenInfo","X_RROldScreenChangeSelectInput","X_RRQueryOutputProperty","X_RRQueryProviderProperty","X_RRQueryVersion","X_RRSelectInput","X_RRSetCrtcConfig","X_RRSetCrtcGamma","X_RRSetCrtcTransform","X_RRSetMonitor","X_RRSetOutputPrimary","X_RRSetPanning","X_RRSetProviderOffloadSink","X_RRSetProviderOutputSource","X_RRSetScreenConfig","X_RRSetScreenSize","XcmsAddColorSpace","XcmsAddFunctionSet","XcmsAllocColor","XcmsAllocNamedColor","XcmsCCC","XcmsCCCOfColormap","XcmsCIELabClipL","XcmsCIELabClipLab","XcmsCIELabClipab","XcmsCIELabQueryMaxC","XcmsCIELabQueryMaxL","XcmsCIELabQueryMaxLC","XcmsCIELabQueryMinL","XcmsCIELabToCIEXYZ","XcmsCIELabWhiteShiftColors","XcmsCIELuvClipL","XcmsCIELuvClipLuv","XcmsCIELuvClipuv","XcmsCIELuvQueryMaxC","XcmsCIELuvQueryMaxL","XcmsCIELuvQueryMaxLC","XcmsCIELuvQueryMinL","XcmsCIELuvToCIEuvY","XcmsCIELuvWhiteShiftColors","XcmsCIEXYZToCIELab","XcmsCIEXYZToCIEuvY","XcmsCIEXYZToCIExyY","XcmsCIEXYZToRGBi","XcmsCIEuvYToCIELuv","XcmsCIEuvYToCIEXYZ","XcmsCIEuvYToTekHVC","XcmsCIExyYToCIEXYZ","XcmsClientWhitePointOfCCC","XcmsColor","XcmsColorSpace","XcmsConvertColors","XcmsCreateCCC","XcmsDefaultCCC","XcmsDisplayOfCCC","XcmsFormatOfPrefix","XcmsFreeCCC","XcmsFunctionSet","XcmsLookupColor","XcmsPrefixOfFormat","XcmsQueryBlack","XcmsQueryBlue","XcmsQueryColor","XcmsQueryColors","XcmsQueryGreen","XcmsQueryRed","XcmsQueryWhite","XcmsRGBToRGBi","XcmsRGBiToCIEXYZ","XcmsRGBiToRGB","XcmsScreenNumberOfCCC","XcmsScreenWhitePointOfCCC","XcmsSetCCCOfColormap","XcmsSetCompressionProc","XcmsSetWhiteAdjustProc","XcmsSetWhitePoint","XcmsStoreColor","XcmsStoreColors","XcmsTekHVCClipC","XcmsTekHVCClipV","XcmsTekHVCClipVC","XcmsTekHVCQueryMaxC","XcmsTekHVCQueryMaxV","XcmsTekHVCQueryMaxVC","XcmsTekHVCQueryMaxVSamples","XcmsTekHVCQueryMinV","XcmsTekHVCToCIEuvY","XcmsTekHVCWhiteShiftColors","XcmsVisualOfCCC","Xcursor","XcursorAnimate","XcursorAnimateCreate","XcursorAnimateDestroy","XcursorAnimateNext","XcursorBool","XcursorChunkHeader","XcursorComment","XcursorCommentCreate","XcursorCommentDestroy","XcursorComments","XcursorCommentsCreate","XcursorCommentsDestroy","XcursorCursors","XcursorCursorsCreate","XcursorCursorsDestroy","XcursorDim","XcursorFile","XcursorFileHeader","XcursorFileLoad","XcursorFileLoadAllImages","XcursorFileLoadImage","XcursorFileLoadImages","XcursorFileSave","XcursorFileSaveImages","XcursorFileToc","XcursorFilenameLoad","XcursorFilenameLoadAllImages","XcursorFilenameLoadCursor","XcursorFilenameLoadCursors","XcursorFilenameLoadImage","XcursorFilenameLoadImages","XcursorFilenameSave","XcursorFilenameSaveImages","XcursorGetDefaultSize","XcursorGetTheme","XcursorGetThemeCore","XcursorImage","XcursorImageCreate","XcursorImageDestroy","XcursorImageHash","XcursorImageLoadCursor","XcursorImages","XcursorImagesCreate","XcursorImagesDestroy","XcursorImagesLoadCursor","XcursorImagesLoadCursors","XcursorImagesSetName","XcursorLibraryLoadCursor","XcursorLibraryLoadCursors","XcursorLibraryLoadImage","XcursorLibraryLoadImages","XcursorLibraryPath","XcursorLibraryShape","XcursorNoticeCreateBitmap","XcursorNoticePutBitmap","XcursorPixel","XcursorSetDefaultSize","XcursorSetTheme","XcursorSetThemeCore","XcursorShapeLoadCursor","XcursorShapeLoadCursors","XcursorShapeLoadImage","XcursorShapeLoadImages","XcursorSupportsARGB","XcursorSupportsAnim","XcursorTryShapeBitmapCursor","XcursorTryShapeCursor","XcursorUInt","XcursorXcFileLoad","XcursorXcFileLoadAllImages","XcursorXcFileLoadImage","XcursorXcFileLoadImages","XcursorXcFileSave","XkbAccessXNotify","XkbAccessXNotifyEvent","XkbAccessXNotifyMask","XkbAction","XkbActionMessage","XkbActionMessageEvent","XkbActionMessageLength","XkbActionMessageMask","XkbAddDeviceLedInfo","XkbAddGeomColor","XkbAddGeomDoodad","XkbAddGeomKey","XkbAddGeomKeyAlias","XkbAddGeomOutline","XkbAddGeomOverlay","XkbAddGeomOverlayKey","XkbAddGeomOverlayRow","XkbAddGeomProperty","XkbAddGeomRow","XkbAddGeomSection","XkbAddGeomShape","XkbAddKeyType","XkbAllEventsMask","XkbAllStateComponentsMask","XkbAllocClientMap","XkbAllocCompatMap","XkbAllocControls","XkbAllocDeviceInfo","XkbAllocGeomColors","XkbAllocGeomDoodads","XkbAllocGeomKeyAliases","XkbAllocGeomKeys","XkbAllocGeomOutlines","XkbAllocGeomOverlayKeys","XkbAllocGeomOverlayRows","XkbAllocGeomOverlays","XkbAllocGeomPoints","XkbAllocGeomProps","XkbAllocGeomRows","XkbAllocGeomSectionDoodads","XkbAllocGeomSections","XkbAllocGeomShapes","XkbAllocGeometry","XkbAllocIndicatorMaps","XkbAllocKeyboard","XkbAllocNames","XkbAllocServerMap","XkbAnyEvent","XkbApplyCompatMapToKey","XkbApplyVirtualModChanges","XkbBell","XkbBellEvent","XkbBellNotify","XkbBellNotifyEvent","XkbBellNotifyMask","XkbBoundsPtr","XkbChangeDeviceInfo","XkbChangeEnabledControls","XkbChangeKeycodeRange","XkbChangeMap","XkbChangeNames","XkbChangeTypesOfKey","XkbChangesPtr","XkbClientMapPtr","XkbColorPtr","XkbCompatGrabModsMask","XkbCompatLookupModsMask","XkbCompatMapNotify","XkbCompatMapNotifyEvent","XkbCompatMapNotifyMask","XkbCompatMapPtr","XkbCompatStateMask","XkbComponentListPtr","XkbComponentNamesPtr","XkbComputeEffectiveMap","XkbComputeRowBounds","XkbComputeSectionBounds","XkbComputeShapeBounds","XkbComputeShapeTop","XkbControlsChangesPtr","XkbControlsNotify","XkbControlsNotifyEvent","XkbControlsNotifyMask","XkbControlsPtr","XkbCopyKeyType","XkbCopyKeyTypes","XkbDescPtr","XkbDeviceBell","XkbDeviceBellEvent","XkbDeviceChangesPtr","XkbDeviceInfoPtr","XkbDeviceLedInfoPtr","XkbDoodadPtr","XkbEvent","XkbExtensionDeviceNotify","XkbExtensionDeviceNotifyEvent","XkbExtensionDeviceNotifyMask","XkbFindOverlayForKey","XkbForceBell","XkbForceDeviceBell","XkbFreeClientMap","XkbFreeCompatMap","XkbFreeComponentList","XkbFreeControls","XkbFreeDeviceInfo","XkbFreeGeomColors","XkbFreeGeomDoodads","XkbFreeGeomKeyAliases","XkbFreeGeomKeys","XkbFreeGeomOutlines","XkbFreeGeomOverlayKeys","XkbFreeGeomOverlayRows","XkbFreeGeomOverlays","XkbFreeGeomPoints","XkbFreeGeomProperties","XkbFreeGeomRows","XkbFreeGeomSections","XkbFreeGeomShapes","XkbFreeGeometry","XkbFreeIndicatorMaps","XkbFreeKeyboard","XkbFreeNames","XkbFreeServerMap","XkbGeometryPtr","XkbGeometrySizesPtr","XkbGetAutoRepeatRate","XkbGetAutoResetControls","XkbGetCompatMap","XkbGetControls","XkbGetDetectableAutoRepeat","XkbGetDeviceButtonActions","XkbGetDeviceInfo","XkbGetDeviceInfoChanges","XkbGetDeviceLedInfo","XkbGetGeometry","XkbGetIndicatorMap","XkbGetIndicatorState","XkbGetKeyActions","XkbGetKeyBehaviors","XkbGetKeyExplicitComponents","XkbGetKeyModifierMap","XkbGetKeySyms","XkbGetKeyTypes","XkbGetKeyVirtualModMap","XkbGetKeyboard","XkbGetKeyboardByName","XkbGetMap","XkbGetMapChanges","XkbGetNamedDeviceIndicator","XkbGetNamedGeometry","XkbGetNamedIndicator","XkbGetNames","XkbGetPerClientControls","XkbGetState","XkbGetUpdatedMap","XkbGetVirtualMods","XkbGetXlibControls","XkbGrabModsMask","XkbGroupBaseMask","XkbGroupLatchMask","XkbGroupLockMask","XkbGroupStateMask","XkbIgnoreExtension","XkbIndicatorMapNotify","XkbIndicatorMapNotifyMask","XkbIndicatorMapPtr","XkbIndicatorMapRec","XkbIndicatorNotifyEvent","XkbIndicatorPtr","XkbIndicatorStateNotify","XkbIndicatorStateNotifyMask","XkbInitCanonicalKeyTypes","XkbKbdDpyStatePtr","XkbKbdDpyStateRec","XkbKeyAliasPtr","XkbKeyNameLength","XkbKeyNamePtr","XkbKeyPtr","XkbKeyTypePtr","XkbKeyTypesForCoreSymbols","XkbKeycodeToKeysym","XkbKeysymToModifiers","XkbLC_AllComposeControls","XkbLC_AllControls","XkbLC_AlwaysConsumeShiftAndLock","XkbLC_BeepOnComposeFail","XkbLC_ComposeLED","XkbLC_ConsumeKeysOnComposeFail","XkbLC_ConsumeLookupMods","XkbLC_ControlFallback","XkbLC_ForceLatinLookup","XkbLC_IgnoreNewKeyboards","XkbLatchGroup","XkbLatchModifiers","XkbLibraryVersion","XkbListComponents","XkbLockGroup","XkbLockModifiers","XkbLookupKeyBinding","XkbLookupKeySym","XkbLookupModsMask","XkbMapChangesPtr","XkbMapNotify","XkbMapNotifyEvent","XkbMapNotifyMask","XkbModifierBaseMask","XkbModifierLatchMask","XkbModifierLockMask","XkbModifierStateMask","XkbModsPtr","XkbModsRec","XkbNameChangesPtr","XkbNamesNotify","XkbNamesNotifyEvent","XkbNamesNotifyMask","XkbNamesPtr","XkbNewKeyboardNotify","XkbNewKeyboardNotifyEvent","XkbNewKeyboardNotifyMask","XkbNoteControlsChanges","XkbNoteDeviceChanges","XkbNoteMapChanges","XkbNoteNameChanges","XkbNumIndicators","XkbNumKbdGroups","XkbNumVirtualMods","XkbOD_BadLibraryVersion","XkbOD_BadServerVersion","XkbOD_ConnectionRefused","XkbOD_NonXkbServer","XkbOD_Success","XkbOpenDisplay","XkbOutlinePtr","XkbOverlayKeyPtr","XkbOverlayPtr","XkbOverlayRowPtr","XkbPointerButtonMask","XkbPropertyPtr","XkbQueryExtension","XkbRefreshKeyboardMapping","XkbResizeDeviceButtonActions","XkbResizeKeyActions","XkbResizeKeySyms","XkbResizeKeyType","XkbRowPtr","XkbSectionPtr","XkbSelectEventDetails","XkbSelectEvents","XkbServerMapPtr","XkbSetAtomFuncs","XkbSetAutoRepeatRate","XkbSetAutoResetControls","XkbSetCompatMap","XkbSetControls","XkbSetDebuggingFlags","XkbSetDetectableAutoRepeat","XkbSetDeviceButtonActions","XkbSetDeviceInfo","XkbSetDeviceLedInfo","XkbSetGeometry","XkbSetIgnoreLockMods","XkbSetIndicatorMap","XkbSetMap","XkbSetNamedDeviceIndicator","XkbSetNamedIndicator","XkbSetNames","XkbSetPerClientControls","XkbSetServerInternalMods","XkbSetXlibControls","XkbShapePtr","XkbStateNotify","XkbStateNotifyEvent","XkbStateNotifyMask","XkbStatePtr","XkbStateRec","XkbSymInterpretPtr","XkbToControl","XkbTranslateKeyCode","XkbTranslateKeySym","XkbUpdateActionVirtualMods","XkbUpdateKeyTypeVirtualMods","XkbUpdateMapFromCore","XkbUseExtension","XkbVirtualModsToReal","XkbXlibControlsImplemented","Xlib","XlibOwnsEventQueue","Xlib_xcb","XmbDrawImageString","XmbDrawString","XmbDrawText","XmbLookupString","XmbResetIC","XmbSetWMProperties","XmbTextEscapement","XmbTextExtents","XmbTextItem","XmbTextListToTextProperty","XmbTextPerCharExtents","XmbTextPropertyToTextList","Xpermalloc","Xrandr","Xrandr_2_2_0","Xrender","XrmBinding","XrmCombineDatabase","XrmCombineFileDatabase","XrmDatabase","XrmDestroyDatabase","XrmEnumerateDatabase","XrmGetDatabase","XrmGetFileDatabase","XrmGetResource","XrmGetStringDatabase","XrmInitialize","XrmLocaleOfDatabase","XrmMergeDatabases","XrmOptionDescList","XrmOptionDescRec","XrmOptionKind","XrmParseCommand","XrmPermStringToQuark","XrmPutFileDatabase","XrmPutLineResource","XrmPutResource","XrmPutStringResource","XrmQGetResource","XrmQGetSearchList","XrmQGetSearchResource","XrmQPutResource","XrmQPutStringResource","XrmQuarkToString","XrmSetDatabase","XrmStringToBindingQuarkList","XrmStringToQuark","XrmStringToQuarkList","XrmUniqueQuark","XrmValue","Xutf8DrawImageString","Xutf8DrawString","Xutf8DrawText","Xutf8LookupString","Xutf8ResetIC","Xutf8SetWMProperties","Xutf8TextEscapement","Xutf8TextExtents","Xutf8TextListToTextProperty","Xutf8TextPerCharExtents","Xutf8TextPropertyToTextList","XwcDrawImageString","XwcDrawString","XwcDrawText","XwcFreeStringList","XwcLookupString","XwcResetIC","XwcTextEscapement","XwcTextExtents","XwcTextItem","XwcTextListToTextProperty","XwcTextPerCharExtents","XwcTextPropertyToTextList","YNegative","YSorted","YValue","YXBanded","YXSorted","ZPixmap","_XAnimCursor","_XAnyClassinfo","_XCircle","_XConicalGradient","_XDisplay","_XFilters","_XGC","_XGlyphElt16","_XGlyphElt32","_XGlyphElt8","_XGlyphInfo","_XIC","_XIM","_XIndexValue","_XLineFixed","_XLinearGradient","_XOC","_XOM","_XPointDouble","_XPointFixed","_XRadialGradient","_XRegion","_XRenderPictureAttributes","_XSpanFix","_XTransform","_XTrap","_XTrapezoid","_XTriangle","_XcmsCCC","_XcmsColorSpace","_XcmsFunctionSet","_XcursorAnimate","_XcursorChunkHeader","_XcursorComment","_XcursorComments","_XcursorCursors","_XcursorFile","_XcursorFileHeader","_XcursorFileToc","_XcursorImage","_XcursorImages","_XkbAction","_XkbBounds","_XkbChanges","_XkbClientMapRec","_XkbColor","_XkbCompatMapRec","_XkbComponentList","_XkbComponentNames","_XkbControls","_XkbControlsChanges","_XkbControlsNotify","_XkbControlsNotifyEvent","_XkbDesc","_XkbDeviceChanges","_XkbDeviceInfo","_XkbDeviceLedInfo","_XkbDoodad","_XkbExtensionDeviceNotify","_XkbExtensionDeviceNotifyEvent","_XkbGeometry","_XkbGeometrySizes","_XkbIndicatorMapRec","_XkbIndicatorRec","_XkbKey","_XkbKeyAliasRec","_XkbKeyNameRec","_XkbKeyType","_XkbMapChanges","_XkbMapNotifyEvent","_XkbMods","_XkbNameChanges","_XkbNamesNotify","_XkbNamesNotifyEvent","_XkbNamesRec","_XkbOutline","_XkbOverlay","_XkbOverlayKey","_XkbOverlayRow","_XkbProperty","_XkbRow","_XkbSection","_XkbServerMapRec","_XkbShape","_XkbStateRec","_XkbSymInterpretRec","_XrmHashBucketRec","_bindgen_data_","_type","_type","_type","_type","_type","_type","_type","_type","_type","_type","_type","_type","_type","_type","_type","_type","_type","_type","_type","_type","_use","_use","above","above","add","add_pixel","addr","address","alias","alias","all_chars_exist","all_event_masks","alpha","alpha","alpha","alphaMask","alpha_map","alpha_x_origin","alpha_y_origin","angle","angle1","angle2","any","arc_mode","argKind","as_bytes","as_bytes_mut","as_longs","as_longs_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_shorts","as_shorts_mut","ascent","ascent","associated_capability","associated_providers","atom","attach","attachment","attachment","attributes","auto_repeat_mode","auto_repeats","automatic","ax_options","ax_timeout","axt_ctrls_mask","axt_ctrls_values","axt_opts_mask","axt_opts_values","background","background_pixel","background_pixmap","backing_pixel","backing_pixel","backing_planes","backing_planes","backing_store","backing_store","backing_store","barrier","barrier","base","base_group","base_group","base_height","base_mods","base_mods","base_pixel","base_width","bell_class","bell_duration","bell_duration","bell_id","bell_percent","bell_percent","bell_pitch","bell_pitch","bit_gravity","bit_gravity","bitmap_bit_order","bitmap_pad","bitmap_unit","bits_per_pixel","bits_per_pixel","bits_per_pixel","bits_per_rgb","bits_per_rgb","black_pixel","blue","blue","blue","blue","blue","blueMask","blue_mask","blue_mask","blue_mask","blue_max","blue_mult","border_bottom","border_left","border_pixel","border_pixmap","border_right","border_top","border_width","border_width","border_width","border_width","border_width","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bottom","bottom","button","button","buttons","buttons","byte1","byte2","byte_order","bytes_per_line","callback","callback","cap_style","capabilities","card32","caret","center","changed","changed","changed","changed","changed","changed_ctrls","changed_groups","changed_groups","changed_indicators","changed_vmods","chars","chars","chars","chars","chars","chars","chars","chars_matched","charset_count","charset_list","chg_first","chg_length","child","child","child","circulate","circulate_request","class","class","class","class","class","class","classes","classes","classes","client_data","client_data","client_message","clip_mask","clip_mask","clip_x_origin","clip_x_origin","clip_y_origin","clip_y_origin","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clones","closure","cmap","colormap","colormap","colormap","colormap","colormap","colormap","colormap_size","comment","comment_type","comments","compat","compat","compat_grab_mods","compat_grab_mods","compat_lookup_mods","compat_lookup_mods","compat_state","compat_state","component_alpha","compose_ptr","configTimestamp","config_timestamp","configure","configure_request","connection","connection","control","cookie","count","count","count","create_image","create_window","crossing","crtc","crtc","crtc","crtcs","crtcs","crtcs","ctrls","currentFilter","currentNparams","currentParams","currentTransform","current_role","cursor","cursor","cursors","cursors","dash_offset","dashes","data","data","data","data","data","debounce_delay","debounce_delay","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default_char","default_gc","delay","delay","delta","delta","delta","delta","depth","depth","depth","depth","depth","depth","depth","depths","descent","descent","description","destroy_image","destroy_window","detach","detail","detail","detail","detail","detail","detail","detail","detail","device","device","device","device","device","device","device","device","device","device","device","device","device_id","device_id","device_spec","deviceid","deviceid","deviceid","deviceid","deviceid","deviceid","deviceid","deviceid","deviceid","deviceid","deviceid","deviceid","deviceid","deviceid","direct","direction","direction","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","dither","do_not_propagate_mask","do_not_propagate_mask","dotClock","dpy","dpy","drawable","drawable","dtime","duration","dx","dy","effective","enable","enabled","enabled","enabled_ctrl_changes","enabled_ctrls","enabled_ctrls","encoding","encoding_is_wchar","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","error","error_code","event","event","event","event","event","event","event","event","event","event","event","event","event_mask","event_only","event_type","event_type","event_type_base","event_x","event_x","event_y","event_y","eventid","eventid","evtype","evtype","evtype","evtype","evtype","evtype","evtype","evtype","evtype","evtype","expose","ext_data","ext_data","ext_data","ext_data","extension","extension","extension","extension","extension","extension","extension","extension","extension","extension","extension","family","feedback","fid","fill_rule","fill_style","filter","first_btn","first_error","first_event","first_key","first_key_act","first_key_bahavior","first_key_explicit","first_key_sym","first_keycode","first_lvl","first_modmap_key","first_si","first_type","first_type","first_vmodmap_key","flags","flags","flags","flags","flags","flags","flags","flags","flags","flags","flags","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","focus","focus","focus_change","font","font","font","font_set","font_set","foreground","format","format","format","free_private","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_configure","funcs","function","generic_event_cookie","geom","geometry","get_byte","get_long","get_pixel","get_short","get_type","global_auto_repeat","glyphset","glyphset","glyphset","grab_mods","grab_mods","graphics_expose","graphics_exposures","graphics_exposures","gravity","green","green","green","green","green","greenMask","green_mask","green_mask","green_mask","green_max","green_mult","group","group","group","group","group","groups","groups","groups_wrap","hSkew","hSyncEnd","hSyncStart","hTotal","header","header","height","height","height","height","height","height","height","height","height","height","height","height","height","height","height","height","height","height","height","height","height","height","height_inc","height_inc","icon_mask","icon_pixmap","icon_window","icon_x","icon_y","id","id","id","id","id","ignore_loc","images","immutable","increment","indicators","indicators","info","initial_state","inner","input","input_class","inputclassinfo","internal","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_hint","join_style","key","key","key_aliases","key_click_percent","key_click_percent","key_event_follows","key_vector","keycode","keycode","keycode","keycode","keycode","keycodes","keycodes","keymap","keys","killid","kind","label","labels","latched","latched_group","latched_group","latched_mods","latched_mods","lbearing","led","led_class","led_id","led_mask","led_mode","led_state","leds_defined","left","left","left","length","length","length","length","length","length","line_style","line_width","locked","locked_group","locked_group","locked_mods","locked_mods","lookup_mods","lookup_mods","magic","major_code","major_code","major_opcode","major_version","map","map","map_entries","map_installed","map_request","map_state","mapping","maps","mask","mask","mask","mask","mask_len","mask_len","mask_len","matrix","max","max_aspect","max_bounds","max_byte1","max_char_or_byte2","max_height","max_height","max_ink_extent","max_key_code","max_key_code","max_key_code","max_keypermod","max_logical_extent","max_maps","max_width","max_width","message","message_type","mheight","mheight","mheight","mheight","min","min_aspect","min_bounds","min_byte1","min_char_or_byte2","min_height","min_height","min_key_code","min_key_code","min_key_code","min_maps","min_width","min_width","minor_code","minor_code","minor_code","minor_version","mk_curve","mk_delay","mk_dflt_btn","mk_interval","mk_max_speed","mk_time_to_max","mm_height","mm_width","mode","mode","mode","mode","mode","mode","mode","mode","modeFlags","modes","modes","modifiermap","modifiers","mods","mods","mods","mods","mods","motion","multi_byte","mwidth","mwidth","mwidth","mwidth","n_properties","nalias","name","name","name","name","name","name","name","name","name","name","name","nameLen","nameLen","nameLength","names","nassociatedproviders","nchars","nchars","nchars","nchars","nchars","nchars","nchars","nclone","ncomment","ncrtc","ncrtc","ncrtcs","ncursor","ndepths","new","new","new","new_master","next","nfilter","nimage","nitems","nmode","nmode","no_expose","noutput","noutput","noutput","noutputs","npossible","npreferred","nproviders","ntoc","num_aliases","num_btns","num_buttons","num_classes","num_classes","num_classes","num_classes","num_classes","num_groups","num_groups","num_info","num_key_acts","num_key_aliases","num_key_behaviors","num_key_explicit","num_key_syms","num_keycodes","num_keys","num_keys","num_lvls","num_modmap_keys","num_radio_groups","num_rg","num_si","num_si","num_total_si","num_touches","num_types","num_types","num_values","num_vmodmap_keys","number","number","number","nvisuals","obdata","old_device","old_max_key_code","old_min_key_code","open","open","open","open","open","open","open","open","option","outer","output","output","outputs","outputs","outputs","outputs","override_redirect","override_redirect","override_redirect","override_redirect","override_redirect","override_redirect","owner","p1","p1","p1","p2","p2","p2","p3","pad","pad","parent","parent","parent","parent","parent","pending","pendingFilter","pendingNparams","pendingParams","pendingTransform","per_char","per_key_repeat","percent","phys_indicators","phys_symbols","pitch","pixel","pixel","pixels","place","place","plane_mask","poly_edge","poly_mode","position","position","possible","present","press","primary","private_data","properties","property","property","property","property","property","property","provide","provider","provider","providers","ptr_buttons","ptr_buttons","put_pixel","radio_groups","radius","range","raw_values","rbearing","read","real","real_mods","reason","reason","red","red","red","red","red","redMask","red_mask","red_mask","red_mask","red_max","red_mult","ref_","remove","reparent","repeat","repeat_delay","repeat_interval","req_major","req_major","req_major","req_minor","req_minor","req_minor","request","request_code","requestor","requestor","res_class","res_name","resize_request","resolution","resourceid","return_keyboard","return_mode","return_pointer","right","right","root","root","root","root","root","root","root","root","root","root","root","root_depth","root_input_mask","root_visual","root_x","root_x","root_x","root_y","root_y","root_y","rotation","rotation","rotation","rotation","rotations","same_screen","same_screen","same_screen","same_screen","same_screen","save_under","save_under","save_unders","scanline_pad","scanline_pad","screen","screen","scroll_type","seek","selection","selection","selection","selection","selection_clear","selection_request","send_core","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","sequence","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","server","set_byte","set_long","set_short","sibling","size","size","size","size_index","size_si","sk_delay","slow_keys_delay","sourceid","sourceid","sourceid","sourceid","sourceid","sourceid","sourceid","sourceid","sourceid","sourceid","sourceid","sourceid","specifier","stack_mode","state","state","state","state","state","state","state","state","state","state","state","status","stipple","string","style","sub_image","subpixel_order","subpixel_order","subpixel_order","subtype","subtype","subtype","subtype","subtype","subtype","subtype","subtype","subtype","subwindow","subwindow","subwindow","subwindow","subwindow_mode","subwindow_mode","supported","sym_interpret","symbols","target","target","text","tile","time","time","time","time","time","time","time","time","time","time","time","time","time","time","time","time","time","time","time","time","time","time","time","time","time","time","time","time","time","time","time","timestamp","timestamp","timestamp","timestamp","timestamp","timestamp","timestamp","timestamp","timestamp","timestamp","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","tocs","top","top","top","touchid","track_height","track_left","track_top","track_width","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","ts_x_origin","ts_y_origin","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","typelength","types","unmap","unsupported","use_","vSyncEnd","vSyncStart","vTotal","valuators","valuators","value","value","value","value","value_mask","valuelength","values","values","version","version","version","version","visibility","visual","visual","visualid","visualid","visualid","visuals","vmods","vmods","vmods","what","white_pixel","wide_char","width","width","width","width","width","width","width","width","width","width","width","width","width","width","width","width","width","width","width","width","width","width","width","width_inc","width_inc","win_gravity","win_gravity","win_gravity","window","window","window","window","window","window","window","window","window","window","window","window","window","window","window","window","window","window","window","window","window","window","window","window","window","window","window","window","window","window","window","window","window","window","window_group","write","x","x","x","x","x","x","x","x","x","x","x","x","x","x","x","x","x","x","x","x","x","x","x","x","x","x","x1","x2","xError","xEvent","xOff","xOff","xOff","xOff","x_root","x_root","x_root","x_root","xcb_connection_t","xf86vm_notify","xhot","xkb","xkb_type","xkb_type","xkb_type","xkb_type","xkb_type","xkb_type","xkb_type","xkb_type","xkb_type","xkb_type","xkb_type","xkb_type","xoffset","xrr_crtc_change_notify","xrr_notify","xrr_output_change_notify","xrr_output_property_notify","xrr_provider_change_notify","xrr_provider_property_notify","xrr_resource_change_notify","xrr_screen_change_notify","xss_notify","y","y","y","y","y","y","y","y","y","y","y","y","y","y","y","y","y","y","y","y","y","y","y","y","y","y","y","y1","y2","yOff","yOff","yOff","yOff","y_root","y_root","y_root","y_root","yhot","your_event_mask","AaRect","Add","Append","CARDINAL_SIZE","Cardinal","Char","ClientMsgPayload","Combo","Desktop","Dialog","Dnd","Dock","DropdownMenu","EnvVarDPI","FORMAT","Flusher","Format","FormatMismatch","Formattable","FrameExtents","FrameExtentsHeuristic","FrameExtentsHeuristicPath","Geometry","GetPropertyError","LogicalFrameExtents","Long","Menu","MotifHints","Normal","NormalHints","NotSet","NothingAllocated","Notification","PointerState","PopupMenu","Prepend","PropMode","Randr","Remove","Replace","Scale","Short","Splash","StateOperation","Supported","Toggle","Toolbar","Tooltip","TranslatedCoords","TypeMismatch","UnsupportedBordered","UnsupportedNested","Utility","VIRTUAL_CORE_KEYBOARD","VIRTUAL_CORE_POINTER","WindowType","XError","XSmartPointer","border","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bottom","bottom","calc_dpi_factor","child","child","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","contains_point","default","default","default","depth","deref","deref_mut","drop","drop","eq","eq","eq","equivalent","equivalent","equivalent","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","frame_extents","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_border","from_format","get_actual_size","get_modifier_state","get_overlapping_area","get_position","group","has_flag","height","heuristic_path","hint_is_supported","inner_pos_to_outer","inner_size_to_outer","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_actual_property_type","keys","left","left","maybe_change","modifiers","new","new","new","new","new","new","partial_cmp","ptr","queue","relative_to_window","right","right","root","root","root_x","root_y","set_base_size","set_decorations","set_max_size","set_maximizable","set_min_size","set_position","set_resize_increments","set_size","sync","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","top","top","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","width","win_x","win_y","wm_name_is_one_of","x_rel_parent","x_rel_root","y_rel_parent","y_rel_root","Keymap","KeymapIter","borrow","borrow","borrow_mut","borrow_mut","from","from","into","into","into_iter","into_iter","iter","next","try_from","try_from","try_into","try_into","type_id","type_id","Alt","Ctrl","Logo","Modifier","ModifierKeyState","ModifierKeymap","Shift","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","default","eq","equivalent","fmt","fmt","fmt","from","from","from","get_modifier","into","into","into","key_event","key_press","key_release","modifiers","new","reset_from_x_connection","reset_from_x_keymap","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","update_keymap","update_state","Alias","AllScroll","Arrow","BadIcon","Borderless","ByteCountNotDivisibleBy4","Cell","ColResize","Confined","ContextMenu","Copy","Critical","Crosshair","CursorGrabMode","CursorIcon","Dark","Default","DimensionsVsPixelCount","EResize","EwResize","Exclusive","Fullscreen","Grab","Grabbing","Hand","Help","Icon","Informational","Light","Locked","Move","NResize","NeResize","NeswResize","NoDrop","None","NotAllowed","NsResize","NwResize","NwseResize","OsError","Progress","RowResize","SResize","SeResize","SwResize","Text","Theme","UserAttentionType","VerticalText","WResize","Wait","Window","WindowBuilder","WindowId","ZoomIn","ZoomOut","available_monitors","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","current_monitor","default","default","default","drag_window","drop","dummy","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","focus_window","from","from","from","from","from","from","from","from","from","from","from","from_rgba","fullscreen","hash","hash","hash","id","inner_position","inner_size","into","into","into","into","into","into","into","into","into","into","is_decorated","is_maximized","is_ready","is_resizable","is_visible","new","new","outer_position","outer_size","partial_cmp","primary_monitor","provide","raw_display_handle","raw_window_handle","raw_window_handle","request_redraw","request_user_attention","scale_factor","set_always_on_top","set_cursor_grab","set_cursor_hittest","set_cursor_icon","set_cursor_position","set_cursor_visible","set_decorations","set_fullscreen","set_ime_allowed","set_ime_position","set_inner_size","set_max_inner_size","set_maximized","set_min_inner_size","set_minimized","set_outer_position","set_resizable","set_title","set_visible","set_window_icon","source","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","transparent","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","wayland_display","wayland_set_csd_theme","wayland_surface","with_always_on_top","with_base_size","with_decorations","with_fullscreen","with_gtk_theme_variant","with_inner_size","with_max_inner_size","with_maximized","with_min_inner_size","with_name","with_override_redirect","with_position","with_resizable","with_resize_increments","with_title","with_transparent","with_visible","with_wayland_csd_theme","with_window_icon","with_x11_screen","with_x11_visual","with_x11_window_type","xcb_connection","xlib_display","xlib_screen_id","xlib_window","byte_count","height","pixel_count","width","width_x_height"],"q":[[0,"glutin"],[324,"glutin::GlRequest"],[326,"glutin::dpi"],[467,"glutin::error"],[508,"glutin::event"],[1013,"glutin::event::DeviceEvent"],[1020,"glutin::event::Event"],[1024,"glutin::event::Force"],[1027,"glutin::event::StartCause"],[1031,"glutin::event::WindowEvent"],[1055,"glutin::event_loop"],[1179,"glutin::monitor"],[1225,"glutin::platform"],[1231,"glutin::platform::run_return"],[1234,"glutin::platform::unix"],[1340,"glutin::platform::unix::x11"],[1591,"glutin::platform::unix::x11::ffi"],[9947,"glutin::platform::unix::x11::util"],[10235,"glutin::platform::unix::x11::util::keys"],[10255,"glutin::platform::unix::x11::util::modifiers"],[10306,"glutin::window"],[10570,"glutin::window::BadIcon"]],"d":["All APIs related to OpenGL that you can possibly get while …","Include all the immediate more functions and definitions.","Represents an OpenGL <code>Context</code>.","An object that allows you to build <code>Context</code>s, <code>RawContext&lt;T&gt;</code>…","A trait implemented on both <code>NotCurrent</code> and <code>PossiblyCurrent</code>.","Error that can happen when manipulating an OpenGL <code>Context</code>.","","A context which has an underlying window, which may or may …","Include all the future-compatible functions and …","Error that can happen while creating a window or a …","We received multiple errors, instead of one.","Flushes the context that was previously current as if …","","The minimum core profile GL context. Useful for getting …","Attributes to use when creating an OpenGL <code>Context</code>.","Describes the requested OpenGL <code>Context</code> profiles.","Describes the OpenGL API and version that are being …","If OpenGL is available, create an OpenGL <code>Context</code> with the …","","Request the latest version of the “best” API of this …","","","The driver doesn’t check anything. This option is very …","Doesn’t do anything. Most notably doesn’t flush.","A type that <code>Context</code>s which are not currently current on …","Not everything is checked. Your application can crash if …","","The classical OpenGL. Available on Windows, Unix operating …","OpenGL embedded system. Available on Unix operating …","","","General platform error.","Describes a possible format.","Describes how the backend should choose a pixel format.","","A type that <code>Context</code>s which might possibly be currently …","Represents an OpenGL <code>Context</code> which has an underlying …","","The behavior of the driver when you change the current …","Everything is checked to avoid any crash. If a problem …","Everything is checked to avoid any crash. The driver will …","Specifies the tolerance of the OpenGL <code>Context</code> to faults. …","","Request a specific version of a specific API.","Same as <code>RobustLoseContextOnReset</code> but the context creation …","Same as <code>RobustNoResetNotification</code> but the context creation …","OpenGL for the web. Very similar to OpenGL ES.","","Represents an OpenGL <code>Context</code> and the <code>Window</code> with which it …","","Minimum number of bits for the alpha in the color buffer. …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Query the underlying surface back’s buffer age.","Builds the given GL context.","","","","","Builds the given window along with the associated GL …","","","","","","","","","","","","","","","","","","","","","","","","","The number of color bits. Does not include alpha bits.","Minimum number of bits for the color buffer, excluding …","Borrow the inner GL <code>Context</code>.","Whether to enable the <code>debug</code> flag of the context.","","","","","Minimum number of bits for the depth buffer. <code>None</code> means “…","","","If true, only double-buffered formats will be considered. …","UI scaling is important, so read the docs for this module …","","","","","","","","","","","","The <code>Event</code> enum and assorted supporting types.","The <code>EventLoop</code> struct and assorted supporting types, …","If true, the color buffer must be in a floating point …","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","See <code>ContextWrapper::get_api()</code>.","Returns the OpenGL API being used.","","Returns the pixel format of the main framebuffer of the …","See <code>ContextWrapper::get_proc_address()</code>.","Returns the address of an OpenGL function.","The attributes to use to create the context.","","If true, only hardware-accelerated formats will be …","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","See <code>ContextWrapper::is_current()</code>.","Returns true if this context is the current one in this …","See <code>ContextWrapper::make_current()</code>.","Sets this context as the current context. The previously …","See <code>ContextWrapper::make_not_current()</code>.","If this context is current, makes this context not …","Turns the <code>sharing</code> parameter into another type by calling a …","Types useful for interacting with a user’s monitors.","<code>None</code> if multisampling is disabled, otherwise <code>Some(N)</code> where …","Contains the minimum number of samples per pixel in the …","Initializes a new <code>ContextBuilder</code> with default values.","The pixel format requirements","Contains traits with platform-specific methods in them.","OpenGL profile to use.","","","","The behavior when changing the current context. Default is …","Resize the context.","How the OpenGL <code>Context</code> should detect errors.","An existing context with which some OpenGL objects get …","","Split the <code>Window</code> apart from the OpenGL <code>Context</code>. Should …","Split the <code>Window</code> apart from the OpenGL <code>Context</code>. Should …","","If true, only sRGB-capable formats will be considered. If …","","Minimum number of stencil bits. <code>None</code> means “don’t care…","","If true, only stereoscopic formats will be considered. If …","Swaps the buffers in case of double or triple buffering.","Swaps the buffers in case of double or triple buffering …","Returns whether or not swap_buffer_with_damage is …","Extract the desktop GL version, if any.","","","","","","","","","","","","","","","See <code>ContextWrapper::treat_as_current()</code>.","Treats this context as current, even if it is not current. …","See <code>ContextWrapper::treat_as_not_current()</code>.","Treats this context as not current, even if it is current. …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Version to try create. See <code>GlRequest</code> for more infos.","Whether to use vsync. If vsync is enabled, calling …","","The <code>Window</code> struct and associated types.","Borrow the inner <code>W</code>.","Borrow the inner <code>W</code>.","Sets the number of bits in the depth buffer.","Sets whether double buffering should be enabled.","Sets how the backend should choose the OpenGL API and …","Sets the <em>debug</em> flag for the OpenGL <code>Context</code>.","Sets the desired OpenGL <code>Context</code> profile.","Sets the robustness of the OpenGL <code>Context</code>. See the docs of …","Sets whether hardware acceleration is required.","Sets the multisampling level to request. A value of <code>0</code> …","Sets the number of bits in the color buffer.","Share the display lists with the given <code>Context</code>.","Sets whether sRGB should be enabled on the window.","Sets the number of bits in the stencil buffer.","Request the backend to be stereoscopic.","Requests that the window has vsync enabled.","","","The version to use for OpenGL.","The version to use for OpenGL ES.","","","A position represented in logical pixels.","A size represented in logical pixels.","","","A position represented in physical pixels.","A size represented in physical pixels.","","A position that’s either physical or logical.","A size that’s either physical or logical.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Checks that the scale factor is a normal positive <code>f64</code>.","","","","","","","An error whose cause it outside Winit’s control.","The operation is not supported by the backend.","The error type for when the requested operation is not …","The OS cannot perform the operation.","The error type for when the OS cannot perform the …","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","The “alt” key.","","","","","","","","","Identifier for a specific analog axis on some device.","Motion on some analog axis. May report data redundant to …","","The Backspace key, right over Enter.","","","Identifier for a specific button on some device.","","The “control” key.","","On iOS, the force is calibrated so that the same number …","","","","The window has been requested to close.","","","Notifies when text should be inserted into the editor …","The “Compose” key on Linux.","","","The cursor has entered the window.","The cursor has left the window.","The cursor has moved on the window.","","","","The window has been destroyed.","Represents raw hardware events that are not associated …","Emitted when the OS sends an event to a device.","Identifier of an input device.","Notifies when the IME was disabled.","","A file has been dropped into the window.","","Describes the input state of a key.","Notifies when the IME was enabled.","","","","The Escape key, next to F1.","Describes a generic event.","","","","","","","","","","","","","","","","","","","","","","","","","","The window gained or lost focus.","Describes the force of a touch event","","","","","A file is being hovered over the window.","A file was hovered, but has exited the window.","","Describes input method events.","An event from an input method.","Sent once, immediately after <code>run</code> is called. Indicates that …","<code>Insert</code>, next to Backspace.","","","","","","The ‘0’ key over the ‘O’ and ‘P’ keys.","The ‘1’ key over the letters.","The ‘2’ key over the letters.","The ‘3’ key over the letters.","The ‘4’ key over the letters.","The ‘5’ key over the letters.","The ‘6’ key over the letters.","The ‘7’ key over the letters.","The ‘8’ key over the letters.","The ‘9’ key over the letters.","Describes a keyboard input event.","An event from the keyboard has been received.","","","","","This is the “windows” key on PC and “command” key …","","","","","Amount in lines or rows to scroll in the horizontal and …","Emitted when the event loop is being shut down.","","","Emitted when all of the event loop’s input events have …","","","","","The keyboard modifiers have changed.","Represents the current state of the keyboard modifiers","Motion on some analog axis. This event will be reported …","Describes a button of a mouse controller.","An mouse button press has been received.","Change in physical position of a pointing device.","Describes a difference in the mouse scroll wheel state.","A mouse wheel movement or touchpad scroll occurred.","Physical scroll event","The position of the window has changed. Contains the window…","","","","","","","Emitted when new events arrive from the OS to be processed.","","","If the platform reports the force as normalized, we have …","","","","","","","","","","","","","","","","","","","","","","The window has been occluded (completely hidden from view).","","","","","","Pause/Break key, next to Scroll lock.","","Amount in pixels to scroll in the horizontal and vertical …","","","Sent if the event loop is being resumed after the loop’s …","","Notifies when a new composing text should be set at the …","","","","","","","","","","The window received a unicode character.","Emitted after all <code>RedrawRequested</code> events have been …","Emitted after <code>MainEventsCleared</code> when a window should be …","","","The size of the window has changed. Contains the client …","Sent if the time specified by <code>ControlFlow::WaitUntil</code> has …","Emitted when the application has been resumed.","The Enter key.","","","","The “shift” key.","The window’s scale factor has changed.","Hardware-dependent keyboard scan code.","Scroll Lock.","","","","Print Screen/SysRq.","The space bar.","Describes the reason the event loop is resuming.","","","Emitted when the application has been suspended.","","","","","The system window theme has changed.","Represents a touch event","Touch event has been received","Describes touch-screen input state.","Touchpad pressure event.","","","","","Emitted when an event is sent from …","","Symbolic name for a keyboard key.","","","","Sent if the OS has new events to send to the window, after …","","","","","","","","","Describes an event from a [<code>Window</code>].","Emitted when the OS sends an event to a winit window.","","","","","Returns the set containing all flags.","Returns <code>true</code> if the alt key is pressed.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if the control key is pressed.","","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns a dummy id, useful for unit testing.","Returns an empty set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Describes how hard the screen was pressed. May be <code>None</code> if …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","","","","","","","","Unique identifier of a finger.","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","","Returns <code>true</code> if the logo key is pressed.","","Modifier keys active at the time of this input.","Returns the force normalized to the range between 0.0 and …","Returns the complement of this set of flags.","","","","","Removes the specified flags in-place.","Identifies the physical key pressed","Inserts or removes the specified flags depending on the …","Returns <code>true</code> if the shift key is pressed.","","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","","","","","","","","","","","","","","","","If the event doesn’t contain a reference, turn it into …","","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Identifies the semantic meaning of the key","","","","(x, y) change in position in unspecified units.","","","","","","","","The altitude (in radians) of the stylus.","The force of the touch, where a value of 1.0 represents …","The maximum possible force for a touch.","","","","","","","","","","","","","","","","","If <code>true</code>, the event was generated synthetically by winit in …","","","","","","(x,y) coords in pixels relative to the top-left corner of …","","","","","","Always filter out device events.","Set by the user callback given to the <code>EventLoop::run</code> …","Filter controlling the propagation of device events.","Provides a way to retrieve events from the system and from …","Object that allows building the event loop.","The error that is returned when an <code>EventLoopProxy</code> attempts …","Used to send custom events to <code>EventLoop</code>.","Target that associates windows with an <code>EventLoop</code>.","Alias for <code>ExitWithCode</code><code>(0)</code>.","Send a <code>LoopDestroyed</code> event and stop the event loop. This …","Report all device events regardless of window focus.","When the current loop iteration finishes, immediately …","Filter out device events while the window is not focused.","When the current loop iteration finishes, suspend the …","When the current loop iteration finishes, suspend the …","Returns the list of all the monitors available on the …","","","","","","","","","","","","","","","Builds a new event loop.","","","","","","","","","","Creates an <code>EventLoopProxy</code> that can be used to dispatch …","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Alias for <code>EventLoopBuilder::new().build()</code>.","Start building a new event loop.","","Returns the primary monitor of the system.","","Returns a <code>raw_window_handle::RawDisplayHandle</code> for the …","Hijacks the calling thread and initializes the winit event …","","Send an event to the <code>EventLoop</code> from which this proxy was …","Change <code>DeviceEvent</code> filter mode.","Sets this to <code>Exit</code>.","Sets this to <code>ExitWithCode</code><code>(code)</code>.","Sets this to <code>Poll</code>.","Sets this to <code>Wait</code>.","Sets this to <code>WaitUntil</code><code>(instant)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Start building a new event loop, with the given type as …","","","Handle to a monitor.","Describes a fullscreen video mode of a monitor.","Returns the bit depth of this video mode, as in how many …","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns the monitor that this video mode is valid for. …","Returns a human-readable name of the monitor.","","","","Returns the top-left corner position of the monitor …","Returns the refresh rate of this video mode in mHz.","The monitor refresh rate used by the system.","Returns the scale factor that can be used to map logical …","Returns the resolution of this video mode.","Returns the monitor’s resolution.","","","","","","","","","","Returns all fullscreen video modes supported by this …","Platform-specific extensions for OpenGL <code>Context</code>s.","Raw context handle.","Returns a pointer to the <code>EGLDisplay</code> object of EGL that is …","Returns the raw context handle.","Platform-specific methods for event loops independent from …","Platform-specific methods for unix operating systems.","Additional methods on <code>EventLoop</code> to return control flow to …","A type provided by the user that can be passed through …","Initializes the <code>winit</code> event loop.","This should be used on the windows that are popped up by …","","A desktop feature. This can include a single window …","This is a dialog window.","This indicates the the window is being dragged. This …","A dock or panel feature. Typically a Window Manager would …","A dropdown menu that usually appears when the user clicks …","","Context handle for a egl context.","Additional methods on <code>EventLoopBuilder</code> that are specific …","Additional methods on <code>EventLoopWindowTarget</code> that are …","","Context handle for a glx context.","A unix-specific extension to the <code>ContextBuilder</code> which …","Failed to load one or several shared libraries.","","Pinnable menu windows. “Torn off” from the main …","Additional methods on <code>MonitorHandle</code> that are specific to …","This is a normal, top-level window.","The window is a notification. This property is typically …","A popup menu that usually appears when the user right …","A unix-specific extension for the <code>ContextBuilder</code> which …","Context handles available on Unix-like platforms.","The window is a splash screen displayed as an application …","","Toolbar windows. “Torn off” from the main application.","A tooltip window. Usually used to show additional …","A small persistent utility window, such as a palette or …","Additional methods on <code>WindowBuilder</code> that are specific to …","Additional methods on <code>Window</code> that are specific to Unix.","Error returned if this system doesn’t have XLib or can’…","Connecting to the X server with <code>XOpenDisplay</code> failed.","X window type. Maps directly to <code>_NET_WM_WINDOW_TYPE</code>.","The first argument in the provided hook will be the …","","","","","","","Builds an OsMesa context.","Creates a raw context on the provided surface.","Creates a raw context on the provided window.","Builds an EGL-surfaceless context.","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Check if the window is ready for drawing","True if the <code>EventLoopWindowTarget</code> uses Wayland.","True if the <code>EventLoopWindowTarget</code> uses X11.","Returns the inner identifier of the monitor.","","Hook to winit’s xlib error handling callback.","","","","","","","","","","","","","","","Returns a pointer to the <code>wl_display</code> object of wayland that …","Returns a pointer to the <code>wl_display</code> object of wayland that …","Updates <code>Theme</code> of window decorations.","Returns a pointer to the <code>wl_surface</code> object of wayland that …","Whether to allow the event loop to be created off of the …","Build window with base size hint. Only implemented on X11.","Build window with <code>_GTK_THEME_VARIANT</code> hint set to the …","Build window with the given <code>general</code> and <code>instance</code> names.","Build window with override-redirect flag; defaults to …","Build window with resize increment hint. Only implemented …","Force using Wayland.","Build window with certain decoration <code>Theme</code>","Force using X11.","","","Build window with <code>_NET_WM_WINDOW_TYPE</code> hints; defaults to …","","This function returns the underlying <code>xcb_connection_t</code> of …","Returns a pointer to the <code>Display</code> object of xlib that is …","","Returns the ID of the <code>Window</code> xlib object that is used by …","","","","","Failed to load one or several shared libraries.","","","","","A connection to an X server.","Error triggered by xlib.","Error returned if this system doesn’t have XLib or can’…","Connecting to the X server with <code>XOpenDisplay</code> failed.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Checks whether an error has been triggered by the previous …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","Ignores any previous error.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Update the device event filter based on window focus.","","","","Returns the <code>XConnection</code> of this events loop.","","","","","","","","","","","Exposes XRandR functions from version &lt; 1.5","Exposes XRandR functions from versioneturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codehis should be used on the windows that are popped up by …","A desktop feature. This can include a single window …","This is a dialog window.","This indicates the the window is being dragged. This …","A dock or panel feature. Typically a Window Manager would …","A dropdown menu that usually appears when the user clicks …","Represents values of <code>WINIT_HIDPI_FACTOR</code>.","","","","","","","","","","","","","Pinnable menu windows. “Torn off” from the main …","","This is a normal, top-level window.","","","","The window is a notification. This property is typically …","","A popup menu that usually appears when the user right …","","","","","","","","The window is a splash screen displayed as an application …","","","","Toolbar windows. “Torn off” from the main application.","A tooltip window. Usually used to show additional …","","","","","A small persistent utility window, such as a palette or …","","","X window type. Maps directly to <code>_NET_WM_WINDOW_TYPE</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","Self explanatory.","An error produced when using <code>Icon::from_rgba</code> with invalid …","Providing <code>None</code> to <code>Borderless</code> will fullscreen on the …","Produced when the length of the <code>rgba</code> argument isn’t …","","","The cursor is confined to the window area.","","","Platform-specific","A simple crosshair.","The behavior of cursor grabbing.","Describes the appearance of the mouse cursor.","","The platform-dependent default cursor.","Produced when the number of pixels (<code>rgba.len() / 4</code>) isn’…","Indicate that some edge is to be moved. For example, the …","","","Fullscreen modes.","Indicates something can be grabbed.","Indicates something is grabbed.","A hand (often used to indicate links in web browsers).","Help indicator (often rendered as a “?”)","An icon used for the window titlebar, taskbar, etc.","Platform-specific","","The cursor is locked inside the window area to the certain …","Indicates something is to be moved.","","","","","No grabbing of the cursor is performed.","Cursor showing that something cannot be done.","","","","Produced when underlying OS functionality failed to create …","Progress indicator. Shows that processing is being done. …","","","","","Indicates text that may be selected or edited.","","Platform-specific","","","Program busy indicator.","Represents a window.","Object that allows building windows.","Identifier of a window. Unique for each window.","","","Returns the list of all the monitors available on the …","","","","","","","","","","","","","","","","","","","","","Builds the window.","","","","","","","","","","","","","","","","","","Returns the monitor on which the window currently resides.","","","","Moves the window with the left mouse button until the …","","Returns a dummy id, useful for unit testing.","","","","","","","","","","","","","","","","","","","","","","","","Brings the window to the front and sets input focus. Has …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates an icon from 32bpp RGBA data.","Gets the window’s current fullscreen state.","","","","Returns an identifier unique to the window.","Returns the position of the top-left hand corner of the …","Returns the physical size of the window’s client area.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Gets the window’s current decorations state.","Gets the window’s current maximized state.","","Gets the window’s current resizable state.","Gets the window’s current visibility state.","Creates a new Window for platforms where this is …","Initializes a new builder with default values.","Returns the position of the top-left hand corner of the …","Returns the physical size of the entire window.","","Returns the primary monitor of the system.","","Returns a <code>raw_window_handle::RawDisplayHandle</code> used by the …","Returns a <code>raw_window_handle::RawWindowHandle</code> for the Window","Returns a <code>raw_window_handle_04::RawWindowHandle</code> for the …","Emits a <code>Event::RedrawRequested</code> event in the associated …","Requests user attention to the window, this has no effect …","Returns the scale factor that can be used to map logical …","Change whether or not the window will always be on top of …","Set grabbing mode on the cursor preventing it from leaving …","Modifies whether the window catches cursor events.","Modifies the cursor icon of the window.","Changes the position of the cursor in window coordinates.","Modifies the cursor’s visibility.","Turn window decorations on or off.","Sets the window to fullscreen or back.","Sets whether the window should get IME events","Sets location of IME candidate box in client area …","Modifies the inner size of the window.","Sets a maximum dimension size for the window.","Sets the window to maximized or back.","Sets a minimum dimension size for the window.","Sets the window to minimized or back","Modifies the position of the window.","Sets whether the window is resizable or not.","Modifies the title of the window.","Modifies the window’s visibility.","Sets the window icon.","","","","","","","","","","","Get whether the window will support transparency.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Sets whether or not the window will always be on top of …","","Sets whether the window should have a border, a title bar, …","Sets whether the window should be put into fullscreen upon …","","Requests the window to be of specific dimensions.","Sets the maximum dimensions a window can have.","Request that the window is maximized upon creation.","Sets the minimum dimensions a window can have.","","","Sets a desired initial position for the window.","Sets whether the window is resizable or not.","","Sets the initial title of the window in the title bar.","Sets whether the background of the window should be …","Sets whether the window will be initially visible or …","","Sets the window icon.","","","","","","","","","","","",""],"i":[0,22,0,0,0,0,35,0,22,0,10,25,35,0,0,0,0,23,35,23,10,10,24,25,0,24,10,21,21,10,10,35,0,0,10,0,0,0,0,24,24,0,10,23,24,24,21,10,0,26,27,9,1,8,2,5,10,35,21,22,23,24,25,26,27,28,29,9,1,8,2,5,10,35,21,22,23,24,25,26,27,28,29,2,5,5,5,5,5,5,1,8,5,21,22,23,24,25,26,27,28,29,1,8,5,21,22,23,24,25,26,27,28,29,26,27,2,28,5,27,28,26,27,2,26,27,0,21,22,24,25,29,21,22,24,25,29,0,0,0,27,9,1,8,2,5,10,10,35,35,21,22,23,24,25,26,27,28,29,9,1,8,2,5,10,10,35,21,22,23,24,25,26,27,28,29,9,2,9,2,9,2,5,26,27,29,9,1,8,2,5,10,35,21,22,23,24,25,26,27,28,29,9,2,9,2,9,2,28,0,26,27,5,5,0,28,10,35,9,27,2,28,28,10,19,2,26,27,26,27,26,27,2,2,2,23,1,8,5,21,22,23,24,25,26,27,28,29,10,35,9,2,9,2,9,1,8,2,5,10,35,21,22,23,24,25,26,27,28,29,9,1,8,2,5,10,35,21,22,23,24,25,26,27,28,29,9,1,8,2,5,10,35,21,22,23,24,25,26,27,28,29,28,28,29,0,19,2,5,5,5,5,5,5,5,5,5,5,5,5,5,5,29,29,361,361,53,56,0,0,53,56,0,0,0,0,0,50,51,52,7,53,56,50,51,52,7,53,56,49,50,51,52,7,53,50,51,52,7,53,56,50,51,52,7,53,56,50,51,52,7,50,51,52,7,53,56,50,51,52,7,50,51,52,7,53,56,50,50,50,51,51,51,52,52,52,7,7,7,53,53,53,56,56,56,49,51,7,50,52,50,51,52,7,52,7,50,51,52,7,53,56,50,51,52,7,53,56,51,7,53,56,50,51,52,7,53,56,50,52,53,56,50,51,52,7,53,56,50,51,52,7,53,56,50,51,52,7,53,56,0,52,7,50,51,50,51,0,63,0,63,0,63,62,36,63,62,36,62,62,63,63,62,62,36,36,63,62,36,63,62,36,63,62,36,62,63,62,36,63,62,36,63,62,36,63,62,36,78,64,78,78,69,78,78,78,78,78,0,67,78,78,78,69,0,78,64,78,74,72,78,78,67,78,78,71,78,78,78,67,67,67,78,78,78,67,0,65,0,71,78,67,78,0,71,78,72,78,78,0,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,67,0,78,78,78,78,67,67,78,0,67,66,78,78,78,78,78,69,78,78,78,78,78,78,78,78,78,78,0,67,78,78,78,78,64,78,78,76,78,77,65,78,78,65,78,78,76,78,67,0,69,0,67,69,0,67,69,67,72,78,78,78,78,78,65,78,78,74,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,67,76,78,78,78,78,78,78,77,78,78,66,78,71,75,78,78,78,78,78,78,78,78,67,65,65,75,69,67,66,65,78,76,78,78,64,67,0,78,78,78,78,78,78,0,72,78,65,78,78,78,69,67,0,67,0,67,78,78,78,78,65,78,0,78,78,78,66,78,78,78,78,78,78,78,78,0,65,78,78,78,78,64,64,64,64,64,64,64,64,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,64,68,78,64,64,64,64,64,73,64,68,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,64,66,68,70,71,72,75,76,78,64,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,64,64,64,64,64,73,65,66,67,68,69,70,71,72,73,74,75,76,77,78,64,64,64,64,64,64,68,70,71,72,75,76,78,64,73,64,64,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,64,64,64,73,64,65,70,74,64,68,78,64,73,64,70,64,64,70,64,64,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,64,65,67,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,64,64,70,362,363,364,365,366,363,362,367,368,367,368,369,369,369,370,371,370,371,372,373,374,375,376,377,378,374,373,379,372,375,375,376,374,373,380,374,376,379,380,379,373,372,88,0,0,0,0,0,0,0,86,86,88,86,88,86,86,6,84,6,85,83,86,87,88,84,6,85,83,86,87,88,83,85,86,87,88,85,86,87,88,88,84,84,83,86,88,84,86,87,88,86,87,88,84,6,85,86,87,87,88,84,6,85,83,86,87,88,87,88,84,6,85,83,86,87,88,6,6,84,83,88,6,87,6,84,84,85,6,86,86,86,86,86,85,86,87,88,87,84,6,85,83,86,87,88,84,6,85,83,86,87,88,84,6,85,83,86,87,88,6,83,84,83,83,83,0,0,95,95,89,95,89,95,89,95,89,95,89,95,89,95,89,95,95,89,95,89,95,95,89,95,89,89,95,89,89,95,89,89,95,89,95,89,95,95,89,95,89,95,89,89,0,381,381,381,0,0,0,382,382,98,104,98,98,98,98,98,0,97,0,0,0,97,0,99,104,98,0,98,98,98,0,0,98,0,98,98,98,0,0,0,99,0,0,97,98,99,97,98,99,383,384,384,383,97,98,99,97,98,99,98,98,98,97,98,99,99,97,98,99,99,98,97,98,99,385,386,386,387,99,0,99,97,98,99,99,97,98,99,97,98,99,97,98,99,386,385,385,385,388,389,389,389,389,389,388,389,388,389,389,389,0,385,385,385,385,0,0,0,0,99,0,0,0,0,0,0,0,99,15,15,15,111,15,113,111,15,139,120,118,121,113,112,117,119,111,15,139,120,118,121,113,112,117,119,15,15,118,113,112,117,119,118,113,112,117,119,112,119,120,111,15,121,117,15,111,15,121,112,119,113,112,119,113,112,119,117,0,15,15,113,112,117,117,119,111,111,15,139,120,118,121,113,112,117,119,111,15,15,15,15,15,15,15,15,15,15,15,15,15,113,112,119,111,15,111,111,111,15,139,120,118,121,113,112,117,119,111,111,111,15,111,15,15,15,15,117,113,112,112,15,120,111,111,112,119,112,111,15,117,15,15,111,139,111,113,112,117,111,111,120,120,111,112,15,15,15,15,15,118,111,15,111,111,111,15,111,111,111,111,139,111,111,111,111,111,111,111,111,15,15,111,111,111,111,111,15,111,113,112,15,118,113,112,117,119,117,15,111,15,139,120,118,121,113,112,117,119,111,15,139,120,118,121,113,112,117,119,111,15,139,120,118,121,113,112,117,119,15,139,0,112,15,139,111,111,15,15,15,111,111,111,15,111,15,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,341,339,0,0,0,0,339,339,339,339,339,339,339,339,339,0,0,0,0,390,339,339,341,341,341,341,341,339,339,341,339,339,341,339,339,339,0,0,339,339,339,339,339,0,0,0,339,339,339,0,339,339,0,339,341,339,339,339,0,0,0,0,0,0,339,0,339,0,0,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,0,0,339,339,339,339,339,339,339,339,339,339,339,339,339,339,341,339,339,339,339,339,339,339,339,0,0,341,0,0,0,0,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,0,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,0,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,0,339,0,0,339,0,339,0,0,0,339,0,339,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,339,339,339,339,339,339,339,339,339,0,339,339,0,339,339,0,0,0,0,0,0,0,339,339,339,339,339,339,341,341,341,341,339,339,341,339,339,339,339,339,339,339,339,339,0,339,0,339,339,339,339,339,339,341,341,341,341,341,341,341,341,339,339,339,341,341,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,341,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,343,339,0,0,0,0,339,341,341,341,339,339,339,339,0,0,339,339,0,0,0,0,0,0,342,342,0,0,0,0,0,0,0,0,0,0,0,0,0,0,342,0,342,0,0,0,0,0,0,0,342,342,0,0,342,342,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,342,342,342,342,342,342,342,342,342,0,0,342,0,0,0,0,0,0,342,0,0,0,0,0,0,0,0,0,0,0,0,342,0,251,251,251,0,0,251,0,251,251,0,251,251,252,252,252,251,251,251,339,0,0,0,0,0,0,0,251,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,342,342,342,0,0,0,0,0,0,0,0,0,0,0,342,342,342,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,342,342,342,342,342,342,342,0,0,0,342,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,339,339,0,339,0,339,339,339,0,0,0,0,0,339,339,339,339,339,339,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,339,0,339,339,339,339,0,0,0,339,341,339,339,339,339,341,339,339,339,339,339,339,339,339,339,0,0,339,0,339,0,339,339,0,339,0,339,339,0,339,339,339,339,339,0,0,339,339,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,339,339,339,0,339,0,0,339,339,341,339,339,339,0,339,339,339,339,339,0,339,0,0,0,339,0,0,339,339,0,339,339,339,339,339,339,339,339,339,339,339,339,341,339,339,339,339,339,339,339,345,346,345,346,345,346,345,345,346,345,346,345,346,345,346,345,346,345,346,345,346,345,346,345,346,345,346,345,346,0,0,0,0,345,345,346,345,346,345,346,345,346,345,346,345,346,345,346,345,345,346,345,346,345,346,345,346,345,346,345,346,345,346,345,346,345,346,345,346,345,345,346,345,346,345,346,345,346,345,346,345,346,345,346,345,346,345,346,345,346,345,346,345,346,345,346,0,0,0,0,0,0,0,0,0,0,0,0,0,345,346,345,346,345,346,345,346,345,346,0,345,346,345,346,0,0,0,0,345,346,345,346,345,346,345,346,345,345,346,345,346,345,346,345,346,345,346,345,346,345,346,345,346,345,346,345,346,0,339,339,339,339,339,339,339,0,339,339,339,339,339,339,344,344,344,0,344,344,344,344,344,344,344,344,344,344,344,344,344,344,344,344,344,344,344,344,0,344,344,344,344,344,344,344,344,344,0,0,344,344,344,344,344,344,344,344,344,344,344,344,0,339,339,0,339,339,339,339,339,339,339,339,339,339,339,339,0,341,339,0,0,0,339,341,0,339,339,339,339,339,339,339,339,339,339,339,339,339,341,341,341,341,341,339,343,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,0,339,339,339,339,339,339,339,339,0,0,0,0,339,339,339,339,339,339,339,0,339,339,339,339,339,339,339,339,0,0,0,339,0,339,339,0,0,339,0,0,0,0,339,339,341,341,341,339,339,339,339,339,339,339,339,339,0,339,339,339,339,0,339,0,339,0,339,0,339,0,339,339,339,339,339,0,0,339,339,339,339,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,339,339,339,339,0,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,0,0,339,339,339,339,339,339,0,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,0,0,340,340,340,0,0,0,340,340,0,340,340,0,340,340,0,0,0,340,340,340,340,340,340,0,340,340,340,340,340,340,340,340,340,340,340,0,340,340,340,340,0,340,340,340,340,340,340,340,340,340,340,340,340,340,0,340,340,340,340,340,340,340,340,340,340,340,0,340,340,340,340,340,0,0,0,0,0,0,0,0,339,339,339,339,339,339,339,339,339,339,339,339,339,339,0,0,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,0,339,339,339,339,0,0,0,0,339,339,339,339,339,339,0,0,0,0,0,0,0,0,0,0,0,0,339,339,339,339,339,0,0,0,0,0,339,339,0,339,339,0,0,0,0,0,0,0,0,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,0,0,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,0,0,0,0,0,339,0,0,0,0,0,0,0,0,339,0,0,0,0,0,0,0,339,339,339,0,0,0,0,0,0,0,0,0,0,339,339,339,339,339,339,339,339,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,339,339,339,339,0,0,0,0,0,0,0,0,339,0,0,0,0,0,0,339,339,339,339,339,339,0,0,339,339,0,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,0,0,0,0,0,0,0,339,339,339,339,339,339,339,339,339,0,390,0,339,339,339,339,339,339,339,339,0,339,339,339,339,0,0,0,0,339,339,0,339,339,339,339,339,339,339,339,339,0,0,0,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,0,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,0,339,339,339,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,148,148,149,279,193,280,285,286,287,288,289,290,294,296,297,298,299,300,301,302,303,291,295,169,171,148,258,239,226,195,307,224,249,312,318,319,319,321,321,321,306,216,216,143,225,238,150,150,150,150,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,150,150,150,150,150,150,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,150,150,150,150,150,150,150,150,218,224,335,335,170,148,291,295,218,230,231,336,391,391,391,391,391,391,225,241,241,241,249,241,249,213,241,249,293,303,281,198,202,109,198,202,242,109,207,230,231,207,230,231,230,231,241,249,229,229,229,214,229,235,215,247,213,219,312,318,319,331,319,215,229,247,242,242,333,333,241,241,333,333,169,171,164,249,250,392,393,394,395,136,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,391,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,390,100,339,143,190,184,191,182,183,185,169,171,164,166,189,152,165,168,156,161,135,187,163,186,158,178,181,170,160,180,172,162,155,167,177,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,107,219,220,221,222,223,224,225,188,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,109,242,243,244,245,246,247,248,249,250,110,251,252,253,254,255,256,257,150,258,340,259,260,261,262,263,264,265,266,267,268,341,269,270,271,272,273,274,275,276,277,278,342,149,279,193,280,148,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,343,344,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,445,345,327,328,131,329,330,132,331,332,333,334,335,336,153,154,159,176,157,174,173,175,346,392,393,394,395,136,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,391,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,390,100,339,143,190,184,191,182,183,185,169,171,164,166,189,152,165,168,156,161,135,187,163,186,158,178,181,170,160,180,172,162,155,167,177,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,107,219,220,221,222,223,224,225,188,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,109,242,243,244,245,246,247,248,249,250,110,251,252,253,254,255,256,257,150,258,340,259,260,261,262,263,264,265,266,267,268,341,269,270,271,272,273,274,275,276,277,278,342,149,279,193,280,148,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,343,344,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,445,345,327,328,131,329,330,132,331,332,333,334,335,336,153,154,159,176,157,174,173,175,346,323,324,143,184,298,300,217,217,229,229,442,443,225,335,222,253,306,200,201,202,204,205,203,205,206,205,205,232,243,244,248,308,309,310,220,234,234,253,253,298,300,302,143,143,215,247,249,275,276,277,269,291,297,442,443,143,225,321,225,321,225,321,100,143,190,184,191,182,183,185,169,171,164,166,189,152,165,168,156,161,135,187,163,186,158,178,181,170,160,180,172,162,155,167,177,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,107,219,220,221,222,223,224,225,188,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,109,242,243,244,245,246,247,248,249,250,110,251,252,253,254,255,256,257,150,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,149,279,193,280,148,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,131,329,330,132,331,332,333,334,335,336,153,154,159,176,157,174,173,175,100,143,190,184,191,182,183,185,169,171,164,166,189,152,165,168,156,161,135,187,163,186,158,178,181,170,160,180,172,162,155,167,177,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,107,219,220,221,222,223,224,225,188,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,109,242,243,244,245,246,247,248,249,250,110,251,252,253,254,255,256,257,150,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,149,279,193,280,148,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,131,329,330,132,331,332,333,334,335,336,153,154,159,176,157,174,173,175,329,264,213,143,185,241,242,249,320,247,261,261,262,194,197,198,202,198,202,198,202,321,220,131,153,143,143,329,159,270,188,165,156,186,258,143,143,329,159,176,131,329,335,194,332,332,332,332,174,241,304,259,263,225,225,183,188,229,272,273,391,209,150,149,279,193,280,148,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,224,213,267,304,232,243,244,248,212,214,229,235,247,249,320,213,218,224,100,258,143,148,100,171,166,168,209,298,299,300,199,200,201,202,203,204,205,206,207,208,209,210,269,272,194,279,193,280,284,291,293,295,297,298,299,300,301,302,303,320,224,254,190,184,191,182,183,185,169,171,164,166,189,152,165,168,156,161,135,187,163,186,158,178,181,170,160,180,172,162,155,167,177,199,200,201,202,203,204,205,206,207,208,209,210,213,188,294,296,297,298,299,300,301,302,303,153,154,159,176,157,174,173,175,321,241,249,328,194,263,156,181,303,207,303,303,281,149,291,295,203,391,203,245,256,190,184,191,182,183,185,169,171,164,166,189,152,165,168,156,161,135,187,163,186,158,178,181,170,160,180,172,162,155,167,177,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,107,219,220,221,222,223,224,225,188,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,109,242,243,244,245,246,247,248,249,250,110,251,252,253,254,257,150,258,269,270,271,272,273,274,275,276,277,278,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,131,329,330,132,331,332,333,334,335,336,153,154,159,176,157,174,173,175,143,152,191,169,189,161,163,186,160,167,298,300,302,303,241,207,202,203,278,298,300,298,300,293,303,188,294,296,297,298,299,300,301,302,303,143,213,214,215,224,221,188,294,296,297,298,299,300,301,302,303,226,256,224,225,225,307,210,221,221,205,201,201,201,201,186,205,201,206,201,205,201,194,201,219,109,110,289,295,296,298,299,302,303,100,100,143,190,184,191,182,183,185,169,171,164,166,189,152,165,168,156,161,135,187,163,186,158,178,181,170,160,180,172,162,155,167,177,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,107,219,220,221,222,223,224,225,188,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,109,242,243,244,245,246,247,248,249,250,110,251,252,253,254,257,150,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,149,279,193,280,148,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,131,329,330,132,331,332,333,334,335,336,153,154,159,176,157,174,173,175,166,300,143,225,243,244,232,248,225,183,229,245,441,392,393,394,395,136,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,391,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,390,100,339,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,190,190,190,184,184,184,191,191,191,182,182,182,183,183,183,185,185,185,169,169,169,171,171,171,164,164,164,166,166,166,189,189,189,152,152,152,165,165,165,168,168,168,156,156,156,161,161,161,135,135,135,187,187,187,163,163,163,186,186,186,158,158,158,178,178,178,181,181,181,170,170,170,160,160,160,180,180,180,172,172,172,162,162,162,155,155,155,167,167,167,177,177,177,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,107,219,220,221,222,223,224,225,188,188,188,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,109,242,243,244,245,246,247,248,249,250,110,251,252,253,254,255,256,257,150,150,150,150,150,150,150,258,340,259,260,261,262,263,264,265,266,267,268,341,269,270,271,272,273,274,275,276,277,278,342,149,279,193,280,148,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,343,344,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,445,345,327,328,131,329,330,132,331,332,333,334,335,336,153,153,153,154,154,154,159,159,159,176,176,176,157,157,157,174,174,174,173,173,173,175,175,175,346,167,229,225,143,194,197,150,150,258,150,143,231,308,309,310,198,202,143,225,321,143,219,312,318,319,331,319,215,229,247,242,242,198,202,208,298,300,438,197,391,328,328,328,328,260,265,169,171,164,165,156,180,213,216,229,237,109,249,250,267,311,327,328,132,333,336,153,176,228,109,110,110,110,110,110,271,275,276,320,328,391,268,330,289,194,197,296,110,317,110,278,271,391,392,393,394,395,136,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,391,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,390,100,339,143,190,184,191,182,183,185,169,171,164,166,189,152,165,168,156,161,135,187,163,186,158,178,181,170,160,180,172,162,155,167,177,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,107,219,220,221,222,223,224,225,188,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,109,242,243,244,245,246,247,248,249,250,110,251,252,253,254,255,256,257,150,258,340,259,260,261,262,263,264,265,266,267,268,341,269,270,271,272,273,274,275,276,277,278,342,149,279,193,280,148,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,343,344,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,445,345,327,328,131,329,330,132,331,332,333,334,335,336,153,154,159,176,157,174,173,175,346,178,225,143,230,197,230,231,208,187,135,202,203,208,209,197,287,143,197,242,100,288,286,281,198,202,198,202,218,230,210,210,231,230,210,210,322,324,333,226,256,270,275,276,277,225,225,281,198,202,198,202,198,202,265,156,181,221,274,143,194,215,249,143,249,143,439,425,282,283,284,282,283,284,326,288,109,224,224,224,228,109,223,194,200,201,233,223,213,228,109,208,183,213,327,336,153,288,109,224,224,224,228,109,194,200,201,213,228,109,152,156,181,274,391,391,391,391,391,391,329,329,166,168,288,290,300,132,159,176,328,131,329,233,292,198,202,208,298,300,143,255,213,327,336,153,224,307,196,207,222,268,271,149,291,328,329,335,336,329,335,328,194,335,232,243,244,248,308,309,310,329,262,131,329,335,263,213,100,150,185,193,441,307,268,245,131,329,143,131,132,336,335,132,329,334,265,205,210,286,269,271,272,291,297,391,203,296,201,197,201,201,201,287,197,205,205,201,205,197,438,206,206,290,201,205,330,201,441,288,289,212,229,200,200,200,339,340,341,342,343,344,345,346,238,317,159,157,131,132,335,336,169,164,163,160,241,249,155,313,314,325,313,314,325,325,143,219,182,171,164,158,160,330,332,332,332,332,224,391,207,439,197,207,219,312,267,191,182,225,321,321,254,266,132,274,208,336,441,224,143,162,155,301,157,173,100,174,173,334,198,202,258,197,305,330,299,218,264,195,425,210,297,219,312,318,319,331,319,215,229,247,242,242,263,148,143,321,391,391,200,202,203,200,202,203,186,152,162,155,107,107,143,288,152,279,279,279,322,324,184,166,135,178,213,249,298,300,302,303,153,213,213,213,298,300,303,298,300,303,132,153,159,176,132,184,166,135,178,300,241,249,213,214,235,247,249,289,264,143,172,162,155,143,143,149,190,184,191,182,183,185,169,171,164,166,189,165,168,156,161,135,187,163,186,158,178,181,170,160,180,172,162,155,167,177,199,200,201,202,203,204,205,206,207,208,209,210,188,294,296,297,298,299,300,301,302,303,153,154,159,176,157,174,173,175,259,190,184,191,182,183,185,169,171,164,166,189,152,165,168,156,161,135,187,163,186,158,178,181,170,160,180,172,162,155,167,177,199,200,201,202,203,204,205,206,207,208,209,210,188,294,296,297,298,299,300,301,302,303,153,154,159,176,157,174,173,175,194,150,150,150,250,239,267,331,153,438,209,391,285,286,287,288,289,290,297,298,299,300,302,303,238,250,184,185,166,135,178,170,177,204,286,157,173,292,225,256,254,258,329,153,159,260,266,154,159,176,157,174,173,175,184,166,135,178,225,321,210,438,197,162,155,253,225,184,166,135,178,170,172,162,155,199,200,201,202,203,204,205,206,207,208,209,210,246,273,294,296,297,298,299,300,301,302,303,131,329,132,333,334,153,157,174,173,175,100,143,190,184,191,182,183,185,169,171,164,166,189,152,165,168,156,161,135,187,163,186,158,178,181,170,160,180,172,162,155,167,177,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,107,219,220,221,222,223,224,225,188,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,109,242,243,244,245,246,247,248,249,250,110,251,252,253,254,255,256,257,150,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,149,279,193,280,148,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,131,329,330,132,331,332,333,334,335,336,153,154,159,176,157,174,173,175,100,265,323,324,333,302,333,333,333,333,392,393,394,395,136,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,391,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,390,100,339,143,190,184,191,182,183,185,169,171,164,166,189,152,165,168,156,161,135,187,163,186,158,178,181,170,160,180,172,162,155,167,177,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,107,219,220,221,222,223,224,225,188,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,109,242,243,244,245,246,247,248,249,250,110,251,252,253,254,255,256,257,150,258,340,259,260,261,262,263,264,265,266,267,268,341,269,270,271,272,273,274,275,276,277,278,342,149,279,193,280,148,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,343,344,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,445,345,327,328,131,329,330,132,331,332,333,334,335,336,153,154,159,176,157,174,173,175,346,392,393,394,395,136,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,391,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,390,100,339,143,190,184,191,182,183,185,169,171,164,166,189,152,165,168,156,161,135,187,163,186,158,178,181,170,160,180,172,162,155,167,177,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,107,219,220,221,222,223,224,225,188,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,109,242,243,244,245,246,247,248,249,250,110,251,252,253,254,255,256,257,150,258,340,259,260,261,262,263,264,265,266,267,268,341,269,270,271,272,273,274,275,276,277,278,342,149,279,193,280,148,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,343,344,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,445,345,327,328,131,329,330,132,331,332,333,334,335,336,153,154,159,176,157,174,173,175,346,225,225,143,190,184,191,182,183,185,169,171,164,166,189,152,165,168,156,161,135,187,163,186,158,178,181,170,160,180,172,162,155,167,177,199,200,201,202,203,204,205,206,207,208,209,210,188,227,260,266,271,320,153,154,159,176,157,174,173,175,392,393,394,395,136,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,391,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,390,100,339,143,190,184,191,182,183,185,169,171,164,166,189,152,165,168,156,161,135,187,163,186,158,178,181,170,160,180,172,162,155,167,177,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,107,219,220,221,222,223,224,225,188,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,109,242,243,244,245,246,247,248,249,250,110,251,252,253,254,255,256,257,150,258,340,259,260,261,262,263,264,265,266,267,268,341,269,270,271,272,273,274,275,276,277,278,342,149,279,193,280,148,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,343,344,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,445,345,327,328,131,329,330,132,331,332,333,334,335,336,153,154,159,176,157,174,173,175,346,227,197,143,210,271,328,328,328,298,299,227,238,245,288,171,227,283,330,260,261,265,267,143,247,249,215,242,247,212,425,197,201,301,213,255,169,171,164,165,156,180,213,216,218,229,237,109,249,250,267,311,327,328,132,333,336,153,176,228,109,241,109,249,190,184,191,182,183,185,169,171,164,166,189,165,168,161,135,187,163,158,178,170,160,180,172,167,177,207,153,154,159,176,157,174,173,175,110,264,184,169,171,164,166,165,156,161,135,178,160,216,236,237,109,246,249,250,257,305,311,315,316,132,336,176,240,240,0,0,308,309,310,311,184,166,135,178,0,143,267,0,199,200,201,202,203,204,205,206,207,208,209,210,229,143,143,143,143,143,143,143,143,143,184,169,171,164,166,165,156,161,135,178,160,216,236,237,109,246,249,250,257,305,311,315,316,322,132,336,176,240,240,308,309,310,311,184,166,135,178,267,249,0,351,114,0,0,347,0,98,98,98,98,98,98,0,115,0,0,133,0,0,0,0,0,0,0,347,98,0,98,0,446,133,98,0,98,114,0,446,351,114,446,347,98,0,350,351,98,98,0,133,350,350,98,0,0,0,133,0,127,129,130,138,108,446,116,347,128,147,127,348,349,350,126,351,133,114,129,130,138,108,446,116,347,128,147,127,348,349,350,126,351,133,114,348,349,0,138,147,347,128,348,349,350,126,133,347,128,348,349,350,126,133,347,128,129,147,127,127,108,108,138,108,347,128,350,347,128,350,116,347,128,147,127,348,349,350,126,351,133,114,126,129,130,138,108,446,116,347,128,147,127,348,349,350,126,351,351,133,114,348,347,347,138,128,130,138,0,127,126,0,126,126,129,130,138,108,446,116,347,128,147,127,348,349,350,126,351,133,114,133,0,348,349,0,0,129,130,108,116,128,348,347,108,116,138,348,349,138,127,138,138,130,129,130,129,130,130,130,130,116,347,128,348,349,350,126,133,348,349,129,130,138,108,446,116,347,128,147,127,348,349,350,126,351,133,114,129,130,138,108,446,116,347,128,147,127,348,349,350,126,351,133,114,129,130,138,108,446,116,347,128,147,127,348,349,350,126,351,133,114,127,138,138,0,127,147,127,147,0,0,137,354,137,354,137,354,137,354,137,354,137,354,137,354,137,354,137,354,355,355,355,0,0,0,355,355,357,356,355,357,356,355,356,355,356,357,356,355,355,355,357,356,355,357,356,357,355,357,356,356,356,356,356,357,357,357,355,356,355,357,356,355,357,356,355,357,356,356,356,145,145,145,0,122,359,145,145,144,145,145,141,145,0,0,104,145,359,145,145,122,0,145,145,145,145,0,141,104,144,145,145,145,145,145,144,145,145,145,145,359,145,145,145,145,145,145,0,0,145,145,145,0,0,0,145,145,43,43,359,146,358,18,144,145,122,104,141,43,359,146,358,18,144,145,122,104,141,18,146,358,18,144,145,122,104,141,146,358,18,144,145,122,104,141,358,43,18,145,141,43,43,358,358,144,145,122,104,141,358,144,145,122,104,141,43,359,359,146,358,18,144,145,122,104,141,43,43,359,146,358,358,18,144,145,122,104,141,146,43,358,144,145,43,43,43,43,359,146,358,18,144,145,122,104,141,43,43,43,43,43,43,18,43,43,358,43,359,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,359,146,358,18,144,145,122,104,141,359,18,43,359,146,358,18,144,145,122,104,141,43,359,146,358,18,144,145,122,104,141,43,359,146,358,18,144,145,122,104,141,43,43,43,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,43,43,43,43,447,448,448,448,448],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[2,[1]]],3],[[[5,[4]],6,[7,[3]]],[[11,[[9,[8]],10]]]],[[[5,[4]],[7,[3]]],[[11,[[9,[8]],10]]]],[[[5,[4]],12,13,3,3],[[11,[[14,[8]],10]]]],[[[5,[4]],[16,[15]],17],[[11,[[14,[8]],10]]]],[[[5,[4]],6],[[11,[[9,[8]],10]]]],[[[5,[4]],18,6],[[11,[[19,[8]],10]]]],[1,1],[8,8],[[[5,[[0,[20,4]]]]],[[5,[[0,[20,4]]]]]],[21,21],[22,22],[23,23],[24,24],[25,25],[26,26],[27,27],[[[28,[20]]],[[28,[20]]]],[29,29],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[[2,[4]]],[[9,[4]]]],0,[[],[[5,[8]]]],[[],27],[[],28],0,0,[[[2,[4]]]],0,0,0,[[21,21],30],[[22,22],30],[[24,24],30],[[25,25],30],[[29,29],30],[[],30],[[],30],[[],30],[[],30],[[],30],0,0,0,0,[[[9,[[0,[31,4]]]],32],33],[[1,32],33],[[8,32],33],[[[2,[[0,[31,4]],31]],32],33],[[[5,[[0,[31,4]]]],32],33],[[10,32],33],[[10,32],[[11,[34]]]],[[35,32],[[11,[34]]]],[[35,32],33],[[21,32],33],[[22,32],33],[[23,32],33],[[24,32],33],[[25,32],33],[[26,32],33],[[27,32],33],[[[28,[31]],32],33],[[29,32],33],[[]],[[]],[[]],[[]],[[]],[[]],[36,10],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[9,[4]]],21],[[[2,[4]]],21],[[[9,[4]]],[[37,[13]]]],[[[2,[1]]],26],[[[9,[1]],38],39],[[[2,[1]],38],39],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[9,[4]]],30],[[[2,[4]]],30],[[[9,[4]]],[[11,[[9,[1]]]]]],[[[2,[4]]],[[11,[[2,[1]]]]]],[[[9,[4]]],[[11,[[9,[8]]]]]],[[[2,[4]]],[[11,[[2,[8]]]]]],[[28,40],28],0,0,0,[[],[[5,[8]]]],0,0,0,[41],[41],[[[9,[4]]]],0,[[[2,[1]],[7,[3]]]],0,0,[10,[[37,[42]]]],[[[19,[4]]]],[[[2,[4,43]]]],0,0,0,0,0,0,[[[2,[1]]],[[11,[35]]]],[[[2,[1]],[44,[29]]],[[11,[35]]]],[[[2,[1]]],30],[23,37],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],45],[[],45],[[[9,[4]]],[[9,[1]]]],[[[2,[4]]],[[2,[1]]]],[[[9,[4]]],[[9,[8]]]],[[[2,[4]]],[[2,[8]]]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],0,0,0,0,[[[19,[4]]],43],[[[2,[4,43]]],43],[[[5,[4]],47],[[5,[4]]]],[[[5,[4]],[37,[30]]],[[5,[4]]]],[[[5,[4]],23],[[5,[4]]]],[[[5,[4]],30],[[5,[4]]]],[[[5,[4]],22],[[5,[4]]]],[[[5,[4]],24],[[5,[4]]]],[[[5,[4]],[37,[30]]],[[5,[4]]]],[[[5,[4]],48],[[5,[4]]]],[[[5,[4]],47,47],[[5,[4]]]],[[[5,[4]],[9,[4]]],[[5,[4]]]],[[[5,[4]],30],[[5,[4]]]],[[[5,[4]],47],[[5,[4]]]],[[[5,[4]]],[[5,[4]]]],[[[5,[4]],30],[[5,[4]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],49],[[[50,[49]]],[[50,[49]]]],[[[51,[49]]],[[51,[49]]]],[[[52,[49]]],[[52,[49]]]],[[[7,[49]]],[[7,[49]]]],[[[54,[53]],[54,[53]],[54,[53]],55],53],[[[50,[20]]],[[50,[20]]]],[[[51,[20]]],[[51,[20]]]],[[[52,[20]]],[[52,[20]]]],[[[7,[20]]],[[7,[20]]]],[53,53],[56,56],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[50,[57]]]],[[],[[51,[57]]]],[[],[[52,[57]]]],[[],[[7,[57]]]],[[[50,[[58,[[58,[[58,[58]]]]]]]],[50,[[58,[[58,[[58,[58]]]]]]]]],30],[[[51,[[58,[[58,[[58,[58]]]]]]]],[51,[[58,[[58,[[58,[58]]]]]]]]],30],[[[52,[[58,[[58,[[58,[58]]]]]]]],[52,[[58,[[58,[[58,[58]]]]]]]]],30],[[[7,[[58,[[58,[[58,[58]]]]]]]],[7,[[58,[[58,[[58,[58]]]]]]]]],30],[[53,53],30],[[56,56],30],[[],30],[[],30],[[],30],[[],30],[[[50,[31]],32],[[11,[34]]]],[[[51,[31]],32],[[11,[34]]]],[[[52,[31]],32],[[11,[34]]]],[[[7,[31]],32],[[11,[34]]]],[[53,32],[[11,[34]]]],[[56,32],[[11,[34]]]],[[]],[[],[[50,[49]]]],[[[59,[49]]],[[50,[49]]]],[[[59,[49]]],[[51,[49]]]],[[],[[51,[49]]]],[[]],[[[59,[49]]],[[52,[49]]]],[[]],[[],[[52,[49]]]],[[],[[7,[49]]]],[[]],[[[59,[49]]],[[7,[49]]]],[[[7,[49]]],53],[[]],[[[52,[49]]],53],[[[51,[49]]],56],[[[50,[49]]],56],[[]],[55],[[[54,[[50,[49]]]],55],[[51,[49]]]],[[[54,[[52,[49]]]],55],[[7,[49]]]],[[[54,[[51,[49]]]],55],[[50,[49]]]],[[[54,[[7,[49]]]],55],[[52,[49]]]],[[[50,[60]],61]],[[[51,[60]],61]],[[[52,[60]],61]],[[[7,[60]],61]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[],50],[[],51],[[],52],[[],7],[[[54,[53]]],53],[[[54,[56]]],56],[[[51,[49]],55],[[50,[49]]]],[[[7,[49]],55],[[52,[49]]]],[[53,55],[[52,[49]]]],[[56,55],[[50,[49]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[[50,[49]],55],[[51,[49]]]],[[[52,[49]],55],[[7,[49]]]],[[53,55],[[7,[49]]]],[[56,55],[[51,[49]]]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[55,30],0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[62,62],[[]],[[63,32],[[11,[34]]]],[[63,32],[[11,[34]]]],[[62,32],[[11,[34]]]],[[62,32],[[11,[34]]]],[[36,32],[[11,[34]]]],[[36,32],[[11,[34]]]],[[]],[[]],[[]],[[]],[[]],[[]],[41],[41],[41],[[]],[[],45],[[],45],[[],45],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],46],[[],46],[[],46],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],64],[64,30],[[64,64],64],[[64,64]],[[64,64],64],[[64,64]],[64,3],[[64,64],64],[[64,64]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[65,[20]]],[[65,[20]]]],[66,66],[67,67],[68,68],[69,69],[70,70],[71,71],[72,72],[73,73],[74,74],[75,75],[76,76],[77,77],[78,78],[64,64],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[68,68],79],[[78,78],79],[[64,64],79],[64,64],[[64,64],30],[64,30],[[],64],0,[[64,64],64],[[],68],[[],64],[[[65,[[58,[[58,[[58,[58]]]]]]]],[65,[[58,[[58,[[58,[58]]]]]]]]],30],[[66,66],30],[[67,67],30],[[68,68],30],[[69,69],30],[[70,70],30],[[71,71],30],[[72,72],30],[[73,73],30],[[74,74],30],[[75,75],30],[[76,76],30],[[77,77],30],[[78,78],30],[[64,64],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[64,80]],[[[65,[31]],32],[[11,[34]]]],[[66,32],[[11,[34]]]],[[67,32],[[11,[34]]]],[[68,32],[[11,[34]]]],[[69,32],[[11,[34]]]],[[70,32],[[11,[34]]]],[[71,32],[[11,[34]]]],[[72,32],[[11,[34]]]],[[73,32],[[11,[34]]]],[[74,32],[[11,[34]]]],[[75,32],[[11,[34]]]],[[76,32],[[11,[34]]]],[[77,32],[[11,[34]]]],[[78,32],[[11,[34]]]],[[64,32],[[11,[34]]]],[[64,32],[[11,[34]]]],[[64,32],[[11,[34]]]],[[64,32],[[11,[34]]]],[[64,32],[[11,[34]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[81,64],[3,[[37,[64]]]],[3,64],[3,64],[80,64],[[68,61]],[[70,61]],[[71,61]],[[72,61]],[[75,61]],[[76,61]],[[78,61]],[[64,61]],0,[[64,64]],[[64,64],64],[[64,64],30],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[64,30],[64,30],0,[64,30],[65,[[11,[65,65]]]],0,[74,55],[64,64],[[68,68],[[37,[79]]]],[[78,78],[[37,[79]]]],[[64,64],[[37,[79]]]],0,[[64,64]],0,[[64,64,30]],[64,30],0,[[64,64],64],[[64,64]],[[64,64],64],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[65,[[37,[65]]]],[67,[[37,[67]]]],[[64,64]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[64,64],64],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[6,82],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[83,84],[85,85],[86,86],[[[87,[20]]],[[87,[20]]]],[88,88],[[]],[[]],[[]],[[]],[[88,88],79],[84,85],[[],84],[[],[[83,[57]]]],[[],86],[[],88],[84,6],[[86,86],30],[[[87,[[58,[[58,[[58,[58]]]]]]]],[87,[[58,[[58,[[58,[58]]]]]]]]],30],[[88,88],30],[[],30],[[],30],[[],30],[[84,32],[[11,[34]]]],[[6,32],[[11,[34]]]],[[85,32],[[11,[34]]]],[[86,32],[[11,[34]]]],[[[87,[31]],32],[[11,[34]]]],[[87,32],[[11,[34]]]],[[88,32],[[11,[34]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[87,[60]],61]],[[88,61]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[6,30],[6,30],[[],84],[[],83],[[88,88],[[37,[79]]]],[6,[[37,[89]]]],[41],[6,90],[[84,91],92],[[84,91],93],[85,[[11,[87]]]],[[6,88]],[86],[[86,93]],[86],[86],[[86,94]],[[]],[[]],[[]],[[]],[[],45],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[6,[[37,[39]]]],[[83,30],83],[[],84],[[],83],[83,83],[83,83],0,0,[95,48],[[]],[[]],[[]],[[]],[95,95],[89,89],[[]],[[]],[[95,95],79],[[89,89],79],[[95,95],30],[[89,89],30],[[],30],[[],30],[[95,32],[[11,[34]]]],[[95,32],[[11,[34]]]],[[89,32],[[11,[34]]]],[[]],[[]],[[95,61]],[[]],[[]],[95,89],[89,[[37,[45]]]],[89,3],[[95,95],[[37,[79]]]],[[89,89],[[37,[79]]]],[89,[[51,[93]]]],[95,3],[89,[[37,[3]]]],[89,55],[95,[[7,[3]]]],[89,[[7,[3]]]],[[]],[[]],[[],45],[[],11],[[],11],[[],11],[[],11],[[],46],[[],46],[89,82],0,0,[[],[[37,[13]]]],[[]],0,0,0,0,[91,93],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[96,[7,[3]]],[[11,[[9,[8]],10]]]],[[96,12,13,3,3],[[11,[[14,[8]],10]]]],[[96,[16,[15]],17],[[11,[[14,[8]],10]]]],[[96,6],[[11,[[9,[8]],10]]]],[97,97],[98,98],[99,99],[[]],[[]],[[]],[[],98],[[98,98],30],[[],30],[[97,32],33],[[98,32],[[11,[34]]]],[[99,32],[[11,[34]]]],[[99,32],[[11,[34]]]],[[]],[[]],[[]],[100,99],[[98,61]],[[]],[[]],[[]],[[],30],[[],30],[[],30],[[],3],[41],[[[103,[101,102]]]],[99,[[37,[42]]]],[[]],[[]],[[]],[[],45],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],46],[[],46],[[],46],[[],[[37,[39]]]],[[],[[37,[39]]]],[104],[[],[[37,[39]]]],[30],[[[54,[53]]]],[45],[[[54,[45]],[54,[45]]]],[30],[[[54,[53]]]],[[]],[104],[[]],[93],[[]],[[[105,[98,102]]]],0,[[],[[37,[39]]]],[[],[[37,[39]]]],[[],[[37,[93]]]],[[],[[37,[106]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,[15,[[108,[107]]]],[15,[[108,[109]]]],[15,[[108,[110]]]],[111,[[105,[112,102]]]],[15,[[105,[112,102]]]],[113,48],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[15,106,106,106,114,[44,[115]]],116],[15,[[11,[117]]]],[118,118],[113,113],[112,112],[117,117],[119,119],[[]],[[]],[[]],[[]],[[]],[[112,112],79],[[119,119],79],[120,118],[111,112],0,[121,111],0,0,[111,[[11,[63]]]],[15],[121],[[],112],[[],119],[[113,113],30],[[112,112],30],[[119,119],30],[[],30],[[],30],[[],30],0,0,[15,[[11,[117]]]],[[15,32],[[11,[34]]]],[[113,32],[[11,[34]]]],[[112,32],[[11,[34]]]],[[117,32],[[11,[34]]]],[[117,32],[[11,[34]]]],[[119,32],[[11,[34]]]],[111],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[111,[[37,[122]]]],[[15,[0,[[124,[123]],31]]],106],[[15,[44,[47]]],106],[[15,[44,[125]]],[[11,[[105,[106,102]],117]]]],[[15,106],106],[[15,106,106],126],[[15,106],[[11,[127,117]]]],[[15,[37,[128]]],112],[[15,106],129],[[15,106],[[11,[130,117]]]],[[15,131,132],37],[[15,106,106,106],[[11,[[105,[115,102]],133]]]],[[15,106],[[11,[[108,[110]],117]]]],[15,[[37,[55]]]],[[113,61]],[[112,61]],[[119,61]],[111,134],[15],[111,[[11,[[51,[93]],62]]]],[111,[[7,[3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[111,30],[111,30],[111,30],[[15,106,106],[[37,[30]]]],[111,[[37,[30]]]],[[15,47],106],0,[[15,135],106],[[15,136,135],45],0,[113,89],[112,[[37,[45]]]],[112,3],[37,[[11,[15,99]]]],[[[16,[15]]],120],[111,[[11,[[51,[93]],62]]]],[111,[[7,[3]]]],[[112,112],[[37,[79]]]],[[119,119],[[37,[79]]]],[112,[[51,[93]]]],[111,112],[15,112],[41],[15,137],[[15,106,93],[[11,[138,117]]]],[111,90],[139,90],[111,140],[113,3],[112,[[37,[3]]]],0,[111],[[111,[37,[141]]]],[[120,91],92],[[120,91],93],[111,55],[112,55],[[15,106,93,93],116],[[15,3,106],[[37,[116]]]],[[15,106],[[11,[93,117]]]],[[15,106,106,106,[37,[142]],[59,[142]]],116],[[15,106,[37,[142]],[54,[143]]],116],[118,[[11,[87]]]],[[111,30]],[[15,106,106],37],[[111,144],[[11,[63]]]],[[111,30],[[11,[63]]]],[[111,145]],[[15,106,[37,[145]]]],[[111,56],[[11,[63]]]],[[111,93,93],[[11,[63]]]],[[111,30]],[[111,30]],[[139,88]],[[111,[37,[122]]]],[[111,30]],[[111,56]],[[111,53]],[[111,[37,[53]]]],[[111,30]],[[111,[37,[53]]]],[[111,30]],[[15,106,129],116],[[15,106,130],116],[[111,56]],[[111,30]],[[111,38]],[[111,30]],[[111,[37,[146]]]],[[15,106,[108,[110]]],116],0,[113,[[7,[3]]]],[112,[[7,[3]]]],[15,[[11,[117]]]],[[]],[[]],[[]],[[]],[[]],[[],45],[[15,106,106],[[11,[147,117]]]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[15,106]],[[139,30]],0,[112,82],0,[139,[[16,[15]]]],[111,39],0,0,0,0,[111,39],[111,93],[111,106],0,[111,[[16,[15]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[44,[47]],93]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[44,[47]],93],30],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[44,[47]],93]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[148,93],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[148,149],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[150,[[44,[125]]]],[150,[[44,[125]]]],[150,[[44,[142]]]],[150,[[44,[142]]]],[143,151],[143,152],[143,153],[143,154],[143,155],[143,156],[143,157],[143,158],[143,159],[143,160],[143,161],[143,162],[143,163],[143,164],[143,165],[143,166],[143,167],[143,168],[143,169],[143,135],[143,170],[143,171],[143,172],[143,173],[143,174],[143,175],[143,176],[143,177],[143,178],[143,179],[143,180],[143,181],[143,182],[143,183],[143,184],[143,185],[143,186],[143,187],[143,188],[143,189],[143,190],[143,191],[150,[[44,[47]]]],[150,[[44,[106]]]],[150,[[44,[192]]]],[150,[[44,[48]]]],[150,[[44,[125]]]],[150,[[44,[142]]]],[143,157],[143,151],[143,182],[143,174],[143,169],[143,189],[143,153],[143,175],[143,173],[143,161],[143,187],[143,166],[143,167],[143,159],[143,185],[143,155],[143,163],[143,165],[143,156],[143,172],[143,135],[143,170],[143,162],[143,188],[143,176],[143,158],[143,191],[143,154],[143,190],[143,171],[143,183],[143,160],[143,180],[143,181],[143,179],[143,164],[143,168],[143,152],[143,178],[143,177],[143,186],[143,184],[150,[[44,[47]]]],[150,[[44,[142]]]],[150,[[44,[192]]]],[150,[[44,[125]]]],[150,[[44,[106]]]],[150,[[44,[48]]]],[150,[[44,[192]]]],[150,[[44,[192]]]],0,0,0,0,0,[148,193],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[100,100],[143,143],[190,190],[184,184],[191,191],[182,182],[183,183],[185,185],[169,169],[171,171],[164,164],[166,166],[189,189],[152,152],[165,165],[168,168],[156,156],[161,161],[135,135],[187,187],[163,163],[186,186],[158,158],[178,178],[181,181],[170,170],[160,160],[180,180],[172,172],[162,162],[155,155],[167,167],[177,177],[194,194],[195,195],[196,196],[197,197],[198,198],[199,199],[200,200],[201,201],[202,202],[203,203],[204,204],[205,205],[206,206],[207,207],[208,208],[209,209],[210,210],[211,211],[212,212],[213,213],[214,214],[215,215],[216,216],[217,217],[218,218],[107,107],[219,219],[220,220],[221,221],[222,222],[223,223],[224,224],[225,225],[188,188],[226,226],[227,227],[228,228],[229,229],[230,230],[231,231],[232,232],[233,233],[234,234],[235,235],[236,236],[237,237],[238,238],[239,239],[240,240],[241,241],[109,109],[242,242],[243,243],[244,244],[245,245],[246,246],[247,247],[248,248],[249,249],[250,250],[110,110],[251,251],[252,252],[253,253],[254,254],[255,255],[256,256],[257,257],[150,150],[258,258],[259,259],[260,260],[261,261],[262,262],[263,263],[264,264],[265,265],[266,266],[267,267],[268,268],[269,269],[270,270],[271,271],[272,272],[273,273],[274,274],[275,275],[276,276],[277,277],[278,278],[149,149],[279,279],[193,193],[280,280],[148,148],[281,281],[282,282],[283,283],[284,284],[285,285],[286,286],[287,287],[288,288],[289,289],[290,290],[291,291],[292,292],[293,293],[294,294],[295,295],[296,296],[297,297],[298,298],[299,299],[300,300],[301,301],[302,302],[303,303],[304,304],[305,305],[306,306],[307,307],[308,308],[309,309],[310,310],[311,311],[312,312],[313,313],[314,314],[315,315],[316,316],[317,317],[318,318],[319,319],[320,320],[321,321],[322,322],[323,323],[324,324],[325,325],[326,326],[327,327],[328,328],[131,131],[329,329],[330,330],[132,132],[331,331],[332,332],[333,333],[334,334],[335,335],[336,336],[153,153],[154,154],[159,159],[176,176],[157,157],[174,174],[173,173],[175,175],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],150],[[],149],[[],279],[[],193],[[],280],[[],148],[[],281],[[],282],[[],283],[[],284],[[],285],[[],286],[[],287],[[],288],[[],289],[[],290],[[],291],[[],292],[[],293],[[],294],[[],295],[[],296],[[],297],[[],298],[[],299],[[],300],[[],301],[[],302],[[],303],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[100,38],0,0,[148,280],[100,38],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[190,190],30],[[184,184],30],[[191,191],30],[[182,182],30],[[183,183],30],[[185,185],30],[[169,169],30],[[171,171],30],[[164,164],30],[[166,166],30],[[189,189],30],[[152,152],30],[[165,165],30],[[168,168],30],[[156,156],30],[[161,161],30],[[135,135],30],[[187,187],30],[[163,163],30],[[186,186],30],[[158,158],30],[[178,178],30],[[181,181],30],[[170,170],30],[[160,160],30],[[180,180],30],[[172,172],30],[[162,162],30],[[155,155],30],[[167,167],30],[[177,177],30],[[194,194],30],[[195,195],30],[[196,196],30],[[197,197],30],[[198,198],30],[[199,199],30],[[200,200],30],[[201,201],30],[[202,202],30],[[203,203],30],[[204,204],30],[[205,205],30],[[206,206],30],[[207,207],30],[[208,208],30],[[209,209],30],[[210,210],30],[[211,211],30],[[212,212],30],[[213,213],30],[[214,214],30],[[215,215],30],[[216,216],30],[[217,217],30],[[218,218],30],[[107,107],30],[[219,219],30],[[220,220],30],[[221,221],30],[[222,222],30],[[223,223],30],[[224,224],30],[[225,225],30],[[188,188],30],[[226,226],30],[[227,227],30],[[228,228],30],[[229,229],30],[[230,230],30],[[231,231],30],[[232,232],30],[[233,233],30],[[234,234],30],[[235,235],30],[[236,236],30],[[237,237],30],[[238,238],30],[[239,239],30],[[240,240],30],[[241,241],30],[[109,109],30],[[242,242],30],[[243,243],30],[[244,244],30],[[245,245],30],[[246,246],30],[[247,247],30],[[248,248],30],[[249,249],30],[[250,250],30],[[110,110],30],[[251,251],30],[[252,252],30],[[253,253],30],[[254,254],30],[[257,257],30],[[150,150],30],[[258,258],30],[[269,269],30],[[270,270],30],[[271,271],30],[[272,272],30],[[273,273],30],[[274,274],30],[[275,275],30],[[276,276],30],[[277,277],30],[[278,278],30],[[304,304],30],[[305,305],30],[[306,306],30],[[307,307],30],[[308,308],30],[[309,309],30],[[310,310],30],[[311,311],30],[[312,312],30],[[313,313],30],[[314,314],30],[[315,315],30],[[316,316],30],[[317,317],30],[[318,318],30],[[319,319],30],[[320,320],30],[[321,321],30],[[322,322],30],[[323,323],30],[[324,324],30],[[325,325],30],[[326,326],30],[[327,327],30],[[328,328],30],[[131,131],30],[[329,329],30],[[330,330],30],[[132,132],30],[[331,331],30],[[332,332],30],[[333,333],30],[[334,334],30],[[335,335],30],[[336,336],30],[[153,153],30],[[154,154],30],[[159,159],30],[[176,176],30],[[157,157],30],[[174,174],30],[[173,173],30],[[175,175],30],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[100,32],[[11,[34]]]],[[100,32],[[11,[34]]]],[[143,32],[[11,[34]]]],[[190,32],[[11,[34]]]],[[184,32],[[11,[34]]]],[[191,32],[[11,[34]]]],[[182,32],[[11,[34]]]],[[183,32],[[11,[34]]]],[[185,32],[[11,[34]]]],[[169,32],[[11,[34]]]],[[171,32],[[11,[34]]]],[[164,32],[[11,[34]]]],[[166,32],[[11,[34]]]],[[189,32],[[11,[34]]]],[[152,32],[[11,[34]]]],[[165,32],[[11,[34]]]],[[168,32],[[11,[34]]]],[[156,32],[[11,[34]]]],[[161,32],[[11,[34]]]],[[135,32],[[11,[34]]]],[[187,32],[[11,[34]]]],[[163,32],[[11,[34]]]],[[186,32],[[11,[34]]]],[[158,32],[[11,[34]]]],[[178,32],[[11,[34]]]],[[181,32],[[11,[34]]]],[[170,32],[[11,[34]]]],[[160,32],[[11,[34]]]],[[180,32],[[11,[34]]]],[[172,32],[[11,[34]]]],[[162,32],[[11,[34]]]],[[155,32],[[11,[34]]]],[[167,32],[[11,[34]]]],[[177,32],[[11,[34]]]],[[194,32],[[11,[34]]]],[[195,32],[[11,[34]]]],[[196,32],[[11,[34]]]],[[197,32],[[11,[34]]]],[[198,32],[[11,[34]]]],[[199,32],[[11,[34]]]],[[200,32],[[11,[34]]]],[[201,32],[[11,[34]]]],[[202,32],[[11,[34]]]],[[203,32],[[11,[34]]]],[[204,32],[[11,[34]]]],[[205,32],[[11,[34]]]],[[206,32],[[11,[34]]]],[[207,32],[[11,[34]]]],[[208,32],[[11,[34]]]],[[209,32],[[11,[34]]]],[[210,32],[[11,[34]]]],[[211,32],[[11,[34]]]],[[212,32],[[11,[34]]]],[[213,32],[[11,[34]]]],[[214,32],[[11,[34]]]],[[215,32],[[11,[34]]]],[[216,32],[[11,[34]]]],[[217,32],[[11,[34]]]],[[218,32],[[11,[34]]]],[[107,32],[[11,[34]]]],[[219,32],[[11,[34]]]],[[220,32],[[11,[34]]]],[[221,32],[[11,[34]]]],[[222,32],[[11,[34]]]],[[223,32],[[11,[34]]]],[[224,32],[[11,[34]]]],[[225,32],[[11,[34]]]],[[188,32],[[11,[34]]]],[[226,32],[[11,[34]]]],[[227,32],[[11,[34]]]],[[228,32],[[11,[34]]]],[[229,32],[[11,[34]]]],[[230,32],[[11,[34]]]],[[231,32],[[11,[34]]]],[[232,32],[[11,[34]]]],[[233,32],[[11,[34]]]],[[234,32],[[11,[34]]]],[[235,32],[[11,[34]]]],[[236,32],[[11,[34]]]],[[237,32],[[11,[34]]]],[[238,32],[[11,[34]]]],[[239,32],[[11,[34]]]],[[240,32],[[11,[34]]]],[[241,32],[[11,[34]]]],[[109,32],[[11,[34]]]],[[242,32],[[11,[34]]]],[[243,32],[[11,[34]]]],[[244,32],[[11,[34]]]],[[245,32],[[11,[34]]]],[[246,32],[[11,[34]]]],[[247,32],[[11,[34]]]],[[248,32],[[11,[34]]]],[[249,32],[[11,[34]]]],[[250,32],[[11,[34]]]],[[110,32],[[11,[34]]]],[[251,32],[[11,[34]]]],[[252,32],[[11,[34]]]],[[253,32],[[11,[34]]]],[[254,32],[[11,[34]]]],[[257,32],[[11,[34]]]],[[150,32],[[11,[34]]]],[[258,32],[[11,[34]]]],[[259,32],[[11,[34]]]],[[260,32],[[11,[34]]]],[[261,32],[[11,[34]]]],[[262,32],[[11,[34]]]],[[263,32],[[11,[34]]]],[[264,32],[[11,[34]]]],[[265,32],[[11,[34]]]],[[266,32],[[11,[34]]]],[[267,32],[[11,[34]]]],[[268,32],[[11,[34]]]],[[269,32],[[11,[34]]]],[[270,32],[[11,[34]]]],[[271,32],[[11,[34]]]],[[272,32],[[11,[34]]]],[[273,32],[[11,[34]]]],[[274,32],[[11,[34]]]],[[275,32],[[11,[34]]]],[[276,32],[[11,[34]]]],[[277,32],[[11,[34]]]],[[278,32],[[11,[34]]]],[[149,32],[[11,[34]]]],[[279,32],[[11,[34]]]],[[193,32],[[11,[34]]]],[[280,32],[[11,[34]]]],[[148,32],[[11,[34]]]],[[281,32],[[11,[34]]]],[[282,32],[[11,[34]]]],[[283,32],[[11,[34]]]],[[284,32],[[11,[34]]]],[[285,32],[[11,[34]]]],[[286,32],[[11,[34]]]],[[287,32],[[11,[34]]]],[[288,32],[[11,[34]]]],[[289,32],[[11,[34]]]],[[290,32],[[11,[34]]]],[[291,32],[[11,[34]]]],[[292,32],[[11,[34]]]],[[293,32],[[11,[34]]]],[[294,32],[[11,[34]]]],[[295,32],[[11,[34]]]],[[296,32],[[11,[34]]]],[[297,32],[[11,[34]]]],[[298,32],[[11,[34]]]],[[299,32],[[11,[34]]]],[[300,32],[[11,[34]]]],[[301,32],[[11,[34]]]],[[302,32],[[11,[34]]]],[[303,32],[[11,[34]]]],[[304,32],[[11,[34]]]],[[305,32],[[11,[34]]]],[[306,32],[[11,[34]]]],[[307,32],[[11,[34]]]],[[308,32],[[11,[34]]]],[[309,32],[[11,[34]]]],[[310,32],[[11,[34]]]],[[311,32],[[11,[34]]]],[[312,32],[[11,[34]]]],[[313,32],[[11,[34]]]],[[314,32],[[11,[34]]]],[[315,32],[[11,[34]]]],[[316,32],[[11,[34]]]],[[317,32],[[11,[34]]]],[[318,32],[[11,[34]]]],[[319,32],[[11,[34]]]],[[320,32],[[11,[34]]]],[[321,32],[[11,[34]]]],[[322,32],[[11,[34]]]],[[323,32],[[11,[34]]]],[[324,32],[[11,[34]]]],[[325,32],[[11,[34]]]],[[326,32],[[11,[34]]]],[[327,32],[[11,[34]]]],[[328,32],[[11,[34]]]],[[131,32],[[11,[34]]]],[[329,32],[[11,[34]]]],[[330,32],[[11,[34]]]],[[132,32],[[11,[34]]]],[[331,32],[[11,[34]]]],[[332,32],[[11,[34]]]],[[333,32],[[11,[34]]]],[[334,32],[[11,[34]]]],[[335,32],[[11,[34]]]],[[336,32],[[11,[34]]]],[[153,32],[[11,[34]]]],[[154,32],[[11,[34]]]],[[159,32],[[11,[34]]]],[[176,32],[[11,[34]]]],[[157,32],[[11,[34]]]],[[174,32],[[11,[34]]]],[[173,32],[[11,[34]]]],[[175,32],[[11,[34]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[168,143],[170,143],[188,143],[181,143],[168,143],[183,143],[159,143],[166,143],[175,143],[164,143],[177,143],[174,143],[158,143],[185,143],[154,143],[155,143],[173,143],[163,143],[152,143],[160,143],[182,143],[179,143],[178,143],[172,143],[171,143],[167,143],[189,143],[165,143],[191,143],[169,143],[165,143],[151,143],[161,143],[184,143],[190,143],[166,143],[184,143],[157,143],[135,143],[151,143],[180,143],[157,143],[181,143],[164,143],[186,143],[185,143],[174,143],[187,143],[182,143],[176,143],[169,143],[162,143],[187,143],[173,143],[156,143],[188,143],[183,143],[156,143],[190,143],[161,143],[154,143],[178,143],[177,143],[179,143],[176,143],[167,143],[163,143],[155,143],[162,143],[186,143],[170,143],[172,143],[158,143],[171,143],[[]],[159,143],[191,143],[153,143],[153,143],[160,143],[175,143],[135,143],[152,143],[180,143],[189,143],[143,190],[143,190],[[]],[143,184],[143,184],[[]],[[]],[143,191],[143,191],[143,182],[143,182],[[]],[[]],[143,183],[143,183],[143,185],[143,185],[[]],[143,169],[[]],[143,169],[143,171],[143,171],[[]],[[]],[143,164],[143,164],[143,166],[[]],[143,166],[143,189],[143,189],[[]],[[]],[143,152],[143,152],[143,165],[143,165],[[]],[[]],[143,168],[143,168],[[]],[143,156],[143,156],[143,161],[[]],[143,161],[143,135],[143,135],[[]],[143,187],[143,187],[[]],[[]],[143,163],[143,163],[143,186],[143,186],[[]],[[]],[143,158],[143,158],[143,178],[143,178],[[]],[143,181],[[]],[143,181],[[]],[143,170],[143,170],[143,160],[[]],[143,160],[143,180],[143,180],[[]],[[]],[143,172],[143,172],[143,162],[[]],[143,162],[143,155],[143,155],[[]],[143,167],[[]],[143,167],[143,177],[143,177],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[143,188],[[]],[143,188],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[59,[48]]],150],[[[59,[47]]],150],[[[59,[142]]],150],[[[59,[106]]],150],[[]],[[[59,[125]]],150],[[[59,[192]]],150],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[143,153],[143,153],[143,154],[143,154],[[]],[143,159],[[]],[143,159],[[]],[143,176],[143,176],[[]],[143,157],[143,157],[143,174],[[]],[143,174],[143,173],[[]],[143,173],[143,175],[143,175],[[]],[[]],0,0,0,0,0,0,[[150,337],125],[[150,337],142],0,[[150,337],192],[143,93],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[100,338],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[338,45],100],[[],150],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],[[11,[339,100]]]],[[],[[11,[340,100]]]],[[],[[11,[341,100]]]],[[],[[11,[342,100]]]],[[],[[11,[343,100]]]],[[],[[11,[344,100]]]],[[],[[11,[345,100]]]],[[],[[11,[346,100]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[41],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[148,279],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[150,337,125]],[[150,337,142]],[[150,337,192]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],45],0,0,0,0,0,0,0,0,0,[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[],55],0,0,[347,347],[128,128],[348,348],[349,349],[350,350],[126,126],[133,133],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[347,347],79],[[128,142,142],30],[[],129],[[],147],[[],127],0,[108],[108],[138],[108],[[347,347],30],[[128,128],30],[[350,350],30],[[],30],[[],30],[[],30],[116,[[11,[117]]]],[[347,32],[[11,[34]]]],[[128,32],[[11,[34]]]],[[147,32],[[11,[34]]]],[[127,32],[[11,[34]]]],[[348,32],[[11,[34]]]],[[349,32],[[11,[34]]]],[[350,32],[[11,[34]]]],[[126,32],[[11,[34]]]],[[351,32],[[11,[34]]]],[[133,32],[[11,[34]]]],[[114,32],[[11,[34]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[30,351],[[]],[[]],[106,348],[337,[[37,[347]]]],[347,337],[138,64],[[128,128],142],[130,37],0,[[[0,[352,[58,[[0,[352,[58,[[0,[352,[58,[[0,[352,[58,[[0,[352,58,353]]]],[353,[[0,[352,58,353]]]]]]]],[353,[[0,[352,[58,[[0,[352,58,353]]]],[353,[[0,[352,58,353]]]]]]]]]]]],[353,[[0,[352,[58,[[0,[352,[58,[[0,[352,58,353]]]],[353,[[0,[352,58,353]]]]]]]],[353,[[0,[352,[58,[[0,[352,58,353]]]],[353,[[0,[352,58,353]]]]]]]]]]]]]]]],[353,[[0,[352,[58,[[0,[352,[58,[[0,[352,[58,[[0,[352,58,353]]]],[353,[[0,[352,58,353]]]]]]]],[353,[[0,[352,[58,[[0,[352,58,353]]]],[353,[[0,[352,58,353]]]]]]]]]]]],[353,[[0,[352,[58,[[0,[352,[58,[[0,[352,58,353]]]],[353,[[0,[352,58,353]]]]]]]],[353,[[0,[352,[58,[[0,[352,58,353]]]],[353,[[0,[352,58,353]]]]]]]]]]]]]]]]]],[0,[352,[58,[[0,[352,[58,[[0,[352,[58,[[0,[352,[58,[[0,[352,58,353]]]],[353,[[0,[352,58,353]]]]]]]],[353,[[0,[352,[58,[[0,[352,58,353]]]],[353,[[0,[352,58,353]]]]]]]]]]]],[353,[[0,[352,[58,[[0,[352,[58,[[0,[352,58,353]]]],[353,[[0,[352,58,353]]]]]]]],[353,[[0,[352,[58,[[0,[352,58,353]]]],[353,[[0,[352,58,353]]]]]]]]]]]]]]]],[353,[[0,[352,[58,[[0,[352,[58,[[0,[352,[58,[[0,[352,58,353]]]],[353,[[0,[352,58,353]]]]]]]],[353,[[0,[352,[58,[[0,[352,58,353]]]],[353,[[0,[352,58,353]]]]]]]]]]]],[353,[[0,[352,[58,[[0,[352,[58,[[0,[352,58,353]]]],[353,[[0,[352,58,353]]]]]]]],[353,[[0,[352,[58,[[0,[352,58,353]]]],[353,[[0,[352,58,353]]]]]]]]]]]]]]]]]]],30],0,0,[106,30],[[126,93,93]],[[126,3,3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[133,106],30],0,0,0,[[[37,[[58,[[58,[[58,[58]]]]]]]],[58,[[58,[[58,[[58,[58]]]]]]]]],30],0,[[],129],[15,130],[15,[[37,[108]]]],[15,116],[[],128],[[106,106,106,106],348],[[347,347],[[37,[79]]]],0,[116],0,0,0,0,0,0,0,[[130,37]],[[129,30]],[[130,37]],[[129,30]],[[130,37]],[[130,37]],[[130,37]],[[130,37]],[116,[[11,[117]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],0,0,0,[[[44,[38]]],30],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[137],[[]],[137,354],[354,[[37,[47]]]],[[],11],[[],11],[[],11],[[],11],[[],46],[[],46],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[355,355],[356,356],[[]],[[]],[[],357],[[],356],[[355,355],30],[[],30],[[355,32],[[11,[34]]]],[[357,32],[[11,[34]]]],[[356,32],[[11,[34]]]],[[]],[[]],[[]],[[357,47],[[37,[355]]]],[[]],[[]],[[]],[[356,75,47,355]],[[356,47,355]],[[356,47]],[356,64],[[],357],[[357,15]],[[357,233]],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],46],[[],46],[[],46],[[356,357]],[[356,64,[37,[355]]],[[37,[64]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[43,82],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[18,6],[[11,[43,36]]]],[146,146],[358,358],[18,18],[144,144],[145,145],[122,122],[104,104],[141,141],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[358,358],79],[43,[[37,[89]]]],[[],18],[[],145],[[],141],[43,[[11,[63]]]],[43],[[],358],[[358,358],30],[[144,144],30],[[145,145],30],[[122,122],30],[[104,104],30],[[141,141],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[43,32],[[11,[34]]]],[[359,32],[[11,[34]]]],[[359,32],[[11,[34]]]],[[146,32],[[11,[34]]]],[[358,32],[[11,[34]]]],[[18,32],[[11,[34]]]],[[144,32],[[11,[34]]]],[[145,32],[[11,[34]]]],[[122,32],[[11,[34]]]],[[104,32],[[11,[34]]]],[[141,32],[[11,[34]]]],[43],[[]],[[]],[[]],[[]],[106,358],[[]],[[]],[[]],[[]],[[]],[[]],[[[105,[47,102]],3,3],[[11,[146,359]]]],[43,[[37,[122]]]],[[358,61]],[[144,61]],[[145,61]],[43,358],[43,[[11,[[51,[93]],62]]]],[43,[[7,[3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[43,30],[43,30],[43,30],[43,30],[43,[[37,[30]]]],[6,[[11,[43,36]]]],[[],18],[43,[[11,[[51,[93]],62]]]],[43,[[7,[3]]]],[[358,358],[[37,[79]]]],[43,[[37,[89]]]],[41],[43,90],[43,140],[43,360],[43],[[43,[37,[141]]]],[43,55],[[43,30]],[[43,144],[[11,[63]]]],[[43,30],[[11,[63]]]],[[43,145]],[[43,[54,[56]]],[[11,[63]]]],[[43,30]],[[43,30]],[[43,[37,[122]]]],[[43,30]],[[43,[54,[56]]]],[[43,[54,[53]]]],[[43,[37,[[54,[53]]]]]],[[43,30]],[[43,[37,[[54,[53]]]]]],[[43,30]],[[43,[54,[56]]]],[[43,30]],[[43,38]],[[43,30]],[[43,[37,[146]]]],[359,[[37,[42]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],45],[18,30],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[43,[[37,[39]]]],[[43,104]],[43,[[37,[39]]]],[[18,30],18],[[18,[54,[53]]],18],[[18,30],18],[[18,[37,[122]]],18],[[18,45],18],[[18,[54,[53]]],18],[[18,[54,[53]]],18],[[18,30],18],[[18,[54,[53]]],18],[[18,[54,[45]],[54,[45]]],18],[[18,30],18],[[18,[54,[56]]],18],[[18,30],18],[[18,[54,[53]]],18],[[18,[54,[45]]],18],[[18,30],18],[[18,30],18],[[18,104],18],[[18,[37,[146]]],18],[[18,93],18],[18,18],[[18,[105,[98,102]]],18],[43,[[37,[39]]]],[43,[[37,[39]]]],[43,[[37,[93]]]],[43,[[37,[106]]]],0,0,0,0,0],"c":[933,1044,1045,1046,1175,1299],"p":[[3,"PossiblyCurrent"],[3,"ContextWrapper"],[15,"u32"],[8,"ContextCurrentState"],[3,"ContextBuilder"],[3,"EventLoopWindowTarget"],[3,"PhysicalSize"],[4,"NotCurrent"],[3,"Context"],[4,"CreationError"],[4,"Result"],[4,"wl_display"],[6,"c_void"],[6,"RawContext"],[3,"XConnection"],[3,"Arc"],[6,"c_ulong"],[3,"WindowBuilder"],[6,"WindowedContext"],[8,"Clone"],[4,"Api"],[4,"GlProfile"],[4,"GlRequest"],[4,"Robustness"],[4,"ReleaseBehavior"],[3,"PixelFormat"],[3,"PixelFormatRequirements"],[3,"GlAttributes"],[3,"Rect"],[15,"bool"],[8,"Debug"],[3,"Formatter"],[6,"Result"],[3,"Error"],[4,"ContextError"],[3,"OsError"],[4,"Option"],[15,"str"],[4,"c_void"],[8,"FnOnce"],[3,"Demand"],[8,"Error"],[3,"Window"],[15,"slice"],[3,"String"],[3,"TypeId"],[15,"u8"],[15,"u16"],[8,"Pixel"],[3,"LogicalPosition"],[3,"PhysicalPosition"],[3,"LogicalSize"],[4,"Size"],[8,"Into"],[15,"f64"],[4,"Position"],[8,"Default"],[8,"PartialEq"],[15,"array"],[8,"Hash"],[8,"Hasher"],[3,"NotSupportedError"],[4,"ExternalError"],[3,"ModifiersState"],[4,"Event"],[4,"StartCause"],[4,"WindowEvent"],[3,"DeviceId"],[4,"DeviceEvent"],[3,"KeyboardInput"],[4,"Ime"],[4,"TouchPhase"],[3,"Touch"],[4,"Force"],[4,"ElementState"],[4,"MouseButton"],[4,"MouseScrollDelta"],[4,"VirtualKeyCode"],[4,"Ordering"],[8,"IntoIterator"],[3,"ModifiersState"],[8,"Iterator"],[3,"EventLoopBuilder"],[3,"EventLoop"],[3,"EventLoopProxy"],[4,"ControlFlow"],[3,"EventLoopClosed"],[4,"DeviceEventFilter"],[3,"MonitorHandle"],[4,"RawDisplayHandle"],[8,"FnMut"],[15,"never"],[15,"i32"],[3,"Instant"],[3,"VideoMode"],[8,"Sized"],[4,"RawHandle"],[4,"XWindowType"],[4,"XNotSupported"],[3,"OpenError"],[8,"Fn"],[3,"Global"],[3,"Box"],[4,"Theme"],[3,"Vec"],[15,"u64"],[3,"XClassHint"],[3,"XSmartPointer"],[3,"XSizeHints"],[3,"XWMHints"],[3,"UnownedWindow"],[3,"MonitorHandle"],[3,"VideoMode"],[4,"PropMode"],[8,"Formattable"],[3,"Flusher"],[3,"XError"],[3,"EventLoopProxy"],[3,"DeviceId"],[3,"EventLoop"],[3,"Window"],[4,"Fullscreen"],[3,"CStr"],[8,"AsRef"],[15,"i8"],[3,"FrameExtentsHeuristic"],[3,"Geometry"],[3,"AaRect"],[3,"MotifHints"],[3,"NormalHints"],[3,"XRRScreenResources"],[3,"XRRCrtcInfo"],[4,"GetPropertyError"],[3,"WindowId"],[3,"XKeyEvent"],[4,"_XIC"],[3,"Keymap"],[3,"PointerState"],[3,"EventLoopWindowTarget"],[4,"RawWindowHandle"],[4,"UserAttentionType"],[15,"i64"],[19,"XEvent"],[4,"CursorGrabMode"],[4,"CursorIcon"],[3,"Icon"],[3,"TranslatedCoords"],[3,"XIAnyHierarchyChangeInfo"],[3,"XIAddMasterInfo"],[3,"ClientMessageData"],[3,"XScreenSaverNotifyEvent"],[3,"XErrorEvent"],[3,"XRRScreenChangeNotifyEvent"],[3,"XRRNotifyEvent"],[3,"XSelectionRequestEvent"],[3,"XGraphicsExposeEvent"],[3,"XRROutputPropertyNotifyEvent"],[3,"XMapRequestEvent"],[3,"XRROutputChangeNotifyEvent"],[3,"XReparentEvent"],[3,"XGravityEvent"],[3,"XSelectionEvent"],[3,"XMapEvent"],[3,"XCreateWindowEvent"],[3,"XExposeEvent"],[3,"XCrossingEvent"],[3,"XUnmapEvent"],[3,"XFocusChangeEvent"],[3,"XConfigureEvent"],[3,"XPropertyEvent"],[3,"XConfigureRequestEvent"],[3,"XSelectionClearEvent"],[3,"XRRProviderPropertyNotifyEvent"],[3,"XRRProviderChangeNotifyEvent"],[3,"XRRResourceChangeNotifyEvent"],[3,"XRRCrtcChangeNotifyEvent"],[3,"XVisibilityEvent"],[3,"XMotionEvent"],[3,"XF86VidModeNotifyEvent"],[3,"XResizeRequestEvent"],[3,"XNoExposeEvent"],[3,"XCirculateRequestEvent"],[3,"XClientMessageEvent"],[3,"XButtonEvent"],[3,"XColormapEvent"],[3,"XMappingEvent"],[3,"XKeymapEvent"],[3,"XGenericEventCookie"],[3,"XDestroyWindowEvent"],[3,"XAnyEvent"],[3,"XCirculateEvent"],[15,"i16"],[3,"XIAttachSlaveInfo"],[3,"_XkbDesc"],[3,"_XkbKeyAliasRec"],[3,"_XkbKeyNameRec"],[3,"_XkbNamesRec"],[3,"_XkbStateRec"],[3,"XkbAnyEvent"],[3,"XkbNewKeyboardNotifyEvent"],[3,"_XkbMapNotifyEvent"],[3,"XkbStateNotifyEvent"],[3,"_XkbControlsNotifyEvent"],[3,"XkbIndicatorNotifyEvent"],[3,"_XkbNamesNotifyEvent"],[3,"XkbCompatMapNotifyEvent"],[3,"XkbBellNotifyEvent"],[3,"XkbActionMessageEvent"],[3,"XkbAccessXNotifyEvent"],[3,"_XkbExtensionDeviceNotifyEvent"],[3,"XkbEvent"],[3,"Depth"],[3,"Screen"],[3,"ScreenFormat"],[3,"Visual"],[3,"XArc"],[3,"XChar2b"],[3,"XCharStruct"],[3,"XColor"],[3,"XComposeStatus"],[3,"XExtCodes"],[3,"XFontProp"],[3,"XFontSetExtents"],[3,"XFontStruct"],[3,"XGCValues"],[3,"XHostAddress"],[3,"XServerInterpretedAddress"],[3,"XIconSize"],[3,"XImage"],[3,"XKeyboardControl"],[3,"XKeyboardState"],[3,"XmbTextItem"],[3,"XModifierKeymap"],[3,"XOMCharSetList"],[3,"XPixmapFormatValues"],[3,"XPoint"],[3,"XRectangle"],[3,"XrmOptionDescRec"],[3,"XrmValue"],[3,"XSegment"],[3,"XSetWindowAttributes"],[3,"XStandardColormap"],[3,"XTextItem"],[3,"XTextItem16"],[3,"XTextProperty"],[3,"XTimeCoord"],[3,"XVisualInfo"],[3,"XwcTextItem"],[3,"XWindowAttributes"],[3,"XWindowChanges"],[4,"XIMCaretDirection"],[4,"XIMCaretStyle"],[3,"XIMPreeditDrawCallbackStruct"],[3,"XIMPreeditCaretCallbackStruct"],[19,"XIMTextString"],[3,"XIMText"],[3,"AspectRatio"],[3,"ImageFns"],[3,"_XcursorAnimate"],[3,"_XcursorChunkHeader"],[3,"_XcursorComment"],[3,"_XcursorComments"],[3,"_XcursorCursors"],[3,"_XcursorFile"],[3,"_XcursorFileHeader"],[3,"_XcursorFileToc"],[3,"_XcursorImage"],[3,"_XcursorImages"],[3,"XDevice"],[3,"XDeviceControl"],[3,"XDeviceInfo"],[3,"XDeviceState"],[3,"XDeviceTimeCoord"],[3,"XExtensionVersion"],[3,"XFeedbackControl"],[3,"XFeedbackState"],[3,"XInputClass"],[3,"XInputClassInfo"],[3,"XIRemoveMasterInfo"],[3,"XIDetachSlaveInfo"],[3,"XIModifierState"],[3,"XIButtonState"],[3,"XIValuatorState"],[3,"XIEventMask"],[3,"XIAnyClassInfo"],[3,"XIButtonClassInfo"],[3,"XIKeyClassInfo"],[3,"XIValuatorClassInfo"],[3,"XIScrollClassInfo"],[3,"XITouchClassInfo"],[3,"XIDeviceInfo"],[3,"XIGrabModifiers"],[3,"XIBarrierReleasePointerInfo"],[3,"XIEvent"],[3,"XIHierarchyInfo"],[3,"XIHierarchyEvent"],[3,"XIDeviceChangedEvent"],[3,"XIDeviceEvent"],[3,"XIRawEvent"],[3,"XIEnterEvent"],[3,"XIPropertyEvent"],[3,"XITouchOwnershipEvent"],[3,"XIBarrierEvent"],[3,"_XAnimCursor"],[3,"_XCircle"],[3,"_XConicalGradient"],[3,"_XFilters"],[3,"_XGlyphElt8"],[3,"_XGlyphElt16"],[3,"_XGlyphElt32"],[3,"_XGlyphInfo"],[3,"_XIndexValue"],[3,"_XLinearGradient"],[3,"_XLineFixed"],[3,"_XPointDouble"],[3,"_XPointFixed"],[3,"_XRadialGradient"],[3,"XRenderColor"],[3,"XRenderDirectFormat"],[3,"XRenderPictFormat"],[3,"_XRenderPictureAttributes"],[3,"_XSpanFix"],[3,"_XTrap"],[3,"_XTrapezoid"],[3,"_XTriangle"],[3,"_XTransform"],[3,"XRRScreenSize"],[3,"XRRModeInfo"],[3,"XRROutputInfo"],[3,"XRRPropertyInfo"],[3,"XRRCrtcGamma"],[3,"XRRCrtcTransformAttributes"],[3,"XRRPanning"],[3,"XRRProviderResources"],[3,"XRRProviderInfo"],[3,"XRRMonitorInfo"],[15,"usize"],[4,"OpenErrorKind"],[3,"Xlib"],[3,"Xcursor"],[3,"XInput"],[3,"XInput2"],[3,"Xlib_xcb"],[3,"Xrender"],[3,"Xrandr"],[3,"Xrandr_2_2_0"],[4,"Format"],[3,"FrameExtents"],[3,"LogicalFrameExtents"],[4,"FrameExtentsHeuristicPath"],[4,"StateOperation"],[8,"Copy"],[8,"BitAnd"],[3,"KeymapIter"],[4,"Modifier"],[3,"ModifierKeyState"],[3,"ModifierKeymap"],[3,"WindowId"],[4,"BadIcon"],[4,"RawWindowHandle"],[13,"GlThenGles"],[13,"Motion"],[13,"Button"],[13,"Text"],[13,"MouseMotion"],[13,"MouseWheel"],[13,"DeviceEvent"],[13,"WindowEvent"],[13,"Calibrated"],[13,"ResumeTimeReached"],[13,"WaitCancelled"],[13,"AxisMotion"],[13,"MouseInput"],[13,"MouseWheel"],[13,"KeyboardInput"],[13,"CursorMoved"],[13,"CursorEntered"],[13,"CursorLeft"],[13,"TouchpadPressure"],[13,"ScaleFactorChanged"],[8,"ContextTraitExt"],[8,"EventLoopExtRunReturn"],[8,"HeadlessContextExt"],[8,"RawContextExt"],[8,"WindowExtUnix"],[8,"EventLoopWindowTargetExtUnix"],[8,"MonitorHandleExtUnix"],[8,"EventLoopBuilderExtUnix"],[8,"WindowBuilderExtUnix"],[4,"XEventQueueOwner"],[3,"_XkbControls"],[4,"_XDisplay"],[4,"xError"],[4,"xEvent"],[4,"_XGC"],[4,"_XIM"],[4,"_XRegion"],[4,"_XOC"],[4,"_XOM"],[4,"_XrmHashBucketRec"],[3,"_XcmsCCC"],[3,"XcmsColor"],[3,"_XcmsColorSpace"],[3,"_XcmsFunctionSet"],[3,"_XkbAction"],[3,"_XkbBounds"],[3,"_XkbChanges"],[3,"_XkbClientMapRec"],[3,"_XkbColor"],[3,"_XkbComponentList"],[3,"_XkbComponentNames"],[3,"_XkbControlsChanges"],[3,"_XkbControlsNotify"],[3,"_XkbDeviceChanges"],[3,"_XkbDeviceInfo"],[3,"_XkbDeviceLedInfo"],[3,"_XkbDoodad"],[3,"_XkbExtensionDeviceNotify"],[3,"_XkbGeometry"],[3,"_XkbGeometrySizes"],[3,"_XkbIndicatorMapRec"],[3,"_XkbKey"],[3,"_XkbKeyType"],[3,"_XkbMapChanges"],[3,"_XkbMods"],[3,"_XkbNameChanges"],[3,"_XkbNamesNotify"],[3,"_XkbOutline"],[3,"_XkbOverlay"],[3,"_XkbOverlayKey"],[3,"_XkbOverlayRow"],[3,"_XkbProperty"],[3,"_XkbRow"],[3,"_XkbSection"],[3,"_XkbServerMapRec"],[3,"_XkbShape"],[3,"_XkbSymInterpretRec"],[3,"_XkbCompatMapRec"],[3,"_XkbIndicatorRec"],[4,"XkbKbdDpyStateRec"],[3,"XExtData"],[3,"XIMCallback"],[3,"XICCallback"],[4,"_XAnyClassinfo"],[3,"XRRScreenConfiguration"],[4,"EnvVarDPI"],[13,"ByteCountNotDivisibleBy4"],[13,"DimensionsVsPixelCount"]]},\
"glutin_egl_sys":{"doc":"","t":"CCGGGGAGGGRRRRRRRRRRRRRRRRRRRRRRRRRLMLMRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRLMLMLMLMLMLMLMLMLMLMLMLMLMLMRRRRRLMLMLMLMGGGGRDRRDRRRRRRRRRRRRRRRLMLMLMLMLMLMLMLMLMLMLMRRRLMRRRRRRRRRRRRRRRRRRRLMRRRRRRRRRRRRRRRGGGRRRRRRRRRRRRRRRRRRRRRRRLMLMLMLMRRRRRLMLMRRRRRRRRRRRRRRRRRRLMLMLMLMRRRRRRRRRRRRLMRRRRRRRRRRRRRRRLMLMLMLMLLLLLLLLLLLLLGGGLLLLLLLLLAGGGGGDGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGELLLLLLLLGGGLLLLLL","n":["EGLContext","EGLDisplay","EGLNativeDisplayType","EGLNativePixmapType","EGLNativeWindowType","EGLint","egl","khronos_ssize_t","khronos_uint64_t","khronos_utime_nanoseconds_t","ALPHA_FORMAT","ALPHA_FORMAT_NONPRE","ALPHA_FORMAT_PRE","ALPHA_MASK_SIZE","ALPHA_SIZE","BACK_BUFFER","BAD_ACCESS","BAD_ALLOC","BAD_ATTRIBUTE","BAD_CONFIG","BAD_CONTEXT","BAD_CURRENT_SURFACE","BAD_DISPLAY","BAD_MATCH","BAD_NATIVE_PIXMAP","BAD_NATIVE_WINDOW","BAD_PARAMETER","BAD_SURFACE","BIND_TO_TEXTURE_RGB","BIND_TO_TEXTURE_RGBA","BLUE_SIZE","BUFFER_AGE_EXT","BUFFER_DESTROYED","BUFFER_PRESERVED","BUFFER_SIZE","BindAPI","BindAPI","BindTexImage","BindTexImage","CLIENT_APIS","CL_EVENT_HANDLE","COLORSPACE","COLORSPACE_LINEAR","COLORSPACE_sRGB","COLOR_BUFFER_TYPE","CONDITION_SATISFIED","CONFIG_CAVEAT","CONFIG_ID","CONFORMANT","CONTEXT_CLIENT_TYPE","CONTEXT_CLIENT_VERSION","CONTEXT_FLAGS_KHR","CONTEXT_LOST","CONTEXT_MAJOR_VERSION","CONTEXT_MAJOR_VERSION_KHR","CONTEXT_MINOR_VERSION","CONTEXT_MINOR_VERSION_KHR","CONTEXT_OPENGL_COMPATIBILITY_PROFILE_BIT","CONTEXT_OPENGL_COMPATIBILITY_PROFILE_BIT_KHR","CONTEXT_OPENGL_CORE_PROFILE_BIT","CONTEXT_OPENGL_CORE_PROFILE_BIT_KHR","CONTEXT_OPENGL_DEBUG","CONTEXT_OPENGL_DEBUG_BIT_KHR","CONTEXT_OPENGL_FORWARD_COMPATIBLE","CONTEXT_OPENGL_FORWARD_COMPATIBLE_BIT_KHR","CONTEXT_OPENGL_NO_ERROR_KHR","CONTEXT_OPENGL_PROFILE_MASK","CONTEXT_OPENGL_PROFILE_MASK_KHR","CONTEXT_OPENGL_RESET_NOTIFICATION_STRATEGY","CONTEXT_OPENGL_RESET_NOTIFICATION_STRATEGY_EXT","CONTEXT_OPENGL_RESET_NOTIFICATION_STRATEGY_KHR","CONTEXT_OPENGL_ROBUST_ACCESS","CONTEXT_OPENGL_ROBUST_ACCESS_BIT_KHR","CONTEXT_OPENGL_ROBUST_ACCESS_EXT","CORE_NATIVE_ENGINE","ChooseConfig","ChooseConfig","ClientWaitSync","ClientWaitSync","CopyBuffers","CopyBuffers","CreateContext","CreateContext","CreateImage","CreateImage","CreatePbufferFromClientBuffer","CreatePbufferFromClientBuffer","CreatePbufferSurface","CreatePbufferSurface","CreatePixmapSurface","CreatePixmapSurface","CreatePlatformPixmapSurface","CreatePlatformPixmapSurface","CreatePlatformPixmapSurfaceEXT","CreatePlatformPixmapSurfaceEXT","CreatePlatformWindowSurface","CreatePlatformWindowSurface","CreatePlatformWindowSurfaceEXT","CreatePlatformWindowSurfaceEXT","CreateSync","CreateSync","CreateWindowSurface","CreateWindowSurface","DEFAULT_DISPLAY","DEPTH_SIZE","DISPLAY_SCALING","DONT_CARE","DRAW","DestroyContext","DestroyContext","DestroyImage","DestroyImage","DestroySurface","DestroySurface","DestroySync","DestroySync","EGLNativeDisplayType","EGLNativePixmapType","EGLNativeWindowType","EGLint","EXTENSIONS","Egl","FALSE","FOREVER","FnPtr","GL_COLORSPACE","GL_COLORSPACE_LINEAR","GL_COLORSPACE_SRGB","GL_RENDERBUFFER","GL_TEXTURE_2D","GL_TEXTURE_3D","GL_TEXTURE_CUBE_MAP_NEGATIVE_X","GL_TEXTURE_CUBE_MAP_NEGATIVE_Y","GL_TEXTURE_CUBE_MAP_NEGATIVE_Z","GL_TEXTURE_CUBE_MAP_POSITIVE_X","GL_TEXTURE_CUBE_MAP_POSITIVE_Y","GL_TEXTURE_CUBE_MAP_POSITIVE_Z","GL_TEXTURE_LEVEL","GL_TEXTURE_ZOFFSET","GREEN_SIZE","GetConfigAttrib","GetConfigAttrib","GetConfigs","GetConfigs","GetCurrentContext","GetCurrentContext","GetCurrentDisplay","GetCurrentDisplay","GetCurrentSurface","GetCurrentSurface","GetDisplay","GetDisplay","GetError","GetError","GetPlatformDisplay","GetPlatformDisplay","GetPlatformDisplayEXT","GetPlatformDisplayEXT","GetProcAddress","GetProcAddress","GetSyncAttrib","GetSyncAttrib","HEIGHT","HORIZONTAL_RESOLUTION","IMAGE_PRESERVED","Initialize","Initialize","LARGEST_PBUFFER","LEVEL","LOSE_CONTEXT_ON_RESET","LOSE_CONTEXT_ON_RESET_EXT","LOSE_CONTEXT_ON_RESET_KHR","LUMINANCE_BUFFER","LUMINANCE_SIZE","MATCH_NATIVE_PIXMAP","MAX_PBUFFER_HEIGHT","MAX_PBUFFER_PIXELS","MAX_PBUFFER_WIDTH","MAX_SWAP_INTERVAL","MIN_SWAP_INTERVAL","MIPMAP_LEVEL","MIPMAP_TEXTURE","MULTISAMPLE_RESOLVE","MULTISAMPLE_RESOLVE_BOX","MULTISAMPLE_RESOLVE_BOX_BIT","MULTISAMPLE_RESOLVE_DEFAULT","MakeCurrent","MakeCurrent","NATIVE_RENDERABLE","NATIVE_VISUAL_ID","NATIVE_VISUAL_TYPE","NONE","NON_CONFORMANT_CONFIG","NOT_INITIALIZED","NO_CONTEXT","NO_DISPLAY","NO_IMAGE","NO_RESET_NOTIFICATION","NO_RESET_NOTIFICATION_EXT","NO_RESET_NOTIFICATION_KHR","NO_SURFACE","NO_SYNC","NO_TEXTURE","NativeDisplayType","NativePixmapType","NativeWindowType","OPENGL_API","OPENGL_BIT","OPENGL_ES2_BIT","OPENGL_ES3_BIT","OPENGL_ES3_BIT_KHR","OPENGL_ES_API","OPENGL_ES_BIT","OPENVG_API","OPENVG_BIT","OPENVG_IMAGE","PBUFFER_BIT","PIXEL_ASPECT_RATIO","PIXMAP_BIT","PLATFORM_ANDROID_KHR","PLATFORM_DEVICE_EXT","PLATFORM_GBM_KHR","PLATFORM_GBM_MESA","PLATFORM_WAYLAND_EXT","PLATFORM_WAYLAND_KHR","PLATFORM_X11_EXT","PLATFORM_X11_KHR","PLATFORM_X11_SCREEN_EXT","PLATFORM_X11_SCREEN_KHR","QueryAPI","QueryAPI","QueryContext","QueryContext","QueryString","QueryString","QuerySurface","QuerySurface","READ","RED_SIZE","RENDERABLE_TYPE","RENDER_BUFFER","RGB_BUFFER","ReleaseTexImage","ReleaseTexImage","ReleaseThread","ReleaseThread","SAMPLES","SAMPLE_BUFFERS","SIGNALED","SINGLE_BUFFER","SLOW_CONFIG","STENCIL_SIZE","SUCCESS","SURFACE_TYPE","SWAP_BEHAVIOR","SWAP_BEHAVIOR_PRESERVED_BIT","SYNC_CL_EVENT","SYNC_CL_EVENT_COMPLETE","SYNC_CONDITION","SYNC_FENCE","SYNC_FLUSH_COMMANDS_BIT","SYNC_PRIOR_COMMANDS_COMPLETE","SYNC_STATUS","SYNC_TYPE","SurfaceAttrib","SurfaceAttrib","SwapBuffers","SwapBuffers","SwapBuffersWithDamageKHR","SwapBuffersWithDamageKHR","SwapInterval","SwapInterval","TEXTURE_2D","TEXTURE_FORMAT","TEXTURE_RGB","TEXTURE_RGBA","TEXTURE_TARGET","TIMEOUT_EXPIRED","TRANSPARENT_BLUE_VALUE","TRANSPARENT_GREEN_VALUE","TRANSPARENT_RED_VALUE","TRANSPARENT_RGB","TRANSPARENT_TYPE","TRUE","Terminate","Terminate","UNKNOWN","UNSIGNALED","VENDOR","VERSION","VERTICAL_RESOLUTION","VG_ALPHA_FORMAT","VG_ALPHA_FORMAT_NONPRE","VG_ALPHA_FORMAT_PRE","VG_ALPHA_FORMAT_PRE_BIT","VG_COLORSPACE","VG_COLORSPACE_LINEAR","VG_COLORSPACE_LINEAR_BIT","VG_COLORSPACE_sRGB","WIDTH","WINDOW_BIT","WaitClient","WaitClient","WaitGL","WaitGL","WaitNative","WaitNative","WaitSync","WaitSync","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","from","from","into","into","is_loaded","khronos_ssize_t","khronos_uint64_t","khronos_utime_nanoseconds_t","load_with","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","types","Bool","EGLAttrib","EGLAttribKHR","EGLBoolean","EGLClientBuffer","EGLClientPixmapHI","EGLConfig","EGLContext","EGLDeviceEXT","EGLDisplay","EGLGetBlobFuncANDROID","EGLImage","EGLImageKHR","EGLNativeDisplayType","EGLNativeFileDescriptorKHR","EGLNativePixmapType","EGLNativeWindowType","EGLOutputLayerEXT","EGLOutputPortEXT","EGLSetBlobFuncANDROID","EGLStreamKHR","EGLSurface","EGLSync","EGLSyncKHR","EGLSyncNV","EGLTime","EGLTimeKHR","EGLTimeNV","EGLenum","EGLint","EGLsizeiANDROID","EGLuint64KHR","EGLuint64NV","NativeDisplayType","NativePixmapType","NativeWindowType","__eglMustCastToProperFunctionPointerType","__eglMustCastToProperFunctionPointerType_fn","borrow","borrow","borrow_mut","borrow_mut","from","from","into","into","khronos_ssize_t","khronos_uint64_t","khronos_utime_nanoseconds_t","try_from","try_from","try_into","try_into","type_id","type_id"],"q":[[0,"glutin_egl_sys"],[10,"glutin_egl_sys::egl"],[335,"glutin_egl_sys::egl::types"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fallbacks: ClientWaitSyncKHR","","","","","","","","","","","","","","","","","","","","","","Fallbacks: CreateSync64KHR","","","","","","","","","","","Fallbacks: DestroyImageKHR","","","","Fallbacks: DestroySynceturns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if the function has been successfully loaded.","","","","Load each OpenGL symbol using a custom load function. This …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,20,1,20,1,20,1,20,1,20,1,20,1,20,0,0,0,1,20,1,20,1,20,1,20,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,25,26,25,26,25,26,25,26,0,0,0,25,26,25,26,25,26],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,2],3],0,[[1,4,5,6],3],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,4,6,7,6,6],3],0,[[1,4,8,6,9],6],0,[[1,4,5,10],3],0,[[1,4,7,11,6],11],0,[[1,4,11,2,12,13],14],0,[[1,4,2,12,7,6],5],0,[[1,4,7,6],5],0,[[1,4,7,10,6],5],0,[[1,4,7,15,13],5],0,[[1,4,7,15,6],5],0,[[1,4,7,15,13],5],0,[[1,4,7,15,6],5],0,[[1,4,2,13],8],0,[[1,4,7,16,6],5],0,0,0,0,0,0,[[1,4,11],3],0,[[1,4,14],3],0,[[1,4,5],3],0,[[1,4,8],3],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,4,7,6,6],3],0,[[1,4,7,6,6],3],0,[1,11],0,[1,4],0,[[1,6],5],0,[[1,17],4],0,[1,6],0,[[1,2,15,13],4],0,[[1,2,15,6],4],0,[[1,18],19],0,[[1,4,8,6,13],3],0,0,0,0,[[1,4,6,6],3],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,4,5,5,11],3],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],0,[[1,4,11,6,6],3],0,[[1,4,6],18],0,[[1,4,5,6,6],3],0,0,0,0,0,0,[[1,4,5,6],3],0,[1,3],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,4,5,6,6],3],0,[[1,4,5],3],0,[[1,4,5,6,6],3],0,[[1,4,6],3],0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,4],3],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,3],0,[1,3],0,[[1,6],3],0,[[1,4,8,6],3],0,[[]],[[]],[[]],[[]],[20,20],[1,1],[[]],[[]],[[]],[[]],[[]],[[]],[20,21],0,0,0,[22,1],[[]],[[]],[[],23],[[],23],[[],23],[[],23],[[],24],[[],24],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[],23],[[],23],[[],23],[[],23],[[],24],[[],24]],"c":[],"p":[[3,"Egl"],[6,"EGLenum"],[6,"EGLBoolean"],[6,"EGLDisplay"],[6,"EGLSurface"],[6,"EGLint"],[6,"EGLConfig"],[6,"EGLSync"],[6,"EGLTime"],[6,"EGLNativePixmapType"],[6,"EGLContext"],[6,"EGLClientBuffer"],[6,"EGLAttrib"],[6,"EGLImage"],[6,"c_void"],[6,"EGLNativeWindowType"],[6,"EGLNativeDisplayType"],[6,"c_char"],[6,"__eglMustCastToProperFunctionPointerType"],[3,"FnPtr"],[15,"bool"],[8,"FnMut"],[4,"Result"],[3,"TypeId"],[4,"__eglMustCastToProperFunctionPointerType_fn"],[3,"EGLClientPixmapHI"]]},\
"glutin_glx_sys":{"doc":"","t":"RRRRRRRRRRRRRRRDRRRGRRRRRRRRRRRRRRRRRRRRRGRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRDRGRRRRRRRRRRRRRRRGRRRDRRRRRRGRRRRRGRRRRRRRRRRRRRRRRRRRRRGRRRRGRRRRRRRRRRRRRRRRRRRRRRRRGCRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRDRRRRRRRRRRRRRRRRRRRGRRRRGRRRRRRRRRRRRRRRRRRRRRRRRRGRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRGRRRRRRRRRRRRRRRRGRRRRRRRRRRDDRRRRRRRRRRRRRRRRGRRRRRRRRRGRRRRRRRRRRRRRDRRRRRRRGRRRRRRRRGRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRMMMMMMMMMMMMMMMMMMMDDMMMMMMMMMRDGGMMMMMMMMMDDMMMMMDDMMMDMMDMMMMDDDRDDMMGGMMMMMMMMMMMMMMMMMMMMMMMDDMMMMMMMMMMMMMMMMMMMMMMDMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMGMMMMMMMMMMMMMMMMMMMGMDTMMDDDMMMMMMMMMMMMMMMDGGDGDDMMMMMMMMMMMMMMMMMDMDMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMDDMMDGGDGGGNNNDENENNGNNNNNNNNMRRDDRRRNGRRRRDTDMMDMMMMMMMMMMDGGDDMDMMMMGMMMMMMMMMMMMMMRRMRMRMMDMDMMDMMMMMDDMMRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRMMMDMGDMMMMMGMMMMMDMDMGGMMDMMMMMMMMMMMMMMMMMMMMMMMMMMDMMMMMMDMMDMMMMMMMMMMMMDMDDDMDMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMDMMMMMMMMDDRMMMMMMMRMMMMMMMMDDDMRMMDMRMMMMMMMMMMMDMMMMRMRMDMDMDMMMMMDDMMMMRRRRMMMMGMMMMMMMMMMMMMMMMMMMMMMMMMMMMDGMMMMMMGMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMRDRGRDRRMMMMMMMMMMMMMMRRMMMMMMMMMMMMMMMMMMMMMMMDMMMMRDRGMMMMMMGGGRRRDRGRGGMMMMMGRGRGMMGMMGGGGDRGRMMMMMMMMMMMMMMMMMMMMMMMMMMGGMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMRRRRRMRRGGDGRRMGEGRGGGMMMRRRRRRRRRRMMMMMMMMRGRGRRRRRGGGRGRGRDRMMMMRRRRRRRRMGGGGRGMMMMMMGGMMGMMMMMMMMMMMMMMMMMMMMGRDRGGGMMMMMMMMMDMMMMMMMMDMMMMGMMGMMMMMMMMMGDGMMMMMMMMMMMMMMMMMDMMMMMMMMMMMMMMMMMMMDMMMRRRRRREEEEEEEDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDEMMMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMLLMLLMAAMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMEEMMMMMAMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMRRRRRRRRRRRRRRRRRRRRRRLMLMLMLMLMLMLMLMLMRRRRRRRLMLMLMLMLMRRRRRRDRRLMLMLMLMLMLMLMLMLMLMLMDRLMRRRRRLMLMRRRRRRRRRRRRLMLMLMLMLMLMRRRRRRRRRRRRRRRLMLMRRRRRRRRRRLMRRRRRRLMLMRRLLLLLLLLLLLLLLLLLLLLLLAGEGGGGGDDGGGGGGGDDGDGDDGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGEGGGMDMGEEEEMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLMMMMMMMMMRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRLMLMLMLMLMLMLMLMLMLMRRRRRRRLMLMLMLMLMRRRRRRRRDRRLMLMLMLMLMLMLMLMLMLMLMLMDRLMRRRRRRRLMLMRRRRRRRRRRRRRLMLMLMLMLMLMRRRRRRRRRRRRRRRRRRRRLMLMLMLMLMRRRRRRRRRRLMRRRRRRLMLMRRLLLLLLLLLLLLLLLLLLLLLLAGEGGGGGDDGGGGGGGDDGDGDDGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGEGGGMDMGEEEEMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLMMMMMMMMM","n":["Above","AllHints","AllTemporary","AllValues","AllocAll","AllocNone","AllowExposures","AlreadyGrabbed","Always","AnyButton","AnyKey","AnyModifier","AnyPropertyType","ArcChord","ArcPieSlice","AspectRatio","AsyncBoth","AsyncKeyboard","AsyncPointer","Atom","AutoRepeatModeDefault","AutoRepeatModeOff","AutoRepeatModeOn","BadAccess","BadAlloc","BadAtom","BadColor","BadCursor","BadDrawable","BadFont","BadGC","BadIDChoice","BadImplementation","BadLength","BadMatch","BadName","BadPixmap","BadRequest","BadValue","BadWindow","Below","Bool","BottomIf","Button1","Button1Mask","Button1MotionMask","Button2","Button2Mask","Button2MotionMask","Button3","Button3Mask","Button3MotionMask","Button4","Button4Mask","Button4MotionMask","Button5","Button5Mask","Button5MotionMask","ButtonMotionMask","ButtonPress","ButtonPressMask","ButtonRelease","ButtonReleaseMask","CWBackPixel","CWBackPixmap","CWBackingPixel","CWBackingPlanes","CWBackingStore","CWBitGravity","CWBorderPixel","CWBorderPixmap","CWBorderWidth","CWColormap","CWCursor","CWDontPropagate","CWEventMask","CWHeight","CWOverrideRedirect","CWSaveUnder","CWSibling","CWStackMode","CWWidth","CWWinGravity","CWX","CWY","CapButt","CapNotLast","CapProjecting","CapRound","CenterGravity","CirculateNotify","CirculateRequest","ClientMessage","ClientMessageData","ClipByChildren","Colormap","ColormapChangeMask","ColormapInstalled","ColormapNotify","ColormapUninstalled","Complex","ConfigureNotify","ConfigureRequest","ControlMapIndex","ControlMask","Convex","CoordModeOrigin","CoordModePrevious","CopyFromParent","CreateNotify","CurrentTime","Cursor","CursorShape","DefaultBlanking","DefaultExposures","Depth","DestroyAll","DestroyNotify","DirectColor","DisableAccess","DisableScreenInterval","DisableScreenSaver","Display","DoBlue","DoGreen","DoRed","DontAllowExposures","DontPreferBlanking","Drawable","EastGravity","EnableAccess","EnterNotify","EnterWindowMask","EvenOddRule","Expose","ExposureMask","False","FamilyChaos","FamilyDECnet","FamilyInternet","FamilyInternet6","FamilyServerInterpreted","FillOpaqueStippled","FillSolid","FillStippled","FillTiled","FirstExtensionError","FocusChangeMask","FocusIn","FocusOut","Font","FontChange","FontLeftToRight","FontRightToLeft","ForgetGravity","GC","GCArcMode","GCBackground","GCCapStyle","GCClipMask","GCClipXOrigin","GCClipYOrigin","GCDashList","GCDashOffset","GCFillRule","GCFillStyle","GCFont","GCForeground","GCFunction","GCGraphicsExposures","GCJoinStyle","GCLastBit","GCLineStyle","GCLineWidth","GCPlaneMask","GCStipple","GCSubwindowMode","GCTile","GCTileStipXOrigin","GCTileStipYOrigin","GContext","GLXContext","GXand","GXandInverted","GXandReverse","GXclear","GXcopy","GXcopyInverted","GXequiv","GXinvert","GXnand","GXnoop","GXnor","GXor","GXorInverted","GXorReverse","GXset","GXxor","GenericEvent","GrabFrozen","GrabInvalidTime","GrabModeAsync","GrabModeSync","GrabNotViewable","GrabSuccess","GraphicsExpose","GravityNotify","GrayScale","HeightValue","HostDelete","HostInsert","IconMaskHint","IconPixmapHint","IconPositionHint","IconWindowHint","ImageFns","IncludeInferiors","InputFocus","InputHint","InputOnly","InputOutput","IsUnmapped","IsUnviewable","IsViewable","JoinBevel","JoinMiter","JoinRound","KBAutoRepeatMode","KBBellDuration","KBBellPercent","KBBellPitch","KBKey","KBKeyClickPercent","KBLed","KBLedMode","KeyCode","KeyPress","KeyPressMask","KeyRelease","KeyReleaseMask","KeySym","KeymapNotify","KeymapStateMask","LASTEvent","LSBFirst","LastExtensionError","LeaveNotify","LeaveWindowMask","LedModeOff","LedModeOn","LineDoubleDash","LineOnOffDash","LineSolid","LockMapIndex","LockMask","LowerHighest","MSBFirst","MapNotify","MapRequest","MappingBusy","MappingFailed","MappingKeyboard","MappingModifier","MappingNotify","MappingPointer","MappingSuccess","Mask","Mod1MapIndex","Mod1Mask","Mod2MapIndex","Mod2Mask","Mod3MapIndex","Mod3Mask","Mod4MapIndex","Mod4Mask","Mod5MapIndex","Mod5Mask","MotionNotify","NoEventMask","NoExpose","NoSymbol","NoValue","Nonconvex","NorthEastGravity","NorthGravity","NorthWestGravity","NotUseful","NotifyAncestor","NotifyDetailNone","NotifyGrab","NotifyHint","NotifyInferior","NotifyNonlinear","NotifyNonlinearVirtual","NotifyNormal","NotifyPointer","NotifyPointerRoot","NotifyUngrab","NotifyVirtual","NotifyWhileGrabbed","Opposite","OwnerGrabButtonMask","PAllHints","PAspect","PBaseSize","PMaxSize","PMinSize","PPosition","PResizeInc","PSize","PWinGravity","ParentRelative","Pixmap","PlaceOnBottom","PlaceOnTop","PointerMotionHintMask","PointerMotionMask","PointerRoot","PointerWindow","PreferBlanking","PropModeAppend","PropModePrepend","PropModeReplace","PropertyChangeMask","PropertyDelete","PropertyNewValue","PropertyNotify","PseudoColor","RaiseLowest","Region","ReparentNotify","ReplayKeyboard","ReplayPointer","ResizeRedirectMask","ResizeRequest","RetainPermanent","RetainTemporary","RevertToNone","RevertToParent","RevertToPointerRoot","Screen","ScreenFormat","ScreenSaverActive","ScreenSaverReset","SelectionClear","SelectionNotify","SelectionRequest","SetModeDelete","SetModeInsert","ShiftMapIndex","ShiftMask","SouthEastGravity","SouthGravity","SouthWestGravity","StateHint","StaticColor","StaticGravity","StaticGray","Status","StippleShape","StructureNotifyMask","SubstructureNotifyMask","SubstructureRedirectMask","Success","SyncBoth","SyncKeyboard","SyncPointer","TileShape","Time","TopIf","True","TrueColor","USPosition","USSize","UnmapGravity","UnmapNotify","Unsorted","VisibilityChangeMask","VisibilityFullyObscured","VisibilityNotify","VisibilityPartiallyObscured","VisibilityUnobscured","Visual","VisualAllMask","VisualBitsPerRGBMask","VisualBlueMaskMask","VisualClassMask","VisualColormapSizeMask","VisualDepthMask","VisualGreenMaskMask","VisualID","VisualIDMask","VisualNoMask","VisualRedMaskMask","VisualScreenMask","WestGravity","WhenMapped","WidthValue","WindingRule","Window","WindowGroupHint","XA_ARC","XA_ATOM","XA_BITMAP","XA_CAP_HEIGHT","XA_CARDINAL","XA_COLORMAP","XA_COPYRIGHT","XA_CURSOR","XA_CUT_BUFFER0","XA_CUT_BUFFER1","XA_CUT_BUFFER2","XA_CUT_BUFFER3","XA_CUT_BUFFER4","XA_CUT_BUFFER5","XA_CUT_BUFFER6","XA_CUT_BUFFER7","XA_DRAWABLE","XA_END_SPACE","XA_FAMILY_NAME","XA_FONT","XA_FONT_NAME","XA_FULL_NAME","XA_INTEGER","XA_ITALIC_ANGLE","XA_MAX_SPACE","XA_MIN_SPACE","XA_NORM_SPACE","XA_NOTICE","XA_PIXMAP","XA_POINT","XA_POINT_SIZE","XA_PRIMARY","XA_QUAD_WIDTH","XA_RECTANGLE","XA_RESOLUTION","XA_RESOURCE_MANAGER","XA_RGB_BEST_MAP","XA_RGB_BLUE_MAP","XA_RGB_COLOR_MAP","XA_RGB_DEFAULT_MAP","XA_RGB_GRAY_MAP","XA_RGB_GREEN_MAP","XA_RGB_RED_MAP","XA_SECONDARY","XA_STRIKEOUT_ASCENT","XA_STRIKEOUT_DESCENT","XA_STRING","XA_SUBSCRIPT_X","XA_SUBSCRIPT_Y","XA_SUPERSCRIPT_X","XA_SUPERSCRIPT_Y","XA_UNDERLINE_POSITION","XA_UNDERLINE_THICKNESS","XA_VISUALID","XA_WEIGHT","XA_WINDOW","XA_WM_CLASS","XA_WM_CLIENT_MACHINE","XA_WM_COMMAND","XA_WM_HINTS","XA_WM_ICON_NAME","XA_WM_ICON_SIZE","XA_WM_NAME","XA_WM_NORMAL_HINTS","XA_WM_SIZE_HINTS","XA_WM_TRANSIENT_FOR","XA_WM_ZOOM_HINTS","XA_X_HEIGHT","XActivateScreenSaver","XAddConnectionWatch","XAddExtension","XAddHost","XAddHosts","XAddPixel","XAddToExtensionList","XAddToSaveSet","XAllPlanes","XAllocClassHint","XAllocColor","XAllocColorCells","XAllocColorPlanes","XAllocIconSize","XAllocNamedColor","XAllocSizeHints","XAllocStandardColormap","XAllocWMHints","XAllowEvents","XAnyEvent","XArc","XAutoRepeatOff","XAutoRepeatOn","XBaseFontNameListOfFontSet","XBell","XBitmapBitOrder","XBitmapPad","XBitmapUnit","XBlackPixel","XBlackPixelOfScreen","XBufferOverflow","XButtonEvent","XButtonPressedEvent","XButtonReleasedEvent","XCellsOfScreen","XChangeActivePointerGrab","XChangeGC","XChangeKeyboardControl","XChangeKeyboardMapping","XChangePointerControl","XChangeProperty","XChangeSaveSet","XChangeWindowAttributes","XChar2b","XCharStruct","XCheckIfEvent","XCheckMaskEvent","XCheckTypedEvent","XCheckTypedWindowEvent","XCheckWindowEvent","XCirculateEvent","XCirculateRequestEvent","XCirculateSubwindows","XCirculateSubwindowsDown","XCirculateSubwindowsUp","XClassHint","XClearArea","XClearWindow","XClientMessageEvent","XClipBox","XCloseDisplay","XCloseIM","XCloseOM","XColor","XColormapEvent","XComposeStatus","XCompoundTextStyle","XConfigureEvent","XConfigureRequestEvent","XConfigureWindow","XConnectionNumber","XConnectionWatchProc","XContext","XContextDependentDrawing","XContextualDrawing","XConvertCase","XConvertSelection","XCopyArea","XCopyColormapAndFree","XCopyGC","XCopyPlane","XCreateBitmapFromData","XCreateColormap","XCreateFontCursor","XCreateFontSet","XCreateGC","XCreateGlyphCursor","XCreateIC","XCreateImage","XCreateOC","XCreatePixmap","XCreatePixmapCursor","XCreatePixmapFromBitmapData","XCreateRegion","XCreateSimpleWindow","XCreateWindow","XCreateWindowEvent","XCrossingEvent","XDefaultColormap","XDefaultColormapOfScreen","XDefaultDepth","XDefaultDepthOfScreen","XDefaultGC","XDefaultGCOfScreen","XDefaultRootWindow","XDefaultScreen","XDefaultScreenOfDisplay","XDefaultString","XDefaultVisual","XDefaultVisualOfScreen","XDefineCursor","XDeleteContext","XDeleteModifiermapEntry","XDeleteProperty","XDestroyIC","XDestroyImage","XDestroyOC","XDestroyRegion","XDestroySubwindows","XDestroyWindow","XDestroyWindowEvent","XDirectionalDependentDrawing","XDisableAccessControl","XDisplayCells","XDisplayHeight","XDisplayHeightMM","XDisplayKeycodes","XDisplayMotionBufferSize","XDisplayName","XDisplayOfIM","XDisplayOfOM","XDisplayOfScreen","XDisplayPlanes","XDisplayString","XDisplayWidth","XDisplayWidthMM","XDoesBackingStore","XDoesSaveUnders","XDrawArc","XDrawArcs","XDrawImageString","XDrawImageString16","XDrawLine","XDrawLines","XDrawPoint","XDrawPoints","XDrawRectangle","XDrawRectangles","XDrawSegments","XDrawString","XDrawString16","XDrawText","XDrawText16","XEDataObject","XEHeadOfExtensionList","XESetBeforeFlush","XESetCloseDisplay","XESetCopyEventCookie","XESetCopyGC","XESetCreateFont","XESetCreateGC","XESetError","XESetErrorString","XESetEventToWire","XESetFlushGC","XESetFreeFont","XESetFreeGC","XESetPrintErrorValues","XESetWireToError","XESetWireToEvent","XESetWireToEventCookie","XEmptyRegion","XEnableAccessControl","XEnterWindowEvent","XEqualRegion","XErrorEvent","XEvent","XEventMaskOfScreen","XEventsQueued","XExposeEvent","XExtCodes","XExtData","XExtendedMaxRequestSize","XExtentsOfFontSet","XFetchBuffer","XFetchBytes","XFetchName","XFillArc","XFillArcs","XFillPolygon","XFillRectangle","XFillRectangles","XFilterEvent","XFindContext","XFindOnExtensionList","XFlush","XFlushGC","XFocusChangeEvent","XFocusInEvent","XFocusOutEvent","XFontProp","XFontSet","XFontSetExtents","XFontStruct","XFontsOfFontSet","XForceScreenSaver","XFree","XFreeColormap","XFreeColors","XFreeCursor","XFreeEventData","XFreeExtensionList","XFreeFont","XFreeFontInfo","XFreeFontNames","XFreeFontPath","XFreeFontSet","XFreeGC","XFreeModifiermap","XFreePixmap","XFreeStringList","XGCValues","XGContextFromGC","XGenericEventCookie","XGeometry","XGetAtomName","XGetAtomNames","XGetClassHint","XGetCommand","XGetDefault","XGetErrorDatabaseText","XGetErrorText","XGetEventData","XGetFontPath","XGetFontProperty","XGetGCValues","XGetGeometry","XGetICValues","XGetIMValues","XGetIconName","XGetIconSizes","XGetImage","XGetInputFocus","XGetKeyboardControl","XGetKeyboardMapping","XGetModifierMapping","XGetMotionEvents","XGetNormalHints","XGetOCValues","XGetOMValues","XGetPixel","XGetPointerControl","XGetPointerMapping","XGetRGBColormaps","XGetScreenSaver","XGetSelectionOwner","XGetSizeHints","XGetStandardColormap","XGetSubImage","XGetTextProperty","XGetTransientForHint","XGetVisualInfo","XGetWMClientMachine","XGetWMColormapWindows","XGetWMHints","XGetWMIconName","XGetWMName","XGetWMNormalHints","XGetWMProtocols","XGetWMSizeHints","XGetWindowAttributes","XGetWindowProperty","XGetZoomHints","XGrabButton","XGrabKey","XGrabKeyboard","XGrabPointer","XGrabServer","XGraphicsExposeEvent","XGravityEvent","XHeightMMOfScreen","XHeightOfScreen","XHostAddress","XIC","XICCEncodingStyle","XICCallback","XICProc","XID","XIM","XIMAbsolutePosition","XIMBackwardChar","XIMBackwardWord","XIMCallback","XIMCaretDirection","XIMCaretDown","XIMCaretStyle","XIMCaretUp","XIMDontChange","XIMFeedback","XIMForwardChar","XIMForwardWord","XIMIsInvisible","XIMIsPrimary","XIMIsSecondary","XIMLineEnd","XIMLineStart","XIMNextLine","XIMOfIC","XIMPreeditArea","XIMPreeditCallbacks","XIMPreeditCaretCallbackStruct","XIMPreeditDrawCallbackStruct","XIMPreeditNone","XIMPreeditNothing","XIMPreeditPosition","XIMPreviousLine","XIMProc","XIMStatusArea","XIMStatusCallbacks","XIMStatusNone","XIMStatusNothing","XIMText","XIMTextString","XIconSize","XIconifyWindow","XIfEvent","XImage","XImageByteOrder","XInitExtension","XInitImage","XInitThreads","XInsertModifiermapEntry","XInstallColormap","XInternAtom","XInternAtoms","XInternalConnectionNumbers","XIntersectRegion","XKeyEvent","XKeyPressedEvent","XKeyReleasedEvent","XKeyboardControl","XKeyboardState","XKeycodeToKeysym","XKeymapEvent","XKeysymToKeycode","XKeysymToString","XKillClient","XLastKnownRequestProcessed","XLeaveWindowEvent","XListDepths","XListExtensions","XListFonts","XListFontsWithInfo","XListHosts","XListInstalledColormaps","XListPixmapFormats","XListProperties","XLoadFont","XLoadQueryFont","XLocaleOfFontSet","XLocaleOfIM","XLocaleOfOM","XLockDisplay","XLookupBoth","XLookupChars","XLookupColor","XLookupKeySym","XLookupKeysym","XLookupNone","XLookupString","XLowerWindow","XMapEvent","XMapRaised","XMapRequestEvent","XMapSubwindows","XMapWindow","XMappingEvent","XMaskEvent","XMatchVisualInfo","XMaxCmapsOfScreen","XMaxRequestSize","XMinCmapsOfScreen","XModifierKeymap","XMotionEvent","XMoveResizeWindow","XMoveWindow","XNArea","XNAreaNeeded","XNAreaNeeded_0","XNArea_0","XNBackground","XNBackgroundPixmap","XNBackgroundPixmap_0","XNBackground_0","XNClientWindow","XNClientWindow_0","XNColormap","XNColormap_0","XNCursor","XNCursor_0","XNDestroyCallback","XNDestroyCallback_0","XNFilterEvents","XNFilterEvents_0","XNFocusWindow","XNFocusWindow_0","XNFontSet","XNFontSet_0","XNForeground","XNForeground_0","XNGeometryCallback","XNGeometryCallback_0","XNHotKey","XNHotKeyState","XNHotKeyState_0","XNHotKey_0","XNInputStyle","XNInputStyle_0","XNLineSpace","XNLineSpace_0","XNPreeditAttributes","XNPreeditAttributes_0","XNPreeditCaretCallback","XNPreeditCaretCallback_0","XNPreeditDoneCallback","XNPreeditDoneCallback_0","XNPreeditDrawCallback","XNPreeditDrawCallback_0","XNPreeditStartCallback","XNPreeditStartCallback_0","XNPreeditState","XNPreeditStateNotifyCallback","XNPreeditStateNotifyCallback_0","XNPreeditState_0","XNQueryICValuesList","XNQueryICValuesList_0","XNQueryIMValuesList","XNQueryIMValuesList_0","XNQueryInputStyle","XNQueryInputStyle_0","XNR6PreeditCallback","XNR6PreeditCallback_0","XNResetState","XNResetState_0","XNResourceClass","XNResourceClass_0","XNResourceName","XNResourceName_0","XNSeparatorofNestedList","XNSeparatorofNestedList_0","XNSpotLocation","XNSpotLocation_0","XNStatusAttributes","XNStatusAttributes_0","XNStatusDoneCallback","XNStatusDoneCallback_0","XNStatusDrawCallback","XNStatusDrawCallback_0","XNStatusStartCallback","XNStatusStartCallback_0","XNStdColormap","XNStdColormap_0","XNStringConversion","XNStringConversionCallback","XNStringConversionCallback_0","XNStringConversion_0","XNVaNestedList","XNVaNestedList_0","XNVisiblePosition","XNVisiblePosition_0","XNegative","XNewModifiermap","XNextEvent","XNextRequest","XNoExposeEvent","XNoOp","XOM","XOMCharSetList","XOMOfOC","XOffsetRegion","XOpenDisplay","XOpenIM","XOpenOM","XOrientation","XParseColor","XParseGeometry","XPeekEvent","XPeekIfEvent","XPending","XPixmapFormatValues","XPlanesOfScreen","XPoint","XPointInRegion","XPointer","XPointerMovedEvent","XPolygonRegion","XProcessInternalConnection","XPropertyEvent","XProtocolRevision","XProtocolVersion","XPutBackEvent","XPutImage","XPutPixel","XQLength","XQueryBestCursor","XQueryBestSize","XQueryBestStipple","XQueryBestTile","XQueryColor","XQueryColors","XQueryExtension","XQueryFont","XQueryKeymap","XQueryPointer","XQueryTextExtents","XQueryTextExtents16","XQueryTree","XRaiseWindow","XReadBitmapFile","XReadBitmapFileData","XRebindKeysym","XRecolorCursor","XReconfigureWMWindow","XRectInRegion","XRectangle","XRefreshKeyboardMapping","XRegisterIMInstantiateCallback","XRemoveConnectionWatch","XRemoveFromSaveSet","XRemoveHost","XRemoveHosts","XReparentEvent","XReparentWindow","XResetScreenSaver","XResizeRequestEvent","XResizeWindow","XResourceManagerString","XRestackWindows","XRootWindow","XRootWindowOfScreen","XRotateBuffers","XRotateWindowProperties","XSaveContext","XScreenCount","XScreenNumberOfScreen","XScreenOfDisplay","XScreenResourceString","XSegment","XSelectInput","XSelectionClearEvent","XSelectionEvent","XSelectionRequestEvent","XSendEvent","XServerInterpretedAddress","XServerVendor","XSetAccessControl","XSetAfterFunction","XSetArcMode","XSetAuthorization","XSetBackground","XSetClassHint","XSetClipMask","XSetClipOrigin","XSetClipRectangles","XSetCloseDownMode","XSetCommand","XSetDashes","XSetErrorHandler","XSetFillRule","XSetFillStyle","XSetFont","XSetFontPath","XSetForeground","XSetFunction","XSetGraphicsExposures","XSetICFocus","XSetICValues","XSetIMValues","XSetIOErrorHandler","XSetIconName","XSetIconSizes","XSetInputFocus","XSetLineAttributes","XSetLocaleModifiers","XSetModifierMapping","XSetNormalHints","XSetOCValues","XSetOMValues","XSetPlaneMask","XSetPointerMapping","XSetRGBColormaps","XSetRegion","XSetScreenSaver","XSetSelectionOwner","XSetSizeHints","XSetStandardColormap","XSetStandardProperties","XSetState","XSetStipple","XSetSubwindowMode","XSetTSOrigin","XSetTextProperty","XSetTile","XSetTransientForHint","XSetWMClientMachine","XSetWMColormapWindows","XSetWMHints","XSetWMIconName","XSetWMName","XSetWMNormalHints","XSetWMProperties","XSetWMProtocols","XSetWMSizeHints","XSetWindowAttributes","XSetWindowBackground","XSetWindowBackgroundPixmap","XSetWindowBorder","XSetWindowBorderPixmap","XSetWindowBorderWidth","XSetWindowColormap","XSetZoomHints","XShrinkRegion","XSizeHints","XStandardColormap","XStdICCTextStyle","XStoreBuffer","XStoreBytes","XStoreColor","XStoreColors","XStoreName","XStoreNamedColor","XStringListToTextProperty","XStringStyle","XStringToKeysym","XSubImage","XSubtractRegion","XSupportsLocale","XSync","XSynchronize","XTextExtents","XTextExtents16","XTextItem","XTextItem16","XTextProperty","XTextPropertyToStringList","XTextStyle","XTextWidth","XTextWidth16","XTimeCoord","XTranslateCoordinates","XUTF8StringStyle","XUndefineCursor","XUngrabButton","XUngrabKey","XUngrabKeyboard","XUngrabPointer","XUngrabServer","XUninstallColormap","XUnionRectWithRegion","XUnionRegion","XUnloadFont","XUnlockDisplay","XUnmapEvent","XUnmapSubwindows","XUnmapWindow","XUnregisterIMInstantiateCallback","XUnsetICFocus","XUrgencyHint","XVaCreateNestedList","XValue","XVendorRelease","XVisibilityEvent","XVisualIDFromVisual","XVisualInfo","XWMGeometry","XWMHints","XWarpPointer","XWhitePixel","XWhitePixelOfScreen","XWidthMMOfScreen","XWidthOfScreen","XWindowAttributes","XWindowChanges","XWindowEvent","XWithdrawWindow","XWriteBitmapFile","XXorRegion","XYBitmap","XYPixmap","X_PROTOCOL","X_PROTOCOL_REVISION","XcmsAddColorSpace","XcmsAddFunctionSet","XcmsAllocColor","XcmsAllocNamedColor","XcmsCCC","XcmsCCCOfColormap","XcmsCIELabClipL","XcmsCIELabClipLab","XcmsCIELabClipab","XcmsCIELabQueryMaxC","XcmsCIELabQueryMaxL","XcmsCIELabQueryMaxLC","XcmsCIELabQueryMinL","XcmsCIELabToCIEXYZ","XcmsCIELabWhiteShiftColors","XcmsCIELuvClipL","XcmsCIELuvClipLuv","XcmsCIELuvClipuv","XcmsCIELuvQueryMaxC","XcmsCIELuvQueryMaxL","XcmsCIELuvQueryMaxLC","XcmsCIELuvQueryMinL","XcmsCIELuvToCIEuvY","XcmsCIELuvWhiteShiftColors","XcmsCIEXYZToCIELab","XcmsCIEXYZToCIEuvY","XcmsCIEXYZToCIExyY","XcmsCIEXYZToRGBi","XcmsCIEuvYToCIELuv","XcmsCIEuvYToCIEXYZ","XcmsCIEuvYToTekHVC","XcmsCIExyYToCIEXYZ","XcmsClientWhitePointOfCCC","XcmsColor","XcmsColorSpace","XcmsConvertColors","XcmsCreateCCC","XcmsDefaultCCC","XcmsDisplayOfCCC","XcmsFormatOfPrefix","XcmsFreeCCC","XcmsFunctionSet","XcmsLookupColor","XcmsPrefixOfFormat","XcmsQueryBlack","XcmsQueryBlue","XcmsQueryColor","XcmsQueryColors","XcmsQueryGreen","XcmsQueryRed","XcmsQueryWhite","XcmsRGBToRGBi","XcmsRGBiToCIEXYZ","XcmsRGBiToRGB","XcmsScreenNumberOfCCC","XcmsScreenWhitePointOfCCC","XcmsSetCCCOfColormap","XcmsSetCompressionProc","XcmsSetWhiteAdjustProc","XcmsSetWhitePoint","XcmsStoreColor","XcmsStoreColors","XcmsTekHVCClipC","XcmsTekHVCClipV","XcmsTekHVCClipVC","XcmsTekHVCQueryMaxC","XcmsTekHVCQueryMaxV","XcmsTekHVCQueryMaxVC","XcmsTekHVCQueryMaxVSamples","XcmsTekHVCQueryMinV","XcmsTekHVCToCIEuvY","XcmsTekHVCWhiteShiftColors","XcmsVisualOfCCC","XkbAccessXNotify","XkbAccessXNotifyEvent","XkbAccessXNotifyMask","XkbAction","XkbActionMessage","XkbActionMessageEvent","XkbActionMessageLength","XkbActionMessageMask","XkbAddDeviceLedInfo","XkbAddGeomColor","XkbAddGeomDoodad","XkbAddGeomKey","XkbAddGeomKeyAlias","XkbAddGeomOutline","XkbAddGeomOverlay","XkbAddGeomOverlayKey","XkbAddGeomOverlayRow","XkbAddGeomProperty","XkbAddGeomRow","XkbAddGeomSection","XkbAddGeomShape","XkbAddKeyType","XkbAllEventsMask","XkbAllStateComponentsMask","XkbAllocClientMap","XkbAllocCompatMap","XkbAllocControls","XkbAllocDeviceInfo","XkbAllocGeomColors","XkbAllocGeomDoodads","XkbAllocGeomKeyAliases","XkbAllocGeomKeys","XkbAllocGeomOutlines","XkbAllocGeomOverlayKeys","XkbAllocGeomOverlayRows","XkbAllocGeomOverlays","XkbAllocGeomPoints","XkbAllocGeomProps","XkbAllocGeomRows","XkbAllocGeomSectionDoodads","XkbAllocGeomSections","XkbAllocGeomShapes","XkbAllocGeometry","XkbAllocIndicatorMaps","XkbAllocKeyboard","XkbAllocNames","XkbAllocServerMap","XkbAnyEvent","XkbApplyCompatMapToKey","XkbApplyVirtualModChanges","XkbBell","XkbBellEvent","XkbBellNotify","XkbBellNotifyEvent","XkbBellNotifyMask","XkbBoundsPtr","XkbChangeDeviceInfo","XkbChangeEnabledControls","XkbChangeKeycodeRange","XkbChangeMap","XkbChangeNames","XkbChangeTypesOfKey","XkbChangesPtr","XkbClientMapPtr","XkbColorPtr","XkbCompatGrabModsMask","XkbCompatLookupModsMask","XkbCompatMapNotify","XkbCompatMapNotifyEvent","XkbCompatMapNotifyMask","XkbCompatMapPtr","XkbCompatStateMask","XkbComponentListPtr","XkbComponentNamesPtr","XkbComputeEffectiveMap","XkbComputeRowBounds","XkbComputeSectionBounds","XkbComputeShapeBounds","XkbComputeShapeTop","XkbControlsChangesPtr","XkbControlsNotify","XkbControlsNotifyEvent","XkbControlsNotifyMask","XkbControlsPtr","XkbCopyKeyType","XkbCopyKeyTypes","XkbDescPtr","XkbDeviceBell","XkbDeviceBellEvent","XkbDeviceChangesPtr","XkbDeviceInfoPtr","XkbDeviceLedInfoPtr","XkbDoodadPtr","XkbEvent","XkbExtensionDeviceNotify","XkbExtensionDeviceNotifyEvent","XkbExtensionDeviceNotifyMask","XkbFindOverlayForKey","XkbForceBell","XkbForceDeviceBell","XkbFreeClientMap","XkbFreeCompatMap","XkbFreeComponentList","XkbFreeControls","XkbFreeDeviceInfo","XkbFreeGeomColors","XkbFreeGeomDoodads","XkbFreeGeomKeyAliases","XkbFreeGeomKeys","XkbFreeGeomOutlines","XkbFreeGeomOverlayKeys","XkbFreeGeomOverlayRows","XkbFreeGeomOverlays","XkbFreeGeomPoints","XkbFreeGeomProperties","XkbFreeGeomRows","XkbFreeGeomSections","XkbFreeGeomShapes","XkbFreeGeometry","XkbFreeIndicatorMaps","XkbFreeKeyboard","XkbFreeNames","XkbFreeServerMap","XkbGeometryPtr","XkbGeometrySizesPtr","XkbGetAutoRepeatRate","XkbGetAutoResetControls","XkbGetCompatMap","XkbGetControls","XkbGetDetectableAutoRepeat","XkbGetDeviceButtonActions","XkbGetDeviceInfo","XkbGetDeviceInfoChanges","XkbGetDeviceLedInfo","XkbGetGeometry","XkbGetIndicatorMap","XkbGetIndicatorState","XkbGetKeyActions","XkbGetKeyBehaviors","XkbGetKeyExplicitComponents","XkbGetKeyModifierMap","XkbGetKeySyms","XkbGetKeyTypes","XkbGetKeyVirtualModMap","XkbGetKeyboard","XkbGetKeyboardByName","XkbGetMap","XkbGetMapChanges","XkbGetNamedDeviceIndicator","XkbGetNamedGeometry","XkbGetNamedIndicator","XkbGetNames","XkbGetPerClientControls","XkbGetState","XkbGetUpdatedMap","XkbGetVirtualMods","XkbGetXlibControls","XkbGrabModsMask","XkbGroupBaseMask","XkbGroupLatchMask","XkbGroupLockMask","XkbGroupStateMask","XkbIgnoreExtension","XkbIndicatorMapNotify","XkbIndicatorMapNotifyMask","XkbIndicatorMapPtr","XkbIndicatorMapRec","XkbIndicatorNotifyEvent","XkbIndicatorPtr","XkbIndicatorStateNotify","XkbIndicatorStateNotifyMask","XkbInitCanonicalKeyTypes","XkbKbdDpyStatePtr","XkbKbdDpyStateRec","XkbKeyAliasPtr","XkbKeyNameLength","XkbKeyNamePtr","XkbKeyPtr","XkbKeyTypePtr","XkbKeyTypesForCoreSymbols","XkbKeycodeToKeysym","XkbKeysymToModifiers","XkbLC_AllComposeControls","XkbLC_AllControls","XkbLC_AlwaysConsumeShiftAndLock","XkbLC_BeepOnComposeFail","XkbLC_ComposeLED","XkbLC_ConsumeKeysOnComposeFail","XkbLC_ConsumeLookupMods","XkbLC_ControlFallback","XkbLC_ForceLatinLookup","XkbLC_IgnoreNewKeyboards","XkbLatchGroup","XkbLatchModifiers","XkbLibraryVersion","XkbListComponents","XkbLockGroup","XkbLockModifiers","XkbLookupKeyBinding","XkbLookupKeySym","XkbLookupModsMask","XkbMapChangesPtr","XkbMapNotify","XkbMapNotifyEvent","XkbMapNotifyMask","XkbModifierBaseMask","XkbModifierLatchMask","XkbModifierLockMask","XkbModifierStateMask","XkbModsPtr","XkbModsRec","XkbNameChangesPtr","XkbNamesNotify","XkbNamesNotifyEvent","XkbNamesNotifyMask","XkbNamesPtr","XkbNewKeyboardNotify","XkbNewKeyboardNotifyEvent","XkbNewKeyboardNotifyMask","XkbNoteControlsChanges","XkbNoteDeviceChanges","XkbNoteMapChanges","XkbNoteNameChanges","XkbNumIndicators","XkbNumKbdGroups","XkbNumVirtualMods","XkbOD_BadLibraryVersion","XkbOD_BadServerVersion","XkbOD_ConnectionRefused","XkbOD_NonXkbServer","XkbOD_Success","XkbOpenDisplay","XkbOutlinePtr","XkbOverlayKeyPtr","XkbOverlayPtr","XkbOverlayRowPtr","XkbPointerButtonMask","XkbPropertyPtr","XkbQueryExtension","XkbRefreshKeyboardMapping","XkbResizeDeviceButtonActions","XkbResizeKeyActions","XkbResizeKeySyms","XkbResizeKeyType","XkbRowPtr","XkbSectionPtr","XkbSelectEventDetails","XkbSelectEvents","XkbServerMapPtr","XkbSetAtomFuncs","XkbSetAutoRepeatRate","XkbSetAutoResetControls","XkbSetCompatMap","XkbSetControls","XkbSetDebuggingFlags","XkbSetDetectableAutoRepeat","XkbSetDeviceButtonActions","XkbSetDeviceInfo","XkbSetDeviceLedInfo","XkbSetGeometry","XkbSetIgnoreLockMods","XkbSetIndicatorMap","XkbSetMap","XkbSetNamedDeviceIndicator","XkbSetNamedIndicator","XkbSetNames","XkbSetPerClientControls","XkbSetServerInternalMods","XkbSetXlibControls","XkbShapePtr","XkbStateNotify","XkbStateNotifyEvent","XkbStateNotifyMask","XkbStatePtr","XkbStateRec","XkbSymInterpretPtr","XkbToControl","XkbTranslateKeyCode","XkbTranslateKeySym","XkbUpdateActionVirtualMods","XkbUpdateKeyTypeVirtualMods","XkbUpdateMapFromCore","XkbUseExtension","XkbVirtualModsToReal","XkbXlibControlsImplemented","Xlib","XmbDrawImageString","XmbDrawString","XmbDrawText","XmbLookupString","XmbResetIC","XmbSetWMProperties","XmbTextEscapement","XmbTextExtents","XmbTextItem","XmbTextListToTextProperty","XmbTextPerCharExtents","XmbTextPropertyToTextList","Xpermalloc","XrmBinding","XrmCombineDatabase","XrmCombineFileDatabase","XrmDatabase","XrmDestroyDatabase","XrmEnumerateDatabase","XrmGetDatabase","XrmGetFileDatabase","XrmGetResource","XrmGetStringDatabase","XrmInitialize","XrmLocaleOfDatabase","XrmMergeDatabases","XrmOptionDescList","XrmOptionDescRec","XrmOptionKind","XrmParseCommand","XrmPermStringToQuark","XrmPutFileDatabase","XrmPutLineResource","XrmPutResource","XrmPutStringResource","XrmQGetResource","XrmQGetSearchList","XrmQGetSearchResource","XrmQPutResource","XrmQPutStringResource","XrmQuarkToString","XrmSetDatabase","XrmStringToBindingQuarkList","XrmStringToQuark","XrmStringToQuarkList","XrmUniqueQuark","XrmValue","Xutf8DrawImageString","Xutf8DrawString","Xutf8DrawText","Xutf8LookupString","Xutf8ResetIC","Xutf8SetWMProperties","Xutf8TextEscapement","Xutf8TextExtents","Xutf8TextListToTextProperty","Xutf8TextPerCharExtents","Xutf8TextPropertyToTextList","XwcDrawImageString","XwcDrawString","XwcDrawText","XwcFreeStringList","XwcLookupString","XwcResetIC","XwcTextEscapement","XwcTextExtents","XwcTextItem","XwcTextListToTextProperty","XwcTextPerCharExtents","XwcTextPropertyToTextList","YNegative","YSorted","YValue","YXBanded","YXSorted","ZPixmap","_XDisplay","_XGC","_XIC","_XIM","_XOC","_XOM","_XRegion","_XcmsCCC","_XcmsColorSpace","_XcmsFunctionSet","_XkbAction","_XkbBounds","_XkbChanges","_XkbClientMapRec","_XkbColor","_XkbCompatMapRec","_XkbComponentList","_XkbComponentNames","_XkbControls","_XkbControlsChanges","_XkbControlsNotify","_XkbControlsNotifyEvent","_XkbDesc","_XkbDeviceChanges","_XkbDeviceInfo","_XkbDeviceLedInfo","_XkbDoodad","_XkbExtensionDeviceNotify","_XkbExtensionDeviceNotifyEvent","_XkbGeometry","_XkbGeometrySizes","_XkbIndicatorMapRec","_XkbIndicatorRec","_XkbKey","_XkbKeyAliasRec","_XkbKeyNameRec","_XkbKeyType","_XkbMapChanges","_XkbMapNotifyEvent","_XkbMods","_XkbNameChanges","_XkbNamesNotify","_XkbNamesNotifyEvent","_XkbNamesRec","_XkbOutline","_XkbOverlay","_XkbOverlayKey","_XkbOverlayRow","_XkbProperty","_XkbRow","_XkbSection","_XkbServerMapRec","_XkbShape","_XkbStateRec","_XkbSymInterpretRec","_XrmHashBucketRec","above","above","add_pixel","addr","address","alias","all_chars_exist","all_event_masks","angle1","angle2","any","arc_mode","argKind","as_bytes","as_bytes_mut","as_longs","as_longs_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_shorts","as_shorts_mut","ascent","ascent","atom","attributes","auto_repeat_mode","auto_repeats","ax_options","ax_timeout","axt_ctrls_mask","axt_ctrls_values","axt_opts_mask","axt_opts_values","background","background_pixel","background_pixmap","backing_pixel","backing_pixel","backing_planes","backing_planes","backing_store","backing_store","backing_store","base_group","base_group","base_height","base_mods","base_mods","base_pixel","base_width","bell_class","bell_duration","bell_duration","bell_id","bell_percent","bell_percent","bell_pitch","bell_pitch","bit_gravity","bit_gravity","bitmap_bit_order","bitmap_pad","bitmap_unit","bits_per_pixel","bits_per_pixel","bits_per_pixel","bits_per_rgb","bits_per_rgb","black_pixel","blue","blue_mask","blue_mask","blue_mask","blue_max","blue_mult","border_pixel","border_pixmap","border_width","border_width","border_width","border_width","border_width","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","button","button","byte1","byte2","byte_order","bytes_per_line","callback","callback","cap_style","card32","caret","changed","changed","changed","changed","changed","changed_ctrls","changed_groups","changed_groups","changed_indicators","changed_vmods","chars","chars","chars","chars","chars_matched","charset_count","charset_list","chg_first","chg_length","circulate","circulate_request","class","class","class","client_data","client_data","client_message","clip_mask","clip_x_origin","clip_y_origin","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmap","colormap","colormap","colormap","colormap","colormap","colormap_size","compat","compat","compat_grab_mods","compat_grab_mods","compat_lookup_mods","compat_lookup_mods","compat_state","compat_state","compose_ptr","configure","configure_request","cookie","count","count","count","create_image","create_window","crossing","ctrls","cursor","dash_offset","dashes","data","data","data","debounce_delay","debounce_delay","default","default_char","default_gc","delta","delta","delta","delta","depth","depth","depth","depth","depth","depth","depths","descent","descent","destroy_image","destroy_window","detail","detail","detail","detail","device","device","device","device","device","device","device","device","device","device","device","device","device_spec","direction","direction","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","do_not_propagate_mask","do_not_propagate_mask","dpy","drawable","drawable","duration","enabled_ctrl_changes","enabled_ctrls","enabled_ctrls","encoding","encoding_is_wchar","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","error","error_code","event","event","event","event","event","event","event","event","event_mask","event_only","event_type","event_type","evtype","expose","ext_data","ext_data","ext_data","ext_data","extension","extension","family","feedback","fid","fill_rule","fill_style","first_btn","first_error","first_event","first_key","first_key_act","first_key_bahavior","first_key_explicit","first_key_sym","first_keycode","first_lvl","first_modmap_key","first_si","first_type","first_type","first_vmodmap_key","flags","flags","flags","flags","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","focus","focus_change","font","font","font","font_set","font_set","foreground","format","format","format","free_private","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_configure","funcs","function","generic_event_cookie","geom","geometry","get_byte","get_long","get_pixel","get_short","get_type","global_auto_repeat","glx","glx_extra","grab_mods","grab_mods","graphics_expose","graphics_exposures","gravity","green","green_mask","green_mask","green_mask","green_max","green_mult","group","group","group","groups","groups","groups_wrap","height","height","height","height","height","height","height","height","height","height","height","height","height","height_inc","height_inc","icon_mask","icon_pixmap","icon_window","icon_x","icon_y","ignore_loc","indicators","indicators","initial_state","input","internal","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_hint","join_style","key","key","key_aliases","key_click_percent","key_click_percent","key_event_follows","key_vector","keycode","keycode","keycode","keycode","keycode","keycodes","keymap","keys","killid","latched_group","latched_group","latched_mods","latched_mods","lbearing","led","led_class","led_id","led_mask","led_mode","led_state","leds_defined","length","length","line_style","line_width","locked_group","locked_group","locked_mods","locked_mods","lookup_mods","lookup_mods","major_code","major_code","major_opcode","map","map","map_entries","map_installed","map_request","map_state","mapping","maps","mask","max_aspect","max_bounds","max_byte1","max_char_or_byte2","max_height","max_height","max_ink_extent","max_key_code","max_key_code","max_key_code","max_keypermod","max_logical_extent","max_maps","max_width","max_width","message","message_type","mheight","min_aspect","min_bounds","min_byte1","min_char_or_byte2","min_height","min_height","min_key_code","min_key_code","min_key_code","min_maps","min_width","min_width","minor_code","minor_code","minor_code","mk_curve","mk_delay","mk_dflt_btn","mk_interval","mk_max_speed","mk_time_to_max","mode","mode","modifiermap","mods","mods","mods","motion","multi_byte","mwidth","n_properties","name","name","name","names","nchars","nchars","nchars","nchars","ndepths","new","new","next","nitems","no_expose","num_aliases","num_btns","num_groups","num_groups","num_key_acts","num_key_aliases","num_key_behaviors","num_key_explicit","num_key_syms","num_keys","num_keys","num_lvls","num_modmap_keys","num_radio_groups","num_rg","num_si","num_si","num_total_si","num_types","num_types","num_vmodmap_keys","number","nvisuals","obdata","old_device","old_max_key_code","old_min_key_code","open","option","override_redirect","override_redirect","override_redirect","override_redirect","override_redirect","override_redirect","owner","pad","pad","parent","parent","parent","parent","parent","per_char","per_key_repeat","percent","phys_indicators","phys_symbols","pitch","pixel","place","place","plane_mask","position","press","private_data","properties","property","property","property","ptr_buttons","ptr_buttons","put_pixel","radio_groups","rbearing","real","real_mods","reason","red","red_mask","red_mask","red_mask","red_max","red_mult","reparent","repeat_delay","repeat_interval","req_major","req_major","req_major","req_minor","req_minor","req_minor","request","request_code","requestor","requestor","res_class","res_name","resize_request","resourceid","root","root","root","root","root","root","root_depth","root_input_mask","root_visual","same_screen","same_screen","same_screen","same_screen","save_under","save_under","save_unders","scanline_pad","scanline_pad","screen","screen","selection","selection","selection","selection","selection_clear","selection_request","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","server","set_byte","set_long","set_short","sibling","size","size_si","sk_delay","slow_keys_delay","specifier","stack_mode","state","state","state","state","state","state","state","state","stipple","string","style","sub_image","subwindow","subwindow","subwindow","subwindow","subwindow_mode","supported","sym_interpret","symbols","target","target","text","tile","time","time","time","time","time","time","time","time","time","time","time","time","time","time","time","time","time","time","time","time","time","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","ts_x_origin","ts_y_origin","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","typelength","types","unmap","unsupported","value","value","value","value_mask","valuelength","visibility","visual","visual","visualid","visualid","visualid","visuals","vmods","vmods","vmods","white_pixel","wide_char","width","width","width","width","width","width","width","width","width","width","width","width","width","width","width_inc","width_inc","win_gravity","win_gravity","win_gravity","window","window","window","window","window","window","window","window","window","window","window","window","window","window","window","window","window","window","window","window","window","window","window","window","window","window","window_group","x","x","x","x","x","x","x","x","x","x","x","x","x","x","x","x","x","x","x","x1","x2","xError","xEvent","x_root","x_root","x_root","x_root","xf86vm_notify","xkb","xkb_type","xkb_type","xkb_type","xkb_type","xkb_type","xkb_type","xkb_type","xkb_type","xkb_type","xkb_type","xkb_type","xkb_type","xoffset","xrr_crtc_change_notify","xrr_notify","xrr_output_change_notify","xrr_output_property_notify","xrr_provider_change_notify","xrr_provider_property_notify","xrr_resource_change_notify","xrr_screen_change_notify","xss_notify","y","y","y","y","y","y","y","y","y","y","y","y","y","y","y","y","y","y","y","y1","y2","y_root","y_root","y_root","y_root","your_event_mask","ACCUM_ALPHA_SIZE","ACCUM_BLUE_SIZE","ACCUM_BUFFER_BIT","ACCUM_GREEN_SIZE","ACCUM_RED_SIZE","ALPHA_SIZE","AUX_BUFFERS","AUX_BUFFERS_BIT","BACK_LEFT_BUFFER_BIT","BACK_RIGHT_BUFFER_BIT","BAD_ATTRIBUTE","BAD_CONTEXT","BAD_ENUM","BAD_SCREEN","BAD_VALUE","BAD_VISUAL","BLUE_SIZE","BUFFER_SIZE","BufferSwapComplete","COLOR_INDEX_BIT","COLOR_INDEX_TYPE","CONFIG_CAVEAT","ChooseFBConfig","ChooseFBConfig","ChooseVisual","ChooseVisual","CopyContext","CopyContext","CreateContext","CreateContext","CreateGLXPixmap","CreateGLXPixmap","CreateNewContext","CreateNewContext","CreatePbuffer","CreatePbuffer","CreatePixmap","CreatePixmap","CreateWindow","CreateWindow","DAMAGED","DEPTH_BUFFER_BIT","DEPTH_SIZE","DIRECT_COLOR","DONT_CARE","DOUBLEBUFFER","DRAWABLE_TYPE","DestroyContext","DestroyContext","DestroyGLXPixmap","DestroyGLXPixmap","DestroyPbuffer","DestroyPbuffer","DestroyPixmap","DestroyPixmap","DestroyWindow","DestroyWindow","EVENT_MASK","EXTENSIONS","EXTENSION_NAME","FBCONFIG_ID","FRONT_LEFT_BUFFER_BIT","FRONT_RIGHT_BUFFER_BIT","FnPtr","GRAY_SCALE","GREEN_SIZE","GetClientString","GetClientString","GetConfig","GetConfig","GetCurrentContext","GetCurrentContext","GetCurrentDisplay","GetCurrentDisplay","GetCurrentDrawable","GetCurrentDrawable","GetCurrentReadDrawable","GetCurrentReadDrawable","GetFBConfigAttrib","GetFBConfigAttrib","GetFBConfigs","GetFBConfigs","GetProcAddress","GetProcAddress","GetSelectedEvent","GetSelectedEvent","GetVisualFromFBConfig","GetVisualFromFBConfig","Glx","HEIGHT","IsDirect","IsDirect","LARGEST_PBUFFER","LEVEL","MAX_PBUFFER_HEIGHT","MAX_PBUFFER_PIXELS","MAX_PBUFFER_WIDTH","MakeContextCurrent","MakeContextCurrent","MakeCurrent","MakeCurrent","NONE","NON_CONFORMANT_CONFIG","NO_EXTENSION","PBUFFER","PBUFFER_BIT","PBUFFER_CLOBBER_MASK","PBUFFER_HEIGHT","PBUFFER_WIDTH","PIXMAP_BIT","PRESERVED_CONTENTS","PSEUDO_COLOR","PbufferClobber","QueryContext","QueryContext","QueryDrawable","QueryDrawable","QueryExtension","QueryExtension","QueryExtensionsString","QueryExtensionsString","QueryServerString","QueryServerString","QueryVersion","QueryVersion","RED_SIZE","RENDER_TYPE","RGBA","RGBA_BIT","RGBA_TYPE","SAMPLES","SAMPLE_BUFFERS","SAVED","SCREEN","SLOW_CONFIG","STATIC_COLOR","STATIC_GRAY","STENCIL_BUFFER_BIT","STENCIL_SIZE","STEREO","SelectEvent","SelectEvent","SwapBuffers","SwapBuffers","TRANSPARENT_ALPHA_VALUE","TRANSPARENT_BLUE_VALUE","TRANSPARENT_GREEN_VALUE","TRANSPARENT_INDEX","TRANSPARENT_INDEX_VALUE","TRANSPARENT_RED_VALUE","TRANSPARENT_RGB","TRANSPARENT_TYPE","TRUE_COLOR","USE_GL","UseXFont","UseXFont","VENDOR","VERSION","VISUAL_ID","WIDTH","WINDOW","WINDOW_BIT","WaitGL","WaitGL","WaitX","WaitX","X_RENDERABLE","X_VISUAL_TYPE","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","from","from","into","into","is_loaded","load_with","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","types","Bool","Display","Font","GLDEBUGPROC","GLDEBUGPROCAMD","GLDEBUGPROCARB","GLDEBUGPROCKHR","GLXBufferClobberEventSGIX","GLXBufferSwapComplete","GLXContext","GLXContextID","GLXDrawable","GLXFBConfig","GLXFBConfigID","GLXFBConfigIDSGIX","GLXFBConfigSGIX","GLXHyperpipeConfigSGIX","GLXHyperpipeNetworkSGIX","GLXPbuffer","GLXPbufferClobberEvent","GLXPbufferSGIX","GLXPipeRect","GLXPipeRectLimits","GLXPixmap","GLXVideoCaptureDeviceNV","GLXVideoDeviceNV","GLXVideoSourceSGIX","GLXWindow","GLbitfield","GLboolean","GLbyte","GLchar","GLcharARB","GLclampd","GLclampf","GLclampx","GLdouble","GLeglImageOES","GLenum","GLfixed","GLfloat","GLhalf","GLhalfARB","GLhalfNV","GLhandleARB","GLint","GLint64","GLint64EXT","GLintptr","GLintptrARB","GLshort","GLsizei","GLsizeiptr","GLsizeiptrARB","GLsync","GLubyte","GLuint","GLuint64","GLuint64EXT","GLushort","GLvdpauSurfaceNV","GLvoid","Pixmap","Visual","VisualID","Window","XID","XOrigin","XVisualInfo","YOrigin","__GLXextFuncPtr","__GLXextFuncPtr_fn","__GLsync","_cl_context","_cl_event","aux_buffer","bits_per_rgb","blue_mask","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffer_mask","channel","class","colormap_size","count","count","depth","destHeight","destWidth","destXOrigin","destYOrigin","display","display","display","draw_type","draw_type","drawable","drawable","drawable","event_type","event_type","event_type","from","from","from","from","from","from","from","from","from","from","from","from","from","from","green_mask","height","height","into","into","into","into","into","into","into","into","into","into","into","into","into","into","mask","maxHeight","maxWidth","msc","networkId","participationType","pipeName","pipeName","pipeName","pipeName","red_mask","sbc","screen","send_event","send_event","send_event","serial","serial","serial","srcHeight","srcWidth","srcXOrigin","srcYOrigin","timeSlice","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_","type_","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","ust","visual","visualid","width","width","x","x","y","y","ACCUM_ALPHA_SIZE","ACCUM_BLUE_SIZE","ACCUM_BUFFER_BIT","ACCUM_GREEN_SIZE","ACCUM_RED_SIZE","ALPHA_SIZE","AUX_BUFFERS","AUX_BUFFERS_BIT","BACK_BUFFER_AGE_EXT","BACK_LEFT_BUFFER_BIT","BACK_RIGHT_BUFFER_BIT","BAD_ATTRIBUTE","BAD_CONTEXT","BAD_ENUM","BAD_SCREEN","BAD_VALUE","BAD_VISUAL","BLUE_SIZE","BUFFER_SIZE","BufferSwapComplete","COLOR_INDEX_BIT","COLOR_INDEX_TYPE","CONFIG_CAVEAT","CONTEXT_COMPATIBILITY_PROFILE_BIT_ARB","CONTEXT_CORE_PROFILE_BIT_ARB","CONTEXT_DEBUG_BIT_ARB","CONTEXT_FLAGS_ARB","CONTEXT_FORWARD_COMPATIBLE_BIT_ARB","CONTEXT_MAJOR_VERSION_ARB","CONTEXT_MINOR_VERSION_ARB","CONTEXT_PROFILE_MASK_ARB","CONTEXT_RELEASE_BEHAVIOR_ARB","CONTEXT_RELEASE_BEHAVIOR_FLUSH_ARB","CONTEXT_RELEASE_BEHAVIOR_NONE_ARB","CONTEXT_RESET_NOTIFICATION_STRATEGY_ARB","CONTEXT_ROBUST_ACCESS_BIT_ARB","ChooseFBConfig","ChooseFBConfig","ChooseVisual","ChooseVisual","CopyContext","CopyContext","CreateContext","CreateContext","CreateContextAttribsARB","CreateContextAttribsARB","CreateGLXPixmap","CreateGLXPixmap","CreateNewContext","CreateNewContext","CreatePbuffer","CreatePbuffer","CreatePixmap","CreatePixmap","CreateWindow","CreateWindow","DAMAGED","DEPTH_BUFFER_BIT","DEPTH_SIZE","DIRECT_COLOR","DONT_CARE","DOUBLEBUFFER","DRAWABLE_TYPE","DestroyContext","DestroyContext","DestroyGLXPixmap","DestroyGLXPixmap","DestroyPbuffer","DestroyPbuffer","DestroyPixmap","DestroyPixmap","DestroyWindow","DestroyWindow","EVENT_MASK","EXTENSIONS","EXTENSION_NAME","FBCONFIG_ID","FRAMEBUFFER_SRGB_CAPABLE_ARB","FRAMEBUFFER_SRGB_CAPABLE_EXT","FRONT_LEFT_BUFFER_BIT","FRONT_RIGHT_BUFFER_BIT","FnPtr","GRAY_SCALE","GREEN_SIZE","GetClientString","GetClientString","GetConfig","GetConfig","GetCurrentContext","GetCurrentContext","GetCurrentDisplay","GetCurrentDisplay","GetCurrentDrawable","GetCurrentDrawable","GetCurrentReadDrawable","GetCurrentReadDrawable","GetFBConfigAttrib","GetFBConfigAttrib","GetFBConfigs","GetFBConfigs","GetProcAddress","GetProcAddress","GetSelectedEvent","GetSelectedEvent","GetSwapIntervalMESA","GetSwapIntervalMESA","GetVisualFromFBConfig","GetVisualFromFBConfig","Glx","HEIGHT","IsDirect","IsDirect","LARGEST_PBUFFER","LEVEL","LOSE_CONTEXT_ON_RESET_ARB","MAX_PBUFFER_HEIGHT","MAX_PBUFFER_PIXELS","MAX_PBUFFER_WIDTH","MAX_SWAP_INTERVAL_EXT","MakeContextCurrent","MakeContextCurrent","MakeCurrent","MakeCurrent","NONE","NON_CONFORMANT_CONFIG","NO_EXTENSION","NO_RESET_NOTIFICATION_ARB","PBUFFER","PBUFFER_BIT","PBUFFER_CLOBBER_MASK","PBUFFER_HEIGHT","PBUFFER_WIDTH","PIXMAP_BIT","PRESERVED_CONTENTS","PSEUDO_COLOR","PbufferClobber","QueryContext","QueryContext","QueryDrawable","QueryDrawable","QueryExtension","QueryExtension","QueryExtensionsString","QueryExtensionsString","QueryServerString","QueryServerString","QueryVersion","QueryVersion","RED_SIZE","RENDER_TYPE","RGBA","RGBA_BIT","RGBA_FLOAT_BIT_ARB","RGBA_FLOAT_TYPE_ARB","RGBA_TYPE","SAMPLES","SAMPLES_ARB","SAMPLE_BUFFERS","SAMPLE_BUFFERS_ARB","SAVED","SCREEN","SLOW_CONFIG","STATIC_COLOR","STATIC_GRAY","STENCIL_BUFFER_BIT","STENCIL_SIZE","STEREO","SWAP_INTERVAL_EXT","SelectEvent","SelectEvent","SwapBuffers","SwapBuffers","SwapIntervalEXT","SwapIntervalEXT","SwapIntervalMESA","SwapIntervalMESA","SwapIntervalSGI","SwapIntervalSGI","TRANSPARENT_ALPHA_VALUE","TRANSPARENT_BLUE_VALUE","TRANSPARENT_GREEN_VALUE","TRANSPARENT_INDEX","TRANSPARENT_INDEX_VALUE","TRANSPARENT_RED_VALUE","TRANSPARENT_RGB","TRANSPARENT_TYPE","TRUE_COLOR","USE_GL","UseXFont","UseXFont","VENDOR","VERSION","VISUAL_ID","WIDTH","WINDOW","WINDOW_BIT","WaitGL","WaitGL","WaitX","WaitX","X_RENDERABLE","X_VISUAL_TYPE","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","from","from","into","into","is_loaded","load_with","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","types","Bool","Display","Font","GLDEBUGPROC","GLDEBUGPROCAMD","GLDEBUGPROCARB","GLDEBUGPROCKHR","GLXBufferClobberEventSGIX","GLXBufferSwapComplete","GLXContext","GLXContextID","GLXDrawable","GLXFBConfig","GLXFBConfigID","GLXFBConfigIDSGIX","GLXFBConfigSGIX","GLXHyperpipeConfigSGIX","GLXHyperpipeNetworkSGIX","GLXPbuffer","GLXPbufferClobberEvent","GLXPbufferSGIX","GLXPipeRect","GLXPipeRectLimits","GLXPixmap","GLXVideoCaptureDeviceNV","GLXVideoDeviceNV","GLXVideoSourceSGIX","GLXWindow","GLbitfield","GLboolean","GLbyte","GLchar","GLcharARB","GLclampd","GLclampf","GLclampx","GLdouble","GLeglImageOES","GLenum","GLfixed","GLfloat","GLhalf","GLhalfARB","GLhalfNV","GLhandleARB","GLint","GLint64","GLint64EXT","GLintptr","GLintptrARB","GLshort","GLsizei","GLsizeiptr","GLsizeiptrARB","GLsync","GLubyte","GLuint","GLuint64","GLuint64EXT","GLushort","GLvdpauSurfaceNV","GLvoid","Pixmap","Visual","VisualID","Window","XID","XOrigin","XVisualInfo","YOrigin","__GLXextFuncPtr","__GLXextFuncPtr_fn","__GLsync","_cl_context","_cl_event","aux_buffer","bits_per_rgb","blue_mask","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffer_mask","channel","class","colormap_size","count","count","depth","destHeight","destWidth","destXOrigin","destYOrigin","display","display","display","draw_type","draw_type","drawable","drawable","drawable","event_type","event_type","event_type","from","from","from","from","from","from","from","from","from","from","from","from","from","from","green_mask","height","height","into","into","into","into","into","into","into","into","into","into","into","into","into","into","mask","maxHeight","maxWidth","msc","networkId","participationType","pipeName","pipeName","pipeName","pipeName","red_mask","sbc","screen","send_event","send_event","send_event","serial","serial","serial","srcHeight","srcWidth","srcXOrigin","srcYOrigin","timeSlice","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_","type_","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","ust","visual","visualid","width","width","x","x","y","y"],"q":[[0,"glutin_glx_sys"],[4436,"glutin_glx_sys::glx"],[4627,"glutin_glx_sys::glx::types"],[4863,"glutin_glx_sys::glx_extra"],[5088,"glutin_glx_sys::glx_extra::types"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","GLX bindings","Functions that are not necessarily always available","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if the function has been successfully loaded.","Load each OpenGL symbol using a custom load function. This …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeeturns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if the function has been successfully loaded.","Load each OpenGL symbol using a custom load function. This …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"if":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,[[3,[2]]]],[1,[[3,[2]]]],[1,[[3,[4]]]],[1,[[3,[4]]]],[5,6],[5,7],[5,8],[5,9],[5,10],[5,11],[5,12],[5,13],[5,14],[5,15],[5,16],[5,17],[5,18],[5,19],[5,20],[5,21],[5,22],[5,23],[5,24],[5,25],[5,26],[5,27],[5,28],[5,29],[5,30],[5,31],[5,32],[5,33],[5,34],[5,35],[5,36],[5,37],[5,38],[5,39],[5,40],[5,41],[5,42],[5,43],[5,44],[5,45],[5,46],[5,47],[1,[[3,[48]]]],[1,[[3,[4]]]],[1,[[3,[2]]]],[1,[[3,[49]]]],[1,[[3,[50]]]],[1,[[3,[51]]]],[5,47],[5,12],[5,18],[5,20],[5,25],[5,43],[5,46],[5,27],[5,28],[5,31],[5,42],[5,11],[5,16],[5,19],[5,26],[5,39],[5,41],[5,8],[5,29],[5,13],[5,34],[5,17],[5,33],[5,6],[5,9],[5,22],[5,40],[5,44],[5,36],[5,10],[5,14],[5,37],[5,32],[5,15],[5,30],[5,23],[5,24],[5,35],[5,21],[5,38],[5,45],[5,7],[1,[[3,[51]]]],[1,[[3,[50]]]],[1,[[3,[4]]]],[1,[[3,[49]]]],[1,[[3,[2]]]],[1,[[3,[48]]]],[1,[[3,[48]]]],[1,[[3,[48]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[5,5],[45,45],[36,36],[21,21],[22,22],[7,7],[42,42],[6,6],[46,46],[15,15],[41,41],[17,17],[37,37],[31,31],[32,32],[40,40],[47,47],[12,12],[8,8],[33,33],[14,14],[35,35],[20,20],[25,25],[28,28],[43,43],[24,24],[44,44],[10,10],[39,39],[16,16],[18,18],[52,52],[53,53],[54,54],[55,55],[56,56],[57,57],[58,58],[59,59],[60,60],[61,61],[62,62],[63,63],[64,64],[65,65],[66,66],[67,67],[68,68],[69,69],[70,70],[71,71],[72,72],[73,73],[74,74],[75,75],[76,76],[77,77],[78,78],[79,79],[80,80],[81,81],[82,82],[83,83],[84,84],[27,27],[85,85],[86,86],[87,87],[88,88],[89,89],[90,90],[91,91],[92,92],[93,93],[94,94],[95,95],[96,96],[97,97],[98,98],[99,99],[100,100],[101,101],[102,102],[103,103],[104,104],[105,105],[106,106],[107,107],[108,108],[109,109],[110,110],[111,111],[112,112],[113,113],[114,114],[115,115],[116,116],[117,117],[118,118],[1,1],[119,119],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[45,45],120],[[36,36],120],[[21,21],120],[[22,22],120],[[7,7],120],[[42,42],120],[[6,6],120],[[46,46],120],[[15,15],120],[[41,41],120],[[17,17],120],[[37,37],120],[[31,31],120],[[32,32],120],[[40,40],120],[[47,47],120],[[12,12],120],[[8,8],120],[[33,33],120],[[14,14],120],[[35,35],120],[[20,20],120],[[25,25],120],[[28,28],120],[[43,43],120],[[24,24],120],[[44,44],120],[[10,10],120],[[39,39],120],[[16,16],120],[[18,18],120],[[52,52],120],[[53,53],120],[[54,54],120],[[55,55],120],[[56,56],120],[[57,57],120],[[58,58],120],[[59,59],120],[[60,60],120],[[61,61],120],[[62,62],120],[[63,63],120],[[64,64],120],[[65,65],120],[[66,66],120],[[67,67],120],[[68,68],120],[[69,69],120],[[70,70],120],[[71,71],120],[[72,72],120],[[73,73],120],[[74,74],120],[[75,75],120],[[76,76],120],[[77,77],120],[[78,78],120],[[79,79],120],[[80,80],120],[[81,81],120],[[82,82],120],[[83,83],120],[[84,84],120],[[27,27],120],[[85,85],120],[[86,86],120],[[87,87],120],[[88,88],120],[[89,89],120],[[90,90],120],[[91,91],120],[[92,92],120],[[93,93],120],[[94,94],120],[[95,95],120],[[96,96],120],[[97,97],120],[[98,98],120],[[99,99],120],[[100,100],120],[[101,101],120],[[102,102],120],[[103,103],120],[[104,104],120],[[105,105],120],[[106,106],120],[[107,107],120],[[108,108],120],[[109,109],120],[[110,110],120],[[111,111],120],[[112,112],120],[[113,113],120],[[114,114],120],[[115,115],120],[[118,118],120],[[1,1],120],[[119,119],120],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[5,121],[[123,[122]]]],[[45,121],[[123,[122]]]],[[36,121],[[123,[122]]]],[[21,121],[[123,[122]]]],[[22,121],[[123,[122]]]],[[7,121],[[123,[122]]]],[[42,121],[[123,[122]]]],[[6,121],[[123,[122]]]],[[46,121],[[123,[122]]]],[[15,121],[[123,[122]]]],[[41,121],[[123,[122]]]],[[17,121],[[123,[122]]]],[[37,121],[[123,[122]]]],[[31,121],[[123,[122]]]],[[32,121],[[123,[122]]]],[[40,121],[[123,[122]]]],[[47,121],[[123,[122]]]],[[12,121],[[123,[122]]]],[[8,121],[[123,[122]]]],[[33,121],[[123,[122]]]],[[14,121],[[123,[122]]]],[[35,121],[[123,[122]]]],[[20,121],[[123,[122]]]],[[25,121],[[123,[122]]]],[[28,121],[[123,[122]]]],[[43,121],[[123,[122]]]],[[24,121],[[123,[122]]]],[[44,121],[[123,[122]]]],[[10,121],[[123,[122]]]],[[39,121],[[123,[122]]]],[[16,121],[[123,[122]]]],[[18,121],[[123,[122]]]],[[52,121],[[123,[122]]]],[[53,121],[[123,[122]]]],[[54,121],[[123,[122]]]],[[55,121],[[123,[122]]]],[[56,121],[[123,[122]]]],[[57,121],[[123,[122]]]],[[58,121],[[123,[122]]]],[[59,121],[[123,[122]]]],[[60,121],[[123,[122]]]],[[61,121],[[123,[122]]]],[[62,121],[[123,[122]]]],[[63,121],[[123,[122]]]],[[64,121],[[123,[122]]]],[[65,121],[[123,[122]]]],[[66,121],[[123,[122]]]],[[67,121],[[123,[122]]]],[[68,121],[[123,[122]]]],[[69,121],[[123,[122]]]],[[70,121],[[123,[122]]]],[[71,121],[[123,[122]]]],[[72,121],[[123,[122]]]],[[73,121],[[123,[122]]]],[[74,121],[[123,[122]]]],[[75,121],[[123,[122]]]],[[76,121],[[123,[122]]]],[[77,121],[[123,[122]]]],[[78,121],[[123,[122]]]],[[79,121],[[123,[122]]]],[[80,121],[[123,[122]]]],[[81,121],[[123,[122]]]],[[82,121],[[123,[122]]]],[[83,121],[[123,[122]]]],[[84,121],[[123,[122]]]],[[27,121],[[123,[122]]]],[[85,121],[[123,[122]]]],[[86,121],[[123,[122]]]],[[87,121],[[123,[122]]]],[[88,121],[[123,[122]]]],[[89,121],[[123,[122]]]],[[90,121],[[123,[122]]]],[[91,121],[[123,[122]]]],[[92,121],[[123,[122]]]],[[93,121],[[123,[122]]]],[[94,121],[[123,[122]]]],[[95,121],[[123,[122]]]],[[96,121],[[123,[122]]]],[[97,121],[[123,[122]]]],[[98,121],[[123,[122]]]],[[99,121],[[123,[122]]]],[[100,121],[[123,[122]]]],[[101,121],[[123,[122]]]],[[102,121],[[123,[122]]]],[[103,121],[[123,[122]]]],[[104,121],[[123,[122]]]],[[105,121],[[123,[122]]]],[[106,121],[[123,[122]]]],[[107,121],[[123,[122]]]],[[108,121],[[123,[122]]]],[[109,121],[[123,[122]]]],[[110,121],[[123,[122]]]],[[111,121],[[123,[122]]]],[[112,121],[[123,[122]]]],[[113,121],[[123,[122]]]],[[114,121],[[123,[122]]]],[[115,121],[[123,[122]]]],[[118,121],[[123,[122]]]],[[1,121],[[123,[122]]]],[[119,121],[[123,[122]]]],0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[7,5],[33,5],[19,5],[29,5],[15,5],[19,5],[16,5],[20,5],[32,5],[10,5],[40,5],[23,5],[27,5],[12,5],[21,5],[28,5],[41,5],[25,5],[44,5],[[]],[32,5],[27,5],[47,5],[43,5],[9,5],[38,5],[42,5],[11,5],[13,5],[46,5],[37,5],[30,5],[26,5],[36,5],[22,5],[13,5],[20,5],[26,5],[8,5],[37,5],[29,5],[34,5],[47,5],[44,5],[35,5],[28,5],[34,5],[24,5],[16,5],[42,5],[18,5],[14,5],[18,5],[39,5],[24,5],[7,5],[17,5],[22,5],[45,5],[36,5],[33,5],[21,5],[25,5],[11,5],[41,5],[31,5],[31,5],[30,5],[15,5],[14,5],[23,5],[17,5],[8,5],[9,5],[43,5],[39,5],[45,5],[35,5],[10,5],[38,5],[40,5],[12,5],[46,5],[6,5],[6,5],[5,45],[5,45],[[]],[[]],[5,36],[5,36],[5,21],[5,21],[[]],[[]],[5,22],[5,22],[5,7],[5,7],[[]],[5,42],[5,42],[[]],[[]],[5,6],[5,6],[5,46],[5,46],[[]],[5,15],[[]],[5,15],[5,41],[[]],[5,41],[5,17],[5,17],[[]],[[]],[5,37],[5,37],[5,31],[5,31],[[]],[5,32],[[]],[5,32],[5,40],[[]],[5,40],[[]],[5,47],[5,47],[[]],[5,12],[5,12],[5,8],[[]],[5,8],[5,33],[[]],[5,33],[5,14],[5,14],[[]],[5,35],[5,35],[[]],[5,20],[5,20],[[]],[5,25],[[]],[5,25],[5,28],[5,28],[[]],[5,43],[5,43],[[]],[5,24],[5,24],[[]],[[]],[5,44],[5,44],[5,10],[5,10],[[]],[5,39],[5,39],[[]],[[]],[5,16],[5,16],[5,18],[[]],[5,18],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[5,27],[5,27],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[124,[2]]],1],[[[124,[49]]],1],[[[124,[50]]],1],[[[124,[51]]],1],[[[124,[48]]],1],[[[124,[4]]],1],[[]],[[]],0,0,0,0,0,0,[[1,125],2],[[1,125],4],0,[[1,125],48],[5,126],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],[[123,[127,128]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,125,2]],[[1,125,4]],[[1,125,48]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[130,131,132,132,132],133],0,[[130,131,132,132],134],0,[[130,131,135,135,136]],0,[[130,131,134,135,137],135],0,[[130,131,134,138],139],0,[[130,131,133,132,135,137],135],0,[[130,131,133,132],140],0,[[130,131,133,138,132],139],0,[[130,131,133,141,132],142],0,0,0,0,0,0,0,0,[[130,131,135]],0,[[130,131,139]],0,[[130,131,140]],0,[[130,131,139]],0,[[130,131,142]],0,0,0,0,0,0,0,0,0,0,[[130,131,132],143],0,[[130,131,134,132,132],132],0,[130,135],0,[130,131],0,[130,144],0,[130,144],0,[[130,131,133,132,132],132],0,[[130,131,132,132],133],0,[[130,145],146],0,[[130,131,144,136]],0,[[130,131,133],134],0,0,0,[[130,131,135],137],0,0,0,0,0,0,[[130,131,144,144,135],137],0,[[130,131,144,135],137],0,0,0,0,0,0,0,0,0,0,0,0,0,[[130,131,135,132,132],132],0,[[130,131,144,132,147]],0,[[130,131,132,132],137],0,[[130,131,132],143],0,[[130,131,132,132],143],0,[[130,131,132,132],137],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[130,131,144,136]],0,[[130,131,144]],0,0,0,0,0,0,0,0,0,0,0,[[130,148,132,132,132]],0,0,0,0,0,0,0,[130],0,[130],0,0,0,[[]],[[]],[[]],[[]],[149,149],[130,130],[[]],[[]],[[]],[[]],[[]],[[]],[149,120],[150,130],[[]],[[]],[[],123],[[],123],[[],123],[[],123],[[],129],[[],129],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],0,0,[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[151,152,132,132,132],153],0,[[151,152,132,132],154],0,[[151,152,155,155,136]],0,[[151,152,154,155,156],155],0,[[151,152,153,155,156,132],155],0,[[151,152,154,157],158],0,[[151,152,153,132,155,156],155],0,[[151,152,153,132],159],0,[[151,152,153,157,132],158],0,[[151,152,153,160,132],161],0,0,0,0,0,0,0,0,[[151,152,155]],0,[[151,152,158]],0,[[151,152,159]],0,[[151,152,158]],0,[[151,152,161]],0,0,0,0,0,0,0,0,0,0,0,0,[[151,152,132],143],0,[[151,152,154,132,132],132],0,[151,155],0,[151,152],0,[151,162],0,[151,162],0,[[151,152,153,132,132],132],0,[[151,152,132,132],153],0,[[151,163],164],0,[[151,152,162,136]],0,[151,132],0,[[151,152,153],154],0,0,0,[[151,152,155],156],0,0,0,0,0,0,0,0,[[151,152,162,162,155],156],0,[[151,152,162,155],156],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[151,152,155,132,132],132],0,[[151,152,162,132,147]],0,[[151,152,132,132],156],0,[[151,152,132],143],0,[[151,152,132,132],143],0,[[151,152,132,132],156],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[151,152,162,136]],0,[[151,152,162]],0,[[151,152,162,132]],0,[[151,147],132],0,[[151,132],132],0,0,0,0,0,0,0,0,0,0,0,[[151,165,132,132,132]],0,0,0,0,0,0,0,[151],0,[151],0,0,0,[[]],[[]],[[]],[[]],[166,166],[151,151],[[]],[[]],[[]],[[]],[[]],[[]],[166,120],[150,151],[[]],[[]],[[],123],[[],123],[[],123],[[],123],[[],129],[[],129],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],0,0,[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],0,0,0,0,0,0,0,0,0],"c":[],"p":[[3,"ClientMessageData"],[15,"i8"],[15,"slice"],[15,"i64"],[19,"XEvent"],[3,"XConfigureEvent"],[3,"XClientMessageEvent"],[3,"XKeymapEvent"],[3,"XRRProviderChangeNotifyEvent"],[3,"XSelectionEvent"],[3,"XRROutputChangeNotifyEvent"],[3,"XKeyEvent"],[3,"XRRResourceChangeNotifyEvent"],[3,"XMappingEvent"],[3,"XCreateWindowEvent"],[3,"XUnmapEvent"],[3,"XDestroyWindowEvent"],[3,"XVisibilityEvent"],[3,"XScreenSaverNotifyEvent"],[3,"XMotionEvent"],[3,"XCirculateEvent"],[3,"XCirculateRequestEvent"],[3,"XF86VidModeNotifyEvent"],[3,"XResizeRequestEvent"],[3,"XNoExposeEvent"],[3,"XRROutputPropertyNotifyEvent"],[3,"XGenericEventCookie"],[3,"XPropertyEvent"],[3,"XRRProviderPropertyNotifyEvent"],[3,"XRRCrtcChangeNotifyEvent"],[3,"XExposeEvent"],[3,"XFocusChangeEvent"],[3,"XMapEvent"],[3,"XRRScreenChangeNotifyEvent"],[3,"XMapRequestEvent"],[3,"XButtonEvent"],[3,"XErrorEvent"],[3,"XRRNotifyEvent"],[3,"XSelectionRequestEvent"],[3,"XGraphicsExposeEvent"],[3,"XCrossingEvent"],[3,"XColormapEvent"],[3,"XReparentEvent"],[3,"XSelectionClearEvent"],[3,"XAnyEvent"],[3,"XConfigureRequestEvent"],[3,"XGravityEvent"],[15,"i16"],[15,"u64"],[15,"u16"],[15,"u8"],[3,"_XkbDesc"],[3,"_XkbKeyAliasRec"],[3,"_XkbKeyNameRec"],[3,"_XkbNamesRec"],[3,"_XkbStateRec"],[3,"XkbAnyEvent"],[3,"XkbNewKeyboardNotifyEvent"],[3,"_XkbMapNotifyEvent"],[3,"XkbStateNotifyEvent"],[3,"_XkbControlsNotifyEvent"],[3,"XkbIndicatorNotifyEvent"],[3,"_XkbNamesNotifyEvent"],[3,"XkbCompatMapNotifyEvent"],[3,"XkbBellNotifyEvent"],[3,"XkbActionMessageEvent"],[3,"XkbAccessXNotifyEvent"],[3,"_XkbExtensionDeviceNotifyEvent"],[3,"XkbEvent"],[3,"Depth"],[3,"Screen"],[3,"ScreenFormat"],[3,"Visual"],[3,"XArc"],[3,"XChar2b"],[3,"XCharStruct"],[3,"XClassHint"],[3,"XColor"],[3,"XComposeStatus"],[3,"XExtCodes"],[3,"XFontProp"],[3,"XFontSetExtents"],[3,"XFontStruct"],[3,"XGCValues"],[3,"XHostAddress"],[3,"XServerInterpretedAddress"],[3,"XIconSize"],[3,"XImage"],[3,"XKeyboardControl"],[3,"XKeyboardState"],[3,"XmbTextItem"],[3,"XModifierKeymap"],[3,"XOMCharSetList"],[3,"XPixmapFormatValues"],[3,"XPoint"],[3,"XRectangle"],[3,"XrmOptionDescRec"],[3,"XrmValue"],[3,"XSegment"],[3,"XSetWindowAttributes"],[3,"XSizeHints"],[3,"XStandardColormap"],[3,"XTextItem"],[3,"XTextItem16"],[3,"XTextProperty"],[3,"XTimeCoord"],[3,"XVisualInfo"],[3,"XwcTextItem"],[3,"XWindowAttributes"],[3,"XWindowChanges"],[3,"XWMHints"],[4,"XIMCaretDirection"],[4,"XIMCaretStyle"],[3,"XIMPreeditDrawCallbackStruct"],[3,"XIMPreeditCaretCallbackStruct"],[19,"XIMTextString"],[3,"XIMText"],[3,"AspectRatio"],[3,"ImageFns"],[15,"bool"],[3,"Formatter"],[3,"Error"],[4,"Result"],[15,"array"],[15,"usize"],[15,"i32"],[3,"Xlib"],[3,"OpenError"],[3,"TypeId"],[3,"Glx"],[4,"Display"],[6,"c_int"],[6,"GLXFBConfig"],[3,"XVisualInfo"],[6,"GLXContext"],[6,"c_ulong"],[6,"Bool"],[6,"Pixmap"],[6,"GLXPixmap"],[6,"GLXPbuffer"],[6,"Window"],[6,"GLXWindow"],[6,"c_char"],[6,"GLXDrawable"],[6,"GLubyte"],[6,"__GLXextFuncPtr"],[6,"c_uint"],[6,"Font"],[3,"FnPtr"],[8,"FnMut"],[3,"Glx"],[4,"Display"],[6,"GLXFBConfig"],[3,"XVisualInfo"],[6,"GLXContext"],[6,"Bool"],[6,"Pixmap"],[6,"GLXPixmap"],[6,"GLXPbuffer"],[6,"Window"],[6,"GLXWindow"],[6,"GLXDrawable"],[6,"GLubyte"],[6,"__GLXextFuncPtr"],[6,"Font"],[3,"FnPtr"],[3,"_XkbControls"],[4,"_XDisplay"],[4,"xError"],[4,"xEvent"],[4,"_XGC"],[4,"_XIC"],[4,"_XIM"],[4,"_XRegion"],[4,"_XOC"],[4,"_XOM"],[4,"_XrmHashBucketRec"],[3,"_XcmsCCC"],[3,"XcmsColor"],[3,"_XcmsColorSpace"],[3,"_XcmsFunctionSet"],[3,"_XkbAction"],[3,"_XkbBounds"],[3,"_XkbChanges"],[3,"_XkbClientMapRec"],[3,"_XkbColor"],[3,"_XkbComponentList"],[3,"_XkbComponentNames"],[3,"_XkbControlsChanges"],[3,"_XkbControlsNotify"],[3,"_XkbDeviceChanges"],[3,"_XkbDeviceInfo"],[3,"_XkbDeviceLedInfo"],[3,"_XkbDoodad"],[3,"_XkbExtensionDeviceNotify"],[3,"_XkbGeometry"],[3,"_XkbGeometrySizes"],[3,"_XkbIndicatorMapRec"],[3,"_XkbKey"],[3,"_XkbKeyType"],[3,"_XkbMapChanges"],[3,"_XkbMods"],[3,"_XkbNameChanges"],[3,"_XkbNamesNotify"],[3,"_XkbOutline"],[3,"_XkbOverlay"],[3,"_XkbOverlayKey"],[3,"_XkbOverlayRow"],[3,"_XkbProperty"],[3,"_XkbRow"],[3,"_XkbSection"],[3,"_XkbServerMapRec"],[3,"_XkbShape"],[3,"_XkbSymInterpretRec"],[3,"_XkbCompatMapRec"],[3,"_XkbIndicatorRec"],[4,"XkbKbdDpyStateRec"],[3,"XExtData"],[3,"XIMCallback"],[3,"XICCallback"],[3,"GLXPipeRectLimits"],[3,"GLXPbufferClobberEvent"],[4,"__GLsync"],[4,"_cl_context"],[4,"_cl_event"],[4,"Visual"],[4,"__GLXextFuncPtr_fn"],[3,"GLXBufferSwapComplete"],[3,"GLXBufferClobberEventSGIX"],[3,"GLXHyperpipeNetworkSGIX"],[3,"GLXHyperpipeConfigSGIX"],[3,"GLXPipeRect"],[3,"GLXPipeRectLimits"],[3,"GLXPbufferClobberEvent"],[4,"__GLsync"],[4,"_cl_context"],[4,"_cl_event"],[4,"Visual"],[4,"__GLXextFuncPtr_fn"],[3,"GLXBufferSwapComplete"],[3,"GLXBufferClobberEventSGIX"],[3,"GLXHyperpipeNetworkSGIX"],[3,"GLXHyperpipeConfigSGIX"],[3,"GLXPipeRect"]]},\
"hashbrown":{"doc":"This crate is a Rust port of Google’s high-performance …","t":"NNIDDELLLLLKLLLLAALLLLLMGDEEDDDDDDDDNNNDDDDDEDDNNNDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLDDEDDDDDNDDDNDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["AllocError","CapacityOverflow","Equivalent","HashMap","HashSet","TryReserveError","borrow","borrow_mut","clone","clone_into","eq","equivalent","equivalent","equivalent","fmt","from","hash_map","hash_set","into","to_owned","try_from","try_into","type_id","layout","DefaultHashBuilder","Drain","Entry","EntryRef","ExtractIf","HashMap","IntoIter","IntoKeys","IntoValues","Iter","IterMut","Keys","Occupied","Occupied","Occupied","OccupiedEntry","OccupiedEntryRef","OccupiedError","RawEntryBuilder","RawEntryBuilderMut","RawEntryMut","RawOccupiedEntryMut","RawVacantEntryMut","Vacant","Vacant","Vacant","VacantEntry","VacantEntryRef","Values","ValuesMut","allocator","and_modify","and_modify","and_modify","and_replace_entry_with","and_replace_entry_with","and_replace_entry_with","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capacity","clear","clone","clone","clone","clone","clone_from","clone_into","clone_into","clone_into","clone_into","contains_key","default","deserialize","drain","entry","entry","entry_ref","eq","equivalent","equivalent","extend","extend","extend","extract_if","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_hash","from_hash","from_iter","from_key","from_key","from_key_hashed_nocheck","from_key_hashed_nocheck","get","get","get","get","get_key_value","get_key_value","get_key_value_mut","get_key_value_mut","get_many_key_value_mut","get_many_key_value_unchecked_mut","get_many_mut","get_many_unchecked_mut","get_mut","get_mut","get_mut","get_mut","hasher","index","insert","insert","insert","insert","insert","insert","insert","insert","insert","insert","insert_hashed_nocheck","insert_key","insert_unique_unchecked","insert_with_hasher","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_key","into_key","into_key","into_key_value","into_keys","into_mut","into_mut","into_mut","into_values","is_empty","iter","iter_mut","key","key","key","key","key","key","key","key_mut","keys","len","len","len","len","len","len","len","len","len","len","new","new_in","next","next","next","next","next","next","next","next","next","next","or_default","or_default","or_insert","or_insert","or_insert","or_insert_with","or_insert_with","or_insert_with","or_insert_with_key","or_insert_with_key","raw_entry","raw_entry_mut","remove","remove","remove","remove","remove_entry","remove_entry","remove_entry","remove_entry","replace_entry","replace_entry","replace_entry_with","replace_entry_with","replace_entry_with","replace_key","replace_key","reserve","retain","serialize","shrink_to","shrink_to_fit","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_insert","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_reserve","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value","values","values_mut","with_capacity","with_capacity_and_hasher","with_capacity_and_hasher_in","with_capacity_in","with_hasher","with_hasher_in","Difference","Drain","Entry","ExtractIf","HashSet","Intersection","IntoIter","Iter","Occupied","OccupiedEntry","SymmetricDifference","Union","Vacant","VacantEntry","allocator","bitand","bitor","bitxor","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capacity","clear","clone","clone","clone","clone","clone","clone","clone_from","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","contains","default","deserialize","difference","drain","entry","eq","equivalent","equivalent","extend","extend","extract_if","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_iter","get","get","get","get","get_or_insert","get_or_insert_owned","get_or_insert_with","hasher","insert","insert","insert","insert_unique_unchecked","intersection","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_value","is_disjoint","is_empty","is_subset","is_superset","iter","len","len","len","len","new","new_in","next","next","next","next","next","next","next","next","or_insert","remove","remove","replace","replace","reserve","retain","serialize","shrink_to","shrink_to_fit","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","sub","symmetric_difference","take","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_reserve","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","with_capacity","with_capacity_and_hasher","with_capacity_and_hasher_in","with_capacity_in","with_hasher","with_hasher_in"],"q":[[0,"hashbrown"],[23,"hashbrown::TryReserveError"],[24,"hashbrown::hash_map"],[424,"hashbrown::hash_set"]],"d":["The memory allocator returned an error","Error due to the computed capacity exceeding the collection…","Key equivalence trait.","A hash map implemented with quadratic probing and SIMD …","A hash set implemented as a <code>HashMap</code> where the value is <code>()</code>.","The error type for <code>try_reserve</code> methods.","","","","","","Checks if this value is equivalent to the given key.","","","","Returns the argument unchanged.","A hash map implemented with quadratic probing and SIMD …","A hash set implemented as a <code>HashMap</code> where the value is <code>()</code>.","Calls <code>U::from(self)</code>.","","","","","The layout of the allocation request that failed.","Default hasher for <code>HashMap</code>.","A draining iterator over the entries of a <code>HashMap</code> in …","A view into a single entry in a map, which may either be …","A view into a single entry in a map, which may either be …","A draining iterator over entries of a <code>HashMap</code> which don’…","A hash map implemented with quadratic probing and SIMD …","An owning iterator over the entries of a <code>HashMap</code> in …","An owning iterator over the keys of a <code>HashMap</code> in arbitrary …","An owning iterator over the values of a <code>HashMap</code> in …","An iterator over the entries of a <code>HashMap</code> in arbitrary …","A mutable iterator over the entries of a <code>HashMap</code> in …","An iterator over the keys of a <code>HashMap</code> in arbitrary order. …","An occupied entry.","An occupied entry.","An occupied entry.","A view into an occupied entry in a <code>HashMap</code>. It is part of …","A view into an occupied entry in a <code>HashMap</code>. It is part of …","The error returned by <code>try_insert</code> when the key already …","A builder for computing where in a <code>HashMap</code> a key-value …","A builder for computing where in a <code>HashMap</code> a key-value …","A view into a single entry in a map, which may either be …","A view into an occupied entry in a <code>HashMap</code>. It is part of …","A view into a vacant entry in a <code>HashMap</code>. It is part of the …","A vacant entry.","A vacant entry.","A vacant entry.","A view into a vacant entry in a <code>HashMap</code>. It is part of the …","A view into a vacant entry in a <code>HashMap</code>. It is part of the …","An iterator over the values of a <code>HashMap</code> in arbitrary …","A mutable iterator over the values of a <code>HashMap</code> in …","Returns a reference to the underlying allocator.","Provides in-place mutable access to an occupied entry …","Provides in-place mutable access to an occupied entry …","Provides in-place mutable access to an occupied entry …","Provides shared access to the key and owned access to the …","Provides shared access to the key and owned access to the …","Provides shared access to the key and owned access to the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the number of elements the map can hold without …","Clears the map, removing all key-value pairs. Keeps the …","","","","","","","","","","Returns <code>true</code> if the map contains a value for the specified …","Creates an empty <code>HashMap&lt;K, V, S, A&gt;</code>, with the <code>Default</code> …","","Clears the map, returning all key-value pairs as an …","Gets the given key’s corresponding entry in the map for …","The entry in the map that was already occupied.","Gets the given key’s corresponding entry by reference in …","","","","Inserts all new key-values from the iterator to existing …","Inserts all new key-values from the iterator to existing …","Inserts all new key-values from the iterator to existing …","Drains elements which are true under the given predicate, …","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Examples","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates a <code>RawEntryMut</code> from the given hash and matching …","Access an immutable entry by hash and matching function.","","Creates a <code>RawEntryMut</code> from the given key.","Access an immutable entry by key.","Creates a <code>RawEntryMut</code> from the given key and its hash.","Access an immutable entry by a key and its hash.","Returns a reference to the value corresponding to the key.","Gets a reference to the value in the entry.","Gets a reference to the value in the entry.","Gets a reference to the value in the entry.","Returns the key-value pair corresponding to the supplied …","Gets a reference to the key and value in the entry.","Returns the key-value pair corresponding to the supplied …","Gets a mutable reference to the key and value in the entry.","Attempts to get mutable references to <code>N</code> values in the map …","Attempts to get mutable references to <code>N</code> values in the map …","Attempts to get mutable references to <code>N</code> values in the map …","Attempts to get mutable references to <code>N</code> values in the map …","Returns a mutable reference to the value corresponding to …","Gets a mutable reference to the value in the entry.","Gets a mutable reference to the value in the entry.","Gets a mutable reference to the value in the entry.","Returns a reference to the map’s <code>BuildHasher</code>.","Returns a reference to the value corresponding to the …","Inserts a key-value pair into the map.","Sets the value of the entry, and returns a …","Sets the value of the entry, and returns the entry’s old …","Sets the value of the entry with the VacantEntry’s key, …","Sets the value of the entry, and returns an OccupiedEntry.","Sets the value of the entry, and returns the entry’s old …","Sets the value of the entry with the VacantEntry’s key, …","Sets the value of the entry, and returns an …","Sets the value of the entry, and returns the entry’s old …","Sets the value of the entry with the VacantEntryRef’s …","Sets the value of the entry with the VacantEntry’s key, …","Sets the value of the entry, and returns the entry’s old …","Insert a key-value pair into the map without checking if …","Set the value of an entry with a custom hasher function.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Creates a consuming iterator, that is, one that moves each …","Creates an iterator over the entries of a <code>HashMap</code> in …","Creates an iterator over the entries of a <code>HashMap</code> in …","","","","","","","","","","","Converts the entry into a mutable reference to the key in …","Take ownership of the key.","Take ownership of the key.","Converts the OccupiedEntry into a mutable reference to the …","Creates a consuming iterator visiting all the keys in …","Converts the OccupiedEntry into a mutable reference to the …","Converts the OccupiedEntry into a mutable reference to the …","Converts the OccupiedEntryRef into a mutable reference to …","Creates a consuming iterator visiting all the values in …","Returns <code>true</code> if the map contains no elements.","An iterator visiting all key-value pairs in arbitrary …","An iterator visiting all key-value pairs in arbitrary …","Gets a reference to the key in the entry.","Returns a reference to this entry’s key.","Gets a reference to the key in the entry.","Gets a reference to the key that would be used when …","Returns a reference to this entry’s key.","Gets a reference to the key in the entry.","Gets a reference to the key that would be used when …","Gets a mutable reference to the key in the entry.","An iterator visiting all keys in arbitrary order. The …","Returns the number of elements in the map.","","","","","","","","","","Creates an empty <code>HashMap</code>.","Creates an empty <code>HashMap</code> using the given allocator.","","","","","","","","","","","Ensures a value is in the entry by inserting the default …","Ensures a value is in the entry by inserting the default …","Ensures a value is in the entry by inserting the default …","Ensures a value is in the entry by inserting the default …","Ensures a value is in the entry by inserting the default …","Ensures a value is in the entry by inserting the result of …","Ensures a value is in the entry by inserting the result of …","Ensures a value is in the entry by inserting the result of …","Ensures a value is in the entry by inserting, if empty, …","Ensures a value is in the entry by inserting, if empty, …","Creates a raw immutable entry builder for the HashMap.","Creates a raw entry builder for the HashMap.","Removes a key from the map, returning the value at the key …","Takes the value out of the entry, and returns it.","Takes the value out of the entry, and returns it. Keeps …","Takes the value out of the entry, and returns it. Keeps …","Removes a key from the map, returning the stored key and …","Take the ownership of the key and value from the map.","Take the ownership of the key and value from the map. …","Take the ownership of the key and value from the map. …","Replaces the entry, returning the old key and value. The …","Replaces the entry, returning the old key and value. The …","Provides shared access to the key and owned access to the …","Provides shared access to the key and owned access to the …","Provides shared access to the key and owned access to the …","Replaces the key in the hash map with the key used to …","Replaces the key in the hash map with the key used to …","Reserves capacity for at least <code>additional</code> more elements to …","Retains only the elements specified by the predicate. …","","Shrinks the capacity of the map with a lower limit. It …","Shrinks the capacity of the map as much as possible. It …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Tries to insert a key-value pair into the map, and returns …","","","","","","","","","","","","","","","","","","","","","","","","Tries to reserve capacity for at least <code>additional</code> more …","","","","","","","","","","","","","","","","","","","","","","","","The value which was not inserted, because the entry was …","An iterator visiting all values in arbitrary order. The …","An iterator visiting all values mutably in arbitrary order.","Creates an empty <code>HashMap</code> with the specified capacity.","Creates an empty <code>HashMap</code> with the specified capacity, …","Creates an empty <code>HashMap</code> with the specified capacity, …","Creates an empty <code>HashMap</code> with the specified capacity using …","Creates an empty <code>HashMap</code> which will use the given hash …","Creates an empty <code>HashMap</code> which will use the given hash …","A lazy iterator producing elements in the difference of …","A draining iterator over the items of a <code>HashSet</code>.","A view into a single entry in a set, which may either be …","A draining iterator over entries of a <code>HashSet</code> which don’…","A hash set implemented as a <code>HashMap</code> where the value is <code>()</code>.","A lazy iterator producing elements in the intersection of …","An owning iterator over the items of a <code>HashSet</code>.","An iterator over the items of a <code>HashSet</code>.","An occupied entry.","A view into an occupied entry in a <code>HashSet</code>. It is part of …","A lazy iterator producing elements in the symmetric …","A lazy iterator producing elements in the union of <code>HashSet</code>…","A vacant entry.","A view into a vacant entry in a <code>HashSet</code>. It is part of the …","Returns a reference to the underlying allocator.","Returns the intersection of <code>self</code> and <code>rhs</code> as a new …","Returns the union of <code>self</code> and <code>rhs</code> as a new <code>HashSet&lt;T, S&gt;</code>.","Returns the symmetric difference of <code>self</code> and <code>rhs</code> as a new …","","","","","","","","","","","","","","","","","","","","","","","","","Returns the number of elements the set can hold without …","Clears the set, removing all values.","","","","","","","","","","","","","","Returns <code>true</code> if the set contains a value.","Creates an empty <code>HashSet&lt;T, S&gt;</code> with the <code>Default</code> value for …","","Visits the values representing the difference, i.e., the …","Clears the set, returning all elements in an iterator.","Gets the given value’s corresponding entry in the set …","","","","","","Drains elements which are true under the given predicate, …","","","","","","","","","","","","Examples","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns a reference to the value in the set, if any, that …","Returns a reference to this entry’s value.","Gets a reference to the value in the entry.","Gets a reference to the value that would be used when …","Inserts the given <code>value</code> into the set if it is not present, …","Inserts an owned copy of the given <code>value</code> into the set if …","Inserts a value computed from <code>f</code> into the set if the given …","Returns a reference to the set’s <code>BuildHasher</code>.","Adds a value to the set.","Sets the value of the entry, and returns an OccupiedEntry.","Sets the value of the entry with the VacantEntry’s value.","Insert a value the set without checking if the value …","Visits the values representing the intersection, i.e., the …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Creates a consuming iterator, that is, one that moves each …","","","","","","","","","Take ownership of the value.","Returns <code>true</code> if <code>self</code> has no elements in common with <code>other</code>. …","Returns <code>true</code> if the set contains no elements.","Returns <code>true</code> if the set is a subset of another, i.e., <code>other</code>…","Returns <code>true</code> if the set is a superset of another, i.e., …","An iterator visiting all elements in arbitrary order. The …","Returns the number of elements in the set.","","","","Creates an empty <code>HashSet</code>.","Creates an empty <code>HashSet</code>.","","","","","","","","","Ensures a value is in the entry by inserting if it was …","Removes a value from the set. Returns whether the value was","Takes the value out of the entry, and returns it. Keeps …","Adds a value to the set, replacing the existing value, if …","Replaces the entry, returning the old value. The new value …","Reserves capacity for at least <code>additional</code> more elements to …","Retains only the elements specified by the predicate.","","Shrinks the capacity of the set with a lower limit. It …","Shrinks the capacity of the set as much as possible. It …","","","","","","","","","Returns the difference of <code>self</code> and <code>rhs</code> as a new …","Visits the values representing the symmetric difference, …","Removes and returns the value in the set, if any, that is …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Tries to reserve capacity for at least <code>additional</code> more …","","","","","","","","","","","","","Visits the values representing the union, i.e., all the …","Creates an empty <code>HashSet</code> with the specified capacity.","Creates an empty <code>HashSet</code> with the specified capacity, using","Creates an empty <code>HashSet</code> with the specified capacity, using","Creates an empty <code>HashSet</code> with the specified capacity.","Creates a new empty hash set which will use the given …","Creates a new empty hash set which will use the given …"],"i":[1,1,0,0,0,0,1,1,1,1,1,22,1,1,1,1,0,0,1,1,1,1,1,71,0,0,0,0,0,0,0,0,0,0,0,0,10,12,14,0,0,0,0,0,0,0,0,10,12,14,0,0,0,0,9,10,12,14,10,12,14,9,16,33,34,35,36,17,18,26,31,37,38,10,39,40,41,12,42,43,14,45,46,47,9,16,33,34,35,36,17,18,26,31,37,38,10,39,40,41,12,42,43,14,45,46,47,9,9,9,16,17,18,9,9,16,17,18,9,9,9,9,9,47,9,9,9,9,9,9,9,9,9,16,33,34,35,36,17,18,26,37,38,10,39,40,41,12,42,43,14,45,46,47,47,9,9,16,33,34,35,36,17,18,26,31,37,38,10,39,40,41,12,42,43,14,45,46,47,38,41,9,38,41,38,41,9,39,42,45,9,39,9,39,9,9,9,9,9,39,42,45,9,9,9,10,39,40,12,42,43,14,45,46,40,39,9,40,9,16,33,34,35,36,17,18,26,31,37,38,10,39,40,41,12,42,43,14,45,46,47,9,9,9,16,33,34,35,36,17,18,26,31,37,39,43,46,39,9,39,42,45,9,9,9,9,39,12,42,43,14,45,46,39,9,9,16,33,34,35,36,17,18,26,37,9,9,16,33,34,35,36,17,18,26,31,37,12,14,10,12,14,10,12,14,12,14,9,9,9,39,42,45,9,39,42,45,42,45,39,42,45,42,45,9,9,9,9,9,16,33,34,35,36,17,18,26,31,37,9,16,17,18,47,9,16,33,34,35,36,17,18,26,31,37,38,10,39,40,41,12,42,43,14,45,46,47,9,9,16,33,34,35,36,17,18,26,31,37,38,10,39,40,41,12,42,43,14,45,46,47,9,9,16,33,34,35,36,17,18,26,31,37,38,10,39,40,41,12,42,43,14,45,46,47,47,9,9,9,9,9,9,9,9,0,0,0,0,0,0,0,0,64,0,0,0,64,0,57,57,57,57,57,58,66,63,65,59,60,61,62,64,67,68,57,58,66,63,65,59,60,61,62,64,67,68,57,57,57,58,59,60,61,62,57,57,58,59,60,61,62,57,57,57,57,57,57,57,57,57,57,57,57,57,58,66,63,59,60,61,62,64,67,68,57,57,57,58,66,63,65,59,60,61,62,64,67,68,57,57,64,67,68,57,57,57,57,57,64,68,57,57,57,58,66,63,65,59,60,61,62,64,67,68,57,57,58,66,63,65,59,60,61,62,68,57,57,57,57,57,57,58,66,63,57,57,58,66,63,65,59,60,61,62,64,57,67,57,67,57,57,57,57,57,58,66,63,65,59,60,61,62,57,57,57,57,58,59,60,61,62,57,58,66,63,65,59,60,61,62,64,67,68,57,58,66,63,65,59,60,61,62,64,67,68,57,57,58,66,63,65,59,60,61,62,64,67,68,57,57,57,57,57,57,57],"f":[0,0,0,0,0,0,[[]],[[]],[1,1],[[]],[[1,1],2],[[],2],[[],2],[[],2],[[1,3],4],[[]],0,0,[[]],[[]],[[],5],[[],5],[[],6],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[9,[[0,[7,8]]]]],[[0,[7,8]]]],[[[10,[[0,[7,8]]]],11],[[10,[[0,[7,8]]]]]],[[[12,[[0,[7,8]]]],11],[[12,[[0,[7,8]]]]]],[[[14,[13,[0,[7,8]]]],11],[[14,[13,[0,[7,8]]]]]],[[[10,[[0,[7,8]]]],11],[[10,[[0,[7,8]]]]]],[[[12,[[0,[7,8]]]],11],[[12,[[0,[7,8]]]]]],[[[14,[13,[0,[7,8]]]],11],[[14,[13,[0,[7,8]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[9,[[0,[7,8]]]]],15],[[[9,[[0,[7,8]]]]]],[[[9,[8,8,8,[0,[7,8]]]]],[[9,[8,8,8,[0,[7,8]]]]]],[16,16],[17,17],[18,18],[[[9,[8,8,8,[0,[7,8]]]],[9,[8,8,8,[0,[7,8]]]]]],[[]],[[]],[[]],[[]],[[[9,[[0,[19,20]],21,[0,[7,8]]]],[0,[20,[22,[[0,[19,20]]]],13]]],2],[[],[[9,[23,[0,[23,7,8]]]]]],[24,[[5,[[9,[[0,[25,19,20]],25,[0,[21,23]]]]]]]],[[[9,[[0,[7,8]]]]],[[26,[[0,[7,8]]]]]],[[[9,[[0,[19,20]],21,[0,[7,8]]]],[0,[19,20]]],[[12,[[0,[19,20]],21,[0,[7,8]]]]]],0,[[[9,[[0,[19,20]],21,[0,[7,8]]]],[0,[20,[22,[[0,[19,20]]]],13]]],[[14,[[0,[19,20]],[0,[20,[22,[[0,[19,20]]]],13]],21,[0,[7,8]]]]]],[[[9,[[0,[19,20]],27,21,[0,[7,8]]]],[9,[[0,[19,20]],27,21,[0,[7,8]]]]],2],[[],2],[[],2],[[[9,[[0,[19,20,28]],28,21,[0,[7,8]]]],29]],[[[9,[[0,[19,20,28]],28,21,[0,[7,8]]]],29]],[[[9,[[0,[19,20]],21,[0,[7,8]]]],29]],[[[9,[[0,[7,8]]]],30],[[31,[30,[0,[7,8]]]]]],[[[9,[32,32,[0,[7,8]]]],3],4],[[[16,[32,32]],3],4],[[[33,[32,32]],3],4],[[[34,[32,32,[0,[7,8]]]],3],4],[[[35,[32,32,[0,[7,8]]]],3],4],[[[36,[32,[0,[7,8]]]],3],4],[[[17,[32]],3],4],[[[18,[32]],3],4],[[[26,[32,32,[0,[7,8]]]],3],4],[[[37,[32]],3],4],[[[38,[[0,[7,8]]]],3],4],[[[10,[32,32,[0,[7,8]]]],3],4],[[[39,[32,32,[0,[7,8]]]],3],4],[[[40,[[0,[7,8]]]],3],4],[[[41,[[0,[7,8]]]],3],4],[[[12,[32,32,[0,[7,8]]]],3],4],[[[42,[32,32,[0,[7,8]]]],3],4],[[[43,[32,[0,[7,8]]]],3],4],[[[14,[[44,[[0,[13,32]]]],[0,[13,32]],32,[0,[7,8]]]],3],4],[[[45,[[44,[[0,[13,32]]]],[0,[13,32]],32,[0,[7,8]]]],3],4],[[[46,[[44,[[0,[13,32]]]],[0,[13,32]],[0,[7,8]]]],3],4],[[[47,[32,32,[0,[7,8]]]],3],4],[[[47,[32,32,[0,[7,8]]]],3],4],[[]],[48,[[9,[[0,[19,20]],49,[0,[23,7,8]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[38,[[0,[7,8]]]],50,30],[[10,[[0,[7,8]]]]]],[[[41,[[0,[7,8]]]],50,30],51],[29,[[9,[[0,[19,20]],[0,[21,23]],[0,[23,7,8]]]]]],[[[38,[21,[0,[7,8]]]],[0,[20,22,13]]],[[10,[21,[0,[7,8]]]]]],[[[41,[21,[0,[7,8]]]],[0,[20,22,13]]],51],[[[38,[[0,[7,8]]]],50,[0,[22,13]]],[[10,[[0,[7,8]]]]]],[[[41,[[0,[7,8]]]],50,[0,[22,13]]],51],[[[9,[[0,[19,20]],21,[0,[7,8]]]],[0,[20,[22,[[0,[19,20]]]],13]]],51],[[[39,[[0,[7,8]]]]]],[[[42,[[0,[7,8]]]]]],[[[45,[13,[0,[7,8]]]]]],[[[9,[[0,[19,20]],21,[0,[7,8]]]],[0,[20,[22,[[0,[19,20]]]],13]]],51],[[[39,[[0,[7,8]]]]]],[[[9,[[0,[19,20]],21,[0,[7,8]]]],[0,[20,[22,[[0,[19,20]]]],13]]],51],[[[39,[[0,[7,8]]]]]],[[[9,[[0,[19,20]],21,[0,[7,8]]]],[48,[[0,[20,[22,[[0,[19,20]]]],13]]]]],[[51,[48]]]],[[[9,[[0,[19,20]],21,[0,[7,8]]]],[48,[[0,[20,[22,[[0,[19,20]]]],13]]]]],[[51,[48]]]],[[[9,[[0,[19,20]],21,[0,[7,8]]]],[48,[[0,[20,[22,[[0,[19,20]]]],13]]]]],[[51,[48]]]],[[[9,[[0,[19,20]],21,[0,[7,8]]]],[48,[[0,[20,[22,[[0,[19,20]]]],13]]]]],[[51,[48]]]],[[[9,[[0,[19,20]],21,[0,[7,8]]]],[0,[20,[22,[[0,[19,20]]]],13]]],51],[[[39,[[0,[7,8]]]]]],[[[42,[[0,[7,8]]]]]],[[[45,[13,[0,[7,8]]]]]],[[[9,[[0,[7,8]]]]]],[[[9,[[0,[19,20]],21,[0,[7,8]]]],[0,[20,[22,[[0,[19,20]]]],13]]]],[[[9,[[0,[19,20]],21,[0,[7,8]]]],[0,[19,20]]],51],[[[10,[20,21,[0,[7,8]]]],20],[[39,[20,21,[0,[7,8]]]]]],[[[39,[[0,[7,8]]]]]],[[[40,[20,21,[0,[7,8]]]],20]],[[[12,[20,21,[0,[7,8]]]]],[[42,[20,21,[0,[7,8]]]]]],[[[42,[[0,[7,8]]]]]],[[[43,[20,21,[0,[7,8]]]]]],[[[14,[[0,[20,[52,[13]]]],13,21,[0,[7,8]]]]],[[45,[[0,[20,[52,[13]]]],13,21,[0,[7,8]]]]]],[[[45,[13,[0,[7,8]]]]]],[[[46,[[0,[20,[52,[13]]]],13,21,[0,[7,8]]]]]],[[[40,[20,21,[0,[7,8]]]],50,20]],[[[39,[[0,[7,8]]]]]],[[[9,[[0,[19,20]],21,[0,[7,8]]]],[0,[19,20]]]],[[[40,[[0,[7,8]]]],50,53]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[9,[[0,[7,8]]]]],[[34,[[0,[7,8]]]]]],[[[9,[[0,[7,8]]]]],16],[[[9,[[0,[7,8]]]]],33],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[39,[[0,[7,8]]]]]],[[[43,[[0,[7,8]]]]]],[[[46,[[52,[13]],13,[0,[7,8]]]]],[[52,[13]]]],[[[39,[[0,[7,8]]]]]],[[[9,[[0,[7,8]]]]],[[35,[[0,[7,8]]]]]],[[[39,[[0,[7,8]]]]]],[[[42,[[0,[7,8]]]]]],[[[45,[13,[0,[7,8]]]]]],[[[9,[[0,[7,8]]]]],[[36,[[0,[7,8]]]]]],[[[9,[[0,[7,8]]]]],2],[[[9,[[0,[7,8]]]]],16],[[[9,[[0,[7,8]]]]],33],[[[39,[[0,[7,8]]]]]],[[[12,[[0,[7,8]]]]]],[[[42,[[0,[7,8]]]]]],[[[43,[[0,[7,8]]]]]],[[[14,[[44,[13]],13,[0,[7,8]]]]],13],[[[45,[13,[0,[7,8]]]]]],[[[46,[[44,[13]],13,[0,[7,8]]]]],13],[[[39,[[0,[7,8]]]]]],[[[9,[[0,[7,8]]]]],17],[[[9,[[0,[7,8]]]]],15],[16,15],[33,15],[[[34,[[0,[7,8]]]]],15],[[[35,[[0,[7,8]]]]],15],[[[36,[[0,[7,8]]]]],15],[17,15],[18,15],[[[26,[[0,[7,8]]]]],15],[37,15],[[],[[9,[49]]]],[[[0,[7,8]]],[[9,[49,[0,[7,8]]]]]],[16,51],[33,51],[[[34,[[0,[7,8]]]]],51],[[[35,[[0,[7,8]]]]],51],[[[36,[[0,[7,8]]]]],51],[17,51],[18,51],[[[26,[[0,[7,8]]]]],51],[[[31,[30,[0,[7,8]]]]],51],[37,51],[[[12,[20,23,21,[0,[7,8]]]]],23],[[[14,[[0,[20,[52,[13]]]],13,23,21,[0,[7,8]]]]],23],[[[10,[20,21,[0,[7,8]]]],20]],[[[12,[20,21,[0,[7,8]]]]]],[[[14,[[0,[20,[52,[13]]]],13,21,[0,[7,8]]]]]],[[[10,[20,21,[0,[7,8]]]],11]],[[[12,[20,21,[0,[7,8]]]],11]],[[[14,[[0,[20,[52,[13]]]],13,21,[0,[7,8]]]],11]],[[[12,[20,21,[0,[7,8]]]],11]],[[[14,[[0,[20,[44,[13]],[52,[13]]]],13,21,[0,[7,8]]]],11]],[[[9,[[0,[7,8]]]]],[[41,[[0,[7,8]]]]]],[[[9,[[0,[7,8]]]]],[[38,[[0,[7,8]]]]]],[[[9,[[0,[19,20]],21,[0,[7,8]]]],[0,[20,[22,[[0,[19,20]]]],13]]],51],[[[39,[[0,[7,8]]]]]],[[[42,[[0,[7,8]]]]]],[[[45,[13,[0,[7,8]]]]]],[[[9,[[0,[19,20]],21,[0,[7,8]]]],[0,[20,[22,[[0,[19,20]]]],13]]],51],[[[39,[[0,[7,8]]]]]],[[[42,[[0,[7,8]]]]]],[[[45,[13,[0,[7,8]]]]]],[[[42,[[0,[7,8]]]]]],[[[45,[[52,[13]],13,[0,[7,8]]]]]],[[[39,[[0,[7,8]]]],11],[[10,[[0,[7,8]]]]]],[[[42,[[0,[7,8]]]],11],[[12,[[0,[7,8]]]]]],[[[45,[13,[0,[7,8]]]],11],[[14,[13,[0,[7,8]]]]]],[[[42,[[0,[7,8]]]]]],[[[45,[[52,[13]],13,[0,[7,8]]]]],[[52,[13]]]],[[[9,[[0,[19,20]],21,[0,[7,8]]]],15]],[[[9,[[0,[7,8]]]],30]],[[[9,[[0,[54,19,20]],54,21]],55],5],[[[9,[[0,[19,20]],21,[0,[7,8]]]],15]],[[[9,[[0,[19,20]],21,[0,[7,8]]]]]],[16],[33],[[[34,[[0,[7,8]]]]]],[[[35,[[0,[7,8]]]]]],[[[36,[[0,[7,8]]]]]],[17],[18],[[[26,[[0,[7,8]]]]]],[[[31,[30,[0,[7,8]]]]]],[37],[[]],[[]],[[]],[[]],[[],56],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[[9,[[0,[19,20]],21,[0,[7,8]]]],[0,[19,20]]],[[5,[[47,[[0,[19,20]],21,[0,[7,8]]]]]]]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[[9,[[0,[19,20]],21,[0,[7,8]]]],15],[[5,[1]]]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],0,[[[9,[[0,[7,8]]]]],18],[[[9,[[0,[7,8]]]]],37],[15,[[9,[49]]]],[15,9],[[15,[0,[7,8]]],[[9,[[0,[7,8]]]]]],[[15,[0,[7,8]]],[[9,[49,[0,[7,8]]]]]],[[],9],[[[0,[7,8]]],[[9,[[0,[7,8]]]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[57,[[0,[7,8]]]]],[[0,[7,8]]]],[[[57,[[0,[19,20,8]],[0,[21,23]],[0,[7,8]]]],[57,[[0,[19,20,8]],[0,[21,23]],[0,[7,8]]]]],[[57,[[0,[19,20,8]],[0,[21,23]]]]]],[[[57,[[0,[19,20,8]],[0,[21,23]],[0,[7,8]]]],[57,[[0,[19,20,8]],[0,[21,23]],[0,[7,8]]]]],[[57,[[0,[19,20,8]],[0,[21,23]]]]]],[[[57,[[0,[19,20,8]],[0,[21,23]]]],[57,[[0,[19,20,8]],[0,[21,23]]]]],[[57,[[0,[19,20,8]],[0,[21,23]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[57,[[0,[7,8]]]]],15],[[[57,[[0,[7,8]]]]]],[[[57,[8,8,[0,[7,8]]]]],[[57,[8,8,[0,[7,8]]]]]],[58,58],[[[59,[[0,[7,8]]]]],[[59,[[0,[7,8]]]]]],[[[60,[[0,[7,8]]]]],[[60,[[0,[7,8]]]]]],[[[61,[[0,[7,8]]]]],[[61,[[0,[7,8]]]]]],[[[62,[[0,[7,8]]]]],[[62,[[0,[7,8]]]]]],[[[57,[8,8,[0,[7,8]]]],[57,[8,8,[0,[7,8]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[[57,[[0,[19,20]],21,[0,[7,8]]]],[0,[20,[22,[[0,[19,20]]]],13]]],2],[[],[[57,[23,[0,[23,7,8]]]]]],[24,[[5,[[57,[[0,[25,19,20]],[0,[21,23]]]]]]]],[[[57,[[0,[19,20]],21,[0,[7,8]]]],[57,[[0,[19,20]],21,[0,[7,8]]]]],[[60,[[0,[19,20]],21,[0,[7,8]]]]]],[[[57,[[0,[7,8]]]]],[[63,[[0,[7,8]]]]]],[[[57,[[0,[19,20]],21,[0,[7,8]]]],[0,[19,20]]],[[64,[[0,[19,20]],21,[0,[7,8]]]]]],[[[57,[[0,[19,20]],21,[0,[7,8]]]],[57,[[0,[19,20]],21,[0,[7,8]]]]],2],[[],2],[[],2],[[[57,[[0,[19,20,28]],21,[0,[7,8]]]],29]],[[[57,[[0,[19,20]],21,[0,[7,8]]]],29]],[[[57,[[0,[7,8]]]],30],[[65,[30,[0,[7,8]]]]]],[[[57,[32,[0,[7,8]]]],3],4],[[[58,[32]],3],4],[[[66,[32,[0,[7,8]]]],3],4],[[[63,[32,[0,[7,8]]]],3],4],[[[59,[[0,[32,19,20]],21,[0,[7,8]]]],3],4],[[[60,[[0,[32,19,20]],21,[0,[7,8]]]],3],4],[[[61,[[0,[32,19,20]],21,[0,[7,8]]]],3],4],[[[62,[[0,[32,19,20]],21,[0,[7,8]]]],3],4],[[[64,[32,[0,[7,8]]]],3],4],[[[67,[32,[0,[7,8]]]],3],4],[[[68,[32,[0,[7,8]]]],3],4],[[[48,[[0,[19,20]]]]],[[57,[[0,[19,20]],49,[0,[23,7,8]]]]]],[[[9,[[0,[7,8]]]]],[[57,[[0,[7,8]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[29,[[57,[[0,[19,20]],[0,[21,23]],[0,[23,7,8]]]]]],[[[57,[[0,[19,20]],21,[0,[7,8]]]],[0,[20,[22,[[0,[19,20]]]],13]]],[[51,[[0,[19,20]]]]]],[[[64,[[0,[7,8]]]]]],[[[67,[[0,[7,8]]]]]],[[[68,[[0,[7,8]]]]]],[[[57,[[0,[19,20]],21,[0,[7,8]]]],[0,[19,20]]],[[0,[19,20]]]],[[[57,[[0,[19,20]],21,[0,[7,8]]]],[0,[20,[22,[[0,[19,20]]]],69,13]]],[[0,[19,20]]]],[[[57,[[0,[19,20]],21,[0,[7,8]]]],[0,[20,[22,[[0,[19,20]]]],13]],11],[[0,[19,20]]]],[[[57,[[0,[7,8]]]]]],[[[57,[[0,[19,20]],21,[0,[7,8]]]],[0,[19,20]]],2],[[[64,[20,21,[0,[7,8]]]]],[[67,[20,21,[0,[7,8]]]]]],[[[68,[20,21,[0,[7,8]]]]]],[[[57,[[0,[19,20]],21,[0,[7,8]]]],[0,[19,20]]],[[0,[19,20]]]],[[[57,[[0,[19,20]],21,[0,[7,8]]]],[57,[[0,[19,20]],21,[0,[7,8]]]]],[[59,[[0,[19,20]],21,[0,[7,8]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[57,[[0,[7,8]]]]],58],[[[57,[[0,[7,8]]]]],[[66,[[0,[7,8]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[68,[[0,[7,8]]]]]],[[[57,[[0,[19,20]],21,[0,[7,8]]]],[57,[[0,[19,20]],21,[0,[7,8]]]]],2],[[[57,[[0,[7,8]]]]],2],[[[57,[[0,[19,20]],21,[0,[7,8]]]],[57,[[0,[19,20]],21,[0,[7,8]]]]],2],[[[57,[[0,[19,20]],21,[0,[7,8]]]],[57,[[0,[19,20]],21,[0,[7,8]]]]],2],[[[57,[[0,[7,8]]]]],58],[[[57,[[0,[7,8]]]]],15],[58,15],[[[66,[[0,[7,8]]]]],15],[[[63,[[0,[7,8]]]]],15],[[],[[57,[49]]]],[[[0,[7,8]]],[[57,[[0,[20,19]],49,[0,[7,8]]]]]],[58,51],[[[66,[[0,[7,8]]]]],51],[[[63,[[0,[7,8]]]]],51],[[[65,[30,[0,[7,8]]]]],51],[[[59,[[0,[19,20]],21,[0,[7,8]]]]],[[51,[[0,[19,20]]]]]],[[[60,[[0,[19,20]],21,[0,[7,8]]]]],[[51,[[0,[19,20]]]]]],[[[61,[[0,[19,20]],21,[0,[7,8]]]]],[[51,[[0,[19,20]]]]]],[[[62,[[0,[19,20]],21,[0,[7,8]]]]],[[51,[[0,[19,20]]]]]],[[[64,[20,21,[0,[7,8]]]]]],[[[57,[[0,[19,20]],21,[0,[7,8]]]],[0,[20,[22,[[0,[19,20]]]],13]]],2],[[[67,[[0,[7,8]]]]]],[[[57,[[0,[19,20]],21,[0,[7,8]]]],[0,[19,20]]],[[51,[[0,[19,20]]]]]],[[[67,[[0,[7,8]]]]]],[[[57,[[0,[19,20]],21,[0,[7,8]]]],15]],[[[57,[[0,[7,8]]]],30]],[[[57,[[0,[54,19,20]],21]],55],5],[[[57,[[0,[19,20]],21,[0,[7,8]]]],15]],[[[57,[[0,[19,20]],21,[0,[7,8]]]]]],[58],[[[66,[[0,[7,8]]]]]],[[[63,[[0,[7,8]]]]]],[[[65,[30,[0,[7,8]]]]]],[[[59,[[0,[19,20]],21,[0,[7,8]]]]]],[[[60,[[0,[19,20]],21,[0,[7,8]]]]]],[[[61,[[0,[19,20]],21,[0,[7,8]]]]]],[[[62,[[0,[19,20]],21,[0,[7,8]]]]]],[[[57,[[0,[19,20,8]],[0,[21,23]]]],[57,[[0,[19,20,8]],[0,[21,23]]]]],[[57,[[0,[19,20,8]],[0,[21,23]]]]]],[[[57,[[0,[19,20]],21,[0,[7,8]]]],[57,[[0,[19,20]],21,[0,[7,8]]]]],[[61,[[0,[19,20]],21,[0,[7,8]]]]]],[[[57,[[0,[19,20]],21,[0,[7,8]]]],[0,[20,[22,[[0,[19,20]]]],13]]],[[51,[[0,[19,20]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[[57,[[0,[19,20]],21,[0,[7,8]]]],15],[[5,[1]]]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[[57,[[0,[19,20]],21,[0,[7,8]]]],[57,[[0,[19,20]],21,[0,[7,8]]]]],[[62,[[0,[19,20]],21,[0,[7,8]]]]]],[15,[[57,[49]]]],[15,[[57,[70]]]],[[15,[0,[7,8]]],[[57,[[0,[7,8]]]]]],[[15,[0,[7,8]]],[[57,[[0,[20,19]],49,[0,[7,8]]]]]],[[],[[57,[70]]]],[[[0,[7,8]]],[[57,[[0,[7,8]]]]]]],"c":[],"p":[[4,"TryReserveError"],[15,"bool"],[3,"Formatter"],[6,"Result"],[4,"Result"],[3,"TypeId"],[8,"Allocator"],[8,"Clone"],[3,"HashMap"],[4,"RawEntryMut"],[8,"FnOnce"],[4,"Entry"],[8,"Sized"],[4,"EntryRef"],[15,"usize"],[3,"Iter"],[3,"Keys"],[3,"Values"],[8,"Eq"],[8,"Hash"],[8,"BuildHasher"],[8,"Equivalent"],[8,"Default"],[8,"Deserializer"],[8,"Deserialize"],[3,"Drain"],[8,"PartialEq"],[8,"Copy"],[8,"IntoIterator"],[8,"FnMut"],[3,"ExtractIf"],[8,"Debug"],[3,"IterMut"],[3,"IntoIter"],[3,"IntoKeys"],[3,"IntoValues"],[3,"ValuesMut"],[3,"RawEntryBuilderMut"],[3,"RawOccupiedEntryMut"],[3,"RawVacantEntryMut"],[3,"RawEntryBuilder"],[3,"OccupiedEntry"],[3,"VacantEntry"],[8,"Borrow"],[3,"OccupiedEntryRef"],[3,"VacantEntryRef"],[3,"OccupiedError"],[15,"array"],[6,"DefaultHashBuilder"],[15,"u64"],[4,"Option"],[8,"From"],[8,"Fn"],[8,"Serialize"],[8,"Serializer"],[3,"String"],[3,"HashSet"],[3,"Iter"],[3,"Intersection"],[3,"Difference"],[3,"SymmetricDifference"],[3,"Union"],[3,"Drain"],[4,"Entry"],[3,"ExtractIf"],[3,"IntoIter"],[3,"OccupiedEntry"],[3,"VacantEntry"],[8,"ToOwned"],[3,"Global"],[13,"AllocError"]]},\
"image":{"doc":"Overview","t":"NINDNNDNNNSSSENDEIENCDDIINGGNNNNDIIICENNNNECNNNNQQNNNNNNNNNNNNNNNDDIQDNNNIDQDNNNNNNNGDNNNNNNNGDQNNNNNLKLLLLLLKLLLLLLKLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLALLLLLLLLLLKLLLLLLKLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLKLLLLLLLLLLLLLLLKKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLKLLLLLLKLLLLLLLKLLLLKLLLLLFLLLLLLLLLLLLLLLLLFALLLLLLLLLLLLLLLLKLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLKLLLLLLLKLLLLLLLALFFFKLLLLLLKLLLLLLKLLLLLLLLALLLLLLLLLLLLLLLLLFLLLLLLLAKLLLLLLLLLLKLLLLLLLLLLLLFFLLLLLLLLLKLLLLLLLLKLLLLLLLLLLKLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLIDDDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLADNNENNENNGGNDDDNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNNDNNNDNNNNNEEGNNDENNNNDENNNDELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNEDNENNNDNNDDNLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLCCNCECNCNCNCNFLLCLLACFFCLFFFFFFFLLCFCCLCFFFFFFFFFFFFFLLLLFFDQILLFFLLFFFLFLLFFFKLLFLLKLLLLLDLLLLLLLLLLLLLLLLLDLLLLLLLLLMLALLLLAMMMDLLLLLLLLLLLLLLLLLFCCCCCCCC","n":["A8","AnimationDecoder","Avif","Bgr","Bgr8","Bgr8","Bgra","Bgra8","Bgra8","Bmp","CHANNEL_COUNT","COLOR_MODEL","COLOR_TYPE","ColorType","Dds","Delay","DynamicImage","EncodableLayout","ExtendedColorType","Farbfeld","FlatSamples","Frame","Frames","GenericImage","GenericImageView","Gif","GrayAlphaImage","GrayImage","Hdr","Ico","ImageBgr8","ImageBgra8","ImageBuffer","ImageDecoder","ImageDecoderExt","ImageEncoder","ImageError","ImageFormat","ImageLuma16","ImageLuma8","ImageLumaA16","ImageLumaA8","ImageOutputFormat","ImageResult","ImageRgb16","ImageRgb8","ImageRgba16","ImageRgba8","InnerImage","InnerImageView","Jpeg","L1","L16","L16","L2","L4","L8","L8","La1","La16","La16","La2","La4","La8","La8","Luma","LumaA","Pixel","Pixel","Pixels","Png","Png","Pnm","Primitive","Progress","Reader","Rgb","Rgb1","Rgb16","Rgb16","Rgb2","Rgb4","Rgb8","Rgb8","RgbImage","Rgba","Rgba1","Rgba16","Rgba16","Rgba2","Rgba4","Rgba8","Rgba8","RgbaImage","SubImage","Subpixel","Tga","Tiff","Unknown","Unsupported","WebP","adjust_contrast","apply","apply","apply","apply","apply","apply","apply","apply2","apply2","apply2","apply2","apply2","apply2","apply2","apply_with_alpha","apply_with_alpha","apply_with_alpha","apply_with_alpha","apply_with_alpha","apply_with_alpha","apply_with_alpha","apply_without_alpha","apply_without_alpha","as_bgr8","as_bgra8","as_bytes","as_bytes","as_flat_samples","as_flat_samples_mut","as_flat_samples_u16","as_flat_samples_u8","as_luma16","as_luma8","as_luma_alpha16","as_luma_alpha8","as_mut_bgr8","as_mut_bgra8","as_mut_luma16","as_mut_luma8","as_mut_luma_alpha16","as_mut_luma_alpha8","as_mut_rgb16","as_mut_rgb8","as_mut_rgba16","as_mut_rgba8","as_raw","as_rgb16","as_rgb8","as_rgba16","as_rgba8","bits_per_pixel","blend","blend","blend","blend","blend","blend","blend","blend_pixel","blend_pixel","blend_pixel","blend_pixel","blur","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bounds","bounds","bounds","bounds","brighten","buffer","buffer","buffer_mut","bytes_per_pixel","can_read","can_write","change_bounds","channel_count","channel_count","channel_count","channel_count","channels","channels","channels","channels","channels","channels","channels","channels4","channels4","channels4","channels4","channels4","channels4","channels4","channels_mut","channels_mut","channels_mut","channels_mut","channels_mut","channels_mut","channels_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","codecs","collect_frames","color","color_model","color_model","color_type","color_type","color_type","convert","copy_from","copy_from","copy_within","copy_within","copy_within","crop","crop_imm","current","default","delay","deref","deref_mut","dimensions","dimensions","dimensions","dimensions","dimensions","dimensions","enumerate_pixels","enumerate_pixels_mut","enumerate_rows","enumerate_rows_mut","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","error","expand_palette","expand_palette","extensions_str","filter3x3","flat","fliph","flipv","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_channels","from_channels","from_channels","from_channels","from_channels","from_channels","from_channels","from_decoder","from_extension","from_fn","from_numer_denom_ms","from_parts","from_path","from_pixel","from_raw","from_saturating_duration","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice_mut","from_slice_mut","from_slice_mut","from_slice_mut","from_slice_mut","from_slice_mut","from_slice_mut","from_vec","get_pixel","get_pixel","get_pixel","get_pixel","get_pixel","get_pixel_mut","get_pixel_mut","get_pixel_mut","get_pixel_mut","get_pixel_mut","grayscale","guess_format","has_alpha","has_color","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","height","height","height","huerotate","image_dimensions","imageops","in_bounds","in_bounds","index","index","index","index","index","index","index","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","inner","inner","inner","inner","inner_mut","inner_mut","inner_mut","inner_mut","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_bgr","into_bgr8","into_bgra","into_bgra8","into_buffer","into_bytes","into_flat_samples","into_frames","into_iter","into_iter","into_luma","into_luma16","into_luma8","into_luma_alpha","into_luma_alpha16","into_luma_alpha8","into_raw","into_reader","into_rgb","into_rgb16","into_rgb8","into_rgba","into_rgba16","into_rgba8","into_vec","invert","invert","invert","invert","invert","invert","invert","invert","io","left","load","load_from_memory","load_from_memory_with_format","map","map","map","map","map","map","map","map2","map2","map2","map2","map2","map2","map2","map_with_alpha","map_with_alpha","map_with_alpha","map_with_alpha","map_with_alpha","map_with_alpha","map_with_alpha","map_without_alpha","map_without_alpha","math","new","new","new","new","new_bgr8","new_bgra8","new_luma16","new_luma8","new_luma_a16","new_luma_a8","new_rgb16","new_rgb8","new_rgba16","new_rgba8","next","next","numer_denom_ms","open","original_color_type","original_color_type","partial_cmp","pixels","pixels","pixels","pixels_mut","png","put_pixel","put_pixel","put_pixel","put_pixel","put_pixel","read_image","read_image","read_image_with_progress","read_image_with_progress","read_rect","read_rect","read_rect_with_progress","remaining","resize","resize_exact","resize_to_fill","rotate180","rotate270","rotate90","rows","rows_mut","sample_layout","save","save","save_buffer","save_buffer_with_format","save_with_format","save_with_format","scanline_bytes","scanline_bytes","sub_image","sub_image","sub_image","thumbnail","thumbnail_exact","to_bgr","to_bgr","to_bgr","to_bgr","to_bgr","to_bgr","to_bgr","to_bgr","to_bgr8","to_bgra","to_bgra","to_bgra","to_bgra","to_bgra","to_bgra","to_bgra","to_bgra","to_bgra8","to_bytes","to_image","to_luma","to_luma","to_luma","to_luma","to_luma","to_luma","to_luma","to_luma","to_luma16","to_luma8","to_luma_alpha","to_luma_alpha","to_luma_alpha","to_luma_alpha","to_luma_alpha","to_luma_alpha","to_luma_alpha","to_luma_alpha","to_luma_alpha16","to_luma_alpha8","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_rgb","to_rgb","to_rgb","to_rgb","to_rgb","to_rgb","to_rgb","to_rgb","to_rgb16","to_rgb8","to_rgba","to_rgba","to_rgba","to_rgba","to_rgba","to_rgba","to_rgba","to_rgba","to_rgba16","to_rgba8","top","total","total_bytes","total_bytes","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unsafe_get_pixel","unsafe_get_pixel","unsafe_get_pixel","unsafe_put_pixel","unsafe_put_pixel","unsafe_put_pixel","unsharpen","view","view","view","width","width","width","write_image","write_to","ConvertBuffer","EnumeratePixels","EnumeratePixelsMut","EnumerateRows","EnumerateRowsMut","Pixels","PixelsMut","Rows","RowsMut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","convert","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","len","len","len","len","len","len","len","len","next","next","next","next","next","next","next","next","next_back","next_back","next_back","next_back","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","png","ApngDecoder","Avg","Best","CompressionType","Default","Fast","FilterType","Huffman","NoFilter","PNGEncoder","PNGReader","Paeth","PngDecoder","PngEncoder","PngReader","Rle","Sub","Up","apng","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","color_type","default","default","dimensions","encode","eq","eq","equivalent","equivalent","fmt","fmt","from","from","from","from","from","from","into","into","into","into","into","into","into_frames","into_reader","is_apng","new","new","new_with_quality","read","read_image","read_to_end","scanline_bytes","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","write_image","Color","Decoding","DecodingError","DimensionError","DimensionMismatch","Encoding","EncodingError","Exact","FailedAlready","Format","Generic","GenericFeature","ImageError","ImageFormatHint","ImageResult","InsufficientMemory","IoError","LimitError","LimitErrorKind","Limits","Name","NoMoreData","Parameter","ParameterError","ParameterErrorKind","PathExtension","Unknown","Unsupported","UnsupportedError","UnsupportedErrorKind","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","eq","eq","eq","eq","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","format_hint","format_hint","format_hint","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_format_and_kind","from_format_hint","from_format_hint","from_kind","from_kind","hash","hash","hash","hash","into","into","into","into","into","into","into","into","into","into","kind","kind","kind","new","new","provide","provide","provide","provide","provide","provide","source","source","source","source","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","ColumnMajorPacked","Error","FlatSamples","ImagePacked","NormalForm","NormalFormRequired","PixelPacked","RowMajorPacked","SampleLayout","TooLarge","Unaliased","View","ViewMut","WrongColor","as_mut","as_mut_slice","as_ref","as_slice","as_view","as_view_mut","as_view_with_mut_samples","blend_pixel","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bounds","bounds","bounds","bounds","channel_stride","channels","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","color_hint","column_major_packed","dimensions","dimensions","eq","eq","eq","equivalent","equivalent","equivalent","extents","extents","fits","fits","flat","flat","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","get_mut_sample","get_mut_sample","get_mut_sample","get_pixel","get_pixel","get_pixel_mut","get_sample","get_sample","get_sample","has_aliased_samples","has_aliased_samples","hash","hash","hash","height","height_stride","image_mut_slice","image_mut_slice","image_mut_slice","image_slice","image_slice","image_slice","in_bounds","in_bounds","in_bounds","in_bounds","in_bounds_index","in_bounds_index","index","index","index","index_ignoring_bounds","index_ignoring_bounds","index_mut","inner","inner","inner_mut","into","into","into","into","into","into","into_inner","into_inner","is_normal","is_normal","layout","min_length","min_length","min_length","min_length","partial_cmp","provide","put_pixel","row_major_packed","samples","samples","samples","shrink_to","shrink_to","shrink_to","shrink_to","strides_cwh","strides_cwh","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_vec","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into_buffer","try_upgrade","type_id","type_id","type_id","type_id","type_id","type_id","width","width_stride","with_monocolor","BiLevel","CatmullRom","CatmullRom","ColorMap","FilterType","Gaussian","Gaussian","Lanczos3","Lanczos3","Nearest","Nearest","Triangle","Triangle","blur","borrow","borrow_mut","brighten","clone","clone_into","colorops","contrast","crop","crop_imm","dither","eq","filter3x3","flip_horizontal","flip_horizontal_in","flip_horizontal_in_place","flip_vertical","flip_vertical_in","flip_vertical_in_place","fmt","from","grayscale","horizontal_gradient","huerotate","index_colors","into","invert","overlay","overlay_bounds","replace","resize","rotate180","rotate180_in","rotate180_in_place","rotate270","rotate270_in","rotate90","rotate90_in","thumbnail","tile","to_owned","try_from","try_into","type_id","unsharpen","vertical_gradient","BiLevel","Color","ColorMap","borrow","borrow_mut","brighten","brighten_in_place","clone","clone_into","contrast","contrast_in_place","dither","from","grayscale","has_lookup","has_lookup","huerotate","huerotate_in_place","index_colors","index_of","index_of","into","invert","lookup","lookup","map_color","map_color","to_owned","try_from","try_into","type_id","Reader","borrow","borrow_mut","clear_format","decode","format","from","into","into_dimensions","into_inner","new","open","set_format","try_from","try_into","type_id","with_format","with_guessed_format","Rect","borrow","borrow_mut","clone","clone_into","eq","equivalent","fmt","from","hash","height","into","nq","to_owned","try_from","try_into","type_id","utils","width","x","y","NeuQuant","borrow","borrow_mut","from","from","has_lookup","index_of","index_of","init","into","lookup","lookup","map_color","map_pixel","new","try_from","try_into","type_id","clamp","ApngDecoder","CompressionType","FilterType","PNGEncoder","PNGReader","PngDecoder","PngEncoder","PngReader"],"q":[[0,"image"],[754,"image::buffer"],[868,"image::codecs"],[869,"image::codecs::png"],[958,"image::error"],[1131,"image::flat"],[1308,"image::imageops"],[1367,"image::imageops::colorops"],[1398,"image::io"],[1416,"image::math"],[1437,"image::math::nq"],[1455,"image::math::utils"],[1456,"image::png"]],"d":["Pixel is 8-bit alpha","AnimationDecoder trait","An Image in AVIF format.","BGR colors","Pixel contains 8-bit B, G and R channels","Pixel contains 8-bit B, G and R channels","BGR colors + alpha channel","Pixel is 8-bit BGR with an alpha channel","Pixel is 8-bit BGR with an alpha channel","An Image in BMP Format","The number of channels of this pixel type.","A string that can help to interpret the meaning each …","ColorType for this pixel format","An enumeration over supported color types and bit depths","An Image in DDS Format","The delay of a frame relative to the previous one.","A Dynamic Image","Types which are safe to treat as an immutable byte slice …","An enumeration of color types encountered in image formats.","An Image in farbfeld Format","","A single animation frame","An implementation dependent iterator, reading the frames …","A trait for manipulating images.","Trait to inspect an image.","An Image in GIF Format","Sendable grayscale + alpha channel image buffer","Sendable grayscale image buffer","An Image in Radiance HDR Format","An Image in ICO Format","Each pixel in this image is 8-bit Bgr","Each pixel in this image is 8-bit Bgr with alpha","Generic image buffer","The trait that all decoders implement","Specialized image decoding not be supported by all formats","The trait all encoders implement","","An enumeration of supported image formats. Not all formats …","Each pixel in this image is 16-bit Luma","Each pixel in this image is 8-bit Luma","Each pixel in this image is 16-bit Luma with alpha","Each pixel in this image is 8-bit Luma with alpha","An enumeration of supported image formats for encoding.","","Each pixel in this image is 16-bit Rgb","Each pixel in this image is 8-bit Rgb","Each pixel in this image is 16-bit Rgb with alpha","Each pixel in this image is 8-bit Rgb with alpha","Underlying image type. This is mainly used by SubImages in …","Underlying image type. This is mainly used by SubImages in …","An Image in JPEG Format","Pixel is 1-bit luminance","Pixel is 16-bit luminance","Pixel is 16-bit luminance","Pixel is 2-bit luminance","Pixel is 4-bit luminance","Pixel is 8-bit luminance","Pixel is 8-bit luminance","Pixel is 1-bit luminance with an alpha channel","Pixel is 16-bit luminance with an alpha channel","Pixel is 16-bit luminance with an alpha channel","Pixel is 2-bit luminance with an alpha channel","Pixel is 4-bit luminance with an alpha channel","Pixel is 8-bit luminance with an alpha channel","Pixel is 8-bit luminance with an alpha channel","Grayscale colors","Grayscale colors + alpha channel","A generalized pixel.","The type of pixel.","Immutable pixel iterator","An Image in PNG Format","An Image in PNG Format","An Image in general PNM Format","Primitive trait from old stdlib","Represents the progress of an image operation.","The type of reader produced by <code>into_reader</code>.","RGB colors","Pixel contains 1-bit R, G and B channels","Pixel is 16-bit RGB","Pixel contains 16-bit R, G and B channels","Pixel contains 2-bit R, G and B channels","Pixel contains 4-bit R, G and B channels","Pixel contains 8-bit R, G and B channels","Pixel contains 8-bit R, G and B channels","Sendable Rgb image buffer","RGB colors + alpha channel","Pixel is 1-bit RGB with an alpha channel","Pixel is 16-bit RGBA","Pixel is 16-bit RGB with an alpha channel","Pixel is 2-bit RGB with an alpha channel","Pixel is 4-bit RGB with an alpha channel","Pixel is 8-bit RGB with an alpha channel","Pixel is 8-bit RGB with an alpha channel","Sendable Rgb + alpha channel image buffer","A View into another image","The underlying subpixel type.","An Image in TGA Format","An Image in TIFF Format","Pixel is of unknown color type with the specified bits per …","A value for signalling an error: An unsupported format was …","An Image in WEBP Format","Adjust the contrast of this image. <code>contrast</code> is the amount …","Apply the function <code>f</code> to each channel of this pixel.","","","","","","","Apply the function <code>f</code> to each channel of this pixel and …","","","","","","","Apply the function <code>f</code> to each channel except the alpha …","","","","","","","Apply the function <code>f</code> to each channel except the alpha …","Apply the function <code>f</code> to each channel except the alpha …","Return a reference to an 8bit BGR image","Return a reference to an 8bit BGRA image","Get the bytes of this value.","Return this image’s pixels as a native endian byte slice.","Return a view on the raw sample buffer.","Return a mutable view on the raw sample buffer.","Return a view on the raw sample buffer for 16 bit per …","Return a view on the raw sample buffer for 8 bit per …","Return a reference to an 16bit Grayscale image","Return a reference to an 8bit Grayscale image","Return a reference to an 16bit Grayscale image with an …","Return a reference to an 8bit Grayscale image with an …","Return a mutable reference to an 8bit BGR image","Return a mutable reference to an 8bit RGBA image","Return a mutable reference to an 16bit Grayscale image","Return a mutable reference to an 8bit Grayscale image","Return a mutable reference to an 16bit Grayscale image …","Return a mutable reference to an 8bit Grayscale image with …","Return a mutable reference to an 16bit RGB image","Return a mutable reference to an 8bit RGB image","Return a mutable reference to an 16bit RGBA image","Return a mutable reference to an 8bit RGBA image","Returns the underlying raw buffer","Return a reference to an 16bit RGB image","Return a reference to an 8bit RGB image","Return a reference to an 16bit RGBA image","Return a reference to an 8bit RGBA image","Returns the number of bits contained in a pixel of …","Blend the color of a given pixel into ourself, taking into …","","","","","","","Put a pixel at location (x, y), taking into account alpha …","DEPRECATED: This method will be removed. Blend the pixel …","Put a pixel at location (x, y), taking into account alpha …","DEPRECATED: Use iterator <code>pixels_mut</code> to blend the pixels …","Performs a Gaussian blur on this image. <code>sigma</code> is a measure …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bounding rectangle of this image.","","","","Brighten the pixels of this image. <code>value</code> is the amount to …","Iterators and other auxiliary structure for the <code>ImageBuffer</code>…","Returns the image buffer","Returns a mutable image buffer","Returns the number of bytes contained in a pixel of …","Return if the ImageFormat can be decoded by the lib.","Return if the ImageFormat can be encoded by the lib.","Change the coordinates of this subimage.","Returns the number of channels of this pixel type.","Returns the number of channels of this pixel type.","Returns the number of color channels that make up this …","Get the number of channels for colors of this type.","Returns the components as a slice.","","","","","","","Returns the channels of this pixel as a 4 tuple. If the …","","","","","","","Returns the components as a mutable slice","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Encoding and decoding for various image file formats.","Steps through the iterator from the current frame until …","Return this image’s color type.","Returns a string that can help to interpret the meaning …","Returns a string that can help to interpret the meaning …","Returns the color type of the image data produced by this …","Returns the ColorType for this pixel format","Returns the ColorType for this pixel format","Examples","Copies all of the pixels from another image into this …","Copies all of the pixels from another image into this …","Copies all of the pixels from one part of this image to …","Copies all of the pixels from one part of this image to …","","Return a cut-out of this image delimited by the bounding …","Return a cut-out of this image delimited by the bounding …","A measure of completed decoding.","","Delay of this frame","","","Returns a tuple containing the width and height of the …","The width and height of this image.","","","The width and height of this image.","","Enumerates over the pixels of the image. The iterator …","Enumerates over the pixels of the image. The iterator …","Enumerates over the rows of the image. The iterator yields …","Enumerates over the rows of the image. The iterator yields …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Contains detailed error representation.","Expands a color palette by re-using the existing buffer. …","Expands a color palette by re-using the existing buffer. …","Return a list of applicable extensions for this format.","Filters this image with the specified 3x3 kernel.","Image representations for ffi.","Flip this image horizontally","Flip this image vertically","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Construct a pixel from the 4 channels a, b, c and d. If …","","","","","","","Decodes an encoded image into a dynamic image.","Return the image format specified by a path’s file …","Constructs a new ImageBuffer by repeated application of …","Create a delay from a ratio of milliseconds.","Contructs a new frame","Return the image format specified by the path’s file …","Constructs a new ImageBuffer by copying a pixel","Contructs a buffer from a generic container (for example a …","Convert from a duration, clamped between 0 and an …","Returns a view into a slice.","","","","","","","Returns mutable view into a mutable slice.","","","","","","","Creates an image buffer out of an existing buffer. Returns …","Returns the pixel located at (x, y). Indexed from top left.","","","Gets a reference to the pixel at location <code>(x, y)</code>","","Gets a reference to the mutable pixel at location <code>(x, y)</code>. …","","","Gets a reference to the mutable pixel at location <code>(x, y)</code>","DEPRECATED: Do not use is function: It is unimplemented!","Return a grayscale version of this image.","Guess image format from memory block","Returns if there is an alpha channel.","Returns false if the color scheme is grayscale, true …","","","","","","","","","","","","The height of this image.","The height of this image.","The height of this image.","Hue rotate the supplied image. <code>value</code> is the degrees to …","Read the dimensions of the image located at the specified …","Image Processing Functions","Returns true if this x, y coordinate is contained inside …","Returns true if this x, y coordinate is contained inside …","","","","","","","","","","","","","","","Returns a reference to the underlying image.","","","","Returns a mutable reference to the underlying image.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consume the image and returns a BGR image.","Consume the image and returns a BGR image.","Consume the image and returns a BGRA image.","Consume the image and returns a BGRA image.","Returns the image buffer","Return this image’s pixels as a byte vector. If the …","Return the raw sample buffer with its stride an dimension …","Consume the decoder producing a series of frames.","","","Consume the image and returns a Luma image.","Consume the image and returns a Luma image.","Consume the image and returns a Luma image.","Consume the image and returns a LumaA image.","Consume the image and returns a LumaA image.","Consume the image and returns a LumaA image.","Returns the underlying raw buffer","Returns a reader that can be used to obtain the bytes of …","Consume the image and returns a RGB image.","Consume the image and returns a RGB image.","Consume the image and returns a RGB image.","Consume the image and returns a RGBA image.","Consume the image and returns a RGBA image.","Consume the image and returns a RGBA image.","Consumes the image buffer and returns the underlying data …","Invert this pixel","","","","","","","Invert the colors of this image. This method operates …","Input and output of images.","Returns the x offset","Create a new image from a Reader","Create a new image from a byte slice","Create a new image from a byte slice","Apply the function <code>f</code> to each channel of this pixel.","","","","","","","Apply the function <code>f</code> to each channel of this pixel and …","","","","","","","Apply the function <code>f</code> to each channel except the alpha …","","","","","","","Apply the function <code>f</code> to each channel except the alpha …","Apply the function <code>f</code> to each channel except the alpha …","Mathematical helper functions and types.","Creates a new <code>Frames</code> from an implementation specific …","Construct a new subimage The coordinates set the position …","Contructs a new frame without any delay.","Creates a new image buffer based on a <code>Vec&lt;P::Subpixel&gt;</code>.","Creates a dynamic image backed by a buffer of BGR pixels.","Creates a dynamic image backed by a buffer of BGRA pixels.","Creates a dynamic image backed by a buffer of grey pixels.","Creates a dynamic image backed by a buffer of grey pixels.","Creates a dynamic image backed by a buffer of grey pixels …","Creates a dynamic image backed by a buffer of grey pixels …","Creates a dynamic image backed by a buffer of RGB pixels.","Creates a dynamic image backed by a buffer of RGB pixels.","Creates a dynamic image backed by a buffer of RGBA pixels.","Creates a dynamic image backed by a buffer of RGBA pixels.","","","The numerator and denominator of the delay in milliseconds.","Open the image located at the path specified. The image’…","Retuns the color type of the image file before decoding","Retuns the color type of the image file before decoding","","Returns an Iterator over the pixels of this image. The …","Returns an Iterator over the pixels of this image. The …","Returns an iterator over the pixels of this image. The …","Returns an iterator over the mutable pixels of this image.","Decoding and Encoding of PNG Images","Put a pixel at location (x, y). Indexed from top left.","","","Puts a pixel at location <code>(x, y)</code>","","Returns all the bytes in the image.","Returns all the bytes in the image.","Same as <code>read_image</code> but periodically calls the provided …","Same as <code>read_image</code> but periodically calls the provided …","Decode a rectangular section of the image; see …","Decode a rectangular section of the image; see …","Decode a rectangular section of the image, periodically …","Calculate a measure for remaining decoding work.","Resize this image using the specified filter algorithm. …","Resize this image using the specified filter algorithm. …","Resize this image using the specified filter algorithm. …","Rotate this image 180 degrees clockwise.","Rotate this image 270 degrees clockwise.","Rotate this image 90 degrees clockwise.","Returns an iterator over the rows of this image.","Returns an iterator over the mutable rows of this image.","Get the format of the buffer when viewed as a matrix of …","Saves the buffer to a file at the path specified.","Saves the buffer to a file at the path specified.","Saves the supplied buffer to a file at the path specified.","Saves the supplied buffer to a file at the path specified …","Saves the buffer to a file at the specified path in the …","Saves the buffer to a file at the specified path in the …","Returns the minimum number of bytes that can be …","Returns the minimum number of bytes that can be …","Returns a mutable subimage that is a view into this image. …","Returns a mutable subimage that is a view into this image. …","","Scale this image down to fit within a specific size. …","Scale this image down to a specific size. Returns a new …","Convert this pixel to BGR","","","","","","","Returns a copy of this image as an BGR image.","Returns a copy of this image as an BGR image.","Convert this pixel to BGR with an alpha channel","","","","","","","Returns a copy of this image as an BGRA image.","Returns a copy of this image as an BGRA image.","Return a copy of this image’s pixels as a byte vector.","Convert this subimage to an ImageBuffer","Convert this pixel to luma","","","","","","","Returns a copy of this image as a Luma image.","Returns a copy of this image as a Luma image.","Returns a copy of this image as a Luma image.","Convert this pixel to luma with an alpha channel","","","","","","","Returns a copy of this image as a LumaA image.","Returns a copy of this image as a LumaA image.","Returns a copy of this image as a LumaA image.","","","","","","","","","","","","","","","","","Convert this pixel to RGB","","","","","","","Returns a copy of this image as an RGB image.","Returns a copy of this image as an RGB image.","Returns a copy of this image as an RGB image.","Convert this pixel to RGB with an alpha channel","","","","","","","Returns a copy of this image as an RGBA image.","Returns a copy of this image as an RGBA image.","Returns a copy of this image as an RGBA image.","Returns the y offset","A measure of all necessary decoding work.","Returns the total number of bytes in the decoded image.","Returns the total number of bytes in the decoded image.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the pixel located at (x, y). Indexed from top left.","Returns the pixel located at (x, y). Indexed from top left.","Returns the pixel located at (x, y), ignoring bounds …","Puts a pixel at location (x, y). Indexed from top left.","Puts a pixel at location (x, y). Indexed from top left.","Puts a pixel at location (x, y), ignoring bounds checking.","Performs an unsharpen mask on this image. <code>sigma</code> is the …","Returns an subimage that is an immutable view into this …","Returns an subimage that is an immutable view into this …","","The width of this image.","The width of this image.","The width of this image.","Writes all the bytes in an image to the encoder.","Encode this image and write it to <code>w</code>","Provides color conversions for whole image buffers.","Enumerate the pixels of an image.","Enumerate the pixels of an image.","Enumerate the rows of an image.","Enumerate the rows of an image.","Iterate over pixel refs.","Iterate over mutable pixel refs.","Iterate over rows of an image","Iterate over mutable rows of an image","","","","","","","","","","","","","","","","","","","","","","","","","Converts <code>self</code> to a buffer of type T","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Decoding and Encoding of PNG Images","An <code>AnimationDecoder</code> adapter of <code>PngDecoder</code>.","Filters based on the average of left and right neighbor …","High compression level","Compression level of a PNG encoder. The default setting is …","Default compression level","Fast, minimal compression","Filter algorithms used to process image data to improve …","Huffman coding compression","No processing done, best used for low bit depth greyscale …","PNG Encoder","PNG Reader","Algorithm that takes into account the left, upper left, …","PNG decoder","PNG encoder","Png Reader","Run-length encoding compression","Filters based on previous pixel in the same scanline","Filters based on the scanline above","Turn this into an iterator over the animation frames.","","","","","","","","","","","","","","","","","","","","","Encodes the image <code>data</code> that has dimensions <code>width</code> and <code>height</code>…","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Returns if the image contains an animation.","Creates a new decoder that decodes from the stream <code>r</code>","Create a new encoder that writes its output to <code>w</code>","Create a new encoder that writes its output to <code>w</code> with …","","","","","","","","","","","","","","","","","","","","","","","","","","The required color type can not be handled.","An error was encountered while decoding.","An error was encountered while decoding an image.","The resulting image exceed dimension limits in either …","The dimensions passed are wrong.","An error was encountered while encoding.","An error was encountered while encoding an image.","The format is known exactly.","Repeated an operation for which error that could not be …","An image format is not supported.","A string describing the parameter. This is discouraged and …","Some feature specified by string. This is discouraged and …","The generic error type for image operations.","A best effort representation for image formats.","Result of an image decoding/encoding process","The operation would have performed an allocation larger …","An error occurred while interacting with the environment.","Completing the operation would have required more …","Indicates the limit that prevented an operation from …","Completing the operation would have required more …","The format can be identified by a name.","The end of the image has been reached.","An error was encountered in input arguments.","An error was encountered in inputs arguments.","Details how a parameter is malformed.","A common path extension for the format is known.","The format is not known or could not be determined.","An operation can not be completed by the chosen …","The implementation for an operation was not provided.","Details what feature is not supported.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the image format associated with this error.","Return the image format associated with this error.","Returns the image format associated with this error.","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Create an <code>UnsupportedError</code> for an image with details on …","Create an <code>EncodingError</code> for an image format.","Create a <code>DecodingError</code> for an image format.","Construct a <code>ParameterError</code> directly from a corresponding …","Construct a generic <code>LimitError</code> directly from a …","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns the corresponding <code>UnsupportedErrorKind</code> of the …","Returns the corresponding <code>ParameterErrorKind</code> of the error.","Returns the corresponding <code>LimitErrorKind</code> of the error.","Create an <code>EncodingError</code> that stems from an arbitrary error …","Create a <code>DecodingError</code> that stems from an arbitrary error …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The samples are in column-major form and all samples are …","Denotes invalid flat sample buffers when trying to convert …","A flat buffer over a (multi channel) image.","All samples are packed.","Different normal forms of buffers.","The represented image can not use this representation.","At least pixels are packed.","The samples are in row-major form and all samples are …","A ffi compatible description of a sample buffer.","The represented image was too large.","No pixel aliases another.","A flat buffer that can be used as an image view.","A mutable owning version of a flat buffer.","The color format did not match the channel count.","Get a mutable reference based version.","View the samples as a slice.","Get a reference based version.","View the samples as a slice.","View this buffer as an image over some type of pixel.","Interpret this buffer as a mutable image.","View this buffer but keep mutability at a sample level.","","","","","","","","","","","","","","Tuple of bounds in the order of coordinate inputs.","Tuple of bounds in the order of coordinate inputs.","","","Add this to an index to get to the sample in the next …","The number of channels in the color representation of the …","","","","","","","","","","","","","Supplementary color information.","Describe a column-major image packed in all directions.","","","","","","","","","Get the dimensions <code>(channels, width, height)</code>.","Get the dimensions <code>(channels, width, height)</code>.","Check if a buffer of length <code>len</code> is large enough.","Check if a buffer of length <code>len</code> is large enough.","Get a reference on the inner sample descriptor.","Get a reference on the sample buffer descriptor.","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to a single sample.","Get a mutable reference to a selected subpixel if it is …","Get a mutable reference to a selected sample.","","","","Get a reference to a single sample.","Get a reference to a selected subpixel if it is in-bounds.","Get a reference to a selected subpixel.","If there are any samples aliasing each other.","If there are any samples aliasing each other.","","","","The height of the represented image.","Add this to an index to get to the next sample in …","Mutable portion of the buffer that holds sample values.","Return the mutable portion of the buffer that holds sample …","Return the mutable buffer that holds sample values.","Return the portion of the buffer that holds sample values.","Return the portion of the buffer that holds sample values.","Return the portion of the buffer that holds sample values.","Check that the pixel and the channel index are in bounds.","Check that the pixel and the channel index are in bounds.","","","Get an index provided it is inbouds.","Get an index provided it is inbouds.","Return a reference to a single sample at specified …","Resolve the index of a particular sample.","Resolve the index of a particular sample.","Get the theoretical position of sample (x, y, channel).","Get the theoretical position of sample (channel, x, y).","Return a mutable reference to a single sample at specified …","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Take out the sample buffer.","Take out the sample buffer.","Check if a buffer fulfills the requirements of a normal …","Check if a buffer fulfills the requirements of a normal …","A <code>repr(C)</code> description of the layout of buffer samples.","Get the minimum length of a buffer such that all in-bounds …","Get the minimum length of a buffer such that all in-bounds …","Get the minimum length of a buffer such that all in-bounds …","Get the minimum length of a buffer such that all in-bounds …","Compares the logical preconditions.","","","Describe a row-major image packed in all directions.","Get a reference on the inner buffer.","Get a reference on the inner buffer.","Underlying linear container holding sample values.","Shrink the image to the minimum of current and given …","Shrink the image to the minimum of current and given …","Shrink the inner image.","Shrink the inner image.","Get the strides for indexing matrix-like <code>[(c, w, h)]</code>.","Get the strides for indexing matrix-like <code>[(c, w, h)]</code>.","","","","","","","","Copy the data into an owned vector.","","","","","","","","","","","","","Move the data into an image buffer.","Try to convert this into an image with mutable pixels.","","","","","","","The width of the represented image.","Add this to an index to get to the next sample in …","Create a monocolor image from a single pixel.","Color operations","","Cubic Filter","Color operations","Available Sampling Filters.","","Gaussian Filter","","Lanczos with window 3","","Nearest Neighbor","","Linear Filter","Image sampling Performs a Gaussian blur on the supplied …","","","Color operations","","","Functions for altering and converting the color of …","Color operations","Return a mutable view into an image The coordinates set …","Return an immutable view into an image The coordinates set …","Color operations","","Image sampling Perform a 3x3 box filter on the supplied …","Affine transformations Flip an image horizontally","Affine transformations Flip an image horizontally and put …","Affine transformations Flip an image horizontally in place.","Affine transformations Flip an image vertically","Affine transformations Flip an image vertically and put …","Affine transformations Flip an image vertically in place.","","Returns the argument unchanged.","Color operations","Fill the image with a linear horizontal gradient","Color operations","Color operations","Calls <code>U::from(self)</code>.","Color operations","Overlay an image at a given coordinate (x, y)","Calculate the region that can be copied from top to bottom.","Replace the contents of an image at a given coordinate (x, …","Image sampling Resize the supplied image to the specified …","Affine transformations Rotate an image 180 degrees …","Affine transformations Rotate an image 180 degrees …","Affine transformations Rotate an image 180 degrees …","Affine transformations Rotate an image 270 degrees …","Affine transformations Rotate an image 270 degrees …","Affine transformations Rotate an image 90 degrees …","Affine transformations Rotate an image 90 degrees …","Image sampling Resize the supplied image to the specific …","Tile an image by repeating it multiple times","","","","","Image sampling Performs an unsharpen mask on the supplied …","Fill the image with a linear vertical gradient","A bi-level color map","The color type on which the map operates on","A color map","","","Brighten the supplied image. <code>value</code> is the amount to …","Brighten the supplied image in place. <code>value</code> is the amount …","","","Adjust the contrast of the supplied image. <code>contrast</code> is the …","Adjust the contrast of the supplied image in place. …","Reduces the colors of the image using the supplied …","Returns the argument unchanged.","Convert the supplied image to grayscale","Determine if this implementation of ColorMap overrides the …","Indicate NeuQuant implements <code>lookup</code>.","Hue rotate the supplied image. <code>value</code> is the degrees to …","Hue rotate the supplied image in place. <code>value</code> is the …","Reduces the colors using the supplied <code>color_map</code> and …","Returns the index of the closest match of <code>color</code> in the …","","Calls <code>U::from(self)</code>.","Invert each pixel within the supplied image. This function …","Looks up color by index in the color map.  If <code>idx</code> is out …","","Maps <code>color</code> to the closest color in the color map.","","","","","","A multi-format image reader.","","","Remove the current information on the image format.","Read the image (replaces <code>load</code>).","Get the currently determined format.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Read the image dimensions.","Unwrap the reader.","Create a new image reader without a preset format.","Open a file to read, format will be guessed from path.","Supply the format as which to interpret the read image.","","","","Construct a reader with specified format.","Make a format guess based on the content, replacing it on …","A Rectangle defined by its top left corner, width and …","","","","","","","","Returns the argument unchanged.","","The rectangle’s height.","Calls <code>U::from(self)</code>.","NEUQUANT Neural-Net quantization algorithm by Anthony …","","","","","Shared mathematical utility functions.","The rectangle’s width.","The x coordinate of the top left corner.","The y coordinate of the top left corner.","Neural network color quantizer","","","Returns the argument unchanged.","","Indicate NeuQuant implements <code>lookup</code>.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","Cut value to be inside given range","","","","","","","",""],"i":[34,0,32,0,26,34,0,26,34,32,16,16,16,0,32,0,0,0,0,32,0,0,0,0,0,32,0,0,32,32,1,1,0,0,0,0,0,0,1,1,1,1,0,0,1,1,1,1,110,44,32,34,26,34,34,34,26,34,34,26,34,34,34,26,34,0,0,0,44,0,32,37,32,0,0,58,0,34,26,34,34,34,26,34,0,0,34,26,34,34,34,26,34,0,0,16,32,32,34,37,32,1,16,5,6,7,8,9,10,16,5,6,7,8,9,10,16,5,6,7,8,9,10,16,16,1,1,119,1,13,13,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,13,1,1,1,1,26,16,5,6,7,8,9,10,110,29,13,1,1,41,29,31,35,13,26,34,5,6,7,8,9,10,1,32,37,38,40,41,29,31,35,13,26,34,5,6,7,8,9,10,1,32,37,38,40,44,29,13,1,1,0,31,31,26,32,32,29,16,16,26,34,16,5,6,7,8,9,10,16,5,6,7,8,9,10,16,5,6,7,8,9,10,31,35,13,26,34,5,6,7,8,9,10,1,32,37,38,40,31,35,13,26,34,5,6,7,8,9,10,1,32,37,38,40,0,41,1,16,16,58,16,16,13,110,110,110,110,13,1,1,38,13,31,13,13,58,44,29,13,13,1,13,13,13,13,35,13,26,34,5,6,7,8,9,10,1,32,37,38,35,13,26,34,5,6,7,8,9,10,1,32,37,38,0,22,13,32,1,0,1,1,35,13,26,34,5,6,7,8,9,10,1,32,37,38,40,41,29,31,35,13,26,34,34,5,5,6,6,7,7,8,8,9,9,10,10,1,32,37,37,38,40,16,5,6,7,8,9,10,1,32,13,35,31,32,13,13,35,16,5,6,7,8,9,10,16,5,6,7,8,9,10,13,44,29,13,13,1,110,29,13,13,1,1,0,26,26,13,26,34,5,6,7,8,9,10,1,32,44,44,13,1,0,0,44,44,13,5,6,7,8,9,10,13,5,6,7,8,9,10,44,29,13,1,110,29,13,1,41,29,31,35,13,26,34,5,6,7,8,9,10,1,32,37,38,40,1,1,1,1,31,1,13,120,41,40,1,1,1,1,1,1,13,58,1,1,1,1,1,1,13,16,5,6,7,8,9,10,1,0,31,0,0,0,16,5,6,7,8,9,10,16,5,6,7,8,9,10,16,5,6,7,8,9,10,16,16,0,41,29,31,13,1,1,1,1,1,1,1,1,1,1,41,40,35,0,58,58,35,44,44,13,13,0,110,29,13,13,1,58,58,58,58,121,121,121,38,1,1,1,1,1,1,13,13,13,13,1,0,0,13,1,58,58,110,110,29,1,1,16,5,6,7,8,9,10,1,1,16,5,6,7,8,9,10,1,1,1,29,16,5,6,7,8,9,10,1,1,1,16,5,6,7,8,9,10,1,1,1,31,35,13,26,34,5,6,7,8,9,10,1,32,37,38,40,16,5,6,7,8,9,10,1,1,1,16,5,6,7,8,9,10,1,1,1,31,38,58,58,41,29,31,35,13,26,34,5,6,7,8,9,10,1,32,37,38,40,41,29,31,35,13,26,34,5,6,7,8,9,10,1,32,37,38,40,41,29,31,35,13,26,34,5,6,7,8,9,10,1,32,37,38,40,44,44,13,110,110,13,1,44,44,29,44,44,13,122,1,0,0,0,0,0,0,0,0,0,70,71,74,75,48,50,49,51,70,71,74,75,48,50,49,51,70,74,48,50,70,74,48,50,123,70,71,74,75,48,50,49,51,70,71,74,75,48,50,49,51,70,71,74,75,48,50,49,51,70,71,74,75,48,50,49,51,70,71,74,75,48,50,49,51,70,71,74,75,48,50,49,51,70,71,74,75,70,74,48,50,70,71,74,75,48,50,49,51,70,71,74,75,48,50,49,51,70,71,74,75,48,50,49,51,0,0,85,84,0,84,84,0,84,85,0,0,85,0,0,0,84,85,85,82,87,82,83,86,84,85,87,82,83,86,84,85,84,85,84,85,82,84,85,82,86,84,85,84,85,84,85,87,82,83,86,84,85,87,82,83,86,84,85,83,82,82,82,86,86,87,82,87,82,84,85,87,82,83,86,84,85,87,82,83,86,84,85,87,82,83,86,84,85,86,89,93,0,91,90,93,0,92,90,89,90,89,0,0,0,91,93,0,0,93,92,90,93,0,0,92,92,93,0,0,93,95,89,96,97,90,98,99,91,92,93,95,89,96,97,90,98,99,91,92,89,90,91,92,89,90,91,92,89,90,91,92,91,93,93,95,95,89,96,96,97,97,90,98,98,99,99,91,92,92,95,96,98,93,93,93,95,95,89,96,97,90,98,99,91,92,92,92,95,96,98,97,99,89,90,91,92,93,95,89,96,97,90,98,99,91,92,95,97,99,96,98,93,95,96,97,98,99,93,96,97,98,89,90,91,92,93,95,96,97,98,99,92,93,95,89,96,97,90,98,99,91,92,93,95,89,96,97,90,98,99,91,92,93,95,89,96,97,90,98,99,91,92,107,0,0,107,0,101,107,107,0,101,107,0,0,101,19,19,19,19,19,19,19,106,19,76,105,106,101,107,19,76,105,106,101,107,19,76,105,106,76,76,19,76,105,106,101,107,19,76,105,106,101,107,19,76,105,106,76,101,107,76,101,107,19,76,19,76,105,106,19,76,105,106,101,101,107,19,76,105,106,101,107,19,105,106,105,106,106,19,105,106,19,76,76,101,107,76,76,19,105,106,19,105,106,19,76,105,106,19,76,19,19,76,19,76,19,105,106,106,19,76,105,106,101,107,105,106,19,76,19,19,76,105,106,107,101,106,76,105,106,19,19,76,105,106,19,76,19,76,105,106,101,107,101,19,19,76,105,106,101,107,19,76,105,106,101,107,19,105,19,76,105,106,101,107,76,76,19,0,0,73,0,0,0,73,0,73,0,73,0,73,0,73,73,0,73,73,0,0,0,0,0,73,0,0,0,0,0,0,0,73,73,0,0,0,0,73,0,0,0,0,0,0,0,0,0,0,0,0,0,0,73,73,73,73,0,0,0,112,0,111,111,0,0,111,111,0,0,0,111,0,112,111,0,0,0,112,111,111,0,112,111,112,111,111,111,111,111,0,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,0,45,45,45,45,45,45,45,45,45,45,45,0,45,45,45,45,0,45,45,45,0,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,0,0,0,0,0,0,0,0,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,2],1],[3],[[[5,[4]],3]],[[[6,[4]],3]],[[[7,[4]],3]],[[[8,[4]],3]],[[[9,[4]],3]],[[[10,[4]],3]],[3],[[[5,[4]],[5,[4]],3]],[[[6,[4]],[6,[4]],3]],[[[7,[4]],[7,[4]],3]],[[[8,[4]],[8,[4]],3]],[[[9,[4]],[9,[4]],3]],[[[10,[4]],[10,[4]],3]],[[3,3]],[[[5,[4]],3,3]],[[[6,[4]],3,3]],[[[7,[4]],3,3]],[[[8,[4]],3,3]],[[[9,[4]],3,3]],[[[10,[4]],3,3]],[3],[3],[1,[[14,[[13,[[6,[11]],[12,[11]]]]]]]],[1,[[14,[[13,[[9,[11]],[12,[11]]]]]]]],[[],[[15,[11]]]],[1,[[15,[11]]]],[[[13,[16,[17,[15]],18]]],[[19,[15]]]],[[[13,[16,[20,[15]],18]]],[[19,[15]]]],[1,[[14,[[19,[[15,[21]]]]]]]],[1,[[14,[[19,[[15,[11]]]]]]]],[1,[[14,[[13,[[7,[21]],[12,[21]]]]]]]],[1,[[14,[22]]]],[1,[[14,[[13,[[10,[21]],[12,[21]]]]]]]],[1,[[14,[23]]]],[1,[[14,[[13,[[6,[11]],[12,[11]]]]]]]],[1,[[14,[[13,[[9,[11]],[12,[11]]]]]]]],[1,[[14,[[13,[[7,[21]],[12,[21]]]]]]]],[1,[[14,[22]]]],[1,[[14,[[13,[[10,[21]],[12,[21]]]]]]]],[1,[[14,[23]]]],[1,[[14,[[13,[[5,[21]],[12,[21]]]]]]]],[1,[[14,[24]]]],[1,[[14,[[13,[[8,[21]],[12,[21]]]]]]]],[1,[[14,[25]]]],[[[13,[16,18]]],18],[1,[[14,[[13,[[5,[21]],[12,[21]]]]]]]],[1,[[14,[24]]]],[1,[[14,[[13,[[8,[21]],[12,[21]]]]]]]],[1,[[14,[25]]]],[26,21],[[]],[[[5,[4]],[5,[4]]]],[[[6,[4]],[6,[4]]]],[[[7,[4]],[7,[4]]]],[[[8,[4]],[8,[4]]]],[[[9,[4]],[9,[4]]]],[[[10,[4]],[10,[4]]]],[[27,27]],[[[29,[28]],27,27]],[[[13,[16,[0,[18,28]]]],27,27,16]],[[1,27,27,[8,[11]]]],[[1,2],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[29,[18]]]],[[[13,[16,[0,[18,18]]]]]],[1],[[1,30],1],0,[31,25],[31,25],[26,11],[32,33],[32,33],[[29,27,27,27,27]],[[],11],[[],11],[26,11],[34,11],[[],15],[[[5,[4]]],[[15,[4]]]],[[[6,[4]]],[[15,[4]]]],[[[7,[4]]],[[15,[4]]]],[[[8,[4]]],[[15,[4]]]],[[[9,[4]]],[[15,[4]]]],[[[10,[4]]],[[15,[4]]]],[[]],[[[5,[4]]]],[[[6,[4]]]],[[[7,[4]]]],[[[8,[4]]]],[[[9,[4]]]],[[[10,[4]]]],[[],15],[[[5,[4]]],[[15,[4]]]],[[[6,[4]]],[[15,[4]]]],[[[7,[4]]],[[15,[4]]]],[[[8,[4]]],[[15,[4]]]],[[[9,[4]]],[[15,[4]]]],[[[10,[4]]],[[15,[4]]]],[31,31],[35,35],[[[13,[16,[0,[18,36]]]]],[[13,[16,[0,[18,36]]]]]],[26,26],[34,34],[[[5,[[0,[36,4]]]]],[[5,[[0,[36,4]]]]]],[[[6,[[0,[36,4]]]]],[[6,[[0,[36,4]]]]]],[[[7,[[0,[36,4]]]]],[[7,[[0,[36,4]]]]]],[[[8,[[0,[36,4]]]]],[[8,[[0,[36,4]]]]]],[[[9,[[0,[36,4]]]]],[[9,[[0,[36,4]]]]]],[[[10,[[0,[36,4]]]]],[[10,[[0,[36,4]]]]]],[1,1],[32,32],[37,37],[38,38],[[[40,[39]]],[[40,[39]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[41,[[42,[[12,[31]]]]]],[1,26],[[],43],[[],43],[[],26],[[],26],[[],26],[[[13,[16,18]]],[[13,[[0,[[0,[16]],16]],12]]]],[[44,27,27],42],[[44,27,27],42],[[45,27,27],33],[[45,27,27],33],[[[13,[16,[0,[18,28]]]],45,27,27],33],[[1,27,27,27,27],1],[[1,27,27,27,27],1],[38,46],[[],[[13,[16,47]]]],[31,35],[[[13,[16,18]]]],[[[13,[16,[0,[18,28]]]]]],[[]],[[]],[[[29,[18]]]],[[[13,[16,[0,[18,18]]]]]],[[[13,[16,18]]]],[1],[[[13,[16,18]]],[[48,[16]]]],[[[13,[16,[0,[18,28]]]]],[[49,[16]]]],[[[13,[16,18]]],[[50,[16]]]],[[[13,[16,[0,[18,28]]]]],[[51,[16]]]],[[35,35],33],[[[13,[[0,[52,16]],52]],[13,[[0,[52,16]],52]]],33],[[26,26],33],[[34,34],33],[[[5,[[0,[52,4]]]],[5,[[0,[52,4]]]]],33],[[[6,[[0,[52,4]]]],[6,[[0,[52,4]]]]],33],[[[7,[[0,[52,4]]]],[7,[[0,[52,4]]]]],33],[[[8,[[0,[52,4]]]],[8,[[0,[52,4]]]]],33],[[[9,[[0,[52,4]]]],[9,[[0,[52,4]]]]],33],[[[10,[[0,[52,4]]]],[10,[[0,[52,4]]]]],33],[[1,1],33],[[32,32],33],[[37,37],33],[[38,38],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],0,[[22,15,[14,[11]]],25],[[[13,[[7,[11]],[12,[11,53]]]],15,[14,[11]]],25],[32,[[15,[43]]]],[[1,[15,[2]]],1],0,[1,1],[1,1],[[35,54],55],[[[13,[[0,[56,16]],56]],54],55],[[26,54],55],[[34,54],55],[[[5,[[0,[56,4]]]],54],55],[[[6,[[0,[56,4]]]],54],55],[[[7,[[0,[56,4]]]],54],55],[[[8,[[0,[56,4]]]],54],55],[[[9,[[0,[56,4]]]],54],55],[[[10,[[0,[56,4]]]],54],55],[[1,54],55],[[32,54],55],[[37,54],55],[[38,54],55],[[[40,[[0,[56,39]]]],54],55],[[]],[[]],[[]],[[]],[[]],[[]],[26,34],[[]],[[]],[[[57,[4]]],[[5,[4]]]],[[]],[[[57,[4]]],[[6,[4]]]],[[]],[[[57,[4]]],[[7,[4]]]],[[[57,[4]]],[[8,[4]]]],[[]],[[[57,[4]]],[[9,[4]]]],[[]],[[[57,[4]]],[[10,[4]]]],[[]],[[]],[[]],[32,37],[[]],[[]],[[]],[[]],[[4,4,4,4],[[5,[4]]]],[[4,4,4,4],[[6,[4]]]],[[4,4,4,4],[[7,[4]]]],[[4,4,4,4],[[8,[4]]]],[[4,4,4,4],[[9,[4]]]],[[4,4,4,4],[[10,[4]]]],[58,[[42,[1]]]],[[[17,[59]]],[[14,[32]]]],[[27,27,3],[[13,[16,12]]]],[[27,27],35],[[25,27,27,35],31],[[[17,[60]]],[[42,[32]]]],[[27,27,16],[[13,[16,12]]]],[[27,27,18],[[14,[[13,[16,18]]]]]],[61,35],[15],[[[15,[4]]],[[5,[4]]]],[[[15,[4]]],[[6,[4]]]],[[[15,[4]]],[[7,[4]]]],[[[15,[4]]],[[8,[4]]]],[[[15,[4]]],[[9,[4]]]],[[[15,[4]]],[[10,[4]]]],[15],[[[15,[4]]],[[5,[4]]]],[[[15,[4]]],[[6,[4]]]],[[[15,[4]]],[[7,[4]]]],[[[15,[4]]],[[8,[4]]]],[[[15,[4]]],[[9,[4]]]],[[[15,[4]]],[[10,[4]]]],[[27,27,12],[[14,[[13,[16,12]]]]]],[[27,27]],[[[29,[18]],27,27]],[[[13,[16,[0,[18,18]]]],27,27],16],[[[13,[16,18]],27,27],16],[[1,27,27],[[8,[11]]]],[[27,27]],[[[29,[28]],27,27]],[[[13,[16,[0,[18,28]]]],27,27],16],[[[13,[16,[0,[18,28]]]],27,27],16],[[1,27,27],[[8,[11]]]],[1,1],[[[15,[11]]],[[42,[32]]]],[26,33],[26,33],[[[13,[[0,[62,16]],62]],63]],[[26,63]],[[34,63]],[[[5,[[0,[62,4]]]],63]],[[[6,[[0,[62,4]]]],63]],[[[7,[[0,[62,4]]]],63]],[[[8,[[0,[62,4]]]],63]],[[[9,[[0,[62,4]]]],63]],[[[10,[[0,[62,4]]]],63]],[[1,63]],[[32,63]],[[],27],[[],27],[[[13,[16,18]]],27],[[1,30],1],[[[17,[60]]],42],0,[[27,27],33],[[27,27],33],[[[13,[16,18]]],16],[[[5,[4]],64],4],[[[6,[4]],64],4],[[[7,[4]],64],4],[[[8,[4]],64],4],[[[9,[4]],64],4],[[[10,[4]],64],4],[[[13,[16,[0,[18,28]]]]],16],[[[5,[4]],64],4],[[[6,[4]],64],4],[[[7,[4]],64],4],[[[8,[4]],64],4],[[[9,[4]],64],4],[[[10,[4]],64],4],[[]],[[[29,[18]]]],[[[13,[16,[0,[18,18]]]]]],[1],[[]],[[[29,[28]]]],[[[13,[16,[0,[18,28]]]]]],[1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,[[13,[[6,[11]],[12,[11]]]]]],[1,[[13,[[6,[11]],[12,[11]]]]]],[1,[[13,[[9,[11]],[12,[11]]]]]],[1,[[13,[[9,[11]],[12,[11]]]]]],[31,25],[1,[[12,[11]]]],[[[13,[16,[17,[15]],18]]],[[19,[[17,[15]],18]]]],[[],41],[[]],[[]],[1,22],[1,[[13,[[7,[21]],[12,[21]]]]]],[1,22],[1,23],[1,[[13,[[10,[21]],[12,[21]]]]]],[1,23],[[[13,[16,18]]],18],[[],42],[1,24],[1,[[13,[[5,[21]],[12,[21]]]]]],[1,24],[1,25],[1,[[13,[[8,[21]],[12,[21]]]]]],[1,25],[[[13,[16,12]]],12],[[]],[[[5,[4]]]],[[[6,[4]]]],[[[7,[4]]]],[[[8,[4]]]],[[[9,[4]]]],[[[10,[4]]]],[1],0,[31,27],[[[0,[65,66]],32],[[42,[1]]]],[[[15,[11]]],[[42,[1]]]],[[[15,[11]],32],[[42,[1]]]],[3],[[[5,[4]],3],[[5,[4]]]],[[[6,[4]],3],[[6,[4]]]],[[[7,[4]],3],[[7,[4]]]],[[[8,[4]],3],[[8,[4]]]],[[[9,[4]],3],[[9,[4]]]],[[[10,[4]],3],[[10,[4]]]],[3],[[[5,[4]],[5,[4]],3],[[5,[4]]]],[[[6,[4]],[6,[4]],3],[[6,[4]]]],[[[7,[4]],[7,[4]],3],[[7,[4]]]],[[[8,[4]],[8,[4]],3],[[8,[4]]]],[[[9,[4]],[9,[4]],3],[[9,[4]]]],[[[10,[4]],[10,[4]],3],[[10,[4]]]],[[3,3]],[[[5,[4]],3,3],[[5,[4]]]],[[[6,[4]],3,3],[[6,[4]]]],[[[7,[4]],3,3],[[7,[4]]]],[[[8,[4]],3,3],[[8,[4]]]],[[[9,[4]],3,3],[[9,[4]]]],[[[10,[4]],3,3],[[10,[4]]]],[3],[3],0,[[[68,[67]]],41],[[27,27,27,27],29],[25,31],[[27,27],[[13,[16,12]]]],[[27,27],1],[[27,27],1],[[27,27],1],[[27,27],1],[[27,27],1],[[27,27],1],[[27,27],1],[[27,27],1],[[27,27],1],[[27,27],1],[41,[[14,[[42,[31]]]]]],[[[40,[44]]],14],[35],[[[17,[60]]],[[42,[1]]]],[[],34],[[],34],[[35,35],[[14,[69]]]],[[],40],[[],40],[[[13,[16,18]]],[[70,[16]]]],[[[13,[16,[0,[18,28]]]]],[[71,[16]]]],0,[[27,27]],[[[29,[28]],27,27]],[[[13,[16,[0,[18,28]]]],27,27,16]],[[[13,[16,[0,[18,28]]]],27,27,16]],[[1,27,27,[8,[11]]]],[[[15,[11]]],42],[[[15,[11]]],42],[[[15,[11]],72],42],[[[15,[11]],72],42],[[27,27,27,27,[15,[11]]],42],[[27,27,27,27,[15,[11]]],42],[[27,27,27,27,[15,[11]],72],42],[38,46],[[1,27,27,73],1],[[1,27,27,73],1],[[1,27,27,73],1],[1,1],[1,1],[1,1],[[[13,[16,18]]],[[74,[16]]]],[[[13,[16,[0,[18,28]]]]],[[75,[16]]]],[[[13,[16,18]]],76],[[[13,[16,18]],[17,[60]]],42],[[1,[17,[60]]],42],[[[17,[60]],[15,[11]],27,27,26],42],[[[17,[60]],[15,[11]],27,27,26,32],42],[[[13,[16,18]],[17,[60]],32],42],[[1,[17,[60]],32],42],[[],46],[[],46],[[27,27,27,27],29],[[27,27,27,27],29],[[[29,[28]],27,27,27,27],29],[[1,27,27],1],[[1,27,27],1],[[],6],[[[5,[4]]],[[6,[4]]]],[[[6,[4]]],[[6,[4]]]],[[[7,[4]]],[[6,[4]]]],[[[8,[4]]],[[6,[4]]]],[[[9,[4]]],[[6,[4]]]],[[[10,[4]]],[[6,[4]]]],[1,[[13,[[6,[11]],[12,[11]]]]]],[1,[[13,[[6,[11]],[12,[11]]]]]],[[],9],[[[5,[4]]],[[9,[4]]]],[[[6,[4]]],[[9,[4]]]],[[[7,[4]]],[[9,[4]]]],[[[8,[4]]],[[9,[4]]]],[[[9,[4]]],[[9,[4]]]],[[[10,[4]]],[[9,[4]]]],[1,[[13,[[9,[11]],[12,[11]]]]]],[1,[[13,[[9,[11]],[12,[11]]]]]],[1,[[12,[11]]]],[[[29,[18]]],[[13,[12]]]],[[],7],[[[5,[4]]],[[7,[4]]]],[[[6,[4]]],[[7,[4]]]],[[[7,[4]]],[[7,[4]]]],[[[8,[4]]],[[7,[4]]]],[[[9,[4]]],[[7,[4]]]],[[[10,[4]]],[[7,[4]]]],[1,22],[1,[[13,[[7,[21]],[12,[21]]]]]],[1,22],[[],10],[[[5,[4]]],[[10,[4]]]],[[[6,[4]]],[[10,[4]]]],[[[7,[4]]],[[10,[4]]]],[[[8,[4]]],[[10,[4]]]],[[[9,[4]]],[[10,[4]]]],[[[10,[4]]],[[10,[4]]]],[1,23],[1,[[13,[[10,[21]],[12,[21]]]]]],[1,23],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],5],[[[5,[4]]],[[5,[4]]]],[[[6,[4]]],[[5,[4]]]],[[[7,[4]]],[[5,[4]]]],[[[8,[4]]],[[5,[4]]]],[[[9,[4]]],[[5,[4]]]],[[[10,[4]]],[[5,[4]]]],[1,24],[1,[[13,[[5,[21]],[12,[21]]]]]],[1,24],[[],8],[[[5,[4]]],[[8,[4]]]],[[[6,[4]]],[[8,[4]]]],[[[7,[4]]],[[8,[4]]]],[[[8,[4]]],[[8,[4]]]],[[[9,[4]]],[[8,[4]]]],[[[10,[4]]],[[8,[4]]]],[1,25],[1,[[13,[[8,[21]],[12,[21]]]]]],[1,25],[31,27],[38,46],[[],46],[[],46],[[],77],[[],77],[[],77],[[],77],[[],77],[[],77],[[],77],[[],77],[[],77],[[],77],[[],77],[[],77],[[],77],[[],77],[[],77],[[],77],[[],77],[[],77],[[],77],[[],77],[[],77],[[],77],[[],77],[[],77],[[],77],[[],77],[[],77],[[],77],[[],77],[[],77],[[],77],[[],77],[[],77],[[],77],[[],77],[[],77],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[27,27]],[[27,27]],[[[13,[16,[0,[18,18]]]],27,27],16],[[27,27]],[[27,27]],[[[13,[16,[0,[18,28]]]],27,27,16]],[[1,2,30],1],[[27,27,27,27],29],[[27,27,27,27],29],[[[29,[18]],27,27,27,27],29],[[],27],[[],27],[[[13,[16,18]]],27],[[[15,[11]],27,27,26],42],[[1,79,[80,[37]]],42],0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[70,[16]]],[[70,[16]]]],[[[74,[16]]],[[74,[16]]]],[[[48,[16]]],[[48,[16]]]],[[[50,[16]]],[[50,[16]]]],[[]],[[]],[[]],[[]],[[]],[[[70,[16]],54],55],[[[71,[16]],54],55],[[[74,[16]],54],55],[[[75,[16]],54],55],[[[48,[16]],54],55],[[[50,[16]],54],55],[[[49,[16]],54],55],[[[51,[16]],54],55],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[70,[16]]],64],[[[71,[16]]],64],[[[74,[16]]],64],[[[75,[16]]],64],[[[48,[16]]],64],[[[50,[16]]],64],[[[49,[16]]],64],[[[51,[16]]],64],[[[70,[16]]],[[14,[16]]]],[[[71,[16]]],[[14,[16]]]],[[[74,[16]]],[[14,[[70,[16]]]]]],[[[75,[16]]],[[14,[[71,[16]]]]]],[[[48,[16]]],14],[[[50,[16]]],14],[[[49,[16]]],14],[[[51,[16]]],14],[[[70,[16]]],[[14,[16]]]],[[[71,[16]]],[[14,[16]]]],[[[74,[16]]],[[14,[[70,[16]]]]]],[[[75,[16]]],[[14,[[71,[16]]]]]],[[]],[[]],[[]],[[]],[[],77],[[],77],[[],77],[[],77],[[],77],[[],77],[[],77],[[],77],[[],77],[[],77],[[],77],[[],77],[[],77],[[],77],[[],77],[[],77],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[82,[81]]],[[83,[81]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[84,84],[85,85],[[]],[[]],[[[82,[81]]],26],[[],84],[[],85],[[[82,[81]]]],[[[86,[79]],[15,[11]],27,27,26],42],[[84,84],33],[[85,85],33],[[],33],[[],33],[[84,54],55],[[85,54],55],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[83,[81]]],41],[[[82,[81]]],42],[[[82,[81]]],33],[81,[[42,[[82,[81]]]]]],[79,[[86,[79]]]],[[79,84,85],[[86,[79]]]],[[[87,[81]],[15,[11]]],[[88,[64]]]],[[[82,[81]],[15,[11]]],42],[[[87,[81]],[12,[11]]],[[88,[64]]]],[[[82,[81]]],46],[[]],[[]],[[],77],[[],77],[[],77],[[],77],[[],77],[[],77],[[],77],[[],77],[[],77],[[],77],[[],77],[[],77],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[[86,[79]],[15,[11]],27,27,26],42],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[89,89],[90,90],[91,91],[92,92],[[]],[[]],[[]],[[]],[[89,89],33],[[90,90],33],[[91,91],33],[[92,92],33],[[],33],[[93,54],[[77,[94]]]],[[93,54],55],[[95,54],55],[[95,54],[[77,[94]]]],[[89,54],55],[[96,54],[[77,[94]]]],[[96,54],55],[[97,54],[[77,[94]]]],[[97,54],55],[[90,54],55],[[98,54],55],[[98,54],[[77,[94]]]],[[99,54],[[77,[94]]]],[[99,54],55],[[91,54],55],[[92,54],[[77,[94]]]],[[92,54],55],[95,92],[96,92],[98,92],[[]],[100,93],[101,93],[92,95],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[32,92],[60,92],[[]],[[92,89],95],[92,96],[92,98],[90,97],[91,99],[[89,63]],[[90,63]],[[91,63]],[[92,63]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[95,89],[97,90],[99,91],[[92,[80,[[68,[102]]]]],96],[[92,[80,[[68,[102]]]]],98],[103],[103],[103],[103],[103],[103],[93,[[14,[102]]]],[96,[[14,[102]]]],[97,[[14,[102]]]],[98,[[14,[102]]]],[[]],[[]],[[]],[[]],[[],104],[[],104],[[],104],[[],104],[[],104],[[],104],[[],104],[[],77],[[],77],[[],77],[[],77],[[],77],[[],77],[[],77],[[],77],[[],77],[[],77],[[],77],[[],77],[[],77],[[],77],[[],77],[[],77],[[],77],[[],77],[[],77],[[],77],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[19,[[20,[15]]]]],[[19,[15]]]],[[[19,[[20,[15]]]]],15],[[[19,[[17,[15]]]]],[[19,[15]]]],[[[19,[[17,[15]]]]],15],[[[19,[[17,[15]]]]],[[77,[[105,[15,16]],101]]]],[[[19,[[20,[15]]]]],[[77,[[106,[15,16]],101]]]],[[[19,[[20,[15]]]]],[[77,[[105,[15,16]],101]]]],[[[106,[[0,[[20,[15]],[17,[15]]]],16]],27,27]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[19],[76],[[[105,[[17,[15]],16]]]],[[[106,[[0,[[20,[15]],[17,[15]]]],16]]]],0,0,[[[19,[36]]],[[19,[36]]]],[76,76],[[[105,[[0,[[17,[15]],36]],[0,[36,16]]]]],[[105,[[0,[[17,[15]],36]],[0,[36,16]]]]]],[[[106,[[0,[[20,[15]],36]],[0,[36,16]]]]],[[106,[[0,[[20,[15]],36]],[0,[36,16]]]]]],[101,101],[107,107],[[]],[[]],[[]],[[]],[[]],[[]],0,[[11,27,27],76],[[[105,[[17,[15]],16]]]],[[[106,[[0,[[20,[15]],[17,[15]]]],16]]]],[[76,76],33],[[101,101],33],[[107,107],33],[[],33],[[],33],[[],33],[19],[76],[[19,64],33],[[76,64],33],[[[105,[[17,[15]],16]]],[[19,[[17,[15]]]]]],[[[106,[[20,[15]],16]]],[[19,[[20,[15]]]]]],[[[19,[56]],54],55],[[76,54],55],[[[105,[[0,[[17,[15]],56]],[0,[56,16]]]],54],55],[[[106,[[0,[[20,[15]],56]],[0,[56,16]]]],54],55],[[101,54],55],[[101,54],55],[[107,54],55],[[]],[[]],[[]],[[]],[[]],[[]],[[[19,[[20,[15]]]],11,27,27],14],[[[105,[[20,[15]],[17,[15]],16]],11,27,27],14],[[[106,[[20,[15]],16]],11,27,27],14],[[[105,[[17,[15]],16]],27,27]],[[[106,[[0,[[20,[15]],[17,[15]]]],16]],27,27]],[[[106,[[0,[[20,[15]],[17,[15]]]],16]],27,27]],[[[19,[[17,[15]]]],11,27,27],14],[[[105,[[17,[15]],16]],11,27,27],14],[[[106,[[17,[15]],[20,[15]],16]],11,27,27],14],[19,33],[76,33],[[76,63]],[[101,63]],[[107,63]],0,0,[[[19,[[20,[15]]]]],[[14,[15]]]],[[[105,[[20,[15]],[17,[15]],16]]],15],[[[106,[[20,[15]],16]]],15],[[[19,[[17,[15]]]]],[[14,[15]]]],[[[105,[[17,[15]],16]]],15],[[[106,[[17,[15]],[20,[15]],16]]],15],[[19,11,27,27],33],[[76,11,27,27],33],[[[105,[[17,[15]],16]],27,27],33],[[[106,[[0,[[20,[15]],[17,[15]]]],16]],27,27],33],[[19,11,27,27],64],[[76,11,27,27],64],[[[19,[[108,[64]]]]]],[[19,11,27,27],[[14,[64]]]],[[76,11,27,27],[[14,[64]]]],[[19,64,64,64],[[14,[64]]]],[[76,64,64,64],[[14,[64]]]],[[[19,[[109,[64]]]]]],[[[105,[[17,[15]],16]]],[[105,[[17,[15]],16]]]],[[[106,[[0,[[20,[15]],[17,[15]]]],16]]],[[106,[[0,[[20,[15]],[17,[15]]]],16]]]],[[[106,[[0,[[20,[15]],[17,[15]]]],16]]],[[106,[[0,[[20,[15]],[17,[15]]]],16]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[[105,[[17,[15]],16]]],[[19,[[17,[15]]]]]],[[[106,[[20,[15]],16]]],[[19,[[20,[15]]]]]],[[19,107],33],[[76,107],33],0,[19,[[14,[64]]]],[76,[[14,[64]]]],[[[105,[[17,[15]],16]]],64],[[[106,[[20,[15]],16]]],64],[[107,107],[[14,[69]]]],[103],[[[106,[[0,[[20,[15]],[17,[15]]]],16]],27,27]],[[11,27,27],76],[[[105,[[17,[15]],16]]],[[17,[15]]]],[[[106,[[20,[15]],16]]],[[20,[15]]]],0,[[19,11,27,27]],[[76,11,27,27]],[[[105,[[17,[15]],16]],27,27]],[[[106,[[20,[15]],16]],27,27]],[19],[76],[[]],[[]],[[]],[[]],[[]],[[]],[[],104],[[[19,[[17,[[15,[36]]]]]]],[[19,[[12,[36]]]]]],[[],77],[[],77],[[],77],[[],77],[[],77],[[],77],[[],77],[[],77],[[],77],[[],77],[[],77],[[],77],[[[19,[18]]],[[77,[[13,[16,18]]]]]],[[[105,[[20,[15]],[17,[15]],16]]],[[77,[[106,[[20,[15]],[17,[15]],16]]]]]],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],0,0,[[16,27,27],[[19,[[15,[4]]]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[44,2],[[13,[12]]]],[[]],[[]],0,[73,73],[[]],0,0,[[44,27,27,27,27],[[29,[44]]]],[[44,27,27,27,27],[[29,[44]]]],0,[[73,73],33],[[44,[15,[2]]],[[13,[16,[12,[4]]]]]],[44,[[13,[12]]]],[[44,[13,[28]]],42],[110],[44,[[13,[12]]]],[[44,[13,[28]]],42],[110],[[73,54],55],[[]],0,[[110,16,16]],0,0,[[]],0,[[110,44,27,27]],[[27,27]],[[110,44,27,27]],[[44,27,27,73],[[13,[12]]]],[44,[[13,[12]]]],[[44,[13,[28]]],42],[110],[44,[[13,[12]]]],[[44,[13,[28]]],42],[44,[[13,[12]]]],[[44,[13,[28]]],42],[[44,27,27],[[13,[16,[12,[[0,[4,0]]]]]]]],[[110,44]],[[]],[[],77],[[],77],[[],78],[[44,2,30],[[13,[16,[12,[4]]]]]],[[110,16,16]],0,0,0,[[]],[[]],[[44,30],[[13,[16,[12,[4]]]]]],[[110,30]],[111,111],[[]],[[44,2],[[13,[16,[12,[4]]]]]],[[110,2]],[[[13,[16,[12,[11]]]],[0,[112,39]]]],[[]],[44,[[13,[7,12]]]],[[],33],[111,33],[[44,30],[[13,[16,[12,[4]]]]]],[[110,30]],[[[13,[16,[12,[11]]]],[0,[112,39]]],[[13,[[7,[11]],[12,[11]]]]]],[[],64],[[111,[7,[11]]],64],[[]],[110],[64,14],[[111,64],14],[[]],[[111,[7,[11]]]],[[]],[[],77],[[],77],[[],78],0,[[]],[[]],[[[113,[81]]]],[[[113,[[0,[65,66]]]]],[[42,[1]]]],[[[113,[81]]],[[14,[32]]]],[[]],[[]],[[[113,[[0,[65,66]]]]],42],[[[113,[81]]],81],[81,[[113,[81]]]],[[[17,[60]]],[[88,[[113,[[115,[114]]]]]]]],[[[113,[81]],32]],[[],77],[[],77],[[],78],[[81,32],[[113,[81]]]],[[[113,[[0,[65,66]]]]],[[88,[[113,[[0,[65,66]]]]]]]],0,[[]],[[]],[45,45],[[]],[[45,45],33],[[],33],[[45,54],55],[[]],[[45,63]],0,[[]],0,[[]],[[],77],[[],77],[[],78],0,0,0,0,0,[[]],[[]],[[]],[116,117],[117,33],[[117,[15,[11]]],64],[[117,[8,[11]]],64],[[117,[15,[11]]]],[[]],[[117,64],[[14,[[57,[11]]]]]],[[117,64],14],[[117,[8,[11]]]],[[117,[15,[11]]]],[[30,64,[15,[11]]],117],[[],77],[[],77],[[],78],[[118,118,118],118],0,0,0,0,0,0,0,0],"c":[213,214,273,274,276,277,482,484,492,495,500,503,569,612,621,632,642,668,678,878,879,1437,1455,1456,1457,1458,1459,1460,1461,1462,1463],"p":[[4,"DynamicImage"],[15,"f32"],[8,"FnMut"],[8,"Primitive"],[3,"Rgb"],[3,"Bgr"],[3,"Luma"],[3,"Rgba"],[3,"Bgra"],[3,"LumaA"],[15,"u8"],[3,"Vec"],[3,"ImageBuffer"],[4,"Option"],[15,"slice"],[8,"Pixel"],[8,"AsRef"],[8,"Deref"],[3,"FlatSamples"],[8,"AsMut"],[15,"u16"],[6,"GrayImage"],[6,"GrayAlphaImage"],[6,"RgbImage"],[6,"RgbaImage"],[4,"ColorType"],[15,"u32"],[8,"DerefMut"],[3,"SubImage"],[15,"i32"],[3,"Frame"],[4,"ImageFormat"],[15,"bool"],[4,"ExtendedColorType"],[3,"Delay"],[8,"Clone"],[4,"ImageOutputFormat"],[3,"Progress"],[8,"Sized"],[3,"Pixels"],[3,"Frames"],[6,"ImageResult"],[15,"str"],[8,"GenericImageView"],[3,"Rect"],[15,"u64"],[8,"Default"],[3,"EnumeratePixels"],[3,"EnumeratePixelsMut"],[3,"EnumerateRows"],[3,"EnumerateRowsMut"],[8,"PartialEq"],[3,"Global"],[3,"Formatter"],[6,"Result"],[8,"Debug"],[15,"array"],[8,"ImageDecoder"],[3,"OsStr"],[3,"Path"],[3,"Duration"],[8,"Hash"],[8,"Hasher"],[15,"usize"],[8,"BufRead"],[8,"Seek"],[8,"Iterator"],[3,"Box"],[4,"Ordering"],[3,"Pixels"],[3,"PixelsMut"],[8,"Fn"],[4,"FilterType"],[3,"Rows"],[3,"RowsMut"],[3,"SampleLayout"],[4,"Result"],[3,"TypeId"],[8,"Write"],[8,"Into"],[8,"Read"],[3,"PngDecoder"],[3,"ApngDecoder"],[4,"CompressionType"],[4,"FilterType"],[3,"PngEncoder"],[3,"PngReader"],[6,"Result"],[4,"UnsupportedErrorKind"],[4,"ParameterErrorKind"],[4,"LimitErrorKind"],[4,"ImageFormatHint"],[4,"ImageError"],[3,"Error"],[3,"UnsupportedError"],[3,"EncodingError"],[3,"ParameterError"],[3,"DecodingError"],[3,"LimitError"],[3,"Error"],[4,"Error"],[8,"Error"],[3,"Demand"],[3,"String"],[3,"View"],[3,"ViewMut"],[4,"NormalForm"],[8,"Index"],[8,"IndexMut"],[8,"GenericImage"],[3,"BiLevel"],[8,"ColorMap"],[3,"Reader"],[3,"File"],[3,"BufReader"],[3,"NeuQuant"],[3,"NeuQuant"],[8,"PartialOrd"],[8,"EncodableLayout"],[8,"AnimationDecoder"],[8,"ImageDecoderExt"],[8,"ImageEncoder"],[8,"ConvertBuffer"]]},\
"indexmap":{"doc":"<code>IndexMap</code> is a hash table where the iteration order of the …","t":"ICCKOOAADEDDDDDDQDINDNDQDDKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["Equivalent","IndexMap","IndexSet","equivalent","indexmap","indexset","map","set","Drain","Entry","IndexMap","IntoIter","IntoKeys","IntoValues","Iter","IterMut","Key","Keys","MutableKeys","Occupied","OccupiedEntry","Vacant","VacantEntry","Value","Values","ValuesMut","__private_marker","__private_marker","and_modify","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capacity","clear","clone","clone","clone","clone","clone_from","clone_into","clone_into","clone_into","clone_into","collect","collect","collect","collect","collect","collect","collect","collect","collect","contains_key","count","count","count","count","count","count","count","count","count","default","drain","entry","eq","equivalent","equivalent","extend","extend","first","first_mut","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_iter","get","get","get_full","get_full_mut","get_full_mut2","get_full_mut2","get_index","get_index_mut","get_index_of","get_key_value","get_mut","get_mut","hasher","index","index","index","index","index","index_mut","index_mut","insert","insert","insert","insert_full","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_key","into_keys","into_mut","into_values","is_empty","iter","iter_mut","key","key","key","keys","last","last","last","last","last","last","last","last","last","last","last_mut","len","len","len","len","len","len","len","len","len","len","move_index","new","next","next","next","next","next","next","next","next","next","next_back","next_back","next_back","next_back","next_back","next_back","next_back","next_back","next_back","nth","nth","nth","nth","nth","nth","nth","nth","nth","nth_back","nth_back","nth_back","nth_back","nth_back","nth_back","nth_back","nth_back","nth_back","or_default","or_insert","or_insert_with","or_insert_with_key","pop","remove","remove","remove_entry","remove_entry","reserve","retain","retain2","retain2","reverse","shift_remove","shift_remove","shift_remove_entry","shift_remove_entry","shift_remove_full","shift_remove_index","shrink_to","shrink_to_fit","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","sort_by","sort_keys","sort_unstable_by","sort_unstable_keys","sorted_by","sorted_unstable_by","split_off","swap_indices","swap_remove","swap_remove","swap_remove_entry","swap_remove_entry","swap_remove_full","swap_remove_index","to_owned","to_owned","to_owned","to_owned","truncate","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","values","values_mut","with_capacity","with_capacity_and_hasher","with_hasher","Difference","Drain","IndexSet","Intersection","IntoIter","Iter","SymmetricDifference","Union","bitand","bitor","bitxor","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capacity","clear","clone","clone","clone","clone","clone","clone","clone_from","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","collect","collect","collect","contains","count","count","count","default","difference","drain","eq","equivalent","equivalent","extend","extend","first","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fold","fold","from","from","from","from","from","from","from","from","from","from_iter","get","get_full","get_index","get_index_of","hasher","index","insert","insert_full","intersection","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","is_disjoint","is_empty","is_subset","is_superset","iter","last","last","last","last","len","len","len","len","move_index","new","next","next","next","next","next","next","next","next_back","next_back","next_back","next_back","next_back","next_back","next_back","nth","nth","nth","nth_back","nth_back","nth_back","pop","remove","replace","replace_full","reserve","retain","reverse","rfold","rfold","shift_remove","shift_remove_full","shift_remove_index","shift_take","shrink_to","shrink_to_fit","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","sort","sort_by","sort_unstable","sort_unstable_by","sorted_by","sorted_unstable_by","split_off","sub","swap_indices","swap_remove","swap_remove_full","swap_remove_index","swap_take","symmetric_difference","take","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","truncate","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","with_capacity","with_capacity_and_hasher","with_hasher"],"q":[[0,"indexmap"],[8,"indexmap::map"],[336,"indexmap::set"]],"d":["Key equivalence trait.","","","Compare self to <code>key</code> and return <code>true</code> if they are equal.","Create an <code>IndexMap</code> from a list of key-value pairs","Create an <code>IndexSet</code> from a list of values","<code>IndexMap</code> is a hash table where the iteration order of the …","A hash set implemented using <code>IndexMap</code>","A draining iterator over the entries of a <code>IndexMap</code>.","Entry for an existing key-value pair or a vacant location …","A hash table where the iteration order of the key-value …","An owning iterator over the entries of a <code>IndexMap</code>.","An owning iterator over the keys of a <code>IndexMap</code>.","An owning iterator over the values of a <code>IndexMap</code>.","An iterator over the entries of a <code>IndexMap</code>.","A mutable iterator over the entries of a <code>IndexMap</code>.","","An iterator over the keys of a <code>IndexMap</code>.","Opt-in mutable access to keys.","Existing slot with equivalent key.","A view into an occupied entry in a <code>IndexMap</code>. It is part of …","Vacant slot (no equivalent key in the map).","A view into a vacant entry in a <code>IndexMap</code>. It is part of …","","An iterator over the values of a <code>IndexMap</code>.","A mutable iterator over the values of a <code>IndexMap</code>.","This method is not useful in itself – it is there to …","","Modifies the entry if it is occupied.","","","","","","","","","","","","","","","","","","","","","","","","","","","Computes in <strong>O(1)</strong> time.","Remove all key-value pairs in the map, while preserving …","","","","","","","","","","","","","","","","","","","Return <code>true</code> if an equivalent to <code>key</code> exists in the map.","","","","","","","","","","Return an empty <code>IndexMap</code>","Clears the <code>IndexMap</code> in the given index range, returning …","Get the given key’s corresponding entry in the map for …","","","","Extend the map with all key-value pairs in the iterable.","Extend the map with all key-value pairs in the iterable.","Get the first key-value pair","Get the first key-value pair, with mutable access to the …","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Examples","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Create an <code>IndexMap</code> from the sequence of key-value pairs in …","Gets a reference to the entry’s value in the map.","Return a reference to the value stored for <code>key</code>, if it is …","Return item index, key and value","","Return item index, mutable reference to key and value","","Get a key-value pair by index","Get a key-value pair by index","Return item index, if it exists in the map","Return references to the key-value pair stored for <code>key</code>, if …","Gets a mutable reference to the entry’s value in the map.","","Return a reference to the map’s <code>BuildHasher</code>.","Return the index of the key-value pair","Return the index where the key-value pair exists or will …","Return the index where the key-value pair will be inserted.","Returns a reference to the value at the supplied <code>index</code>.","Returns a reference to the value corresponding to the …","Returns a mutable reference to the value corresponding to …","Returns a mutable reference to the value at the supplied …","Sets the value of the entry to <code>value</code>, and returns the entry…","Inserts the entry’s key and the given value into the …","Insert a key-value pair in the map.","Insert a key-value pair in the map, and get their index.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Takes ownership of the key, leaving the entry vacant.","Return an owning iterator over the keys of the map, in …","Converts into a mutable reference to the entry’s value …","Return an owning iterator over the values of the map, in …","Returns true if the map contains no elements.","Return an iterator over the key-value pairs of the map, in …","Return an iterator over the key-value pairs of the map, in …","Gets a reference to the entry’s key in the map.","Gets a reference to the entry’s key, either within the …","Gets a reference to the key that was used to find the …","Return an iterator over the keys of the map, in their order","Get the last key-value pair","","","","","","","","","","Get the last key-value pair, with mutable access to the …","Return the number of key-value pairs in the map.","","","","","","","","","","Moves the position of a key-value pair from one index to …","Create a new map. (Does not allocate.)","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Inserts a default-constructed value in the entry if it is …","Inserts the given default value in the entry if it is …","Inserts the result of the <code>call</code> function in the entry if it …","Inserts the result of the <code>call</code> function with a reference …","Remove the last key-value pair","Remove the key, value pair stored in the map for this …","Remove the key-value pair equivalent to <code>key</code> and return its …","Remove and return the key, value pair stored in the map …","Remove and return the key-value pair equivalent to <code>key</code>.","Reserve capacity for <code>additional</code> more key-value pairs.","Scan through each key-value pair in the map and keep those …","Scan through each key-value pair in the map and keep those …","","Reverses the order of the map’s key-value pairs in place.","Remove the key, value pair stored in the map for this …","Remove the key-value pair equivalent to <code>key</code> and return its …","Remove and return the key, value pair stored in the map …","Remove and return the key-value pair equivalent to <code>key</code>.","Remove the key-value pair equivalent to <code>key</code> and return it …","Remove the key-value pair by index","Shrink the capacity of the map with a lower limit.","Shrink the capacity of the map as much as possible.","","","","","","","","","","Sort the map’s key-value pairs in place using the …","Sort the map’s key-value pairs by the default ordering …","Sort the map’s key-value pairs in place using the …","Sort the map’s key-value pairs by the default ordering …","Sort the key-value pairs of the map and return a by-value …","Sort the key-value pairs of the map and return a by-value …","Splits the collection into two at the given index.","Swaps the position of two key-value pairs in the map.","Remove the key, value pair stored in the map for this …","Remove the key-value pair equivalent to <code>key</code> and return its …","Remove and return the key, value pair stored in the map …","Remove and return the key-value pair equivalent to <code>key</code>.","Remove the key-value pair equivalent to <code>key</code> and return it …","Remove the key-value pair by index","","","","","Shortens the map, keeping the first <code>len</code> elements and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return an iterator over the values of the map, in their …","Return an iterator over mutable references to the values …","Create a new map with capacity for <code>n</code> key-value pairs. …","Create a new map with capacity for <code>n</code> key-value pairs. …","Create a new map with <code>hash_builder</code>.","A lazy iterator producing elements in the difference of …","A draining iterator over the items of a <code>IndexSet</code>.","A hash set where the iteration order of the values is …","A lazy iterator producing elements in the intersection of …","An owning iterator over the items of a <code>IndexSet</code>.","An iterator over the items of a <code>IndexSet</code>.","A lazy iterator producing elements in the symmetric …","A lazy iterator producing elements in the union of <code>IndexSet</code>…","Returns the set intersection, cloned into a new set.","Returns the set union, cloned into a new set.","Returns the set symmetric-difference, cloned into a new …","","","","","","","","","","","","","","","","","Computes in <strong>O(1)</strong> time.","Remove all elements in the set, while preserving its …","","","","","","","","","","","","","","","","","Return <code>true</code> if an equivalent to <code>value</code> exists in the set.","","","","Return an empty <code>IndexSet</code>","Return an iterator over the values that are in <code>self</code> but …","Clears the <code>IndexSet</code> in the given index range, returning …","","","","","","Get the first value","","","","","","","","","","","Examples","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Return a reference to the value stored in the set, if it …","Return item index and value","Get a value by index","Return item index, if it exists in the set","Return a reference to the set’s <code>BuildHasher</code>.","Returns a reference to the value at the supplied <code>index</code>.","Insert the value into the set.","Insert the value into the set, and get its index.","Return an iterator over the values that are in both <code>self</code> …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","Returns <code>true</code> if <code>self</code> has no elements in common with <code>other</code>.","Returns true if the set contains no elements.","Returns <code>true</code> if all elements of <code>self</code> are contained in <code>other</code>…","Returns <code>true</code> if all elements of <code>other</code> are contained in <code>self</code>…","Return an iterator over the values of the set, in their …","Get the last value","","","","Return the number of elements in the set.","","","","Moves the position of a value from one index to another by …","Create a new set. (Does not allocate.)","","","","","","","","","","","","","","","","","","","","","Remove the last value","Remove the value from the set, and return <code>true</code> if it was …","Adds a value to the set, replacing the existing value, if …","Adds a value to the set, replacing the existing value, if …","Reserve capacity for <code>additional</code> more values.","Scan through each value in the set and keep those where the","Reverses the order of the set’s values in place.","","","Remove the value from the set, and return <code>true</code> if it was …","Remove the value from the set return it and the index it …","Remove the value by index","Removes and returns the value in the set, if any, that is …","Shrink the capacity of the set with a lower limit.","Shrink the capacity of the set as much as possible.","","","","","","","","Sort the set’s values by their default ordering.","Sort the set’s values in place using the comparison …","Sort the set’s values by their default ordering.","Sort the set’s values in place using the comparison …","Sort the values of the set and return a by-value iterator …","Sort the values of the set and return a by-value iterator …","Splits the collection into two at the given index.","Returns the set difference, cloned into a new set.","Swaps the position of two values in the set.","Remove the value from the set, and return <code>true</code> if it was …","Remove the value from the set return it and the index it …","Remove the value by index","Removes and returns the value in the set, if any, that is …","Return an iterator over the values that are in <code>self</code> or …","Removes and returns the value in the set, if any, that is …","","","","","","","Shortens the set, keeping the first <code>len</code> elements and …","","","","","","","","","","","","","","","","","","","","","","","","","Return an iterator over all values that are in <code>self</code> or …","Create a new set with capacity for <code>n</code> elements. (Does not …","Create a new set with capacity for <code>n</code> elements. (Does not …","Create a new set with <code>hash_builder</code>."],"i":[0,0,0,20,0,0,0,0,0,0,0,0,0,0,0,0,47,0,0,6,0,6,0,47,0,0,47,5,6,29,6,32,5,10,14,11,15,16,12,17,18,19,29,6,32,5,10,14,11,15,16,12,17,18,19,5,5,5,10,11,12,5,5,10,11,12,10,14,11,15,16,12,17,18,19,5,10,14,11,15,16,12,17,18,19,5,5,5,5,5,5,5,5,5,5,29,6,32,5,10,14,11,15,16,12,17,18,19,29,6,32,5,5,10,14,11,15,16,12,17,18,19,5,29,5,5,5,47,5,5,5,5,5,29,5,5,29,6,32,5,5,5,5,29,32,5,5,29,6,32,5,10,14,11,15,16,12,17,18,19,5,5,5,10,14,11,15,16,12,17,18,19,32,5,29,5,5,5,5,29,6,32,5,5,10,14,11,15,16,12,17,18,19,5,5,10,14,11,15,16,12,17,18,19,5,5,10,14,11,15,16,12,17,18,19,10,14,11,15,16,12,17,18,19,10,14,11,15,16,12,17,18,19,10,14,11,15,16,12,17,18,19,6,6,6,6,5,29,5,29,5,5,5,47,5,5,29,5,29,5,5,5,5,5,10,14,11,15,16,12,17,18,19,5,5,5,5,5,5,5,5,29,5,29,5,5,5,5,10,11,12,5,29,6,32,5,10,14,11,15,16,12,17,18,19,29,6,32,5,10,14,11,15,16,12,17,18,19,29,6,32,5,10,14,11,15,16,12,17,18,19,5,5,5,5,5,0,0,0,0,0,0,0,0,39,39,39,39,45,40,46,41,42,43,44,39,45,40,46,41,42,43,44,39,39,39,40,41,42,43,44,39,39,40,41,42,43,44,45,40,46,39,45,40,46,39,39,39,39,39,39,39,39,39,39,45,40,46,41,42,43,44,43,44,39,39,45,40,46,41,42,43,44,39,39,39,39,39,39,39,39,39,39,39,45,40,46,41,42,43,44,39,39,45,40,46,41,42,43,44,39,39,39,39,39,39,45,40,46,39,45,40,46,39,39,45,40,46,41,42,43,44,45,40,46,41,42,43,44,45,40,46,45,40,46,39,39,39,39,39,39,39,43,44,39,39,39,39,39,39,45,40,46,41,42,43,44,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,40,41,42,43,44,39,39,45,40,46,41,42,43,44,39,45,40,46,41,42,43,44,39,45,40,46,41,42,43,44,39,39,39,39],"f":[0,0,0,[[],1],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[6,7],6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[5,8],[5],[[[5,[9,9,9]]],[[5,[9,9,9]]]],[10,10],[11,11],[12,12],[[[5,[9,9,9]],[5,[9,9,9]]]],[[]],[[]],[[]],[[]],[10,13],[14,13],[11,13],[15,13],[16,13],[12,13],[17,13],[18,13],[19,13],[[[5,[[0,[3,2]],4]],[0,[3,[20,[[0,[3,2]]]],21]]],1],[10,8],[14,8],[11,8],[15,8],[16,8],[12,8],[17,8],[18,8],[19,8],[[],[[5,[22]]]],[[5,[23,[8]]],19],[[[5,[[0,[3,2]],4]],[0,[3,2]]],[[6,[[0,[3,2]]]]]],[[[5,[[0,[3,2]],24,4]],[5,[[0,[3,2]],4]]],1],[[],1],[[],1],[[[5,[[0,[3,2,25]],25,4]],26]],[[[5,[[0,[3,2]],4]],26]],[5,27],[5,27],[[[29,[28,28]],30],31],[[[6,[28,28]],30],31],[[[32,[28]],30],31],[[[5,[28,28]],30],31],[[[10,[28]],30],31],[[[14,[28]],30],31],[[[11,[28]],30],31],[[[15,[28]],30],31],[[[16,[28]],30],31],[[[12,[28,28]],30],31],[[[17,[28,28]],30],31],[[[18,[28,28]],30],31],[[[19,[28,28]],30],31],[[]],[[]],[[]],[[]],[33,[[5,[[0,[3,2]],34]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[26,[[5,[[0,[3,2]],[0,[4,22]]]]]],[29],[[[5,[[0,[3,2]],4]],[0,[3,[20,[[0,[3,2]]]],21]]],27],[[[5,[[0,[3,2]],4]],[0,[3,[20,[[0,[3,2]]]],21]]],27],[[[5,[[0,[3,2]],4]],[0,[3,[20,[[0,[3,2]]]],21]]],27],[[[0,[3,20,21]]],27],[[[5,[[0,[2,3]],4]],[0,[3,[20,[[0,[2,3]]]],21]]],27],[[5,8],27],[[5,8],27],[[[5,[[0,[3,2]],4]],[0,[3,[20,[[0,[3,2]]]],21]]],[[27,[8]]]],[[[5,[[0,[3,2]],4]],[0,[3,[20,[[0,[3,2]]]],21]]],27],[29],[[[5,[[0,[3,2]],4]],[0,[3,[20,[[0,[3,2]]]],21]]],27],[5],[29,8],[6,8],[32,8],[[5,8]],[[[5,[[0,[3,2]],4]],[0,[3,[20,[[0,[3,2]]]],21]]]],[[[5,[[0,[3,2]],4]],[0,[3,[20,[[0,[3,2]]]],21]]]],[[5,8]],[29],[32],[[[5,[[0,[3,2]],4]],[0,[3,2]]],27],[[[5,[[0,[3,2]],4]],[0,[3,2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[5],[5],[5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[32],[5,14],[29],[5,16],[5,1],[5,12],[5,17],[29],[6],[32],[5,10],[5,27],[10,27],[14,27],[11,27],[15,27],[16,27],[12,27],[17,27],[18,27],[19,27],[5,27],[5,8],[10,8],[14,8],[11,8],[15,8],[16,8],[12,8],[17,8],[18,8],[19,8],[[5,8,8]],[[],5],[10,27],[14,27],[11,27],[15,27],[16,27],[12,27],[17,27],[18,27],[19,27],[10,27],[14,27],[11,27],[15,27],[16,27],[12,27],[17,27],[18,27],[19,27],[[10,8],27],[[14,8],27],[[11,8],27],[[15,8],27],[[16,8],27],[[12,8],27],[[17,8],27],[[18,8],27],[[19,8],27],[[10,8],27],[[14,8],27],[[11,8],27],[[15,8],27],[[16,8],27],[[12,8],27],[[17,8],27],[[18,8],27],[[19,8],27],[[[6,[22]]],22],[6],[[6,7]],[[6,7]],[[[5,[[0,[3,2]],4]]],27],[29],[[[5,[[0,[3,2]],4]],[0,[3,[20,[[0,[3,2]]]],21]]],27],[29],[[[5,[[0,[3,2]],4]],[0,[3,[20,[[0,[3,2]]]],21]]],27],[[[5,[[0,[3,2]],4]],8]],[[[5,[[0,[3,2]],4]],35]],[35],[[[5,[[0,[2,3]],4]],35]],[[[5,[[0,[3,2]],4]]]],[29],[[[5,[[0,[3,2]],4]],[0,[3,[20,[[0,[3,2]]]],21]]],27],[29],[[[5,[[0,[3,2]],4]],[0,[3,[20,[[0,[3,2]]]],21]]],27],[[[5,[[0,[3,2]],4]],[0,[3,[20,[[0,[3,2]]]],21]]],27],[[5,8],27],[[[5,[[0,[3,2]],4]],8]],[[[5,[[0,[3,2]],4]]]],[10],[14],[11],[15],[16],[12],[17],[18],[19],[[[5,[[0,[3,2]],4]],35]],[[[5,[36,[0,[3,2]],4]]]],[[[5,[[0,[3,2]],4]],35]],[[[5,[36,[0,[3,2]],4]]]],[[[5,[[0,[3,2]],4]],35],[[18,[[0,[3,2]]]]]],[[[5,[[0,[3,2]],4]],35],[[18,[[0,[3,2]]]]]],[[[5,[9]],8],[[5,[9]]]],[[5,8,8]],[29],[[[5,[[0,[3,2]],4]],[0,[3,[20,[[0,[3,2]]]],21]]],27],[29],[[[5,[[0,[3,2]],4]],[0,[3,[20,[[0,[3,2]]]],21]]],27],[[[5,[[0,[3,2]],4]],[0,[3,[20,[[0,[3,2]]]],21]]],27],[[5,8],27],[[]],[[]],[[]],[[]],[[5,8]],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[5,11],[5,15],[8,5],[8,5],[[],5],0,0,0,0,0,0,0,0,[[[39,[[0,[2,3,9]],[0,[4,22]]]],[39,[[0,[2,3,9]],4]]]],[[[39,[[0,[2,3,9]],[0,[4,22]]]],[39,[[0,[2,3,9]],4]]]],[[[39,[[0,[2,3,9]],[0,[4,22]]]],[39,[[0,[2,3,9]],4]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[39,8],[39],[[[39,[9,9]]],[[39,[9,9]]]],[40,40],[41,41],[42,42],[43,43],[44,44],[[[39,[9,9]],[39,[9,9]]]],[[]],[[]],[[]],[[]],[[]],[[]],[45,13],[40,13],[46,13],[[[39,[[0,[3,2]],4]],[0,[3,[20,[[0,[3,2]]]],21]]],1],[45,8],[40,8],[46,8],[[],[[39,[22]]]],[[[39,[[0,[3,2]],4]],[39,[[0,[3,2]],4]]],[[41,[[0,[3,2]],4]]]],[[39,[23,[8]]],46],[[[39,[[0,[3,2]],4]],[39,[[0,[3,2]],4]]],1],[[],1],[[],1],[[[39,[[0,[3,2]],4]],26]],[[[39,[[0,[3,2,25]],4]],26]],[39,27],[[[39,[28]],30],31],[[[45,[28]],30],31],[[[40,[28]],30],31],[[[46,[28]],30],31],[[[41,[[0,[28,2,3]],4]],30],31],[[[42,[[0,[28,2,3]],4]],30],31],[[[43,[[0,[28,2,3]],4,4]],30],31],[[[44,[[0,[28,2,3]],4]],30],31],[[[43,[[0,[2,3]],4,4]],35]],[[[44,[[0,[2,3]],4]],35]],[[[33,[[0,[2,3]]]]],[[39,[[0,[2,3]],34]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[26,[[39,[[0,[3,2]],[0,[4,22]]]]]],[[[39,[[0,[3,2]],4]],[0,[3,[20,[[0,[3,2]]]],21]]],[[27,[[0,[3,2]]]]]],[[[39,[[0,[3,2]],4]],[0,[3,[20,[[0,[3,2]]]],21]]],27],[[39,8],27],[[[39,[[0,[3,2]],4]],[0,[3,[20,[[0,[3,2]]]],21]]],[[27,[8]]]],[39],[[39,8]],[[[39,[[0,[3,2]],4]],[0,[3,2]]],1],[[[39,[[0,[3,2]],4]],[0,[3,2]]]],[[[39,[[0,[3,2]],4]],[39,[[0,[3,2]],4]]],[[42,[[0,[3,2]],4]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[39],[39],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[39,[[0,[2,3]],4]],[39,[[0,[2,3]],4]]],1],[39,1],[[[39,[[0,[2,3]],4]],[39,[[0,[2,3]],4]]],1],[[[39,[[0,[2,3]],4]],[39,[[0,[2,3]],4]]],1],[39,40],[39,27],[45,27],[40,27],[46,27],[39,8],[45,8],[40,8],[46,8],[[39,8,8]],[[],39],[45,27],[40,27],[46,27],[[[41,[[0,[2,3]],4]]],27],[[[42,[[0,[2,3]],4]]],27],[[[43,[[0,[2,3]],4,4]]],27],[[[44,[[0,[2,3]],4]]],27],[45,27],[40,27],[46,27],[[[41,[[0,[2,3]],4]]],27],[[[42,[[0,[2,3]],4]]],27],[[[43,[[0,[2,3]],4,4]]],27],[[[44,[[0,[2,3]],4]]],27],[[45,8],27],[[40,8],27],[[46,8],27],[[45,8],27],[[40,8],27],[[46,8],27],[[[39,[[0,[3,2]],4]]],[[27,[[0,[3,2]]]]]],[[[39,[[0,[3,2]],4]],[0,[3,[20,[[0,[3,2]]]],21]]],1],[[[39,[[0,[3,2]],4]],[0,[3,2]]],[[27,[[0,[3,2]]]]]],[[[39,[[0,[3,2]],4]],[0,[3,2]]]],[[[39,[[0,[3,2]],4]],8]],[[[39,[[0,[3,2]],4]],35]],[[[39,[[0,[3,2]],4]]]],[[[43,[[0,[2,3]],4,4]],35]],[[[44,[[0,[2,3]],4]],35]],[[[39,[[0,[3,2]],4]],[0,[3,[20,[[0,[3,2]]]],21]]],1],[[[39,[[0,[3,2]],4]],[0,[3,[20,[[0,[3,2]]]],21]]],27],[[39,8],27],[[[39,[[0,[3,2]],4]],[0,[3,[20,[[0,[3,2]]]],21]]],[[27,[[0,[3,2]]]]]],[[[39,[[0,[3,2]],4]],8]],[[[39,[[0,[3,2]],4]]]],[45],[40],[46],[[[41,[[0,[2,3]],4]]]],[[[42,[[0,[2,3]],4]]]],[[[43,[[0,[2,3]],4,4]]]],[[[44,[[0,[2,3]],4]]]],[[[39,[36,[0,[3,2]],4]]]],[[[39,[[0,[3,2]],4]],35]],[[[39,[36,[0,[3,2]],4]]]],[[[39,[[0,[3,2]],4]],35]],[[[39,[[0,[3,2]],4]],35],[[45,[[0,[3,2]]]]]],[[[39,[[0,[3,2]],4]],35],[[45,[[0,[3,2]]]]]],[[[39,[9]],8],[[39,[9]]]],[[[39,[[0,[2,3,9]],[0,[4,22]]]],[39,[[0,[2,3,9]],4]]]],[[39,8,8]],[[[39,[[0,[3,2]],4]],[0,[3,[20,[[0,[3,2]]]],21]]],1],[[[39,[[0,[3,2]],4]],[0,[3,[20,[[0,[3,2]]]],21]]],27],[[39,8],27],[[[39,[[0,[3,2]],4]],[0,[3,[20,[[0,[3,2]]]],21]]],[[27,[[0,[3,2]]]]]],[[[39,[[0,[3,2]],4]],[39,[[0,[3,2]],4]]],[[43,[[0,[3,2]],4,4]]]],[[[39,[[0,[3,2]],4]],[0,[3,[20,[[0,[3,2]]]],21]]],[[27,[[0,[3,2]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[39,8]],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[[39,[[0,[3,2]],4]],[39,[[0,[3,2]],4]]],[[44,[[0,[3,2]],4]]]],[8,39],[8,39],[[],39]],"c":[],"p":[[15,"bool"],[8,"Eq"],[8,"Hash"],[8,"BuildHasher"],[3,"IndexMap"],[4,"Entry"],[8,"FnOnce"],[15,"usize"],[8,"Clone"],[3,"Keys"],[3,"Values"],[3,"Iter"],[8,"FromIterator"],[3,"IntoKeys"],[3,"ValuesMut"],[3,"IntoValues"],[3,"IterMut"],[3,"IntoIter"],[3,"Drain"],[8,"Equivalent"],[8,"Sized"],[8,"Default"],[8,"RangeBounds"],[8,"PartialEq"],[8,"Copy"],[8,"IntoIterator"],[4,"Option"],[8,"Debug"],[3,"OccupiedEntry"],[3,"Formatter"],[6,"Result"],[3,"VacantEntry"],[15,"array"],[3,"RandomState"],[8,"FnMut"],[8,"Ord"],[4,"Result"],[3,"TypeId"],[3,"IndexSet"],[3,"Iter"],[3,"Difference"],[3,"Intersection"],[3,"SymmetricDifference"],[3,"Union"],[3,"IntoIter"],[3,"Drain"],[8,"MutableKeys"]]},\
"instant":{"doc":"","t":"DGSSSSSGSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLL","n":["Duration","Instant","MAX","MICROSECOND","MILLISECOND","NANOSECOND","SECOND","SystemTime","ZERO","add","add_assign","as_micros","as_millis","as_nanos","as_secs","as_secs_f32","as_secs_f64","borrow","borrow_mut","checked_add","checked_div","checked_mul","checked_sub","clone","clone_into","cmp","default","div","div_assign","div_duration_f32","div_duration_f64","div_f32","div_f64","eq","equivalent","fmt","from","from_micros","from_millis","from_nanos","from_secs","from_secs_f32","from_secs_f64","hash","into","is_zero","mul","mul_assign","mul_f32","mul_f64","new","now","partial_cmp","saturating_add","saturating_mul","saturating_sub","sub","sub_assign","subsec_micros","subsec_millis","subsec_nanos","sum","sum","to_owned","try_from","try_from_secs_f32","try_from_secs_f64","try_into","type_id"],"q":[[0,"instant"]],"d":["A <code>Duration</code> type to represent a span of time, typically …","","The maximum duration.","The duration of one microsecond.","The duration of one millisecond.","The duration of one nanosecond.","The duration of one second.","","A duration of zero time.","","","Returns the total number of whole microseconds contained …","Returns the total number of whole milliseconds contained …","Returns the total number of nanoseconds contained by this …","Returns the number of <em>whole</em> seconds contained by this …","Returns the number of seconds contained by this <code>Duration</code> …","Returns the number of seconds contained by this <code>Duration</code> …","","","Checked <code>Duration</code> addition. Computes <code>self + other</code>, …","Checked <code>Duration</code> division. Computes <code>self / other</code>, …","Checked <code>Duration</code> multiplication. Computes <code>self * other</code>, …","Checked <code>Duration</code> subtraction. Computes <code>self - other</code>, …","","","","","","","Divide <code>Duration</code> by <code>Duration</code> and return <code>f32</code>.","Divide <code>Duration</code> by <code>Duration</code> and return <code>f64</code>.","Divide <code>Duration</code> by <code>f32</code>.","Divide <code>Duration</code> by <code>f64</code>.","","","","Returns the argument unchanged.","Creates a new <code>Duration</code> from the specified number of …","Creates a new <code>Duration</code> from the specified number of …","Creates a new <code>Duration</code> from the specified number of …","Creates a new <code>Duration</code> from the specified number of whole …","Creates a new <code>Duration</code> from the specified number of …","Creates a new <code>Duration</code> from the specified number of …","","Calls <code>U::from(self)</code>.","Returns true if this <code>Duration</code> spans no time.","","","Multiplies <code>Duration</code> by <code>f32</code>.","Multiplies <code>Duration</code> by <code>f64</code>.","Creates a new <code>Duration</code> from the specified number of whole …","The current time, expressed in milliseconds since the Unix …","","Saturating <code>Duration</code> addition. Computes <code>self + other</code>, …","Saturating <code>Duration</code> multiplication. Computes <code>self * other</code>, …","Saturating <code>Duration</code> subtraction. Computes <code>self - other</code>, …","","","Returns the fractional part of this <code>Duration</code>, in whole …","Returns the fractional part of this <code>Duration</code>, in whole …","Returns the fractional part of this <code>Duration</code>, in …","","","","","The checked version of <code>from_secs_f32</code>.","The checked version of <code>from_secs_f64</code>.","",""],"i":[0,0,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],"f":[0,0,0,0,0,0,0,0,0,[[1,1],1],[[1,1]],[1,2],[1,2],[1,2],[1,3],[1,4],[1,5],[[]],[[]],[[1,1],[[6,[1]]]],[[1,7],[[6,[1]]]],[[1,7],[[6,[1]]]],[[1,1],[[6,[1]]]],[1,1],[[]],[[1,1],8],[[],1],[[1,7],1],[[1,7]],[[1,1],4],[[1,1],5],[[1,4],1],[[1,5],1],[[1,1],9],[[],9],[[1,10],[[12,[11]]]],[[]],[3,1],[3,1],[3,1],[3,1],[4,1],[5,1],[[1,13]],[[]],[1,9],[[1,7],1],[[1,7]],[[1,4],1],[[1,5],1],[[3,7],1],[[],5],[[1,1],[[6,[8]]]],[[1,1],1],[[1,7],1],[[1,1],1],[[1,1],1],[[1,1]],[1,7],[1,7],[1,7],[14,1],[14,1],[[]],[[],12],[4,[[12,[1,15]]]],[5,[[12,[1,15]]]],[[],12],[[],16]],"c":[],"p":[[3,"Duration"],[15,"u128"],[15,"u64"],[15,"f32"],[15,"f64"],[4,"Option"],[15,"u32"],[4,"Ordering"],[15,"bool"],[3,"Formatter"],[3,"Error"],[4,"Result"],[8,"Hasher"],[8,"Iterator"],[3,"TryFromFloatSecsError"],[3,"TypeId"]]},\
"lazy_static":{"doc":"A macro for declaring lazily evaluated statics.","t":"IFO","n":["LazyStatic","initialize","lazy_static"],"q":[[0,"lazy_static"]],"d":["Support trait for enabling a few common operation on lazy …","Takes a shared reference to a lazy static and initializes …",""],"i":[0,0,0],"f":[0,[1],0],"c":[],"p":[[8,"LazyStatic"]]},\
"libc":{"doc":"libc - Raw FFI bindings to platforms’ system libraries","t":"","n":["ABDAY_1","ABDAY_2","ABDAY_3","ABDAY_4","ABDAY_5","ABDAY_6","ABDAY_7","ABMON_1","ABMON_10","ABMON_11","ABMON_12","ABMON_2","ABMON_3","ABMON_4","ABMON_5","ABMON_6","ABMON_7","ABMON_8","ABMON_9","ABS_CNT","ABS_MAX","ACCOUNTING","ADDR_COMPAT_LAYOUT","ADDR_LIMIT_32BIT","ADDR_LIMIT_3GB","ADDR_NO_RANDOMIZE","ADFS_SUPER_MAGIC","ADJ_ESTERROR","ADJ_FREQUENCY","ADJ_MAXERROR","ADJ_MICRO","ADJ_NANO","ADJ_OFFSET","ADJ_OFFSET_SINGLESHOT","ADJ_OFFSET_SS_READ","ADJ_SETOFFSET","ADJ_STATUS","ADJ_TAI","ADJ_TICK","ADJ_TIMECONST","AFFS_SUPER_MAGIC","AFS_SUPER_MAGIC","AF_ALG","AF_APPLETALK","AF_ASH","AF_ATMPVC","AF_ATMSVC","AF_AX25","AF_BLUETOOTH","AF_BRIDGE","AF_CAIF","AF_CAN","AF_DECnet","AF_ECONET","AF_IB","AF_IEEE802154","AF_INET","AF_INET6","AF_IPX","AF_IRDA","AF_ISDN","AF_IUCV","AF_KEY","AF_LLC","AF_LOCAL","AF_MPLS","AF_NETBEUI","AF_NETLINK","AF_NETROM","AF_NFC","AF_PACKET","AF_PHONET","AF_PPPOX","AF_RDS","AF_ROSE","AF_ROUTE","AF_RXRPC","AF_SECURITY","AF_SNA","AF_TIPC","AF_UNIX","AF_UNSPEC","AF_VSOCK","AF_WANPIPE","AF_X25","AF_XDP","AIO_ALLDONE","AIO_CANCELED","AIO_NOTCANCELED","AI_ADDRCONFIG","AI_ALL","AI_CANONNAME","AI_NUMERICHOST","AI_NUMERICSERV","AI_PASSIVE","AI_V4MAPPED","ALG_OP_DECRYPT","ALG_OP_ENCRYPT","ALG_SET_AEAD_ASSOCLEN","ALG_SET_AEAD_AUTHSIZE","ALG_SET_IV","ALG_SET_KEY","ALG_SET_OP","ALT_DIGITS","AM_STR","ARPD_FLUSH","ARPD_LOOKUP","ARPD_UPDATE","ARPHRD_ADAPT","ARPHRD_APPLETLK","ARPHRD_ARCNET","ARPHRD_ASH","ARPHRD_ATM","ARPHRD_AX25","ARPHRD_BIF","ARPHRD_CAN","ARPHRD_CHAOS","ARPHRD_CISCO","ARPHRD_CSLIP","ARPHRD_CSLIP6","ARPHRD_DDCMP","ARPHRD_DLCI","ARPHRD_ECONET","ARPHRD_EETHER","ARPHRD_ETHER","ARPHRD_EUI64","ARPHRD_FCAL","ARPHRD_FCFABRIC","ARPHRD_FCPL","ARPHRD_FCPP","ARPHRD_FDDI","ARPHRD_FRAD","ARPHRD_HDLC","ARPHRD_HIPPI","ARPHRD_HWX25","ARPHRD_IEEE1394","ARPHRD_IEEE802","ARPHRD_IEEE80211","ARPHRD_IEEE80211_PRISM","ARPHRD_IEEE80211_RADIOTAP","ARPHRD_IEEE802154","ARPHRD_IEEE802_TR","ARPHRD_INFINIBAND","ARPHRD_IPDDP","ARPHRD_IPGRE","ARPHRD_IRDA","ARPHRD_LAPB","ARPHRD_LOCALTLK","ARPHRD_LOOPBACK","ARPHRD_METRICOM","ARPHRD_NETROM","ARPHRD_NONE","ARPHRD_PIMREG","ARPHRD_PPP","ARPHRD_PRONET","ARPHRD_RAWHDLC","ARPHRD_ROSE","ARPHRD_RSRVD","ARPHRD_SIT","ARPHRD_SKIP","ARPHRD_SLIP","ARPHRD_SLIP6","ARPHRD_TUNNEL","ARPHRD_TUNNEL6","ARPHRD_VOID","ARPHRD_X25","ARPOP_InREPLY","ARPOP_InREQUEST","ARPOP_NAK","ARPOP_REPLY","ARPOP_REQUEST","ARPOP_RREPLY","ARPOP_RREQUEST","ATF_COM","ATF_DONTPUB","ATF_MAGIC","ATF_NETMASK","ATF_PERM","ATF_PUBL","ATF_USETRAILERS","AT_BASE","AT_BASE_PLATFORM","AT_CLKTCK","AT_EACCESS","AT_EGID","AT_EMPTY_PATH","AT_ENTRY","AT_EUID","AT_EXECFD","AT_EXECFN","AT_FDCWD","AT_FLAGS","AT_GID","AT_HWCAP","AT_HWCAP2","AT_IGNORE","AT_NOTELF","AT_NO_AUTOMOUNT","AT_NULL","AT_PAGESZ","AT_PHDR","AT_PHENT","AT_PHNUM","AT_PLATFORM","AT_RANDOM","AT_RECURSIVE","AT_REMOVEDIR","AT_SECURE","AT_STATX_DONT_SYNC","AT_STATX_FORCE_SYNC","AT_STATX_SYNC_AS_STAT","AT_STATX_SYNC_TYPE","AT_SYMLINK_FOLLOW","AT_SYMLINK_NOFOLLOW","AT_SYSINFO_EHDR","AT_UID","AUTOFS_SUPER_MAGIC","B0","B1000000","B110","B115200","B1152000","B1200","B134","B150","B1500000","B1800","B19200","B200","B2000000","B230400","B2400","B2500000","B300","B3000000","B3500000","B38400","B4000000","B460800","B4800","B50","B500000","B57600","B576000","B600","B75","B921600","B9600","BINDERFS_SUPER_MAGIC","BLKIOMIN","BLKIOOPT","BLKPBSZGET","BLKSSZGET","BOOT_TIME","BOTHER","BPF_ABS","BPF_ADD","BPF_ALU","BPF_AND","BPF_B","BPF_DIV","BPF_FS_MAGIC","BPF_H","BPF_IMM","BPF_IND","BPF_JA","BPF_JEQ","BPF_JGE","BPF_JGT","BPF_JMP","BPF_JSET","BPF_JUMP","BPF_K","BPF_LD","BPF_LDX","BPF_LEN","BPF_LL_OFF","BPF_LSH","BPF_MAXINSNS","BPF_MEM","BPF_MEMWORDS","BPF_MISC","BPF_MISCOP","BPF_MOD","BPF_MSH","BPF_MUL","BPF_NEG","BPF_NET_OFF","BPF_OR","BPF_RET","BPF_RSH","BPF_RVAL","BPF_ST","BPF_STMT","BPF_STX","BPF_SUB","BPF_W","BPF_X","BPF_XOR","BRKINT","BS0","BS1","BSDLY","BTRFS_SUPER_MAGIC","BUFSIZ","BUS_ADRALN","BUS_ADRERR","BUS_MCEERR_AO","BUS_MCEERR_AR","BUS_OBJERR","CANFD_BRS","CANFD_ESI","CANFD_MAX_DLC","CANFD_MAX_DLEN","CANFD_MTU","CANXL_HDR_SIZE","CANXL_MAX_DLC","CANXL_MAX_DLC_MASK","CANXL_MAX_DLEN","CANXL_MAX_MTU","CANXL_MIN_DLC","CANXL_MIN_DLEN","CANXL_MIN_MTU","CANXL_MTU","CANXL_PRIO_BITS","CANXL_PRIO_MASK","CANXL_SEC","CANXL_XLF","CAN_BCM","CAN_EFF_FLAG","CAN_EFF_ID_BITS","CAN_EFF_MASK","CAN_ERR_FLAG","CAN_ERR_MASK","CAN_INV_FILTER","CAN_ISOTP","CAN_J1939","CAN_MAX_DLC","CAN_MAX_DLEN","CAN_MCNET","CAN_MTU","CAN_NPROTO","CAN_RAW","CAN_RAW_ERR_FILTER","CAN_RAW_FD_FRAMES","CAN_RAW_FILTER","CAN_RAW_FILTER_MAX","CAN_RAW_JOIN_FILTERS","CAN_RAW_LOOPBACK","CAN_RAW_RECV_OWN_MSGS","CAN_RAW_XL_FRAMES","CAN_RTR_FLAG","CAN_SFF_ID_BITS","CAN_SFF_MASK","CAN_TP16","CAN_TP20","CBAUD","CBAUDEX","CGROUP2_SUPER_MAGIC","CGROUP_SUPER_MAGIC","CIBAUD","CLD_CONTINUED","CLD_DUMPED","CLD_EXITED","CLD_KILLED","CLD_STOPPED","CLD_TRAPPED","CLOCAL","CLOCK_BOOTTIME","CLOCK_BOOTTIME_ALARM","CLOCK_MONOTONIC","CLOCK_MONOTONIC_COARSE","CLOCK_MONOTONIC_RAW","CLOCK_PROCESS_CPUTIME_ID","CLOCK_REALTIME","CLOCK_REALTIME_ALARM","CLOCK_REALTIME_COARSE","CLOCK_TAI","CLOCK_THREAD_CPUTIME_ID","CLONE_CHILD_CLEARTID","CLONE_CHILD_SETTID","CLONE_DETACHED","CLONE_FILES","CLONE_FS","CLONE_IO","CLONE_NEWCGROUP","CLONE_NEWIPC","CLONE_NEWNET","CLONE_NEWNS","CLONE_NEWPID","CLONE_NEWUSER","CLONE_NEWUTS","CLONE_PARENT","CLONE_PARENT_SETTID","CLONE_PIDFD","CLONE_PTRACE","CLONE_SETTLS","CLONE_SIGHAND","CLONE_SYSVSEM","CLONE_THREAD","CLONE_UNTRACED","CLONE_VFORK","CLONE_VM","CLOSE_RANGE_CLOEXEC","CLOSE_RANGE_UNSHARE","CMSG_DATA","CMSG_FIRSTHDR","CMSG_LEN","CMSG_NXTHDR","CMSG_SPACE","CMSPAR","CODA_SUPER_MAGIC","CODESET","CPU_ALLOC_SIZE","CPU_CLR","CPU_COUNT","CPU_COUNT_S","CPU_EQUAL","CPU_ISSET","CPU_SET","CPU_SETSIZE","CPU_ZERO","CR0","CR1","CR2","CR3","CRAMFS_MAGIC","CRDLY","CREAD","CRNCYSTR","CRTSCTS","CS","CS5","CS6","CS7","CS8","CSIZE","CSTOPB","CTRL_ATTR_FAMILY_ID","CTRL_ATTR_FAMILY_NAME","CTRL_ATTR_HDRSIZE","CTRL_ATTR_MAXATTR","CTRL_ATTR_MCAST_GROUPS","CTRL_ATTR_MCAST_GRP_ID","CTRL_ATTR_MCAST_GRP_NAME","CTRL_ATTR_MCAST_GRP_UNSPEC","CTRL_ATTR_OPS","CTRL_ATTR_OP_FLAGS","CTRL_ATTR_OP_ID","CTRL_ATTR_OP_UNSPEC","CTRL_ATTR_UNSPEC","CTRL_ATTR_VERSION","CTRL_CMD_DELFAMILY","CTRL_CMD_DELMCAST_GRP","CTRL_CMD_DELOPS","CTRL_CMD_GETFAMILY","CTRL_CMD_GETMCAST_GRP","CTRL_CMD_GETOPS","CTRL_CMD_NEWFAMILY","CTRL_CMD_NEWMCAST_GRP","CTRL_CMD_NEWOPS","CTRL_CMD_UNSPEC","DAY_1","DAY_2","DAY_3","DAY_4","DAY_5","DAY_6","DAY_7","DCCP_SERVICE_LIST_MAX_LEN","DCCP_SOCKOPT_AVAILABLE_CCIDS","DCCP_SOCKOPT_CCID","DCCP_SOCKOPT_CCID_RX_INFO","DCCP_SOCKOPT_CCID_TX_INFO","DCCP_SOCKOPT_CHANGE_L","DCCP_SOCKOPT_CHANGE_R","DCCP_SOCKOPT_GET_CUR_MPS","DCCP_SOCKOPT_PACKET_SIZE","DCCP_SOCKOPT_QPOLICY_ID","DCCP_SOCKOPT_QPOLICY_TXQLEN","DCCP_SOCKOPT_RECV_CSCOV","DCCP_SOCKOPT_RX_CCID","DCCP_SOCKOPT_SEND_CSCOV","DCCP_SOCKOPT_SERVER_TIMEWAIT","DCCP_SOCKOPT_SERVICE","DCCP_SOCKOPT_TX_CCID","DEAD_PROCESS","DEBUGFS_MAGIC","DEVPTS_SUPER_MAGIC","DIR","DS","DT_BLK","DT_CHR","DT_DIR","DT_FIFO","DT_LNK","DT_REG","DT_SOCK","DT_UNKNOWN","D_FMT","D_T_FMT","Dl_info","E2BIG","EACCES","EADDRINUSE","EADDRNOTAVAIL","EADV","EAFNOSUPPORT","EAGAIN","EAI_AGAIN","EAI_BADFLAGS","EAI_FAIL","EAI_FAMILY","EAI_MEMORY","EAI_NODATA","EAI_NONAME","EAI_OVERFLOW","EAI_SERVICE","EAI_SOCKTYPE","EAI_SYSTEM","EALREADY","EBADE","EBADF","EBADFD","EBADMSG","EBADR","EBADRQC","EBADSLT","EBFONT","EBUSY","ECANCELED","ECHILD","ECHO","ECHOCTL","ECHOE","ECHOK","ECHOKE","ECHONL","ECHOPRT","ECHRNG","ECOMM","ECONNABORTED","ECONNREFUSED","ECONNRESET","ECRYPTFS_SUPER_MAGIC","EDEADLK","EDEADLOCK","EDESTADDRREQ","EDOM","EDOTDOT","EDQUOT","EEXIST","EFAULT","EFBIG","EFD_CLOEXEC","EFD_NONBLOCK","EFD_SEMAPHORE","EFLAGS","EFS_SUPER_MAGIC","EHOSTDOWN","EHOSTUNREACH","EHWPOISON","EIDRM","EILSEQ","EINPROGRESS","EINTR","EINVAL","EIO","EISCONN","EISDIR","EISNAM","EI_ABIVERSION","EI_CLASS","EI_DATA","EI_MAG0","EI_MAG1","EI_MAG2","EI_MAG3","EI_NIDENT","EI_OSABI","EI_PAD","EI_VERSION","EKEYEXPIRED","EKEYREJECTED","EKEYREVOKED","EL2HLT","EL2NSYNC","EL3HLT","EL3RST","ELFCLASS32","ELFCLASS64","ELFCLASSNONE","ELFCLASSNUM","ELFDATA2LSB","ELFDATA2MSB","ELFDATANONE","ELFDATANUM","ELFMAG0","ELFMAG1","ELFMAG2","ELFMAG3","ELFOSABI_AIX","ELFOSABI_ARM","ELFOSABI_ARM_AEABI","ELFOSABI_FREEBSD","ELFOSABI_GNU","ELFOSABI_HPUX","ELFOSABI_IRIX","ELFOSABI_LINUX","ELFOSABI_MODESTO","ELFOSABI_NETBSD","ELFOSABI_NONE","ELFOSABI_OPENBSD","ELFOSABI_SOLARIS","ELFOSABI_STANDALONE","ELFOSABI_SYSV","ELFOSABI_TRU64","ELIBACC","ELIBBAD","ELIBEXEC","ELIBMAX","ELIBSCN","ELNRNG","ELOOP","EMEDIUMTYPE","EMFILE","EMLINK","EMPTY","EMSGSIZE","EMULTIHOP","EM_386","EM_68HC05","EM_68HC08","EM_68HC11","EM_68HC12","EM_68HC16","EM_68K","EM_860","EM_88K","EM_960","EM_AARCH64","EM_ALPHA","EM_ARC","EM_ARC_A5","EM_ARM","EM_AVR","EM_COLDFIRE","EM_CRIS","EM_D10V","EM_D30V","EM_FAKE_ALPHA","EM_FIREPATH","EM_FR20","EM_FR30","EM_FX66","EM_H8S","EM_H8_300","EM_H8_300H","EM_H8_500","EM_HUANY","EM_IA_64","EM_JAVELIN","EM_M32","EM_M32R","EM_ME16","EM_MIPS","EM_MIPS_RS3_LE","EM_MIPS_X","EM_MMA","EM_MMIX","EM_MN10200","EM_MN10300","EM_NCPU","EM_NDR1","EM_NONE","EM_OPENRISC","EM_PARISC","EM_PCP","EM_PDSP","EM_PJ","EM_PPC","EM_PPC64","EM_PRISM","EM_RCE","EM_RH32","EM_S370","EM_S390","EM_SH","EM_SPARC","EM_SPARC32PLUS","EM_SPARCV9","EM_ST100","EM_ST19","EM_ST7","EM_ST9PLUS","EM_STARCORE","EM_SVX","EM_TILEGX","EM_TILEPRO","EM_TINYJ","EM_TRICORE","EM_V800","EM_V850","EM_VAX","EM_VPP500","EM_X86_64","EM_XTENSA","EM_ZSP","ENAMETOOLONG","ENAVAIL","ENETDOWN","ENETRESET","ENETUNREACH","ENFILE","ENOANO","ENOATTR","ENOBUFS","ENOCSI","ENODATA","ENODEV","ENOENT","ENOEXEC","ENOKEY","ENOLCK","ENOLINK","ENOMEDIUM","ENOMEM","ENOMSG","ENONET","ENOPKG","ENOPROTOOPT","ENOSPC","ENOSR","ENOSTR","ENOSYS","ENOTBLK","ENOTCONN","ENOTDIR","ENOTEMPTY","ENOTNAM","ENOTRECOVERABLE","ENOTSOCK","ENOTSUP","ENOTTY","ENOTUNIQ","ENXIO","EOF","EOPNOTSUPP","EOVERFLOW","EOWNERDEAD","EPERM","EPFNOSUPPORT","EPIPE","EPOLLERR","EPOLLET","EPOLLEXCLUSIVE","EPOLLHUP","EPOLLIN","EPOLLMSG","EPOLLONESHOT","EPOLLOUT","EPOLLPRI","EPOLLRDBAND","EPOLLRDHUP","EPOLLRDNORM","EPOLLWAKEUP","EPOLLWRBAND","EPOLLWRNORM","EPOLL_CLOEXEC","EPOLL_CTL_ADD","EPOLL_CTL_DEL","EPOLL_CTL_MOD","EPROTO","EPROTONOSUPPORT","EPROTOTYPE","ERA","ERANGE","ERA_D_FMT","ERA_D_T_FMT","ERA_T_FMT","EREMCHG","EREMOTE","EREMOTEIO","ERESTART","ERFKILL","EROFS","ES","ESHUTDOWN","ESOCKTNOSUPPORT","ESPIPE","ESRCH","ESRMNT","ESTALE","ESTRPIPE","ETH_ALEN","ETH_DATA_LEN","ETH_FCS_LEN","ETH_FRAME_LEN","ETH_HLEN","ETH_P_1588","ETH_P_8021AD","ETH_P_8021AH","ETH_P_8021Q","ETH_P_80221","ETH_P_802_2","ETH_P_802_3","ETH_P_802_3_MIN","ETH_P_802_EX1","ETH_P_AARP","ETH_P_AF_IUCV","ETH_P_ALL","ETH_P_AOE","ETH_P_ARCNET","ETH_P_ARP","ETH_P_ATALK","ETH_P_ATMFATE","ETH_P_ATMMPOA","ETH_P_AX25","ETH_P_BATMAN","ETH_P_BPQ","ETH_P_CAIF","ETH_P_CANFD","ETH_P_CONTROL","ETH_P_CUST","ETH_P_DDCMP","ETH_P_DEC","ETH_P_DIAG","ETH_P_DNA_DL","ETH_P_DNA_RC","ETH_P_DNA_RT","ETH_P_DSA","ETH_P_ECONET","ETH_P_EDSA","ETH_P_FCOE","ETH_P_FIP","ETH_P_HDLC","ETH_P_IEEE802154","ETH_P_IEEEPUP","ETH_P_IEEEPUPAT","ETH_P_IP","ETH_P_IPV6","ETH_P_IPX","ETH_P_IRDA","ETH_P_LAT","ETH_P_LINK_CTL","ETH_P_LOCALTALK","ETH_P_LOOP","ETH_P_LOOPBACK","ETH_P_MACSEC","ETH_P_MOBITEX","ETH_P_MPLS_MC","ETH_P_MPLS_UC","ETH_P_MVRP","ETH_P_PAE","ETH_P_PAUSE","ETH_P_PHONET","ETH_P_PPPTALK","ETH_P_PPP_DISC","ETH_P_PPP_MP","ETH_P_PPP_SES","ETH_P_PRP","ETH_P_PUP","ETH_P_PUPAT","ETH_P_QINQ1","ETH_P_QINQ2","ETH_P_QINQ3","ETH_P_RARP","ETH_P_SCA","ETH_P_SLOW","ETH_P_SNAP","ETH_P_TDLS","ETH_P_TEB","ETH_P_TIPC","ETH_P_TRAILER","ETH_P_TR_802_2","ETH_P_WAN_PPP","ETH_P_WCCP","ETH_P_X25","ETH_ZLEN","ETIME","ETIMEDOUT","ETOOMANYREFS","ETXTBSY","ET_CORE","ET_DYN","ET_EXEC","ET_HIOS","ET_HIPROC","ET_LOOS","ET_LOPROC","ET_NONE","ET_NUM","ET_REL","EUCLEAN","EUNATCH","EUSERS","EV_CNT","EV_CURRENT","EV_MAX","EV_NONE","EV_NUM","EWOULDBLOCK","EXDEV","EXFULL","EXIT_FAILURE","EXIT_SUCCESS","EXT2_SUPER_MAGIC","EXT3_SUPER_MAGIC","EXT4_SUPER_MAGIC","EXTA","EXTB","EXTPROC","Elf32_Addr","Elf32_Chdr","Elf32_Ehdr","Elf32_Half","Elf32_Off","Elf32_Phdr","Elf32_Section","Elf32_Shdr","Elf32_Sym","Elf32_Word","Elf64_Addr","Elf64_Chdr","Elf64_Ehdr","Elf64_Half","Elf64_Off","Elf64_Phdr","Elf64_Section","Elf64_Shdr","Elf64_Sxword","Elf64_Sym","Elf64_Word","Elf64_Xword","F2FS_SUPER_MAGIC","FALLOC_FL_COLLAPSE_RANGE","FALLOC_FL_INSERT_RANGE","FALLOC_FL_KEEP_SIZE","FALLOC_FL_PUNCH_HOLE","FALLOC_FL_UNSHARE_RANGE","FALLOC_FL_ZERO_RANGE","FANOTIFY_METADATA_VERSION","FAN_ACCESS","FAN_ACCESS_PERM","FAN_ALLOW","FAN_CLASS_CONTENT","FAN_CLASS_NOTIF","FAN_CLASS_PRE_CONTENT","FAN_CLOEXEC","FAN_CLOSE","FAN_CLOSE_NOWRITE","FAN_CLOSE_WRITE","FAN_DENY","FAN_EVENT_ON_CHILD","FAN_MARK_ADD","FAN_MARK_DONT_FOLLOW","FAN_MARK_FILESYSTEM","FAN_MARK_FLUSH","FAN_MARK_IGNORED_MASK","FAN_MARK_IGNORED_SURV_MODIFY","FAN_MARK_INODE","FAN_MARK_MOUNT","FAN_MARK_ONLYDIR","FAN_MARK_REMOVE","FAN_MODIFY","FAN_NOFD","FAN_NONBLOCK","FAN_ONDIR","FAN_OPEN","FAN_OPEN_PERM","FAN_Q_OVERFLOW","FAN_UNLIMITED_MARKS","FAN_UNLIMITED_QUEUE","FDPIC_FUNCPTRS","FD_CLOEXEC","FD_CLR","FD_ISSET","FD_SET","FD_SETSIZE","FD_ZERO","FF0","FF1","FFDLY","FF_CNT","FF_MAX","FICLONE","FICLONERANGE","FILE","FILENAME_MAX","FIOASYNC","FIOCLEX","FIONBIO","FIONCLEX","FIONREAD","FIOQSIZE","FLUSHO","FOPEN_MAX","FS","FS_BASE","FUSE_SUPER_MAGIC","FUTEXFS_SUPER_MAGIC","FUTEX_BITSET_MATCH_ANY","FUTEX_CLOCK_REALTIME","FUTEX_CMD_MASK","FUTEX_CMP_REQUEUE","FUTEX_CMP_REQUEUE_PI","FUTEX_FD","FUTEX_LOCK_PI","FUTEX_LOCK_PI2","FUTEX_OP","FUTEX_OP_ADD","FUTEX_OP_ANDN","FUTEX_OP_CMP_EQ","FUTEX_OP_CMP_GE","FUTEX_OP_CMP_GT","FUTEX_OP_CMP_LE","FUTEX_OP_CMP_LT","FUTEX_OP_CMP_NE","FUTEX_OP_OPARG_SHIFT","FUTEX_OP_OR","FUTEX_OP_SET","FUTEX_OP_XOR","FUTEX_PRIVATE_FLAG","FUTEX_REQUEUE","FUTEX_TRYLOCK_PI","FUTEX_UNLOCK_PI","FUTEX_WAIT","FUTEX_WAIT_BITSET","FUTEX_WAIT_REQUEUE_PI","FUTEX_WAKE","FUTEX_WAKE_BITSET","FUTEX_WAKE_OP","F_ADD_SEALS","F_CANCELLK","F_DUPFD","F_DUPFD_CLOEXEC","F_GETFD","F_GETFL","F_GETLEASE","F_GETLK","F_GETOWN","F_GETPIPE_SZ","F_GET_SEALS","F_LOCK","F_NOTIFY","F_OFD_GETLK","F_OFD_SETLK","F_OFD_SETLKW","F_OK","F_RDLCK","F_SEAL_FUTURE_WRITE","F_SEAL_GROW","F_SEAL_SEAL","F_SEAL_SHRINK","F_SEAL_WRITE","F_SETFD","F_SETFL","F_SETLEASE","F_SETLK","F_SETLKW","F_SETOWN","F_SETPIPE_SZ","F_TEST","F_TLOCK","F_ULOCK","F_UNLCK","F_WRLCK","GENL_ADMIN_PERM","GENL_CMD_CAP_DO","GENL_CMD_CAP_DUMP","GENL_CMD_CAP_HASPOL","GENL_ID_CTRL","GENL_ID_PMCRAID","GENL_ID_VFS_DQUOT","GENL_MAX_ID","GENL_MIN_ID","GENL_NAMSIZ","GENL_UNS_ADMIN_PERM","GLOB_ABORTED","GLOB_APPEND","GLOB_DOOFFS","GLOB_ERR","GLOB_MARK","GLOB_NOCHECK","GLOB_NOESCAPE","GLOB_NOMATCH","GLOB_NOSORT","GLOB_NOSPACE","GRND_INSECURE","GRND_NONBLOCK","GRND_RANDOM","GRPQUOTA","GS","GS_BASE","HOSTFS_SUPER_MAGIC","HPFS_SUPER_MAGIC","HUGETLBFS_MAGIC","HUGETLB_FLAG_ENCODE_16GB","HUGETLB_FLAG_ENCODE_16MB","HUGETLB_FLAG_ENCODE_1GB","HUGETLB_FLAG_ENCODE_1MB","HUGETLB_FLAG_ENCODE_256MB","HUGETLB_FLAG_ENCODE_2GB","HUGETLB_FLAG_ENCODE_2MB","HUGETLB_FLAG_ENCODE_32MB","HUGETLB_FLAG_ENCODE_512KB","HUGETLB_FLAG_ENCODE_512MB","HUGETLB_FLAG_ENCODE_64KB","HUGETLB_FLAG_ENCODE_8MB","HUGETLB_FLAG_ENCODE_MASK","HUGETLB_FLAG_ENCODE_SHIFT","HUPCL","HWTSTAMP_FILTER_ALL","HWTSTAMP_FILTER_NONE","HWTSTAMP_FILTER_NTP_ALL","HWTSTAMP_FILTER_PTP_V1_L4_DELAY_REQ","HWTSTAMP_FILTER_PTP_V1_L4_EVENT","HWTSTAMP_FILTER_PTP_V1_L4_SYNC","HWTSTAMP_FILTER_PTP_V2_DELAY_REQ","HWTSTAMP_FILTER_PTP_V2_EVENT","HWTSTAMP_FILTER_PTP_V2_L2_DELAY_REQ","HWTSTAMP_FILTER_PTP_V2_L2_EVENT","HWTSTAMP_FILTER_PTP_V2_L2_SYNC","HWTSTAMP_FILTER_PTP_V2_L4_DELAY_REQ","HWTSTAMP_FILTER_PTP_V2_L4_EVENT","HWTSTAMP_FILTER_PTP_V2_L4_SYNC","HWTSTAMP_FILTER_PTP_V2_SYNC","HWTSTAMP_FILTER_SOME","HWTSTAMP_TX_OFF","HWTSTAMP_TX_ON","HWTSTAMP_TX_ONESTEP_P2P","HWTSTAMP_TX_ONESTEP_SYNC","IBSHIFT","ICANON","ICRNL","IEXTEN","IFA_ADDRESS","IFA_ANYCAST","IFA_BROADCAST","IFA_CACHEINFO","IFA_FLAGS","IFA_F_DADFAILED","IFA_F_DEPRECATED","IFA_F_HOMEADDRESS","IFA_F_MANAGETEMPADDR","IFA_F_MCAUTOJOIN","IFA_F_NODAD","IFA_F_NOPREFIXROUTE","IFA_F_OPTIMISTIC","IFA_F_PERMANENT","IFA_F_SECONDARY","IFA_F_STABLE_PRIVACY","IFA_F_TEMPORARY","IFA_F_TENTATIVE","IFA_LABEL","IFA_LOCAL","IFA_MULTICAST","IFA_UNSPEC","IFF_ALLMULTI","IFF_ATTACH_QUEUE","IFF_AUTOMEDIA","IFF_BROADCAST","IFF_DEBUG","IFF_DETACH_QUEUE","IFF_DORMANT","IFF_DYNAMIC","IFF_ECHO","IFF_LOOPBACK","IFF_LOWER_UP","IFF_MASTER","IFF_MULTICAST","IFF_MULTI_QUEUE","IFF_NOARP","IFF_NOFILTER","IFF_NOTRAILERS","IFF_NO_PI","IFF_ONE_QUEUE","IFF_PERSIST","IFF_POINTOPOINT","IFF_PORTSEL","IFF_PROMISC","IFF_RUNNING","IFF_SLAVE","IFF_TAP","IFF_TUN","IFF_TUN_EXCL","IFF_UP","IFF_VNET_HDR","IFLA_ADDRESS","IFLA_AF_SPEC","IFLA_ALLMULTI","IFLA_ALT_IFNAME","IFLA_BROADCAST","IFLA_CARRIER","IFLA_CARRIER_CHANGES","IFLA_CARRIER_DOWN_COUNT","IFLA_CARRIER_UP_COUNT","IFLA_COST","IFLA_EVENT","IFLA_EXT_MASK","IFLA_GROUP","IFLA_GRO_MAX_SIZE","IFLA_GSO_MAX_SEGS","IFLA_GSO_MAX_SIZE","IFLA_IFALIAS","IFLA_IFNAME","IFLA_IF_NETNSID","IFLA_INFO_DATA","IFLA_INFO_KIND","IFLA_INFO_SLAVE_DATA","IFLA_INFO_SLAVE_KIND","IFLA_INFO_UNSPEC","IFLA_INFO_XSTATS","IFLA_LINK","IFLA_LINKINFO","IFLA_LINKMODE","IFLA_LINK_NETNSID","IFLA_MAP","IFLA_MASTER","IFLA_MAX_MTU","IFLA_MIN_MTU","IFLA_MTU","IFLA_NET_NS_FD","IFLA_NET_NS_PID","IFLA_NEW_IFINDEX","IFLA_NEW_NETNSID","IFLA_NUM_RX_QUEUES","IFLA_NUM_TX_QUEUES","IFLA_NUM_VF","IFLA_OPERSTATE","IFLA_PAD","IFLA_PARENT_DEV_BUS_NAME","IFLA_PARENT_DEV_NAME","IFLA_PERM_ADDRESS","IFLA_PHYS_PORT_ID","IFLA_PHYS_PORT_NAME","IFLA_PHYS_SWITCH_ID","IFLA_PORT_SELF","IFLA_PRIORITY","IFLA_PROMISCUITY","IFLA_PROP_LIST","IFLA_PROTINFO","IFLA_PROTO_DOWN","IFLA_PROTO_DOWN_REASON","IFLA_QDISC","IFLA_STATS","IFLA_STATS64","IFLA_TARGET_NETNSID","IFLA_TSO_MAX_SEGS","IFLA_TSO_MAX_SIZE","IFLA_TXQLEN","IFLA_UNSPEC","IFLA_VFINFO_LIST","IFLA_VF_PORTS","IFLA_WEIGHT","IFLA_WIRELESS","IFLA_XDP","IFNAMSIZ","IF_LINK_MODE_DEFAULT","IF_LINK_MODE_DORMANT","IF_LINK_MODE_TESTING","IF_NAMESIZE","IF_OPER_DORMANT","IF_OPER_DOWN","IF_OPER_LOWERLAYERDOWN","IF_OPER_NOTPRESENT","IF_OPER_TESTING","IF_OPER_UNKNOWN","IF_OPER_UP","IGNBRK","IGNCR","IGNPAR","IMAXBEL","INADDR_ANY","INADDR_BROADCAST","INADDR_LOOPBACK","INADDR_NONE","INIT_PROCESS","INLCR","INPCK","INPUT_PROP_CNT","INPUT_PROP_MAX","INT_MAX","INT_MIN","IN_ACCESS","IN_ALL_EVENTS","IN_ATTRIB","IN_CLOEXEC","IN_CLOSE","IN_CLOSE_NOWRITE","IN_CLOSE_WRITE","IN_CREATE","IN_DELETE","IN_DELETE_SELF","IN_DONT_FOLLOW","IN_EXCL_UNLINK","IN_IGNORED","IN_ISDIR","IN_MASK_ADD","IN_MASK_CREATE","IN_MODIFY","IN_MOVE","IN_MOVED_FROM","IN_MOVED_TO","IN_MOVE_SELF","IN_NONBLOCK","IN_ONESHOT","IN_ONLYDIR","IN_OPEN","IN_Q_OVERFLOW","IN_UNMOUNT","IP6T_SO_ORIGINAL_DST","IPC_CREAT","IPC_EXCL","IPC_INFO","IPC_NOWAIT","IPC_PRIVATE","IPC_RMID","IPC_SET","IPC_STAT","IPDEFTTL","IPOPT_CLASS","IPOPT_CLASS_MASK","IPOPT_CONTROL","IPOPT_COPIED","IPOPT_COPY","IPOPT_END","IPOPT_EOL","IPOPT_LSRR","IPOPT_MEASUREMENT","IPOPT_MINOFF","IPOPT_NOOP","IPOPT_NOP","IPOPT_NUMBER","IPOPT_NUMBER_MASK","IPOPT_OFFSET","IPOPT_OLEN","IPOPT_OPTVAL","IPOPT_RA","IPOPT_RESERVED1","IPOPT_RESERVED2","IPOPT_RR","IPOPT_SEC","IPOPT_SID","IPOPT_SSRR","IPOPT_TIMESTAMP","IPOPT_TS","IPOPT_TS_PRESPEC","IPOPT_TS_TSANDADDR","IPOPT_TS_TSONLY","IPPROTO_AH","IPPROTO_BEETPH","IPPROTO_COMP","IPPROTO_DCCP","IPPROTO_DSTOPTS","IPPROTO_EGP","IPPROTO_ENCAP","IPPROTO_ESP","IPPROTO_ETHERNET","IPPROTO_FRAGMENT","IPPROTO_GRE","IPPROTO_HOPOPTS","IPPROTO_ICMP","IPPROTO_ICMPV6","IPPROTO_IDP","IPPROTO_IGMP","IPPROTO_IP","IPPROTO_IPIP","IPPROTO_IPV6","IPPROTO_MAX","IPPROTO_MH","IPPROTO_MPLS","IPPROTO_MPTCP","IPPROTO_MTP","IPPROTO_NONE","IPPROTO_PIM","IPPROTO_PUP","IPPROTO_RAW","IPPROTO_ROUTING","IPPROTO_RSVP","IPPROTO_SCTP","IPPROTO_TCP","IPPROTO_TP","IPPROTO_UDP","IPPROTO_UDPLITE","IPTOS_ECN","IPTOS_ECN_CE","IPTOS_ECN_ECT0","IPTOS_ECN_ECT1","IPTOS_ECN_MASK","IPTOS_ECN_NOT_ECT","IPTOS_LOWDELAY","IPTOS_MINCOST","IPTOS_PREC","IPTOS_PREC_CRITIC_ECP","IPTOS_PREC_FLASH","IPTOS_PREC_FLASHOVERRIDE","IPTOS_PREC_IMMEDIATE","IPTOS_PREC_INTERNETCONTROL","IPTOS_PREC_MASK","IPTOS_PREC_NETCONTROL","IPTOS_PREC_PRIORITY","IPTOS_PREC_ROUTINE","IPTOS_RELIABILITY","IPTOS_THROUGHPUT","IPTOS_TOS","IPTOS_TOS_MASK","IPV6_2292DSTOPTS","IPV6_2292HOPLIMIT","IPV6_2292HOPOPTS","IPV6_2292PKTINFO","IPV6_2292PKTOPTIONS","IPV6_2292RTHDR","IPV6_ADDRFORM","IPV6_ADDR_PREFERENCES","IPV6_ADD_MEMBERSHIP","IPV6_AUTHHDR","IPV6_AUTOFLOWLABEL","IPV6_CHECKSUM","IPV6_DONTFRAG","IPV6_DROP_MEMBERSHIP","IPV6_DSTOPTS","IPV6_FLOWINFO","IPV6_FLOWINFO_FLOWLABEL","IPV6_FLOWINFO_PRIORITY","IPV6_FLOWINFO_SEND","IPV6_FLOWLABEL_MGR","IPV6_FREEBIND","IPV6_HDRINCL","IPV6_HOPLIMIT","IPV6_HOPOPTS","IPV6_IPSEC_POLICY","IPV6_JOIN_ANYCAST","IPV6_LEAVE_ANYCAST","IPV6_MINHOPCOUNT","IPV6_MTU","IPV6_MTU_DISCOVER","IPV6_MULTICAST_ALL","IPV6_MULTICAST_HOPS","IPV6_MULTICAST_IF","IPV6_MULTICAST_LOOP","IPV6_NEXTHOP","IPV6_ORIGDSTADDR","IPV6_PATHMTU","IPV6_PKTINFO","IPV6_PMTUDISC_DO","IPV6_PMTUDISC_DONT","IPV6_PMTUDISC_INTERFACE","IPV6_PMTUDISC_OMIT","IPV6_PMTUDISC_PROBE","IPV6_PMTUDISC_WANT","IPV6_PREFER_SRC_CGA","IPV6_PREFER_SRC_COA","IPV6_PREFER_SRC_HOME","IPV6_PREFER_SRC_NONCGA","IPV6_PREFER_SRC_PUBLIC","IPV6_PREFER_SRC_PUBTMP_DEFAULT","IPV6_PREFER_SRC_TMP","IPV6_RECVDSTOPTS","IPV6_RECVERR","IPV6_RECVFRAGSIZE","IPV6_RECVHOPLIMIT","IPV6_RECVHOPOPTS","IPV6_RECVORIGDSTADDR","IPV6_RECVPATHMTU","IPV6_RECVPKTINFO","IPV6_RECVRTHDR","IPV6_RECVTCLASS","IPV6_ROUTER_ALERT","IPV6_ROUTER_ALERT_ISOLATE","IPV6_RTHDR","IPV6_RTHDRDSTOPTS","IPV6_RTHDR_LOOSE","IPV6_RTHDR_STRICT","IPV6_TCLASS","IPV6_TRANSPARENT","IPV6_UNICAST_HOPS","IPV6_UNICAST_IF","IPV6_V6ONLY","IPV6_XFRM_POLICY","IPVERSION","IP_ADD_MEMBERSHIP","IP_ADD_SOURCE_MEMBERSHIP","IP_BIND_ADDRESS_NO_PORT","IP_BLOCK_SOURCE","IP_CHECKSUM","IP_DEFAULT_MULTICAST_LOOP","IP_DEFAULT_MULTICAST_TTL","IP_DROP_MEMBERSHIP","IP_DROP_SOURCE_MEMBERSHIP","IP_FREEBIND","IP_HDRINCL","IP_IPSEC_POLICY","IP_MINTTL","IP_MSFILTER","IP_MTU","IP_MTU_DISCOVER","IP_MULTICAST_ALL","IP_MULTICAST_IF","IP_MULTICAST_LOOP","IP_MULTICAST_TTL","IP_NODEFRAG","IP_OPTIONS","IP_ORIGDSTADDR","IP_PASSSEC","IP_PKTINFO","IP_PKTOPTIONS","IP_PMTUDISC_DO","IP_PMTUDISC_DONT","IP_PMTUDISC_INTERFACE","IP_PMTUDISC_OMIT","IP_PMTUDISC_PROBE","IP_PMTUDISC_WANT","IP_RECVERR","IP_RECVFRAGSIZE","IP_RECVOPTS","IP_RECVORIGDSTADDR","IP_RECVTOS","IP_RECVTTL","IP_RETOPTS","IP_ROUTER_ALERT","IP_TOS","IP_TRANSPARENT","IP_TTL","IP_UNBLOCK_SOURCE","IP_UNICAST_IF","IP_XFRM_POLICY","ISIG","ISOFS_SUPER_MAGIC","ISTRIP","ITIMER_PROF","ITIMER_REAL","ITIMER_VIRTUAL","IUTF8","IXANY","IXOFF","IXON","J1939_EE_INFO_NONE","J1939_EE_INFO_RX_ABORT","J1939_EE_INFO_RX_DPO","J1939_EE_INFO_RX_RTS","J1939_EE_INFO_TX_ABORT","J1939_FILTER_MAX","J1939_IDLE_ADDR","J1939_MAX_UNICAST_ADDR","J1939_NLA_BYTES_ACKED","J1939_NLA_DEST_ADDR","J1939_NLA_DEST_NAME","J1939_NLA_PAD","J1939_NLA_PGN","J1939_NLA_SRC_ADDR","J1939_NLA_SRC_NAME","J1939_NLA_TOTAL_SIZE","J1939_NO_ADDR","J1939_NO_NAME","J1939_NO_PGN","J1939_PGN_ADDRESS_CLAIMED","J1939_PGN_ADDRESS_COMMANDED","J1939_PGN_MAX","J1939_PGN_PDU1_MAX","J1939_PGN_REQUEST","JFFS2_SUPER_MAGIC","KERNEL_VERSION","KEXEC_ARCH_MASK","KEXEC_FILE_NO_INITRAMFS","KEXEC_FILE_ON_CRASH","KEXEC_FILE_UNLOAD","KEXEC_ON_CRASH","KEXEC_PRESERVE_CONTEXT","KEYCTL_ASSUME_AUTHORITY","KEYCTL_CAPABILITIES","KEYCTL_CAPS0_BIG_KEY","KEYCTL_CAPS0_CAPABILITIES","KEYCTL_CAPS0_DIFFIE_HELLMAN","KEYCTL_CAPS0_INVALIDATE","KEYCTL_CAPS0_MOVE","KEYCTL_CAPS0_PERSISTENT_KEYRINGS","KEYCTL_CAPS0_PUBLIC_KEY","KEYCTL_CAPS0_RESTRICT_KEYRING","KEYCTL_CAPS1_NS_KEYRING_NAME","KEYCTL_CAPS1_NS_KEY_TAG","KEYCTL_CHOWN","KEYCTL_CLEAR","KEYCTL_DESCRIBE","KEYCTL_DH_COMPUTE","KEYCTL_GET_KEYRING_ID","KEYCTL_GET_PERSISTENT","KEYCTL_GET_SECURITY","KEYCTL_INSTANTIATE","KEYCTL_INSTANTIATE_IOV","KEYCTL_INVALIDATE","KEYCTL_JOIN_SESSION_KEYRING","KEYCTL_LINK","KEYCTL_MOVE","KEYCTL_NEGATE","KEYCTL_PKEY_DECRYPT","KEYCTL_PKEY_ENCRYPT","KEYCTL_PKEY_QUERY","KEYCTL_PKEY_SIGN","KEYCTL_PKEY_VERIFY","KEYCTL_READ","KEYCTL_REJECT","KEYCTL_RESTRICT_KEYRING","KEYCTL_REVOKE","KEYCTL_SEARCH","KEYCTL_SESSION_TO_PARENT","KEYCTL_SETPERM","KEYCTL_SET_REQKEY_KEYRING","KEYCTL_SET_TIMEOUT","KEYCTL_SUPPORTS_DECRYPT","KEYCTL_SUPPORTS_ENCRYPT","KEYCTL_SUPPORTS_SIGN","KEYCTL_SUPPORTS_VERIFY","KEYCTL_UNLINK","KEYCTL_UPDATE","KEY_CNT","KEY_MAX","KEY_REQKEY_DEFL_DEFAULT","KEY_REQKEY_DEFL_GROUP_KEYRING","KEY_REQKEY_DEFL_NO_CHANGE","KEY_REQKEY_DEFL_PROCESS_KEYRING","KEY_REQKEY_DEFL_REQUESTOR_KEYRING","KEY_REQKEY_DEFL_SESSION_KEYRING","KEY_REQKEY_DEFL_THREAD_KEYRING","KEY_REQKEY_DEFL_USER_KEYRING","KEY_REQKEY_DEFL_USER_SESSION_KEYRING","KEY_SPEC_GROUP_KEYRING","KEY_SPEC_PROCESS_KEYRING","KEY_SPEC_REQKEY_AUTH_KEY","KEY_SPEC_REQUESTOR_KEYRING","KEY_SPEC_SESSION_KEYRING","KEY_SPEC_THREAD_KEYRING","KEY_SPEC_USER_KEYRING","KEY_SPEC_USER_SESSION_KEYRING","LC_ADDRESS","LC_ADDRESS_MASK","LC_ALL","LC_ALL_MASK","LC_COLLATE","LC_COLLATE_MASK","LC_CTYPE","LC_CTYPE_MASK","LC_IDENTIFICATION","LC_IDENTIFICATION_MASK","LC_MEASUREMENT","LC_MEASUREMENT_MASK","LC_MESSAGES","LC_MESSAGES_MASK","LC_MONETARY","LC_MONETARY_MASK","LC_NAME","LC_NAME_MASK","LC_NUMERIC","LC_NUMERIC_MASK","LC_PAPER","LC_PAPER_MASK","LC_TELEPHONE","LC_TELEPHONE_MASK","LC_TIME","LC_TIME_MASK","LED_CNT","LED_MAX","LINUX_REBOOT_CMD_CAD_OFF","LINUX_REBOOT_CMD_CAD_ON","LINUX_REBOOT_CMD_HALT","LINUX_REBOOT_CMD_KEXEC","LINUX_REBOOT_CMD_POWER_OFF","LINUX_REBOOT_CMD_RESTART","LINUX_REBOOT_CMD_RESTART2","LINUX_REBOOT_CMD_SW_SUSPEND","LINUX_REBOOT_MAGIC1","LINUX_REBOOT_MAGIC2","LINUX_REBOOT_MAGIC2A","LINUX_REBOOT_MAGIC2B","LINUX_REBOOT_MAGIC2C","LIO_NOP","LIO_NOWAIT","LIO_READ","LIO_WAIT","LIO_WRITE","LM_ID_BASE","LM_ID_NEWLM","LOCK_EX","LOCK_NB","LOCK_SH","LOCK_UN","LOGIN_PROCESS","LOG_ALERT","LOG_AUTH","LOG_AUTHPRIV","LOG_CONS","LOG_CRIT","LOG_CRON","LOG_DAEMON","LOG_DEBUG","LOG_EMERG","LOG_ERR","LOG_FACMASK","LOG_FTP","LOG_INFO","LOG_KERN","LOG_LOCAL0","LOG_LOCAL1","LOG_LOCAL2","LOG_LOCAL3","LOG_LOCAL4","LOG_LOCAL5","LOG_LOCAL6","LOG_LOCAL7","LOG_LPR","LOG_MAIL","LOG_NDELAY","LOG_NEWS","LOG_NFACILITIES","LOG_NOTICE","LOG_NOWAIT","LOG_ODELAY","LOG_PERROR","LOG_PID","LOG_PRIMASK","LOG_SYSLOG","LOG_USER","LOG_UUCP","LOG_WARNING","L_tmpnam","Lmid_t","MADV_COLD","MADV_DODUMP","MADV_DOFORK","MADV_DONTDUMP","MADV_DONTFORK","MADV_DONTNEED","MADV_DONTNEED_LOCKED","MADV_FREE","MADV_HUGEPAGE","MADV_HWPOISON","MADV_KEEPONFORK","MADV_MERGEABLE","MADV_NOHUGEPAGE","MADV_NORMAL","MADV_PAGEOUT","MADV_POPULATE_READ","MADV_POPULATE_WRITE","MADV_RANDOM","MADV_REMOVE","MADV_SEQUENTIAL","MADV_SOFT_OFFLINE","MADV_UNMERGEABLE","MADV_WILLNEED","MADV_WIPEONFORK","MAP_32BIT","MAP_ANON","MAP_ANONYMOUS","MAP_DENYWRITE","MAP_EXECUTABLE","MAP_FAILED","MAP_FILE","MAP_FIXED","MAP_FIXED_NOREPLACE","MAP_GROWSDOWN","MAP_HUGETLB","MAP_HUGE_16GB","MAP_HUGE_16MB","MAP_HUGE_1GB","MAP_HUGE_1MB","MAP_HUGE_256MB","MAP_HUGE_2GB","MAP_HUGE_2MB","MAP_HUGE_32MB","MAP_HUGE_512KB","MAP_HUGE_512MB","MAP_HUGE_64KB","MAP_HUGE_8MB","MAP_HUGE_MASK","MAP_HUGE_SHIFT","MAP_LOCKED","MAP_NONBLOCK","MAP_NORESERVE","MAP_POPULATE","MAP_PRIVATE","MAP_SHARED","MAP_SHARED_VALIDATE","MAP_STACK","MAP_SYNC","MAP_TYPE","MAXTC","MAXTTL","MAX_ADDR_LEN","MAX_IPOPTLEN","MAX_LINKS","MCAST_BLOCK_SOURCE","MCAST_EXCLUDE","MCAST_INCLUDE","MCAST_JOIN_GROUP","MCAST_JOIN_SOURCE_GROUP","MCAST_LEAVE_GROUP","MCAST_LEAVE_SOURCE_GROUP","MCAST_MSFILTER","MCAST_UNBLOCK_SOURCE","MCL_CURRENT","MCL_FUTURE","MEMBARRIER_CMD_GLOBAL","MEMBARRIER_CMD_GLOBAL_EXPEDITED","MEMBARRIER_CMD_PRIVATE_EXPEDITED","MEMBARRIER_CMD_PRIVATE_EXPEDITED_RSEQ","MEMBARRIER_CMD_PRIVATE_EXPEDITED_SYNC_CORE","MEMBARRIER_CMD_QUERY","MEMBARRIER_CMD_REGISTER_GLOBAL_EXPEDITED","MEMBARRIER_CMD_REGISTER_PRIVATE_EXPEDITED","MEMBARRIER_CMD_REGISTER_PRIVATE_EXPEDITED_RSEQ","MEMBARRIER_CMD_REGISTER_PRIVATE_EXPEDITED_SYNC_CORE","MFD_ALLOW_SEALING","MFD_CLOEXEC","MFD_HUGETLB","MFD_HUGE_16GB","MFD_HUGE_16MB","MFD_HUGE_1GB","MFD_HUGE_1MB","MFD_HUGE_256MB","MFD_HUGE_2GB","MFD_HUGE_2MB","MFD_HUGE_32MB","MFD_HUGE_512KB","MFD_HUGE_512MB","MFD_HUGE_64KB","MFD_HUGE_8MB","MFD_HUGE_MASK","MFD_HUGE_SHIFT","MINIX2_SUPER_MAGIC","MINIX2_SUPER_MAGIC2","MINIX3_SUPER_MAGIC","MINIX_SUPER_MAGIC","MINIX_SUPER_MAGIC2","MINSIGSTKSZ","MLOCK_ONFAULT","MMAP_PAGE_ZERO","MNT_DETACH","MNT_EXPIRE","MNT_FORCE","MODULE_INIT_IGNORE_MODVERSIONS","MODULE_INIT_IGNORE_VERMAGIC","MOD_CLKA","MOD_CLKB","MOD_ESTERROR","MOD_FREQUENCY","MOD_MAXERROR","MOD_MICRO","MOD_NANO","MOD_OFFSET","MOD_STATUS","MOD_TAI","MOD_TIMECONST","MON_1","MON_10","MON_11","MON_12","MON_2","MON_3","MON_4","MON_5","MON_6","MON_7","MON_8","MON_9","MPOL_BIND","MPOL_DEFAULT","MPOL_F_NUMA_BALANCING","MPOL_F_RELATIVE_NODES","MPOL_F_STATIC_NODES","MPOL_INTERLEAVE","MPOL_LOCAL","MPOL_PREFERRED","MREMAP_DONTUNMAP","MREMAP_FIXED","MREMAP_MAYMOVE","MSC_CNT","MSC_MAX","MSDOS_SUPER_MAGIC","MSG_CMSG_CLOEXEC","MSG_CONFIRM","MSG_COPY","MSG_CTRUNC","MSG_DONTROUTE","MSG_DONTWAIT","MSG_EOR","MSG_ERRQUEUE","MSG_EXCEPT","MSG_FASTOPEN","MSG_FIN","MSG_INFO","MSG_MORE","MSG_NOERROR","MSG_NOSIGNAL","MSG_NOTIFICATION","MSG_OOB","MSG_PEEK","MSG_RST","MSG_STAT","MSG_SYN","MSG_TRUNC","MSG_TRYHARD","MSG_WAITALL","MSG_WAITFORONE","MSG_ZEROCOPY","MS_ACTIVE","MS_ASYNC","MS_BIND","MS_DIRSYNC","MS_INVALIDATE","MS_I_VERSION","MS_KERNMOUNT","MS_LAZYTIME","MS_MANDLOCK","MS_MGC_MSK","MS_MGC_VAL","MS_MOVE","MS_NOATIME","MS_NODEV","MS_NODIRATIME","MS_NOEXEC","MS_NOSUID","MS_NOUSER","MS_POSIXACL","MS_PRIVATE","MS_RDONLY","MS_REC","MS_RELATIME","MS_REMOUNT","MS_RMT_MASK","MS_SHARED","MS_SILENT","MS_SLAVE","MS_STRICTATIME","MS_SYNC","MS_SYNCHRONOUS","MS_UNBINDABLE","M_ARENA_MAX","M_ARENA_TEST","M_CHECK_ACTION","M_GRAIN","M_KEEP","M_MMAP_MAX","M_MMAP_THRESHOLD","M_MXFAST","M_NLBLKS","M_PERTURB","M_TOP_PAD","M_TRIM_THRESHOLD","NCCS","NCP_SUPER_MAGIC","NDA_CACHEINFO","NDA_DST","NDA_IFINDEX","NDA_LINK_NETNSID","NDA_LLADDR","NDA_MASTER","NDA_PORT","NDA_PROBES","NDA_SRC_VNI","NDA_UNSPEC","NDA_VLAN","NDA_VNI","NETLINK_ADD_MEMBERSHIP","NETLINK_AUDIT","NETLINK_BROADCAST_ERROR","NETLINK_CAP_ACK","NETLINK_CONNECTOR","NETLINK_CRYPTO","NETLINK_DNRTMSG","NETLINK_DROP_MEMBERSHIP","NETLINK_ECRYPTFS","NETLINK_EXT_ACK","NETLINK_FIB_LOOKUP","NETLINK_FIREWALL","NETLINK_GENERIC","NETLINK_GET_STRICT_CHK","NETLINK_INET_DIAG","NETLINK_IP6_FW","NETLINK_ISCSI","NETLINK_KOBJECT_UEVENT","NETLINK_LISTEN_ALL_NSID","NETLINK_LIST_MEMBERSHIPS","NETLINK_NETFILTER","NETLINK_NFLOG","NETLINK_NO_ENOBUFS","NETLINK_PKTINFO","NETLINK_RDMA","NETLINK_ROUTE","NETLINK_RX_RING","NETLINK_SCSITRANSPORT","NETLINK_SELINUX","NETLINK_SOCK_DIAG","NETLINK_TX_RING","NETLINK_UNUSED","NETLINK_USERSOCK","NETLINK_XFRM","NEW_TIME","NFNETLINK_V0","NFNLGRP_ACCT_QUOTA","NFNLGRP_CONNTRACK_DESTROY","NFNLGRP_CONNTRACK_EXP_DESTROY","NFNLGRP_CONNTRACK_EXP_NEW","NFNLGRP_CONNTRACK_EXP_UPDATE","NFNLGRP_CONNTRACK_NEW","NFNLGRP_CONNTRACK_UPDATE","NFNLGRP_NFTABLES","NFNLGRP_NFTRACE","NFNLGRP_NONE","NFNL_BATCH_GENID","NFNL_BATCH_UNSPEC","NFNL_MSG_BATCH_BEGIN","NFNL_MSG_BATCH_END","NFNL_SUBSYS_ACCT","NFNL_SUBSYS_COUNT","NFNL_SUBSYS_CTHELPER","NFNL_SUBSYS_CTNETLINK","NFNL_SUBSYS_CTNETLINK_EXP","NFNL_SUBSYS_CTNETLINK_TIMEOUT","NFNL_SUBSYS_HOOK","NFNL_SUBSYS_IPSET","NFNL_SUBSYS_NFTABLES","NFNL_SUBSYS_NFT_COMPAT","NFNL_SUBSYS_NONE","NFNL_SUBSYS_OSF","NFNL_SUBSYS_QUEUE","NFNL_SUBSYS_ULOG","NFPROTO_ARP","NFPROTO_BRIDGE","NFPROTO_DECNET","NFPROTO_INET","NFPROTO_IPV4","NFPROTO_IPV6","NFPROTO_NETDEV","NFPROTO_NUMPROTO","NFPROTO_UNSPEC","NFQA_CAP_LEN","NFQA_CFG_CMD","NFQA_CFG_FLAGS","NFQA_CFG_F_CONNTRACK","NFQA_CFG_F_FAIL_OPEN","NFQA_CFG_F_GSO","NFQA_CFG_F_MAX","NFQA_CFG_F_SECCTX","NFQA_CFG_F_UID_GID","NFQA_CFG_MASK","NFQA_CFG_PARAMS","NFQA_CFG_QUEUE_MAXLEN","NFQA_CFG_UNSPEC","NFQA_CT","NFQA_CT_INFO","NFQA_EXP","NFQA_GID","NFQA_HWADDR","NFQA_IFINDEX_INDEV","NFQA_IFINDEX_OUTDEV","NFQA_IFINDEX_PHYSINDEV","NFQA_IFINDEX_PHYSOUTDEV","NFQA_L2HDR","NFQA_MARK","NFQA_PACKET_HDR","NFQA_PAYLOAD","NFQA_PRIORITY","NFQA_SECCTX","NFQA_SKB_CSUMNOTREADY","NFQA_SKB_CSUM_NOTVERIFIED","NFQA_SKB_GSO","NFQA_SKB_INFO","NFQA_TIMESTAMP","NFQA_UID","NFQA_UNSPEC","NFQA_VERDICT_HDR","NFQA_VLAN","NFQA_VLAN_PROTO","NFQA_VLAN_TCI","NFQA_VLAN_UNSPEC","NFQNL_CFG_CMD_BIND","NFQNL_CFG_CMD_NONE","NFQNL_CFG_CMD_PF_BIND","NFQNL_CFG_CMD_PF_UNBIND","NFQNL_CFG_CMD_UNBIND","NFQNL_COPY_META","NFQNL_COPY_NONE","NFQNL_COPY_PACKET","NFQNL_MSG_CONFIG","NFQNL_MSG_PACKET","NFQNL_MSG_VERDICT","NFQNL_MSG_VERDICT_BATCH","NFS_SUPER_MAGIC","NFT_BREAK","NFT_BYTEORDER_HTON","NFT_BYTEORDER_NTOH","NFT_CHAIN_MAXNAMELEN","NFT_CMP_EQ","NFT_CMP_GT","NFT_CMP_GTE","NFT_CMP_LT","NFT_CMP_LTE","NFT_CMP_NEQ","NFT_CONTINUE","NFT_CT_BYTES","NFT_CT_DIRECTION","NFT_CT_DST","NFT_CT_EXPIRATION","NFT_CT_HELPER","NFT_CT_L3PROTOCOL","NFT_CT_LABELS","NFT_CT_MARK","NFT_CT_PKTS","NFT_CT_PROTOCOL","NFT_CT_PROTO_DST","NFT_CT_PROTO_SRC","NFT_CT_SECMARK","NFT_CT_SRC","NFT_CT_STATE","NFT_CT_STATUS","NFT_DATA_RESERVED_MASK","NFT_DATA_VALUE","NFT_DATA_VALUE_MAXLEN","NFT_DATA_VERDICT","NFT_DYNSET_F_INV","NFT_DYNSET_OP_ADD","NFT_DYNSET_OP_UPDATE","NFT_GOTO","NFT_JUMP","NFT_LIMIT_F_INV","NFT_LIMIT_PKTS","NFT_LIMIT_PKT_BYTES","NFT_LOOKUP_F_INV","NFT_META_BRI_IIFNAME","NFT_META_BRI_OIFNAME","NFT_META_CGROUP","NFT_META_CPU","NFT_META_IIF","NFT_META_IIFGROUP","NFT_META_IIFNAME","NFT_META_IIFTYPE","NFT_META_L4PROTO","NFT_META_LEN","NFT_META_MARK","NFT_META_NFPROTO","NFT_META_NFTRACE","NFT_META_OIF","NFT_META_OIFGROUP","NFT_META_OIFNAME","NFT_META_OIFTYPE","NFT_META_PKTTYPE","NFT_META_PRANDOM","NFT_META_PRIORITY","NFT_META_PROTOCOL","NFT_META_RTCLASSID","NFT_META_SECMARK","NFT_META_SKGID","NFT_META_SKUID","NFT_MSG_DELCHAIN","NFT_MSG_DELOBJ","NFT_MSG_DELRULE","NFT_MSG_DELSET","NFT_MSG_DELSETELEM","NFT_MSG_DELTABLE","NFT_MSG_GETCHAIN","NFT_MSG_GETGEN","NFT_MSG_GETOBJ","NFT_MSG_GETOBJ_RESET","NFT_MSG_GETRULE","NFT_MSG_GETSET","NFT_MSG_GETSETELEM","NFT_MSG_GETTABLE","NFT_MSG_MAX","NFT_MSG_NEWCHAIN","NFT_MSG_NEWGEN","NFT_MSG_NEWOBJ","NFT_MSG_NEWRULE","NFT_MSG_NEWSET","NFT_MSG_NEWSETELEM","NFT_MSG_NEWTABLE","NFT_MSG_TRACE","NFT_NAT_DNAT","NFT_NAT_SNAT","NFT_NG_INCREMENTAL","NFT_NG_RANDOM","NFT_OBJ_MAXNAMELEN","NFT_PAYLOAD_CSUM_INET","NFT_PAYLOAD_CSUM_NONE","NFT_PAYLOAD_LL_HEADER","NFT_PAYLOAD_NETWORK_HEADER","NFT_PAYLOAD_TRANSPORT_HEADER","NFT_QUEUE_FLAG_BYPASS","NFT_QUEUE_FLAG_CPU_FANOUT","NFT_QUEUE_FLAG_MASK","NFT_QUOTA_F_INV","NFT_RANGE_EQ","NFT_RANGE_NEQ","NFT_REG32_00","NFT_REG32_01","NFT_REG32_02","NFT_REG32_03","NFT_REG32_04","NFT_REG32_05","NFT_REG32_06","NFT_REG32_07","NFT_REG32_08","NFT_REG32_09","NFT_REG32_10","NFT_REG32_11","NFT_REG32_12","NFT_REG32_13","NFT_REG32_14","NFT_REG32_15","NFT_REG32_SIZE","NFT_REG_1","NFT_REG_2","NFT_REG_3","NFT_REG_4","NFT_REG_SIZE","NFT_REG_VERDICT","NFT_REJECT_ICMPX_ADMIN_PROHIBITED","NFT_REJECT_ICMPX_HOST_UNREACH","NFT_REJECT_ICMPX_NO_ROUTE","NFT_REJECT_ICMPX_PORT_UNREACH","NFT_REJECT_ICMPX_UNREACH","NFT_REJECT_ICMP_UNREACH","NFT_REJECT_TCP_RST","NFT_RETURN","NFT_SET_ANONYMOUS","NFT_SET_CONSTANT","NFT_SET_ELEM_INTERVAL_END","NFT_SET_EVAL","NFT_SET_INTERVAL","NFT_SET_MAP","NFT_SET_MAXNAMELEN","NFT_SET_POL_MEMORY","NFT_SET_POL_PERFORMANCE","NFT_SET_TIMEOUT","NFT_TABLE_MAXNAMELEN","NFT_TRACETYPE_POLICY","NFT_TRACETYPE_RETURN","NFT_TRACETYPE_RULE","NFT_TRACETYPE_UNSPEC","NFT_USERDATA_MAXLEN","NFULA_CFG_CMD","NFULA_CFG_FLAGS","NFULA_CFG_MODE","NFULA_CFG_NLBUFSIZ","NFULA_CFG_QTHRESH","NFULA_CFG_TIMEOUT","NFULA_CFG_UNSPEC","NFULA_CT","NFULA_CT_INFO","NFULA_GID","NFULA_HWADDR","NFULA_HWHEADER","NFULA_HWLEN","NFULA_HWTYPE","NFULA_IFINDEX_INDEV","NFULA_IFINDEX_OUTDEV","NFULA_IFINDEX_PHYSINDEV","NFULA_IFINDEX_PHYSOUTDEV","NFULA_L2HDR","NFULA_MARK","NFULA_PACKET_HDR","NFULA_PAYLOAD","NFULA_PREFIX","NFULA_SEQ","NFULA_SEQ_GLOBAL","NFULA_TIMESTAMP","NFULA_UID","NFULA_UNSPEC","NFULA_VLAN","NFULA_VLAN_PROTO","NFULA_VLAN_TCI","NFULA_VLAN_UNSPEC","NFULNL_CFG_CMD_BIND","NFULNL_CFG_CMD_NONE","NFULNL_CFG_CMD_PF_BIND","NFULNL_CFG_CMD_PF_UNBIND","NFULNL_CFG_CMD_UNBIND","NFULNL_CFG_F_CONNTRACK","NFULNL_CFG_F_SEQ","NFULNL_CFG_F_SEQ_GLOBAL","NFULNL_COPY_META","NFULNL_COPY_NONE","NFULNL_COPY_PACKET","NFULNL_MSG_CONFIG","NFULNL_MSG_PACKET","NF_ACCEPT","NF_DROP","NF_INET_FORWARD","NF_INET_LOCAL_IN","NF_INET_LOCAL_OUT","NF_INET_NUMHOOKS","NF_INET_POST_ROUTING","NF_INET_PRE_ROUTING","NF_IP6_FORWARD","NF_IP6_LOCAL_IN","NF_IP6_LOCAL_OUT","NF_IP6_NUMHOOKS","NF_IP6_POST_ROUTING","NF_IP6_PRE_ROUTING","NF_IP6_PRI_CONNTRACK","NF_IP6_PRI_CONNTRACK_DEFRAG","NF_IP6_PRI_CONNTRACK_HELPER","NF_IP6_PRI_FILTER","NF_IP6_PRI_FIRST","NF_IP6_PRI_LAST","NF_IP6_PRI_MANGLE","NF_IP6_PRI_NAT_DST","NF_IP6_PRI_NAT_SRC","NF_IP6_PRI_RAW","NF_IP6_PRI_SECURITY","NF_IP6_PRI_SELINUX_FIRST","NF_IP6_PRI_SELINUX_LAST","NF_IP_FORWARD","NF_IP_LOCAL_IN","NF_IP_LOCAL_OUT","NF_IP_NUMHOOKS","NF_IP_POST_ROUTING","NF_IP_PRE_ROUTING","NF_IP_PRI_CONNTRACK","NF_IP_PRI_CONNTRACK_CONFIRM","NF_IP_PRI_CONNTRACK_DEFRAG","NF_IP_PRI_CONNTRACK_HELPER","NF_IP_PRI_FILTER","NF_IP_PRI_FIRST","NF_IP_PRI_LAST","NF_IP_PRI_MANGLE","NF_IP_PRI_NAT_DST","NF_IP_PRI_NAT_SRC","NF_IP_PRI_RAW","NF_IP_PRI_SECURITY","NF_IP_PRI_SELINUX_FIRST","NF_IP_PRI_SELINUX_LAST","NF_MAX_VERDICT","NF_NETDEV_INGRESS","NF_NETDEV_NUMHOOKS","NF_QUEUE","NF_REPEAT","NF_STOLEN","NF_STOP","NF_VERDICT_BITS","NF_VERDICT_FLAG_QUEUE_BYPASS","NF_VERDICT_MASK","NF_VERDICT_QBITS","NF_VERDICT_QMASK","NILFS_SUPER_MAGIC","NI_DGRAM","NI_MAXHOST","NI_NAMEREQD","NI_NOFQDN","NI_NUMERICHOST","NI_NUMERICSERV","NL0","NL1","NLA_ALIGN","NLA_ALIGNTO","NLA_F_NESTED","NLA_F_NET_BYTEORDER","NLA_TYPE_MASK","NLDLY","NLMSG_DONE","NLMSG_ERROR","NLMSG_MIN_TYPE","NLMSG_NOOP","NLMSG_OVERRUN","NLM_F_ACK","NLM_F_APPEND","NLM_F_ATOMIC","NLM_F_CREATE","NLM_F_DUMP","NLM_F_DUMP_FILTERED","NLM_F_DUMP_INTR","NLM_F_ECHO","NLM_F_EXCL","NLM_F_MATCH","NLM_F_MULTI","NLM_F_REPLACE","NLM_F_REQUEST","NLM_F_ROOT","NOEXPR","NOFLSH","NOSTR","NSFS_MAGIC","NTF_EXT_LEARNED","NTF_MASTER","NTF_OFFLOADED","NTF_PROXY","NTF_ROUTER","NTF_SELF","NTF_USE","NTP_API","NT_ASRS","NT_AUXV","NT_FPREGSET","NT_GWINDOWS","NT_LWPSINFO","NT_LWPSTATUS","NT_PLATFORM","NT_PRCRED","NT_PRFPREG","NT_PRFPXREG","NT_PRPSINFO","NT_PRSTATUS","NT_PRXREG","NT_PSINFO","NT_PSTATUS","NT_TASKSTRUCT","NT_UTSNAME","NUD_DELAY","NUD_FAILED","NUD_INCOMPLETE","NUD_NOARP","NUD_NONE","NUD_PERMANENT","NUD_PROBE","NUD_REACHABLE","NUD_STALE","OCFS2_SUPER_MAGIC","OCRNL","OFDEL","OFILL","OLCUC","OLD_TIME","ONLCR","ONLRET","ONOCR","OPENPROM_SUPER_MAGIC","OPEN_TREE_CLOEXEC","OPEN_TREE_CLONE","OPOST","ORIG_RAX","OVERLAYFS_SUPER_MAGIC","O_ACCMODE","O_APPEND","O_ASYNC","O_CLOEXEC","O_CREAT","O_DIRECT","O_DIRECTORY","O_DSYNC","O_EXCL","O_FSYNC","O_LARGEFILE","O_NDELAY","O_NOATIME","O_NOCTTY","O_NOFOLLOW","O_NONBLOCK","O_PATH","O_RDONLY","O_RDWR","O_RSYNC","O_SYNC","O_TMPFILE","O_TRUNC","O_WRONLY","PACKET_ADD_MEMBERSHIP","PACKET_DROP_MEMBERSHIP","PACKET_MR_ALLMULTI","PACKET_MR_MULTICAST","PACKET_MR_PROMISC","PACKET_MR_UNICAST","PARENB","PARMRK","PARODD","PATH_MAX","PENDIN","PF_ALG","PF_APPLETALK","PF_ASH","PF_ATMPVC","PF_ATMSVC","PF_AX25","PF_BLUETOOTH","PF_BRIDGE","PF_CAIF","PF_CAN","PF_DECnet","PF_ECONET","PF_IB","PF_IEEE802154","PF_INET","PF_INET6","PF_IPX","PF_IRDA","PF_ISDN","PF_IUCV","PF_KEY","PF_LLC","PF_LOCAL","PF_MASKOS","PF_MASKPROC","PF_MPLS","PF_NETBEUI","PF_NETLINK","PF_NETROM","PF_NFC","PF_PACKET","PF_PHONET","PF_PPPOX","PF_R","PF_RDS","PF_ROSE","PF_ROUTE","PF_RXRPC","PF_SECURITY","PF_SNA","PF_TIPC","PF_UNIX","PF_UNSPEC","PF_VSOCK","PF_W","PF_WANPIPE","PF_X","PF_X25","PF_XDP","PIDFD_NONBLOCK","PIPE_BUF","PM_STR","POLLERR","POLLHUP","POLLIN","POLLNVAL","POLLOUT","POLLPRI","POLLRDBAND","POLLRDHUP","POLLRDNORM","POLLWRBAND","POLLWRNORM","POSIX_FADV_DONTNEED","POSIX_FADV_NOREUSE","POSIX_FADV_NORMAL","POSIX_FADV_RANDOM","POSIX_FADV_SEQUENTIAL","POSIX_FADV_WILLNEED","POSIX_MADV_DONTNEED","POSIX_MADV_NORMAL","POSIX_MADV_RANDOM","POSIX_MADV_SEQUENTIAL","POSIX_MADV_WILLNEED","POSIX_SPAWN_RESETIDS","POSIX_SPAWN_SETPGROUP","POSIX_SPAWN_SETSCHEDPARAM","POSIX_SPAWN_SETSCHEDULER","POSIX_SPAWN_SETSID","POSIX_SPAWN_SETSIGDEF","POSIX_SPAWN_SETSIGMASK","POSIX_SPAWN_USEVFORK","PRIO_MAX","PRIO_MIN","PRIO_PGRP","PRIO_PROCESS","PRIO_USER","PROC_SUPER_MAGIC","PROT_EXEC","PROT_GROWSDOWN","PROT_GROWSUP","PROT_NONE","PROT_READ","PROT_WRITE","PR_CAPBSET_DROP","PR_CAPBSET_READ","PR_CAP_AMBIENT","PR_CAP_AMBIENT_CLEAR_ALL","PR_CAP_AMBIENT_IS_SET","PR_CAP_AMBIENT_LOWER","PR_CAP_AMBIENT_RAISE","PR_ENDIAN_BIG","PR_ENDIAN_LITTLE","PR_ENDIAN_PPC_LITTLE","PR_FPEMU_NOPRINT","PR_FPEMU_SIGFPE","PR_FP_EXC_ASYNC","PR_FP_EXC_DISABLED","PR_FP_EXC_DIV","PR_FP_EXC_INV","PR_FP_EXC_NONRECOV","PR_FP_EXC_OVF","PR_FP_EXC_PRECISE","PR_FP_EXC_RES","PR_FP_EXC_SW_ENABLE","PR_FP_EXC_UND","PR_FP_MODE_FR","PR_FP_MODE_FRE","PR_GET_CHILD_SUBREAPER","PR_GET_DUMPABLE","PR_GET_ENDIAN","PR_GET_FPEMU","PR_GET_FPEXC","PR_GET_FP_MODE","PR_GET_KEEPCAPS","PR_GET_NAME","PR_GET_NO_NEW_PRIVS","PR_GET_PDEATHSIG","PR_GET_SECCOMP","PR_GET_SECUREBITS","PR_GET_SPECULATION_CTRL","PR_GET_THP_DISABLE","PR_GET_TID_ADDRESS","PR_GET_TIMERSLACK","PR_GET_TIMING","PR_GET_TSC","PR_GET_UNALIGN","PR_MCE_KILL","PR_MCE_KILL_CLEAR","PR_MCE_KILL_DEFAULT","PR_MCE_KILL_EARLY","PR_MCE_KILL_GET","PR_MCE_KILL_LATE","PR_MCE_KILL_SET","PR_MPX_DISABLE_MANAGEMENT","PR_MPX_ENABLE_MANAGEMENT","PR_SCHED_CORE","PR_SCHED_CORE_CREATE","PR_SCHED_CORE_GET","PR_SCHED_CORE_MAX","PR_SCHED_CORE_SCOPE_PROCESS_GROUP","PR_SCHED_CORE_SCOPE_THREAD","PR_SCHED_CORE_SCOPE_THREAD_GROUP","PR_SCHED_CORE_SHARE_FROM","PR_SCHED_CORE_SHARE_TO","PR_SET_CHILD_SUBREAPER","PR_SET_DUMPABLE","PR_SET_ENDIAN","PR_SET_FPEMU","PR_SET_FPEXC","PR_SET_FP_MODE","PR_SET_KEEPCAPS","PR_SET_MM","PR_SET_MM_ARG_END","PR_SET_MM_ARG_START","PR_SET_MM_AUXV","PR_SET_MM_BRK","PR_SET_MM_END_CODE","PR_SET_MM_END_DATA","PR_SET_MM_ENV_END","PR_SET_MM_ENV_START","PR_SET_MM_EXE_FILE","PR_SET_MM_MAP","PR_SET_MM_MAP_SIZE","PR_SET_MM_START_BRK","PR_SET_MM_START_CODE","PR_SET_MM_START_DATA","PR_SET_MM_START_STACK","PR_SET_NAME","PR_SET_NO_NEW_PRIVS","PR_SET_PDEATHSIG","PR_SET_PTRACER","PR_SET_PTRACER_ANY","PR_SET_SECCOMP","PR_SET_SECUREBITS","PR_SET_SPECULATION_CTRL","PR_SET_THP_DISABLE","PR_SET_TIMERSLACK","PR_SET_TIMING","PR_SET_TSC","PR_SET_UNALIGN","PR_SET_VMA","PR_SET_VMA_ANON_NAME","PR_SPEC_DISABLE","PR_SPEC_DISABLE_NOEXEC","PR_SPEC_ENABLE","PR_SPEC_FORCE_DISABLE","PR_SPEC_INDIRECT_BRANCH","PR_SPEC_NOT_AFFECTED","PR_SPEC_PRCTL","PR_SPEC_STORE_BYPASS","PR_TASK_PERF_EVENTS_DISABLE","PR_TASK_PERF_EVENTS_ENABLE","PR_TIMING_STATISTICAL","PR_TIMING_TIMESTAMP","PR_TSC_ENABLE","PR_TSC_SIGSEGV","PR_UNALIGN_NOPRINT","PR_UNALIGN_SIGBUS","PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP","PTHREAD_COND_INITIALIZER","PTHREAD_CREATE_DETACHED","PTHREAD_CREATE_JOINABLE","PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP","PTHREAD_MUTEX_ADAPTIVE_NP","PTHREAD_MUTEX_DEFAULT","PTHREAD_MUTEX_ERRORCHECK","PTHREAD_MUTEX_INITIALIZER","PTHREAD_MUTEX_NORMAL","PTHREAD_MUTEX_RECURSIVE","PTHREAD_MUTEX_ROBUST","PTHREAD_MUTEX_STALLED","PTHREAD_PRIO_INHERIT","PTHREAD_PRIO_NONE","PTHREAD_PRIO_PROTECT","PTHREAD_PROCESS_PRIVATE","PTHREAD_PROCESS_SHARED","PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP","PTHREAD_RWLOCK_INITIALIZER","PTHREAD_STACK_MIN","PTRACE_ATTACH","PTRACE_CONT","PTRACE_DETACH","PTRACE_EVENT_CLONE","PTRACE_EVENT_EXEC","PTRACE_EVENT_EXIT","PTRACE_EVENT_FORK","PTRACE_EVENT_SECCOMP","PTRACE_EVENT_STOP","PTRACE_EVENT_VFORK","PTRACE_EVENT_VFORK_DONE","PTRACE_GETEVENTMSG","PTRACE_GETFPREGS","PTRACE_GETFPXREGS","PTRACE_GETREGS","PTRACE_GETREGSET","PTRACE_GETSIGINFO","PTRACE_GET_RSEQ_CONFIGURATION","PTRACE_GET_SYSCALL_INFO","PTRACE_INTERRUPT","PTRACE_KILL","PTRACE_LISTEN","PTRACE_O_EXITKILL","PTRACE_O_MASK","PTRACE_O_SUSPEND_SECCOMP","PTRACE_O_TRACECLONE","PTRACE_O_TRACEEXEC","PTRACE_O_TRACEEXIT","PTRACE_O_TRACEFORK","PTRACE_O_TRACESECCOMP","PTRACE_O_TRACESYSGOOD","PTRACE_O_TRACEVFORK","PTRACE_O_TRACEVFORKDONE","PTRACE_PEEKDATA","PTRACE_PEEKSIGINFO","PTRACE_PEEKSIGINFO_SHARED","PTRACE_PEEKTEXT","PTRACE_PEEKUSER","PTRACE_POKEDATA","PTRACE_POKETEXT","PTRACE_POKEUSER","PTRACE_SEIZE","PTRACE_SETFPREGS","PTRACE_SETFPXREGS","PTRACE_SETOPTIONS","PTRACE_SETREGS","PTRACE_SETREGSET","PTRACE_SETSIGINFO","PTRACE_SINGLESTEP","PTRACE_SYSCALL","PTRACE_SYSCALL_INFO_ENTRY","PTRACE_SYSCALL_INFO_EXIT","PTRACE_SYSCALL_INFO_NONE","PTRACE_SYSCALL_INFO_SECCOMP","PTRACE_SYSEMU","PTRACE_SYSEMU_SINGLESTEP","PTRACE_TRACEME","PT_DYNAMIC","PT_GNU_EH_FRAME","PT_GNU_RELRO","PT_GNU_STACK","PT_HIOS","PT_HIPROC","PT_HISUNW","PT_INTERP","PT_LOAD","PT_LOOS","PT_LOPROC","PT_LOSUNW","PT_NOTE","PT_NULL","PT_NUM","PT_PHDR","PT_SHLIB","PT_SUNWBSS","PT_SUNWSTACK","PT_TLS","P_ALL","P_PGID","P_PID","P_PIDFD","QCMD","QFMT_VFS_OLD","QFMT_VFS_V0","QFMT_VFS_V1","QIF_ALL","QIF_BLIMITS","QIF_BTIME","QIF_ILIMITS","QIF_INODES","QIF_ITIME","QIF_LIMITS","QIF_SPACE","QIF_TIMES","QIF_USAGE","QNX4_SUPER_MAGIC","QNX6_SUPER_MAGIC","Q_GETFMT","Q_GETINFO","Q_GETQUOTA","Q_QUOTAOFF","Q_QUOTAON","Q_SETINFO","Q_SETQUOTA","Q_SYNC","R10","R11","R12","R13","R14","R15","R8","R9","RADIXCHAR","RAND_MAX","RAX","RBP","RBX","RB_AUTOBOOT","RB_DISABLE_CAD","RB_ENABLE_CAD","RB_HALT_SYSTEM","RB_KEXEC","RB_POWER_OFF","RB_SW_SUSPEND","RCX","RDI","RDTGROUP_SUPER_MAGIC","RDX","READ_IMPLIES_EXEC","REG_BADBR","REG_BADPAT","REG_BADRPT","REG_CR2","REG_CSGSFS","REG_EBRACE","REG_EBRACK","REG_ECOLLATE","REG_ECTYPE","REG_EEND","REG_EESCAPE","REG_EFL","REG_ENOSYS","REG_EPAREN","REG_ERANGE","REG_ERPAREN","REG_ERR","REG_ESIZE","REG_ESPACE","REG_ESUBREG","REG_EXTENDED","REG_ICASE","REG_NEWLINE","REG_NOMATCH","REG_NOSUB","REG_NOTBOL","REG_NOTEOL","REG_OLDMASK","REG_R10","REG_R11","REG_R12","REG_R13","REG_R14","REG_R15","REG_R8","REG_R9","REG_RAX","REG_RBP","REG_RBX","REG_RCX","REG_RDI","REG_RDX","REG_RIP","REG_RSI","REG_RSP","REG_STARTEND","REG_TRAPNO","REISERFS_SUPER_MAGIC","REL_CNT","REL_MAX","RENAME_EXCHANGE","RENAME_NOREPLACE","RENAME_WHITEOUT","REP_CNT","REP_MAX","RESOLVE_BENEATH","RESOLVE_CACHED","RESOLVE_IN_ROOT","RESOLVE_NO_MAGICLINKS","RESOLVE_NO_SYMLINKS","RESOLVE_NO_XDEV","RIP","RLIM64_INFINITY","RLIMIT_AS","RLIMIT_CORE","RLIMIT_CPU","RLIMIT_DATA","RLIMIT_FSIZE","RLIMIT_LOCKS","RLIMIT_MEMLOCK","RLIMIT_MSGQUEUE","RLIMIT_NICE","RLIMIT_NLIMITS","RLIMIT_NOFILE","RLIMIT_NPROC","RLIMIT_RSS","RLIMIT_RTPRIO","RLIMIT_RTTIME","RLIMIT_SIGPENDING","RLIMIT_STACK","RLIM_INFINITY","RLIM_NLIMITS","RLIM_SAVED_CUR","RLIM_SAVED_MAX","RSI","RSP","RTA_CACHEINFO","RTA_DST","RTA_ENCAP","RTA_ENCAP_TYPE","RTA_EXPIRES","RTA_FLOW","RTA_GATEWAY","RTA_IIF","RTA_MARK","RTA_METRICS","RTA_MFC_STATS","RTA_MP_ALGO","RTA_MULTIPATH","RTA_NEWDST","RTA_OIF","RTA_PAD","RTA_PREF","RTA_PREFSRC","RTA_PRIORITY","RTA_PROTOINFO","RTA_SESSION","RTA_SRC","RTA_TABLE","RTA_TTL_PROPAGATE","RTA_UID","RTA_UNSPEC","RTA_VIA","RTCF_DIRECTSRC","RTCF_DOREDIRECT","RTCF_LOG","RTCF_MASQ","RTCF_NAT","RTCF_VALVE","RTEXT_FILTER_BRVLAN","RTEXT_FILTER_BRVLAN_COMPRESSED","RTEXT_FILTER_CFM_CONFIG","RTEXT_FILTER_CFM_STATUS","RTEXT_FILTER_MRP","RTEXT_FILTER_SKIP_STATS","RTEXT_FILTER_VF","RTF_ADDRCLASSMASK","RTF_ADDRCONF","RTF_ALLONLINK","RTF_BROADCAST","RTF_CACHE","RTF_DEFAULT","RTF_DYNAMIC","RTF_FLOW","RTF_GATEWAY","RTF_HOST","RTF_INTERFACE","RTF_IRTT","RTF_LINKRT","RTF_LOCAL","RTF_MODIFIED","RTF_MSS","RTF_MTU","RTF_MULTICAST","RTF_NAT","RTF_NOFORWARD","RTF_NONEXTHOP","RTF_NOPMTUDISC","RTF_POLICY","RTF_REINSTATE","RTF_REJECT","RTF_STATIC","RTF_THROW","RTF_UP","RTF_WINDOW","RTF_XRESOLVE","RTLD_DEEPBIND","RTLD_DEFAULT","RTLD_DI_CONFIGADDR","RTLD_DI_LINKMAP","RTLD_DI_LMID","RTLD_DI_ORIGIN","RTLD_DI_PROFILENAME","RTLD_DI_PROFILEOUT","RTLD_DI_SERINFO","RTLD_DI_SERINFOSIZE","RTLD_DI_TLS_DATA","RTLD_DI_TLS_MODID","RTLD_GLOBAL","RTLD_LAZY","RTLD_LOCAL","RTLD_NEXT","RTLD_NODELETE","RTLD_NOLOAD","RTLD_NOW","RTMGRP_DECnet_IFADDR","RTMGRP_DECnet_ROUTE","RTMGRP_IPV4_IFADDR","RTMGRP_IPV4_MROUTE","RTMGRP_IPV4_ROUTE","RTMGRP_IPV4_RULE","RTMGRP_IPV6_IFADDR","RTMGRP_IPV6_IFINFO","RTMGRP_IPV6_MROUTE","RTMGRP_IPV6_PREFIX","RTMGRP_IPV6_ROUTE","RTMGRP_LINK","RTMGRP_NEIGH","RTMGRP_NOTIFY","RTMGRP_TC","RTMSG_AR_FAILED","RTMSG_CONTROL","RTMSG_DELDEVICE","RTMSG_DELROUTE","RTMSG_DELRULE","RTMSG_NEWDEVICE","RTMSG_NEWROUTE","RTMSG_NEWRULE","RTMSG_OVERRUN","RTM_DELACTION","RTM_DELADDR","RTM_DELADDRLABEL","RTM_DELLINK","RTM_DELMDB","RTM_DELNEIGH","RTM_DELNETCONF","RTM_DELNSID","RTM_DELQDISC","RTM_DELROUTE","RTM_DELRULE","RTM_DELTCLASS","RTM_DELTFILTER","RTM_F_CLONED","RTM_F_EQUALIZE","RTM_F_FIB_MATCH","RTM_F_LOOKUP_TABLE","RTM_F_NOTIFY","RTM_F_PREFIX","RTM_GETACTION","RTM_GETADDR","RTM_GETADDRLABEL","RTM_GETANYCAST","RTM_GETDCB","RTM_GETLINK","RTM_GETMDB","RTM_GETMULTICAST","RTM_GETNEIGH","RTM_GETNEIGHTBL","RTM_GETNETCONF","RTM_GETNSID","RTM_GETQDISC","RTM_GETROUTE","RTM_GETRULE","RTM_GETSTATS","RTM_GETTCLASS","RTM_GETTFILTER","RTM_NEWACTION","RTM_NEWADDR","RTM_NEWADDRLABEL","RTM_NEWCACHEREPORT","RTM_NEWLINK","RTM_NEWMDB","RTM_NEWNDUSEROPT","RTM_NEWNEIGH","RTM_NEWNEIGHTBL","RTM_NEWNETCONF","RTM_NEWNSID","RTM_NEWPREFIX","RTM_NEWQDISC","RTM_NEWROUTE","RTM_NEWRULE","RTM_NEWSTATS","RTM_NEWTCLASS","RTM_NEWTFILTER","RTM_SETDCB","RTM_SETLINK","RTM_SETNEIGHTBL","RTNLGRP_BRVLAN","RTNLGRP_DCB","RTNLGRP_DECnet_IFADDR","RTNLGRP_DECnet_ROUTE","RTNLGRP_DECnet_RULE","RTNLGRP_IPV4_IFADDR","RTNLGRP_IPV4_MROUTE","RTNLGRP_IPV4_MROUTE_R","RTNLGRP_IPV4_NETCONF","RTNLGRP_IPV4_ROUTE","RTNLGRP_IPV4_RULE","RTNLGRP_IPV6_IFADDR","RTNLGRP_IPV6_IFINFO","RTNLGRP_IPV6_MROUTE","RTNLGRP_IPV6_MROUTE_R","RTNLGRP_IPV6_NETCONF","RTNLGRP_IPV6_PREFIX","RTNLGRP_IPV6_ROUTE","RTNLGRP_IPV6_RULE","RTNLGRP_LINK","RTNLGRP_MCTP_IFADDR","RTNLGRP_MDB","RTNLGRP_MPLS_NETCONF","RTNLGRP_MPLS_ROUTE","RTNLGRP_ND_USEROPT","RTNLGRP_NEIGH","RTNLGRP_NEXTHOP","RTNLGRP_NONE","RTNLGRP_NOP2","RTNLGRP_NOP4","RTNLGRP_NOTIFY","RTNLGRP_NSID","RTNLGRP_PHONET_IFADDR","RTNLGRP_PHONET_ROUTE","RTNLGRP_STATS","RTNLGRP_TC","RTNLGRP_TUNNEL","RTN_ANYCAST","RTN_BLACKHOLE","RTN_BROADCAST","RTN_LOCAL","RTN_MULTICAST","RTN_NAT","RTN_PROHIBIT","RTN_THROW","RTN_UNICAST","RTN_UNREACHABLE","RTN_UNSPEC","RTN_XRESOLVE","RTPROT_BOOT","RTPROT_KERNEL","RTPROT_REDIRECT","RTPROT_STATIC","RTPROT_UNSPEC","RT_ADDRCLASS","RT_CLASS_DEFAULT","RT_CLASS_LOCAL","RT_CLASS_MAIN","RT_CLASS_MAX","RT_CLASS_UNSPEC","RT_LOCALADDR","RT_SCOPE_HOST","RT_SCOPE_LINK","RT_SCOPE_NOWHERE","RT_SCOPE_SITE","RT_SCOPE_UNIVERSE","RT_TABLE_COMPAT","RT_TABLE_DEFAULT","RT_TABLE_LOCAL","RT_TABLE_MAIN","RT_TABLE_UNSPEC","RT_TOS","RUN_LVL","RUSAGE_CHILDREN","RUSAGE_SELF","RUSAGE_THREAD","RWF_APPEND","RWF_DSYNC","RWF_HIPRI","RWF_NOWAIT","RWF_SYNC","R_OK","SA_NOCLDSTOP","SA_NOCLDWAIT","SA_NODEFER","SA_ONSTACK","SA_RESETHAND","SA_RESTART","SA_SIGINFO","SCHED_BATCH","SCHED_FIFO","SCHED_IDLE","SCHED_OTHER","SCHED_RESET_ON_FORK","SCHED_RR","SCM_CREDENTIALS","SCM_J1939_DEST_ADDR","SCM_J1939_DEST_NAME","SCM_J1939_ERRQUEUE","SCM_J1939_PRIO","SCM_RIGHTS","SCM_TIMESTAMP","SCM_TIMESTAMPING","SCM_TIMESTAMPING_OPT_STATS","SCM_TIMESTAMPING_PKTINFO","SCM_TIMESTAMPNS","SCM_TXTIME","SCM_WIFI_STATUS","SCTP_ABORT","SCTP_ADAPTATION_LAYER","SCTP_ADDR_OVER","SCTP_ALL_ASSOC","SCTP_ASSOCINFO","SCTP_AUTHINFO","SCTP_AUTH_ACTIVE_KEY","SCTP_AUTH_CHUNK","SCTP_AUTH_DEACTIVATE_KEY","SCTP_AUTH_DELETE_KEY","SCTP_AUTH_KEY","SCTP_AUTOCLOSE","SCTP_AUTO_ASCONF","SCTP_CONTEXT","SCTP_CURRENT_ASSOC","SCTP_DEFAULT_SEND_PARAM","SCTP_DEFAULT_SNDINFO","SCTP_DELAYED_ACK","SCTP_DELAYED_ACK_TIME","SCTP_DELAYED_SACK","SCTP_DISABLE_FRAGMENTS","SCTP_DSTADDRV4","SCTP_DSTADDRV6","SCTP_ENABLE_CHANGE_ASSOC_REQ","SCTP_ENABLE_RESET_ASSOC_REQ","SCTP_ENABLE_RESET_STREAM_REQ","SCTP_ENABLE_STRRESET_MASK","SCTP_EOF","SCTP_EVENTS","SCTP_FRAGMENT_INTERLEAVE","SCTP_FUTURE_ASSOC","SCTP_GET_ASSOC_ID_LIST","SCTP_GET_ASSOC_NUMBER","SCTP_GET_PEER_ADDR_INFO","SCTP_HMAC_IDENT","SCTP_INIT","SCTP_INITMSG","SCTP_I_WANT_MAPPED_V4_ADDR","SCTP_LOCAL_AUTH_CHUNKS","SCTP_MAXSEG","SCTP_MAX_BURST","SCTP_NODELAY","SCTP_NOTIFICATION","SCTP_NXTINFO","SCTP_PARTIAL_DELIVERY_POINT","SCTP_PEER_ADDR_PARAMS","SCTP_PEER_ADDR_THLDS","SCTP_PEER_ADDR_THLDS_V2","SCTP_PEER_AUTH_CHUNKS","SCTP_PRIMARY_ADDR","SCTP_PRINFO","SCTP_PR_INDEX","SCTP_PR_POLICY","SCTP_PR_PRIO_ENABLED","SCTP_PR_RTX_ENABLED","SCTP_PR_SCTP_ALL","SCTP_PR_SCTP_MASK","SCTP_PR_SCTP_MAX","SCTP_PR_SCTP_NONE","SCTP_PR_SCTP_PRIO","SCTP_PR_SCTP_RTX","SCTP_PR_SCTP_TTL","SCTP_PR_SET_POLICY","SCTP_PR_TTL_ENABLED","SCTP_RCVINFO","SCTP_RECVNXTINFO","SCTP_RECVRCVINFO","SCTP_REUSE_PORT","SCTP_RTOINFO","SCTP_SACK_IMMEDIATELY","SCTP_SENDALL","SCTP_SET_PEER_PRIMARY_ADDR","SCTP_SNDINFO","SCTP_SNDRCV","SCTP_STATUS","SCTP_STREAM_RESET_INCOMING","SCTP_STREAM_RESET_OUTGOING","SCTP_UNORDERED","SECCOMP_FILTER_FLAG_LOG","SECCOMP_FILTER_FLAG_SPEC_ALLOW","SECCOMP_FILTER_FLAG_TSYNC","SECCOMP_GET_ACTION_AVAIL","SECCOMP_GET_NOTIF_SIZES","SECCOMP_MODE_DISABLED","SECCOMP_MODE_FILTER","SECCOMP_MODE_STRICT","SECCOMP_RET_ACTION","SECCOMP_RET_ACTION_FULL","SECCOMP_RET_ALLOW","SECCOMP_RET_DATA","SECCOMP_RET_ERRNO","SECCOMP_RET_KILL","SECCOMP_RET_KILL_PROCESS","SECCOMP_RET_KILL_THREAD","SECCOMP_RET_LOG","SECCOMP_RET_TRACE","SECCOMP_RET_TRAP","SECCOMP_SET_MODE_FILTER","SECCOMP_SET_MODE_STRICT","SECURITYFS_MAGIC","SEEK_CUR","SEEK_DATA","SEEK_END","SEEK_HOLE","SEEK_SET","SELFMAG","SELINUX_MAGIC","SEM_FAILED","SFD_CLOEXEC","SFD_NONBLOCK","SHM_EXEC","SHM_HUGETLB","SHM_LOCK","SHM_NORESERVE","SHM_R","SHM_RDONLY","SHM_REMAP","SHM_RND","SHM_UNLOCK","SHM_W","SHORT_INODE","SHUT_RD","SHUT_RDWR","SHUT_WR","SIGABRT","SIGALRM","SIGBUS","SIGCHLD","SIGCONT","SIGEV_NONE","SIGEV_SIGNAL","SIGEV_THREAD","SIGEV_THREAD_ID","SIGFPE","SIGHUP","SIGILL","SIGINT","SIGIO","SIGIOT","SIGKILL","SIGPIPE","SIGPOLL","SIGPROF","SIGPWR","SIGQUIT","SIGRTMAX","SIGRTMIN","SIGSEGV","SIGSTKFLT","SIGSTKSZ","SIGSTOP","SIGSYS","SIGTERM","SIGTRAP","SIGTSTP","SIGTTIN","SIGTTOU","SIGUNUSED","SIGURG","SIGUSR1","SIGUSR2","SIGVTALRM","SIGWINCH","SIGXCPU","SIGXFSZ","SIG_BLOCK","SIG_DFL","SIG_ERR","SIG_IGN","SIG_SETMASK","SIG_UNBLOCK","SIOCADDMULTI","SIOCADDRT","SIOCDARP","SIOCDELMULTI","SIOCDELRT","SIOCDIFADDR","SIOCDRARP","SIOCETHTOOL","SIOCGARP","SIOCGHWTSTAMP","SIOCGIFADDR","SIOCGIFBR","SIOCGIFBRDADDR","SIOCGIFCONF","SIOCGIFCOUNT","SIOCGIFDSTADDR","SIOCGIFENCAP","SIOCGIFFLAGS","SIOCGIFHWADDR","SIOCGIFINDEX","SIOCGIFMAP","SIOCGIFMEM","SIOCGIFMETRIC","SIOCGIFMTU","SIOCGIFNAME","SIOCGIFNETMASK","SIOCGIFPFLAGS","SIOCGIFSLAVE","SIOCGIFTXQLEN","SIOCGMIIPHY","SIOCGMIIREG","SIOCGRARP","SIOCGSKNS","SIOCOUTQNSD","SIOCSARP","SIOCSHWTSTAMP","SIOCSIFADDR","SIOCSIFBR","SIOCSIFBRDADDR","SIOCSIFDSTADDR","SIOCSIFENCAP","SIOCSIFFLAGS","SIOCSIFHWADDR","SIOCSIFHWBROADCAST","SIOCSIFLINK","SIOCSIFMAP","SIOCSIFMEM","SIOCSIFMETRIC","SIOCSIFMTU","SIOCSIFNETMASK","SIOCSIFPFLAGS","SIOCSIFSLAVE","SIOCSIFTXQLEN","SIOCSMIIREG","SIOCSRARP","SIOCWANDEV","SIOGIFINDEX","SI_LOAD_SHIFT","SKF_AD_ALU_XOR_X","SKF_AD_CPU","SKF_AD_HATYPE","SKF_AD_IFINDEX","SKF_AD_MARK","SKF_AD_MAX","SKF_AD_NLATTR","SKF_AD_NLATTR_NEST","SKF_AD_OFF","SKF_AD_PAY_OFFSET","SKF_AD_PKTTYPE","SKF_AD_PROTOCOL","SKF_AD_QUEUE","SKF_AD_RANDOM","SKF_AD_RXHASH","SKF_AD_VLAN_TAG","SKF_AD_VLAN_TAG_PRESENT","SKF_AD_VLAN_TPID","SKF_LL_OFF","SKF_NET_OFF","SK_MEMINFO_BACKLOG","SK_MEMINFO_DROPS","SK_MEMINFO_FWD_ALLOC","SK_MEMINFO_OPTMEM","SK_MEMINFO_RCVBUF","SK_MEMINFO_RMEM_ALLOC","SK_MEMINFO_SNDBUF","SK_MEMINFO_WMEM_ALLOC","SK_MEMINFO_WMEM_QUEUED","SMACK_MAGIC","SMB_SUPER_MAGIC","SND_CNT","SND_MAX","SOCK_CLOEXEC","SOCK_DCCP","SOCK_DGRAM","SOCK_NONBLOCK","SOCK_PACKET","SOCK_RAW","SOCK_RDM","SOCK_SEQPACKET","SOCK_STREAM","SOF_TIMESTAMPING_OPT_CMSG","SOF_TIMESTAMPING_OPT_ID","SOF_TIMESTAMPING_OPT_PKTINFO","SOF_TIMESTAMPING_OPT_STATS","SOF_TIMESTAMPING_OPT_TSONLY","SOF_TIMESTAMPING_OPT_TX_SWHW","SOF_TIMESTAMPING_RAW_HARDWARE","SOF_TIMESTAMPING_RX_HARDWARE","SOF_TIMESTAMPING_RX_SOFTWARE","SOF_TIMESTAMPING_SOFTWARE","SOF_TIMESTAMPING_SYS_HARDWARE","SOF_TIMESTAMPING_TX_ACK","SOF_TIMESTAMPING_TX_HARDWARE","SOF_TIMESTAMPING_TX_SCHED","SOF_TIMESTAMPING_TX_SOFTWARE","SOF_TXTIME_DEADLINE_MODE","SOF_TXTIME_REPORT_ERRORS","SOL_AAL","SOL_ALG","SOL_ATM","SOL_BLUETOOTH","SOL_CAIF","SOL_CAN_BASE","SOL_CAN_J1939","SOL_CAN_RAW","SOL_DCCP","SOL_DECNET","SOL_ICMPV6","SOL_IP","SOL_IPV6","SOL_IRDA","SOL_IUCV","SOL_LLC","SOL_NETBEUI","SOL_NETLINK","SOL_NFC","SOL_PACKET","SOL_PNPIPE","SOL_PPPOL2TP","SOL_RAW","SOL_RDS","SOL_RXRPC","SOL_SOCKET","SOL_TCP","SOL_TIPC","SOL_UDP","SOL_X25","SOL_XDP","SOMAXCONN","SO_ACCEPTCONN","SO_ATTACH_BPF","SO_ATTACH_FILTER","SO_ATTACH_REUSEPORT_CBPF","SO_ATTACH_REUSEPORT_EBPF","SO_BINDTODEVICE","SO_BINDTOIFINDEX","SO_BPF_EXTENSIONS","SO_BROADCAST","SO_BSDCOMPAT","SO_BUSY_POLL","SO_CNX_ADVICE","SO_COOKIE","SO_DEBUG","SO_DETACH_BPF","SO_DETACH_FILTER","SO_DETACH_REUSEPORT_BPF","SO_DOMAIN","SO_DONTROUTE","SO_EE_OFFENDER","SO_EE_ORIGIN_ICMP","SO_EE_ORIGIN_ICMP6","SO_EE_ORIGIN_LOCAL","SO_EE_ORIGIN_NONE","SO_EE_ORIGIN_TIMESTAMPING","SO_EE_ORIGIN_TXSTATUS","SO_ERROR","SO_GET_FILTER","SO_INCOMING_CPU","SO_INCOMING_NAPI_ID","SO_J1939_ERRQUEUE","SO_J1939_FILTER","SO_J1939_PROMISC","SO_J1939_SEND_PRIO","SO_KEEPALIVE","SO_LINGER","SO_LOCK_FILTER","SO_MARK","SO_MAX_PACING_RATE","SO_MEMINFO","SO_NOFCS","SO_NO_CHECK","SO_OOBINLINE","SO_ORIGINAL_DST","SO_PASSCRED","SO_PASSSEC","SO_PEEK_OFF","SO_PEERCRED","SO_PEERGROUPS","SO_PEERNAME","SO_PEERSEC","SO_PRIORITY","SO_PROTOCOL","SO_RCVBUF","SO_RCVBUFFORCE","SO_RCVLOWAT","SO_RCVTIMEO","SO_RCVTIMEO_NEW","SO_REUSEADDR","SO_REUSEPORT","SO_RXQ_OVFL","SO_SECURITY_AUTHENTICATION","SO_SECURITY_ENCRYPTION_NETWORK","SO_SECURITY_ENCRYPTION_TRANSPORT","SO_SELECT_ERR_QUEUE","SO_SNDBUF","SO_SNDBUFFORCE","SO_SNDLOWAT","SO_SNDTIMEO","SO_SNDTIMEO_NEW","SO_TIMESTAMP","SO_TIMESTAMPING","SO_TIMESTAMPING_NEW","SO_TIMESTAMPNS","SO_TIMESTAMPNS_NEW","SO_TIMESTAMP_NEW","SO_TXTIME","SO_TYPE","SO_WIFI_STATUS","SO_ZEROCOPY","SPLICE_F_GIFT","SPLICE_F_MORE","SPLICE_F_MOVE","SPLICE_F_NONBLOCK","SS","SS_DISABLE","SS_ONSTACK","STATX_ALL","STATX_ATIME","STATX_ATTR_APPEND","STATX_ATTR_AUTOMOUNT","STATX_ATTR_COMPRESSED","STATX_ATTR_DAX","STATX_ATTR_ENCRYPTED","STATX_ATTR_IMMUTABLE","STATX_ATTR_MOUNT_ROOT","STATX_ATTR_NODUMP","STATX_ATTR_VERITY","STATX_BASIC_STATS","STATX_BLOCKS","STATX_BTIME","STATX_CTIME","STATX_DIOALIGN","STATX_GID","STATX_INO","STATX_MNT_ID","STATX_MODE","STATX_MTIME","STATX_NLINK","STATX_SIZE","STATX_TYPE","STATX_UID","STATX__RESERVED","STA_CLK","STA_CLOCKERR","STA_DEL","STA_FLL","STA_FREQHOLD","STA_INS","STA_MODE","STA_NANO","STA_PLL","STA_PPSERROR","STA_PPSFREQ","STA_PPSJITTER","STA_PPSSIGNAL","STA_PPSTIME","STA_PPSWANDER","STA_RONLY","STA_UNSYNC","STDERR_FILENO","STDIN_FILENO","STDOUT_FILENO","STICKY_TIMEOUTS","ST_APPEND","ST_IMMUTABLE","ST_MANDLOCK","ST_NOATIME","ST_NODEV","ST_NODIRATIME","ST_NOEXEC","ST_NOSUID","ST_RDONLY","ST_RELATIME","ST_SYNCHRONOUS","ST_WRITE","SW_CNT","SW_MAX","SYNC_FILE_RANGE_WAIT_AFTER","SYNC_FILE_RANGE_WAIT_BEFORE","SYNC_FILE_RANGE_WRITE","SYN_CNT","SYN_MAX","SYSFS_MAGIC","SYS__sysctl","SYS_accept","SYS_accept4","SYS_access","SYS_acct","SYS_add_key","SYS_adjtimex","SYS_afs_syscall","SYS_alarm","SYS_arch_prctl","SYS_bind","SYS_bpf","SYS_brk","SYS_capget","SYS_capset","SYS_chdir","SYS_chmod","SYS_chown","SYS_chroot","SYS_clock_adjtime","SYS_clock_getres","SYS_clock_gettime","SYS_clock_nanosleep","SYS_clock_settime","SYS_clone","SYS_clone3","SYS_close","SYS_close_range","SYS_connect","SYS_copy_file_range","SYS_creat","SYS_create_module","SYS_delete_module","SYS_dup","SYS_dup2","SYS_dup3","SYS_epoll_create","SYS_epoll_create1","SYS_epoll_ctl","SYS_epoll_ctl_old","SYS_epoll_pwait","SYS_epoll_pwait2","SYS_epoll_wait","SYS_epoll_wait_old","SYS_eventfd","SYS_eventfd2","SYS_execve","SYS_execveat","SYS_exit","SYS_exit_group","SYS_faccessat","SYS_faccessat2","SYS_fadvise64","SYS_fallocate","SYS_fanotify_init","SYS_fanotify_mark","SYS_fchdir","SYS_fchmod","SYS_fchmodat","SYS_fchown","SYS_fchownat","SYS_fcntl","SYS_fdatasync","SYS_fgetxattr","SYS_finit_module","SYS_flistxattr","SYS_flock","SYS_fork","SYS_fremovexattr","SYS_fsconfig","SYS_fsetxattr","SYS_fsmount","SYS_fsopen","SYS_fspick","SYS_fstat","SYS_fstatfs","SYS_fsync","SYS_ftruncate","SYS_futex","SYS_futex_waitv","SYS_futimesat","SYS_get_kernel_syms","SYS_get_mempolicy","SYS_get_robust_list","SYS_get_thread_area","SYS_getcpu","SYS_getcwd","SYS_getdents","SYS_getdents64","SYS_getegid","SYS_geteuid","SYS_getgid","SYS_getgroups","SYS_getitimer","SYS_getpeername","SYS_getpgid","SYS_getpgrp","SYS_getpid","SYS_getpmsg","SYS_getppid","SYS_getpriority","SYS_getrandom","SYS_getresgid","SYS_getresuid","SYS_getrlimit","SYS_getrusage","SYS_getsid","SYS_getsockname","SYS_getsockopt","SYS_gettid","SYS_gettimeofday","SYS_getuid","SYS_getxattr","SYS_init_module","SYS_inotify_add_watch","SYS_inotify_init","SYS_inotify_init1","SYS_inotify_rm_watch","SYS_io_cancel","SYS_io_destroy","SYS_io_getevents","SYS_io_setup","SYS_io_submit","SYS_io_uring_enter","SYS_io_uring_register","SYS_io_uring_setup","SYS_ioctl","SYS_ioperm","SYS_iopl","SYS_ioprio_get","SYS_ioprio_set","SYS_kcmp","SYS_kexec_file_load","SYS_kexec_load","SYS_keyctl","SYS_kill","SYS_landlock_add_rule","SYS_landlock_create_ruleset","SYS_landlock_restrict_self","SYS_lchown","SYS_lgetxattr","SYS_link","SYS_linkat","SYS_listen","SYS_listxattr","SYS_llistxattr","SYS_lookup_dcookie","SYS_lremovexattr","SYS_lseek","SYS_lsetxattr","SYS_lstat","SYS_madvise","SYS_mbind","SYS_membarrier","SYS_memfd_create","SYS_memfd_secret","SYS_migrate_pages","SYS_mincore","SYS_mkdir","SYS_mkdirat","SYS_mknod","SYS_mknodat","SYS_mlock","SYS_mlock2","SYS_mlockall","SYS_mmap","SYS_modify_ldt","SYS_mount","SYS_mount_setattr","SYS_move_mount","SYS_move_pages","SYS_mprotect","SYS_mq_getsetattr","SYS_mq_notify","SYS_mq_open","SYS_mq_timedreceive","SYS_mq_timedsend","SYS_mq_unlink","SYS_mremap","SYS_msgctl","SYS_msgget","SYS_msgrcv","SYS_msgsnd","SYS_msync","SYS_munlock","SYS_munlockall","SYS_munmap","SYS_name_to_handle_at","SYS_nanosleep","SYS_newfstatat","SYS_nfsservctl","SYS_open","SYS_open_by_handle_at","SYS_open_tree","SYS_openat","SYS_openat2","SYS_pause","SYS_perf_event_open","SYS_personality","SYS_pidfd_getfd","SYS_pidfd_open","SYS_pidfd_send_signal","SYS_pipe","SYS_pipe2","SYS_pivot_root","SYS_pkey_alloc","SYS_pkey_free","SYS_pkey_mprotect","SYS_poll","SYS_ppoll","SYS_prctl","SYS_pread64","SYS_preadv","SYS_preadv2","SYS_prlimit64","SYS_process_madvise","SYS_process_mrelease","SYS_process_vm_readv","SYS_process_vm_writev","SYS_pselect6","SYS_ptrace","SYS_putpmsg","SYS_pwrite64","SYS_pwritev","SYS_pwritev2","SYS_query_module","SYS_quotactl","SYS_quotactl_fd","SYS_read","SYS_readahead","SYS_readlink","SYS_readlinkat","SYS_readv","SYS_reboot","SYS_recvfrom","SYS_recvmmsg","SYS_recvmsg","SYS_remap_file_pages","SYS_removexattr","SYS_rename","SYS_renameat","SYS_renameat2","SYS_request_key","SYS_restart_syscall","SYS_rmdir","SYS_rseq","SYS_rt_sigaction","SYS_rt_sigpending","SYS_rt_sigprocmask","SYS_rt_sigqueueinfo","SYS_rt_sigreturn","SYS_rt_sigsuspend","SYS_rt_sigtimedwait","SYS_rt_tgsigqueueinfo","SYS_sched_get_priority_max","SYS_sched_get_priority_min","SYS_sched_getaffinity","SYS_sched_getattr","SYS_sched_getparam","SYS_sched_getscheduler","SYS_sched_rr_get_interval","SYS_sched_setaffinity","SYS_sched_setattr","SYS_sched_setparam","SYS_sched_setscheduler","SYS_sched_yield","SYS_seccomp","SYS_security","SYS_select","SYS_semctl","SYS_semget","SYS_semop","SYS_semtimedop","SYS_sendfile","SYS_sendmmsg","SYS_sendmsg","SYS_sendto","SYS_set_mempolicy","SYS_set_mempolicy_home_node","SYS_set_robust_list","SYS_set_thread_area","SYS_set_tid_address","SYS_setdomainname","SYS_setfsgid","SYS_setfsuid","SYS_setgid","SYS_setgroups","SYS_sethostname","SYS_setitimer","SYS_setns","SYS_setpgid","SYS_setpriority","SYS_setregid","SYS_setresgid","SYS_setresuid","SYS_setreuid","SYS_setrlimit","SYS_setsid","SYS_setsockopt","SYS_settimeofday","SYS_setuid","SYS_setxattr","SYS_shmat","SYS_shmctl","SYS_shmdt","SYS_shmget","SYS_shutdown","SYS_sigaltstack","SYS_signalfd","SYS_signalfd4","SYS_socket","SYS_socketpair","SYS_splice","SYS_stat","SYS_statfs","SYS_statx","SYS_swapoff","SYS_swapon","SYS_symlink","SYS_symlinkat","SYS_sync","SYS_sync_file_range","SYS_syncfs","SYS_sysfs","SYS_sysinfo","SYS_syslog","SYS_tee","SYS_tgkill","SYS_time","SYS_timer_create","SYS_timer_delete","SYS_timer_getoverrun","SYS_timer_gettime","SYS_timer_settime","SYS_timerfd_create","SYS_timerfd_gettime","SYS_timerfd_settime","SYS_times","SYS_tkill","SYS_truncate","SYS_tuxcall","SYS_umask","SYS_umount2","SYS_uname","SYS_unlink","SYS_unlinkat","SYS_unshare","SYS_uselib","SYS_userfaultfd","SYS_ustat","SYS_utime","SYS_utimensat","SYS_utimes","SYS_vfork","SYS_vhangup","SYS_vmsplice","SYS_vserver","SYS_wait4","SYS_waitid","SYS_write","SYS_writev","S_IEXEC","S_IFBLK","S_IFCHR","S_IFDIR","S_IFIFO","S_IFLNK","S_IFMT","S_IFREG","S_IFSOCK","S_IREAD","S_IRGRP","S_IROTH","S_IRUSR","S_IRWXG","S_IRWXO","S_IRWXU","S_ISGID","S_ISUID","S_ISVTX","S_IWGRP","S_IWOTH","S_IWRITE","S_IWUSR","S_IXGRP","S_IXOTH","S_IXUSR","TAB0","TAB1","TAB2","TAB3","TABDLY","TCA_CHAIN","TCA_DUMP_INVISIBLE","TCA_FCNT","TCA_HW_OFFLOAD","TCA_KIND","TCA_OPTIONS","TCA_PAD","TCA_RATE","TCA_STAB","TCA_STATS","TCA_STATS2","TCA_UNSPEC","TCA_XSTATS","TCFLSH","TCGETA","TCGETS","TCGETS2","TCGETX","TCIFLUSH","TCIOFF","TCIOFLUSH","TCION","TCOFLUSH","TCOOFF","TCOON","TCP_CC_INFO","TCP_CM_INQ","TCP_CONGESTION","TCP_COOKIE_TRANSACTIONS","TCP_CORK","TCP_DEFER_ACCEPT","TCP_FASTOPEN","TCP_FASTOPEN_CONNECT","TCP_FASTOPEN_KEY","TCP_FASTOPEN_NO_COOKIE","TCP_INFO","TCP_INQ","TCP_KEEPCNT","TCP_KEEPIDLE","TCP_KEEPINTVL","TCP_LINGER2","TCP_MAXSEG","TCP_MD5SIG","TCP_MD5SIG_EXT","TCP_MD5SIG_MAXKEYLEN","TCP_NODELAY","TCP_NOTSENT_LOWAT","TCP_QUEUE_SEQ","TCP_QUICKACK","TCP_REPAIR","TCP_REPAIR_OPTIONS","TCP_REPAIR_QUEUE","TCP_REPAIR_WINDOW","TCP_SAVED_SYN","TCP_SAVE_SYN","TCP_SYNCNT","TCP_THIN_DUPACK","TCP_THIN_LINEAR_TIMEOUTS","TCP_TIMESTAMP","TCP_ULP","TCP_USER_TIMEOUT","TCP_WINDOW_CLAMP","TCP_ZEROCOPY_RECEIVE","TCSADRAIN","TCSAFLUSH","TCSANOW","TCSBRK","TCSBRKP","TCSETA","TCSETAF","TCSETAW","TCSETS","TCSETS2","TCSETSF","TCSETSF2","TCSETSW","TCSETSW2","TCSETX","TCSETXF","TCSETXW","TCXONC","TFD_CLOEXEC","TFD_NONBLOCK","TFD_TIMER_ABSTIME","TFD_TIMER_CANCEL_ON_SET","THOUSEP","TIMER_ABSTIME","TIME_BAD","TIME_DEL","TIME_ERROR","TIME_INS","TIME_OK","TIME_OOP","TIME_WAIT","TIOCCBRK","TIOCCONS","TIOCEXCL","TIOCGDEV","TIOCGETD","TIOCGEXCL","TIOCGICOUNT","TIOCGLCKTRMIOS","TIOCGPGRP","TIOCGPKT","TIOCGPTLCK","TIOCGPTN","TIOCGPTPEER","TIOCGRS485","TIOCGSERIAL","TIOCGSID","TIOCGSOFTCAR","TIOCGWINSZ","TIOCINQ","TIOCLINUX","TIOCMBIC","TIOCMBIS","TIOCMGET","TIOCMIWAIT","TIOCMSET","TIOCM_CAR","TIOCM_CD","TIOCM_CTS","TIOCM_DSR","TIOCM_DTR","TIOCM_LE","TIOCM_RI","TIOCM_RNG","TIOCM_RTS","TIOCM_SR","TIOCM_ST","TIOCNOTTY","TIOCNXCL","TIOCOUTQ","TIOCPKT","TIOCSBRK","TIOCSCTTY","TIOCSERCONFIG","TIOCSERGETLSR","TIOCSERGETMULTI","TIOCSERGSTRUCT","TIOCSERGWILD","TIOCSERSETMULTI","TIOCSERSWILD","TIOCSETD","TIOCSIG","TIOCSLCKTRMIOS","TIOCSPGRP","TIOCSPTLCK","TIOCSRS485","TIOCSSERIAL","TIOCSSOFTCAR","TIOCSTI","TIOCSWINSZ","TIOCVHANGUP","TMPFS_MAGIC","TMP_MAX","TOSTOP","TRACEFS_MAGIC","TUN_READQ_SIZE","TUN_TAP_DEV","TUN_TUN_DEV","TUN_TYPE_MASK","T_FMT","T_FMT_AMPM","UDF_SUPER_MAGIC","UDP_CORK","UDP_ENCAP","UDP_GRO","UDP_NO_CHECK6_RX","UDP_NO_CHECK6_TX","UDP_SEGMENT","UINPUT_MAX_NAME_SIZE","UINPUT_VERSION","UIO_MAXIOV","UMOUNT_NOFOLLOW","UNAME26","USBDEVICE_SUPER_MAGIC","USER_PROCESS","USRQUOTA","UTIME_NOW","UTIME_OMIT","VDISCARD","VEOF","VEOL","VEOL2","VERASE","VINTR","VKILL","VLNEXT","VMADDR_CID_ANY","VMADDR_CID_HOST","VMADDR_CID_HYPERVISOR","VMADDR_CID_LOCAL","VMADDR_CID_RESERVED","VMADDR_PORT_ANY","VMIN","VQUIT","VREPRINT","VSTART","VSTOP","VSUSP","VSWTC","VT0","VT1","VTDLY","VTIME","VWERASE","WCONTINUED","WCOREDUMP","WEXITED","WEXITSTATUS","WHOLE_SECONDS","WIFCONTINUED","WIFEXITED","WIFSIGNALED","WIFSTOPPED","WNOHANG","WNOWAIT","WSTOPPED","WSTOPSIG","WTERMSIG","WUNTRACED","W_EXITCODE","W_OK","W_STOPCODE","XATTR_CREATE","XATTR_REPLACE","XENFS_SUPER_MAGIC","XFS_SUPER_MAGIC","XTABS","X_OK","YESEXPR","YESSTR","_IOFBF","_IOLBF","_IONBF","_PC_2_SYMLINKS","_PC_ALLOC_SIZE_MIN","_PC_ASYNC_IO","_PC_CHOWN_RESTRICTED","_PC_FILESIZEBITS","_PC_LINK_MAX","_PC_MAX_CANON","_PC_MAX_INPUT","_PC_NAME_MAX","_PC_NO_TRUNC","_PC_PATH_MAX","_PC_PIPE_BUF","_PC_PRIO_IO","_PC_REC_INCR_XFER_SIZE","_PC_REC_MAX_XFER_SIZE","_PC_REC_MIN_XFER_SIZE","_PC_REC_XFER_ALIGN","_PC_SOCK_MAXBUF","_PC_SYMLINK_MAX","_PC_SYNC_IO","_PC_VDISABLE","_POSIX_VDISABLE","_SC_2_CHAR_TERM","_SC_2_C_BIND","_SC_2_C_DEV","_SC_2_C_VERSION","_SC_2_FORT_DEV","_SC_2_FORT_RUN","_SC_2_LOCALEDEF","_SC_2_PBS","_SC_2_PBS_ACCOUNTING","_SC_2_PBS_CHECKPOINT","_SC_2_PBS_LOCATE","_SC_2_PBS_MESSAGE","_SC_2_PBS_TRACK","_SC_2_SW_DEV","_SC_2_UPE","_SC_2_VERSION","_SC_ADVISORY_INFO","_SC_AIO_LISTIO_MAX","_SC_AIO_MAX","_SC_AIO_PRIO_DELTA_MAX","_SC_ARG_MAX","_SC_ASYNCHRONOUS_IO","_SC_ATEXIT_MAX","_SC_AVPHYS_PAGES","_SC_BARRIERS","_SC_BASE","_SC_BC_BASE_MAX","_SC_BC_DIM_MAX","_SC_BC_SCALE_MAX","_SC_BC_STRING_MAX","_SC_CHARCLASS_NAME_MAX","_SC_CHAR_BIT","_SC_CHAR_MAX","_SC_CHAR_MIN","_SC_CHILD_MAX","_SC_CLK_TCK","_SC_CLOCK_SELECTION","_SC_COLL_WEIGHTS_MAX","_SC_CPUTIME","_SC_C_LANG_SUPPORT","_SC_C_LANG_SUPPORT_R","_SC_DELAYTIMER_MAX","_SC_DEVICE_IO","_SC_DEVICE_SPECIFIC","_SC_DEVICE_SPECIFIC_R","_SC_EQUIV_CLASS_MAX","_SC_EXPR_NEST_MAX","_SC_FD_MGMT","_SC_FIFO","_SC_FILE_ATTRIBUTES","_SC_FILE_LOCKING","_SC_FILE_SYSTEM","_SC_FSYNC","_SC_GETGR_R_SIZE_MAX","_SC_GETPW_R_SIZE_MAX","_SC_HOST_NAME_MAX","_SC_INT_MAX","_SC_INT_MIN","_SC_IOV_MAX","_SC_IPV6","_SC_JOB_CONTROL","_SC_LEVEL1_DCACHE_ASSOC","_SC_LEVEL1_DCACHE_LINESIZE","_SC_LEVEL1_DCACHE_SIZE","_SC_LEVEL1_ICACHE_ASSOC","_SC_LEVEL1_ICACHE_LINESIZE","_SC_LEVEL1_ICACHE_SIZE","_SC_LEVEL2_CACHE_ASSOC","_SC_LEVEL2_CACHE_LINESIZE","_SC_LEVEL2_CACHE_SIZE","_SC_LEVEL3_CACHE_ASSOC","_SC_LEVEL3_CACHE_LINESIZE","_SC_LEVEL3_CACHE_SIZE","_SC_LEVEL4_CACHE_ASSOC","_SC_LEVEL4_CACHE_LINESIZE","_SC_LEVEL4_CACHE_SIZE","_SC_LINE_MAX","_SC_LOGIN_NAME_MAX","_SC_LONG_BIT","_SC_MAPPED_FILES","_SC_MB_LEN_MAX","_SC_MEMLOCK","_SC_MEMLOCK_RANGE","_SC_MEMORY_PROTECTION","_SC_MESSAGE_PASSING","_SC_MONOTONIC_CLOCK","_SC_MQ_OPEN_MAX","_SC_MQ_PRIO_MAX","_SC_MULTI_PROCESS","_SC_NETWORKING","_SC_NGROUPS_MAX","_SC_NL_ARGMAX","_SC_NL_LANGMAX","_SC_NL_MSGMAX","_SC_NL_NMAX","_SC_NL_SETMAX","_SC_NL_TEXTMAX","_SC_NPROCESSORS_CONF","_SC_NPROCESSORS_ONLN","_SC_NZERO","_SC_OPEN_MAX","_SC_PAGESIZE","_SC_PAGE_SIZE","_SC_PASS_MAX","_SC_PHYS_PAGES","_SC_PII","_SC_PII_INTERNET","_SC_PII_INTERNET_DGRAM","_SC_PII_INTERNET_STREAM","_SC_PII_OSI","_SC_PII_OSI_CLTS","_SC_PII_OSI_COTS","_SC_PII_OSI_M","_SC_PII_SOCKET","_SC_PII_XTI","_SC_PIPE","_SC_POLL","_SC_PRIORITIZED_IO","_SC_PRIORITY_SCHEDULING","_SC_RAW_SOCKETS","_SC_READER_WRITER_LOCKS","_SC_REALTIME_SIGNALS","_SC_REGEXP","_SC_REGEX_VERSION","_SC_RE_DUP_MAX","_SC_RTSIG_MAX","_SC_SAVED_IDS","_SC_SCHAR_MAX","_SC_SCHAR_MIN","_SC_SELECT","_SC_SEMAPHORES","_SC_SEM_NSEMS_MAX","_SC_SEM_VALUE_MAX","_SC_SHARED_MEMORY_OBJECTS","_SC_SHELL","_SC_SHRT_MAX","_SC_SHRT_MIN","_SC_SIGNALS","_SC_SIGQUEUE_MAX","_SC_SINGLE_PROCESS","_SC_SPAWN","_SC_SPIN_LOCKS","_SC_SPORADIC_SERVER","_SC_SSIZE_MAX","_SC_SS_REPL_MAX","_SC_STREAMS","_SC_STREAM_MAX","_SC_SYMLOOP_MAX","_SC_SYNCHRONIZED_IO","_SC_SYSTEM_DATABASE","_SC_SYSTEM_DATABASE_R","_SC_THREADS","_SC_THREAD_ATTR_STACKADDR","_SC_THREAD_ATTR_STACKSIZE","_SC_THREAD_CPUTIME","_SC_THREAD_DESTRUCTOR_ITERATIONS","_SC_THREAD_KEYS_MAX","_SC_THREAD_PRIORITY_SCHEDULING","_SC_THREAD_PRIO_INHERIT","_SC_THREAD_PRIO_PROTECT","_SC_THREAD_PROCESS_SHARED","_SC_THREAD_ROBUST_PRIO_INHERIT","_SC_THREAD_ROBUST_PRIO_PROTECT","_SC_THREAD_SAFE_FUNCTIONS","_SC_THREAD_SPORADIC_SERVER","_SC_THREAD_STACK_MIN","_SC_THREAD_THREADS_MAX","_SC_TIMEOUTS","_SC_TIMERS","_SC_TIMER_MAX","_SC_TRACE","_SC_TRACE_EVENT_FILTER","_SC_TRACE_EVENT_NAME_MAX","_SC_TRACE_INHERIT","_SC_TRACE_LOG","_SC_TRACE_NAME_MAX","_SC_TRACE_SYS_MAX","_SC_TRACE_USER_EVENT_MAX","_SC_TTY_NAME_MAX","_SC_TYPED_MEMORY_OBJECTS","_SC_TZNAME_MAX","_SC_T_IOV_MAX","_SC_UCHAR_MAX","_SC_UINT_MAX","_SC_UIO_MAXIOV","_SC_ULONG_MAX","_SC_USER_GROUPS","_SC_USER_GROUPS_R","_SC_USHRT_MAX","_SC_V6_ILP32_OFF32","_SC_V6_ILP32_OFFBIG","_SC_V6_LP64_OFF64","_SC_V6_LPBIG_OFFBIG","_SC_V7_ILP32_OFF32","_SC_V7_ILP32_OFFBIG","_SC_V7_LP64_OFF64","_SC_V7_LPBIG_OFFBIG","_SC_VERSION","_SC_WORD_BIT","_SC_XBS5_ILP32_OFF32","_SC_XBS5_ILP32_OFFBIG","_SC_XBS5_LP64_OFF64","_SC_XBS5_LPBIG_OFFBIG","_SC_XOPEN_CRYPT","_SC_XOPEN_ENH_I18N","_SC_XOPEN_LEGACY","_SC_XOPEN_REALTIME","_SC_XOPEN_REALTIME_THREADS","_SC_XOPEN_SHM","_SC_XOPEN_STREAMS","_SC_XOPEN_UNIX","_SC_XOPEN_VERSION","_SC_XOPEN_XCU_VERSION","_SC_XOPEN_XPG2","_SC_XOPEN_XPG3","_SC_XOPEN_XPG4","__NFT_REG_MAX","__SIZEOF_PTHREAD_BARRIERATTR_T","__SIZEOF_PTHREAD_BARRIER_T","__SIZEOF_PTHREAD_CONDATTR_T","__SIZEOF_PTHREAD_COND_T","__SIZEOF_PTHREAD_MUTEXATTR_T","__SIZEOF_PTHREAD_MUTEX_T","__SIZEOF_PTHREAD_RWLOCKATTR_T","__SIZEOF_PTHREAD_RWLOCK_T","__UT_HOSTSIZE","__UT_LINESIZE","__UT_NAMESIZE","__WALL","__WCLONE","__WNOTHREAD","__c_anonymous_ifr_ifru","__c_anonymous_ifru_map","__c_anonymous_ptrace_syscall_info_data","__c_anonymous_ptrace_syscall_info_entry","__c_anonymous_ptrace_syscall_info_exit","__c_anonymous_ptrace_syscall_info_seccomp","__c_anonymous_sockaddr_can_can_addr","__c_anonymous_sockaddr_can_j1939","__c_anonymous_sockaddr_can_tp","__errno_location","__exit_status","__fsword_t","__glibc_reserved1","__glibc_reserved2","__glibc_reserved3","__glibc_reserved4","__key","__priority_which_t","__rlimit_resource_t","__s16","__s32","__s64","__seq","__statx_timestamp_pad1","__syscall_ulong_t","__timeval","__u16","__u32","__u64","__u8","__unused1","__unused10","__unused11","__unused2","__unused3","__unused4","__unused5","__unused6","__unused7","__unused8","__unused9","_exit","_f","_libc_fpstate","_libc_fpxreg","_libc_xmmreg","_st","_xmm","abort","abs","absflat","absfuzz","absinfo","absmax","absmin","accept","accept4","access","acct","actime","addmntent","addr","addr","addr_mask","addrinfo","adjtime","adjtimex","af","af_alg_iv","ai_addr","ai_addrlen","ai_canonname","ai_family","ai_flags","ai_next","ai_protocol","ai_socktype","aio_buf","aio_cancel","aio_error","aio_fildes","aio_fsync","aio_lio_opcode","aio_nbytes","aio_offset","aio_read","aio_reqprio","aio_return","aio_sigevent","aio_suspend","aio_write","aiocb","alarm","ar_hln","ar_hrd","ar_op","ar_pln","ar_pro","arch","arch","arena","arena","args","args","args","arp_dev","arp_flags","arp_flags","arp_ha","arp_ha","arp_netmask","arp_netmask","arp_pa","arp_pa","arpd_request","arphdr","arpreq","arpreq_old","asctime_r","atexit","atof","atoi","atol","atoll","attack_length","attack_level","auth_keynumber","backtrace","base_addr","bind","blkcnt64_t","blkcnt_t","blksize_t","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","brk","bsearch","bufferram","bustype","button","c_cc","c_cc","c_cflag","c_cflag","c_char","c_double","c_float","c_iflag","c_iflag","c_int","c_ispeed","c_ispeed","c_lflag","c_lflag","c_line","c_line","c_long","c_longlong","c_oflag","c_oflag","c_ospeed","c_ospeed","c_schar","c_short","c_uchar","c_uint","c_ulong","c_ulonglong","c_ushort","c_void","calcnt","calloc","can_addr","can_dlc","can_err_mask_t","can_family","can_filter","can_frame","can_id","can_id","can_id","can_ifindex","can_mask","canfd_frame","canid_t","canxl_frame","cc_t","center","cfgetispeed","cfgetospeed","cfmakeraw","cfsetispeed","cfsetospeed","cfsetspeed","cgid","cgroup","ch_addralign","ch_addralign","ch_reserved","ch_size","ch_size","ch_type","ch_type","chdir","child_tid","chmod","chown","chroot","clearenv","clearerr","clock_adjtime","clock_getcpuclockid","clock_getres","clock_gettime","clock_nanosleep","clock_settime","clock_t","clockid","clockid_t","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_args","close","closedir","closelog","cmd","cmsg_len","cmsg_level","cmsg_type","cmsghdr","code","code","code","codes_ptr","codes_size","connect","constant","cookie","copy_file_range","cpu_set_t","creat","creat64","cs","ctermid","ctime_r","cuid","currency_symbol","custom_data","custom_len","cwd","cwd","d_ino","d_ino","d_name","d_name","d_off","d_off","d_reclen","d_reclen","d_type","d_type","daemon","data","data","data","deadband","decimal_point","delay","dest_offset","dev","dev_t","difftime","direction","dirent","dirent64","dirfd","dirname","dl_iterate_phdr","dl_phdr_info","dladdr","dladdr1","dlclose","dlerror","dli_fbase","dli_fname","dli_saddr","dli_sname","dlinfo","dlmopen","dlopen","dlpi_addr","dlpi_adds","dlpi_name","dlpi_phdr","dlpi_phnum","dlpi_subs","dlpi_tls_data","dlpi_tls_modid","dlsym","dma","domainname","dqb_bhardlimit","dqb_bsoftlimit","dqb_btime","dqb_curinodes","dqb_curspace","dqb_ihardlimit","dqb_isoftlimit","dqb_itime","dqb_valid","dqblk","drand48","ds","dup","dup2","dup3","duplocale","e_ehsize","e_ehsize","e_entry","e_entry","e_exit","e_flags","e_flags","e_ident","e_ident","e_machine","e_machine","e_phentsize","e_phentsize","e_phnum","e_phnum","e_phoff","e_phoff","e_shentsize","e_shentsize","e_shnum","e_shnum","e_shoff","e_shoff","e_shstrndx","e_shstrndx","e_termination","e_type","e_type","e_version","e_version","eaccess","ee_code","ee_data","ee_errno","ee_info","ee_origin","ee_pad","ee_type","effect","effect_id","eflags","element","end_level","endgrent","endmntent","endpwent","endservent","endspent","endutxent","entry","envelope","envelope","envelope","epoll_create","epoll_create1","epoll_ctl","epoll_event","epoll_pwait","epoll_wait","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","erand48","errcnt","error","es","esterror","esterror","euidaccess","event_len","eventfd","events","events","execl","execle","execlp","execv","execve","execvp","execvpe","exit","exit","exit_signal","explicit_bzero","exponent","f_bavail","f_bavail","f_bavail","f_bavail","f_bfree","f_bfree","f_bfree","f_bfree","f_blocks","f_blocks","f_blocks","f_blocks","f_bsize","f_bsize","f_bsize","f_bsize","f_favail","f_favail","f_ffree","f_ffree","f_ffree","f_ffree","f_files","f_files","f_files","f_files","f_flag","f_flag","f_flags","f_frsize","f_frsize","f_frsize","f_frsize","f_fsid","f_fsid","f_fsid","f_fsid","f_namelen","f_namelen","f_namemax","f_namemax","f_spare","f_type","f_type","faccessat","fade_length","fade_level","fallocate","fallocate64","fanotify_event_metadata","fanotify_init","fanotify_mark","fanotify_response","fchdir","fchmod","fchmodat","fchown","fchownat","fclose","fcntl","fd","fd","fd","fd_set","fdatasync","fdopen","fdopendir","feof","ferror","fexecve","ff_condition_effect","ff_constant_effect","ff_effect","ff_effects_max","ff_effects_max","ff_envelope","ff_periodic_effect","ff_ramp_effect","ff_replay","ff_rumble_effect","ff_trigger","fflush","fgetc","fgetgrent_r","fgetpos","fgetpos64","fgetpwent_r","fgets","fgetspent_r","fgetxattr","file_clone_range","fileno","filter","flag","flags","flags","flags","flags","flags","flags","flags","flags","flags","flat","flistxattr","flock","flock","flock64","fmemopen","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fop","fop","fopen","fopen64","fordblks","fordblks","fork","forkpty","fpathconf","fpos64_t","fpos_t","fpregs","fprintf","fputc","fputs","frac_digits","fread","fread_unlocked","free","freeaddrinfo","freehigh","freeifaddrs","freelocale","freeram","freeswap","fremovexattr","freopen","freopen64","freq","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","fs","fs_base","fsblkcnt_t","fscanf","fseek","fseeko","fseeko64","fsetpos","fsetpos64","fsetxattr","fsfilcnt_t","fsid_t","fsmblks","fsmblks","fstat","fstat64","fstatat","fstatat64","fstatfs","fstatfs64","fstatvfs","fstatvfs64","fsync","ftell","ftello","ftello64","ftok","ftruncate","ftruncate64","ftw","ftw","futimens","futimes","fuzz","fwrite","gai_strerror","genlmsghdr","getaddrinfo","getauxval","getchar","getchar_unlocked","getcontext","getcwd","getdomainname","getdtablesize","getegid","getentropy","getenv","geteuid","getgid","getgrent","getgrent_r","getgrgid","getgrgid_r","getgrnam","getgrnam_r","getgrouplist","getgroups","gethostid","gethostname","getifaddrs","getline","getloadavg","getlogin","getmntent","getmntent_r","getnameinfo","getopt","getopt_long","getpeername","getpgid","getpgrp","getpid","getppid","getpriority","getprotobyname","getprotobynumber","getpt","getpwent","getpwent_r","getpwnam","getpwnam_r","getpwuid","getpwuid_r","getrandom","getresgid","getresuid","getrlimit","getrlimit64","getrusage","getservbyname","getservbyport","getservent","getsid","getsockname","getsockopt","getspent","getspent_r","getspnam","getspnam_r","gettid","gettimeofday","getuid","getutxent","getutxid","getutxline","getxattr","gid","gid","gid_t","gl_flags","gl_flags","gl_offs","gl_offs","gl_pathc","gl_pathc","gl_pathv","gl_pathv","glob","glob64","glob64_t","glob_t","globfree","globfree64","gmtime","gmtime_r","gnu_basename","gnu_get_libc_release","gnu_get_libc_version","gr_gid","gr_mem","gr_name","gr_passwd","grantpt","greg_t","gregs","group","group","grouping","gs","gs_base","h_addr_list","h_addrtype","h_aliases","h_length","h_name","ha","has_arg","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hasmntopt","hblkhd","hblkhd","hblks","hblks","hostent","hstrerror","hwtstamp_config","i387","iconv","iconv_close","iconv_open","iconv_t","id","id","id","id_t","idtype_t","if_freenameindex","if_index","if_indextoname","if_name","if_nameindex","if_nameindex","if_nametoindex","ifa_addr","ifa_data","ifa_flags","ifa_ifu","ifa_name","ifa_netmask","ifa_next","ifaddrs","ifr6_addr","ifr6_ifindex","ifr6_prefixlen","ifr_ifru","ifr_name","ifreq","ifru_addr","ifru_broadaddr","ifru_data","ifru_dstaddr","ifru_flags","ifru_hwaddr","ifru_ifindex","ifru_map","ifru_metric","ifru_mtu","ifru_netmask","ifru_newname","ifru_slave","imr_address","imr_ifindex","imr_interface","imr_interface","imr_multiaddr","imr_multiaddr","imr_multiaddr","imr_sourceaddr","in6_addr","in6_ifreq","in6_pktinfo","in6_rtmsg","in_addr","in_addr_t","in_pktinfo","in_port_t","index","initgroups","ino64_t","ino_t","inotify_add_watch","inotify_event","inotify_init","inotify_init1","inotify_rm_watch","input_absinfo","input_event","input_id","input_keymap_entry","input_mask","instruction_pointer","instruction_pointer","int16_t","int32_t","int64_t","int8_t","int_curr_symbol","int_frac_digits","int_n_cs_precedes","int_n_sep_by_space","int_n_sign_posn","int_p_cs_precedes","int_p_sep_by_space","int_p_sign_posn","interval","intmax_t","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","intptr_t","ioctl","ioperm","iopl","iov_base","iov_len","iovec","ip","ip_mreq","ip_mreq_source","ip_mreqn","ipc_perm","ipi6_addr","ipi6_ifindex","ipi_addr","ipi_ifindex","ipi_spec_dst","ipv6_mreq","ipv6mr_interface","ipv6mr_multiaddr","irq","is_error","isalnum","isalpha","isatty","isblank","iscntrl","isdigit","isgraph","islower","isprint","ispunct","isspace","isupper","isxdigit","it_interval","it_interval","it_value","it_value","itimerspec","itimerval","iv","ivlen","j1939","j1939_filter","jf","jitcnt","jitter","jrand48","jt","k","keepcost","keepcost","key_t","keycode","kill","killpg","l_len","l_len","l_linger","l_onoff","l_pid","l_pid","l_start","l_start","l_type","l_type","l_whence","l_whence","labs","lchown","lcong48","lconv","left_coeff","left_saturation","len","len","len","len","len","length","level","lgetxattr","linger","link","linkat","lio_listio","listen","listxattr","llistxattr","loads","locale_t","localeconv","localtime","localtime_r","lockf","loff_t","login_tty","lrand48","lremovexattr","lseek","lseek64","lsetxattr","lstat","lstat64","lutimes","machine","madvise","magic","magnitude","major","makecontext","makedev","mallinfo","mallinfo","mallinfo2","mallinfo2","malloc","malloc_info","malloc_trim","malloc_usable_size","mallopt","mask","mask","max_align_t","maxerror","maxerror","maximum","mcontext_t","mem_end","mem_start","mem_unit","memalign","memchr","memcmp","memcpy","memfd_create","memmem","memmove","memrchr","memset","metadata_len","mincore","minimum","minor","mkdir","mkdirat","mkdtemp","mkfifo","mkfifoat","mknod","mknodat","mkostemp","mkostemps","mkstemp","mkstemps","mktime","mlock","mlock2","mlockall","mmap","mmap64","mmsghdr","mnt_dir","mnt_freq","mnt_fsname","mnt_opts","mnt_passno","mnt_type","mntent","mode","mode","mode_t","modes","modtime","mon_decimal_point","mon_grouping","mon_thousands_sep","mount","mprotect","mq_attr","mq_close","mq_curmsgs","mq_flags","mq_getattr","mq_maxmsg","mq_msgsize","mq_open","mq_receive","mq_send","mq_setattr","mq_timedreceive","mq_timedsend","mq_unlink","mqd_t","mr_address","mr_alen","mr_ifindex","mr_type","mrand48","mremap","msg","msg_control","msg_controllen","msg_ctime","msg_flags","msg_hdr","msg_iov","msg_iovlen","msg_len","msg_lrpid","msg_lspid","msg_name","msg_namelen","msg_perm","msg_qbytes","msg_qnum","msg_rtime","msg_stime","msgctl","msgget","msghdr","msginfo","msglen_t","msgmap","msgmax","msgmnb","msgmni","msgpool","msgqnum_t","msgrcv","msgseg","msgsnd","msgssz","msgtql","msqid_ds","msync","munlock","munlockall","munmap","mxcr_mask","mxcr_mask","mxcsr","mxcsr","n_cs_precedes","n_sep_by_space","n_sign_posn","name","name","name","name","name","name_mask","name_t","nanosleep","negative_sign","newlocale","nfds_t","nice","nl_family","nl_groups","nl_item","nl_langinfo","nl_langinfo_l","nl_mmap_hdr","nl_mmap_req","nl_pid","nl_pktinfo","nla_len","nla_type","nlattr","nlink_t","nlmsg_flags","nlmsg_len","nlmsg_pid","nlmsg_seq","nlmsg_type","nlmsgerr","nlmsghdr","nm_block_nr","nm_block_size","nm_frame_nr","nm_frame_size","nm_gid","nm_group","nm_len","nm_pid","nm_status","nm_uid","nodename","nr","nr","nr","nr","nrand48","ntp_adjtime","ntp_gettime","ntptimeval","nxt_assoc_id","nxt_flags","nxt_length","nxt_ppid","nxt_sid","off","off64_t","off_t","offset","offset","old","op","open","open64","open_how","open_memstream","open_wmemstream","openat","openat64","opendir","openlog","openpty","option","ordblks","ordblks","orig_rax","p_aliases","p_align","p_align","p_cs_precedes","p_filesz","p_filesz","p_flags","p_flags","p_memsz","p_memsz","p_name","p_offset","p_offset","p_paddr","p_paddr","p_proto","p_sep_by_space","p_sign_posn","p_type","p_type","p_vaddr","p_vaddr","packet_mreq","pad","pad","pad","parent_tid","passwd","pathconf","pause","pclose","period","perror","personality","pgn","pgn","pgn_mask","pgn_t","phase","pid","pid","pid_t","pidfd","pipe","pipe2","poll","pollfd","popen","port","positive_sign","posix_basename","posix_fadvise","posix_fadvise64","posix_fallocate","posix_fallocate64","posix_madvise","posix_memalign","posix_openpt","posix_spawn","posix_spawn_file_actions_addchdir_np","posix_spawn_file_actions_addclose","posix_spawn_file_actions_addclosefrom_np","posix_spawn_file_actions_adddup2","posix_spawn_file_actions_addfchdir_np","posix_spawn_file_actions_addopen","posix_spawn_file_actions_addtcsetpgrp_np","posix_spawn_file_actions_destroy","posix_spawn_file_actions_init","posix_spawn_file_actions_t","posix_spawnattr_destroy","posix_spawnattr_getflags","posix_spawnattr_getpgroup","posix_spawnattr_getschedparam","posix_spawnattr_getschedpolicy","posix_spawnattr_getsigdefault","posix_spawnattr_getsigmask","posix_spawnattr_init","posix_spawnattr_setflags","posix_spawnattr_setpgroup","posix_spawnattr_setschedparam","posix_spawnattr_setschedpolicy","posix_spawnattr_setsigdefault","posix_spawnattr_setsigmask","posix_spawnattr_t","posix_spawnp","ppoll","ppsfreq","pr_policy","pr_value","prctl","pread","pread64","preadv","preadv2","preadv64","preadv64v2","precision","printf","prio","priority_t","prlimit","prlimit64","process_vm_readv","process_vm_writev","procs","product","protoent","pselect","pthread_atfork","pthread_attr_destroy","pthread_attr_getaffinity_np","pthread_attr_getguardsize","pthread_attr_getstack","pthread_attr_init","pthread_attr_setaffinity_np","pthread_attr_setdetachstate","pthread_attr_setstacksize","pthread_attr_t","pthread_barrier_destroy","pthread_barrier_init","pthread_barrier_t","pthread_barrier_wait","pthread_barrierattr_destroy","pthread_barrierattr_getpshared","pthread_barrierattr_init","pthread_barrierattr_setpshared","pthread_barrierattr_t","pthread_cancel","pthread_cond_broadcast","pthread_cond_destroy","pthread_cond_init","pthread_cond_signal","pthread_cond_t","pthread_cond_timedwait","pthread_cond_wait","pthread_condattr_destroy","pthread_condattr_getclock","pthread_condattr_getpshared","pthread_condattr_init","pthread_condattr_setclock","pthread_condattr_setpshared","pthread_condattr_t","pthread_create","pthread_detach","pthread_exit","pthread_getaffinity_np","pthread_getattr_np","pthread_getcpuclockid","pthread_getname_np","pthread_getschedparam","pthread_getspecific","pthread_join","pthread_key_create","pthread_key_delete","pthread_key_t","pthread_kill","pthread_mutex_consistent","pthread_mutex_destroy","pthread_mutex_init","pthread_mutex_lock","pthread_mutex_t","pthread_mutex_timedlock","pthread_mutex_trylock","pthread_mutex_unlock","pthread_mutexattr_destroy","pthread_mutexattr_getprotocol","pthread_mutexattr_getpshared","pthread_mutexattr_getrobust","pthread_mutexattr_init","pthread_mutexattr_setprotocol","pthread_mutexattr_setpshared","pthread_mutexattr_setrobust","pthread_mutexattr_settype","pthread_mutexattr_t","pthread_rwlock_destroy","pthread_rwlock_init","pthread_rwlock_rdlock","pthread_rwlock_t","pthread_rwlock_tryrdlock","pthread_rwlock_trywrlock","pthread_rwlock_unlock","pthread_rwlock_wrlock","pthread_rwlockattr_destroy","pthread_rwlockattr_getkind_np","pthread_rwlockattr_getpshared","pthread_rwlockattr_init","pthread_rwlockattr_setkind_np","pthread_rwlockattr_setpshared","pthread_rwlockattr_t","pthread_self","pthread_setaffinity_np","pthread_setname_np","pthread_setschedparam","pthread_setschedprio","pthread_setspecific","pthread_sigmask","pthread_sigqueue","pthread_spin_destroy","pthread_spin_init","pthread_spin_lock","pthread_spin_trylock","pthread_spin_unlock","pthread_spinlock_t","pthread_t","ptrace","ptrace_peeksiginfo_args","ptrace_rseq_configuration","ptrace_syscall_info","ptrdiff_t","ptsname","ptsname_r","putchar","putchar_unlocked","putenv","putgrent","putpwent","puts","pututxline","pw_dir","pw_gecos","pw_gid","pw_name","pw_passwd","pw_shell","pw_uid","pwrite","pwrite64","pwritev","pwritev2","pwritev64","pwritev64v2","qsort","qsort_r","quotactl","r10","r11","r12","r13","r14","r15","r8","r9","raise","rand","rax","rbp","rbx","rcv_assoc_id","rcv_context","rcv_cumtsn","rcv_flags","rcv_ppid","rcv_sid","rcv_ssn","rcv_tsn","rcx","rdi","rdp","rdp","rdx","read","readahead","readdir","readdir64","readdir64_r","readdir_r","readlink","readlinkat","readv","realloc","reallocarray","realpath","reboot","recv","recvfrom","recvmmsg","recvmsg","regcomp","regerror","regex_t","regexec","regfree","regmatch_t","regoff_t","regs","release","remap_file_pages","remove","removexattr","rename","renameat","renameat2","replay","req","request_id","request_id","res_init","reserved","reserved","resolution","resolve","response","ret_data","retval","retval","revents","rewind","rewinddir","right_coeff","right_saturation","rip","rip","rip","rlim64_t","rlim_cur","rlim_cur","rlim_max","rlim_max","rlim_t","rlimit","rlimit64","rm_eo","rm_so","rmdir","rseq_abi_pointer","rseq_abi_size","rsi","rsp","rt_class","rt_dev","rt_dst","rt_flags","rt_gateway","rt_genmask","rt_irtt","rt_metric","rt_mtu","rt_pad1","rt_pad2","rt_pad3","rt_pad4","rt_tos","rt_window","rtentry","ru_idrss","ru_inblock","ru_isrss","ru_ixrss","ru_majflt","ru_maxrss","ru_minflt","ru_msgrcv","ru_msgsnd","ru_nivcsw","ru_nsignals","ru_nswap","ru_nvcsw","ru_oublock","ru_stime","ru_utime","rusage","rx_filter","rx_id","s6_addr","s_addr","s_aliases","s_name","s_port","s_proto","sa_data","sa_family","sa_family_t","sa_flags","sa_mask","sa_restorer","sa_sigaction","salg_family","salg_feat","salg_mask","salg_name","salg_type","sbrk","scancode","scanf","sched_get_priority_max","sched_get_priority_min","sched_getaffinity","sched_getcpu","sched_getparam","sched_getscheduler","sched_param","sched_priority","sched_rr_get_interval","sched_setaffinity","sched_setparam","sched_setscheduler","sched_yield","sctp_assoc_t","sctp_authinfo","sctp_initmsg","sctp_nxtinfo","sctp_prinfo","sctp_rcvinfo","sctp_sndinfo","sctp_sndrcvinfo","sdt","seccomp","seccomp_data","seccomp_data","seccomp_notif","seccomp_notif_resp","seccomp_notif_sizes","seed48","seekdir","select","sem_close","sem_ctime","sem_destroy","sem_flg","sem_getvalue","sem_init","sem_nsems","sem_num","sem_op","sem_open","sem_otime","sem_perm","sem_post","sem_t","sem_timedwait","sem_trywait","sem_unlink","sem_wait","semaem","sembuf","semctl","semget","semid_ds","seminfo","semmap","semmni","semmns","semmnu","semmsl","semop","semopm","semume","semusz","semvmx","send","sendfile","sendfile64","sendmmsg","sendmsg","sendto","servent","set_tid","set_tid_size","setbuf","setcontext","setdomainname","setegid","setenv","seteuid","setfsgid","setfsuid","setgid","setgrent","setgroups","sethostid","sethostname","setlocale","setlogmask","setmntent","setns","setpgid","setpriority","setpwent","setregid","setresgid","setresuid","setreuid","setrlimit","setrlimit64","setservent","setsid","setsockopt","setspent","settimeofday","setuid","setutxent","setvbuf","setxattr","sgetspent_r","sh_addr","sh_addr","sh_addralign","sh_addralign","sh_entsize","sh_entsize","sh_flags","sh_flags","sh_info","sh_info","sh_link","sh_link","sh_name","sh_name","sh_offset","sh_offset","sh_size","sh_size","sh_type","sh_type","sharedram","shift","shm_atime","shm_cpid","shm_ctime","shm_dtime","shm_lpid","shm_nattch","shm_open","shm_perm","shm_segsz","shm_unlink","shmat","shmatt_t","shmctl","shmdt","shmget","shmid_ds","shutdown","si_addr","si_code","si_errno","si_pid","si_signo","si_status","si_stime","si_uid","si_utime","si_value","sigaction","sigaction","sigaddset","sigaltstack","sigdelset","sigemptyset","sigev_notify","sigev_notify_thread_id","sigev_signo","sigev_value","sigevent","sigfillset","sighandler_t","siginfo_t","sigismember","signal","signal","signalfd","signalfd_siginfo","signature","significand","sigpending","sigprocmask","sigset_t","sigsuspend","sigtimedwait","sigval","sigwait","sigwaitinfo","sin6_addr","sin6_family","sin6_flowinfo","sin6_port","sin6_scope_id","sin_addr","sin_family","sin_port","sin_zero","sinfo_assoc_id","sinfo_context","sinfo_cumtsn","sinfo_flags","sinfo_ppid","sinfo_ssn","sinfo_stream","sinfo_timetolive","sinfo_tsn","sinit_max_attempts","sinit_max_init_timeo","sinit_max_instreams","sinit_num_ostreams","sival_ptr","size_t","sleep","sll_addr","sll_family","sll_halen","sll_hatype","sll_ifindex","sll_pkttype","sll_protocol","smblks","smblks","snd_assoc_id","snd_context","snd_flags","snd_ppid","snd_sid","snprintf","sock_extended_err","sock_filter","sock_fprog","sock_txtime","sockaddr","sockaddr_alg","sockaddr_can","sockaddr_in","sockaddr_in6","sockaddr_ll","sockaddr_nl","sockaddr_storage","sockaddr_un","sockaddr_vm","socket","socketpair","socklen_t","sp_expire","sp_flag","sp_inact","sp_lstchg","sp_max","sp_min","sp_namp","sp_pwdp","sp_warn","speed_t","splice","sprintf","spwd","srand","srand48","src_fd","src_length","src_offset","ss","ss_family","ss_flags","ss_size","ss_sp","sscanf","ssi_addr","ssi_addr_lsb","ssi_arch","ssi_band","ssi_call_addr","ssi_code","ssi_errno","ssi_fd","ssi_int","ssi_overrun","ssi_pid","ssi_ptr","ssi_signo","ssi_status","ssi_stime","ssi_syscall","ssi_tid","ssi_trapno","ssi_uid","ssi_utime","ssize_t","st_atime","st_atime","st_atime_nsec","st_atime_nsec","st_blksize","st_blksize","st_blocks","st_blocks","st_ctime","st_ctime","st_ctime_nsec","st_ctime_nsec","st_dev","st_dev","st_gid","st_gid","st_info","st_info","st_ino","st_ino","st_mode","st_mode","st_mtime","st_mtime","st_mtime_nsec","st_mtime_nsec","st_name","st_name","st_nlink","st_nlink","st_other","st_other","st_rdev","st_rdev","st_shndx","st_shndx","st_size","st_size","st_size","st_size","st_space","st_uid","st_uid","st_value","st_value","stabil","stack","stack_pointer","stack_size","stack_t","stamp","start_code","start_level","start_stack","stat","stat","stat64","stat64","statfs","statfs","statfs64","statfs64","status","statvfs","statvfs","statvfs64","statvfs64","statx","statx","statx_timestamp","stbcnt","stpcpy","stpncpy","strcasecmp","strcasestr","strcat","strchr","strchrnul","strcmp","strcoll","strcpy","strcspn","strdup","strerror","strerror_r","strftime","strlen","strncasecmp","strncat","strncmp","strncpy","strndup","strnlen","strong_magnitude","strpbrk","strptime","strrchr","strsignal","strspn","strstr","strtod","strtof","strtok","strtok_r","strtol","strtoll","strtoul","strtoull","strxfrm","stx_atime","stx_attributes","stx_attributes_mask","stx_blksize","stx_blocks","stx_btime","stx_ctime","stx_dev_major","stx_dev_minor","stx_dio_mem_align","stx_dio_offset_align","stx_gid","stx_ino","stx_mask","stx_mnt_id","stx_mode","stx_mtime","stx_nlink","stx_rdev_major","stx_rdev_minor","stx_size","stx_uid","sun_family","sun_path","suseconds_t","sval","svm_cid","svm_family","svm_port","svm_reserved1","svm_zero","swapcontext","swapoff","swapon","swd","swd","symlink","symlinkat","sync","sync_file_range","syncfs","syscall","sysconf","sysctl","sysinfo","sysinfo","syslog","sysname","system","tai","tai","tcdrain","tcflag_t","tcflow","tcflush","tcgetattr","tcgetpgrp","tcgetsid","tcsendbreak","tcsetattr","tcsetpgrp","tee","telldir","termios","termios2","thousands_sep","tick","time","time","time","time","time_t","timegm","timer_create","timer_delete","timer_getoverrun","timer_gettime","timer_settime","timer_t","timerfd_create","timerfd_gettime","timerfd_settime","times","timespec","timeval","timex","timezone","tls","tm","tm_gmtoff","tm_hour","tm_isdst","tm_mday","tm_min","tm_mon","tm_sec","tm_wday","tm_yday","tm_year","tm_zone","tmpfile","tmpfile64","tmpnam","tms","tms_cstime","tms_cutime","tms_stime","tms_utime","tolerance","tolower","totalhigh","totalram","totalswap","toupper","tp","trigger","truncate","truncate64","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","ttyname","ttyname_r","tv_nsec","tv_nsec","tv_sec","tv_sec","tv_sec","tv_sec","tv_usec","tv_usec","tx_id","tx_type","type_","type_","type_","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","u","u","u64","u_ar0","u_comm","u_debugreg","u_dsize","u_fpstate","u_fpvalid","u_ssize","u_tsize","uc_flags","uc_link","uc_mcontext","uc_sigmask","uc_stack","ucontext_t","ucred","uid","uid","uid_t","uinput_abs_setup","uinput_ff_erase","uinput_ff_upload","uinput_setup","uinput_user_dev","uint16_t","uint32_t","uint64_t","uint8_t","uintmax_t","uintptr_t","umask","umount","umount2","uname","ungetc","unlink","unlinkat","unlockpt","unsetenv","unshare","uordblks","uordblks","updated","uptime","useconds_t","uselocale","user","user_fpregs_struct","user_regs_struct","usleep","usmblks","usmblks","ut_addr_v6","ut_exit","ut_host","ut_id","ut_line","ut_pid","ut_session","ut_tv","ut_type","ut_user","utimbuf","utime","utimensat","utimes","utmpname","utmpx","utmpxname","utsname","val","value","value","vendor","vers","version","version","version","vfork","vhangup","vmsplice","wait","wait4","waitid","waitpid","waveform","wchar_t","wcslen","wcstombs","wd","weak_magnitude","winsize","wmemchr","write","writev","ws_col","ws_row","ws_xpixel","ws_ypixel","xmm_space"],"q":[[0,"libc"]],"dmaximum number of services provided on the same listening …uth Header","","IP Payload Comp. Protocol","DCCP","IP6 destination option","exterior gateway protocol","encapsulation header","IP6 Encap Sec. Payload","Ethernet-within-IPv6 encapsulation.","IP6 fragmentation header","General Routing Encap.","Hop-by-hop option header","","","xns idp","group mgmt protocol","","for compatibility","","","","","Multipath TCP","","IP6 no next header","Protocol indep. multicast","pup","raw IP packet","IP6 routing header","resource reservation","SCTP","","tp-4 w/ class negotiationhe <code>PartialEq</code>, <code>Eq</code> and <code>Hash</code> implementations of thisquivalent to C’s <code>void</code> type when used as a pointereturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","GNU version of <code>basename(3)</code>, defined in <code>string.h</codeinterface name, e.g. “en0”","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","POSIX version of <code>basename(3)</code>, defined in <code>libgen.h</codehe 64-bit libc on Solaris and illumos only has readdir_r. …if":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,2,3,3],4],0,0,0,0,0,0,0,0,0,0,[2,2],0,0,0,0,0,0,0,0,[2,2],0,[[1,2],4],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[5,6],[7,5],[8,8],[[7,5],5],[8,8],0,0,0,[9,10],[[11,12]],[12,9],[[11,12],9],[[12,12],13],[[11,12],13],[[11,12]],0,[12],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[9,14]],[[9,14],13],[[9,14]],0,[14],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[9,9,9,9],9],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[15,15],0,0,[15,15],0,0,0,0,0,0,0,0,[15,15],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[15,15],0,0,0,0,0,0,0,[15,15],0,0,0,0,0,0,0,0,0,0,0,[15,15],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[16,16,16],16],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[9,9],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[9,9],9],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[16,16],0,0,0,0,0,[16,13],0,0,0,0,0,0,0,0,0,0,[15,15],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[9,9],[9,9],[9,13],[9,13],0,0,0,0,0,0,0,[[9,9]],[9,13],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],9],[[],9],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[17,18],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[9,13],0,[9,9],0,[9,13],[9,13],[9,13],[9,13],0,0,0,[9,9],[9,9],0,[[9,9],9],0,[9,9],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[19,19],[20,20],[21,21],[22,22],[23,23],[24,24],[25,25],[26,26],[27,27],[28,28],[29,29],[30,30],[31,31],[32,32],[33,33],[34,34],[35,35],[36,36],[37,37],[38,38],[39,39],[40,40],[41,41],[42,42],[43,43],[18,18],[44,44],[45,45],[46,46],[47,47],[14,14],[48,48],[49,49],[50,50],[51,51],[52,52],[53,53],[54,54],[55,55],[56,56],[57,57],[58,58],[59,59],[60,60],[61,61],[62,62],[63,63],[64,64],[65,65],[66,66],[67,67],[68,68],[69,69],[70,70],[71,71],[72,72],[12,12],[73,73],[74,74],[75,75],[76,76],[77,77],[78,78],[79,79],[80,80],[81,81],[82,82],[83,83],[84,84],[85,85],[86,86],[87,87],[88,88],[89,89],[90,90],[91,91],[92,92],[93,93],[94,94],[95,95],[96,96],[97,97],[98,98],[99,99],[100,100],[101,101],[102,102],[103,103],[104,104],[105,105],[106,106],[107,107],[108,108],[109,109],[110,110],[111,111],[112,112],[17,17],[113,113],[114,114],[115,115],[116,116],[4,4],[117,117],[118,118],[119,119],[120,120],[121,121],[122,122],[123,123],[124,124],[125,125],[126,126],[127,127],[128,128],[129,129],[130,130],[131,131],[132,132],[133,133],[134,134],[135,135],[136,136],[137,137],[138,138],[139,139],[140,140],[141,141],[142,142],[143,143],[144,144],[145,145],[146,146],[147,147],[148,148],[149,149],[150,150],[151,151],[152,152],[153,153],[7,7],[5,5],[154,154],[155,155],[156,156],[157,157],[158,158],[159,159],[160,160],[161,161],[162,162],[163,163],[164,164],[165,165],[166,166],[167,167],[168,168],[169,169],[170,170],[171,171],[172,172],[173,173],[174,174],[175,175],[176,176],[177,177],[178,178],[179,179],[180,180],[181,181],[182,182],[183,183],[184,184],[185,185],[186,186],[187,187],[188,188],[189,189],[190,190],[191,191],[192,192],[193,193],[194,194],[195,195],[196,196],[197,197],[198,198],[199,199],[200,200],[201,201],[202,202],[203,203],[204,204],[205,205],[206,206],[207,207],[208,208],[209,209],[210,210],[211,211],[212,212],[213,213],[214,214],[215,215],[216,216],[217,217],[218,218],[219,219],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[20,20],13],[[21,21],13],[[22,22],13],[[23,23],13],[[24,24],13],[[25,25],13],[[26,26],13],[[27,27],13],[[28,28],13],[[29,29],13],[[30,30],13],[[31,31],13],[[32,32],13],[[33,33],13],[[34,34],13],[[35,35],13],[[36,36],13],[[40,40],13],[[41,41],13],[[42,42],13],[[43,43],13],[[18,18],13],[[44,44],13],[[45,45],13],[[46,46],13],[[47,47],13],[[14,14],13],[[48,48],13],[[49,49],13],[[50,50],13],[[51,51],13],[[52,52],13],[[53,53],13],[[54,54],13],[[55,55],13],[[56,56],13],[[57,57],13],[[58,58],13],[[59,59],13],[[60,60],13],[[61,61],13],[[62,62],13],[[63,63],13],[[65,65],13],[[66,66],13],[[67,67],13],[[68,68],13],[[69,69],13],[[70,70],13],[[71,71],13],[[72,72],13],[[12,12],13],[[73,73],13],[[74,74],13],[[75,75],13],[[76,76],13],[[77,77],13],[[78,78],13],[[79,79],13],[[80,80],13],[[81,81],13],[[82,82],13],[[83,83],13],[[84,84],13],[[85,85],13],[[86,86],13],[[87,87],13],[[88,88],13],[[89,89],13],[[90,90],13],[[91,91],13],[[92,92],13],[[93,93],13],[[94,94],13],[[95,95],13],[[96,96],13],[[97,97],13],[[98,98],13],[[99,99],13],[[100,100],13],[[101,101],13],[[102,102],13],[[103,103],13],[[104,104],13],[[105,105],13],[[106,106],13],[[107,107],13],[[108,108],13],[[109,109],13],[[110,110],13],[[111,111],13],[[112,112],13],[[17,17],13],[[113,113],13],[[114,114],13],[[115,115],13],[[116,116],13],[[4,4],13],[[117,117],13],[[118,118],13],[[119,119],13],[[120,120],13],[[121,121],13],[[122,122],13],[[123,123],13],[[124,124],13],[[125,125],13],[[126,126],13],[[127,127],13],[[128,128],13],[[129,129],13],[[130,130],13],[[131,131],13],[[132,132],13],[[133,133],13],[[134,134],13],[[135,135],13],[[136,136],13],[[137,137],13],[[138,138],13],[[139,139],13],[[140,140],13],[[143,143],13],[[144,144],13],[[148,148],13],[[149,149],13],[[150,150],13],[[151,151],13],[[152,152],13],[[153,153],13],[[7,7],13],[[5,5],13],[[154,154],13],[[155,155],13],[[156,156],13],[[157,157],13],[[158,158],13],[[159,159],13],[[160,160],13],[[161,161],13],[[162,162],13],[[163,163],13],[[164,164],13],[[165,165],13],[[166,166],13],[[167,167],13],[[168,168],13],[[169,169],13],[[170,170],13],[[171,171],13],[[172,172],13],[[173,173],13],[[174,174],13],[[175,175],13],[[176,176],13],[[177,177],13],[[178,178],13],[[179,179],13],[[180,180],13],[[181,181],13],[[182,182],13],[[183,183],13],[[184,184],13],[[185,185],13],[[186,186],13],[[187,187],13],[[188,188],13],[[189,189],13],[[190,190],13],[[191,191],13],[[192,192],13],[[193,193],13],[[194,194],13],[[195,195],13],[[196,196],13],[[197,197],13],[[198,198],13],[[199,199],13],[[200,200],13],[[201,201],13],[[203,203],13],[[204,204],13],[[205,205],13],[[206,206],13],[[207,207],13],[[208,208],13],[[209,209],13],[[210,210],13],[[211,211],13],[[212,212],13],[[213,213],13],[[214,214],13],[[218,218],13],[[219,219],13],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[19,220],221],[[20,220],221],[[21,220],221],[[22,220],221],[[23,220],221],[[24,220],221],[[25,220],221],[[26,220],221],[[27,220],221],[[28,220],221],[[29,220],221],[[30,220],221],[[31,220],221],[[32,220],221],[[33,220],221],[[34,220],221],[[35,220],221],[[36,220],221],[[37,220],221],[[38,220],221],[[39,220],221],[[40,220],221],[[41,220],221],[[42,220],221],[[43,220],221],[[18,220],221],[[44,220],221],[[45,220],221],[[46,220],221],[[47,220],221],[[14,220],221],[[48,220],221],[[49,220],221],[[50,220],221],[[51,220],221],[[52,220],221],[[53,220],221],[[54,220],221],[[55,220],221],[[56,220],221],[[57,220],221],[[58,220],221],[[59,220],221],[[60,220],221],[[61,220],221],[[62,220],221],[[63,220],221],[[64,220],221],[[222,220],[[224,[223]]]],[[65,220],221],[[66,220],221],[[67,220],221],[[68,220],221],[[69,220],221],[[70,220],221],[[71,220],221],[[72,220],221],[[12,220],221],[[73,220],221],[[74,220],221],[[75,220],221],[[76,220],221],[[77,220],221],[[78,220],221],[[79,220],221],[[80,220],221],[[81,220],221],[[82,220],221],[[83,220],221],[[84,220],221],[[85,220],221],[[86,220],221],[[87,220],221],[[88,220],221],[[89,220],221],[[90,220],221],[[91,220],221],[[92,220],221],[[93,220],221],[[94,220],221],[[95,220],221],[[96,220],221],[[97,220],221],[[98,220],221],[[99,220],221],[[100,220],221],[[101,220],221],[[102,220],221],[[103,220],221],[[104,220],221],[[105,220],221],[[106,220],221],[[107,220],221],[[108,220],221],[[109,220],221],[[110,220],221],[[111,220],221],[[112,220],221],[[17,220],221],[[113,220],221],[[114,220],221],[[115,220],221],[[116,220],221],[[4,220],221],[[117,220],221],[[118,220],221],[[119,220],221],[[120,220],221],[[121,220],221],[[122,220],221],[[123,220],221],[[124,220],221],[[125,220],221],[[126,220],221],[[127,220],221],[[128,220],221],[[129,220],221],[[130,220],221],[[131,220],221],[[132,220],221],[[133,220],221],[[134,220],221],[[135,220],221],[[136,220],221],[[137,220],221],[[138,220],221],[[139,220],221],[[140,220],221],[[141,220],221],[[142,220],221],[[143,220],221],[[144,220],221],[[148,220],221],[[149,220],221],[[150,220],221],[[151,220],221],[[152,220],221],[[153,220],221],[[7,220],221],[[5,220],221],[[154,220],221],[[155,220],221],[[156,220],221],[[157,220],221],[[158,220],221],[[159,220],221],[[160,220],221],[[161,220],221],[[162,220],221],[[163,220],221],[[164,220],221],[[165,220],221],[[166,220],221],[[167,220],221],[[168,220],221],[[169,220],221],[[170,220],221],[[171,220],221],[[172,220],221],[[173,220],221],[[174,220],221],[[175,220],221],[[176,220],221],[[177,220],221],[[178,220],221],[[179,220],221],[[180,220],221],[[181,220],221],[[182,220],221],[[183,220],221],[[184,220],221],[[185,220],221],[[186,220],221],[[187,220],221],[[188,220],221],[[189,220],221],[[190,220],221],[[191,220],221],[[192,220],221],[[193,220],221],[[194,220],221],[[195,220],221],[[196,220],221],[[197,220],221],[[198,220],221],[[199,220],221],[[200,220],221],[[201,220],221],[[203,220],221],[[204,220],221],[[205,220],221],[[206,220],221],[[207,220],221],[[208,220],221],[[209,220],221],[[210,220],221],[[211,220],221],[[212,220],221],[[213,220],221],[[214,220],221],[[218,220],221],[[219,220],221],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[20,225]],[[21,225]],[[22,225]],[[23,225]],[[24,225]],[[25,225]],[[26,225]],[[27,225]],[[28,225]],[[29,225]],[[30,225]],[[31,225]],[[32,225]],[[33,225]],[[34,225]],[[35,225]],[[36,225]],[[40,225]],[[41,225]],[[42,225]],[[43,225]],[[18,225]],[[44,225]],[[45,225]],[[46,225]],[[47,225]],[[14,225]],[[48,225]],[[49,225]],[[50,225]],[[51,225]],[[52,225]],[[53,225]],[[54,225]],[[55,225]],[[56,225]],[[57,225]],[[58,225]],[[59,225]],[[60,225]],[[61,225]],[[62,225]],[[63,225]],[[65,225]],[[66,225]],[[67,225]],[[68,225]],[[69,225]],[[70,225]],[[71,225]],[[72,225]],[[12,225]],[[73,225]],[[74,225]],[[75,225]],[[76,225]],[[77,225]],[[78,225]],[[79,225]],[[80,225]],[[81,225]],[[82,225]],[[83,225]],[[84,225]],[[85,225]],[[86,225]],[[87,225]],[[88,225]],[[89,225]],[[90,225]],[[91,225]],[[92,225]],[[93,225]],[[94,225]],[[95,225]],[[96,225]],[[97,225]],[[98,225]],[[99,225]],[[100,225]],[[101,225]],[[102,225]],[[103,225]],[[104,225]],[[105,225]],[[106,225]],[[107,225]],[[108,225]],[[109,225]],[[110,225]],[[111,225]],[[112,225]],[[17,225]],[[113,225]],[[114,225]],[[115,225]],[[116,225]],[[4,225]],[[117,225]],[[118,225]],[[119,225]],[[120,225]],[[121,225]],[[122,225]],[[123,225]],[[124,225]],[[125,225]],[[126,225]],[[127,225]],[[128,225]],[[129,225]],[[130,225]],[[131,225]],[[132,225]],[[133,225]],[[134,225]],[[135,225]],[[136,225]],[[137,225]],[[138,225]],[[139,225]],[[140,225]],[[143,225]],[[144,225]],[[148,225]],[[149,225]],[[150,225]],[[151,225]],[[152,225]],[[153,225]],[[7,225]],[[5,225]],[[154,225]],[[155,225]],[[156,225]],[[157,225]],[[158,225]],[[159,225]],[[160,225]],[[161,225]],[[162,225]],[[163,225]],[[164,225]],[[165,225]],[[166,225]],[[167,225]],[[168,225]],[[169,225]],[[170,225]],[[171,225]],[[172,225]],[[173,225]],[[174,225]],[[175,225]],[[176,225]],[[177,225]],[[178,225]],[[179,225]],[[180,225]],[[181,225]],[[182,225]],[[183,225]],[[184,225]],[[185,225]],[[186,225]],[[187,225]],[[188,225]],[[189,225]],[[190,225]],[[191,225]],[[192,225]],[[193,225]],[[194,225]],[[195,225]],[[196,225]],[[197,225]],[[198,225]],[[199,225]],[[200,225]],[[201,225]],[[203,225]],[[204,225]],[[205,225]],[[206,225]],[[207,225]],[[208,225]],[[209,225]],[[210,225]],[[211,225]],[[212,225]],[[213,225]],[[214,225]],[[218,225]],[[219,225]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[226,8],0,[[8,8],226],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[226,8],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[182,222],0,0,[182,227],0,[182,9],[182,228],[182,229],[182,228],[182,32],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"c":[715,1369,3347,4249,4613,6736,6737,6738,6739,7000,7001,8852,8853,8854,8855,8906],"p":[[6,"__u16"],[6,"__u32"],[6,"__u8"],[3,"sock_filter"],[3,"cmsghdr"],[6,"c_uchar"],[3,"msghdr"],[6,"c_uint"],[6,"c_int"],[6,"size_t"],[15,"usize"],[3,"cpu_set_t"],[15,"bool"],[3,"fd_set"],[15,"u8"],[15,"u32"],[3,"sock_extended_err"],[3,"sockaddr"],[4,"DIR"],[3,"group"],[3,"utimbuf"],[3,"timeval"],[3,"timespec"],[3,"rlimit"],[3,"rusage"],[3,"ipv6_mreq"],[3,"hostent"],[3,"iovec"],[3,"pollfd"],[3,"winsize"],[3,"linger"],[3,"sigval"],[3,"itimerval"],[3,"tms"],[3,"servent"],[3,"protoent"],[4,"FILE"],[4,"fpos_t"],[4,"timezone"],[3,"in_addr"],[3,"ip_mreq"],[3,"ip_mreqn"],[3,"ip_mreq_source"],[3,"sockaddr_in"],[3,"sockaddr_in6"],[3,"addrinfo"],[3,"sockaddr_ll"],[3,"tm"],[3,"sched_param"],[3,"Dl_info"],[3,"lconv"],[3,"in_pktinfo"],[3,"ifaddrs"],[3,"in6_rtmsg"],[3,"arpreq"],[3,"arpreq_old"],[3,"arphdr"],[3,"mmsghdr"],[3,"epoll_event"],[3,"sockaddr_un"],[3,"sockaddr_storage"],[3,"utsname"],[3,"sigevent"],[4,"fpos64_t"],[3,"glob_t"],[3,"passwd"],[3,"spwd"],[3,"dqblk"],[3,"signalfd_siginfo"],[3,"itimerspec"],[3,"fsid_t"],[3,"packet_mreq"],[3,"if_nameindex"],[3,"msginfo"],[3,"sembuf"],[3,"input_event"],[3,"input_id"],[3,"input_absinfo"],[3,"input_keymap_entry"],[3,"input_mask"],[3,"ff_replay"],[3,"ff_trigger"],[3,"ff_envelope"],[3,"ff_constant_effect"],[3,"ff_ramp_effect"],[3,"ff_condition_effect"],[3,"ff_periodic_effect"],[3,"ff_rumble_effect"],[3,"ff_effect"],[3,"uinput_ff_upload"],[3,"uinput_ff_erase"],[3,"uinput_abs_setup"],[3,"dl_phdr_info"],[3,"Elf32_Ehdr"],[3,"Elf64_Ehdr"],[3,"Elf32_Sym"],[3,"Elf64_Sym"],[3,"Elf32_Phdr"],[3,"Elf64_Phdr"],[3,"Elf32_Shdr"],[3,"Elf64_Shdr"],[3,"ucred"],[3,"mntent"],[3,"posix_spawn_file_actions_t"],[3,"posix_spawnattr_t"],[3,"genlmsghdr"],[3,"in6_pktinfo"],[3,"arpd_request"],[3,"inotify_event"],[3,"fanotify_response"],[3,"sockaddr_vm"],[3,"regmatch_t"],[3,"__c_anonymous_sockaddr_can_tp"],[3,"__c_anonymous_sockaddr_can_j1939"],[3,"can_filter"],[3,"j1939_filter"],[3,"sock_fprog"],[3,"seccomp_data"],[3,"nlmsghdr"],[3,"nlmsgerr"],[3,"nlattr"],[3,"file_clone_range"],[3,"__c_anonymous_ifru_map"],[3,"in6_ifreq"],[3,"option"],[3,"sctp_initmsg"],[3,"sctp_sndrcvinfo"],[3,"sctp_sndinfo"],[3,"sctp_rcvinfo"],[3,"sctp_nxtinfo"],[3,"sctp_prinfo"],[3,"sctp_authinfo"],[3,"rlimit64"],[3,"sockaddr_nl"],[3,"dirent"],[3,"sockaddr_alg"],[3,"uinput_setup"],[3,"uinput_user_dev"],[3,"af_alg_iv"],[3,"mq_attr"],[19,"__c_anonymous_ifr_ifru"],[3,"ifreq"],[3,"hwtstamp_config"],[3,"dirent64"],[3,"sock_txtime"],[19,"__c_anonymous_sockaddr_can_can_addr"],[3,"sockaddr_can"],[3,"statx"],[3,"statx_timestamp"],[3,"aiocb"],[3,"__exit_status"],[3,"__timeval"],[3,"glob64_t"],[3,"termios"],[3,"mallinfo"],[3,"mallinfo2"],[3,"nl_pktinfo"],[3,"nl_mmap_req"],[3,"nl_mmap_hdr"],[3,"rtentry"],[3,"timex"],[3,"ntptimeval"],[3,"regex_t"],[3,"Elf64_Chdr"],[3,"Elf32_Chdr"],[3,"seminfo"],[3,"ptrace_peeksiginfo_args"],[3,"__c_anonymous_ptrace_syscall_info_entry"],[3,"__c_anonymous_ptrace_syscall_info_exit"],[3,"__c_anonymous_ptrace_syscall_info_seccomp"],[3,"ptrace_syscall_info"],[19,"__c_anonymous_ptrace_syscall_info_data"],[3,"utmpx"],[3,"sigset_t"],[3,"sysinfo"],[3,"msqid_ds"],[3,"semid_ds"],[3,"sigaction"],[3,"statfs"],[3,"flock"],[3,"flock64"],[3,"siginfo_t"],[3,"stack_t"],[3,"stat"],[3,"stat64"],[3,"statfs64"],[3,"statvfs64"],[3,"pthread_attr_t"],[3,"_libc_fpxreg"],[3,"_libc_xmmreg"],[3,"_libc_fpstate"],[3,"user_regs_struct"],[3,"user"],[3,"mcontext_t"],[3,"ipc_perm"],[3,"shmid_ds"],[3,"seccomp_notif_sizes"],[3,"ptrace_rseq_configuration"],[3,"user_fpregs_struct"],[3,"ucontext_t"],[3,"statvfs"],[3,"max_align_t"],[3,"clone_args"],[3,"sem_t"],[3,"termios2"],[3,"pthread_mutexattr_t"],[3,"pthread_rwlockattr_t"],[3,"pthread_condattr_t"],[3,"pthread_barrierattr_t"],[3,"fanotify_event_metadata"],[3,"pthread_cond_t"],[3,"pthread_mutex_t"],[3,"pthread_rwlock_t"],[3,"pthread_barrier_t"],[3,"can_frame"],[3,"canfd_frame"],[3,"canxl_frame"],[3,"open_how"],[3,"in6_addr"],[3,"Formatter"],[6,"Result"],[4,"c_void"],[3,"Error"],[4,"Result"],[8,"Hasher"],[6,"dev_t"],[6,"pid_t"],[6,"c_long"],[6,"uid_t"],[3,"TypeId"]]},\
"libloading":{"doc":"Bindings around the platform’s dynamic library loading …","t":"NNNNNNNNENNNNNNNDNNDLLLLLLALLLLLLLLLLLLLLLLLLFLLALLLLLLLLLLLLLMMMMMMMMMAAAAAAAAAAAAAAAAAAAAAAAAAAADRRRRDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["CreateCString","CreateCStringWithTrailing","DlClose","DlCloseUnknown","DlOpen","DlOpenUnknown","DlSym","DlSymUnknown","Error","FreeLibrary","FreeLibraryUnknown","GetModuleHandleExW","GetModuleHandleExWUnknown","GetProcAddress","GetProcAddressUnknown","IncompatibleSize","Library","LoadLibraryExW","LoadLibraryExWUnknown","Symbol","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","changelog","clone","clone_into","close","deref","fmt","fmt","fmt","fmt","from","from","from","from","from_raw","get","into","into","into","into_raw","library_filename","lift_option","new","os","provide","source","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","desc","desc","desc","source","source","source","source","source","source","r0_3_0","r0_3_1","r0_3_2","r0_3_3","r0_3_4","r0_4_0","r0_4_1","r0_4_2","r0_4_3","r0_5_0","r0_5_1","r0_5_2","r0_6_0","r0_6_1","r0_6_2","r0_6_3","r0_6_4","r0_6_5","r0_6_6","r0_6_7","r0_7_0","r0_7_1","r0_7_2","r0_7_3","r0_7_4","r0_8_0","unix","Library","RTLD_GLOBAL","RTLD_LAZY","RTLD_LOCAL","RTLD_NOW","Symbol","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","close","deref","drop","fmt","fmt","from","from","from","from_raw","get","get_singlethreaded","into","into","into_raw","into_raw","lift_option","new","open","this","to_owned","try_from","try_from","try_into","try_into","type_id","type_id"],"q":[[0,"libloading"],[62,"libloading::Error"],[71,"libloading::changelog"],[97,"libloading::os"],[98,"libloading::os::unix"]],"d":["Could not create a new CString.","Could not create a new CString from bytes with trailing …","The <code>dlclose</code> call failed.","The <code>dlclose</code> call failed and system did not report an error.","The <code>dlopen</code> call failed.","The <code>dlopen</code> call failed and system did not report an error.","The <code>dlsym</code> call failed.","The <code>dlsym</code> call failed and system did not report an error.","Errors.","The <code>FreeLibrary</code> call failed.","The <code>FreeLibrary</code> call failed and system did not report an …","The <code>GetModuleHandleExW</code> call failed.","The <code>GetModuleHandleExW</code> call failed and system did not …","The <code>GetProcAddress</code> call failed.","The <code>GetProcAddressUnknown</code> call failed and system did not …","The requested type cannot possibly work.","A loaded dynamic library.","The <code>LoadLibraryW</code> call failed.","The <code>LoadLibraryW</code> call failed and system did not report an …","Symbol from a library.","","","","","","","The change log.","","","Unload the library.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Wrap the <code>os::platform::Symbol</code> into this safe wrapper.","Get a pointer to a function or static variable by symbol …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Extract the wrapped <code>os::platform::Symbol</code>.","Converts a library name to a filename generally …","Lift Option out of the symbol.","Find and load a dynamic library.","Unsafe but flexible platform-specific bindings to dynamic …","","","","","","","","","","","","","","The source error.","The source error.","The source error.","The source error.","The source error.","The source error.","The source error.","The source error.","The source error.","Release 0.3.0 (2016-07-27)","Release 0.3.1 (2016-10-01)","Release 0.3.2 (2017-02-10)","Release 0.3.3 (2017-03-25)","Release 0.3.4 (2017-03-25)","Release 0.4.0 (2017-05-01)","Release 0.4.1 (2017-08-29)","Release 0.4.2 (2017-09-24)","Release 0.4.3 (2017-12-07)","Release 0.5.0 (2018-01-11)","Release 0.5.1 (2019-06-01)","Release 0.5.2 (2019-07-07)","Release 0.6.0 (2020-04-05)","Release 0.6.1 (2020-04-15)","Release 0.6.2 (2020-05-06)","Release 0.6.3 (2020-08-22)","Release 0.6.4 (2020-10-10)","Release 0.6.5 (2020-10-23)","Release 0.6.6 (2020-12-03)","Release 0.6.7 (2021-01-14)","Release 0.7.0 (2021-02-06)","Release 0.7.1 (2021-10-09)","Release 0.7.2 (2021-11-14)","Release 0.7.3 (2022-01-15)","Release 0.7.4 (2022-11-07)","Release 0.8.0 (2023-04-11)","UNIX implementation of dynamic library loading.","A platform-specific counterpart of the cross-platform …","Make loaded symbols available for resolution globally.","Perform lazy binding.","Load symbols into an isolated namespace.","Perform eager binding.","Symbol from a library.","","","","","","","Unload the library.","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Convert a raw handle returned by <code>dlopen</code>-family of calls to …","Get a pointer to a function or static variable by symbol …","Get a pointer to function or static variable by symbol …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Convert the <code>Library</code> to a raw handle.","Convert the loaded <code>Symbol</code> into a raw pointer.","Lift Option out of the symbol.","Find and eagerly load a shared library (module).","Find and load an executable object file (shared library).","Load the <code>Library</code> representing the current executable.","","","","","","",""],"i":[3,3,3,3,3,3,3,3,0,3,3,3,3,3,3,3,0,3,3,0,2,1,3,2,1,3,0,1,1,2,1,2,1,3,3,2,2,1,3,1,2,2,1,3,1,0,1,2,0,3,3,1,3,2,1,3,2,1,3,2,1,3,21,22,23,24,25,26,27,28,29,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,8,7,8,8,8,7,8,7,7,8,7,7,8,7,7,7,7,8,7,8,8,7,7,7,8,7,8,7,8,7,8],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,[1,1],[[]],[2,[[4,[3]]]],[1],[[2,5],6],[[1,5],6],[[3,5],6],[[3,5],6],[7,2],[[]],[[]],[[]],[8,1],[[2,[10,[9]]],[[4,[1,3]]]],[[]],[[]],[[]],[1,8],[[[12,[11]]],13],[[[1,[14]]],[[14,[1]]]],[[[12,[11]]],[[4,[2,3]]]],0,[15],[3,[[14,[16]]]],[[]],[[],17],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],18],[[],18],[[],18],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[8,8],[[]],[7,[[4,[3]]]],[8],[7],[[7,5],6],[[8,5],6],[[]],[2,7],[[]],[19,7],[[7,[10,[9]]],[[4,[8,3]]]],[[7,[10,[9]]],[[4,[8,3]]]],[[]],[[]],[7,19],[8,19],[[[8,[14]]],[[14,[8]]]],[[[12,[11]]],[[4,[7,3]]]],[[[14,[[12,[11]]]],20],[[4,[7,3]]]],[[],7],[[]],[[],4],[[],4],[[],4],[[],4],[[],18],[[],18]],"c":[],"p":[[3,"Symbol"],[3,"Library"],[4,"Error"],[4,"Result"],[3,"Formatter"],[6,"Result"],[3,"Library"],[3,"Symbol"],[15,"u8"],[15,"slice"],[3,"OsStr"],[8,"AsRef"],[3,"OsString"],[4,"Option"],[3,"Demand"],[8,"Error"],[3,"String"],[3,"TypeId"],[6,"c_void"],[6,"c_int"],[13,"DlOpen"],[13,"DlSym"],[13,"DlClose"],[13,"LoadLibraryExW"],[13,"GetModuleHandleExW"],[13,"GetProcAddress"],[13,"FreeLibrary"],[13,"CreateCString"],[13,"CreateCStringWithTrailing"]]},\
"lock_api":{"doc":"This library provides type-safe and fully-featured <code>Mutex</code> …","t":"QQIQQDDSSSSQQDDDDDDIIIDIIIIIIIIIIDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLKLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLKKKKLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLKKKKLLLKKKKKKKLLLKKKLLLLLLLLLLLLLLLLLKLKLKLLLLLLLLLLLLLLLLLLLLLLKLKKKLLLLLLLLLLKKKKLLLLLLLLLLLKLLL","n":["Duration","Duration","GetThreadId","GuardMarker","GuardMarker","GuardNoSend","GuardSend","INIT","INIT","INIT","INIT","Instant","Instant","MappedMutexGuard","MappedReentrantMutexGuard","MappedRwLockReadGuard","MappedRwLockWriteGuard","Mutex","MutexGuard","RawMutex","RawMutexFair","RawMutexTimed","RawReentrantMutex","RawRwLock","RawRwLockDowngrade","RawRwLockFair","RawRwLockRecursive","RawRwLockRecursiveTimed","RawRwLockTimed","RawRwLockUpgrade","RawRwLockUpgradeDowngrade","RawRwLockUpgradeFair","RawRwLockUpgradeTimed","ReentrantMutex","ReentrantMutexGuard","RwLock","RwLockReadGuard","RwLockUpgradableReadGuard","RwLockWriteGuard","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bump","bump","bump","bump","bump","bump","bump","bump","bump_exclusive","bump_exclusive","bump_shared","bump_shared","bump_upgradable","bump_upgradable","const_new","const_new","const_new","data_ptr","data_ptr","data_ptr","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","downgrade","downgrade","downgrade","downgrade_to_upgradable","downgrade_to_upgradable","downgrade_upgradable","drop","drop","drop","drop","drop","drop","drop","drop","drop","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","force_unlock","force_unlock","force_unlock_fair","force_unlock_fair","force_unlock_read","force_unlock_read_fair","force_unlock_write","force_unlock_write_fair","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get_mut","get_mut","get_mut","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_inner","into_inner","into_inner","is_locked","is_locked","is_locked","is_locked","is_locked","is_locked","is_locked","is_locked","is_locked_exclusive","is_locked_exclusive","is_locked_exclusive","is_owned_by_current_thread","is_owned_by_current_thread","leak","lock","lock","lock","lock","lock_exclusive","lock_shared","lock_shared_recursive","lock_upgradable","map","map","map","map","map","map","map","map","mutex","new","new","new","nonzero_thread_id","raw","raw","raw","read","read_recursive","remutex","rwlock","rwlock","rwlock","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_lock","try_lock","try_lock","try_lock","try_lock_exclusive","try_lock_exclusive_for","try_lock_exclusive_until","try_lock_for","try_lock_for","try_lock_for","try_lock_for","try_lock_shared","try_lock_shared_for","try_lock_shared_recursive","try_lock_shared_recursive_for","try_lock_shared_recursive_until","try_lock_shared_until","try_lock_until","try_lock_until","try_lock_until","try_lock_until","try_lock_upgradable","try_lock_upgradable_for","try_lock_upgradable_until","try_map","try_map","try_map","try_map","try_map","try_map","try_map","try_map","try_read","try_read_for","try_read_recursive","try_read_recursive_for","try_read_recursive_until","try_read_until","try_upgradable_read","try_upgradable_read_for","try_upgradable_read_until","try_upgrade","try_upgrade","try_upgrade_for","try_upgrade_for","try_upgrade_until","try_upgrade_until","try_with_upgraded","try_with_upgraded_for","try_with_upgraded_until","try_write","try_write_for","try_write_until","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unlock","unlock","unlock_exclusive","unlock_exclusive_fair","unlock_fair","unlock_fair","unlock_fair","unlock_fair","unlock_fair","unlock_fair","unlock_fair","unlock_fair","unlock_fair","unlock_fair","unlock_fair","unlock_shared","unlock_shared_fair","unlock_upgradable","unlock_upgradable_fair","unlocked","unlocked","unlocked","unlocked","unlocked","unlocked_fair","unlocked_fair","unlocked_fair","unlocked_fair","unlocked_fair","upgradable_read","upgrade","upgrade","with_upgraded","write"],"q":[[0,"lock_api"]],"d":["Duration type used for <code>try_lock_for</code>.","Duration type used for <code>try_lock_for</code>.","Helper trait which returns a non-zero thread ID.","Marker type which determines whether a lock guard should …","Marker type which determines whether a lock guard should …","Marker type which indicates that the Guard type for a lock …","Marker type which indicates that the Guard type for a lock …","Initial value for an unlocked mutex.","Initial value.","Initial value for an unlocked mutex.","Initial value for an unlocked <code>RwLock</code>.","Instant type used for <code>try_lock_until</code>.","Instant type used for <code>try_lock_until</code>.","An RAII mutex guard returned by <code>MutexGuard::map</code>, which can …","An RAII mutex guard returned by <code>ReentrantMutexGuard::map</code>, …","An RAII read lock guard returned by <code>RwLockReadGuard::map</code>, …","An RAII write lock guard returned by <code>RwLockWriteGuard::map</code>…","A mutual exclusion primitive useful for protecting shared …","An RAII implementation of a “scoped lock” of a mutex. …","Basic operations for a mutex.","Additional methods for mutexes which support fair …","Additional methods for mutexes which support locking with …","A raw mutex type that wraps another raw mutex to provide …","Basic operations for a reader-writer lock.","Additional methods for RwLocks which support atomically …","Additional methods for RwLocks which support fair …","Additional methods for RwLocks which support recursive …","Additional methods for RwLocks which support recursive …","Additional methods for RwLocks which support locking with …","Additional methods for RwLocks which support atomically …","Additional methods for RwLocks which support upgradable …","Additional methods for RwLocks which support upgradable …","Additional methods for RwLocks which support upgradable …","A mutex which can be recursively locked by a single thread.","An RAII implementation of a “scoped lock” of a …","A reader-writer lock","RAII structure used to release the shared read access of a …","RAII structure used to release the upgradable read access …","RAII structure used to release the exclusive write access …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Temporarily yields the mutex to a waiting thread if there …","Temporarily yields the mutex to a waiting thread if there …","Temporarily yields the mutex to a waiting thread if there …","Temporarily yields the mutex to a waiting thread if there …","Temporarily yields the mutex to a waiting thread if there …","Temporarily yields the <code>RwLock</code> to a waiting thread if there …","Temporarily yields the <code>RwLock</code> to a waiting thread if there …","Temporarily yields the <code>RwLock</code> to a waiting thread if there …","Temporarily yields an exclusive lock to a waiting thread …","Temporarily yields an exclusive lock to a waiting thread …","Temporarily yields a shared lock to a waiting thread if …","Temporarily yields a shared lock to a waiting thread if …","Temporarily yields an upgradable lock to a waiting thread …","Temporarily yields an upgradable lock to a waiting thread …","Creates a new mutex based on a pre-existing raw mutex.","Creates a new reentrant mutex based on a pre-existing raw …","Creates a new new instance of an <code>RwLock&lt;T&gt;</code> based on a …","Returns a raw pointer to the underlying data.","Returns a raw pointer to the underlying data.","Returns a raw pointer to the underlying data.","","","","","","","","","","","","","","","","","Atomically downgrades an exclusive lock into a shared lock …","Atomically downgrades a write lock into a read lock …","Atomically downgrades an upgradable read lock lock into a …","Downgrades an exclusive lock to an upgradable lock.","Atomically downgrades a write lock into an upgradable read …","Downgrades an upgradable lock to a shared lock.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Forcibly unlocks the mutex.","Forcibly unlocks the mutex.","Forcibly unlocks the mutex using a fair unlock procotol.","Forcibly unlocks the mutex using a fair unlock protocol.","Forcibly unlocks a read lock.","Forcibly unlocks a read lock using a fair unlock procotol.","Forcibly unlocks a write lock.","Forcibly unlocks a write lock using a fair unlock procotol.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns a mutable reference to the underlying data.","Returns a mutable reference to the underlying data.","Returns a mutable reference to the underlying data.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consumes this mutex, returning the underlying data.","Consumes this mutex, returning the underlying data.","Consumes this <code>RwLock</code>, returning the underlying data.","Checks whether the mutex is currently locked.","Checks whether the mutex is currently locked.","Checks whether the mutex is currently locked.","Checks whether the mutex is currently locked.","Checks whether the mutex is currently locked.","Checks if this <code>RwLock</code> is currently locked in any way.","Checks if this <code>RwLock</code> is currently locked in any way.","Checks whether this <code>RwLock</code> is currently locked in any way.","Check if this <code>RwLock</code> is currently exclusively locked.","Check if this <code>RwLock</code> is currently exclusively locked.","Check if this <code>RwLock</code> is currently exclusively locked.","Checks whether the mutex is currently held by the current …","Checks whether the mutex is currently held by the current …","Leaks the mutex guard and returns a mutable reference to …","Acquires this mutex, blocking the current thread until it …","Acquires a mutex, blocking the current thread until it is …","Acquires this mutex, blocking if it’s held by another …","Acquires a reentrant mutex, blocking the current thread …","Acquires an exclusive lock, blocking the current thread …","Acquires a shared lock, blocking the current thread until …","Acquires a shared lock without deadlocking in case of a …","Acquires an upgradable lock, blocking the current thread …","Makes a new <code>MappedMutexGuard</code> for a component of the locked …","Makes a new <code>MappedMutexGuard</code> for a component of the locked …","Makes a new <code>MappedReentrantMutexGuard</code> for a component of …","Makes a new <code>MappedReentrantMutexGuard</code> for a component of …","Make a new <code>MappedRwLockReadGuard</code> for a component of the …","Make a new <code>MappedRwLockWriteGuard</code> for a component of the …","Make a new <code>MappedRwLockReadGuard</code> for a component of the …","Make a new <code>MappedRwLockWriteGuard</code> for a component of the …","Returns a reference to the original <code>Mutex</code> object.","Creates a new mutex in an unlocked state ready for use.","Creates a new reentrant mutex in an unlocked state ready …","Creates a new instance of an <code>RwLock&lt;T&gt;</code> which is unlocked.","Returns a non-zero thread ID which identifies the current …","Returns the underlying raw mutex object.","Returns the underlying raw mutex object.","Returns the underlying raw reader-writer lock object.","Locks this <code>RwLock</code> with shared read access, blocking the …","Locks this <code>RwLock</code> with shared read access, blocking the …","Returns a reference to the original <code>ReentrantMutex</code> object.","Returns a reference to the original reader-writer lock …","Returns a reference to the original reader-writer lock …","Returns a reference to the original reader-writer lock …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Attempts to acquire this mutex without blocking. Returns …","Attempts to acquire this lock.","Attempts to acquire this mutex without blocking. Returns …","Attempts to acquire this lock.","Attempts to acquire an exclusive lock without blocking.","Attempts to acquire an exclusive lock until a timeout is …","Attempts to acquire an exclusive lock until a timeout is …","Attempts to acquire this lock until a timeout is reached.","Attempts to acquire this lock until a timeout is reached.","Attempts to acquire this lock until a timeout is reached.","Attempts to acquire this lock until a timeout is reached.","Attempts to acquire a shared lock without blocking.","Attempts to acquire a shared lock until a timeout is …","Attempts to acquire a shared lock without deadlocking in …","Attempts to acquire a shared lock until a timeout is …","Attempts to acquire a shared lock until a timeout is …","Attempts to acquire a shared lock until a timeout is …","Attempts to acquire this lock until a timeout is reached.","Attempts to acquire this lock until a timeout is reached.","Attempts to acquire this lock until a timeout is reached.","Attempts to acquire this lock until a timeout is reached.","Attempts to acquire an upgradable lock without blocking.","Attempts to acquire an upgradable lock until a timeout is …","Attempts to acquire an upgradable lock until a timeout is …","Attempts to make a new <code>MappedMutexGuard</code> for a component of …","Attempts to make a new <code>MappedMutexGuard</code> for a component of …","Attempts to make  a new <code>MappedReentrantMutexGuard</code> for a …","Attempts to make  a new <code>MappedReentrantMutexGuard</code> for a …","Attempts to make  a new <code>MappedRwLockReadGuard</code> for a …","Attempts to make  a new <code>MappedRwLockWriteGuard</code> for a …","Attempts to make  a new <code>MappedRwLockReadGuard</code> for a …","Attempts to make  a new <code>MappedRwLockWriteGuard</code> for a …","Attempts to acquire this <code>RwLock</code> with shared read access.","Attempts to acquire this <code>RwLock</code> with shared read access …","Attempts to acquire this <code>RwLock</code> with shared read access.","Attempts to acquire this <code>RwLock</code> with shared read access …","Attempts to acquire this <code>RwLock</code> with shared read access …","Attempts to acquire this <code>RwLock</code> with shared read access …","Attempts to acquire this <code>RwLock</code> with upgradable read …","Attempts to acquire this <code>RwLock</code> with upgradable read …","Attempts to acquire this <code>RwLock</code> with upgradable read …","Attempts to upgrade an upgradable lock to an exclusive …","Tries to atomically upgrade an upgradable read lock into …","Attempts to upgrade an upgradable lock to an exclusive …","Tries to atomically upgrade an upgradable read lock into …","Attempts to upgrade an upgradable lock to an exclusive …","Tries to atomically upgrade an upgradable read lock into …","First, tries to atomically upgrade an upgradable read lock …","Tries to atomically upgrade an upgradable read lock into …","Tries to atomically upgrade an upgradable read lock into …","Attempts to lock this <code>RwLock</code> with exclusive write access.","Attempts to acquire this <code>RwLock</code> with exclusive write …","Attempts to acquire this <code>RwLock</code> with exclusive write …","","","","","","","","","","","","","","","","Unlocks this mutex.","Unlocks this mutex. The inner mutex may not be unlocked if …","Releases an exclusive lock.","Releases an exclusive lock using a fair unlock protocol.","Unlocks this mutex using a fair unlock protocol.","Unlocks this mutex using a fair unlock protocol. The inner …","Unlocks the mutex using a fair unlock protocol.","Unlocks the mutex using a fair unlock protocol.","Unlocks the mutex using a fair unlock protocol.","Unlocks the mutex using a fair unlock protocol.","Unlocks the <code>RwLock</code> using a fair unlock protocol.","Unlocks the <code>RwLock</code> using a fair unlock protocol.","Unlocks the <code>RwLock</code> using a fair unlock protocol.","Unlocks the <code>RwLock</code> using a fair unlock protocol.","Unlocks the <code>RwLock</code> using a fair unlock protocol.","Releases a shared lock.","Releases a shared lock using a fair unlock protocol.","Releases an upgradable lock.","Releases an upgradable lock using a fair unlock protocol.","Temporarily unlocks the mutex to execute the given …","Temporarily unlocks the mutex to execute the given …","Temporarily unlocks the <code>RwLock</code> to execute the given …","Temporarily unlocks the <code>RwLock</code> to execute the given …","Temporarily unlocks the <code>RwLock</code> to execute the given …","Temporarily unlocks the mutex to execute the given …","Temporarily unlocks the mutex to execute the given …","Temporarily unlocks the <code>RwLock</code> to execute the given …","Temporarily unlocks the <code>RwLock</code> to execute the given …","Temporarily unlocks the <code>RwLock</code> to execute the given …","Locks this <code>RwLock</code> with upgradable read access, blocking …","Upgrades an upgradable lock to an exclusive lock.","Atomically upgrades an upgradable read lock lock into an …","First, atomically upgrades an upgradable read lock lock …","Locks this <code>RwLock</code> with exclusive write access, blocking …"],"i":[36,37,0,15,16,0,0,15,2,3,16,36,37,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,41,42,12,3,13,14,5,18,6,19,8,9,11,21,22,41,42,12,3,13,14,5,18,6,19,8,9,11,21,22,1,1,3,5,6,8,9,11,7,7,7,7,10,10,12,13,14,12,13,14,12,13,14,5,18,6,19,8,9,11,21,22,5,18,9,22,23,9,11,24,9,24,5,18,6,19,8,9,11,21,22,12,13,14,5,5,18,18,6,6,19,19,8,8,9,9,11,11,21,21,22,22,12,13,12,13,14,14,14,14,41,42,12,12,12,3,13,13,13,14,14,14,5,18,6,19,8,9,11,21,22,12,13,14,41,42,12,3,13,14,5,18,6,19,8,9,11,21,22,12,13,14,15,15,12,3,13,16,16,14,16,16,14,3,13,5,15,12,3,13,16,16,33,20,5,18,6,19,8,9,21,22,5,12,13,14,2,12,13,14,14,14,6,8,9,11,41,42,12,3,13,14,5,18,6,19,8,9,11,21,22,41,42,12,3,13,14,5,18,6,19,8,9,11,21,22,15,12,3,13,16,37,37,36,12,3,13,16,37,33,38,38,37,36,12,3,13,20,39,39,5,18,6,19,8,9,21,22,14,14,14,14,14,14,14,14,14,20,11,39,11,39,11,11,11,11,14,14,14,41,42,12,3,13,14,5,18,6,19,8,9,11,21,22,15,3,16,7,1,3,5,18,6,19,8,9,11,21,22,16,7,20,10,5,6,8,9,11,5,6,8,9,11,14,20,11,11,14],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[3,[1,2]]]],[[[5,[1,4]]]],[[[6,[1,2,4]]]],[[[8,[7,4]]]],[[[9,[7,4]]]],[[[11,[10,4]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],12],[[],13],[[],14],[[[12,[15,4]]]],[[[13,[15,2,4]]]],[[[14,[16,4]]]],[[],[[12,[15,[0,[4,17]]]]]],[[],[[13,[15,2,[0,[4,17]]]]]],[[],[[14,[16,[0,[4,17]]]]]],[[[5,[15,4]]],4],[[[18,[15,4]]],4],[[[6,[15,2,4]]],4],[[[19,[15,2,4]]],4],[[[8,[16,4]]],4],[[[9,[16,4]]],4],[[[11,[20,4]]],4],[[[21,[16,4]]],4],[[[22,[16,4]]],4],[[[5,[15,4]]],4],[[[18,[15,4]]],4],[[[9,[16,4]]],4],[[[22,[16,4]]],4],[[]],[[[9,[23,4]]],[[8,[23,4]]]],[[[11,[24,4]]],[[8,[24,4]]]],[[]],[[[9,[24,4]]],[[11,[24,4]]]],[[]],[[[5,[15,4]]]],[[[18,[15,4]]]],[[[6,[15,2,4]]]],[[[19,[15,2,4]]]],[[[8,[16,4]]]],[[[9,[16,4]]]],[[[11,[20,4]]]],[[[21,[16,4]]]],[[[22,[16,4]]]],[[[12,[15,[0,[4,25]]]],26],27],[[[13,[15,2,[0,[4,25]]]],26],27],[[[14,[16,[0,[4,25]]]],26],27],[[[5,[15,[0,[28,4]]]],26],27],[[[5,[15,[0,[25,4]]]],26],27],[[[18,[15,[0,[25,4]]]],26],27],[[[18,[15,[0,[28,4]]]],26],27],[[[6,[15,2,[0,[28,4]]]],26],27],[[[6,[15,2,[0,[25,4]]]],26],27],[[[19,[15,2,[0,[25,4]]]],26],27],[[[19,[15,2,[0,[28,4]]]],26],27],[[[8,[16,[0,[28,4]]]],26],27],[[[8,[16,[0,[25,4]]]],26],27],[[[9,[16,[0,[25,4]]]],26],27],[[[9,[16,[0,[28,4]]]],26],27],[[[11,[20,[0,[25,4]]]],26],27],[[[11,[20,[0,[28,4]]]],26],27],[[[21,[16,[0,[28,4]]]],26],27],[[[21,[16,[0,[25,4]]]],26],27],[[[22,[16,[0,[25,4]]]],26],27],[[[22,[16,[0,[28,4]]]],26],27],[[[12,[15,4]]]],[[[13,[15,2,4]]]],[[[12,[1,4]]]],[[[13,[1,2,4]]]],[[[14,[16,4]]]],[[[14,[7,4]]]],[[[14,[16,4]]]],[[[14,[7,4]]]],[[]],[[]],[[]],[29],[[],[[12,[15]]]],[[]],[[],[[13,[15,2]]]],[[]],[29],[[],[[14,[16]]]],[29],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[12,[15,4]]],4],[[[13,[15,2,4]]],4],[[[14,[16,4]]],4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[12,[15]]]],[[[13,[15,2]]]],[[[14,[16]]]],[[],30],[[],30],[[[12,[15,4]]],30],[[[3,[15,2]]],30],[[[13,[15,2,4]]],30],[[],30],[[],30],[[[14,[16,4]]],30],[[],30],[[],30],[[[14,[16,4]]],30],[[[3,[15,2]]],30],[[[13,[15,2,4]]],30],[[[5,[15,4]]],4],[[]],[[[12,[15,4]]],[[5,[15,4]]]],[[[3,[15,2]]]],[[[13,[15,2,4]]],[[6,[15,2,4]]]],[[]],[[]],[[]],[[]],[[[5,[15,4]],31],[[18,[15,4]]]],[[[18,[15,4]],31],[[18,[15,4]]]],[[[6,[15,2,4]],31],[[19,[15,2,4]]]],[[[19,[15,2,4]],31],[[19,[15,2,4]]]],[[[8,[16,4]],31],[[21,[16,4]]]],[[[9,[16,4]],31],[[22,[16,4]]]],[[[21,[16,4]],31],[[21,[16,4]]]],[[[22,[16,4]],31],[[22,[16,4]]]],[[[5,[15,4]]],[[12,[15,4]]]],[[],[[12,[15]]]],[[],[[13,[15,2]]]],[[],[[14,[16]]]],[[],32],[[[12,[15,4]]],15],[[[13,[15,2,4]]],15],[[[14,[16,4]]],16],[[[14,[16,4]]],[[8,[16,4]]]],[[[14,[33,4]]],[[8,[33,4]]]],[[[6,[15,2,4]]],[[13,[15,2,4]]]],[[[8,[16,4]]],[[14,[16,4]]]],[[[9,[16,4]]],[[14,[16,4]]]],[[[11,[20,4]]],[[14,[20,4]]]],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],30],[[[12,[15,4]]],[[35,[[5,[15,4]]]]]],[[[3,[15,2]]],30],[[[13,[15,2,4]]],[[35,[[6,[15,2,4]]]]]],[[],30],[[],30],[[],30],[[],30],[[[12,[36,4]]],[[35,[[5,[36,4]]]]]],[[[3,[36,2]]],30],[[[13,[36,2,4]]],[[35,[[6,[36,2,4]]]]]],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[[12,[36,4]]],[[35,[[5,[36,4]]]]]],[[[3,[36,2]]],30],[[[13,[36,2,4]]],[[35,[[6,[36,2,4]]]]]],[[],30],[[],30],[[],30],[[[5,[15,4]],31],[[34,[[18,[15,4]],[5,[15,4]]]]]],[[[18,[15,4]],31],[[34,[[18,[15,4]],[18,[15,4]]]]]],[[[6,[15,2,4]],31],[[34,[[19,[15,2,4]],[6,[15,2,4]]]]]],[[[19,[15,2,4]],31],[[34,[[19,[15,2,4]],[19,[15,2,4]]]]]],[[[8,[16,4]],31],[[34,[[21,[16,4]],[8,[16,4]]]]]],[[[9,[16,4]],31],[[34,[[22,[16,4]],[9,[16,4]]]]]],[[[21,[16,4]],31],[[34,[[21,[16,4]],[21,[16,4]]]]]],[[[22,[16,4]],31],[[34,[[22,[16,4]],[22,[16,4]]]]]],[[[14,[16,4]]],[[35,[[8,[16,4]]]]]],[[[14,[37,4]]],[[35,[[8,[37,4]]]]]],[[[14,[33,4]]],[[35,[[8,[33,4]]]]]],[[[14,[38,4]]],[[35,[[8,[38,4]]]]]],[[[14,[38,4]]],[[35,[[8,[38,4]]]]]],[[[14,[37,4]]],[[35,[[8,[37,4]]]]]],[[[14,[20,4]]],[[35,[[11,[20,4]]]]]],[[[14,[39,4]]],[[35,[[11,[39,4]]]]]],[[[14,[39,4]]],[[35,[[11,[39,4]]]]]],[[],30],[[[11,[20,4]]],[[34,[[9,[20,4]],[11,[20,4]]]]]],[[],30],[[[11,[39,4]]],[[34,[[9,[39,4]],[11,[39,4]]]]]],[[],30],[[[11,[39,4]]],[[34,[[9,[39,4]],[11,[39,4]]]]]],[[[11,[24,4]],31],35],[[[11,[[0,[39,24]],4]],31],35],[[[11,[[0,[39,24]],4]],31],35],[[[14,[16,4]]],[[35,[[9,[16,4]]]]]],[[[14,[37,4]]],[[35,[[9,[37,4]]]]]],[[[14,[37,4]]],[[35,[[9,[37,4]]]]]],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[]],[[[3,[15,2]]]],[[]],[[]],[[]],[[[3,[1,2]]]],[[[5,[1,4]]]],[[[18,[1,4]]]],[[[6,[1,2,4]]]],[[[19,[1,2,4]]]],[[[8,[7,4]]]],[[[9,[7,4]]]],[[[11,[10,4]]]],[[[21,[7,4]]]],[[[22,[7,4]]]],[[]],[[]],[[]],[[]],[[[5,[15,4]],31]],[[[6,[15,2,4]],31]],[[[8,[16,4]],31]],[[[9,[16,4]],31]],[[[11,[20,4]],31]],[[[5,[1,4]],31]],[[[6,[1,2,4]],31]],[[[8,[7,4]],31]],[[[9,[7,4]],31]],[[[11,[10,4]],31]],[[[14,[20,4]]],[[11,[20,4]]]],[[]],[[[11,[20,4]]],[[9,[20,4]]]],[[[11,[24,4]],31]],[[[14,[16,4]]],[[9,[16,4]]]]],"c":[],"p":[[8,"RawMutexFair"],[8,"GetThreadId"],[3,"RawReentrantMutex"],[8,"Sized"],[3,"MutexGuard"],[3,"ReentrantMutexGuard"],[8,"RawRwLockFair"],[3,"RwLockReadGuard"],[3,"RwLockWriteGuard"],[8,"RawRwLockUpgradeFair"],[3,"RwLockUpgradableReadGuard"],[3,"Mutex"],[3,"ReentrantMutex"],[3,"RwLock"],[8,"RawMutex"],[8,"RawRwLock"],[8,"Default"],[3,"MappedMutexGuard"],[3,"MappedReentrantMutexGuard"],[8,"RawRwLockUpgrade"],[3,"MappedRwLockReadGuard"],[3,"MappedRwLockWriteGuard"],[8,"RawRwLockDowngrade"],[8,"RawRwLockUpgradeDowngrade"],[8,"Debug"],[3,"Formatter"],[6,"Result"],[8,"Display"],[15,"never"],[15,"bool"],[8,"FnOnce"],[3,"NonZeroUsize"],[8,"RawRwLockRecursive"],[4,"Result"],[4,"Option"],[8,"RawMutexTimed"],[8,"RawRwLockTimed"],[8,"RawRwLockRecursiveTimed"],[8,"RawRwLockUpgradeTimed"],[3,"TypeId"],[3,"GuardSend"],[3,"GuardNoSend"]]},\
"log":{"doc":"A lightweight logging facade.","t":"NNNNNNEEIDDNDDDRDNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLOLLKLLLLLLLOLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLOLLLLLLLLLLLLLLLLKOOFLLFLLLLLLLLLLLLLLFFFFLLLLLLOLLLLLLLLLLLLLLLLLLLLLLLLO","n":["Debug","Debug","Error","Error","Info","Info","Level","LevelFilter","Log","Metadata","MetadataBuilder","Off","ParseLevelError","Record","RecordBuilder","STATIC_MAX_LEVEL","SetLoggerError","Trace","Trace","Warn","Warn","args","args","as_str","as_str","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","builder","builder","clone","clone","clone","clone","cmp","cmp","cmp","cmp","debug","default","default","enabled","eq","eq","eq","eq","eq","eq","eq","error","file","file","file_static","file_static","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_str","from_str","hash","hash","hash","hash","info","into","into","into","into","into","into","into","into","iter","iter","level","level","level","level","line","line","log","log","log_enabled","logger","max","max","max_level","metadata","metadata","module_path","module_path","module_path_static","module_path_static","new","new","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","set_logger","set_logger_racy","set_max_level","set_max_level_racy","target","target","target","target","to_level","to_level_filter","trace","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","warn"],"q":[[0,"log"]],"d":["The “debug” level.","Corresponds to the <code>Debug</code> log level.","The “error” level.","Corresponds to the <code>Error</code> log level.","The “info” level.","Corresponds to the <code>Info</code> log level.","An enum representing the available verbosity levels of the …","An enum representing the available verbosity level filters …","A trait encapsulating the operations required of a logger.","Metadata about a log message.","Builder for <code>Metadata</code>.","A level lower than all log levels.","The type returned by <code>from_str</code> when the string doesn’t …","The “payload” of a log message.","Builder for <code>Record</code>.","The statically resolved maximum log level.","The type returned by <code>set_logger</code> if <code>set_logger</code> has already …","The “trace” level.","Corresponds to the <code>Trace</code> log level.","The “warn” level.","Corresponds to the <code>Warn</code> log level.","The message body.","Set <code>args</code>.","Returns the string representation of the <code>Level</code>.","Returns the string representation of the <code>LevelFilter</code>.","","","","","","","","","","","","","","","","","Invoke the builder and return a <code>Record</code>","Returns a <code>Metadata</code> object.","Returns a new builder.","Returns a new builder.","","","","","","","","","Logs a message at the debug level.","","","Determines if a log message with the specified metadata …","","","","","","","","Logs a message at the error level.","The source file containing the message.","Set <code>file</code>","The module path of the message, if it is a <code>&#39;static</code> string.","Set <code>file</code> to a <code>&#39;static</code> string.","Flushes any buffered records.","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Logs a message at the info level.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Iterate through all supported logging levels.","Iterate through all supported filtering levels.","The verbosity level of the message.","Set <code>Metadata::level</code>.","The verbosity level of the message.","Setter for <code>level</code>.","The line containing the message.","Set <code>line</code>","Logs the <code>Record</code>.","The standard logging macro.","Determines if a message logged at the specified level in …","Returns a reference to the logger.","Returns the most verbose logging level.","Returns the most verbose logging level filter.","Returns the current maximum log level.","Metadata about the log directive.","Set <code>metadata</code>. Construct a <code>Metadata</code> object with …","The module path of the message.","Set <code>module_path</code>","The module path of the message, if it is a <code>&#39;static</code> string.","Set <code>module_path</code> to a <code>&#39;static</code> string","Construct new <code>RecordBuilder</code>.","Construct a new <code>MetadataBuilder</code>.","","","","","","","Sets the global logger to a <code>&amp;&#39;static Log</code>.","A thread-unsafe version of <code>set_logger</code>.","Sets the global maximum log level.","A thread-unsafe version of <code>set_max_level</code>.","The name of the target of the directive.","Set <code>Metadata::target</code>","The name of the target of the directive.","Setter for <code>target</code>.","Converts <code>self</code> to the equivalent <code>Level</code>.","Converts the <code>Level</code> to the equivalent <code>LevelFilter</code>.","Logs a message at the trace level.","","","","","","","","","","","","","","","","","","","","","","","","","Logs a message at the warn level."],"i":[4,6,4,6,4,6,0,0,0,0,0,6,0,0,0,0,0,4,6,4,6,1,3,4,6,4,6,1,3,8,7,15,11,4,6,1,3,8,7,15,11,3,7,1,8,4,6,1,8,4,6,8,7,0,3,7,20,4,4,6,6,8,7,11,0,1,3,1,3,20,4,4,6,6,1,3,8,7,15,15,11,11,4,6,1,3,8,7,15,11,4,6,4,6,8,7,0,4,6,1,3,8,7,15,11,4,6,1,3,8,7,1,3,20,0,0,0,4,6,0,1,3,1,3,1,3,3,7,4,4,6,6,8,7,0,0,0,0,1,3,8,7,6,4,0,4,6,1,3,8,7,15,11,4,6,1,3,8,7,15,11,4,6,1,3,8,7,15,11,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],[[3,2],3],[4,5],[6,5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[3,1],[7,8],[[],3],[[],7],[4,4],[6,6],[1,1],[8,8],[[4,4],9],[[6,6],9],[[8,8],9],[[7,7],9],0,[[],3],[[],7],[8,10],[[4,4],10],[[4,6],10],[[6,4],10],[[6,6],10],[[8,8],10],[[7,7],10],[[11,11],10],0,[1,[[12,[5]]]],[[3,[12,[5]]],3],[1,[[12,[5]]]],[[3,[12,[5]]],3],[[]],[[4,13],14],[[4,13],14],[[6,13],14],[[6,13],14],[[1,13],14],[[3,13],14],[[8,13],14],[[7,13],14],[[15,13],14],[[15,13],14],[[11,13],14],[[11,13],14],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[5,[[16,[4]]]],[5,[[16,[6]]]],[[4,17]],[[6,17]],[[8,17]],[[7,17]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],18],[[],18],[1,4],[[3,4],3],[8,4],[[7,4],7],[1,[[12,[19]]]],[[3,[12,[19]]],3],[1],0,0,[[],20],[[],4],[[],6],[[],6],[1,8],[[3,8],3],[1,[[12,[5]]]],[[3,[12,[5]]],3],[1,[[12,[5]]]],[[3,[12,[5]]],3],[[],3],[[],7],[[4,6],[[12,[9]]]],[[4,4],[[12,[9]]]],[[6,4],[[12,[9]]]],[[6,6],[[12,[9]]]],[[8,8],[[12,[9]]]],[[7,7],[[12,[9]]]],[20,[[16,[15]]]],[20,[[16,[15]]]],[6],[6],[1,5],[[3,5],3],[8,5],[[7,5],7],[6,[[12,[4]]]],[4,6],0,[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],0],"c":[],"p":[[3,"Record"],[3,"Arguments"],[3,"RecordBuilder"],[4,"Level"],[15,"str"],[4,"LevelFilter"],[3,"MetadataBuilder"],[3,"Metadata"],[4,"Ordering"],[15,"bool"],[3,"ParseLevelError"],[4,"Option"],[3,"Formatter"],[6,"Result"],[3,"SetLoggerError"],[4,"Result"],[8,"Hasher"],[8,"Iterator"],[15,"u32"],[8,"Log"],[3,"TypeId"]]},\
"memchr":{"doc":"This library provides heavily optimized routines for …","t":"DDDLLLLLLLLLLLLLLLFFFFFFAFFFFFFLLLLLLLLLLLLLLLLLLLLLNDDDDDNELLLLLLLLLLLLLLLLLLLLLLLLLLFLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLFLLLLLLLLLLLLLLLLLLLLLLL","n":["Memchr","Memchr2","Memchr3","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","from","from","from","into","into","into","into_iter","into_iter","into_iter","memchr","memchr2","memchr2_iter","memchr3","memchr3_iter","memchr_iter","memmem","memrchr","memrchr2","memrchr2_iter","memrchr3","memrchr3_iter","memrchr_iter","new","new","new","next","next","next","next_back","next_back","next_back","size_hint","size_hint","size_hint","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","Auto","FindIter","FindRevIter","Finder","FinderBuilder","FinderRev","None","Prefilter","as_ref","as_ref","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_forward","build_reverse","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","default","default","find","find","find_iter","find_iter","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","into","into","into","into","into","into","into_iter","into_iter","into_owned","into_owned","into_owned","into_owned","needle","needle","new","new","new","next","next","prefilter","rfind","rfind","rfind_iter","rfind_iter","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id"],"q":[[0,"memchr"],[52,"memchr::memmem"]],"d":["An iterator for <code>memchr</code>.","An iterator for <code>memchr2</code>.","An iterator for <code>memchr3</code>.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Search for the first occurrence of a byte in a slice.","Like <code>memchr</code>, but searches for either of two bytes instead …","An iterator over all occurrences of the needles in a …","Like <code>memchr</code>, but searches for any of three bytes instead …","An iterator over all occurrences of the needles in a …","An iterator over all occurrences of the needle in a …","This module provides forward and reverse substring search …","Search for the last occurrence of a byte in a slice.","Like <code>memrchr</code>, but searches for either of two bytes instead …","An iterator over all occurrences of the needles in a …","Like <code>memrchr</code>, but searches for any of three bytes instead …","An iterator over all occurrences of the needles in a …","An iterator over all occurrences of the needle in a …","Creates a new iterator that yields all positions of needle …","Creates a new iterator that yields all positions of needle …","Create a new <code>Memchr3</code> that’s initialized to zero with a …","","","","","","","","","","","","","","","","","","","Automatically detect whether a heuristic prefilter should …","An iterator over non-overlapping substring matches.","An iterator over non-overlapping substring matches in …","A single substring searcher fixed to a particular needle.","A builder for constructing non-default forward or reverse …","A single substring reverse searcher fixed to a particular …","Never used a prefilter in substring search.","Prefilter controls whether heuristics are used to …","Convert this finder into its borrowed variant.","Convert this finder into its borrowed variant.","","","","","","","","","","","","","Build a forward finder using the given needle from the …","Build a reverse finder using the given needle from the …","","","","","","","","","","","Returns the index of the first occurrence of the given …","Returns the index of the first occurrence of this needle …","Returns an iterator over all non-overlapping occurrences …","Returns an iterator over all occurrences of a substring in …","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Convert this iterator into its owned variant, such that it …","Convert this iterator into its owned variant, such that it …","Convert this finder into its owned variant, such that it …","Convert this finder into its owned variant, such that it …","Returns the needle that this finder searches for.","Returns the needle that this finder searches for.","Create a new finder for the given needle.","Create a new reverse finder for the given needle.","Create a new finder builder with default settings.","","","Configure the prefilter setting for the finder.","Returns the index of the last occurrence of the given …","Returns the index of the last occurrence of this needle in …","Returns a reverse iterator over all non-overlapping …","Returns a reverse iterator over all occurrences of a …","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,7,5,6,7,5,6,7,5,6,7,5,6,7,5,6,0,0,0,0,0,0,0,0,0,0,0,0,0,7,5,6,7,5,6,7,5,6,7,5,6,7,5,6,7,5,6,7,5,6,16,0,0,0,0,0,16,0,11,12,16,17,20,11,12,13,16,17,20,11,12,13,13,13,16,11,12,13,16,11,12,13,16,13,0,11,0,11,16,17,20,11,12,13,16,17,20,11,12,13,16,17,20,11,12,13,17,20,17,20,11,12,11,12,11,12,13,17,20,13,0,12,0,12,16,11,12,13,16,17,20,11,12,13,16,17,20,11,12,13,16,17,20,11,12,13],"f":[0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[1,[2,[1]]],[[4,[3]]]],[[1,1,[2,[1]]],[[4,[3]]]],[[1,1,[2,[1]]],5],[[1,1,1,[2,[1]]],[[4,[3]]]],[[1,1,1,[2,[1]]],6],[[1,[2,[1]]],7],0,[[1,[2,[1]]],[[4,[3]]]],[[1,1,[2,[1]]],[[4,[3]]]],[[1,1,[2,[1]]],[[8,[5]]]],[[1,1,1,[2,[1]]],[[4,[3]]]],[[1,1,1,[2,[1]]],[[8,[6]]]],[[1,[2,[1]]],[[8,[7]]]],[[1,[2,[1]]],7],[[1,1,[2,[1]]],5],[[1,1,1,[2,[1]]],6],[7,[[4,[3]]]],[5,[[4,[3]]]],[6,[[4,[3]]]],[7,4],[5,4],[6,4],[7],[5],[6],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],10],[[],10],[[],10],0,0,0,0,0,0,0,0,[11,11],[12,12],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[13,[0,[14,[15,[[2,[1]]]]]]],11],[[13,[0,[14,[15,[[2,[1]]]]]]],12],[16,16],[11,11],[12,12],[13,13],[[]],[[]],[[]],[[]],[[],16],[[],13],[[[2,[1]],[2,[1]]],[[4,[3]]]],[[11,[2,[1]]],[[4,[3]]]],[[[2,[1]],[0,[14,[15,[[2,[1]]]]]]],17],[[11,[2,[1]]],17],[[16,18],19],[[17,18],19],[[20,18],19],[[11,18],19],[[12,18],19],[[13,18],19],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[17,17],[20,20],[11,11],[12,12],[11,[[2,[1]]]],[12,[[2,[1]]]],[[[0,[14,[15,[[2,[1]]]]]]],11],[[[0,[14,[15,[[2,[1]]]]]]],12],[[],13],[17,[[4,[3]]]],[20,[[4,[3]]]],[[13,16],13],[[[2,[1]],[2,[1]]],[[4,[3]]]],[[12,[15,[[2,[1]]]]],[[4,[3]]]],[[[2,[1]],[0,[14,[15,[[2,[1]]]]]]],20],[[12,[2,[1]]],20],[[]],[[]],[[]],[[]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10]],"c":[],"p":[[15,"u8"],[15,"slice"],[15,"usize"],[4,"Option"],[3,"Memchr2"],[3,"Memchr3"],[3,"Memchr"],[3,"Rev"],[4,"Result"],[3,"TypeId"],[3,"Finder"],[3,"FinderRev"],[3,"FinderBuilder"],[8,"Sized"],[8,"AsRef"],[4,"Prefilter"],[3,"FindIter"],[3,"Formatter"],[6,"Result"],[3,"FindRevIter"]]},\
"memmap2":{"doc":"A cross-platform Rust API for memory mapped buffers.","t":"ENNNNNNNNNDIDDDDNNNNNNNLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["Advice","DoDump","DoFork","DontDump","DontFork","DontNeed","Free","HugePage","HwPoison","Mergeable","Mmap","MmapAsRawDesc","MmapMut","MmapOptions","MmapRaw","MmapRawDescriptor","NoHugePage","Normal","Random","Remove","Sequential","Unmergeable","WillNeed","advise","advise","advise","advise_range","advise_range","advise_range","as_mut","as_mut_ptr","as_ptr","as_raw_desc","as_ref","as_ref","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","deref","deref","deref_mut","eq","equivalent","flush","flush","flush_async","flush_async","flush_async_range","flush_async_range","flush_range","flush_range","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","hash","into","into","into","into","into","into","len","len","lock","lock","lock","make_exec","make_mut","make_read_only","map","map","map_anon","map_anon","map_copy","map_copy_read_only","map_exec","map_mut","map_mut","map_raw","map_raw","new","offset","populate","stack","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","unlock","unlock","unlock"],"q":[[0,"memmap2"]],"d":["Values supported by Mmap::advise and MmapMut::advise …","<strong>MADV_DODUMP</strong> - Linux only (since Linux 3.4)","<strong>MADV_DOFORK</strong> - Linux only (since Linux 2.6.16)","<strong>MADV_DONTDUMP</strong> - Linux only (since Linux 3.4)","<strong>MADV_DONTFORK</strong> - Linux only (since Linux 2.6.16)","<strong>MADV_DONTNEED</strong>","<strong>MADV_FREE</strong> - Linux (since Linux 4.5) and Darwin","<strong>MADV_HUGEPAGE</strong> - Linux only (since Linux 2.6.38)","<strong>MADV_HWPOISON</strong> - Linux only (since Linux 2.6.32)","<strong>MADV_MERGEABLE</strong> - Linux only (since Linux 2.6.32)","A handle to an immutable memory mapped buffer.","","A handle to a mutable memory mapped buffer.","A memory map builder, providing advanced options and flags …","A handle to a raw memory mapped buffer.","","<strong>MADV_NOHUGEPAGE</strong> - Linux only (since Linux 2.6.38)","<strong>MADV_NORMAL</strong>","<strong>MADV_RANDOM</strong>","<strong>MADV_REMOVE</strong> - Linux only (since Linux 2.6.16)","<strong>MADV_SEQUENTIAL</strong>","<strong>MADV_UNMERGEABLE</strong> - Linux only (since Linux 2.6.32)","<strong>MADV_WILLNEED</strong>","Advise OS how this memory map will be accessed. Only …","Advise OS how this memory map will be accessed. Only …","Advise OS how this memory map will be accessed. Only …","Advise OS how this range of memory map will be accessed.","Advise OS how this range of memory map will be accessed.","Advise OS how this range of memory map will be accessed.","","Returns an unsafe mutable pointer to the memory mapped …","Returns a raw pointer to the memory mapped file.","","","","","","","","","","","","","","","","","","","","","","","","","","Flushes outstanding memory map modifications to disk.","Flushes outstanding memory map modifications to disk.","Asynchronously flushes outstanding memory map …","Asynchronously flushes outstanding memory map …","Asynchronously flushes outstanding memory map …","Asynchronously flushes outstanding memory map …","Flushes outstanding memory map modifications in the range …","Flushes outstanding memory map modifications in the range …","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns the length in bytes of the memory map.","Configures the created memory mapped buffer to be <code>len</code> …","Lock the whole memory map into RAM. Only supported on Unix.","Lock the whole memory map into RAM. Only supported on Unix.","Lock the whole memory map into RAM. Only supported on Unix.","Transition the memory map to be readable and executable.","Transition the memory map to be writable.","Returns an immutable version of this memory mapped buffer.","Creates a read-only memory map backed by a file.","Creates a read-only memory map backed by a file.","Creates an anonymous memory map.","Creates an anonymous memory map.","Creates a copy-on-write memory map backed by a file.","Creates a copy-on-write read-only memory map backed by a …","Creates a readable and executable memory map backed by a …","Creates a writeable memory map backed by a file.","Creates a writeable memory map backed by a file.","Creates a writeable memory map backed by a file.","Creates a raw memory map.","Creates a new set of options for configuring and creating …","Configures the memory map to start at byte <code>offset</code> from the …","Populate (prefault) page tables for a mapping.","Configures the anonymous memory map to be suitable for a …","","","","","","","","","","","","","","","","","","","","","Unlock the whole memory map. Only supported on Unix.","Unlock the whole memory map. Only supported on Unix.","Unlock the whole memory map. Only supported on Unix."],"i":[0,2,2,2,2,2,2,2,2,2,0,0,0,0,0,0,2,2,2,2,2,2,2,1,4,5,1,4,5,5,4,4,15,1,5,9,1,4,5,2,10,9,1,4,5,2,10,2,10,2,10,10,1,5,5,2,2,4,5,4,5,4,5,4,5,1,4,5,2,10,9,1,4,4,4,5,2,10,2,9,1,4,5,2,10,4,10,1,4,5,5,1,5,1,10,5,10,10,10,10,5,10,4,10,10,10,10,10,2,10,9,1,4,5,2,10,9,1,4,5,2,10,9,1,4,5,2,10,1,4,5],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,2],3],[[4,2],3],[[5,2],3],[[1,2,6,6],3],[[4,2,6,6],3],[[5,2,6,6],3],[5,[[8,[7]]]],[4,7],[4,7],[[],9],[1,[[8,[7]]]],[5,[[8,[7]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[2,2],[10,10],[[]],[[]],[[],10],[1,[[8,[7]]]],[5,[[8,[7]]]],[5,[[8,[7]]]],[[2,2],11],[[],11],[4,3],[5,3],[4,3],[5,3],[[4,6,6],3],[[5,6,6],3],[[4,6,6],3],[[5,6,6],3],[[1,12],13],[[4,12],13],[[5,12],13],[[2,12],13],[[10,12],13],[[]],[[]],[[]],[1,4],[5,4],[[]],[[]],[[]],[[2,14]],[[]],[[]],[[]],[[]],[[]],[[]],[4,6],[[10,6],10],[1,3],[4,3],[5,3],[5,[[3,[1]]]],[1,[[3,[5]]]],[5,[[3,[1]]]],[15,[[3,[1]]]],[[10,15],[[3,[1]]]],[6,[[3,[5]]]],[10,[[3,[5]]]],[[10,15],[[3,[5]]]],[[10,15],[[3,[1]]]],[[10,15],[[3,[1]]]],[15,[[3,[5]]]],[[10,15],[[3,[5]]]],[15,[[3,[4]]]],[[10,15],[[3,[4]]]],[[],10],[[10,16],10],[10,10],[10,10],[[]],[[]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[1,3],[4,3],[5,3]],"c":[],"p":[[3,"Mmap"],[4,"Advice"],[6,"Result"],[3,"MmapRaw"],[3,"MmapMut"],[15,"usize"],[15,"u8"],[15,"slice"],[3,"MmapRawDescriptor"],[3,"MmapOptions"],[15,"bool"],[3,"Formatter"],[6,"Result"],[8,"Hasher"],[8,"MmapAsRawDesc"],[15,"u64"],[4,"Result"],[3,"TypeId"]]},\
"memoffset":{"doc":"A crate used for calculating offsets of struct members and …","t":"OOOOO","n":["offset_of","offset_of_tuple","raw_field","raw_field_tuple","span_of"],"q":[[0,"memoffset"]],"d":["Calculates the offset of the specified field from the …","Calculates the offset of the specified field from the …","Computes a const raw pointer to the given field of the …","Computes a const raw pointer to the given field of the …","Produces a range instance representing the sub-slice …"],"i":[0,0,0,0,0],"f":[0,0,0,0,0],"c":[],"p":[]},\
"minimal_lexical":{"doc":"Fast, minimal float-parsing algorithm.","t":"SSSSISSSSSSSSSSSSSSSSSLKKLLLFKK","n":["CARRY_MASK","DENORMAL_EXPONENT","EXPONENT_BIAS","EXPONENT_MASK","Float","HIDDEN_BIT_MASK","INFINITE_POWER","INVALID_FP","LARGEST_POWER_OF_TEN","MANTISSA_MASK","MANTISSA_SIZE","MAX_DIGITS","MAX_EXPONENT","MAX_EXPONENT_DISGUISED_FAST_PATH","MAX_EXPONENT_FAST_PATH","MAX_EXPONENT_ROUND_TO_EVEN","MAX_MANTISSA_FAST_PATH","MINIMUM_EXPONENT","MIN_EXPONENT_FAST_PATH","MIN_EXPONENT_ROUND_TO_EVEN","SIGN_MASK","SMALLEST_POWER_OF_TEN","exponent","from_bits","from_u64","int_pow_fast_path","is_denormal","mantissa","parse_float","pow_fast_path","to_bits"],"q":[[0,"minimal_lexical"]],"d":["Mask to determine if a full-carry occurred (1 in bit above …","Exponent portion of a denormal float.","Bias of the exponet","Bitmask for the exponent, including the hidden bit.","Generic floating-point type, to be used in generic code …","Bitmask for the hidden bit in exponent, which is an …","","Bias for marking an invalid extended float.","Largest decimal exponent for a non-infinite value.","Bitmask for the mantissa (fraction), excluding the hidden …","Size of the significand (mantissa) without hidden bit.","Maximum number of digits that can contribute in the …","Maximum exponent value in float.","Maximum exponent that can be represented for a …","Maximum exponent that for a fast path case, or …","","","Minimum normal exponent value …","Minimum exponent that for a fast path case, or …","","Bitmask for the sign bit.","Smallest decimal exponent for a non-zero value.","Get exponent component from the float.","","Convert 64-bit integer to float.","Get a small, integral power-of-radix for fast-path …","Returns true if the float is a denormal.","Get mantissa (significand) component from float.","Parse float from extracted float components.","Get a small power-of-radix for fast-path multiplication.",""],"i":[8,8,8,8,0,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,0,8,8],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[2],[2],[[3,4],2],[[],5],[[],2],[[[0,[6,7]],[0,[6,7]],1],8],[3],[[],2]],"c":[],"p":[[15,"i32"],[15,"u64"],[15,"usize"],[15,"u32"],[15,"bool"],[8,"Iterator"],[8,"Clone"],[8,"Float"]]},\
"miniz_oxide":{"doc":"A pure rust replacement for the miniz DEFLATE/zlib …","t":"NNNENNNEEGENNNNNNNNNDNNNNLLLLLLLLLLMMLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLMLLLLLLLLLLLLLLLLLLLLLNNENNNNLLLLFFALLLLLLALLLLNDEDNNNNNNNNNNNNEELLLLLLLLLLLLLLLLLFFFLLALLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLRRRRRRRRFNNDNNNNNELLLLLLAFFFFFLLLLLLLLLLLMMALLLLLLLLDRLLLLFLLALLLLLLRRRRRDDDIDLLLLLLLLLLLLLLFLLLLLLLLKLLLLLLLLLLLLLLLLL","n":["Block","Buf","Data","DataFormat","ErrNo","Finish","Full","MZError","MZFlush","MZResult","MZStatus","Mem","NeedDict","None","Ok","Param","Partial","Raw","Stream","StreamEnd","StreamResult","Sync","Version","ZLibIgnoreChecksum","Zlib","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bytes_consumed","bytes_written","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","deflate","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","error","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_window_bits","hash","hash","hash","hash","hash","inflate","into","into","into","into","into","new","status","to_owned","to_owned","to_owned","to_owned","to_owned","to_window_bits","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","BestCompression","BestSpeed","CompressionLevel","DefaultCompression","DefaultLevel","NoCompression","UberCompression","borrow","borrow_mut","clone","clone_into","compress_to_vec","compress_to_vec_zlib","core","eq","equivalent","fmt","from","hash","into","stream","to_owned","try_from","try_into","type_id","BadParam","CallbackFunc","CompressionStrategy","CompressorOxide","Default","Done","Filtered","Finish","Fixed","Full","HuffmanOnly","None","Okay","PutBufFailed","RLE","Sync","TDEFLFlush","TDEFLStatus","adler32","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","compress","compress_to_output","create_comp_flags_from_zip_params","data_format","default","deflate_flags","eq","eq","eq","equivalent","equivalent","equivalent","flags","fmt","fmt","fmt","from","from","from","from","from","from","hash","hash","hash","into","into","into","into","into","new","new","prev_return_status","put_buf_func","reset","set_compression_level","set_compression_level_raw","set_format_and_level","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","TDEFL_COMPUTE_ADLER32","TDEFL_FILTER_MATCHES","TDEFL_FORCE_ALL_RAW_BLOCKS","TDEFL_FORCE_ALL_STATIC_BLOCKS","TDEFL_GREEDY_PARSING_FLAG","TDEFL_NONDETERMINISTIC_PARSING_FLAG","TDEFL_RLE_MATCHES","TDEFL_WRITE_ZLIB_HEADER","deflate","Adler32Mismatch","BadParam","DecompressError","Done","Failed","FailedCannotMakeProgress","HasMoreOutput","NeedsMoreInput","TINFLStatus","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","core","decompress_slice_iter_to_slice","decompress_to_vec","decompress_to_vec_with_limit","decompress_to_vec_zlib","decompress_to_vec_zlib_with_limit","eq","equivalent","fmt","fmt","fmt","from","from","from_i32","hash","into","into","output","status","stream","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","DecompressorOxide","TINFL_LZ_DICT_SIZE","adler32","adler32_header","borrow","borrow_mut","decompress","default","from","inflate_flags","init","into","new","try_from","try_into","type_id","TINFL_FLAG_COMPUTE_ADLER32","TINFL_FLAG_HAS_MORE_INPUT","TINFL_FLAG_IGNORE_ADLER32","TINFL_FLAG_PARSE_ZLIB_HEADER","TINFL_FLAG_USING_NON_WRAPPING_OUTPUT_BUF","FullReset","InflateState","MinReset","ResetPolicy","ZeroReset","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","decompressor","default","from","from","from","from","inflate","into","into","into","into","last_status","new","new_boxed","new_boxed_with_window_bits","reset","reset","reset","reset","reset","reset_as","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id"],"q":[[0,"miniz_oxide"],[106,"miniz_oxide::deflate"],[131,"miniz_oxide::deflate::core"],[222,"miniz_oxide::deflate::core::deflate_flags"],[230,"miniz_oxide::deflate::stream"],[231,"miniz_oxide::inflate"],[274,"miniz_oxide::inflate::core"],[290,"miniz_oxide::inflate::core::inflate_flags"],[295,"miniz_oxide::inflate::stream"]],"d":["Not implemented.","Buffer-related error.","Error in inflation; see <code>inflate::stream::inflate()</code> for …","How compressed data is wrapped.","Unused","Attempt to flush the remaining data and end the stream.","Same as <code>Sync</code>, but resets the compression dictionary so …","A list of miniz failed status codes.","A list of flush types.","<code>Result</code> alias for all miniz status codes both successful …","A list of miniz successful status codes.","Unused","Unused","Don’t force any flushing. Used when more input data is …","Operation succeeded.","Bad parameters.","Zlib partial flush. Currently treated as <code>Sync</code>.","Raw DEFLATE.","General stream error.","Operation succeeded and end of deflate stream was found.","A structure containing the result of a call to the inflate …","Finish compressing the currently buffered data, and output …","Unused","Zlib wrapped but ignore and don’t compute the adler32 …","Wrapped using the zlib format.","","","","","","","","","","","The number of bytes consumed from the input slice.","The number of bytes written to the output slice.","","","","","","","","","","","This module contains functionality for compression.","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","This module contains functionality for decompression.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Create an MZFlush value from an integer value.","The return status of the call.","","","","","","","","","","","","","","","","","","","","","","Slow/high compression. Do a lot of checks to try to find …","Fast compression. Uses a special compression routine that …","How much processing the compressor should do to compress …","Use the default compression level.","Default compromise between speed and compression.","Don’t do any compression, only output uncompressed …","Even more checks, can be very slow.","","","","","Compress the input data to a vector, using the specified …","Compress the input data to a vector, using the specified …","Streaming compression functionality.","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Extra streaming compression functionality.","","","","","Usage error.","Callback function and user used in <code>compress_to_output</code>.","Strategy setting for compression.","Main compression struct.","Don’t use any of the special strategies.","Compression succeeded and the deflate stream was ended.","Only use matches that are at least 5 bytes long.","Try to flush everything and end the deflate stream.","Only use static/fixed blocks. (Blocks using the default …","Same as <code>Sync</code>, but reset the dictionary so that the …","Don’t look for matches, only huffman encode the literals.","Normal operation.","Compression succeeded normally.","Error putting data into output buffer.","Only look for matches with a distance of 1, i.e do …","Try to flush all the current data and output an empty raw …","A list of deflate flush types.","Return status of compression.","Get the adler32 checksum of the currently encoded data.","","","","","","","","","","","","","","","","","Main compression function. Tries to compress as much as …","Main compression function. Callbacks output.","Create a set of compression flags using parameters used by …","Returns whether the compressor is wrapping the data in a …","Initialize the compressor with a level of 4, zlib wrapper …","","","","","","","","Get the raw compressor flags.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Create a new <code>CompressorOxide</code> with the given flags.","","Get the return status of the previous <code>compress</code> call with …","","Reset the state of the compressor, keeping the same …","Set the compression level of the compressor.","Set the compression level of the compressor using an …","Update the compression settings of the compressor.","","","","","","","","","","","","","","","","","","","Should we compute the adler32 checksum.","Only use matches that are at least 6 bytes long.","Force the compressor to only output raw/uncompressed …","Force the compressor to only output static blocks. (Blocks …","Should we use greedy parsing (as opposed to lazy parsing …","Used in miniz to skip zero-initializing hash and dict. We …","Only look for matches with a distance of 0.","Whether to use a zlib wrapper.","Try to compress from input to output with the given …","The decompression went fine, but the adler32 checksum did …","The output buffer is an invalid size; consider the <code>flags</code> …","Struct return when decompress_to_vec functions fail.","Finished decompression without issues.","Failed to decompress due to invalid data.","More input data was expected, but the caller indicated …","There is still pending data that didn’t fit in the …","The decompressor needs more input data to continue …","Return status codes.","","","","","","","Streaming decompression functionality.","Decompress one or more source slices from an iterator into …","Decompress the deflate-encoded data in <code>input</code> to a vector.","Decompress the deflate-encoded data in <code>input</code> to a vector.","Decompress the deflate-encoded data (with a zlib wrapper) …","Decompress the deflate-encoded data (with a zlib wrapper) …","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","The currently decompressed data if any.","Decompressor status on failure. See TINFLStatus for …","Extra streaming decompression functionality.","","","","","","","","","Main decompression struct.","","Returns the adler32 checksum of the currently decompressed …","Returns the adler32 that was read from the zlib header if …","","","Main decompression function. Keeps decompressing data from …","Create a new tinfl_decompressor with all fields set to 0.","Returns the argument unchanged.","Flags to <code>decompress()</code> to control how inflation works.","Set the current state to <code>Start</code>.","Calls <code>U::from(self)</code>.","Create a new tinfl_decompressor with all fields set to 0.","","","","Calculate the adler32 checksum of the output data even if …","There will be more input that hasn’t been given to the …","Ignore adler32 checksum even if we are inflating a zlib …","Should we try to parse a zlib header?","The output buffer should not wrap around.","Full reset of the state, including zeroing memory.","A struct that compbines a decompressor with extra data for …","Resets state, without performing expensive ops (e.g. …","Tag that determines reset policy of InflateState","Resets state and zero memory, continuing to use the same …","","","","","","","","","Access the innner decompressor.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Try to decompress from <code>input</code> to <code>output</code> with the given …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Return the status of the last call to <code>inflate</code> with this …","Create a new state.","Create a new state on the heap.","Create a new state using miniz/zlib style window bits …","Performs reset","","","","Reset the decompressor without re-allocating memory, using …","Resets the state according to specified policy.","","","","","","","","","","","",""],"i":[1,3,3,0,3,1,1,0,0,0,0,3,2,1,2,3,1,4,3,2,0,1,3,4,4,1,2,3,4,5,1,2,3,4,5,5,5,1,2,3,4,5,1,2,3,4,5,0,1,2,3,4,5,1,2,3,4,5,5,1,2,3,4,5,9,9,1,2,3,4,5,4,1,2,3,4,5,0,1,2,3,4,5,1,5,1,2,3,4,5,4,1,2,3,4,5,1,2,3,4,5,1,2,3,4,5,14,14,0,14,14,14,14,14,14,14,14,0,0,0,14,14,14,14,14,14,0,14,14,14,14,22,0,0,0,20,22,20,21,20,21,20,21,22,22,20,21,0,0,18,18,37,20,21,22,18,37,20,21,22,20,21,22,20,21,22,0,0,0,18,18,0,20,21,22,20,21,22,18,20,21,22,18,37,20,21,21,22,20,21,22,18,37,20,21,22,18,21,18,37,18,18,18,18,20,21,22,18,37,20,21,22,18,37,20,21,22,18,37,20,21,22,0,0,0,0,0,0,0,0,0,24,24,0,24,24,24,24,24,0,24,27,24,27,24,24,0,0,0,0,0,0,24,24,24,27,27,24,27,24,24,24,27,27,27,0,24,27,24,27,24,27,24,27,0,0,30,30,30,30,0,30,30,0,30,30,30,30,30,30,0,0,0,0,0,0,0,0,0,0,33,34,35,31,33,34,35,31,31,31,33,34,35,31,0,33,34,35,31,31,31,31,31,36,33,34,35,31,31,33,34,35,31,33,34,35,31,33,34,35,31],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[1,1],[2,2],[3,3],[4,4],[5,5],[[]],[[]],[[]],[[]],[[]],0,[[1,1],6],[[2,2],6],[[3,3],6],[[4,4],6],[[5,5],6],[[],6],[[],6],[[],6],[[],6],[[],6],[3,5],[[1,7],8],[[2,7],8],[[3,7],8],[[4,7],8],[[5,7],8],[5,9],[5,9],[[]],[[]],[[]],[[]],[[]],[10,4],[[1,11]],[[2,11]],[[3,11]],[[4,11]],[[5,11]],0,[[]],[[]],[[]],[[]],[[]],[10,[[12,[1,3]]]],0,[[]],[[]],[[]],[[]],[[]],[4,10],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],[[],13],[[],13],0,0,0,0,0,0,0,[[]],[[]],[14,14],[[]],[[[16,[15]],15],[[17,[15]]]],[[[16,[15]],15],[[17,[15]]]],0,[[14,14],6],[[],6],[[14,7],8],[[]],[[14,11]],[[]],0,[[]],[[],12],[[],12],[[],13],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[18,19],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[20,20],[21,21],[22,22],[[]],[[]],[[]],[[18,[16,[15]],[16,[15]],21]],[[18,[16,[15]],21,23]],[[10,10,10],19],[18,4],[[],18],0,[[20,20],6],[[21,21],6],[[22,22],6],[[],6],[[],6],[[],6],[18,10],[[20,7],8],[[21,7],8],[[22,7],8],[[]],[[]],[[]],[[]],[1,21],[[]],[[20,11]],[[21,11]],[[22,11]],[[]],[[]],[[]],[[]],[[]],[19,18],[10,[[12,[21,3]]]],[18,22],0,[18],[[18,14]],[[18,15]],[[18,4,15]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],[[],13],[[],13],0,0,0,0,0,0,0,0,[[18,[16,[15]],[16,[15]],1],5],0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[24,24],[[]],0,[[[16,[15]],25,6,6],[[12,[26,24]]]],[[[16,[15]]],[[12,[[17,[15]],27]]]],[[[16,[15]],26],[[12,[[17,[15]],27]]]],[[[16,[15]]],[[12,[[17,[15]],27]]]],[[[16,[15]],26],[[12,[[17,[15]],27]]]],[[24,24],6],[[],6],[[24,7],8],[[27,7],8],[[27,7],8],[[]],[[]],[10,[[28,[24]]]],[[24,11]],[[]],[[]],0,0,0,[[]],[[],29],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],0,0,[30,[[28,[19]]]],[30,[[28,[19]]]],[[]],[[]],[[30,[16,[15]],[16,[15]],26,19]],[[],30],[[]],0,[30],[[]],[[],30],[[],12],[[],12],[[],13],0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[31,30],[[],31],[[]],[[]],[[]],[[]],[[31,[16,[15]],[16,[15]],1],5],[[]],[[]],[[]],[[]],[31,24],[4,31],[4,[[32,[31]]]],[10,[[32,[31]]]],[31],[[33,31]],[[34,31]],[[35,31]],[[31,4]],[[31,36]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],[[],13]],"c":[],"p":[[4,"MZFlush"],[4,"MZStatus"],[4,"MZError"],[4,"DataFormat"],[3,"StreamResult"],[15,"bool"],[3,"Formatter"],[6,"Result"],[6,"MZResult"],[15,"i32"],[8,"Hasher"],[4,"Result"],[3,"TypeId"],[4,"CompressionLevel"],[15,"u8"],[15,"slice"],[3,"Vec"],[3,"CompressorOxide"],[15,"u32"],[4,"CompressionStrategy"],[4,"TDEFLFlush"],[4,"TDEFLStatus"],[8,"FnMut"],[4,"TINFLStatus"],[8,"Iterator"],[15,"usize"],[3,"DecompressError"],[4,"Option"],[3,"String"],[3,"DecompressorOxide"],[3,"InflateState"],[3,"Box"],[3,"MinReset"],[3,"ZeroReset"],[3,"FullReset"],[8,"ResetPolicy"],[3,"CallbackFunc"]]},\
"mio":{"doc":"Mio is a fast, low-level I/O library for Rust focusing on …","t":"CDSDSDDSDLLLLLLLLLLLLLLLLLLLLLLLLLLAALLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALDDDILLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLKKLLLLLLLLLLLLLLDLLLLLLALLLLLDDLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLL","n":["Events","Interest","PRIORITY","Poll","READABLE","Registry","Token","WRITABLE","Waker","add","as_raw_fd","as_raw_fd","bitor","bitor_assign","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","cmp","deregister","eq","eq","equivalent","equivalent","event","features","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","guide","hash","into","into","into","into","into","is_aio","is_lio","is_priority","is_readable","is_writable","new","new","partial_cmp","partial_cmp","poll","register","registry","remove","reregister","to_owned","to_owned","try_clone","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","unix","wake","Event","Events","Iter","Source","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","capacity","clear","clone","clone","clone_into","clone_into","count","deregister","fmt","fmt","fmt","from","from","from","into","into","into","into_iter","into_iter","is_aio","is_empty","is_error","is_lio","is_priority","is_read_closed","is_readable","is_writable","is_write_closed","iter","next","register","reregister","size_hint","to_owned","to_owned","token","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","with_capacity","SourceFd","borrow","borrow_mut","deregister","fmt","from","into","pipe","register","reregister","try_from","try_into","type_id","Receiver","Sender","as_raw_fd","as_raw_fd","borrow","borrow","borrow_mut","borrow_mut","deregister","deregister","flush","flush","fmt","fmt","from","from","from","from","from","from_raw_fd","from_raw_fd","into","into","into_raw_fd","into_raw_fd","new","read","read","read_vectored","read_vectored","register","register","reregister","reregister","set_nonblocking","set_nonblocking","try_from","try_from","try_into","try_into","try_io","try_io","type_id","type_id","write","write","write_vectored","write_vectored"],"q":[[0,"mio"],[88,"mio::event"],[144,"mio::unix"],[157,"mio::unix::pipe"]],"d":["","Interest used in registering.","Returns a <code>Interest</code> set representing priority completion …","Polls for readiness events on all registered values.","Returns a <code>Interest</code> set representing readable interests.","Registers I/O resources.","Associates readiness events with <code>event::Source</code>s.","Returns a <code>Interest</code> set representing writable interests.","Waker allows cross-thread waking of <code>Poll</code>.","Add together two <code>Interest</code>.","","","","","","","","","","","","","","","","","","","","","Deregister an <code>event::Source</code> with the <code>Poll</code> instance.","","","","","Readiness event types and utilities.","Mio’s optional features.","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Getting started guide.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns true if <code>Interest</code> contains AIO readiness.","Returns true if <code>Interest</code> contains LIO readiness.","Returns true if <code>Interest</code> contains priority readiness.","Returns true if the value includes readable readiness.","Returns true if the value includes writable readiness.","Return a new <code>Poll</code> handle.","Create a new <code>Waker</code>.","","","Wait for readiness events","Register an <code>event::Source</code> with the <code>Poll</code> instance.","Create a separate <code>Registry</code> which can be used to register …","Removes <code>other</code> <code>Interest</code> from <code>self</code>.","Re-register an <code>event::Source</code> with the <code>Poll</code> instance.","","","Creates a new independently owned <code>Registry</code>.","","","","","","","","","","","","","","","","Unix only extensions.","Wake up the <code>Poll</code> associated with this <code>Waker</code>.","A readiness event.","A collection of readiness events.","<code>Events</code> iterator.","An event source that may be registered with <code>Registry</code>.","","","","","","","Returns the number of <code>Event</code> values that <code>self</code> can hold.","Clearing all <code>Event</code> values from container explicitly.","","","","","","Deregister <code>self</code> from the given <code>Registry</code> instance.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Returns true if the event contains AIO readiness.","Returns <code>true</code> if <code>self</code> contains no <code>Event</code> values.","Returns true if the event contains error readiness.","Returns true if the event contains LIO readiness.","Returns true if the event contains priority readiness.","Returns true if the event contains read closed readiness.","Returns true if the event contains readable readiness.","Returns true if the event contains writable readiness.","Returns true if the event contains write closed readiness.","Returns an iterator over the <code>Event</code> values.","","Register <code>self</code> with the given <code>Registry</code> instance.","Re-register <code>self</code> with the given <code>Registry</code> instance.","","","","Returns the event’s token.","","","","","","","","","","Return a new <code>Events</code> capable of holding up to <code>capacity</code> …","Adapter for <code>RawFd</code> providing an <code>event::Source</code> …","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Unix pipe.","","","","","","Receiving end of an Unix pipe.","Sending end of an Unix pipe.","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Create a new non-blocking Unix pipe.","","","","","","","","","Set the <code>Sender</code> into or out of non-blocking mode.","Set the <code>Receiver</code> into or out of non-blocking mode.","","","","","Execute an I/O operation ensuring that the socket receives …","Execute an I/O operation ensuring that the socket receives …","","","","","",""],"i":[0,0,1,0,1,0,0,1,0,1,2,4,1,1,2,4,1,5,13,2,4,1,5,13,1,5,1,5,1,5,4,1,5,1,5,0,0,2,4,1,5,13,2,4,1,5,13,0,5,2,4,1,5,13,1,1,1,1,1,2,13,1,5,2,4,2,1,4,1,5,4,2,4,1,5,13,2,4,1,5,13,2,4,1,5,13,0,13,0,0,0,0,16,21,22,16,21,22,16,16,21,22,21,22,22,7,16,21,22,16,21,22,16,21,22,16,22,21,16,21,21,21,21,21,21,21,16,22,7,7,22,21,22,21,16,21,22,16,21,22,16,21,22,16,0,23,23,23,23,23,23,0,23,23,23,23,23,0,0,24,25,24,25,24,25,24,25,24,24,24,25,24,24,25,25,25,24,25,24,25,24,25,0,25,25,25,25,24,25,24,25,24,25,24,25,24,25,24,25,24,25,24,24,24,24],"f":[0,0,0,0,0,0,0,0,0,[[1,1],1],[2,3],[4,3],[[1,1],1],[[1,1]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,1],[5,5],[[]],[[]],[[1,1],6],[[5,5],6],[[4,[0,[7,8]]],9],[[1,1],10],[[5,5],10],[[],10],[[],10],0,0,[[2,11],12],[[4,11],12],[[1,11],12],[[5,11],12],[[13,11],12],[[]],[[]],[[]],[[]],[[]],0,[[5,14]],[[]],[[]],[[]],[[]],[[]],[1,10],[1,10],[1,10],[1,10],[1,10],[[],[[9,[2]]]],[[4,5],[[9,[13]]]],[[1,1],[[15,[6]]]],[[5,5],[[15,[6]]]],[[2,16,[15,[17]]],9],[[4,[0,[7,8]],5,1],9],[2,4],[[1,1],[[15,[1]]]],[[4,[0,[7,8]],5,1],9],[[]],[[]],[4,[[9,[4]]]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],19],[[],19],[[],19],[[],19],[[],19],0,[13,9],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[16,20],[16],[21,21],[22,22],[[]],[[]],[22,20],[4,9],[[16,11],12],[[21,11],12],[[22,11],12],[[]],[[]],[[]],[[]],[[]],[[]],[16],[[]],[21,10],[16,10],[21,10],[21,10],[21,10],[21,10],[21,10],[21,10],[21,10],[16,22],[22,15],[[4,5,1],9],[[4,5,1],9],[22],[[]],[[]],[21,5],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],19],[[],19],[[],19],[20,16],0,[[]],[[]],[[23,4],9],[[23,11],12],[[]],[[]],0,[[23,4,5,1],9],[[23,4,5,1],9],[[],18],[[],18],[[],19],0,0,[24,3],[25,3],[[]],[[]],[[]],[[]],[[24,4],9],[[25,4],9],[24,9],[24,9],[[24,11],12],[[25,11],12],[[]],[26,24],[[]],[27,25],[28,25],[3,24],[3,25],[[]],[[]],[24,3],[25,3],[[],9],[[25,[30,[29]]],[[9,[20]]]],[[25,[30,[29]]],[[9,[20]]]],[[25,[30,[31]]],[[9,[20]]]],[[25,[30,[31]]],[[9,[20]]]],[[24,4,5,1],9],[[25,4,5,1],9],[[24,4,5,1],9],[[25,4,5,1],9],[[24,10],9],[[25,10],9],[[],18],[[],18],[[],18],[[],18],[[24,32],9],[[25,32],9],[[],19],[[],19],[[24,[30,[29]]],[[9,[20]]]],[[24,[30,[29]]],[[9,[20]]]],[[24,[30,[33]]],[[9,[20]]]],[[24,[30,[33]]],[[9,[20]]]]],"c":[],"p":[[3,"Interest"],[3,"Poll"],[6,"RawFd"],[3,"Registry"],[3,"Token"],[4,"Ordering"],[8,"Source"],[8,"Sized"],[6,"Result"],[15,"bool"],[3,"Formatter"],[6,"Result"],[3,"Waker"],[8,"Hasher"],[4,"Option"],[3,"Events"],[3,"Duration"],[4,"Result"],[3,"TypeId"],[15,"usize"],[3,"Event"],[3,"Iter"],[3,"SourceFd"],[3,"Sender"],[3,"Receiver"],[3,"ChildStdin"],[3,"ChildStdout"],[3,"ChildStderr"],[15,"u8"],[15,"slice"],[3,"IoSliceMut"],[8,"FnOnce"],[3,"IoSlice"]]},\
"nix":{"doc":"Rust friendly bindings to the various *nix system …","t":"GIGAAKKCAAAKNNNNNNNNNNNNNNNNNNNNNNNNNRSNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNRSNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNRSNNEILNLLLLLLLLLFLLLLFLLLLLLKLLLLLLSSSSSDSSSSSSSNNNNNNNNNNNSSSSNNNNNDEDENNNNDSSSSSSSSSSSSSSSSSSSSSSSSNNNNNNESSSDDNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFLLLLLLLFFFFLLLLLLFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLAAAAAAAAAAAAAASSSSSSSSSSSSSSSSDNNNDDELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLSSSDLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLSSDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLNSSSSSSSNNNNNNNNNNRNNRNNNNNNNNNNNNRNNNNNNNNNNDDNNDENDDNENNEEDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFLLLLLLLLLFFLLLFLFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLGLLMMMMMSSRRDCDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDCFMMMMMMMMMMMMMMMMMMMMLLLLLLLLLLLLLLLLLENNDNNNNNNNNNNNNNNINNNNNNNNNNSSSSSSSSSSNDNNNNDNNNNNNNNNNNNNNNNNNNNNNNNSSSSSSSSNNIENEDEEITNNDNNNNDDNQQNNDNNNFFLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLKFFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLFFLLLMMGFFKLLLFFLLLDDFDFFAMLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLEDFNNDNNDSSSSSSSSSSSSSSSSSSSSSSSELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLGLLLLLLLLLLLLFFLLLLLLLLLLLLLLLLLLLLLLLLLLFFFLLLLLLLLLLLLLLLLLLFFFFFFFFGLLLLLLLLMMMMMMMMMMMMMMMMFLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLFFRRRRRRRRRRRRRRRRRRRRDRRRRRRRRRRRRRRRRRRRRRRRRRRRDRRRRRLLLLLLLLLLLLLLLLLLLLLLGFLLLLFLLLLLLLLDSSSSSSSSSSSSDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLFLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLFLLLLLDDILLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLKLLLLLKLLLLLLLKLLKLLLKLLKLLLLKLLLLGGLLLLLLLLLLLLLLLENNNDDLLLLLLLLLLLLLNNNNNEENNNSSSDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNNNENNNNNNNNSSSSSSDESSSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFFSSSSSSSSSSSDLLLFFFFLLLLLLLLLLLLLLLLLLLLLLDNSEENNNDSNNNNNNNESESFALLLLLLLLLLLLLLLLLLLLLFFLLLLLLLLLLLLFLLLLFLFFFLLLLLFFFFFLFFFFLLLLLLLLLLLFLLLLLLLLLLLFFFFFFFFFLLLLLLLLLLLLLLLFFFFFFFFLLLLFFFFFLLFFFLLFLFLLLLLLLLLFLLLLLLLLLLLLLLLLLLLFFFMFF","n":["Error","NixPath","Result","errno","fcntl","is_empty","len","libc","sys","time","unistd","with_nix_path","E2BIG","EACCES","EADDRINUSE","EADDRNOTAVAIL","EADV","EAFNOSUPPORT","EAGAIN","EALREADY","EBADE","EBADF","EBADFD","EBADMSG","EBADR","EBADRQC","EBADSLT","EBFONT","EBUSY","ECANCELED","ECHILD","ECHRNG","ECOMM","ECONNABORTED","ECONNREFUSED","ECONNRESET","EDEADLK","EDEADLOCK","EDEADLOCK","EDESTADDRREQ","EDOM","EDOTDOT","EDQUOT","EEXIST","EFAULT","EFBIG","EHOSTDOWN","EHOSTUNREACH","EHWPOISON","EIDRM","EILSEQ","EINPROGRESS","EINTR","EINVAL","EIO","EISCONN","EISDIR","EISNAM","EKEYEXPIRED","EKEYREJECTED","EKEYREVOKED","EL2HLT","EL2NSYNC","EL3HLT","EL3RST","ELIBACC","ELIBBAD","ELIBEXEC","ELIBMAX","ELIBSCN","ELNRNG","ELOOP","EMEDIUMTYPE","EMFILE","EMLINK","EMSGSIZE","EMULTIHOP","ENAMETOOLONG","ENAVAIL","ENETDOWN","ENETRESET","ENETUNREACH","ENFILE","ENOANO","ENOBUFS","ENOCSI","ENODATA","ENODEV","ENOENT","ENOEXEC","ENOKEY","ENOLCK","ENOLINK","ENOMEDIUM","ENOMEM","ENOMSG","ENONET","ENOPKG","ENOPROTOOPT","ENOSPC","ENOSR","ENOSTR","ENOSYS","ENOTBLK","ENOTCONN","ENOTDIR","ENOTEMPTY","ENOTNAM","ENOTRECOVERABLE","ENOTSOCK","ENOTSUP","ENOTSUP","ENOTTY","ENOTUNIQ","ENXIO","EOPNOTSUPP","EOVERFLOW","EOWNERDEAD","EPERM","EPFNOSUPPORT","EPIPE","EPROTO","EPROTONOSUPPORT","EPROTOTYPE","ERANGE","EREMCHG","EREMOTE","EREMOTEIO","ERESTART","ERFKILL","EROFS","ESHUTDOWN","ESOCKTNOSUPPORT","ESPIPE","ESRCH","ESRMNT","ESTALE","ESTRPIPE","ETIME","ETIMEDOUT","ETOOMANYREFS","ETXTBSY","EUCLEAN","EUNATCH","EUSERS","EWOULDBLOCK","EWOULDBLOCK","EXDEV","EXFULL","Errno","ErrnoSentinel","Sys","UnknownErrno","as_errno","borrow","borrow_mut","clear","clone","clone_into","desc","eq","equivalent","errno","fmt","fmt","from","from_errno","from_i32","from_i32","into","invalid_argument","last","provide","result","sentinel","to_owned","to_string","try_from","try_from","try_into","type_id","AT_EMPTY_PATH","AT_NO_AUTOMOUNT","AT_REMOVEDIR","AT_SYMLINK_FOLLOW","AT_SYMLINK_NOFOLLOW","AtFlags","FALLOC_FL_COLLAPSE_RANGE","FALLOC_FL_INSERT_RANGE","FALLOC_FL_KEEP_SIZE","FALLOC_FL_PUNCH_HOLE","FALLOC_FL_UNSHARE_RANGE","FALLOC_FL_ZERO_RANGE","FD_CLOEXEC","F_ADD_SEALS","F_DUPFD","F_DUPFD_CLOEXEC","F_GETFD","F_GETFL","F_GETLK","F_GETPIPE_SZ","F_GET_SEALS","F_OFD_GETLK","F_OFD_SETLK","F_OFD_SETLKW","F_SEAL_GROW","F_SEAL_SEAL","F_SEAL_SHRINK","F_SEAL_WRITE","F_SETFD","F_SETFL","F_SETLK","F_SETLKW","F_SETPIPE_SZ","FallocateFlags","FcntlArg","FdFlag","FlockArg","LockExclusive","LockExclusiveNonblock","LockShared","LockSharedNonblock","OFlag","O_ACCMODE","O_APPEND","O_ASYNC","O_CLOEXEC","O_CREAT","O_DIRECT","O_DIRECTORY","O_DSYNC","O_EXCL","O_FSYNC","O_LARGEFILE","O_NDELAY","O_NOATIME","O_NOCTTY","O_NOFOLLOW","O_NONBLOCK","O_PATH","O_RDONLY","O_RDWR","O_RSYNC","O_SYNC","O_TMPFILE","O_TRUNC","O_WRONLY","POSIX_FADV_DONTNEED","POSIX_FADV_NOREUSE","POSIX_FADV_NORMAL","POSIX_FADV_RANDOM","POSIX_FADV_SEQUENTIAL","POSIX_FADV_WILLNEED","PosixFadviseAdvice","RENAME_EXCHANGE","RENAME_NOREPLACE","RENAME_WHITEOUT","RenameFlags","SealFlag","Unlock","UnlockNonblock","all","all","all","all","all","all","bitand","bitand","bitand","bitand","bitand","bitand","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitor","bitor","bitor","bitor","bitor","bitor","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bits","bits","bits","bits","bits","bits","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","cmp","complement","complement","complement","complement","complement","complement","contains","contains","contains","contains","contains","contains","difference","difference","difference","difference","difference","difference","empty","empty","empty","empty","empty","empty","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extend","extend","extend","extend","extend","extend","fallocate","fcntl","flock","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","hash","hash","hash","hash","hash","hash","hash","hash","hash","insert","insert","insert","insert","insert","insert","intersection","intersection","intersection","intersection","intersection","intersection","intersects","intersects","intersects","intersects","intersects","intersects","into","into","into","into","into","into","into","into","into","is_all","is_all","is_all","is_all","is_all","is_all","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","not","not","not","not","not","not","open","openat","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","posix_fadvise","posix_fallocate","readlink","readlinkat","remove","remove","remove","remove","remove","remove","renameat","renameat2","set","set","set","set","set","set","sub","sub","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","toggle","toggle","toggle","toggle","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","union","union","union","union","union","epoll","eventfd","memfd","signal","signalfd","socket","stat","statfs","statvfs","sysinfo","time","timer","timerfd","wait","EPOLLERR","EPOLLET","EPOLLEXCLUSIVE","EPOLLHUP","EPOLLIN","EPOLLMSG","EPOLLONESHOT","EPOLLOUT","EPOLLPRI","EPOLLRDBAND","EPOLLRDHUP","EPOLLRDNORM","EPOLLWAKEUP","EPOLLWRBAND","EPOLLWRNORM","EPOLL_CLOEXEC","EpollCreateFlags","EpollCtlAdd","EpollCtlDel","EpollCtlMod","EpollEvent","EpollFlags","EpollOp","all","all","bitand","bitand","bitand_assign","bitand_assign","bitor","bitor","bitor_assign","bitor_assign","bits","bits","bitxor","bitxor","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","cmp","complement","complement","contains","contains","data","difference","difference","empty","empty","empty","epoll_create","epoll_create1","epoll_ctl","epoll_wait","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","events","extend","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from_bits","from_bits","from_bits_truncate","from_bits_truncate","from_bits_unchecked","from_bits_unchecked","from_iter","from_iter","hash","hash","hash","hash","insert","insert","intersection","intersection","intersects","intersects","into","into","into","into","is_all","is_all","is_empty","is_empty","new","not","not","partial_cmp","partial_cmp","remove","remove","set","set","sub","sub","sub_assign","sub_assign","symmetric_difference","symmetric_difference","to_owned","to_owned","to_owned","to_owned","toggle","toggle","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","union","union","EFD_CLOEXEC","EFD_NONBLOCK","EFD_SEMAPHORE","EfdFlags","all","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow_mut","clone","clone_into","cmp","complement","contains","difference","empty","eq","equivalent","eventfd","extend","fmt","fmt","fmt","fmt","fmt","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","hash","insert","intersection","intersects","into","is_all","is_empty","not","partial_cmp","remove","set","sub","sub_assign","symmetric_difference","to_owned","toggle","try_from","try_into","type_id","union","MFD_ALLOW_SEALING","MFD_CLOEXEC","MemFdCreateFlag","all","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow_mut","clone","clone_into","cmp","complement","contains","difference","empty","eq","equivalent","extend","fmt","fmt","fmt","fmt","fmt","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","hash","insert","intersection","intersects","into","is_all","is_empty","memfd_create","not","partial_cmp","remove","set","sub","sub_assign","symmetric_difference","to_owned","toggle","try_from","try_into","type_id","union","Handler","SA_NOCLDSTOP","SA_NOCLDWAIT","SA_NODEFER","SA_ONSTACK","SA_RESETHAND","SA_RESTART","SA_SIGINFO","SIGABRT","SIGALRM","SIGBUS","SIGCHLD","SIGCONT","SIGFPE","SIGHUP","SIGILL","SIGINT","SIGIO","SIGIOT","SIGKILL","SIGPIPE","SIGPOLL","SIGPROF","SIGPWR","SIGQUIT","SIGSEGV","SIGSTKFLT","SIGSTOP","SIGSYS","SIGTERM","SIGTRAP","SIGTSTP","SIGTTIN","SIGTTOU","SIGUNUSED","SIGURG","SIGUSR1","SIGUSR2","SIGVTALRM","SIGWINCH","SIGXCPU","SIGXFSZ","SIG_BLOCK","SIG_SETMASK","SIG_UNBLOCK","SaFlags","SigAction","SigAction","SigDfl","SigEvent","SigHandler","SigIgn","SigSet","SigSetIter","SigevNone","SigevNotify","SigevSignal","SigevThreadId","SigmaskHow","Signal","SignalIterator","add","all","all","as_mut_ptr","as_ref","as_ref","as_str","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","complement","contains","contains","difference","empty","empty","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extend","extend","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","from_iter","from_sigset_t_unchecked","from_str","handler","hash","hash","hash","hash","hash","hash","hash","hash","hash","insert","intersection","intersects","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","is_all","is_empty","iter","iterator","kill","killpg","mask","new","new","next","next","not","partial_cmp","partial_cmp","partial_cmp","pthread_sigmask","raise","remove","remove","set","sigaction","sigevent","signal","sigprocmask","sub","sub_assign","symmetric_difference","thread_block","thread_get_mask","thread_set_mask","thread_swap_mask","thread_unblock","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_of_thread_id","union","wait","si_value","si_value","signal","signal","thread_id","SFD_CLOEXEC","SFD_NONBLOCK","SIGNALFD_NEW","SIGNALFD_SIGINFO_SIZE","SfdFlags","SigSet","SignalFd","all","as_raw_fd","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","complement","contains","difference","drop","empty","eq","eq","eq","equivalent","equivalent","equivalent","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","hash","hash","hash","insert","intersection","intersects","into","into","into","into_iter","is_all","is_empty","new","next","not","partial_cmp","read_signal","remove","set","set_mask","siginfo","signal","signalfd","ssi_addr","ssi_addr_lsb","ssi_arch","ssi_band","ssi_call_addr","ssi_code","ssi_errno","ssi_fd","ssi_int","ssi_overrun","ssi_pid","ssi_ptr","ssi_signo","ssi_status","ssi_stime","ssi_syscall","ssi_tid","ssi_trapno","ssi_uid","ssi_utime","sub","sub_assign","symmetric_difference","to_owned","to_owned","toggle","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","union","with_flags","AddressFamily","Alg","Alg","AlgAddr","AppleTalk","Ash","AtmPvc","AtmSvc","Ax25","Bluetooth","Both","Bridge","Caif","Can","Datagram","Decnet","Econet","EthAll","GetSockOpt","Ib","Ieee802154","Inet","Inet6","Ipx","Irda","Isdn","Iucv","Key","Llc","MSG_CMSG_CLOEXEC","MSG_CTRUNC","MSG_DONTWAIT","MSG_EOR","MSG_ERRQUEUE","MSG_NOSIGNAL","MSG_OOB","MSG_PEEK","MSG_TRUNC","MSG_WAITALL","Mpls","MsgFlags","NetBeui","NetRom","Netlink","Netlink","NetlinkAddr","NetlinkAudit","NetlinkCrypto","NetlinkDECNetRoutingMessage","NetlinkFIBLookup","NetlinkIPv6Firewall","NetlinkISCSI","NetlinkKObjectUEvent","NetlinkNetFilter","NetlinkRDMA","NetlinkRoute","NetlinkSCSITransport","NetlinkSELinux","NetlinkSockDiag","NetlinkUserSock","Nfc","Packet","Phonet","Pppox","Raw","Rdm","Rds","Read","Rose","RxRpc","SOCK_CLOEXEC","SOCK_NONBLOCK","SOF_TIMESTAMPING_RAW_HARDWARE","SOF_TIMESTAMPING_RX_HARDWARE","SOF_TIMESTAMPING_RX_SOFTWARE","SOF_TIMESTAMPING_SOFTWARE","SOF_TIMESTAMPING_TX_HARDWARE","SOF_TIMESTAMPING_TX_SOFTWARE","Security","SeqPacket","SetSockOpt","Shutdown","Sna","SockAddr","SockFlag","SockProtocol","SockType","SockaddrLike","SockaddrStorage","Stream","Tcp","TimestampingFlag","Tipc","Udp","Unix","Unix","UnixAddr","UnixCredentials","Unspec","Val","Val","Vsock","Vsock","VsockAddr","Wanpipe","Write","X25","accept","accept4","alg_name","alg_type","all","all","all","as_abstract","as_alg_addr","as_alg_addr_mut","as_ffi_pair","as_mut_ptr","as_netlink_addr","as_netlink_addr_mut","as_ptr","as_ptr","as_ptr","as_ref","as_ref","as_ref","as_ref","as_unix_addr","as_unix_addr_mut","as_vsock_addr","as_vsock_addr_mut","bind","bitand","bitand","bitand","bitand_assign","bitand_assign","bitand_assign","bitor","bitor","bitor","bitor_assign","bitor_assign","bitor_assign","bits","bits","bits","bitxor","bitxor","bitxor","bitxor_assign","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cid","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","complement","complement","complement","connect","contains","contains","contains","default","difference","difference","difference","empty","empty","empty","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extend","extend","extend","family","family","family","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits","from_bits","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_i32","from_iter","from_iter","from_iter","from_raw","from_raw","from_raw","from_raw","from_raw","from_raw","get","getpeername","getsockname","getsockopt","gid","groups","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","insert","insert","insert","intersection","intersection","intersection","intersects","intersects","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_all","is_all","is_all","is_empty","is_empty","is_empty","len","len","len","len","listen","new","new","new","new","new","new_abstract","new_alg","new_netlink","new_unix","new_vsock","not","not","not","partial_cmp","partial_cmp","partial_cmp","path","path_len","pid","pid","port","recv","recvfrom","remove","remove","remove","sa_data","sa_family","sa_family_t","send","sendto","set","set","set","set","setsockopt","shutdown","size","size","size","sockaddr","sockaddr_storage","sockaddr_storage_to_addr","sockaddr_un","socket","socketpair","sockopt","ss_family","sub","sub","sub","sub_assign","sub_assign","sub_assign","sun_family","sun_path","symmetric_difference","symmetric_difference","symmetric_difference","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_str","to_string","to_string","to_string","to_string","to_string","to_string","toggle","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uid","union","union","union","AcceptConn","AlgSetAeadAuthSize","AlgSetKey","BindToDevice","Broadcast","DontRoute","Ip6tOriginalDst","Ipv4RecvErr","Ipv4Ttl","Ipv6DontFrag","Ipv6RecvErr","Ipv6Ttl","KeepAlive","Linger","Mark","OobInline","PassCred","PeerCredentials","RcvBuf","RcvBufForce","ReceiveTimeout","ReceiveTimestamp","ReceiveTimestampns","ReuseAddr","ReusePort","RxqOvfl","SendTimeout","SndBuf","SndBufForce","SockType","SocketError","TcpMaxSeg","TcpRepair","Timestamping","TxTime","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","FchmodatFlags","FileStat","FileStat","FollowSymlink","FollowSymlink","Mode","NoFollowSymlink","NoFollowSymlink","SFlag","S_IFBLK","S_IFCHR","S_IFDIR","S_IFIFO","S_IFLNK","S_IFMT","S_IFREG","S_IFSOCK","S_IRGRP","S_IROTH","S_IRUSR","S_IRWXG","S_IRWXO","S_IRWXU","S_ISGID","S_ISUID","S_ISVTX","S_IWGRP","S_IWOTH","S_IWUSR","S_IXGRP","S_IXOTH","S_IXUSR","UtimensatFlags","all","all","bitand","bitand","bitand_assign","bitand_assign","bitor","bitor","bitor_assign","bitor_assign","bits","bits","bitxor","bitxor","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","complement","complement","contains","contains","dev_t","difference","difference","empty","empty","eq","eq","eq","equivalent","equivalent","equivalent","extend","extend","fchmod","fchmodat","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_bits","from_bits","from_bits_truncate","from_bits_truncate","from_bits_unchecked","from_bits_unchecked","from_iter","from_iter","fstat","fstatat","futimens","hash","hash","hash","insert","insert","intersection","intersection","intersects","intersects","into","into","into","into","into","is_all","is_all","is_empty","is_empty","lstat","lutimes","major","makedev","minor","mkdirat","mknod","mknodat","mode_t","not","not","partial_cmp","partial_cmp","remove","remove","set","set","st_atime","st_atime_nsec","st_blksize","st_blocks","st_ctime","st_ctime_nsec","st_dev","st_gid","st_ino","st_mode","st_mtime","st_mtime_nsec","st_nlink","st_rdev","st_size","st_uid","stat","sub","sub","sub_assign","sub_assign","symmetric_difference","symmetric_difference","to_owned","to_owned","to_owned","to_owned","to_owned","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","umask","union","union","utimensat","utimes","ADFS_SUPER_MAGIC","AFFS_SUPER_MAGIC","AFS_SUPER_MAGIC","AUTOFS_SUPER_MAGIC","BPF_FS_MAGIC","BTRFS_SUPER_MAGIC","CGROUP2_SUPER_MAGIC","CGROUP_SUPER_MAGIC","CODA_SUPER_MAGIC","CRAMFS_MAGIC","DEBUGFS_MAGIC","DEVPTS_SUPER_MAGIC","ECRYPTFS_SUPER_MAGIC","EFS_SUPER_MAGIC","EXT2_SUPER_MAGIC","EXT3_SUPER_MAGIC","EXT4_SUPER_MAGIC","F2FS_SUPER_MAGIC","FUSE_SUPER_MAGIC","FUTEXFS_SUPER_MAGIC","FsType","HOSTFS_SUPER_MAGIC","HPFS_SUPER_MAGIC","HUGETLBFS_MAGIC","ISOFS_SUPER_MAGIC","JFFS2_SUPER_MAGIC","MINIX2_SUPER_MAGIC","MINIX2_SUPER_MAGIC2","MINIX3_SUPER_MAGIC","MINIX_SUPER_MAGIC","MINIX_SUPER_MAGIC2","MSDOS_SUPER_MAGIC","NCP_SUPER_MAGIC","NFS_SUPER_MAGIC","NILFS_SUPER_MAGIC","OCFS2_SUPER_MAGIC","OPENPROM_SUPER_MAGIC","OVERLAYFS_SUPER_MAGIC","PROC_SUPER_MAGIC","QNX4_SUPER_MAGIC","QNX6_SUPER_MAGIC","RDTGROUP_SUPER_MAGIC","REISERFS_SUPER_MAGIC","SECURITYFS_MAGIC","SELINUX_MAGIC","SMACK_MAGIC","SMB_SUPER_MAGIC","SYSFS_MAGIC","Statfs","TMPFS_MAGIC","TRACEFS_MAGIC","UDF_SUPER_MAGIC","USBDEVICE_SUPER_MAGIC","XENFS_SUPER_MAGIC","block_size","blocks","blocks_available","blocks_free","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","eq","equivalent","files","files_free","filesystem_id","filesystem_type","fmt","fmt","from","from","fsid_t","fstatfs","into","into","maximum_name_length","optimal_transfer_size","statfs","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","FsFlags","ST_APPEND","ST_IMMUTABLE","ST_MANDLOCK","ST_NOATIME","ST_NODEV","ST_NODIRATIME","ST_NOEXEC","ST_NOSUID","ST_RDONLY","ST_RELATIME","ST_SYNCHRONOUS","ST_WRITE","Statvfs","all","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","block_size","blocks","blocks_available","blocks_free","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","complement","contains","default","difference","empty","eq","eq","equivalent","equivalent","extend","files","files_available","files_free","filesystem_id","flags","fmt","fmt","fmt","fmt","fmt","fmt","fragment_size","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","fstatvfs","hash","hash","insert","intersection","intersects","into","into","is_all","is_empty","name_max","not","partial_cmp","remove","set","statvfs","sub","sub_assign","symmetric_difference","to_owned","to_owned","toggle","try_from","try_from","try_into","try_into","type_id","type_id","union","SysInfo","borrow","borrow_mut","clone","clone_into","eq","equivalent","fmt","from","hash","into","load_average","process_count","ram_total","ram_unused","swap_free","swap_total","sysinfo","to_owned","try_from","try_into","type_id","uptime","TimeSpec","TimeVal","TimeValLike","add","add","as_mut","as_mut","as_ref","as_ref","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","cmp","div","div","eq","eq","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from_duration","from_timespec","hash","hash","hours","into","into","microseconds","microseconds","microseconds","milliseconds","milliseconds","milliseconds","minutes","mul","mul","nanoseconds","nanoseconds","nanoseconds","neg","neg","new","new","num_hours","num_microseconds","num_microseconds","num_microseconds","num_milliseconds","num_milliseconds","num_milliseconds","num_minutes","num_nanoseconds","num_nanoseconds","num_nanoseconds","num_seconds","num_seconds","num_seconds","partial_cmp","partial_cmp","seconds","seconds","seconds","sub","sub","suseconds_t","time_t","to_owned","to_owned","to_string","to_string","try_from","try_from","try_into","try_into","tv_nsec","tv_sec","tv_sec","tv_usec","type_id","type_id","zero","Expiration","Interval","IntervalDelayed","OneShot","Timer","TimerSetTimeFlags","borrow","borrow_mut","drop","fmt","from","get","into","new","overruns","set","try_from","try_into","type_id","CLOCK_BOOTTIME","CLOCK_BOOTTIME_ALARM","CLOCK_MONOTONIC","CLOCK_REALTIME","CLOCK_REALTIME_ALARM","ClockId","Expiration","Interval","IntervalDelayed","OneShot","TFD_CLOEXEC","TFD_NONBLOCK","TFD_TIMER_ABSTIME","TimerFd","TimerFlags","TimerSetTimeFlags","all","all","as_raw_fd","bitand","bitand","bitand_assign","bitand_assign","bitor","bitor","bitor_assign","bitor_assign","bits","bits","bitxor","bitxor","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","complement","complement","contains","contains","difference","difference","drop","empty","empty","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","extend","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_bits","from_bits","from_bits_truncate","from_bits_truncate","from_bits_unchecked","from_bits_unchecked","from_iter","from_iter","from_raw_fd","get","hash","hash","hash","insert","insert","intersection","intersection","intersects","intersects","into","into","into","into","into","is_all","is_all","is_empty","is_empty","new","not","not","partial_cmp","partial_cmp","partial_cmp","remove","remove","set","set","set","sub","sub","sub_assign","sub_assign","symmetric_difference","symmetric_difference","to_owned","to_owned","to_owned","to_owned","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","union","union","unset","wait","All","Continued","Exited","Id","PGid","PIDFd","Pid","PtraceEvent","PtraceSyscall","Signaled","StillAlive","Stopped","WCONTINUED","WEXITED","WNOHANG","WNOWAIT","WSTOPPED","WUNTRACED","WaitPidFlag","WaitStatus","__WALL","__WCLONE","__WNOTHREAD","all","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","cmp","complement","contains","difference","empty","eq","eq","eq","equivalent","equivalent","equivalent","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","from_raw","hash","hash","hash","insert","intersection","intersects","into","into","into","is_all","is_empty","not","partial_cmp","partial_cmp","pid","remove","set","sub","sub_assign","symmetric_difference","to_owned","to_owned","to_owned","toggle","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","union","wait","waitid","waitpid","CLOCK_BOOTTIME","CLOCK_BOOTTIME_ALARM","CLOCK_MONOTONIC","CLOCK_MONOTONIC_COARSE","CLOCK_MONOTONIC_RAW","CLOCK_PROCESS_CPUTIME_ID","CLOCK_REALTIME","CLOCK_REALTIME_ALARM","CLOCK_REALTIME_COARSE","CLOCK_TAI","CLOCK_THREAD_CPUTIME_ID","ClockId","as_raw","borrow","borrow_mut","clock_getcpuclockid","clock_getres","clock_gettime","clock_settime","clone","clone_into","cmp","eq","equivalent","fmt","fmt","from","from","from_raw","hash","into","now","partial_cmp","pid_cpu_clock_id","res","set_time","to_owned","to_string","try_from","try_into","type_id","AccessFlags","Child","F_OK","ForkResult","LinkatFlags","NoRemoveDir","NoSymlinkFollow","Parent","Pid","R_OK","RemoveDir","SeekCur","SeekData","SeekEnd","SeekHole","SeekSet","SymlinkFollow","UnlinkatFlags","W_OK","Whence","X_OK","access","alarm","all","as_raw","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chdir","chroot","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","close","cmp","cmp","complement","contains","daemon","difference","dup","dup2","dup3","empty","eq","eq","equivalent","equivalent","execv","execve","execveat","execvp","execvpe","extend","faccessat","fchdir","fdatasync","fexecve","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fork","from","from","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","from_raw","fsync","ftruncate","getcwd","getpgid","getpgrp","getpid","getppid","getsid","gettid","hash","hash","insert","intersection","intersects","into","into","into","into","into","into","is_all","is_child","is_empty","is_parent","isatty","linkat","lseek","lseek64","mkdir","mkfifo","mkfifoat","mkstemp","not","parent","partial_cmp","partial_cmp","pause","pipe","pipe2","pivot_root","read","remove","set","setpgid","setsid","sleep","sub","sub_assign","symlinkat","symmetric_difference","sync","this","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","toggle","truncate","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","union","unlink","unlinkat","write","child","cancel","set"],"q":[[0,"nix"],[12,"nix::errno"],[181,"nix::fcntl"],[613,"nix::sys"],[627,"nix::sys::epoll"],[786,"nix::sys::eventfd"],[841,"nix::sys::memfd"],[895,"nix::sys::signal"],[1178,"nix::sys::signal::SigevNotify"],[1183,"nix::sys::signalfd"],[1296,"nix::sys::socket"],[1848,"nix::sys::socket::sockopt"],[2429,"nix::sys::stat"],[2633,"nix::sys::statfs"],[2724,"nix::sys::statvfs"],[2816,"nix::sys::sysinfo"],[2839,"nix::sys::time"],[2934,"nix::sys::timer"],[2953,"nix::sys::timerfd"],[3114,"nix::sys::wait"],[3222,"nix::time"],[3263,"nix::unistd"],[3452,"nix::unistd::ForkResult"],[3453,"nix::unistd::alarm"]],"d":["Nix’s main error type.","Common trait used to represent file system paths by many …","Nix Result Type","","","Is the path empty?","Length of the path in bytes","","Mostly platform-specific functionality","","Safe wrappers around functions found in libc “unistd.h”…","Execute a function with this path as a <code>CStr</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The sentinel value indicates that a function failed and …","Backwards compatibility hack for Nix &lt;= 0.21.0 users","","Convert this <code>Error</code> to an <code>Errno</code>.","","","","","","","","","Returns the platform-specific value of errno","","","Returns the argument unchanged.","Create a nix Error from a given errno","","","Calls <code>U::from(self)</code>.","Create a new invalid argument error (<code>EINVAL</code>)","","","Returns <code>Ok(value)</code> if it does not contain the sentinel …","","","","","","","","","","","","","","Removes byte range from a file without leaving a hole.","Increases file space by inserting a hole within the file …","File size is not changed.","Deallocates space by creating a hole.","Shared file data extants are made private to the file.","Zeroes space in specified byte range.","The file descriptor will automatically be closed during a …","","","","","","","","","","","","The size of the file cannot be increased.","Prevents further calls to <code>fcntl()</code> with <code>F_ADD_SEALS</code>.","The file cannot be reduced in size.","The file contents cannot be modified.","","","","","","Mode argument flags for fallocate determining operation …","","Additional configuration flags for <code>fcntl</code>’s <code>F_SETFD</code>.","","","","","","Configuration options for opened files.","Mask for the access mode of the file.","Open the file in append-only mode.","Generate a signal when input or output becomes possible.","Closes the file descriptor once an <code>execve</code> call is made.","Create the file if it does not exist.","Try to minimize cache effects of the I/O for this file.","If the specified path isn’t a directory, fail.","Implicitly follow each <code>write()</code> with an <code>fdatasync()</code>.","Error out if a file was not created.","Same as <code>O_SYNC</code>.","Allow files whose sizes can’t be represented in an <code>off_t</code> …","Same as <code>O_NONBLOCK</code>.","Do not update the file last access time during <code>read(2)</code>s.","Don’t attach the device as the process’ controlling …","<code>open()</code> will fail if the given path is a symbolic link.","When possible, open the file in nonblocking mode.","Obtain a file descriptor for low-level access.","Only allow reading.","Allow both reading and writing.","Similar to <code>O_DSYNC</code> but applies to <code>read</code>s instead.","Implicitly follow each <code>write()</code> with an <code>fsync()</code>.","Create an unnamed temporary file.","Truncate an existing regular file to 0 length if it allows …","Only allow writing.","","","","","","","","","","","","Additional flags for file sealing, which allows for …","","","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","Manipulates file space.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","","","","","","","","","","","","","","","","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","","","","","","","","","","","","","","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","","","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","","","","","","","","","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","","","Interfaces for managing memory-backed files.","Operating system signals.","Interface for the <code>signalfd</code> syscall.","Socket interface functions","","Get filesystem statistics, non-portably","Get filesystem statistics","","","Timer API via signals.","Timer API via file descriptors.","Wait for a process to change status","","","","","","","","","","","","","","","","","","","","","","","","Returns the set containing all flags.","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Adds the set of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Toggles the set of flags.","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","Returns an empty set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","","","","","","","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","","","Removes the specified flags in-place.","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","","","","","Toggles the specified flags in-place.","Toggles the specified flags in-place.","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","","","","","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","","","","","","","","","","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns the complement of this set of flags.","","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","","Toggles the specified flags in-place.","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Allow sealing operations on this file.","Set the close-on-exec (<code>FD_CLOEXEC</code>) flag on the new file …","Options that change the behavior of <code>memfd_create</code>.","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","","","","","","","","","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Creates an anonymous file that lives in memory, and return …","Returns the complement of this set of flags.","","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","","Toggles the specified flags in-place.","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Use the given signal-catching function, which takes in the …","When catching a <code>Signal::SIGCHLD</code> signal, the signal will be …","When catching a <code>Signal::SIGCHLD</code> signal, the system will not","Further occurrences of the delivered signal are not masked …","The system will deliver the signal to the process on a …","The handler is reset back to the default at the moment the …","Requests that certain system calls restart if interrupted …","This flag is controlled internally by Nix.","Abort","Alarm clock","Bus error","To parent on child stop or exit","Continue a stopped process","Floating point exception","Hangup","Illegal instruction (not reset when caught)","Interrupt","Input/output possible signal","Alias for <code>SIGABRT</code>","Kill (cannot be caught or ignored)","Write on a pipe with no one to read it","Alias for <code>SIGIO</code>","Profiling time alarm","Power failure imminent.","Quit","Segmentation violation","Stack fault (obsolete)","Sendable stop signal not from tty","Bad system call","Software termination signal from kill","Trace trap (not reset when caught)","Stop signal from tty","To readers pgrp upon background tty read","Like TTIN if (tp-&gt;t_local&amp;LTOSTOP)","Alias for <code>SIGSYS</code>","Urgent condition on IO channel","User defined signal 1","User defined signal 2","Virtual time alarm","Window size changes","Exceeded CPU time limit","Exceeded file size limit","The new mask is the union of the current mask and the …","The current mask is replaced by the specified set.","The new mask is the intersection of the current mask and …","Controls the behavior of a <code>SigAction</code>","Action to take on receipt of a signal. Corresponds to …","Use the given signal-catching function, which takes in the …","Default signal handling.","Used to request asynchronous notification of the …","A signal handler.","Request that the signal be ignored.","Specifies a set of <code>Signal</code>s that may be blocked, waited …","Iterator for a <code>SigSet</code>.","No notification will be delivered","Specifies the notification method used by a <code>SigEvent</code>","Notify by delivering a signal to the process.","Notify by delivering a signal to a thread.","Specifies how certain functions should manipulate a signal …","Types of operating system signals","Iterate through all signals defined by this operating …","Add the specified signal to the set.","Returns the set containing all flags.","Initialize to include all signals.","Returns a mutable pointer to the <code>sigevent</code> wrapped by <code>self</code>","","","Returns name of signal.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","Remove all signals from this set.","","","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Return whether this set includes the specified signal.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","Initialize to include nothing.","","","","","","","","","","","","","","","","","","","","","Returns the flags set on the action.","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","Converts a <code>libc::sigset_t</code> object to a <code>SigSet</code> without …","","Returns the action’s handler.","","","","","","","","","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns an iterator that yields the signals contained in …","Iterate through all signals defined by this OS","Send a signal to a process","Send a signal to a process group","Returns the set of signals that are blocked during …","Creates a new action.","<strong>Note:</strong> this constructor does not allow the user to set the …","","","Returns the complement of this set of flags.","","","","Manages the signal mask (set of blocked signals) for the …","Send a signal to the current thread","Removes the specified flags in-place.","Remove the specified signal from this set.","Inserts or removes the specified flags depending on the …","Changes the action taken by a process on receipt of a …","Return a copy of the inner structure","Signal management (see signal(3p))","Examine and change blocked signals.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Adds the set of signals to the signal mask for the calling …","Gets the currently blocked (masked) set of signals for the …","Sets the set of signals as the signal mask for the calling …","Sets the set of signals as the signal mask, and returns …","Removes the set of signals from the signal mask for the …","","","","","","","","","","","","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Identifies a thread for <code>SigevNotify::SigevThreadId</code>","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Suspends execution of the calling thread until one of the …","Will be present in the <code>si_value</code> field of the …","Will be present in the <code>si_value</code> field of the …","Signal to deliver","Signal to send","LWP ID of the thread to notify","","","","","","","A helper struct for creating, reading and closing a …","Returns the set containing all flags.","","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns the difference between the flags in <code>self</code> and <code>other</code>.","","Returns an empty set of flags.","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","","","Returns the complement of this set of flags.","","","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","","","","Creates a new file descriptor for reading signals.","","","","","","","","","","","","","","","","","","","","","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","","","Toggles the specified flags in-place.","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","","These constants specify the protocol family to be used in …","","Interface to kernel crypto API","Socket address for the Linux kernel crypto API","AppleTalk","","Access to raw ATM PVCs","Access to ATM Switched Virtual Circuits","Amateur radio AX.25 protocol","Bluetooth low-level socket protocol","Further receptions and transmissions will be disallowed.","Can’t be used for creating sockets; mostly used for …","Ericsson’s Communication CPU to Application CPU …","Controller Area Network automotive bus protocol","Supports datagrams (connectionless, unreliable messages of …","DECet protocol sockets.","Acorn Econet protocol","Non-DIX type protocol number defined for the Ethernet IEEE …","Represents a socket option that can be retrieved.","InfiniBand native addressing ","IEEE 802.15.4 WPAN (wireless personal area network) raw …","IPv4 Internet protocols (see <code>ip(7)</code>)","IPv6 Internet protocols (see <code>ipv6(7)</code>)","IPX - Novell protocols","Socket interface over IrDA","New “modular ISDN” driver interface protocol","IUCV (inter-user communication vehicle) z/VM protocol for …","Key management protocol.","Logical link control (IEEE 802.2 LLC) protocol","Set the <code>close-on-exec</code> flag for the file descriptor …","Receive flags: Control Data was discarded (buffer too …","Enables nonblocking operation; if the operation would …","Terminates a record (when this notion is supported, as for …","This flag specifies that queued errors should be received …","Requests not to send <code>SIGPIPE</code> errors when the other end …","Sends or requests out-of-band data on sockets that support …","Peeks at an incoming message. The data is treated as …","For raw (<code>Packet</code>), Internet datagram (since Linux …","Receive operation blocks until the full amount of data can …","Multiprotocol Label Switching","Flags for send/recv and their relatives","Reserved for “802.2LLC project”; never used.","AX.25 packet layer protocol. (see netrom(4))","","Kernel user interface device (see <code>netlink(7)</code>)","Address for the Linux kernel user interface device.","Auditing (ref)","Netlink interface to request information about ciphers …","DECnet routing messages (ref)","Access to FIB lookup from user space (ref)","Transport IPv6 packets from netfilter to user space.  Used …","Open-iSCSI (ref)","Kernel messages to user space (ref)","Netfilter subsystem (ref)","Infiniband RDMA (ref)","Receives routing and link updates and may be used to …","SCSI Transports (ref)","SELinux event notifications. (ref)","Query information about sockets of various protocol …","Reserved for user-mode socket protocols (ref)","Near field communication","Low level packet interface (see <code>packet(7)</code>)","Nokia cellular modem IPC/RPC interface","Generic PPP transport layer, for setting up L2 tunnels …","Provides raw network protocol access.","Provides a reliable datagram layer that does not guarantee …","Reliable Datagram Sockets (RDS) protocol","Further receptions will be disallowed.","RATS (Radio Amateur Telecommunications Society) Open …","Rx, Andrew File System remote procedure call protocol","Set close-on-exec on the new descriptor","Set non-blocking mode on the new socket","Report hardware timestamps as generated by …","Collect receiving timestamps as reported by hardware","Collect receiving timestamps as reported by software","Report any software timestamps when available.","Collect transmiting timestamps as reported by hardware","Collect transmiting timestamps as reported by software","This was a short-lived (between Linux 2.1.30 and …","Provides a sequenced, reliable, two-way connection- based …","Represents a socket option that can be set.","","IBM SNA","Represents a socket address","Additional socket options","Constants used in <code>socket</code> and <code>socketpair</code> to specify the …","These constants are used to specify the communication …","Anything that, in C, can be cast back and forth to <code>sockaddr</code>…","A container for any sockaddr type","Provides sequenced, reliable, two-way, connection- based …","TCP protocol (ip(7))","Configuration flags for <code>SO_TIMESTAMPING</code> interface","TIPC, “cluster domain sockets” protocol","UDP protocol (ip(7))","","Local communication (see <code>unix(7)</code>)","A wrapper around <code>sockaddr_un</code>.","Unix credentials of the sending process.","Unspecified address family, (see <code>getaddrinfo(3)</code>)","","","","VMWare VSockets protocol for hypervisor-guest interaction.","Socket address for VMWare VSockets protocol","Legacy protocol for wide area network (WAN) connectivity …","Further  transmissions will be disallowed.","ITU-T X.25 / ISO-8208 protocol (see <code>x25(7)</code>)","Accept a connection on a socket","Accept a connection on a socket","Return the socket’s cipher name, for example <code>sha1</code>.","Return the socket’s cipher type, for example <code>hash</code> or <code>aead</code>…","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","If this address represents an abstract socket, return its …","Safely and falliably downcast to an immutable reference","Safely and falliably downcast to a mutable reference","Conversion from nix’s SockAddr type to the underlying …","Returns a mutable pointer to the raw <code>sockaddr_un</code> struct","Safely and falliably downcast to an immutable reference","Safely and falliably downcast to a mutable reference","Returns a raw pointer to the inner structure.  Useful for …","Returns a raw pointer to the inner structure.  Useful for …","Returns a pointer to the raw <code>sockaddr_un</code> struct","","","","","Downcast to an immutable <code>[UnixAddr]</code> reference.","Downcast to a mutable <code>[UnixAddr]</code> reference.","Safely and falliably downcast to an immutable reference","Safely and falliably downcast to a mutable reference","Bind a name to a socket","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Context Identifier (CID)","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Initiate a connection on a socket","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return the address family of this socket","Return the address family of this socket","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Create a new <code>AddressFamily</code> from an integer value retrieved …","","","","Unsafe constructor from a variable length source","","","","","","Look up the value of this socket option on the given …","Get the address of the peer connected to the socket <code>fd</code>.","Get the current address to which the socket <code>fd</code> is bound.","Get the current value for the requested socket option","Returns the group identifier","Return the socket’s multicast groups mask","","","","","","","","","","","","","","","","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Return the length of valid data in the sockaddr structure.","Return the length of valid data in the sockaddr structure.","","","Listen for connections on a socket","Create a new sockaddr_un representing a filesystem path.","Construct a new socket address from its port ID and …","Construct an <code>AF_ALG</code> socket from its cipher name and type.","Construct a <code>VsockAddr</code> from its raw fields.","Creates a new instance with the credentials of the current …","Create a new <code>sockaddr_un</code> representing an address in the “…","","","","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","","","","If this address represents a filesystem path, return that …","Returns the addrlen of this socket - …","Return the socket’s port ID.","Returns the process identifier","Port number","Receive data from a connection-oriented socket. Returns …","Receive data from a connectionless or connection-oriented …","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","","","","Send data to a connection-oriented socket. Returns the …","Send a message to a socket","Set the value of this socket option on the given socket.","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Sets the value for the requested socket option","Shut down part of a full-duplex connection.","Return the available space in the structure","Return the available space in the structure","","","","Return the appropriate <code>SockAddr</code> type from a …","","Create an endpoint for communication","Create a pair of connected sockets","Socket options as used by <code>setsockopt</code> and <code>getsockopt</code>.","","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","","","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","","","","","","","","","","","","","","","","","","","","","","","","","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the user identifier","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns a value indicating whether or not this socket has …","","","Bind this socket to a particular device like “eth0”.","Set or get the broadcast flag.","Set or get the don’t route flag.","","Enable extended reliable error message passing.","Set or retrieve the current time-to-live field that is …","Set “don’t fragment packet” flag on the IPv6 packet.","Control receiving of asynchronous error options.","Set the unicast hop limit for the socket.","Enable sending of keep-alive messages on …","When enabled,  a close(2) or shutdown(2) will not return …","Set the mark for each packet sent through this socket …","If this option is enabled, out-of-band data is directly …","Enable or disable the receiving of the <code>SCM_CREDENTIALS</code> …","Return the credentials of the foreign process connected to …","Sets or gets the maximum socket receive buffer in bytes.","Using this socket option, a privileged (<code>CAP_NET_ADMIN</code>) …","Specify the receiving timeout until reporting an error.","Enable or disable the receiving of the <code>SO_TIMESTAMP</code> …","Enable or disable the receiving of the <code>SO_TIMESTAMPNS</code> …","Enables local address reuse","Permits multiple AF_INET or AF_INET6 sockets to be bound …","Indicates that an unsigned 32-bit value ancillary message …","Specify the sending timeout until reporting an error.","Sets or gets the maximum socket send buffer in bytes.","Using this socket option, a privileged (<code>CAP_NET_ADMIN</code>)  …","Gets the socket type as an integer.","Get and clear the pending socket error.","The maximum segment size for outgoing TCP packets.","","Specifies exact type of timestamping information collected …","Configures the behavior of time-based transmission of …eturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codelags for <code>fchmodat</code> function.","","","","","“File mode / permissions” flags.","","","“File type” flags for <code>mknod</code> and related functions.","","","","","","","","","","","","","","","","","","","","","","","","Flags for <code>utimensat</code> function.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Adds the set of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Toggles the set of flags.","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","Returns an empty set of flags.","","","","","","","","","Change the file permission bits of the file specified by a …","Change the file permission bits.","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","","","","","Change the access and modification times of the file …","","","","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","","Change the access and modification times of a file without …","","","","","Create a special or ordinary file, by pathname.","Create a special or ordinary file, relative to a given …","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","","","Removes the specified flags in-place.","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","","","","","","","","","","","","","","","","","","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","","","","","","Toggles the specified flags in-place.","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Change the access and modification times of a file.","Change the access and modification times of a file.","","","","","","","","","","","","","","","","","","","","","Describes the file system type as known by the operating …","","","","","","","","","","","","","","","","","","","","","","","","","","","","Describes a mounted file system","","","","","","Size of a block","Total data blocks in filesystem","Free blocks available to unprivileged user","Free blocks in filesystem","","","","","","","","","","","Total file nodes in filesystem","Free file nodes in filesystem","Filesystem ID","Magic code defining system type","","","Returns the argument unchanged.","Returns the argument unchanged.","Identifies a mounted file system","Describes a mounted file system.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Maximum length of filenames","Optimal transfer block size","Describes a mounted file system.","","","","","","","","","File system mount Flags","Append-only file","Immutable file","Allow mandatory locks on the filesystem","Do not update access times on files","Do not interpret character or block-special devices","Do not update access times on files","Do not allow execution of binaries on the filesystem","Do not allow the set-uid bits to have an effect","Read Only","Update access time relative to modify/change time","All IO should be done synchronously","Write on file/directory/symlink","Wrapper around the POSIX <code>statvfs</code> struct","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","get the file system block size","Get the number of blocks.","Get the number of free blocks for unprivileged users","Get the number of free blocks in the file system","","","","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","","","","","","Get the total number of file inodes","Get the number of free file inodes for unprivileged users","Get the number of free file inodes","Get the file system id","Get the mount flags","","","","","","","Get the fundamental file system block size","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","Return a <code>Statvfs</code> object with information about <code>fd</code>","","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Get the maximum filename length","Returns the complement of this set of flags.","","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Return a <code>Statvfs</code> object with information about the <code>path</code>","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","","","Toggles the specified flags in-place.","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","System info structure returned by <code>sysinfo</code>.","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Returns the load average tuple.","Current number of processes.","Returns the total amount of installed RAM in Bytes.","Returns the amount of completely unused RAM in Bytes.","Returns the amount of unused swap memory in Bytes.","Returns the amount of swap memory in Bytes.","Returns system information.","","","","","Returns the time since system boot.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Makes a new <code>TimeSpec</code> with given number of microseconds.","Makes a new <code>TimeVal</code> with given number of microseconds.","","","","","","","","Makes a new <code>TimeSpec</code> with given number of nanoseconds.","Makes a new <code>TimeVal</code> with given number of nanoseconds.  …","","","Construct a new <code>TimeSpec</code> from its components","Construct a new <code>TimeVal</code> from its components","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An enumeration allowing the definition of the expiration …","Alarm will trigger every specified interval of time.","Alarm will trigger after a specified delay and then every …","Alarm will trigger once after the time given in <code>TimeSpec</code>","A Unix signal per-process timer.","Flags that are used for arming the timer.","","","","","Returns the argument unchanged.","Get the parameters for the alarm currently set, if any.","Calls <code>U::from(self)</code>.","Creates a new timer based on the clock defined by <code>clockid</code>. …","Return the number of timers that have overrun","Set a new alarm on the timer.","","","","Like <code>CLOCK_MONOTONIC</code>, except that <code>CLOCK_BOOTTIME</code> includes …","Like <code>CLOCK_BOOTTIME</code>, but will wake the system if it is …","A non-settable monotonically increasing clock.","A settable system-wide real-time clock.","Like <code>CLOCK_REALTIME</code>, but will wake the system if it is …","The type of the clock used to mark the progress of the …","An enumeration allowing the definition of the expiration …","Alarm will trigger every specified interval of time.","Alarm will trigger after a specified delay and then every …","Alarm will trigger once after the time given in <code>TimeSpec</code>","Set the <code>FD_CLOEXEC</code> flag on the file descriptor.","Set the <code>O_NONBLOCK</code> flag on the open file description …","","A timerfd instance. This is also a file descriptor, you …","Additional flags to change the behaviour of the file …","Flags that are used for arming the timer.","Returns the set containing all flags.","Returns the set containing all flags.","","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Adds the set of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Toggles the set of flags.","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","","Returns an empty set of flags.","Returns an empty set of flags.","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","","","","Get the parameters for the alarm currently set, if any.","","","","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Creates a new timer based on the clock defined by <code>clockid</code>. …","Returns the complement of this set of flags.","Returns the complement of this set of flags.","","","","Removes the specified flags in-place.","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Sets a new alarm on the timer.","Inserts or removes the specified flags depending on the …","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","","","","","Toggles the specified flags in-place.","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Remove the alarm if any is set.","Wait for the configured alarm to expire.","Wait for any child","The process was previously stopped but has resumed …","The process exited normally (as with <code>exit()</code> or returning …","The ID argument for <code>waitid</code>","Wait for the child whose process group ID matches the …","Wait for the child referred to by the given PID file …","Wait for the child whose process ID matches the given PID","The traced process was stopped by a <code>PTRACE_EVENT_*</code> event. …","The traced process was stopped by execution of a system …","The process was killed by the given signal. The third field","There are currently no state changes to report in any …","The process is alive, but was stopped by the given signal. …","Report the status of selected processes that have …","Report the status of selected processes which have …","Do not block when there are no processes wishing to report …","Don’t reap, just poll status.","An alias for WUNTRACED.","Report the status of selected processes which are stopped …","Controls the behavior of <code>waitpid</code>.","Possible return values from <code>wait()</code> or <code>waitpid()</code>.","Wait on all children, regardless of type","Wait for “clone” children only.","Don’t wait on children of other threads in this group","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","Convert a raw <code>wstatus</code> as returned by <code>waitpid</code>/<code>wait</code> into a …","","","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns the complement of this set of flags.","","","Extracts the PID from the WaitStatus unless it equals …","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","","","","Toggles the specified flags in-place.","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Wait for any child process to change status or a signal is …","Wait for a process to change status","Wait for a process to change status","","","","","","","","","","","","Clock identifier","Gets the raw <code>clockid_t</code> wrapped by <code>self</code>","","","Get the clock id of the specified process id, (see …","Get the resolution of the specified clock, (see …","Get the time of the specified clock, (see clock_gettime(2)…","Set the time of the specified clock, (see clock_settime(2)…","","","","","","","","Returns the argument unchanged.","","Creates <code>ClockId</code> from raw <code>clockid_t</code>","","Calls <code>U::from(self)</code>.","Returns the current time on the clock id","","Returns <code>ClockId</code> of a <code>pid</code> CPU-time clock","Returns resolution of the clock id","Sets time to <code>timespec</code> on the clock id","","","","","","Options for access()","","Test for existence of file.","Represents the successful result of calling <code>fork</code>","Flags for <code>linkat</code> function.","","","","Process identifier","Test for read permission.","","Specify an offset relative to the current file location.","Specify an offset relative to the next location in the …","Specify an offset relative to the end of the file.","Specify an offset relative to the next hole in the file …","Specify an offset relative to the start of the file.","","Flags for <code>unlinkat</code> function.","Test for write permission.","Directive that tells <code>lseek</code> and <code>lseek64</code> what the offset is …","Test for execute (search) permission.","Checks the file named by <code>path</code> for accessibility according …","Alarm signal scheduling.","Returns the set containing all flags.","Get the raw <code>pid_t</code> wrapped by <code>self</code>.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","","Change the current working directory of the calling …","","","","","","","","","","","","","","Close a raw file descriptor","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Daemonize this process by detaching from the controlling …","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Create a copy of the specified file descriptor (see dup(2)…","Create a copy of the specified file descriptor using the …","Create a new copy of the specified file descriptor using …","Returns an empty set of flags.","","","","","Replace the current process image with a new one (see …","Replace the current process image with a new one (see …","Execute program relative to a directory file descriptor …","Replace the current process image with a new one and …","Replace the current process image with a new one and …","","Checks the file named by <code>path</code> for accessibility according …","Change the current working directory of the process to the …","Synchronize the data of a file","Replace the current process image with a new one (see …","","","","","","","","","","","","Create a new child process duplicating the parent process (…","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","Creates <code>Pid</code> from raw <code>pid_t</code>.","Synchronize changes to a file","Truncate a file to a specified length","Returns the current directory as a <code>PathBuf</code>","","Get the group id of the calling process (see getpgrp(3)).","Get the pid of this process (see getpid(2)).","Get the pid of this processes’ parent (see getpid(2)).","Get the process group ID of a session leader getsid(2).","Get the caller’s thread ID (see gettid(2).","","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Return <code>true</code> if this is the child process of the <code>fork()</code>","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if this is the parent process of the <code>fork()</code>","","Link one file to another file","Move the read/write file offset.","","Creates new directory <code>path</code> with access rights <code>mode</code>.  (see …","Creates new fifo special file (named pipe) with path <code>path</code> …","Creates new fifo special file (named pipe) with path <code>path</code> …","Creates a regular file which persists even after process …","Returns the complement of this set of flags.","Returns PID of parent of calling process","","","Suspend the thread until a signal is received.","Create an interprocess channel.","Like <code>pipe</code>, but allows setting certain file descriptor …","","Read from a raw file descriptor.","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Set a process group ID (see setpgid(2)).","Create new session and set process group id (see setsid(2)…","Suspend execution for an interval of time","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Creates a symbolic link at <code>path2</code> which points to <code>path1</code>.","Returns the symmetric difference between the flags in <code>self</code> …","Commit filesystem caches to disk","Returns PID of calling process","","","","","","","","Toggles the specified flags in-place.","Truncate a file to a specified length","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Remove a directory entry","Remove a directory entry","Write to a raw file descriptor.","","Cancel an previously set alarm signal.","Schedule an alarm signal."],"i":[0,0,0,0,0,36,36,0,0,0,0,36,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,5,5,5,0,0,5,5,5,5,5,5,5,5,5,5,5,0,5,5,5,5,0,5,5,5,5,5,5,13,5,5,5,5,5,5,19,19,19,19,19,0,24,24,24,24,24,24,23,30,30,30,30,30,30,30,30,30,30,30,22,22,22,22,30,30,30,30,30,0,0,0,0,27,27,27,27,0,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,28,28,28,28,28,28,0,21,21,21,0,0,27,27,19,20,21,22,23,24,19,20,21,22,23,24,19,20,21,22,23,24,19,20,21,22,23,24,19,20,21,22,23,24,19,20,21,22,23,24,19,20,21,22,23,24,19,20,21,22,23,24,19,20,21,22,23,30,27,24,28,19,20,21,22,23,30,27,24,28,19,20,21,22,23,27,24,28,19,20,21,22,23,27,24,28,19,20,21,22,23,24,28,19,20,21,22,23,24,19,20,21,22,23,24,19,20,21,22,23,24,19,20,21,22,23,24,19,20,21,22,23,30,27,24,28,19,20,21,22,23,30,27,24,28,19,20,21,22,23,24,0,0,0,19,19,19,19,19,20,20,20,20,20,21,21,21,21,21,22,22,22,22,22,23,23,23,23,23,30,27,24,24,24,24,24,28,19,20,21,22,23,30,27,24,28,19,20,21,22,23,24,19,20,21,22,23,24,19,20,21,22,23,24,19,20,21,22,23,24,19,20,21,22,23,30,27,24,28,19,20,21,22,23,24,19,20,21,22,23,24,19,20,21,22,23,24,19,20,21,22,23,30,27,24,28,19,20,21,22,23,24,19,20,21,22,23,24,19,20,21,22,23,24,0,0,19,20,21,22,23,24,28,0,0,0,0,19,20,21,22,23,24,0,0,19,20,21,22,23,24,19,20,21,22,23,24,19,20,21,22,23,24,19,20,21,22,23,24,19,20,21,22,23,27,24,28,19,20,21,22,23,24,19,20,21,22,23,30,27,24,28,19,20,21,22,23,30,27,24,28,19,20,21,22,23,30,27,24,28,19,20,21,22,23,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,40,0,41,41,41,0,0,0,39,40,39,40,39,40,39,40,39,40,39,40,39,40,39,40,39,41,40,42,39,41,40,42,39,41,40,42,39,41,40,42,39,40,39,40,39,40,42,39,40,39,40,42,0,0,0,0,39,41,40,42,39,41,40,42,42,39,40,39,39,39,39,39,41,40,40,40,40,40,42,39,41,40,42,39,40,39,40,39,40,39,40,39,41,40,42,39,40,39,40,39,40,39,41,40,42,39,40,39,40,42,39,40,39,40,39,40,39,40,39,40,39,40,39,40,39,41,40,42,39,40,39,41,40,42,39,41,40,42,39,41,40,42,39,40,47,47,47,0,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,0,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,49,49,0,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,0,49,49,49,49,49,49,49,49,49,49,49,49,49,60,53,53,53,53,53,53,53,52,52,52,52,52,52,52,52,52,52,0,52,52,0,52,52,52,52,52,52,52,52,52,52,52,52,0,52,52,52,52,52,52,52,58,58,58,0,0,60,60,0,0,60,0,0,62,0,62,62,0,0,0,51,53,51,54,52,51,52,53,53,53,53,53,53,53,52,57,53,58,51,59,60,61,62,54,52,57,53,58,51,59,60,61,62,54,51,52,57,53,58,51,59,60,61,62,54,52,57,53,58,51,59,60,61,62,54,52,53,58,53,53,51,53,53,51,52,57,53,58,51,60,61,62,54,52,57,53,58,51,60,61,62,54,53,51,61,52,52,57,53,53,53,53,53,58,51,59,60,61,62,54,52,57,53,58,51,59,60,61,62,54,54,53,53,53,53,51,51,52,61,52,57,53,58,51,60,61,62,54,53,53,53,52,57,53,58,51,59,60,61,62,54,57,51,59,53,53,51,52,0,0,61,61,54,57,59,53,52,53,58,0,0,53,51,53,0,54,0,0,53,53,53,51,51,51,51,51,52,57,53,58,51,59,60,61,62,54,52,53,52,52,57,53,58,51,59,60,61,62,54,52,57,53,58,51,59,60,61,62,54,52,57,53,58,51,59,60,61,62,54,0,53,51,186,187,186,187,187,64,64,0,0,0,0,0,64,65,64,64,64,64,64,64,64,64,65,66,64,65,66,64,66,64,66,64,64,64,64,65,64,64,65,66,64,65,66,64,64,64,64,64,64,65,66,64,65,66,64,64,64,64,64,65,66,64,64,64,64,65,66,65,64,64,65,65,64,64,65,64,64,65,0,0,0,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,64,64,64,64,66,64,64,65,66,64,65,66,64,65,66,64,65,0,75,89,0,89,89,89,89,89,89,87,89,89,89,85,89,89,86,0,89,89,89,89,89,89,89,89,89,89,71,71,71,71,71,71,71,71,71,71,89,0,89,89,75,89,0,86,86,86,86,86,86,86,86,86,86,86,86,86,86,89,89,89,89,85,85,89,87,89,89,68,68,70,70,70,70,70,70,89,85,0,0,89,0,0,0,0,0,0,85,86,0,89,86,75,89,0,0,89,92,96,75,89,0,89,87,89,0,0,69,69,70,68,71,72,74,74,75,72,74,74,83,83,72,72,77,69,81,74,74,74,74,0,70,68,71,70,68,71,70,68,71,70,68,71,70,68,71,70,68,71,70,68,71,78,76,84,72,74,77,69,81,85,86,70,68,71,87,88,75,89,78,76,84,72,74,77,69,81,85,86,70,68,71,87,88,75,89,81,78,76,84,72,74,77,69,81,85,86,70,68,71,87,88,75,89,78,76,84,72,74,77,69,81,85,86,70,68,71,87,88,75,89,70,68,71,70,68,71,0,70,68,71,88,70,68,71,70,68,71,78,76,84,72,74,77,69,81,85,86,70,68,71,87,88,75,89,78,76,84,72,74,77,69,81,85,86,70,68,71,87,88,75,89,70,68,71,83,83,75,78,76,84,72,72,74,74,77,77,69,69,81,81,85,86,70,70,70,70,70,68,68,68,68,68,71,71,71,71,71,87,88,75,75,89,78,76,84,72,74,77,69,81,85,86,70,68,71,87,88,88,75,89,70,68,71,70,68,71,70,68,71,89,70,68,71,83,72,74,77,69,81,92,0,0,0,88,77,78,76,84,72,74,77,69,81,86,70,68,71,87,75,89,70,68,71,70,68,71,70,68,71,78,76,84,72,74,77,69,81,85,86,70,68,71,87,88,75,89,70,68,71,70,68,71,83,83,72,74,0,72,77,69,81,88,72,75,75,75,75,70,68,71,70,68,71,72,72,77,88,81,0,0,70,68,71,78,78,0,0,0,96,70,68,71,0,0,83,83,72,0,0,0,0,0,0,0,84,70,68,71,70,68,71,76,76,70,68,71,78,76,84,72,74,77,69,81,85,86,70,68,71,87,88,75,89,75,72,74,77,69,81,75,70,68,71,78,76,84,72,74,77,69,81,85,85,86,70,68,71,87,88,75,89,78,76,84,72,74,77,69,81,85,86,70,68,71,87,88,75,89,78,76,84,72,74,77,69,81,85,86,70,68,71,87,88,75,89,88,70,68,71,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,132,133,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,132,133,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,132,133,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,132,133,132,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,133,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,133,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,132,133,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,132,133,98,99,100,101,102,103,104,105,106,107,108,109,110,111,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,133,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,133,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,132,133,98,99,100,101,102,103,104,106,107,109,110,111,112,113,116,118,119,120,121,122,123,124,125,126,127,128,129,130,132,133,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,132,133,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,132,133,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,132,133,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,132,133,0,0,0,144,145,0,144,145,0,142,142,142,142,142,142,142,142,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,0,142,37,142,37,142,37,142,37,142,37,142,37,142,37,142,37,142,37,144,145,141,142,37,144,145,141,142,37,144,145,141,142,37,144,145,141,142,37,142,37,142,37,0,142,37,142,37,142,37,141,142,37,141,142,37,0,0,142,142,142,142,142,37,37,37,37,37,144,145,141,142,37,144,145,141,142,37,142,37,142,37,142,37,0,0,0,142,37,141,142,37,142,37,142,37,142,37,144,145,141,142,37,142,37,0,0,0,0,0,0,0,0,0,142,37,142,37,142,37,142,37,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,0,142,37,142,37,142,37,142,37,144,145,141,142,37,142,37,144,145,141,142,37,144,145,141,142,37,144,145,141,0,142,37,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,148,148,148,148,148,151,148,151,148,151,148,151,151,151,148,148,148,148,148,151,148,151,0,0,148,151,148,148,0,148,151,148,151,148,151,148,151,0,154,154,154,154,154,154,154,154,154,154,154,154,0,154,154,154,154,154,154,154,154,155,155,155,155,154,155,154,155,154,155,154,155,154,154,154,154,154,154,154,155,154,155,154,155,155,155,155,155,154,154,154,154,154,155,155,154,155,154,154,154,154,0,154,155,154,154,154,154,155,154,154,155,154,154,154,154,0,154,154,154,154,155,154,154,155,154,155,154,155,154,0,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,0,158,158,158,158,158,0,0,0,146,136,146,136,146,136,146,136,146,136,146,136,146,136,146,136,146,136,146,136,146,136,146,146,136,136,146,146,146,136,136,146,146,146,136,188,146,136,188,146,136,188,146,136,188,146,136,188,146,136,146,136,146,136,188,188,146,136,188,146,136,188,188,146,136,188,146,136,146,136,188,146,136,146,136,0,0,146,136,146,136,146,136,146,136,146,146,136,136,146,136,188,0,168,168,168,0,0,167,167,167,167,167,167,167,167,167,167,167,167,167,173,173,173,173,173,0,0,168,168,168,171,171,170,0,0,0,170,171,172,170,171,170,171,170,171,170,171,170,171,170,171,170,171,168,170,172,173,171,168,170,172,173,171,168,170,173,171,168,170,173,171,170,173,171,170,171,170,171,170,171,172,170,171,168,170,173,171,168,170,173,171,170,171,168,170,170,170,170,170,172,173,171,171,171,171,171,168,170,172,173,171,170,171,170,171,170,171,170,171,172,172,170,173,171,170,171,170,171,170,171,168,170,172,173,171,170,171,170,171,172,170,171,170,173,171,170,171,170,172,171,170,171,170,171,170,171,168,170,173,171,170,171,168,170,172,173,171,168,170,172,173,171,168,170,172,173,171,170,171,172,172,176,175,175,0,176,176,176,175,175,175,175,175,174,174,174,174,174,174,0,0,174,174,174,174,174,174,174,174,174,174,174,174,175,176,174,175,176,174,175,176,174,175,176,174,176,174,174,174,174,174,175,176,174,175,176,174,174,174,174,174,174,175,176,174,175,176,174,174,174,174,175,174,175,176,174,174,174,174,175,176,174,174,174,174,176,175,174,174,174,174,174,174,175,176,174,174,175,176,174,175,176,174,175,176,174,0,0,0,169,169,169,169,169,169,169,169,169,169,169,0,169,169,169,0,0,0,0,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,0,179,178,0,0,182,181,179,0,178,182,180,180,180,180,180,181,0,178,0,178,0,0,178,63,178,178,178,178,178,178,178,63,179,180,181,182,178,63,179,180,181,182,178,0,0,63,179,180,181,182,178,63,179,180,181,182,178,0,63,178,178,178,0,178,0,0,0,178,63,178,63,178,0,0,0,0,0,178,0,0,0,0,63,63,179,180,181,182,178,178,178,178,178,0,63,179,180,181,182,178,178,178,178,178,63,0,0,0,0,0,0,0,0,0,63,178,178,178,178,63,179,180,181,182,178,178,179,178,179,0,0,0,0,0,0,0,0,178,63,63,178,0,0,0,0,0,178,178,0,0,0,178,178,0,178,0,63,63,179,180,181,182,178,63,178,0,63,179,180,181,182,178,63,179,180,181,182,178,63,179,180,181,182,178,178,0,0,0,189,0,0],"f":[0,0,0,0,0,[[],1],[[],2],0,0,0,0,[3,4],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[5,6],0,[5,[[7,[5]]]],[[]],[[]],[[]],[5,5],[[]],[5,8],[[5,5],1],[[],1],[[],9],[[5,10],11],[[5,10],11],[[]],[5,6],[9,5],[9,5],[[]],[[],6],[[],5],[12],[[[0,[13,[14,[[0,[13,[14,[[0,[13,[14,[[0,[13,[14,[[0,[13,14]]]]]]]]]]]]]]]]]]],[[4,[[0,[13,[14,[[0,[13,[14,[[0,[13,[14,[[0,[13,14]]]]]]]]]]]]]]]]]],[[]],[[]],[[],15],[[],16],[17,[[16,[5,17]]]],[[],16],[[],18],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],19],[[],20],[[],21],[[],22],[[],23],[[],24],[[19,19],19],[[20,20],20],[[21,21],21],[[22,22],22],[[23,23],23],[[24,24],24],[[19,19]],[[20,20]],[[21,21]],[[22,22]],[[23,23]],[[24,24]],[[19,19],19],[[20,20],20],[[21,21],21],[[22,22],22],[[23,23],23],[[24,24],24],[[19,19]],[[20,20]],[[21,21]],[[22,22]],[[23,23]],[[24,24]],[19,25],[20,25],[21,26],[22,25],[23,25],[24,25],[[19,19],19],[[20,20],20],[[21,21],21],[[22,22],22],[[23,23],23],[[24,24],24],[[19,19]],[[20,20]],[[21,21]],[[22,22]],[[23,23]],[[24,24]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[19,19],[20,20],[21,21],[22,22],[23,23],[27,27],[24,24],[28,28],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[19,19],29],[[20,20],29],[[21,21],29],[[22,22],29],[[23,23],29],[[24,24],29],[[28,28],29],[19,19],[20,20],[21,21],[22,22],[23,23],[24,24],[[19,19],1],[[20,20],1],[[21,21],1],[[22,22],1],[[23,23],1],[[24,24],1],[[19,19],19],[[20,20],20],[[21,21],21],[[22,22],22],[[23,23],23],[[24,24],24],[[],19],[[],20],[[],21],[[],22],[[],23],[[],24],[[19,19],1],[[20,20],1],[[21,21],1],[[22,22],1],[[23,23],1],[[30,30],1],[[27,27],1],[[24,24],1],[[28,28],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[19,31]],[[20,31]],[[21,31]],[[22,31]],[[23,31]],[[24,31]],[[32,24,33,33],4],[[32,30],[[4,[25]]]],[[32,27],4],[[19,10],11],[[19,10],11],[[19,10],11],[[19,10],11],[[19,10],11],[[20,10],11],[[20,10],11],[[20,10],11],[[20,10],11],[[20,10],11],[[21,10],11],[[21,10],11],[[21,10],11],[[21,10],11],[[21,10],11],[[22,10],11],[[22,10],11],[[22,10],11],[[22,10],11],[[22,10],11],[[23,10],11],[[23,10],11],[[23,10],11],[[23,10],11],[[23,10],11],[[30,10],11],[[27,10],11],[[24,10],11],[[24,10],11],[[24,10],11],[[24,10],11],[[24,10],11],[[28,10],11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[25,[[7,[19]]]],[25,[[7,[20]]]],[26,[[7,[21]]]],[25,[[7,[22]]]],[25,[[7,[23]]]],[25,[[7,[24]]]],[25,19],[25,20],[26,21],[25,22],[25,23],[25,24],[25,19],[25,20],[26,21],[25,22],[25,23],[25,24],[31,19],[31,20],[31,21],[31,22],[31,23],[31,24],[[19,34]],[[20,34]],[[21,34]],[[22,34]],[[23,34]],[[30,34]],[[27,34]],[[24,34]],[[28,34]],[[19,19]],[[20,20]],[[21,21]],[[22,22]],[[23,23]],[[24,24]],[[19,19],19],[[20,20],20],[[21,21],21],[[22,22],22],[[23,23],23],[[24,24],24],[[19,19],1],[[20,20],1],[[21,21],1],[[22,22],1],[[23,23],1],[[24,24],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[19,1],[20,1],[21,1],[22,1],[23,1],[24,1],[19,1],[20,1],[21,1],[22,1],[23,1],[24,1],[19,19],[20,20],[21,21],[22,22],[23,23],[24,24],[[[0,[35,36]],20,37],[[4,[32]]]],[[32,[0,[35,36]],20,37],[[4,[32]]]],[[19,19],[[7,[29]]]],[[20,20],[[7,[29]]]],[[21,21],[[7,[29]]]],[[22,22],[[7,[29]]]],[[23,23],[[7,[29]]]],[[24,24],[[7,[29]]]],[[28,28],[[7,[29]]]],[[32,33,33,28],4],[[32,33,33],4],[[[0,[35,36]]],[[4,[38]]]],[[32,[0,[35,36]]],[[4,[38]]]],[[19,19]],[[20,20]],[[21,21]],[[22,22]],[[23,23]],[[24,24]],[[[7,[32]],[0,[35,36]],[7,[32]],[0,[35,36]]],4],[[[7,[32]],[0,[35,36]],[7,[32]],[0,[35,36]],21],4],[[19,19,1]],[[20,20,1]],[[21,21,1]],[[22,22,1]],[[23,23,1]],[[24,24,1]],[[19,19],19],[[20,20],20],[[21,21],21],[[22,22],22],[[23,23],23],[[24,24],24],[[19,19]],[[20,20]],[[21,21]],[[22,22]],[[23,23]],[[24,24]],[[19,19],19],[[20,20],20],[[21,21],21],[[22,22],22],[[23,23],23],[[24,24],24],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[19,19]],[[20,20]],[[21,21]],[[22,22]],[[23,23]],[[24,24]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[19,19],19],[[20,20],20],[[21,21],21],[[22,22],22],[[23,23],23],[[24,24],24],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],39],[[],40],[[39,39],39],[[40,40],40],[[39,39]],[[40,40]],[[39,39],39],[[40,40],40],[[39,39]],[[40,40]],[39,25],[40,25],[[39,39],39],[[40,40],40],[[39,39]],[[40,40]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[39,39],[41,41],[40,40],[42,42],[[]],[[]],[[]],[[]],[[39,39],29],[[40,40],29],[39,39],[40,40],[[39,39],1],[[40,40],1],[42,43],[[39,39],39],[[40,40],40],[[],39],[[],40],[[],42],[[],[[4,[32]]]],[40,[[4,[32]]]],[[32,41,32,[44,[[7,[42]]]]],4],[[32,[45,[42]],46],[[4,[2]]]],[[39,39],1],[[41,41],1],[[40,40],1],[[42,42],1],[[],1],[[],1],[[],1],[[],1],[42,39],[[39,31]],[[40,31]],[[39,10],11],[[39,10],11],[[39,10],11],[[39,10],11],[[39,10],11],[[41,10],11],[[40,10],11],[[40,10],11],[[40,10],11],[[40,10],11],[[40,10],11],[[42,10],11],[[]],[[]],[[]],[[]],[25,[[7,[39]]]],[25,[[7,[40]]]],[25,39],[25,40],[25,39],[25,40],[31,39],[31,40],[[39,34]],[[41,34]],[[40,34]],[[42,34]],[[39,39]],[[40,40]],[[39,39],39],[[40,40],40],[[39,39],1],[[40,40],1],[[]],[[]],[[]],[[]],[39,1],[40,1],[39,1],[40,1],[[39,43],42],[39,39],[40,40],[[39,39],[[7,[29]]]],[[40,40],[[7,[29]]]],[[39,39]],[[40,40]],[[39,39,1]],[[40,40,1]],[[39,39],39],[[40,40],40],[[39,39]],[[40,40]],[[39,39],39],[[40,40],40],[[]],[[]],[[]],[[]],[[39,39]],[[40,40]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],18],[[],18],[[],18],[[],18],[[39,39],39],[[40,40],40],0,0,0,0,[[],47],[[47,47],47],[[47,47]],[[47,47],47],[[47,47]],[47,25],[[47,47],47],[[47,47]],[[]],[[]],[47,47],[[]],[[47,47],29],[47,47],[[47,47],1],[[47,47],47],[[],47],[[47,47],1],[[],1],[[48,47],[[4,[32]]]],[[47,31]],[[47,10],11],[[47,10],11],[[47,10],11],[[47,10],11],[[47,10],11],[[]],[25,[[7,[47]]]],[25,47],[25,47],[31,47],[[47,34]],[[47,47]],[[47,47],47],[[47,47],1],[[]],[47,1],[47,1],[47,47],[[47,47],[[7,[29]]]],[[47,47]],[[47,47,1]],[[47,47],47],[[47,47]],[[47,47],47],[[]],[[47,47]],[[],16],[[],16],[[],18],[[47,47],47],0,0,0,[[],49],[[49,49],49],[[49,49]],[[49,49],49],[[49,49]],[49,48],[[49,49],49],[[49,49]],[[]],[[]],[49,49],[[]],[[49,49],29],[49,49],[[49,49],1],[[49,49],49],[[],49],[[49,49],1],[[],1],[[49,31]],[[49,10],11],[[49,10],11],[[49,10],11],[[49,10],11],[[49,10],11],[[]],[48,[[7,[49]]]],[48,49],[48,49],[31,49],[[49,34]],[[49,49]],[[49,49],49],[[49,49],1],[[]],[49,1],[49,1],[[50,49],[[4,[32]]]],[49,49],[[49,49],[[7,[29]]]],[[49,49]],[[49,49,1]],[[49,49],49],[[49,49]],[[49,49],49],[[]],[[49,49]],[[],16],[[],16],[[],18],[[49,49],49],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[51,52]],[[],53],[[],51],[54,55],[52,8],[51,56],[52,8],[[53,53],53],[[53,53]],[[53,53],53],[[53,53]],[53,25],[[53,53],53],[[53,53]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[51],[52,52],[57,57],[53,53],[58,58],[51,51],[59,59],[60,60],[61,61],[62,62],[54,54],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[52,52],29],[[53,53],29],[[58,58],29],[53,53],[[53,53],1],[[51,52],1],[[53,53],53],[[],53],[[],51],[[52,52],1],[[57,57],1],[[53,53],1],[[58,58],1],[[51,51],1],[[60,60],1],[[61,61],1],[[62,62],1],[[54,54],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[53,31]],[[51,31]],[61,53],[[52,10],11],[[52,10],11],[[57,10],11],[[53,10],11],[[53,10],11],[[53,10],11],[[53,10],11],[[53,10],11],[[58,10],11],[[51,10],11],[[59,10],11],[[60,10],11],[[61,10],11],[[62,10],11],[[54,10],11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[55,54],[[]],[25,[[7,[53]]]],[25,53],[25,53],[31,53],[31,51],[56,51],[8,[[4,[52]]]],[61,60],[[52,34]],[[57,34]],[[53,34]],[[58,34]],[[51,34]],[[60,34]],[[61,34]],[[62,34]],[[54,34]],[[53,53]],[[53,53],53],[[53,53],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[51],[[]],[53,1],[53,1],[51,59],[[],57],[[63,[44,[[7,[52]]]]],4],[[63,[44,[[7,[52]]]]],4],[61,51],[[60,53,51],61],[62,54],[57,[[7,[52]]]],[59,[[7,[52]]]],[53,53],[[52,52],[[7,[29]]]],[[53,53],[[7,[29]]]],[[58,58],[[7,[29]]]],[[58,[7,[51]],[7,[51]]],4],[52,4],[[53,53]],[[51,52]],[[53,53,1]],[[52,61],[[4,[61]]]],[54,55],[[52,60],[[4,[60]]]],[[58,[7,[51]],[7,[51]]],4],[[53,53],53],[[53,53]],[[53,53],53],[51,4],[[],[[4,[51]]]],[51,4],[[51,58],[[4,[51]]]],[51,4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],15],[[53,53]],[[],16],[9,[[4,[52]]]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],0,[[53,53],53],[51,[[4,[52]]]],0,0,0,0,0,0,0,0,0,0,0,0,[[],64],[65,32],[[64,64],64],[[64,64]],[[64,64],64],[[64,64]],[64,25],[[64,64],64],[[64,64]],[[]],[[]],[[]],[[]],[[]],[[]],[64,64],[66,66],[[]],[[]],[[64,64],29],[64,64],[[64,64],1],[[64,64],64],[65],[[],64],[[64,64],1],[[65,65],1],[[66,66],1],[[],1],[[],1],[[],1],[[64,31]],[[64,10],11],[[64,10],11],[[64,10],11],[[64,10],11],[[64,10],11],[[65,10],11],[[66,10],[[16,[67]]]],[[]],[[]],[[]],[25,[[7,[64]]]],[25,64],[25,64],[31,64],[[64,34]],[[65,34]],[[66,34]],[[64,64]],[[64,64],64],[[64,64],1],[[]],[[]],[[]],[[]],[64,1],[64,1],[51,[[4,[65]]]],[65,7],[64,64],[[64,64],[[7,[29]]]],[65,[[4,[[7,[66]]]]]],[[64,64]],[[64,64,1]],[[65,51],4],0,0,[[32,51,64],[[4,[32]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[64,64],64],[[64,64]],[[64,64],64],[[]],[[]],[[64,64]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],18],[[],18],[[],18],[[64,64],64],[[51,64],[[4,[65]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[32,[[4,[32]]]],[[32,68],[[4,[32]]]],[69,50],[69,50],[[],70],[[],68],[[],71],[72,[[7,[[45,[73]]]]]],[74,[[7,[69]]]],[74,[[7,[69]]]],[75],[72,76],[74,[[7,[77]]]],[74,[[7,[77]]]],[[],78],[[],78],[72,76],[72,76],[77,79],[69,80],[81,82],[74,[[7,[72]]]],[74,[[7,[72]]]],[74,[[7,[81]]]],[74,[[7,[81]]]],[[32,83],4],[[70,70],70],[[68,68],68],[[71,71],71],[[70,70]],[[68,68]],[[71,71]],[[70,70],70],[[68,68],68],[[71,71],71],[[70,70]],[[68,68]],[[71,71]],[70,48],[68,25],[71,25],[[70,70],70],[[68,68],68],[[71,71],71],[[70,70]],[[68,68]],[[71,71]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[81,26],[78,78],[76,76],[84,84],[72,72],[74,74],[77,77],[69,69],[81,81],[85,85],[86,86],[70,70],[68,68],[71,71],[87,87],[88,88],[75,75],[89,89],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[70,70],29],[[68,68],29],[[71,71],29],[70,70],[68,68],[71,71],[[32,83],4],[[70,70],1],[[68,68],1],[[71,71],1],[[],88],[[70,70],70],[[68,68],68],[[71,71],71],[[],70],[[],68],[[],71],[[78,78],1],[[76,76],1],[[84,84],1],[[72,72],1],[[74,74],1],[[77,77],1],[[69,69],1],[[81,81],1],[[85,85],1],[[86,86],1],[[70,70],1],[[68,68],1],[[71,71],1],[[87,87],1],[[88,88],1],[[75,75],1],[[89,89],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[70,31]],[[68,31]],[[71,31]],[[],[[7,[89]]]],[[],[[7,[89]]]],[75,89],[[78,10],[[16,[67]]]],[[76,10],[[16,[67]]]],[[84,10],[[16,[67]]]],[[72,10],11],[[72,10],11],[[74,10],11],[[74,10],11],[[77,10],11],[[77,10],11],[[69,10],11],[[69,10],11],[[81,10],11],[[81,10],11],[[85,10],11],[[86,10],11],[[70,10],11],[[70,10],11],[[70,10],11],[[70,10],11],[[70,10],11],[[68,10],11],[[68,10],11],[[68,10],11],[[68,10],11],[[68,10],11],[[71,10],11],[[71,10],11],[[71,10],11],[[71,10],11],[[71,10],11],[[87,10],11],[[88,10],11],[[75,10],11],[[75,10],11],[[89,10],11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[90,88],[[]],[[]],[48,[[7,[70]]]],[25,[[7,[68]]]],[25,[[7,[71]]]],[48,70],[25,68],[25,71],[48,70],[25,68],[25,71],[9,[[7,[89]]]],[31,70],[31,68],[31,71],[[78,[7,[91]]],[[7,[35]]]],[[78,[7,[91]]],[[7,[72]]]],[[78,[7,[91]]],[[7,[74]]]],[[78,[7,[91]]],[[7,[77]]]],[[78,[7,[91]]],[[7,[69]]]],[[78,[7,[91]]],[[7,[81]]]],[32,4],[32,[[4,[83]]]],[32,[[4,[83]]]],[[32,92],4],[88,93],[77,26],[[78,34]],[[76,34]],[[84,34]],[[72,34]],[[74,34]],[[77,34]],[[69,34]],[[81,34]],[[86,34]],[[70,34]],[[68,34]],[[71,34]],[[87,34]],[[75,34]],[[89,34]],[[70,70]],[[68,68]],[[71,71]],[[70,70],70],[[68,68],68],[[71,71],71],[[70,70],1],[[68,68],1],[[71,71],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[70,1],[68,1],[71,1],[70,1],[68,1],[71,1],[[],91],[[],91],[72,91],[74,91],[[32,2],4],[[[0,[35,36]]],[[4,[72]]]],[[26,26],77],[[8,8],69],[[26,26],81],[[],88],[[[45,[73]]],[[4,[72]]]],[[8,8],75],[[26,26],75],[[[0,[35,36]]],[[4,[75]]]],[[26,26],75],[70,70],[68,68],[71,71],[[70,70],[[7,[29]]]],[[68,68],[[7,[29]]]],[[71,71],[[7,[29]]]],[72,[[7,[94]]]],[72,2],[77,26],[88,95],[81,26],[[32,[45,[73]],71],[[4,[2]]]],[[32,[45,[73]]],4],[[70,70]],[[68,68]],[[71,71]],0,0,0,[[32,[45,[73]],71],[[4,[2]]]],[[32,[45,[73]],83,71],[[4,[2]]]],[32,4],[[70,70,1]],[[68,68,1]],[[71,71,1]],[[32,96],4],[[32,87],4],[[],91],[[],91],[[],91],0,0,[[84,2],[[4,[75]]]],0,[[89,85,68,[44,[[7,[86]]]]],[[4,[32]]]],[[89,85,[44,[[7,[86]]]],68],4],0,0,[[70,70],70],[[68,68],68],[[71,71],71],[[70,70]],[[68,68]],[[71,71]],0,0,[[70,70],70],[[68,68],68],[[71,71],71],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[75,15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[70,70]],[[68,68]],[[71,71]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[9,[[4,[85]]]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[88,97],[[70,70],70],[[68,68],68],[[71,71],71],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[98,98],[99,99],[100,100],[101,101],[102,102],[103,103],[104,104],[105,105],[106,106],[107,107],[108,108],[109,109],[110,110],[111,111],[112,112],[113,113],[114,114],[115,115],[116,116],[117,117],[118,118],[119,119],[120,120],[121,121],[122,122],[123,123],[124,124],[125,125],[126,126],[127,127],[128,128],[129,129],[130,130],[[[132,[131]]],[[132,[131]]]],[133,133],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],132],[[98,98],1],[[99,99],1],[[100,100],1],[[101,101],1],[[102,102],1],[[103,103],1],[[104,104],1],[[105,105],1],[[106,106],1],[[107,107],1],[[108,108],1],[[109,109],1],[[110,110],1],[[111,111],1],[[112,112],1],[[113,113],1],[[114,114],1],[[115,115],1],[[116,116],1],[[117,117],1],[[118,118],1],[[119,119],1],[[120,120],1],[[121,121],1],[[122,122],1],[[123,123],1],[[124,124],1],[[125,125],1],[[126,126],1],[[127,127],1],[[128,128],1],[[129,129],1],[[133,133],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[98,10],11],[[99,10],11],[[100,10],11],[[101,10],11],[[102,10],11],[[103,10],11],[[104,10],11],[[105,10],11],[[106,10],11],[[107,10],11],[[108,10],11],[[109,10],11],[[110,10],11],[[111,10],11],[[112,10],11],[[113,10],11],[[114,10],11],[[115,10],11],[[116,10],11],[[117,10],11],[[118,10],11],[[119,10],11],[[120,10],11],[[121,10],11],[[122,10],11],[[123,10],11],[[124,10],11],[[125,10],11],[[126,10],11],[[127,10],11],[[128,10],11],[[129,10],11],[[130,10],11],[[[132,[134]],10],11],[[133,10],11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[98,32],[[4,[1]]]],[[99,32],[[4,[1]]]],[[100,32],[[4,[135]]]],[[101,32],[[4,[136]]]],[[102,32],[[4,[136]]]],[[103,32],[[4,[1]]]],[[104,32],[[4,[1]]]],[[105,32],[[4,[9]]]],[[106,32],[[4,[1]]]],[[107,32],[[4,[1]]]],[[108,32],[[4,[88]]]],[[109,32],[[4,[26]]]],[[110,32],[[4,[2]]]],[[111,32],[[4,[2]]]],[[114,32],[[4,[85]]]],[[115,32],[[4,[1]]]],[[116,32],[[4,[38]]]],[[117,32],[[4,[137]]]],[[118,32],[[4,[70]]]],[[119,32],[[4,[1]]]],[[120,32],[[4,[1]]]],[[121,32],[[4,[26]]]],[[122,32],[[4,[1]]]],[[123,32],[[4,[138]]]],[[124,32],[[4,[25]]]],[[125,32],[[4,[1]]]],[[126,32],[[4,[1]]]],[[127,32],[[4,[25]]]],[[128,32],[[4,[25]]]],[[129,32],[[4,[1]]]],[[133,32],[[4,[26]]]],[[98,34]],[[99,34]],[[100,34]],[[101,34]],[[102,34]],[[103,34]],[[104,34]],[[105,34]],[[106,34]],[[107,34]],[[108,34]],[[109,34]],[[110,34]],[[111,34]],[[112,34]],[[113,34]],[[114,34]],[[115,34]],[[116,34]],[[117,34]],[[118,34]],[[119,34]],[[120,34]],[[121,34]],[[122,34]],[[123,34]],[[124,34]],[[125,34]],[[126,34]],[[127,34]],[[128,34]],[[129,34]],[[133,34]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[98,32,1],4],[[99,32,1],4],[[100,32,135],4],[[101,32,136],4],[[102,32,136],4],[[103,32,1],4],[[104,32,1],4],[[106,32,1],4],[[107,32,1],4],[[109,32,26],4],[[110,32,2],4],[[111,32,2],4],[[112,32,2],4],[[113,32,2],4],[[116,32,38],4],[[118,32,70],4],[[119,32,1],4],[[120,32,1],4],[[121,32,26],4],[[122,32,1],4],[[123,32,138],4],[[124,32,25],4],[[125,32,1],4],[[126,32,1],4],[[127,32,25],4],[[128,32,25],4],[[129,32,1],4],[[130,32,2],4],[[[132,[[0,[[139,[[45,[73]]]],131]]]],32,[0,[[139,[[45,[73]]]],131]]],4],[[133,32,26],4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],0,0,[[140,141],9],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],142],[[],37],[[142,142],142],[[37,37],37],[[142,142]],[[37,37]],[[142,142],142],[[37,37],37],[[142,142]],[[37,37]],[142,143],[37,143],[[142,142],142],[[37,37],37],[[142,142]],[[37,37]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[142,142],[37,37],[144,144],[145,145],[141,141],[[]],[[]],[[]],[[]],[[]],[[142,142],29],[[37,37],29],[142,142],[37,37],[[142,142],1],[[37,37],1],0,[[142,142],142],[[37,37],37],[[],142],[[],37],[[142,142],1],[[37,37],1],[[141,141],1],[[],1],[[],1],[[],1],[[142,31]],[[37,31]],[[32,37],4],[[[7,[32]],[0,[35,36]],37,144],4],[[142,10],11],[[142,10],11],[[142,10],11],[[142,10],11],[[142,10],11],[[37,10],11],[[37,10],11],[[37,10],11],[[37,10],11],[[37,10],11],[[144,10],11],[[145,10],11],[[141,10],[[16,[67]]]],[[]],[[]],[[]],[[]],[[]],[143,[[7,[142]]]],[143,[[7,[37]]]],[143,142],[143,37],[143,142],[143,37],[31,142],[31,37],[32,[[4,[141]]]],[[32,[0,[35,36]],19],[[4,[141]]]],[[32,146,146],4],[[142,34]],[[37,34]],[[141,34]],[[142,142]],[[37,37]],[[142,142],142],[[37,37],37],[[142,142],1],[[37,37],1],[[]],[[]],[[]],[[]],[[]],[142,1],[37,1],[142,1],[37,1],[[[0,[35,36]]],[[4,[141]]]],[[[0,[35,36]],136,136],4],[147,43],[[43,43],147],[147,43],[[32,[0,[35,36]],37],4],[[[0,[35,36]],142,37,147],4],[[32,[0,[35,36]],142,37,147],4],0,[142,142],[37,37],[[142,142],[[7,[29]]]],[[37,37],[[7,[29]]]],[[142,142]],[[37,37]],[[142,142,1]],[[37,37,1]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[0,[35,36]]],[[4,[141]]]],[[142,142],142],[[37,37],37],[[142,142]],[[37,37]],[[142,142],142],[[37,37],37],[[]],[[]],[[]],[[]],[[]],[[142,142]],[[37,37]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],18],[[],18],[[],18],[[],18],[[],18],[37,37],[[142,142],142],[[37,37],37],[[[7,[32]],[0,[35,36]],146,146,145],4],[[[0,[35,36]],136,136],4],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[148,149],[148,150],[148,150],[148,150],[[]],[[]],[[]],[[]],[148,148],[151,151],[[]],[[]],[[151,151],1],[[],1],[148,150],[148,150],[148,152],[148,151],[[148,10],11],[[151,10],11],[[]],[[]],0,[153,[[4,[148]]]],[[]],[[]],[148,149],[148,149],[[[0,[35,36]]],[[4,[148]]]],[[]],[[]],[[],16],[[],16],[[],16],[[],16],[[],18],[[],18],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],154],[[154,154],154],[[154,154]],[[154,154],154],[[154,154]],[154,150],[[154,154],154],[[154,154]],[155,150],[155,156],[155,156],[155,156],[[]],[[]],[[]],[[]],[154,154],[155,155],[[]],[[]],[[154,154],29],[154,154],[[154,154],1],[[],154],[[154,154],154],[[],154],[[154,154],1],[[155,155],1],[[],1],[[],1],[[154,31]],[155,157],[155,157],[155,157],[155,150],[155,154],[[154,10],11],[[154,10],11],[[154,10],11],[[154,10],11],[[154,10],11],[[155,10],11],[155,150],[[]],[[]],[150,[[7,[154]]]],[150,154],[150,154],[31,154],[153,[[4,[155]]]],[[154,34]],[[155,34]],[[154,154]],[[154,154],154],[[154,154],1],[[]],[[]],[154,1],[154,1],[155,150],[154,154],[[154,154],[[7,[29]]]],[[154,154]],[[154,154,1]],[[[0,[35,36]]],[[4,[155]]]],[[154,154],154],[[154,154]],[[154,154],154],[[]],[[]],[[154,154]],[[],16],[[],16],[[],16],[[],16],[[],18],[[],18],[[154,154],154],0,[[]],[[]],[158,158],[[]],[[158,158],1],[[],1],[[158,10],11],[[]],[[158,34]],[[]],[158],[158,159],[158,43],[158,43],[158,43],[158,43],[[],[[4,[158]]]],[[]],[[],16],[[],16],[[],18],[158,160],0,0,0,[[146,146],146],[[136,136],136],[146,161],[136,162],[146,161],[136,162],[[]],[[]],[[]],[[]],[146,146],[136,136],[[]],[[]],[[146,146],29],[[136,136],29],[[146,9],146],[[136,9],136],[[146,146],1],[[136,136],1],[[],1],[[],1],[[146,10],11],[[146,10],11],[[136,10],11],[[136,10],11],[160,146],[161,146],[[]],[[]],[162,136],[160,146],[161,146],[[146,34]],[[136,34]],[163],[[]],[[]],[163],[163,146],[163,136],[163],[163,146],[163,136],[163],[[146,9],146],[[136,9],136],[163],[163,146],[163,136],[146,146],[136,136],[[164,165],146],[[164,166],136],[[],163],[[],163],[146,163],[136,163],[[],163],[146,163],[136,163],[[],163],[[],163],[146,163],[136,163],[[],163],[146,163],[136,163],[[146,146],[[7,[29]]]],[[136,136],[[7,[29]]]],[163],[163,146],[163,136],[[146,146],146],[[136,136],136],0,0,[[]],[[]],[[],15],[[],15],[[],16],[[],16],[[],16],[[],16],[146,165],[146,164],[136,164],[136,166],[[],18],[[],18],[[]],0,0,0,0,0,0,[[]],[[]],[167],[[167,10],11],[[]],[167,[[4,[[7,[168]]]]]],[[]],[[169,54],[[4,[167]]]],[167,9],[[167,168,170],4],[[],16],[[],16],[[],18],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],170],[[],171],[172,32],[[170,170],170],[[171,171],171],[[170,170]],[[171,171]],[[170,170],170],[[171,171],171],[[170,170]],[[171,171]],[170,25],[171,25],[[170,170],170],[[171,171],171],[[170,170]],[[171,171]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[168,168],[170,170],[173,173],[171,171],[[]],[[]],[[]],[[]],[[170,170],29],[[173,173],29],[[171,171],29],[170,170],[171,171],[[170,170],1],[[171,171],1],[[170,170],170],[[171,171],171],[172],[[],170],[[],171],[[168,168],1],[[170,170],1],[[173,173],1],[[171,171],1],[[],1],[[],1],[[],1],[[],1],[[170,31]],[[171,31]],[[168,10],11],[[170,10],11],[[170,10],11],[[170,10],11],[[170,10],11],[[170,10],11],[[172,10],11],[[173,10],11],[[171,10],11],[[171,10],11],[[171,10],11],[[171,10],11],[[171,10],11],[[]],[[]],[[]],[[]],[[]],[25,[[7,[170]]]],[25,[[7,[171]]]],[25,170],[25,171],[25,170],[25,171],[31,170],[31,171],[32,172],[172,[[4,[[7,[168]]]]]],[[170,34]],[[173,34]],[[171,34]],[[170,170]],[[171,171]],[[170,170],170],[[171,171],171],[[170,170],1],[[171,171],1],[[]],[[]],[[]],[[]],[[]],[170,1],[171,1],[170,1],[171,1],[[173,171],[[4,[172]]]],[170,170],[171,171],[[170,170],[[7,[29]]]],[[173,173],[[7,[29]]]],[[171,171],[[7,[29]]]],[[170,170]],[[171,171]],[[170,170,1]],[[172,168,170],4],[[171,171,1]],[[170,170],170],[[171,171],171],[[170,170]],[[171,171]],[[170,170],170],[[171,171],171],[[]],[[]],[[]],[[]],[[170,170]],[[171,171]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],18],[[],18],[[],18],[[],18],[[],18],[[170,170],170],[[171,171],171],[172,4],[172,4],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],174],[[174,174],174],[[174,174]],[[174,174],174],[[174,174]],[174,25],[[174,174],174],[[174,174]],[[]],[[]],[[]],[[]],[[]],[[]],[174,174],[175,175],[176,176],[[]],[[]],[[]],[[174,174],29],[[176,176],29],[174,174],[[174,174],1],[[174,174],174],[[],174],[[174,174],1],[[175,175],1],[[176,176],1],[[],1],[[],1],[[],1],[[174,31]],[[174,10],11],[[174,10],11],[[174,10],11],[[174,10],11],[[174,10],11],[[175,10],11],[[176,10],11],[[]],[[]],[[]],[25,[[7,[174]]]],[25,174],[25,174],[31,174],[[63,9],[[4,[175]]]],[[174,34]],[[175,34]],[[176,34]],[[174,174]],[[174,174],174],[[174,174],1],[[]],[[]],[[]],[174,1],[174,1],[174,174],[[174,174],[[7,[29]]]],[[176,176],[[7,[29]]]],[175,[[7,[63]]]],[[174,174]],[[174,174,1]],[[174,174],174],[[174,174]],[[174,174],174],[[]],[[]],[[]],[[174,174]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],18],[[],18],[[],18],[[174,174],174],[[],[[4,[175]]]],[[176,174],[[4,[175]]]],[[[44,[[7,[63]]]],[7,[174]]],[[4,[175]]]],0,0,0,0,0,0,0,0,0,0,0,0,[169,177],[[]],[[]],[63,[[4,[169]]]],[169,[[4,[146]]]],[169,[[4,[146]]]],[[169,146],4],[169,169],[[]],[[169,169],29],[[169,169],1],[[],1],[[169,10],11],[[169,10],11],[[]],[177,169],[177,169],[[169,34]],[[]],[169,[[4,[146]]]],[[169,169],[[7,[29]]]],[63,[[4,[169]]]],[169,[[4,[146]]]],[[169,146],4],[[]],[[],15],[[],16],[[],16],[[],18],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[0,[35,36]],178],4],0,[[],178],[63,95],[[178,178],178],[[178,178]],[[178,178],178],[[178,178]],[178,25],[[178,178],178],[[178,178]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[0,[35,36]]],4],[[[0,[35,36]]],4],[63,63],[179,179],[180,180],[181,181],[182,182],[178,178],[[]],[[]],[[]],[[]],[[]],[[]],[32,4],[[63,63],29],[[178,178],29],[178,178],[[178,178],1],[[1,1],4],[[178,178],178],[32,[[4,[32]]]],[[32,32],[[4,[32]]]],[[32,32,20],[[4,[32]]]],[[],178],[[63,63],1],[[178,178],1],[[],1],[[],1],[[50,[45,[[139,[50]]]]],[[4,[183]]]],[[50,[45,[[139,[50]]]],[45,[[139,[50]]]]],[[4,[183]]]],[[32,50,[45,[[139,[50]]]],[45,[[139,[50]]]],19],[[4,[183]]]],[[50,[45,[[139,[50]]]]],[[4,[183]]]],[[50,[45,[[139,[50]]]],[45,[[139,[50]]]]],[[4,[183]]]],[[178,31]],[[[7,[32]],[0,[35,36]],178,19],4],[32,4],[32,4],[[32,[45,[[139,[50]]]],[45,[[139,[50]]]]],[[4,[183]]]],[[63,10],11],[[63,10],11],[[179,10],11],[[180,10],11],[[181,10],11],[[182,10],11],[[178,10],11],[[178,10],11],[[178,10],11],[[178,10],11],[[178,10],11],[[],[[4,[179]]]],[[]],[[]],[[]],[[]],[[]],[[]],[25,[[7,[178]]]],[25,178],[25,178],[31,178],[95,63],[32,4],[[32,33],4],[[],[[4,[184]]]],[[[7,[63]]],[[4,[63]]]],[[],63],[[],63],[[],63],[[[7,[63]]],[[4,[63]]]],[[],63],[[63,34]],[[178,34]],[[178,178]],[[178,178],178],[[178,178],1],[[]],[[]],[[]],[[]],[[]],[[]],[178,1],[179,1],[178,1],[179,1],[32,[[4,[1]]]],[[[7,[32]],[0,[35,36]],[7,[32]],[0,[35,36]],181],4],[[32,33,180],[[4,[33]]]],[[32,185,180],[[4,[185]]]],[[[0,[35,36]],37],4],[[[0,[35,36]],37],4],[[[7,[32]],[0,[35,36]],37],4],[[[0,[35,36]]],4],[178,178],[[],63],[[63,63],[[7,[29]]]],[[178,178],[[7,[29]]]],[[]],[[],[[16,[6]]]],[20,4],[[[0,[35,36]],[0,[35,36]]],4],[[32,[45,[73]]],[[4,[2]]]],[[178,178]],[[178,178,1]],[[63,63],4],[[],[[4,[63]]]],[48,48],[[178,178],178],[[178,178]],[[[0,[35,36]],[7,[32]],[0,[35,36]]],4],[[178,178],178],[[]],[[],63],[[]],[[]],[[]],[[]],[[]],[[]],[[],15],[[178,178]],[[[0,[35,36]],33],4],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[178,178],178],[[[0,[35,36]]],4],[[[7,[32]],[0,[35,36]],182],4],[[32,[45,[73]]],[[4,[2]]]],0,[[],[[7,[48]]]],[48,[[7,[48]]]]],"c":[37,110,145,151,153,166,170,1186,1297,1339,1379,1390,1397,1748,1782],"p":[[15,"bool"],[15,"usize"],[8,"FnOnce"],[6,"Result"],[4,"Errno"],[6,"Error"],[4,"Option"],[15,"str"],[15,"i32"],[3,"Formatter"],[6,"Result"],[3,"Demand"],[8,"ErrnoSentinel"],[8,"PartialEq"],[3,"String"],[4,"Result"],[3,"Error"],[3,"TypeId"],[3,"AtFlags"],[3,"OFlag"],[3,"RenameFlags"],[3,"SealFlag"],[3,"FdFlag"],[3,"FallocateFlags"],[6,"c_int"],[15,"u32"],[4,"FlockArg"],[4,"PosixFadviseAdvice"],[4,"Ordering"],[4,"FcntlArg"],[8,"IntoIterator"],[6,"RawFd"],[6,"off_t"],[8,"Hasher"],[8,"Sized"],[8,"NixPath"],[3,"Mode"],[3,"OsString"],[3,"EpollFlags"],[3,"EpollCreateFlags"],[4,"EpollOp"],[3,"EpollEvent"],[15,"u64"],[8,"Into"],[15,"slice"],[15,"isize"],[3,"EfdFlags"],[6,"c_uint"],[3,"MemFdCreateFlag"],[3,"CStr"],[3,"SigSet"],[4,"Signal"],[3,"SaFlags"],[3,"SigEvent"],[3,"sigevent"],[3,"sigset_t"],[3,"SignalIterator"],[4,"SigmaskHow"],[3,"SigSetIter"],[4,"SigHandler"],[3,"SigAction"],[4,"SigevNotify"],[3,"Pid"],[3,"SfdFlags"],[3,"SignalFd"],[3,"siginfo"],[3,"Error"],[3,"SockFlag"],[3,"AlgAddr"],[3,"TimestampingFlag"],[3,"MsgFlags"],[3,"UnixAddr"],[15,"u8"],[19,"SockaddrStorage"],[4,"SockAddr"],[3,"sockaddr_un"],[3,"NetlinkAddr"],[3,"sockaddr"],[3,"sockaddr_nl"],[3,"sockaddr_alg"],[3,"VsockAddr"],[3,"sockaddr_vm"],[8,"SockaddrLike"],[3,"sockaddr_storage"],[4,"SockType"],[4,"SockProtocol"],[4,"Shutdown"],[3,"UnixCredentials"],[4,"AddressFamily"],[3,"ucred"],[6,"socklen_t"],[8,"GetSockOpt"],[6,"gid_t"],[3,"Path"],[6,"pid_t"],[8,"SetSockOpt"],[6,"uid_t"],[3,"ReuseAddr"],[3,"ReusePort"],[3,"Linger"],[3,"ReceiveTimeout"],[3,"SendTimeout"],[3,"Broadcast"],[3,"OobInline"],[3,"SocketError"],[3,"DontRoute"],[3,"KeepAlive"],[3,"PeerCredentials"],[3,"TcpRepair"],[3,"RcvBuf"],[3,"SndBuf"],[3,"RcvBufForce"],[3,"SndBufForce"],[3,"SockType"],[3,"AcceptConn"],[3,"BindToDevice"],[3,"Ip6tOriginalDst"],[3,"Timestamping"],[3,"ReceiveTimestamp"],[3,"ReceiveTimestampns"],[3,"Mark"],[3,"PassCred"],[3,"TxTime"],[3,"RxqOvfl"],[3,"Ipv4RecvErr"],[3,"Ipv6RecvErr"],[3,"Ipv4Ttl"],[3,"Ipv6Ttl"],[3,"Ipv6DontFrag"],[3,"AlgSetAeadAuthSize"],[8,"Clone"],[3,"AlgSetKey"],[3,"TcpMaxSeg"],[8,"Debug"],[3,"linger"],[3,"TimeVal"],[3,"sockaddr_in6"],[3,"sock_txtime"],[8,"AsRef"],[15,"i8"],[3,"FileStat"],[3,"SFlag"],[6,"mode_t"],[4,"FchmodatFlags"],[4,"UtimensatFlags"],[3,"TimeSpec"],[6,"dev_t"],[3,"Statfs"],[6,"__fsword_t"],[6,"c_ulong"],[3,"FsType"],[6,"fsid_t"],[8,"AsRawFd"],[3,"FsFlags"],[3,"Statvfs"],[6,"fsblkcnt_t"],[6,"fsfilcnt_t"],[3,"SysInfo"],[15,"u16"],[3,"Duration"],[3,"timespec"],[3,"timeval"],[15,"i64"],[6,"time_t"],[6,"c_long"],[6,"suseconds_t"],[3,"Timer"],[4,"Expiration"],[3,"ClockId"],[3,"TimerSetTimeFlags"],[3,"TimerFlags"],[3,"TimerFd"],[4,"ClockId"],[3,"WaitPidFlag"],[4,"WaitStatus"],[4,"Id"],[6,"clockid_t"],[3,"AccessFlags"],[4,"ForkResult"],[4,"Whence"],[4,"LinkatFlags"],[4,"UnlinkatFlags"],[4,"Infallible"],[3,"PathBuf"],[6,"off64_t"],[13,"SigevSignal"],[13,"SigevThreadId"],[8,"TimeValLike"],[13,"Parent"]]},\
"nom":{"doc":"nom, eating data byte by byte","t":"DDIIIEENNIIQNIIIDIGNNIIIIDQQQQQDEINDIINIINILLLLKKALLLLLLLLLLLLLLLLLLAAALLLLAKKKLLLLLLAOOKKKKLLLLLLLLLLLLLLLLKLLLLLLLLLLLKKKKLLKKKKALLLLLLALKAKLLKLLLLLLKKLAKKLKKKKKKKKLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLFFAAFFFFFFIIFKFKAAFFFFFFFFFFFFFFFFFFFFFFFFFFFFAFFFFFFFAFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFDFLLFFFFFFLFLFLFFFFFLFFFFFFFLLLFFNNNNNNNINNNNDENNNNNINNNNNNNNNNNNNNNNNNNNINNNNNNNNNNNNNNNNNNNDENLLKLLFLLLLLLLLLLLLLLMFLLLLFFLLLLLLFMLLLLLLLLLLLLKLLKLLLMLLLLFLLLLLLLLLLLLLLLLLLLLLAFFFFFFFFFFFFFFFFNENNLLLLALLLLLALLLLFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFIFFKFFFF","n":["And","AndThen","AsBytes","AsChar","Compare","CompareResult","Err","Error","Error","ErrorConvert","ExtendInto","Extender","Failure","FindSubstring","FindToken","Finish","FlatMap","HexDisplay","IResult","Incomplete","Incomplete","InputIter","InputLength","InputTake","InputTakeAtPosition","Into","Item","Item","Item","Iter","IterElem","Map","Needed","Offset","Ok","Or","ParseTo","Parser","Size","Slice","ToUsize","Unknown","UnspecializedInput","and","and","and_then","and_then","as_bytes","as_char","bits","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","branch","bytes","character","clone","clone","clone_into","clone_into","combinator","compare","compare_no_case","convert","convert","eq","eq","eq","equivalent","equivalent","error","error_node_position","error_position","extend_into","find_substring","find_token","finish","finish","flat_map","flat_map","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","input_len","into","into","into","into","into","into","into","into","into","into","into","is_alpha","is_alphanum","is_dec_digit","is_hex_digit","is_incomplete","is_known","is_oct_digit","iter_elements","iter_indices","len","lib","map","map","map","map","map_input","map_input","multi","new","new_builder","number","offset","or","or","parse","parse","parse","parse","parse","parse","parse","parse_to","position","provide","sequence","slice","slice_index","source","split_at_position","split_at_position1","split_at_position1_complete","split_at_position_complete","take","take_split","to_hex","to_hex_from","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_usize","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","bits","bytes","complete","streaming","bool","tag","take","bool","tag","take","Alt","Permutation","alt","choice","permutation","permutation","complete","streaming","escaped","escaped_transform","is_a","is_not","tag","tag_no_case","take","take_till","take_till1","take_until","take_until1","take_while","take_while1","take_while_m_n","escaped","escaped_transform","is_a","is_not","tag","tag_no_case","take","take_till","take_till1","take_until","take_until1","take_while","take_while1","take_while_m_n","complete","is_alphabetic","is_alphanumeric","is_digit","is_hex_digit","is_newline","is_oct_digit","is_space","streaming","alpha0","alpha1","alphanumeric0","alphanumeric1","anychar","char","crlf","digit0","digit1","hex_digit0","hex_digit1","i128","i16","i32","i64","i8","line_ending","multispace0","multispace1","newline","none_of","not_line_ending","oct_digit0","oct_digit1","one_of","satisfy","space0","space1","tab","u128","u16","u32","u64","u8","alpha0","alpha1","alphanumeric0","alphanumeric1","anychar","char","crlf","digit0","digit1","hex_digit0","hex_digit1","i128","i16","i32","i64","i8","line_ending","multispace0","multispace1","newline","none_of","not_line_ending","oct_digit0","oct_digit1","one_of","satisfy","space0","space1","tab","u128","u16","u32","u64","u8","ParserIterator","all_consuming","borrow","borrow_mut","complete","cond","consumed","cut","eof","fail","finish","flat_map","from","into","into","iterator","map","map_opt","map_parser","map_res","next","not","opt","peek","recognize","rest","rest_len","success","try_from","try_into","type_id","value","verify","Alpha","AlphaNumeric","Alt","Char","Char","Complete","Context","ContextError","Count","CrLf","Digit","Eof","Error","ErrorKind","Escaped","EscapedTransform","Fail","Fix","Float","FromExternalError","HexDigit","IsA","IsNot","LengthValue","LengthValueFn","Many0","Many0Count","Many1","Many1Count","ManyMN","ManyTill","MapOpt","MapRes","MultiSpace","Nom","NonEmpty","NoneOf","Not","OctDigit","OneOf","ParseError","Permutation","RegexpCapture","RegexpCaptures","RegexpFind","RegexpMatch","RegexpMatches","Satisfy","SeparatedList","SeparatedNonEmptyList","Space","Switch","Tag","TagBits","TagClosure","TakeTill1","TakeUntil","TakeWhile1","TakeWhileMN","TooLarge","VerboseError","VerboseErrorKind","Verify","add_context","add_context","append","append","append","append_error","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","code","context","convert","convert","convert","convert","convert_error","dbg_dmp","description","eq","eq","eq","eq","equivalent","error_to_u32","errors","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from_char","from_char","from_error_kind","from_error_kind","from_error_kind","from_external_error","from_external_error","from_external_error","hash","input","into","into","into","into","make_error","new","or","provide","provide","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","std","count","fill","fold_many0","fold_many1","fold_many_m_n","length_count","length_data","length_value","many0","many0_count","many1","many1_count","many_m_n","many_till","separated_list0","separated_list1","Big","Endianness","Little","Native","borrow","borrow_mut","clone","clone_into","complete","eq","equivalent","fmt","from","into","streaming","to_owned","try_from","try_into","type_id","be_f32","be_f64","be_i128","be_i16","be_i24","be_i32","be_i64","be_i8","be_u128","be_u16","be_u24","be_u32","be_u64","be_u8","double","f32","f64","float","hex_u32","i128","i16","i24","i32","i64","i8","le_f32","le_f64","le_i128","le_i16","le_i24","le_i32","le_i64","le_i8","le_u128","le_u16","le_u24","le_u32","le_u64","le_u8","recognize_float","recognize_float_parts","u128","u16","u24","u32","u64","u8","be_f32","be_f64","be_i128","be_i16","be_i24","be_i32","be_i64","be_i8","be_u128","be_u16","be_u24","be_u32","be_u64","be_u8","double","f32","f64","float","hex_u32","i128","i16","i24","i32","i64","i8","le_f32","le_f64","le_i128","le_i16","le_i24","le_i32","le_i64","le_i8","le_u128","le_u16","le_u24","le_u32","le_u64","le_u8","recognize_float","recognize_float_parts","u128","u16","u24","u32","u64","u8","Tuple","delimited","pair","parse","preceded","separated_pair","terminated","tuple"],"q":[[0,"nom"],[201,"nom::bits"],[205,"nom::bits::complete"],[208,"nom::bits::streaming"],[211,"nom::branch"],[217,"nom::bytes"],[219,"nom::bytes::complete"],[233,"nom::bytes::streaming"],[247,"nom::character"],[256,"nom::character::complete"],[290,"nom::character::streaming"],[324,"nom::combinator"],[357,"nom::error"],[502,"nom::lib"],[503,"nom::multi"],[519,"nom::number"],[538,"nom::number::complete"],[585,"nom::number::streaming"],[632,"nom::sequence"]],"d":["Implementation of <code>Parser::and</code>","Implementation of <code>Parser::and_then</code>","Helper trait for types that can be viewed as a byte slice","Transforms common types to a char for basic token parsing","Abstracts comparison operations","Indicates whether a comparison was successful, an error, or","The <code>Err</code> enum indicates the parser was not successful","The parser had an error (recoverable)","Comparison failed","Equivalent From implementation to avoid orphan rules in …","Abstracts something which can extend an <code>Extend</code>. Used to …","The type that will be produced","The parser had an unrecoverable error: we got to the right …","Look for a substring in self","Look for a token in self","Helper trait to convert a parser’s result to a more …","Implementation of <code>Parser::flat_map</code>","Helper trait to show a byte slice as a hex dump","Holds the result of parsing functions","There was not enough data","We need more data to be sure","Abstracts common iteration operations on the input type","Abstract method to calculate the input length","Abstracts slicing operations","Methods to take as much input as possible until the …","Implementation of <code>Parser::into</code>","The current input type is a sequence of that <code>Item</code> type.","The current input type is a sequence of that <code>Item</code> type.","The current input type is a sequence of that <code>Item</code> type.","An iterator over the input type, producing the item and …","An iterator over the input type, producing the item","Implementation of <code>Parser::map</code>","Contains information on needed data if a parser returned …","Useful functions to calculate the offset between slices …","Comparison was successful","Implementation of <code>Parser::or</code>","Used to integrate <code>str</code>’s <code>parse()</code> method","All nom parsers implement this trait","Contains the required data size in bytes","Slicing operations using ranges.","Helper trait to convert numbers to usize.","Needs more data, but we do not know how much","Dummy trait used for default implementations (currently …","Applies a second parser after the first one, return their …","Applies a second parser after the first one, return their …","Applies a second parser over the output of the first one","Applies a second parser over the output of the first one","Casts the input type to a byte slice","makes a char from self","Bit level parsers","","","","","","","","","","","","","","","","","","","Choice combinators","Parsers recognizing bytes streams","Character specific parsers and combinators","","","","","General purpose combinators","Compares self to another value for equality","Compares self to another value for equality independently …","Transform to another error type","Automatically converts between errors if the underlying …","","","","","","Error management","Creates a parse error from a <code>nom::ErrorKind</code>, the position …","Creates a parse error from a <code>nom::ErrorKind</code> and the …","Accumulate the input into an accumulator","Returns the byte position of the substring if it is found","Returns true if self contains the token","converts the parser’s result to a type that is more …","","Creates a second parser from the output of the first one, …","Creates a second parser from the output of the first one, …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calculates the input length, as indicated by its name, and …","automatically converts the parser’s output and error …","automatically converts the parser’s output and error …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Tests that self is an alphabetic character","Tests that self is an alphabetic character or a decimal …","Tests that self is a decimal digit","Tests that self is an hex digit","Tests if the result is Incomplete","Indicates if we know how many bytes we need","Tests that self is an octal digit","Returns an iterator over the elements","Returns an iterator over the elements and their byte …","Gets the len in bytes for self","Lib module to re-export everything needed from <code>std</code> or <code>core</code>/…","Maps a function over the result of a parser","Maps a function over the result of a parser","Maps a <code>Needed</code> to <code>Needed</code> by applying a function to a …","Applies the given function to the inner error","Maps <code>Err&lt;(T, ErrorKind)&gt;</code> to <code>Err&lt;(U, ErrorKind)&gt;</code> with the …","Maps <code>Err&lt;error::Error&lt;T&gt;&gt;</code> to <code>Err&lt;error::Error&lt;U&gt;&gt;</code> with the …","Combinators applying their child parser multiple times","Creates <code>Needed</code> instance, returns <code>Needed::Unknown</code> if the …","Create a new <code>Extend</code> of the correct type","Parsers recognizing numbers","Offset between the first byte of self and the first byte …","Applies a second parser over the input if the first one …","Applies a second parser over the input if the first one …","A parser takes in input type, and returns a <code>Result</code> …","","","","","","","Succeeds if <code>parse()</code> succeeded. The byte slice …","Finds the byte position of the element","","Combinators applying parsers in sequence","Slices self according to the range argument","Get the byte offset from the element’s position in the …","","Looks for the first element of the input type for which …","Looks for the first element of the input type for which …","Looks for the first element of the input type for which …","Looks for the first element of the input type for which …","Returns a slice of <code>count</code> bytes. panics if count &gt; length","Split the stream at the <code>count</code> byte offset. panics if count …","Converts the value of <code>self</code> to a hex dump, returning the …","Converts the value of <code>self</code> to a hex dump beginning at <code>from</code> …","","Obtaining ownership","","Obtaining ownership","Obtaining ownership","Obtaining ownership","","converts self to usize","","","","","","","","","","","","","","","","","","","","","","","","","","","","Converts a byte-level input to a bit-level input, for …","Counterpart to <code>bits</code>, <code>bytes</code> transforms its bit stream input …","Bit level parsers","Bit level parsers","Parses one specific bit as a bool.","Generates a parser taking <code>count</code> bits and comparing them to …","Generates a parser taking <code>count</code> bits","Parses one specific bit as a bool.","Generates a parser taking <code>count</code> bits and comparing them to …","Generates a parser taking <code>count</code> bits","Helper trait for the alt() combinator.","Helper trait for the permutation() combinator.","Tests a list of parsers one by one until one succeeds.","Tests each parser in the tuple and returns the result of …","Applies a list of parsers in any order.","Tries to apply all parsers in the tuple in various orders …","Parsers recognizing bytes streams, complete input version","Parsers recognizing bytes streams, streaming version","Matches a byte string with escaped characters.","Matches a byte string with escaped characters.","Returns the longest slice of the matches the pattern.","Parse till certain characters are met.","Recognizes a pattern","Recognizes a case insensitive pattern.","Returns an input slice containing the first N input …","Returns the longest input slice (if any) till a predicate …","Returns the longest (at least 1) input slice till a …","Returns the input slice up to the first occurrence of the …","Returns the non empty input slice up to the first …","Returns the longest input slice (if any) that matches the …","Returns the longest (at least 1) input slice that matches …","Returns the longest (m &lt;= len &lt;= n) input slice  that …","Matches a byte string with escaped characters.","Matches a byte string with escaped characters.","Returns the longest slice of the matches the pattern.","Parse till certain characters are met.","Recognizes a pattern.","Recognizes a case insensitive pattern.","Returns an input slice containing the first N input …","Returns the longest input slice (if any) till a predicate …","Returns the longest (at least 1) input slice till a …","Returns the input slice up to the first occurrence of the …","Returns the non empty input slice up to the first …","Returns the longest input slice (if any) that matches the …","Returns the longest (at least 1) input slice that matches …","Returns the longest (m &lt;= len &lt;= n) input slice  that …","Character specific parsers and combinators, complete input …","Tests if byte is ASCII alphabetic: A-Z, a-z","Tests if byte is ASCII alphanumeric: A-Z, a-z, 0-9","Tests if byte is ASCII digit: 0-9","Tests if byte is ASCII hex digit: 0-9, A-F, a-f","Tests if byte is ASCII newline: \\\\n","Tests if byte is ASCII octal digit: 0-7","Tests if byte is ASCII space or tab","Character specific parsers and combinators, streaming …","Recognizes zero or more lowercase and uppercase ASCII …","Recognizes one or more lowercase and uppercase ASCII …","Recognizes zero or more ASCII numerical and alphabetic …","Recognizes one or more ASCII numerical and alphabetic …","Matches one byte as a character. Note that the input type …","Recognizes one character.","Recognizes the string “\\\\r\\\\n”.","Recognizes zero or more ASCII numerical characters: 0-9","Recognizes one or more ASCII numerical characters: 0-9","Recognizes zero or more ASCII hexadecimal numerical …","Recognizes one or more ASCII hexadecimal numerical …","will parse a number in text form to a number","will parse a number in text form to a number","will parse a number in text form to a number","will parse a number in text form to a number","will parse a number in text form to a number","Recognizes an end of line (both ‘\\\\n’ and ‘\\\\r\\\\n’).","Recognizes zero or more spaces, tabs, carriage returns and …","Recognizes one or more spaces, tabs, carriage returns and …","Matches a newline character ‘\\\\n’.","Recognizes a character that is not in the provided …","Recognizes a string of any char except ‘\\\\r\\\\n’ or ‘\\\\n…","Recognizes zero or more octal characters: 0-7","Recognizes one or more octal characters: 0-7","Recognizes one of the provided characters.","Recognizes one character and checks that it satisfies a …","Recognizes zero or more spaces and tabs.","Recognizes one or more spaces and tabs.","Matches a tab character ‘\\\\t’.","will parse a number in text form to a number","will parse a number in text form to a number","will parse a number in text form to a number","will parse a number in text form to a number","will parse a number in text form to a number","Recognizes zero or more lowercase and uppercase ASCII …","Recognizes one or more lowercase and uppercase ASCII …","Recognizes zero or more ASCII numerical and alphabetic …","Recognizes one or more ASCII numerical and alphabetic …","Matches one byte as a character. Note that the input type …","Recognizes one character.","Recognizes the string “\\\\r\\\\n”.","Recognizes zero or more ASCII numerical characters: 0-9","Recognizes one or more ASCII numerical characters: 0-9","Recognizes zero or more ASCII hexadecimal numerical …","Recognizes one or more ASCII hexadecimal numerical …","will parse a number in text form to a number","will parse a number in text form to a number","will parse a number in text form to a number","will parse a number in text form to a number","will parse a number in text form to a number","Recognizes an end of line (both ‘\\\\n’ and ‘\\\\r\\\\n’).","Recognizes zero or more spaces, tabs, carriage returns and …","Recognizes one or more spaces, tabs, carriage returns and …","Matches a newline character ‘\\\\n’.","Recognizes a character that is not in the provided …","Recognizes a string of any char except ‘\\\\r\\\\n’ or ‘\\\\n…","Recognizes zero or more octal characters: 0-7","Recognizes one or more octal characters: 0-7","Recognizes one of the provided characters.","Recognizes one character and checks that it satisfies a …","Recognizes zero or more spaces and tabs.","Recognizes one or more spaces and tabs.","Matches a tab character ‘\\\\t’.","will parse a number in text form to a number","will parse a number in text form to a number","will parse a number in text form to a number","will parse a number in text form to a number","will parse a number in text form to a number","Main structure associated to the iterator function.","Succeeds if all the input has been consumed by its child …","","","Transforms Incomplete into <code>Error</code>.","Calls the parser if the condition is met.","if the child parser was successful, return the consumed …","Transforms an <code>Err::Error</code> (recoverable) to <code>Err::Failure</code> …","returns its input if it is at the end of input data","A parser which always fails.","Returns the remaining input if parsing was successful, or …","Creates a new parser from the output of the first parser, …","Returns the argument unchanged.","automatically converts the child parser’s result to …","Calls <code>U::from(self)</code>.","Creates an iterator from input data and a parser.","Maps a function on the result of a parser.","Applies a function returning an <code>Option</code> over the result of …","Applies a parser over the result of another one.","Applies a function returning a <code>Result</code> over the result of a …","","Succeeds if the child parser returns an error.","Optional parser, will return <code>None</code> on <code>Err::Error</code>.","Tries to apply its parser without consuming the input.","If the child parser was successful, return the consumed …","Return the remaining input.","Return the length of the remaining input.","a parser which always succeeds with given value without …","","","","Returns the provided value if the child parser succeeds.","Returns the result of the child parser if it satisfies a …","","","","Indicates which character was expected by the <code>char</code> function","","","Static string added by the <code>context</code> function","This trait is required by the <code>context</code> combinator to add a …","","","","","default error type, only contains the error’ location …","Indicates which parser returned an error","","","","","","This trait is required by the <code>map_res</code> combinator to …","","","","","","","","","","","","","","","Error kind given by various nom parsers","","","","","","This trait must be implemented by the error type of a nom …","","","","","","","","","","","","","","","","","","","","This error type accumulates errors and their position when …","Error context for <code>VerboseError</code>","","Creates a new error from an input position, a static …","","Combines an existing error with a new one created from the …","","","Combines an existing error with a new one created from the …","","","","","","","","","","","","","","","nom error code","Create a new error from an input position, a static string …","","","","","Transforms a <code>VerboseError</code> into a trace with input position …","Prints a message and the input if the parser fails.","Converts an ErrorKind to a text description","","","","","","Converts an ErrorKind to a number","List of errors accumulated by <code>VerboseError</code>, containing the …","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates an error from an input position and an expected …","","Creates an error from the input position and an ErrorKind","","","Creates a new error from an input position, an ErrorKind …","Create a new error from an input position and an external …","Create a new error from an input position and an external …","","position of the error in the input data","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Creates an error from the input position and an ErrorKind","creates a new basic error","Combines two existing errors. This function is used to …","","","","","","","","","","","","","","","","","","","","internal std exports for no_std compatibility","Runs the embedded parser <code>count</code> times, gathering the …","Runs the embedded parser repeatedly, filling the given …","Repeats the embedded parser, calling <code>g</code> to gather the …","Repeats the embedded parser, calling <code>g</code> to gather the …","Repeats the embedded parser <code>m..=n</code> times, calling <code>g</code> to …","Gets a number from the first parser, then applies the …","Gets a number from the parser and returns a subslice of …","Gets a number from the first parser, takes a subslice of …","Repeats the embedded parser, gathering the results in a <code>Vec</code>…","Repeats the embedded parser, counting the results","Runs the embedded parser, gathering the results in a <code>Vec</code>.","Runs the embedded parser, counting the results.","Repeats the embedded parser <code>m..=n</code> times","Applies the parser <code>f</code> until the parser <code>g</code> produces a result.","Alternates between two parsers to produce a list of …","Alternates between two parsers to produce a list of …","Big endian","Configurable endianness","Little endian","Will match the host’s endianness","","","","","Parsers recognizing numbers, complete input version","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Parsers recognizing numbers, streaming version","","","","","Recognizes a big endian 4 bytes floating point number.","Recognizes a big endian 8 bytes floating point number.","Recognizes a big endian signed 16 bytes integer.","Recognizes a big endian signed 2 bytes integer.","Recognizes a big endian signed 3 bytes integer.","Recognizes a big endian signed 4 bytes integer.","Recognizes a big endian signed 8 bytes integer.","Recognizes a signed 1 byte integer.","Recognizes a big endian unsigned 16 bytes integer.","Recognizes a big endian unsigned 2 bytes integer.","Recognizes a big endian unsigned 3 byte integer.","Recognizes a big endian unsigned 4 bytes integer.","Recognizes a big endian unsigned 8 bytes integer.","Recognizes an unsigned 1 byte integer.","Recognizes floating point number in text format and …","Recognizes a 4 byte floating point number","Recognizes an 8 byte floating point number","Recognizes floating point number in text format and …","Recognizes a hex-encoded integer.","Recognizes a signed 16 byte integer","Recognizes a signed 2 byte integer","Recognizes a signed 3 byte integer","Recognizes a signed 4 byte integer","Recognizes a signed 8 byte integer","Recognizes a signed 1 byte integer","Recognizes a little endian 4 bytes floating point number.","Recognizes a little endian 8 bytes floating point number.","Recognizes a little endian signed 16 bytes integer.","Recognizes a little endian signed 2 bytes integer.","Recognizes a little endian signed 3 bytes integer.","Recognizes a little endian signed 4 bytes integer.","Recognizes a little endian signed 8 bytes integer.","Recognizes a signed 1 byte integer.","Recognizes a little endian unsigned 16 bytes integer.","Recognizes a little endian unsigned 2 bytes integer.","Recognizes a little endian unsigned 3 byte integer.","Recognizes a little endian unsigned 4 bytes integer.","Recognizes a little endian unsigned 8 bytes integer.","Recognizes an unsigned 1 byte integer.","Recognizes floating point number in a byte string and …","Recognizes a floating point number in text format","Recognizes an unsigned 16 byte integer","Recognizes an unsigned 2 bytes integer","Recognizes an unsigned 3 byte integer","Recognizes an unsigned 4 byte integer","Recognizes an unsigned 8 byte integer","Recognizes an unsigned 1 byte integer","Recognizes a big endian 4 bytes floating point number.","Recognizes a big endian 8 bytes floating point number.","Recognizes a big endian signed 16 bytes integer.","Recognizes a big endian signed 2 bytes integer.","Recognizes a big endian signed 3 bytes integer.","Recognizes a big endian signed 4 bytes integer.","Recognizes a big endian signed 8 bytes integer.","Recognizes a signed 1 byte integer.","Recognizes a big endian unsigned 16 bytes integer.","Recognizes a big endian unsigned 2 bytes integer.","Recognizes a big endian unsigned 3 byte integer.","Recognizes a big endian unsigned 4 bytes integer.","Recognizes a big endian unsigned 8 bytes integer.","Recognizes an unsigned 1 byte integer.","Recognizes floating point number in text format and …","Recognizes a 4 byte floating point number","Recognizes an 8 byte floating point number","Recognizes floating point number in text format and …","Recognizes a hex-encoded integer.","Recognizes a signed 16 byte integer","Recognizes a signed 2 byte integer","Recognizes a signed 3 byte integer","Recognizes a signed 4 byte integer","Recognizes a signed 8 byte integer","Recognizes a signed 1 byte integer","Recognizes a little endian 4 bytes floating point number.","Recognizes a little endian 8 bytes floating point number.","Recognizes a little endian signed 16 bytes integer.","Recognizes a little endian signed 2 bytes integer.","Recognizes a little endian signed 3 bytes integer.","Recognizes a little endian signed 4 bytes integer.","Recognizes a little endian signed 8 bytes integer.","Recognizes a signed 1 byte integer.","Recognizes a little endian unsigned 16 bytes integer.","Recognizes a little endian unsigned 2 bytes integer.","Recognizes a little endian unsigned 3 bytes integer.","Recognizes a little endian unsigned 4 bytes integer.","Recognizes a little endian unsigned 8 bytes integer.","Recognizes an unsigned 1 byte integer.","Recognizes a floating point number in text format and …","Recognizes a floating point number in text format","Recognizes an unsigned 16 byte integer","Recognizes an unsigned 2 bytes integer","Recognizes an unsigned 3 byte integer","Recognizes an unsigned 4 byte integer","Recognizes an unsigned 8 byte integer","Recognizes an unsigned 1 byte integer","Helper trait for the tuple combinator.","Matches an object from the first parser and discards it, …","Gets an object from the first parser, then gets another …","Parses the input and returns a tuple of results of each …","Matches an object from the first parser and discards it, …","Gets an object from the first parser, then matches an …","Gets an object from the first parser, then matches an …","Applies a tuple of parsers one by one and returns their …"],"i":[0,0,0,0,0,0,0,10,11,0,0,52,10,0,0,0,0,0,0,10,11,0,0,0,0,0,51,50,52,51,51,0,0,0,11,0,0,0,8,0,0,8,0,2,2,2,2,80,82,0,26,20,4,3,29,24,8,10,11,26,20,4,3,29,24,8,10,11,0,0,0,8,10,8,10,0,55,55,40,10,8,10,11,8,10,0,0,0,52,83,53,84,18,2,2,8,10,10,11,26,20,4,3,29,24,8,10,11,48,2,2,26,20,4,3,29,24,8,10,11,82,82,82,82,10,8,82,51,51,82,0,2,2,8,10,10,10,0,8,52,0,47,2,2,2,26,20,4,3,29,24,79,51,10,0,39,51,10,50,50,50,50,49,49,85,85,8,10,10,10,10,10,10,44,26,20,4,3,29,24,8,10,11,26,20,4,3,29,24,8,10,11,26,20,4,3,29,24,8,10,11,0,0,0,0,0,0,0,0,0,0,0,0,0,45,0,46,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,66,66,0,0,0,0,0,0,66,0,66,0,66,0,0,0,0,0,66,0,0,0,0,0,0,0,66,66,66,0,0,33,33,33,71,33,33,71,0,33,33,33,33,0,0,33,33,33,33,33,0,33,33,33,33,33,33,33,33,33,33,33,33,33,33,71,33,33,33,33,33,0,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,0,0,33,72,70,30,28,70,0,28,70,71,33,28,70,71,33,70,71,33,70,71,33,28,0,28,28,70,70,0,0,33,28,70,71,33,33,0,70,28,28,70,70,71,33,28,70,71,33,30,70,30,28,70,68,28,70,33,28,28,70,71,33,0,28,30,28,70,70,71,33,28,70,28,70,71,33,28,70,71,33,28,70,71,33,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,76,0,76,76,76,76,76,76,0,76,76,76,76,76,0,76,76,76,76,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,81,0,0,0,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,2],[[3,[1,2]]]],[[1,2],[[3,[1,2]]]],[[1,2],[[4,[1,2]]]],[[1,2],[[4,[1,2]]]],[[],[[6,[5]]]],[[],7],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[8,8],[[[10,[9]]],[[10,[9]]]],[[]],[[]],0,[[],11],[[],11],[[]],[10,[[10,[12]]]],[[8,8],13],[[[10,[14]],[10,[14]]],13],[[11,11],13],[[],13],[[],13],0,0,0,[[]],[[],[[16,[15]]]],[[],13],[[],17],[18,17],[[1,19],[[20,[1,19]]]],[[1,19],[[20,[1,19]]]],[[8,21],22],[[[10,[23]],21],22],[[[10,[23]],21],22],[[11,21],22],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],15],[1,[[24,[1,12,12]]]],[1,[[24,[1,12,12]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],13],[[],13],[[],13],[[],13],[10,13],[8,13],[[],13],[[]],[[]],[[],15],0,[[1,25],[[26,[1,25]]]],[[1,25],[[26,[1,25]]]],[[8,25],8],[[10,27],10],[[10,27],10],[[[10,[28]],27],[[10,[28]]]],0,[15,8],[[]],0,[[],15],[[1,2],[[29,[1,2]]]],[[1,2],[[29,[1,2]]]],[[],18],[[[26,[2,25]]],18],[[[20,[2,25]]],18],[[[4,[2,2]]],18],[[[3,[2,2]]],18],[[[29,[[2,[9,[30,[9]]]],[2,[9,[30,[9]]]]]],9],[[18,[9,[30,[9]]]]]],[[[24,[[2,[9]],12,[0,[[30,[9]],12]]]],9],[[18,[9,12,[0,[[30,[9]],12]]]]]],[[],16],[25,[[16,[15]]]],[31],0,[[]],[15,[[17,[15,8]]]],[[[10,[23]]],[[16,[32]]]],[25,[[18,[30]]]],[[25,33],[[18,[30]]]],[[25,33],[[18,[30]]]],[25,[[18,[30]]]],[15],[15],[15,34],[[15,15],34],[[]],[[[10,[[28,[[6,[5]]]]]]],[[10,[[28,[[35,[5]]]]]]]],[[]],[10,10],[[[10,[[28,[36]]]]],[[10,[[28,[34]]]]]],[10,10],[[],34],[[],15],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[[2,[[0,[30,[40,[[30,[[39,[[38,[15]]]]]]]]]]]]],19],[[[2,[[0,[[39,[[38,[15]]]],9]],[0,[[30,[[0,[[39,[[38,[15]]]],9]]]],[40,[30]]]]]]],19],0,0,[[],[[18,[13,30]]]],[[[0,[[12,[5]],41,[42,[15]],[43,[15]],14]],44],25],[44,25],[[],[[18,[13,30]]]],[[[0,[[12,[5]],41,[42,[15]],[43,[15]],14]],44],25],[44,25],0,0,[[[45,[9,[30,[9]]]]],19],[[],18],[[[46,[9,[30,[9]]]]],19],[[],18],0,0,[[[2,[[0,[9,47,48,49,50,[39,[[38,[15]]]],51]],[30,[[0,[9,47,48,49,50,[39,[[38,[15]]]],51]]]]]],7,[2,[[0,[9,47,48,49,50,[39,[[38,[15]]]],51]],[30,[[0,[9,47,48,49,50,[39,[[38,[15]]]],51]]]]]]],19],[[[2,[[0,[9,47,48,49,50,[39,[[38,[15]]]],51,52]],52,[30,[[0,[9,47,48,49,50,[39,[[38,[15]]]],51,52]]]]]],7,[2,[[0,[9,47,48,49,50,[39,[[38,[15]]]],51,52]],52,[30,[[0,[9,47,48,49,50,[39,[[38,[15]]]],51,52]]]]]]],19],[53,25],[53,25],[[[0,[48,9]]],25],[[[0,[48,9]]],25],[44,25],[25,25],[25,25],[[[0,[48,9]]],25],[[[0,[48,9]]],25],[25,25],[25,25],[[15,15,25],25],[[[2,[[0,[9,47,48,49,50,[39,[[38,[15]]]],51]],[30,[[0,[9,47,48,49,50,[39,[[38,[15]]]],51]]]]]],7,[2,[[0,[9,47,48,49,50,[39,[[38,[15]]]],51]],[30,[[0,[9,47,48,49,50,[39,[[38,[15]]]],51]]]]]]],19],[[[2,[[0,[9,47,48,49,50,[39,[[38,[15]]]],51,52]],52,[30,[[0,[9,47,48,49,50,[39,[[38,[15]]]],51,52]]]]]],7,[2,[[0,[9,47,48,49,50,[39,[[38,[15]]]],51,52]],52,[30,[[0,[9,47,48,49,50,[39,[[38,[15]]]],51,52]]]]]]],19],[53,25],[53,25],[[[0,[48,9]]],25],[[[0,[48,9]]],25],[44,25],[25,25],[25,25],[9,25],[9,25],[25,25],[25,25],[[15,15,25],25],0,[5,13],[5,13],[5,13],[5,13],[5,13],[5,13],[5,13],0,[50,[[18,[50,50,[30,[50]]]]]],[50,[[18,[50,50,[30,[50]]]]]],[50,[[18,[50,50,[30,[50]]]]]],[50,[[18,[50,50,[30,[50]]]]]],[[[0,[51,48,[39,[[38,[15]]]]]]],[[18,[[0,[51,48,[39,[[38,[15]]]]]],7,[30,[[0,[51,48,[39,[[38,[15]]]]]]]]]]]],[7,25],[[[0,[[39,[[54,[15]]]],[39,[[38,[15]]]],51,[55,[36]]]]],[[18,[[0,[[39,[[54,[15]]]],[39,[[38,[15]]]],51,[55,[36]]]],[0,[[39,[[54,[15]]]],[39,[[38,[15]]]],51,[55,[36]]]],[30,[[0,[[39,[[54,[15]]]],[39,[[38,[15]]]],51,[55,[36]]]]]]]]]],[50,[[18,[50,50,[30,[50]]]]]],[50,[[18,[50,50,[30,[50]]]]]],[50,[[18,[50,50,[30,[50]]]]]],[50,[[18,[50,50,[30,[50]]]]]],[[[0,[51,[39,[[38,[15]]]],48,49,9,[55,[[6,[5]]]]]]],[[18,[[0,[51,[39,[[38,[15]]]],48,49,9,[55,[[6,[5]]]]]],56,[30,[[0,[51,[39,[[38,[15]]]],48,49,9,[55,[[6,[5]]]]]]]]]]]],[[[0,[51,[39,[[38,[15]]]],48,49,9,[55,[[6,[5]]]]]]],[[18,[[0,[51,[39,[[38,[15]]]],48,49,9,[55,[[6,[5]]]]]],57,[30,[[0,[51,[39,[[38,[15]]]],48,49,9,[55,[[6,[5]]]]]]]]]]]],[[[0,[51,[39,[[38,[15]]]],48,49,9,[55,[[6,[5]]]]]]],[[18,[[0,[51,[39,[[38,[15]]]],48,49,9,[55,[[6,[5]]]]]],58,[30,[[0,[51,[39,[[38,[15]]]],48,49,9,[55,[[6,[5]]]]]]]]]]]],[[[0,[51,[39,[[38,[15]]]],48,49,9,[55,[[6,[5]]]]]]],[[18,[[0,[51,[39,[[38,[15]]]],48,49,9,[55,[[6,[5]]]]]],59,[30,[[0,[51,[39,[[38,[15]]]],48,49,9,[55,[[6,[5]]]]]]]]]]]],[[[0,[51,[39,[[38,[15]]]],48,49,9,[55,[[6,[5]]]]]]],[[18,[[0,[51,[39,[[38,[15]]]],48,49,9,[55,[[6,[5]]]]]],60,[30,[[0,[51,[39,[[38,[15]]]],48,49,9,[55,[[6,[5]]]]]]]]]]]],[[[0,[[39,[[54,[15]]]],[39,[[38,[15]]]],[39,[[61,[15]]]],51,48,[55,[36]]]]],[[18,[[0,[[39,[[54,[15]]]],[39,[[38,[15]]]],[39,[[61,[15]]]],51,48,[55,[36]]]],[0,[[39,[[54,[15]]]],[39,[[38,[15]]]],[39,[[61,[15]]]],51,48,[55,[36]]]],[30,[[0,[[39,[[54,[15]]]],[39,[[38,[15]]]],[39,[[61,[15]]]],51,48,[55,[36]]]]]]]]]],[50,[[18,[50,50,[30,[50]]]]]],[50,[[18,[50,50,[30,[50]]]]]],[[[0,[[39,[[38,[15]]]],51]]],[[18,[[0,[[39,[[38,[15]]]],51]],7,[30,[[0,[[39,[[38,[15]]]],51]]]]]]]],[53,25],[[[0,[[39,[[54,[15]]]],[39,[[38,[15]]]],[39,[[61,[15]]]],51,48,[55,[36]]]]],[[18,[[0,[[39,[[54,[15]]]],[39,[[38,[15]]]],[39,[[61,[15]]]],51,48,[55,[36]]]],[0,[[39,[[54,[15]]]],[39,[[38,[15]]]],[39,[[61,[15]]]],51,48,[55,[36]]]],[30,[[0,[[39,[[54,[15]]]],[39,[[38,[15]]]],[39,[[61,[15]]]],51,48,[55,[36]]]]]]]]]],[50,[[18,[50,50,[30,[50]]]]]],[50,[[18,[50,50,[30,[50]]]]]],[53,25],[25,25],[50,[[18,[50,50,[30,[50]]]]]],[50,[[18,[50,50,[30,[50]]]]]],[[[0,[[39,[[38,[15]]]],51]]],[[18,[[0,[[39,[[38,[15]]]],51]],7,[30,[[0,[[39,[[38,[15]]]],51]]]]]]]],[[[0,[51,[39,[[38,[15]]]],48]]],[[18,[[0,[51,[39,[[38,[15]]]],48]],62,[30,[[0,[51,[39,[[38,[15]]]],48]]]]]]]],[[[0,[51,[39,[[38,[15]]]],48]]],[[18,[[0,[51,[39,[[38,[15]]]],48]],63,[30,[[0,[51,[39,[[38,[15]]]],48]]]]]]]],[[[0,[51,[39,[[38,[15]]]],48]]],[[18,[[0,[51,[39,[[38,[15]]]],48]],64,[30,[[0,[51,[39,[[38,[15]]]],48]]]]]]]],[[[0,[51,[39,[[38,[15]]]],48]]],[[18,[[0,[51,[39,[[38,[15]]]],48]],65,[30,[[0,[51,[39,[[38,[15]]]],48]]]]]]]],[[[0,[51,[39,[[38,[15]]]],48]]],[[18,[[0,[51,[39,[[38,[15]]]],48]],5,[30,[[0,[51,[39,[[38,[15]]]],48]]]]]]]],[50,[[18,[50,50,[30,[50]]]]]],[50,[[18,[50,50,[30,[50]]]]]],[50,[[18,[50,50,[30,[50]]]]]],[50,[[18,[50,50,[30,[50]]]]]],[[[0,[51,48,[39,[[38,[15]]]]]]],[[18,[[0,[51,48,[39,[[38,[15]]]]]],7,[30,[[0,[51,48,[39,[[38,[15]]]]]]]]]]]],[7,25],[[[0,[[39,[[54,[15]]]],[39,[[38,[15]]]],[39,[[61,[15]]]],51,[55,[36]]]]],[[18,[[0,[[39,[[54,[15]]]],[39,[[38,[15]]]],[39,[[61,[15]]]],51,[55,[36]]]],[0,[[39,[[54,[15]]]],[39,[[38,[15]]]],[39,[[61,[15]]]],51,[55,[36]]]],[30,[[0,[[39,[[54,[15]]]],[39,[[38,[15]]]],[39,[[61,[15]]]],51,[55,[36]]]]]]]]]],[50,[[18,[50,50,[30,[50]]]]]],[50,[[18,[50,50,[30,[50]]]]]],[50,[[18,[50,50,[30,[50]]]]]],[50,[[18,[50,50,[30,[50]]]]]],[[[0,[51,[39,[[38,[15]]]],48,49,9,[55,[[6,[5]]]]]]],[[18,[[0,[51,[39,[[38,[15]]]],48,49,9,[55,[[6,[5]]]]]],56,[30,[[0,[51,[39,[[38,[15]]]],48,49,9,[55,[[6,[5]]]]]]]]]]]],[[[0,[51,[39,[[38,[15]]]],48,49,9,[55,[[6,[5]]]]]]],[[18,[[0,[51,[39,[[38,[15]]]],48,49,9,[55,[[6,[5]]]]]],57,[30,[[0,[51,[39,[[38,[15]]]],48,49,9,[55,[[6,[5]]]]]]]]]]]],[[[0,[51,[39,[[38,[15]]]],48,49,9,[55,[[6,[5]]]]]]],[[18,[[0,[51,[39,[[38,[15]]]],48,49,9,[55,[[6,[5]]]]]],58,[30,[[0,[51,[39,[[38,[15]]]],48,49,9,[55,[[6,[5]]]]]]]]]]]],[[[0,[51,[39,[[38,[15]]]],48,49,9,[55,[[6,[5]]]]]]],[[18,[[0,[51,[39,[[38,[15]]]],48,49,9,[55,[[6,[5]]]]]],59,[30,[[0,[51,[39,[[38,[15]]]],48,49,9,[55,[[6,[5]]]]]]]]]]]],[[[0,[51,[39,[[38,[15]]]],48,49,9,[55,[[6,[5]]]]]]],[[18,[[0,[51,[39,[[38,[15]]]],48,49,9,[55,[[6,[5]]]]]],60,[30,[[0,[51,[39,[[38,[15]]]],48,49,9,[55,[[6,[5]]]]]]]]]]]],[[[0,[[39,[[54,[15]]]],[39,[[38,[15]]]],[39,[[61,[15]]]],51,48,[55,[36]]]]],[[18,[[0,[[39,[[54,[15]]]],[39,[[38,[15]]]],[39,[[61,[15]]]],51,48,[55,[36]]]],[0,[[39,[[54,[15]]]],[39,[[38,[15]]]],[39,[[61,[15]]]],51,48,[55,[36]]]],[30,[[0,[[39,[[54,[15]]]],[39,[[38,[15]]]],[39,[[61,[15]]]],51,48,[55,[36]]]]]]]]]],[50,[[18,[50,50,[30,[50]]]]]],[50,[[18,[50,50,[30,[50]]]]]],[[[0,[[39,[[38,[15]]]],51,48]]],[[18,[[0,[[39,[[38,[15]]]],51,48]],7,[30,[[0,[[39,[[38,[15]]]],51,48]]]]]]]],[53,25],[[[0,[[39,[[54,[15]]]],[39,[[38,[15]]]],[39,[[61,[15]]]],51,48,[55,[36]]]]],[[18,[[0,[[39,[[54,[15]]]],[39,[[38,[15]]]],[39,[[61,[15]]]],51,48,[55,[36]]]],[0,[[39,[[54,[15]]]],[39,[[38,[15]]]],[39,[[61,[15]]]],51,48,[55,[36]]]],[30,[[0,[[39,[[54,[15]]]],[39,[[38,[15]]]],[39,[[61,[15]]]],51,48,[55,[36]]]]]]]]]],[50,[[18,[50,50,[30,[50]]]]]],[50,[[18,[50,50,[30,[50]]]]]],[53,25],[25,25],[50,[[18,[50,50,[30,[50]]]]]],[50,[[18,[50,50,[30,[50]]]]]],[[[0,[[39,[[38,[15]]]],51,48]]],[[18,[[0,[[39,[[38,[15]]]],51,48]],7,[30,[[0,[[39,[[38,[15]]]],51,48]]]]]]]],[[[0,[51,[39,[[38,[15]]]],48]]],[[18,[[0,[51,[39,[[38,[15]]]],48]],62,[30,[[0,[51,[39,[[38,[15]]]],48]]]]]]]],[[[0,[51,[39,[[38,[15]]]],48]]],[[18,[[0,[51,[39,[[38,[15]]]],48]],63,[30,[[0,[51,[39,[[38,[15]]]],48]]]]]]]],[[[0,[51,[39,[[38,[15]]]],48]]],[[18,[[0,[51,[39,[[38,[15]]]],48]],64,[30,[[0,[51,[39,[[38,[15]]]],48]]]]]]]],[[[0,[51,[39,[[38,[15]]]],48]]],[[18,[[0,[51,[39,[[38,[15]]]],48]],65,[30,[[0,[51,[39,[[38,[15]]]],48]]]]]]]],[[[0,[51,[39,[[38,[15]]]],48]]],[[18,[[0,[51,[39,[[38,[15]]]],48]],5,[30,[[0,[51,[39,[[38,[15]]]],48]]]]]]]],0,[[[2,[48,[30,[48]]]]],19],[[]],[[]],[[[2,[9,[30,[9]]]]],19],[[13,[2,[30]]],19],[[[2,[[0,[9,47,[39,[[61,[15]]]]]],[30,[[0,[9,47,[39,[[61,[15]]]]]]]]]]],19],[[[2,[30]]],19],[[[0,[48,9]]],[[18,[[0,[48,9]],[0,[48,9]],[30,[[0,[48,9]]]]]]]],[[],[[18,[30]]]],[[[66,[9]]],[[18,[9]]]],[[[2,[30]],19],19],[[]],[[[2,[67,[0,[[67,[30]],30]]]]],19],[[]],[[[2,[30]]],[[66,[30,[2,[30]]]]]],[[2,19],19],[[[2,[9,[30,[9]]]],19],19],[[[2,[30]],[2,[30]]],19],[[[2,[9,[68,[9]]]],19],19],[[[66,[9,19]]],16],[[[2,[9,[30,[9]]]]],19],[[[2,[9,[30,[9]]]]],19],[[[2,[9,[30,[9]]]]],19],[[[2,[[0,[9,47,[39,[[61,[15]]]]]],[30,[[0,[9,47,[39,[[61,[15]]]]]]]]]]],19],[[[0,[[39,[[38,[15]]]],48]]],[[18,[[0,[[39,[[38,[15]]]],48]],[0,[[39,[[38,[15]]]],48]],[30,[[0,[[39,[[38,[15]]]],48]]]]]]]],[48,[[18,[48,15,[30,[48]]]]]],[9,25],[[],17],[[],17],[[],37],[[9,[2,[30]]],19],[[[2,[9,[69,[1]],[30,[9]]]],25],19],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[36],[[36,70],70],[33],[[33,28],28],[[33,70],70],[[33,30],30],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[70,[9]]],[[70,[9]]]],[71,71],[33,33],[[]],[[]],[[]],0,[[36,[2,[9,[72,[9]]]]],19],[28,28],[28,28],[70,70],[70,70],[[73,[70,[73]]],34],[[25,36],25],[33,36],[[[28,[14]],[28,[14]]],13],[[[70,[14]],[70,[14]]],13],[[71,71],13],[[33,33],13],[[],13],[33,64],0,[[[28,[23]],21],22],[[[28,[74]],21],22],[[[70,[23]],21],22],[[[70,[74]],21],22],[[71,21],22],[[33,21],22],[[]],[[]],[[]],[[]],[7],[7,70],[33],[33,28],[33,70],[33],[33,28],[33,70],[[33,75]],0,[[]],[[]],[[]],[[]],[33,30],[33,28],[[]],[31],[31],[[]],[[]],[[]],[[],34],[[],34],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],37],[[],37],[[],37],[[],37],0,[[[2,[[0,[9,14]],[30,[[0,[9,14]]]]]],15],19],[[25,6],19],[[[2,[[0,[9,48]],[30,[[0,[9,48]]]]]],19,19],19],[[[2,[[0,[9,48]],[30,[[0,[9,48]]]]]],19,19],19],[[15,15,[2,[[0,[9,48]],[30,[[0,[9,48]]]]]],19,19],19],[[[2,[9,44,[30,[9]]]],[2,[9,[30,[9]]]]],19],[[[2,[[0,[48,49]],44,[30,[[0,[48,49]]]]]]],19],[[[2,[[0,[9,48,49]],44,[30,[[0,[9,48,49]]]]]],[2,[[0,[9,48,49]],[30,[[0,[9,48,49]]]]]]],19],[[[2,[[0,[9,48]],[30,[[0,[9,48]]]]]]],19],[[[2,[[0,[9,48]],[30,[[0,[9,48]]]]]]],19],[[[2,[[0,[9,48]],[30,[[0,[9,48]]]]]]],19],[[[2,[[0,[9,48]],[30,[[0,[9,48]]]]]]],19],[[15,15,[2,[[0,[9,48]],[30,[[0,[9,48]]]]]]],19],[[[2,[[0,[9,48]],[30,[[0,[9,48]]]]]],[2,[[0,[9,48]],[30,[[0,[9,48]]]]]]],19],[[[2,[[0,[9,48]],[30,[[0,[9,48]]]]]],[2,[[0,[9,48]],[30,[[0,[9,48]]]]]]],19],[[[2,[[0,[9,48]],[30,[[0,[9,48]]]]]],[2,[[0,[9,48]],[30,[[0,[9,48]]]]]]],19],0,0,0,0,[[]],[[]],[76,76],[[]],0,[[76,76],13],[[],13],[[76,21],22],[[]],[[]],0,[[]],[[],17],[[],17],[[],37],[[[0,[[39,[[38,[15]]]],51,48]]],[[18,[[0,[[39,[[38,[15]]]],51,48]],77,[30,[[0,[[39,[[38,[15]]]],51,48]]]]]]]],[[[0,[[39,[[38,[15]]]],51,48]]],[[18,[[0,[[39,[[38,[15]]]],51,48]],78,[30,[[0,[[39,[[38,[15]]]],51,48]]]]]]]],[[[0,[[39,[[38,[15]]]],51,48]]],[[18,[[0,[[39,[[38,[15]]]],51,48]],56,[30,[[0,[[39,[[38,[15]]]],51,48]]]]]]]],[[[0,[[39,[[38,[15]]]],51,48]]],[[18,[[0,[[39,[[38,[15]]]],51,48]],57,[30,[[0,[[39,[[38,[15]]]],51,48]]]]]]]],[[[0,[[39,[[38,[15]]]],51,48]]],[[18,[[0,[[39,[[38,[15]]]],51,48]],58,[30,[[0,[[39,[[38,[15]]]],51,48]]]]]]]],[[[0,[[39,[[38,[15]]]],51,48]]],[[18,[[0,[[39,[[38,[15]]]],51,48]],58,[30,[[0,[[39,[[38,[15]]]],51,48]]]]]]]],[[[0,[[39,[[38,[15]]]],51,48]]],[[18,[[0,[[39,[[38,[15]]]],51,48]],59,[30,[[0,[[39,[[38,[15]]]],51,48]]]]]]]],[[[0,[[39,[[38,[15]]]],51,48]]],[[18,[[0,[[39,[[38,[15]]]],51,48]],60,[30,[[0,[[39,[[38,[15]]]],51,48]]]]]]]],[[[0,[[39,[[38,[15]]]],51,48]]],[[18,[[0,[[39,[[38,[15]]]],51,48]],62,[30,[[0,[[39,[[38,[15]]]],51,48]]]]]]]],[[[0,[[39,[[38,[15]]]],51,48]]],[[18,[[0,[[39,[[38,[15]]]],51,48]],63,[30,[[0,[[39,[[38,[15]]]],51,48]]]]]]]],[[[0,[[39,[[38,[15]]]],51,48]]],[[18,[[0,[[39,[[38,[15]]]],51,48]],64,[30,[[0,[[39,[[38,[15]]]],51,48]]]]]]]],[[[0,[[39,[[38,[15]]]],51,48]]],[[18,[[0,[[39,[[38,[15]]]],51,48]],64,[30,[[0,[[39,[[38,[15]]]],51,48]]]]]]]],[[[0,[[39,[[38,[15]]]],51,48]]],[[18,[[0,[[39,[[38,[15]]]],51,48]],65,[30,[[0,[[39,[[38,[15]]]],51,48]]]]]]]],[[[0,[[39,[[38,[15]]]],51,48]]],[[18,[[0,[[39,[[38,[15]]]],51,48]],5,[30,[[0,[[39,[[38,[15]]]],51,48]]]]]]]],[[[0,[[39,[[38,[15]]]],[39,[[61,[15]]]],[39,[[54,[15]]]],9,47,[79,[78]],[55,[36]],51,48,49,50,80,[55,[[6,[5]]]]]]],[[18,[[0,[[39,[[38,[15]]]],[39,[[61,[15]]]],[39,[[54,[15]]]],9,47,[79,[78]],[55,[36]],51,48,49,50,80,[55,[[6,[5]]]]]],78,[30,[[0,[[39,[[38,[15]]]],[39,[[61,[15]]]],[39,[[54,[15]]]],9,47,[79,[78]],[55,[36]],51,48,49,50,80,[55,[[6,[5]]]]]]]]]]]],[76],[76],[[[0,[[39,[[38,[15]]]],[39,[[61,[15]]]],[39,[[54,[15]]]],9,47,[79,[77]],[55,[36]],51,48,49,50,80,[55,[[6,[5]]]]]]],[[18,[[0,[[39,[[38,[15]]]],[39,[[61,[15]]]],[39,[[54,[15]]]],9,47,[79,[77]],[55,[36]],51,48,49,50,80,[55,[[6,[5]]]]]],77,[30,[[0,[[39,[[38,[15]]]],[39,[[61,[15]]]],[39,[[54,[15]]]],9,47,[79,[77]],[55,[36]],51,48,49,50,80,[55,[[6,[5]]]]]]]]]]]],[[[6,[5]]],[[18,[[6,[5]],64,[30,[[6,[5]]]]]]]],[76],[76],[76],[76],[76],[[[0,[[39,[[38,[15]]]],51,48]]],[[18,[[0,[[39,[[38,[15]]]],51,48]],60,[30,[[0,[[39,[[38,[15]]]],51,48]]]]]]]],[[[0,[[39,[[38,[15]]]],51,48]]],[[18,[[0,[[39,[[38,[15]]]],51,48]],77,[30,[[0,[[39,[[38,[15]]]],51,48]]]]]]]],[[[0,[[39,[[38,[15]]]],51,48]]],[[18,[[0,[[39,[[38,[15]]]],51,48]],78,[30,[[0,[[39,[[38,[15]]]],51,48]]]]]]]],[[[0,[[39,[[38,[15]]]],51,48]]],[[18,[[0,[[39,[[38,[15]]]],51,48]],56,[30,[[0,[[39,[[38,[15]]]],51,48]]]]]]]],[[[0,[[39,[[38,[15]]]],51,48]]],[[18,[[0,[[39,[[38,[15]]]],51,48]],57,[30,[[0,[[39,[[38,[15]]]],51,48]]]]]]]],[[[0,[[39,[[38,[15]]]],51,48]]],[[18,[[0,[[39,[[38,[15]]]],51,48]],58,[30,[[0,[[39,[[38,[15]]]],51,48]]]]]]]],[[[0,[[39,[[38,[15]]]],51,48]]],[[18,[[0,[[39,[[38,[15]]]],51,48]],58,[30,[[0,[[39,[[38,[15]]]],51,48]]]]]]]],[[[0,[[39,[[38,[15]]]],51,48]]],[[18,[[0,[[39,[[38,[15]]]],51,48]],59,[30,[[0,[[39,[[38,[15]]]],51,48]]]]]]]],[[[0,[[39,[[38,[15]]]],51,48]]],[[18,[[0,[[39,[[38,[15]]]],51,48]],60,[30,[[0,[[39,[[38,[15]]]],51,48]]]]]]]],[[[0,[[39,[[38,[15]]]],51,48]]],[[18,[[0,[[39,[[38,[15]]]],51,48]],62,[30,[[0,[[39,[[38,[15]]]],51,48]]]]]]]],[[[0,[[39,[[38,[15]]]],51,48]]],[[18,[[0,[[39,[[38,[15]]]],51,48]],63,[30,[[0,[[39,[[38,[15]]]],51,48]]]]]]]],[[[0,[[39,[[38,[15]]]],51,48]]],[[18,[[0,[[39,[[38,[15]]]],51,48]],64,[30,[[0,[[39,[[38,[15]]]],51,48]]]]]]]],[[[0,[[39,[[38,[15]]]],51,48]]],[[18,[[0,[[39,[[38,[15]]]],51,48]],64,[30,[[0,[[39,[[38,[15]]]],51,48]]]]]]]],[[[0,[[39,[[38,[15]]]],51,48]]],[[18,[[0,[[39,[[38,[15]]]],51,48]],65,[30,[[0,[[39,[[38,[15]]]],51,48]]]]]]]],[[[0,[[39,[[38,[15]]]],51,48]]],[[18,[[0,[[39,[[38,[15]]]],51,48]],5,[30,[[0,[[39,[[38,[15]]]],51,48]]]]]]]],[[[0,[[39,[[38,[15]]]],[39,[[61,[15]]]],9,47,51,50]]],[[18,[[0,[[39,[[38,[15]]]],[39,[[61,[15]]]],9,47,51,50]],[0,[[39,[[38,[15]]]],[39,[[61,[15]]]],9,47,51,50]],[30,[[0,[[39,[[38,[15]]]],[39,[[61,[15]]]],9,47,51,50]]]]]]]],[[[0,[[39,[[38,[15]]]],[39,[[61,[15]]]],[39,[[54,[15]]]],9,47,51,49,50,48,[55,[[6,[5]]]],80]]],[[18,[[0,[[39,[[38,[15]]]],[39,[[61,[15]]]],[39,[[54,[15]]]],9,47,51,49,50,48,[55,[[6,[5]]]],80]],[30,[[0,[[39,[[38,[15]]]],[39,[[61,[15]]]],[39,[[54,[15]]]],9,47,51,49,50,48,[55,[[6,[5]]]],80]]]]]]]],[76],[76],[76],[76],[76],[[[0,[[39,[[38,[15]]]],51,48]]],[[18,[[0,[[39,[[38,[15]]]],51,48]],5,[30,[[0,[[39,[[38,[15]]]],51,48]]]]]]]],[[[0,[[39,[[38,[15]]]],51,48]]],[[18,[[0,[[39,[[38,[15]]]],51,48]],77,[30,[[0,[[39,[[38,[15]]]],51,48]]]]]]]],[[[0,[[39,[[38,[15]]]],51,48]]],[[18,[[0,[[39,[[38,[15]]]],51,48]],78,[30,[[0,[[39,[[38,[15]]]],51,48]]]]]]]],[[[0,[[39,[[38,[15]]]],51,48]]],[[18,[[0,[[39,[[38,[15]]]],51,48]],56,[30,[[0,[[39,[[38,[15]]]],51,48]]]]]]]],[[[0,[[39,[[38,[15]]]],51,48]]],[[18,[[0,[[39,[[38,[15]]]],51,48]],57,[30,[[0,[[39,[[38,[15]]]],51,48]]]]]]]],[[[0,[[39,[[38,[15]]]],51,48]]],[[18,[[0,[[39,[[38,[15]]]],51,48]],58,[30,[[0,[[39,[[38,[15]]]],51,48]]]]]]]],[[[0,[[39,[[38,[15]]]],51,48]]],[[18,[[0,[[39,[[38,[15]]]],51,48]],58,[30,[[0,[[39,[[38,[15]]]],51,48]]]]]]]],[[[0,[[39,[[38,[15]]]],51,48]]],[[18,[[0,[[39,[[38,[15]]]],51,48]],59,[30,[[0,[[39,[[38,[15]]]],51,48]]]]]]]],[[[0,[[39,[[38,[15]]]],51,48]]],[[18,[[0,[[39,[[38,[15]]]],51,48]],60,[30,[[0,[[39,[[38,[15]]]],51,48]]]]]]]],[[[0,[[39,[[38,[15]]]],51,48]]],[[18,[[0,[[39,[[38,[15]]]],51,48]],62,[30,[[0,[[39,[[38,[15]]]],51,48]]]]]]]],[[[0,[[39,[[38,[15]]]],51,48]]],[[18,[[0,[[39,[[38,[15]]]],51,48]],63,[30,[[0,[[39,[[38,[15]]]],51,48]]]]]]]],[[[0,[[39,[[38,[15]]]],51,48]]],[[18,[[0,[[39,[[38,[15]]]],51,48]],64,[30,[[0,[[39,[[38,[15]]]],51,48]]]]]]]],[[[0,[[39,[[38,[15]]]],51,48]]],[[18,[[0,[[39,[[38,[15]]]],51,48]],64,[30,[[0,[[39,[[38,[15]]]],51,48]]]]]]]],[[[0,[[39,[[38,[15]]]],51,48]]],[[18,[[0,[[39,[[38,[15]]]],51,48]],65,[30,[[0,[[39,[[38,[15]]]],51,48]]]]]]]],[[[0,[[39,[[38,[15]]]],51,48]]],[[18,[[0,[[39,[[38,[15]]]],51,48]],5,[30,[[0,[[39,[[38,[15]]]],51,48]]]]]]]],[[[0,[[39,[[38,[15]]]],[39,[[61,[15]]]],9,47,51,48,49,[79,[78]],[55,[36]],50,80,[55,[[6,[5]]]]]]],[[18,[[0,[[39,[[38,[15]]]],[39,[[61,[15]]]],9,47,51,48,49,[79,[78]],[55,[36]],50,80,[55,[[6,[5]]]]]],78,[30,[[0,[[39,[[38,[15]]]],[39,[[61,[15]]]],9,47,51,48,49,[79,[78]],[55,[36]],50,80,[55,[[6,[5]]]]]]]]]]]],[76],[76],[[[0,[[39,[[38,[15]]]],[39,[[61,[15]]]],9,47,51,48,49,[79,[77]],[55,[36]],50,80,[55,[[6,[5]]]]]]],[[18,[[0,[[39,[[38,[15]]]],[39,[[61,[15]]]],9,47,51,48,49,[79,[77]],[55,[36]],50,80,[55,[[6,[5]]]]]],77,[30,[[0,[[39,[[38,[15]]]],[39,[[61,[15]]]],9,47,51,48,49,[79,[77]],[55,[36]],50,80,[55,[[6,[5]]]]]]]]]]]],[[[6,[5]]],[[18,[[6,[5]],64,[30,[[6,[5]]]]]]]],[76],[76],[76],[76],[76],[[[0,[[39,[[38,[15]]]],51,48]]],[[18,[[0,[[39,[[38,[15]]]],51,48]],60,[30,[[0,[[39,[[38,[15]]]],51,48]]]]]]]],[[[0,[[39,[[38,[15]]]],51,48]]],[[18,[[0,[[39,[[38,[15]]]],51,48]],77,[30,[[0,[[39,[[38,[15]]]],51,48]]]]]]]],[[[0,[[39,[[38,[15]]]],51,48]]],[[18,[[0,[[39,[[38,[15]]]],51,48]],78,[30,[[0,[[39,[[38,[15]]]],51,48]]]]]]]],[[[0,[[39,[[38,[15]]]],51,48]]],[[18,[[0,[[39,[[38,[15]]]],51,48]],56,[30,[[0,[[39,[[38,[15]]]],51,48]]]]]]]],[[[0,[[39,[[38,[15]]]],51,48]]],[[18,[[0,[[39,[[38,[15]]]],51,48]],57,[30,[[0,[[39,[[38,[15]]]],51,48]]]]]]]],[[[0,[[39,[[38,[15]]]],51,48]]],[[18,[[0,[[39,[[38,[15]]]],51,48]],58,[30,[[0,[[39,[[38,[15]]]],51,48]]]]]]]],[[[0,[[39,[[38,[15]]]],51,48]]],[[18,[[0,[[39,[[38,[15]]]],51,48]],58,[30,[[0,[[39,[[38,[15]]]],51,48]]]]]]]],[[[0,[[39,[[38,[15]]]],51,48]]],[[18,[[0,[[39,[[38,[15]]]],51,48]],59,[30,[[0,[[39,[[38,[15]]]],51,48]]]]]]]],[[[0,[[39,[[38,[15]]]],51,48]]],[[18,[[0,[[39,[[38,[15]]]],51,48]],60,[30,[[0,[[39,[[38,[15]]]],51,48]]]]]]]],[[[0,[[39,[[38,[15]]]],51,48]]],[[18,[[0,[[39,[[38,[15]]]],51,48]],62,[30,[[0,[[39,[[38,[15]]]],51,48]]]]]]]],[[[0,[[39,[[38,[15]]]],51,48]]],[[18,[[0,[[39,[[38,[15]]]],51,48]],63,[30,[[0,[[39,[[38,[15]]]],51,48]]]]]]]],[[[0,[[39,[[38,[15]]]],51,48]]],[[18,[[0,[[39,[[38,[15]]]],51,48]],64,[30,[[0,[[39,[[38,[15]]]],51,48]]]]]]]],[[[0,[[39,[[38,[15]]]],51,48]]],[[18,[[0,[[39,[[38,[15]]]],51,48]],64,[30,[[0,[[39,[[38,[15]]]],51,48]]]]]]]],[[[0,[[39,[[38,[15]]]],51,48]]],[[18,[[0,[[39,[[38,[15]]]],51,48]],65,[30,[[0,[[39,[[38,[15]]]],51,48]]]]]]]],[[[0,[[39,[[38,[15]]]],51,48]]],[[18,[[0,[[39,[[38,[15]]]],51,48]],5,[30,[[0,[[39,[[38,[15]]]],51,48]]]]]]]],[[[0,[[39,[[38,[15]]]],[39,[[61,[15]]]],9,47,51,50,48]]],[[18,[[0,[[39,[[38,[15]]]],[39,[[61,[15]]]],9,47,51,50,48]],[0,[[39,[[38,[15]]]],[39,[[61,[15]]]],9,47,51,50,48]],[30,[[0,[[39,[[38,[15]]]],[39,[[61,[15]]]],9,47,51,50,48]]]]]]]],[[[0,[[39,[[38,[15]]]],[39,[[61,[15]]]],9,47,51,[79,[58]],50,49,48,[55,[[6,[5]]]],80]]],[[18,[[0,[[39,[[38,[15]]]],[39,[[61,[15]]]],9,47,51,[79,[58]],50,49,48,[55,[[6,[5]]]],80]],[30,[[0,[[39,[[38,[15]]]],[39,[[61,[15]]]],9,47,51,[79,[58]],50,49,48,[55,[[6,[5]]]],80]]]]]]]],[76],[76],[76],[76],[76],[[[0,[[39,[[38,[15]]]],51,48]]],[[18,[[0,[[39,[[38,[15]]]],51,48]],5,[30,[[0,[[39,[[38,[15]]]],51,48]]]]]]]],0,[[[2,[30]],[2,[30]],[2,[30]]],19],[[[2,[30]],[2,[30]]],19],[[],18],[[[2,[30]],[2,[30]]],19],[[[2,[30]],[2,[30]],[2,[30]]],19],[[[2,[30]],[2,[30]]],19],[[[81,[30]]],19]],"c":[],"p":[[8,"Sized"],[8,"Parser"],[3,"And"],[3,"AndThen"],[15,"u8"],[15,"slice"],[15,"char"],[4,"Needed"],[8,"Clone"],[4,"Err"],[4,"CompareResult"],[8,"From"],[15,"bool"],[8,"PartialEq"],[15,"usize"],[4,"Option"],[4,"Result"],[6,"IResult"],[8,"FnMut"],[3,"FlatMap"],[3,"Formatter"],[6,"Result"],[8,"Debug"],[3,"Into"],[8,"Fn"],[3,"Map"],[8,"FnOnce"],[3,"Error"],[3,"Or"],[8,"ParseError"],[3,"Demand"],[8,"Error"],[4,"ErrorKind"],[3,"String"],[3,"Vec"],[15,"str"],[3,"TypeId"],[3,"RangeFrom"],[8,"Slice"],[8,"ErrorConvert"],[8,"AddAssign"],[8,"Shl"],[8,"Shr"],[8,"ToUsize"],[8,"Alt"],[8,"Permutation"],[8,"Offset"],[8,"InputLength"],[8,"InputTake"],[8,"InputTakeAtPosition"],[8,"InputIter"],[8,"ExtendInto"],[8,"FindToken"],[3,"Range"],[8,"Compare"],[15,"i128"],[15,"i16"],[15,"i32"],[15,"i64"],[15,"i8"],[3,"RangeTo"],[15,"u128"],[15,"u16"],[15,"u32"],[15,"u64"],[3,"ParserIterator"],[8,"Into"],[8,"FromExternalError"],[8,"Borrow"],[3,"VerboseError"],[4,"VerboseErrorKind"],[8,"ContextError"],[8,"Deref"],[8,"Display"],[8,"Hasher"],[4,"Endianness"],[15,"f32"],[15,"f64"],[8,"ParseTo"],[8,"AsBytes"],[8,"Tuple"],[8,"AsChar"],[8,"FindSubstring"],[8,"Finish"],[8,"HexDisplay"]]},\
"num_integer":{"doc":"Integer trait and functions.","t":"IDIDIFKFKFLLLLFLLLLFLFKFLFKKLLLLLLLFKMFLLLLKKKFKFKFLLLFKLFLLLLLLLLLMM","n":["Average","ExtendedGcd","Integer","IterBinomial","Roots","average_ceil","average_ceil","average_floor","average_floor","binomial","borrow","borrow","borrow_mut","borrow_mut","cbrt","cbrt","cbrt","clone","clone_into","div_ceil","div_ceil","div_floor","div_floor","div_mod_floor","div_mod_floor","div_rem","div_rem","divides","eq","equivalent","extended_gcd","extended_gcd_lcm","fmt","from","from","gcd","gcd","gcd","gcd_lcm","gcd_lcm","into","into","into_iter","is_even","is_multiple_of","is_odd","lcm","lcm","mod_floor","mod_floor","multinomial","new","next","next_multiple_of","nth_root","nth_root","prev_multiple_of","sqrt","sqrt","sqrt","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","x","y"],"q":[[0,"num_integer"]],"d":["Provides methods to compute the average of two integers, …","Greatest common divisor and Bézout coefficients","","An iterator over binomial coefficients.","Provides methods to compute an integer’s square root, …","Returns the ceiling value of the average of <code>x</code> and <code>y</code> – …","Returns the ceiling value of the average of <code>self</code> and <code>other</code>.","Returns the floor value of the average of <code>x</code> and <code>y</code> – see …","Returns the floor value of the average of <code>self</code> and <code>other</code>. …","Calculate the binomial coefficient.","","","","","Returns the truncated principal cube root of an integer –","Returns the truncated principal cube root of an integer –","Returns the truncated principal cube root of an integer –","","","Ceiled integer division","Ceiled integer division.","Floored integer division","Floored integer division.","Simultaneous floored integer division and modulus","Simultaneous floored integer division and modulus. Returns …","Simultaneous integer division and modulus","Simultaneous truncated integer division and modulus. …","Deprecated, use <code>is_multiple_of</code> instead.","","","Greatest common divisor and Bézout coefficients.","Greatest common divisor, least common multiple, and …","","Returns the argument unchanged.","Returns the argument unchanged.","Calculates the Greatest Common Divisor (GCD) of the number …","Greatest Common Divisor (GCD).","","Calculates the Greatest Common Divisor (GCD) and Lowest …","Greatest Common Divisor (GCD) and Lowest Common Multiple …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Returns <code>true</code> if the number is even.","Returns <code>true</code> if <code>self</code> is a multiple of <code>other</code>.","Returns <code>true</code> if the number is odd.","Calculates the Lowest Common Multiple (LCM) of the number …","Lowest Common Multiple (LCM).","Floored integer modulus","Floored integer modulo, satisfying:","Calculate the multinomial coefficient.","For a given n, iterate over all binomial coefficients …","","Rounds up to nearest multiple of argument.","Returns the truncated principal <code>n</code>th root of an integer – …","Returns the truncated principal <code>n</code>th root of an integer – …","Rounds down to nearest multiple of argument.","Returns the truncated principal square root of an integer …","Returns the truncated principal square root of an integer …","Returns the truncated principal square root of an integer …","","","","","","","","",""],"i":[0,0,0,0,0,0,1,0,1,0,14,5,14,5,0,4,4,5,5,0,2,0,2,0,2,0,2,2,5,5,2,2,5,14,5,0,2,5,0,2,14,5,14,2,2,2,0,2,0,2,0,14,14,2,0,4,2,0,4,4,5,14,5,14,5,14,5,5,5],"f":[0,0,0,0,0,[[1,1],1],[[]],[[1,1],1],[[]],[[[0,[2,3]],[0,[2,3]]],[[0,[2,3]]]],[[]],[[]],[[]],[[]],[4,4],[[]],[[]],[[[5,[3]]],[[5,[3]]]],[[]],[[2,2],2],[[]],[[2,2],2],[[]],[[2,2]],[[]],[[2,2]],[[]],[[],6],[[[5,[7]],[5,[7]]],6],[[],6],[[3,3],[[5,[3]]]],[[[0,[3,8]],[0,[3,8]]]],[[[5,[9]],10],11],[[]],[[]],[[2,2],2],[[]],0,[[2,2]],[[]],[[]],[[]],[[]],[[],6],[[],6],[[],6],[[2,2],2],[[]],[[2,2],2],[[]],[[[13,[[0,[[12,[[0,[[12,[[0,[[12,[[0,[12,2,3]]]],2,3]]]],2,3]]]],2,3]]]]],[[0,[[12,[[0,[[12,[[0,[[12,[[0,[[12,[[0,[12,2,3]]]],2,3]]]],2,3]]]],2,3]]]],2,3]]]],[2,[[14,[2]]]],[[[14,[[0,[2,3]]]]],[[15,[[0,[2,3]]]]]],[[3,3],3],[[4,16],4],[16],[[3,3],3],[4,4],[[]],[[]],[[]],[[],17],[[],17],[[],17],[[],17],[[],18],[[],18],0,0],"c":[],"p":[[8,"Average"],[8,"Integer"],[8,"Clone"],[8,"Roots"],[3,"ExtendedGcd"],[15,"bool"],[8,"PartialEq"],[8,"Signed"],[8,"Debug"],[3,"Formatter"],[6,"Result"],[8,"Add"],[15,"slice"],[3,"IterBinomial"],[4,"Option"],[15,"u32"],[4,"Result"],[3,"TypeId"]]},\
"num_iter":{"doc":"External iterators for generic mathematics","t":"DDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFFFFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["Range","RangeFrom","RangeInclusive","RangeStep","RangeStepFrom","RangeStepInclusive","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","end_bound","end_bound","end_bound","from","from","from","from","from","from","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","next","next","next","next","next","next","next_back","next_back","range","range_from","range_inclusive","range_step","range_step_from","range_step_inclusive","size_hint","size_hint","size_hint","size_hint","start_bound","start_bound","start_bound","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id"],"q":[[0,"num_iter"]],"d":["An iterator over the range [start, stop)","An iterator over the infinite range starting at <code>start</code>","An iterator over the range [start, stop]","An iterator over the range [start, stop) by <code>step</code>. It …","An iterator over the infinite range starting at <code>start</code> by …","An iterator over the range [start, stop] by <code>step</code>. It …","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Returns an iterator over the given range [start, stop) …","Return an iterator over the infinite range starting at …","Return an iterator over the range [start, stop]","Return an iterator over the range [start, stop) by <code>step</code>. …","Return an iterator over the infinite range starting at …","Return an iterator over the range [start, stop] by <code>step</code>. …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,2,3,4,5,6,7,2,3,4,5,6,7,2,3,4,5,6,7,2,3,4,5,6,7,2,3,6,2,3,4,5,6,7,2,3,4,5,6,7,2,3,4,5,6,7,2,3,4,5,6,7,2,3,0,0,0,0,0,0,2,3,6,7,2,3,6,2,3,4,5,6,7,2,3,4,5,6,7,2,3,4,5,6,7,2,3,4,5,6,7],"f":[0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[2,[1]]],[[2,[1]]]],[[[3,[1]]],[[3,[1]]]],[[[4,[1]]],[[4,[1]]]],[[[5,[1]]],[[5,[1]]]],[[[6,[1]]],[[6,[1]]]],[[[7,[1]]],[[7,[1]]]],[[]],[[]],[[]],[[]],[[]],[[]],[2,8],[3,8],[6,8],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[2,[[0,[[9,[[0,[[9,[[0,[[9,[[0,[9,10,1,11]]]],10,1,11]]]],10,1,11]]]],10,1,11]]]]],[[12,[[0,[[9,[[0,[[9,[[0,[[9,[[0,[9,10,1,11]]]],10,1,11]]]],10,1,11]]]],10,1,11]]]]]],[[[3,[[0,[[9,[[0,[[9,[[0,[[9,[[0,[9,10,1,11]]]],10,1,11]]]],10,1,11]]]],10,1,11]]]]],[[12,[[0,[[9,[[0,[[9,[[0,[[9,[[0,[9,10,1,11]]]],10,1,11]]]],10,1,11]]]],10,1,11]]]]]],[[[4,[[0,[13,10,1]]]]],[[12,[[0,[13,10,1]]]]]],[[[5,[[0,[13,10,1,14]]]]],[[12,[[0,[13,10,1,14]]]]]],[[[6,[[0,[[9,[[0,[[9,[[0,[[9,[[0,[9,1]]]],1]]]],1]]]],1]]]]],[[12,[[0,[[9,[[0,[[9,[[0,[[9,[[0,[9,1]]]],1]]]],1]]]],1]]]]]],[[[7,[[0,[[9,[[0,[[9,[[0,[[9,[[0,[9,1]]]],1]]]],1]]]],1]]]]],[[12,[[0,[[9,[[0,[[9,[[0,[[9,[[0,[9,1]]]],1]]]],1]]]],1]]]]]],[[[2,[[0,[15,1,11]]]]],[[12,[[0,[15,1,11]]]]]],[[[3,[[0,[[16,[[0,[[16,[[0,[[16,[[0,[16,15,1,11]]]],15,1,11]]]],15,1,11]]]],15,1,11]]]]],[[12,[[0,[[16,[[0,[[16,[[0,[[16,[[0,[16,15,1,11]]]],15,1,11]]]],15,1,11]]]],15,1,11]]]]]],[[[0,[[9,[[0,[[9,[[0,[[9,[[0,[[9,[[0,[9,10,1,17]]]],10,1,17]]]],10,1,17]]]],10,1,17]]]],10,1,17]],[0,[[9,[[0,[[9,[[0,[[9,[[0,[[9,[[0,[9,10,1,17]]]],10,1,17]]]],10,1,17]]]],10,1,17]]]],10,1,17]]],[[2,[[0,[[9,[[0,[[9,[[0,[[9,[[0,[9,10,1,17]]]],10,1,17]]]],10,1,17]]]],10,1,17]]]]]],[[[0,[[9,[[0,[[9,[[0,[[9,[[0,[[9,[[0,[9,1,17]]]],1,17]]]],1,17]]]],1,17]]]],1,17]]],[[6,[[0,[[9,[[0,[[9,[[0,[[9,[[0,[9,1,17]]]],1,17]]]],1,17]]]],1,17]]]]]],[[[0,[[9,[[0,[[9,[[0,[[9,[[0,[[9,[[0,[9,10,1,17]]]],10,1,17]]]],10,1,17]]]],10,1,17]]]],10,1,17]],[0,[[9,[[0,[[9,[[0,[[9,[[0,[[9,[[0,[9,10,1,17]]]],10,1,17]]]],10,1,17]]]],10,1,17]]]],10,1,17]]],[[3,[[0,[[9,[[0,[[9,[[0,[[9,[[0,[9,10,1,17]]]],10,1,17]]]],10,1,17]]]],10,1,17]]]]]],[[[0,[13,10,1,18]],[0,[13,10,1,18]],[0,[13,10,1,18]]],[[4,[[0,[13,10,1,18]]]]]],[[[0,[[9,[[0,[[9,[[0,[[9,[[0,[[9,[[0,[9,1]]]],1]]]],1]]]],1]]]],1]],[0,[[9,[[0,[[9,[[0,[[9,[[0,[[9,[[0,[9,1]]]],1]]]],1]]]],1]]]],1]]],[[7,[[0,[[9,[[0,[[9,[[0,[[9,[[0,[9,1]]]],1]]]],1]]]],1]]]]]],[[[0,[13,10,1,18]],[0,[13,10,1,18]],[0,[13,10,1,18]]],[[5,[[0,[13,10,1,18]]]]]],[[[2,[[0,[[9,[[0,[[9,[[0,[[9,[[0,[9,10,1,11]]]],10,1,11]]]],10,1,11]]]],10,1,11]]]]]],[[[3,[[0,[[9,[[0,[[9,[[0,[[9,[[0,[9,10,1,11]]]],10,1,11]]]],10,1,11]]]],10,1,11]]]]]],[[[6,[[0,[[9,[[0,[[9,[[0,[[9,[[0,[9,1]]]],1]]]],1]]]],1]]]]]],[[[7,[[0,[[9,[[0,[[9,[[0,[[9,[[0,[9,1]]]],1]]]],1]]]],1]]]]]],[2,8],[3,8],[6,8],[[]],[[]],[[]],[[]],[[]],[[]],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20]],"c":[],"p":[[8,"Clone"],[3,"Range"],[3,"RangeInclusive"],[3,"RangeStep"],[3,"RangeStepInclusive"],[3,"RangeFrom"],[3,"RangeStepFrom"],[4,"Bound"],[8,"Add"],[8,"PartialOrd"],[8,"ToPrimitive"],[4,"Option"],[8,"CheckedAdd"],[8,"PartialEq"],[8,"Integer"],[8,"Sub"],[8,"One"],[8,"Zero"],[4,"Result"],[3,"TypeId"]]},\
"num_rational":{"doc":"Rational numbers","t":"DDGGGLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["ParseRatioError","Ratio","Rational","Rational32","Rational64","abs","abs_sub","add","add","add","add","add","add","add","add","add_assign","add_assign","add_assign","add_assign","approximate_float","borrow","borrow","borrow_mut","borrow_mut","ceil","checked_add","checked_div","checked_mul","checked_sub","clone","clone","clone_into","clone_into","cmp","denom","div","div","div","div","div","div","div","div","div_assign","div_assign","div_assign","div_assign","eq","eq","equivalent","floor","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fract","from","from","from","from","from_f32","from_f32","from_f32","from_f32","from_f32","from_f32","from_f32","from_f32","from_f32","from_f32","from_f32","from_f32","from_f64","from_f64","from_f64","from_f64","from_f64","from_f64","from_f64","from_f64","from_f64","from_f64","from_f64","from_f64","from_i128","from_i128","from_i128","from_i128","from_i128","from_i128","from_i128","from_i128","from_i128","from_i128","from_i128","from_i128","from_i64","from_i64","from_i64","from_i64","from_i64","from_i64","from_i64","from_i64","from_i64","from_i64","from_i64","from_i64","from_integer","from_str","from_str_radix","from_u128","from_u128","from_u128","from_u128","from_u128","from_u128","from_u128","from_u128","from_u128","from_u128","from_u128","from_u128","from_u64","from_u64","from_u64","from_u64","from_u64","from_u64","from_u64","from_u64","from_u64","from_u64","from_u64","from_u64","hash","into","into","into","inv","inv","is_integer","is_negative","is_one","is_positive","is_zero","mul","mul","mul","mul","mul","mul","mul","mul","mul_assign","mul_assign","mul_assign","mul_assign","neg","neg","new","new_raw","numer","one","partial_cmp","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","product","product","recip","reduced","rem","rem","rem","rem","rem","rem","rem","rem","rem_assign","rem_assign","rem_assign","rem_assign","round","set_one","set_zero","signum","sub","sub","sub","sub","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","sum","sum","to_f64","to_f64","to_f64","to_f64","to_f64","to_f64","to_f64","to_f64","to_f64","to_f64","to_i128","to_i128","to_i128","to_i128","to_i128","to_i128","to_i128","to_i128","to_i128","to_i128","to_i64","to_i64","to_i64","to_i64","to_i64","to_i64","to_i64","to_i64","to_i64","to_i64","to_integer","to_owned","to_owned","to_string","to_string","to_u128","to_u128","to_u128","to_u128","to_u128","to_u128","to_u128","to_u128","to_u128","to_u128","to_u64","to_u64","to_u64","to_u64","to_u64","to_u64","to_u64","to_u64","to_u64","to_u64","trunc","try_from","try_from","try_into","try_into","type_id","type_id","zero"],"q":[[0,"num_rational"]],"d":["","Represents the ratio between two numbers.","Alias for a <code>Ratio</code> of machine-sized integers.","Alias for a <code>Ratio</code> of 32-bit-sized integers.","Alias for a <code>Ratio</code> of 64-bit-sized integers.","","","","","","","","","","","","","","","","","","","","Rounds towards plus infinity.","","","","","","","","","","Gets an immutable reference to the denominator.","","","","","","","","","","","","","","","","Rounds towards minus infinity.","","","","","","","","","","","Returns the fractional part of a number, with division …","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a <code>Ratio</code> representing the integer <code>t</code>.","Parses <code>numer/denom</code> or just <code>numer</code>.","Parses <code>numer/denom</code> where the numbers are in base <code>radix</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Returns true if the rational number is an integer …","","","","","","","","","","","","","","","","","","","Creates a new <code>Ratio</code>.","Creates a <code>Ratio</code> without checking for <code>denom == 0</code> or …","Gets an immutable reference to the numerator.","","","","","","Raises the <code>Ratio</code> to the power of an exponent.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the reciprocal.","Returns a reduced copy of self.","","","","","","","","","","","","","Rounds to the nearest integer. Rounds half-way cases away …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Converts to an integer, rounding towards zero.","","","","","","","","","","","","","","","","","","","","","","","","","Rounds towards zero.","","","","","","",""],"i":[0,0,0,0,0,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,13,4,13,4,4,4,4,4,4,13,4,13,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,13,4,4,4,4,4,4,4,4,4,4,13,13,4,4,4,4,13,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,13,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,13,4,13,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,13,4,13,4,13,4],"f":[0,0,0,0,0,[[[4,[[0,[1,2,3]]]]],[[4,[[0,[1,2,3]]]]]],[[[4,[[0,[1,2,3]]]],[4,[[0,[1,2,3]]]]],[[4,[[0,[1,2,3]]]]]],[[[4,[[0,[1,2]]]],[0,[1,2]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],[4,[[0,[1,2]]]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],[0,[1,2]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],[0,[1,2]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],[4,[[0,[1,2]]]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],[0,[1,2]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],[4,[[0,[1,2]]]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],[4,[[0,[1,2]]]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2,5]]]],[0,[1,2,5]]]],[[[4,[[0,[1,2,5]]]],[0,[1,2,5]]]],[[[4,[[0,[1,2,5]]]],[4,[[0,[1,2,5]]]]]],[[[4,[[0,[1,2,5]]]],[4,[[0,[1,2,5]]]]]],[[[0,[6,7]]],[[9,[[4,[[0,[2,3,8,7,1]]]]]]]],[[]],[[]],[[]],[[]],[[[4,[[0,[1,2]]]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2,10,11]]]],[4,[[0,[1,2,10,11]]]]],[[9,[[4,[[0,[1,2,10,11]]]]]]]],[[[4,[[0,[1,2,10]]]],[4,[[0,[1,2,10]]]]],[[9,[[4,[[0,[1,2,10]]]]]]]],[[[4,[[0,[1,2,10]]]],[4,[[0,[1,2,10]]]]],[[9,[[4,[[0,[1,2,10]]]]]]]],[[[4,[[0,[1,2,10,12]]]],[4,[[0,[1,2,10,12]]]]],[[9,[[4,[[0,[1,2,10,12]]]]]]]],[[[4,[1]]],[[4,[1]]]],[13,13],[[]],[[]],[[[4,[[0,[1,2]]]],[4,[[0,[1,2]]]]],14],[4],[[[4,[[0,[1,2]]]],[4,[[0,[1,2]]]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],[0,[1,2]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],[4,[[0,[1,2]]]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],[0,[1,2]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],[0,[1,2]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],[4,[[0,[1,2]]]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],[4,[[0,[1,2]]]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],[0,[1,2]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2,5]]]],[4,[[0,[1,2,5]]]]]],[[[4,[[0,[1,2,5]]]],[0,[1,2,5]]]],[[[4,[[0,[1,2,5]]]],[0,[1,2,5]]]],[[[4,[[0,[1,2,5]]]],[4,[[0,[1,2,5]]]]]],[[[4,[[0,[1,2]]]],[4,[[0,[1,2]]]]],15],[[13,13],15],[[],15],[[[4,[[0,[1,2]]]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[16,1,2]]]],17],18],[[[4,[[0,[19,1,2]]]],17],18],[[[4,[[0,[20,1,2]]]],17],18],[[[4,[21]],17],18],[[[4,[[0,[22,1,2]]]],17],18],[[[4,[[0,[23,1,2]]]],17],18],[[[4,[[0,[24,1,2]]]],17],18],[[[4,[[0,[25,1,2]]]],17],18],[[13,17],18],[[13,17],18],[[[4,[[0,[1,2]]]]],[[4,[[0,[1,2]]]]]],[[]],[[],[[4,[[0,[1,2]]]]]],[[[0,[1,2]]],[[4,[[0,[1,2]]]]]],[[]],[26,[[9,[[4,[27]]]]]],[26,[[9,[[4,[28]]]]]],[26,[[9,[[4,[29]]]]]],[26,[[9,[[4,[30]]]]]],[26,[[9,[[4,[31]]]]]],[26,[[9,[[4,[32]]]]]],[26,[[9,[[4,[33]]]]]],[26,[[9,[[4,[34]]]]]],[26,[[9,[[4,[35]]]]]],[26,[[9,[[4,[36]]]]]],[26,[[9,[[4,[37]]]]]],[26,[[9,[[4,[38]]]]]],[39,[[9,[[4,[31]]]]]],[39,[[9,[[4,[29]]]]]],[39,[[9,[[4,[33]]]]]],[39,[[9,[[4,[30]]]]]],[39,[[9,[[4,[32]]]]]],[39,[[9,[[4,[27]]]]]],[39,[[9,[[4,[34]]]]]],[39,[[9,[[4,[37]]]]]],[39,[[9,[[4,[28]]]]]],[39,[[9,[[4,[35]]]]]],[39,[[9,[[4,[38]]]]]],[39,[[9,[[4,[36]]]]]],[29,[[9,[[4,[31]]]]]],[29,[[9,[[4,[35]]]]]],[29,[[9,[[4,[27]]]]]],[29,[[9,[[4,[30]]]]]],[29,[[9,[[4,[28]]]]]],[29,[[9,[[4,[37]]]]]],[29,[[9,[[4,[34]]]]]],[29,[[9,[[4,[36]]]]]],[29,[[9,[[4,[33]]]]]],[29,[[9,[[4,[38]]]]]],[29,[[9,[[4,[29]]]]]],[29,[[9,[[4,[32]]]]]],[38,[[9,[[4,[28]]]]]],[38,[[9,[[4,[30]]]]]],[38,[[9,[[4,[34]]]]]],[38,[[9,[[4,[27]]]]]],[38,[[9,[[4,[38]]]]]],[38,[[9,[[4,[29]]]]]],[38,[[9,[[4,[33]]]]]],[38,[[9,[[4,[31]]]]]],[38,[[9,[[4,[36]]]]]],[38,[[9,[[4,[32]]]]]],[38,[[9,[[4,[37]]]]]],[38,[[9,[[4,[35]]]]]],[[[0,[1,2]]],[[4,[[0,[1,2]]]]]],[40,[[42,[[4,[[0,[41,1,2]]]],13]]]],[[40,32],[[42,[[4,[[0,[1,2]]]],13]]]],[33,[[9,[[4,[34]]]]]],[33,[[9,[[4,[31]]]]]],[33,[[9,[[4,[37]]]]]],[33,[[9,[[4,[33]]]]]],[33,[[9,[[4,[29]]]]]],[33,[[9,[[4,[38]]]]]],[33,[[9,[[4,[35]]]]]],[33,[[9,[[4,[36]]]]]],[33,[[9,[[4,[30]]]]]],[33,[[9,[[4,[27]]]]]],[33,[[9,[[4,[32]]]]]],[33,[[9,[[4,[28]]]]]],[30,[[9,[[4,[32]]]]]],[30,[[9,[[4,[30]]]]]],[30,[[9,[[4,[27]]]]]],[30,[[9,[[4,[29]]]]]],[30,[[9,[[4,[37]]]]]],[30,[[9,[[4,[34]]]]]],[30,[[9,[[4,[33]]]]]],[30,[[9,[[4,[31]]]]]],[30,[[9,[[4,[28]]]]]],[30,[[9,[[4,[38]]]]]],[30,[[9,[[4,[36]]]]]],[30,[[9,[[4,[35]]]]]],[[[4,[[0,[1,2,43]]]],44]],[4],[[]],[[]],[[[4,[[0,[1,2]]]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]]],15],[[[4,[[0,[1,2,3]]]]],15],[[[4,[[0,[1,2]]]]],15],[[[4,[[0,[1,2,3]]]]],15],[[[4,[[0,[1,2]]]]],15],[[[4,[[0,[1,2]]]],[4,[[0,[1,2]]]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],[0,[1,2]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],[0,[1,2]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],[0,[1,2]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],[0,[1,2]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],[4,[[0,[1,2]]]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],[4,[[0,[1,2]]]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],[4,[[0,[1,2]]]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2,5]]]],[4,[[0,[1,2,5]]]]]],[[[4,[[0,[1,2,5]]]],[0,[1,2,5]]]],[[[4,[[0,[1,2,5]]]],[0,[1,2,5]]]],[[[4,[[0,[1,2,5]]]],[4,[[0,[1,2,5]]]]]],[[[4,[[0,[1,2,45]]]]],[[4,[[0,[1,2,45]]]]]],[[[4,[[0,[1,2,45]]]]],[[4,[[0,[1,2,45]]]]]],[[[0,[1,2]],[0,[1,2]]],[[4,[[0,[1,2]]]]]],[[],4],[4],[[],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],[4,[[0,[1,2]]]]],[[9,[14]]]],[[[4,[[0,[1,2,[46,[36]]]]]],37],[[4,[[0,[1,2,[46,[36]]]]]]]],[[[4,[[0,[1,2,[46,[35]]]]]],27],[[4,[[0,[1,2,[46,[35]]]]]]]],[[[4,[[0,[1,2,[46,[30]]]]]],30],[[4,[[0,[1,2,[46,[30]]]]]]]],[[[4,[[0,[1,2]]]],31],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],34],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2,[46,[35]]]]]],35],[[4,[[0,[1,2,[46,[35]]]]]]]],[[[4,[[0,[1,2,[46,[32]]]]]],31],[[4,[[0,[1,2,[46,[32]]]]]]]],[[[4,[[0,[1,2]]]],36],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],34],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],36],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],37],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],29],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2,[46,[30]]]]]],38],[[4,[[0,[1,2,[46,[30]]]]]]]],[[[4,[[0,[1,2]]]],28],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],38],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2,[46,[35]]]]]],35],[[4,[[0,[1,2,[46,[35]]]]]]]],[[[4,[[0,[1,2]]]],30],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],30],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2,[46,[28]]]]]],34],[[4,[[0,[1,2,[46,[28]]]]]]]],[[[4,[[0,[1,2,[46,[32]]]]]],32],[[4,[[0,[1,2,[46,[32]]]]]]]],[[[4,[[0,[1,2]]]],33],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],37],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],27],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2,[46,[33]]]]]],29],[[4,[[0,[1,2,[46,[33]]]]]]]],[[[4,[[0,[1,2]]]],32],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2,[46,[36]]]]]],37],[[4,[[0,[1,2,[46,[36]]]]]]]],[[[4,[[0,[1,2]]]],27],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2,[46,[30]]]]]],30],[[4,[[0,[1,2,[46,[30]]]]]]]],[[[4,[[0,[1,2,[46,[28]]]]]],28],[[4,[[0,[1,2,[46,[28]]]]]]]],[[[4,[[0,[1,2,[46,[30]]]]]],38],[[4,[[0,[1,2,[46,[30]]]]]]]],[[[4,[[0,[1,2]]]],33],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],38],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],31],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2,[46,[32]]]]]],31],[[4,[[0,[1,2,[46,[32]]]]]]]],[[[4,[[0,[1,2]]]],35],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2,[46,[33]]]]]],33],[[4,[[0,[1,2,[46,[33]]]]]]]],[[[4,[[0,[1,2,[46,[36]]]]]],36],[[4,[[0,[1,2,[46,[36]]]]]]]],[[[4,[[0,[1,2,[46,[33]]]]]],29],[[4,[[0,[1,2,[46,[33]]]]]]]],[[[4,[[0,[1,2]]]],32],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2,[46,[35]]]]]],27],[[4,[[0,[1,2,[46,[35]]]]]]]],[[[4,[[0,[1,2,[46,[28]]]]]],28],[[4,[[0,[1,2,[46,[28]]]]]]]],[[[4,[[0,[1,2]]]],35],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],28],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2,[46,[28]]]]]],34],[[4,[[0,[1,2,[46,[28]]]]]]]],[[[4,[[0,[1,2,[46,[36]]]]]],36],[[4,[[0,[1,2,[46,[36]]]]]]]],[[[4,[[0,[1,2,[46,[33]]]]]],33],[[4,[[0,[1,2,[46,[33]]]]]]]],[[[4,[[0,[1,2]]]],31],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],29],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2,[46,[32]]]]]],32],[[4,[[0,[1,2,[46,[32]]]]]]]],[47,[[4,[[0,[2,1]]]]]],[47,[[4,[[0,[2,1]]]]]],[[[4,[[0,[1,2]]]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],[0,[1,2]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],[4,[[0,[1,2]]]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],[0,[1,2]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],[4,[[0,[1,2]]]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],[4,[[0,[1,2]]]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],[0,[1,2]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],[4,[[0,[1,2]]]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],[0,[1,2]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2,5]]]],[4,[[0,[1,2,5]]]]]],[[[4,[[0,[1,2,5]]]],[0,[1,2,5]]]],[[[4,[[0,[1,2,5]]]],[4,[[0,[1,2,5]]]]]],[[[4,[[0,[1,2,5]]]],[0,[1,2,5]]]],[[[4,[[0,[1,2]]]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2,3]]]]],[[4,[[0,[1,2,3]]]]]],[[[4,[[0,[1,2]]]],[0,[1,2]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],[0,[1,2]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],[4,[[0,[1,2]]]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],[4,[[0,[1,2]]]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],[0,[1,2]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],[4,[[0,[1,2]]]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],[0,[1,2]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],[4,[[0,[1,2]]]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2,5]]]],[4,[[0,[1,2,5]]]]]],[[[4,[[0,[1,2,5]]]],[4,[[0,[1,2,5]]]]]],[[[4,[[0,[1,2,5]]]],[0,[1,2,5]]]],[[[4,[[0,[1,2,5]]]],[0,[1,2,5]]]],[47,[[4,[[0,[2,1]]]]]],[47,[[4,[[0,[2,1]]]]]],[[[4,[36]]],[[9,[39]]]],[[[4,[28]]],[[9,[39]]]],[[[4,[38]]],[[9,[39]]]],[[[4,[27]]],[[9,[39]]]],[[[4,[30]]],[[9,[39]]]],[[[4,[31]]],[[9,[39]]]],[[[4,[32]]],[[9,[39]]]],[[[4,[35]]],[[9,[39]]]],[[[4,[37]]],[[9,[39]]]],[[[4,[34]]],[[9,[39]]]],[[[4,[31]]],[[9,[29]]]],[[[4,[32]]],[[9,[29]]]],[[[4,[30]]],[[9,[29]]]],[[[4,[34]]],[[9,[29]]]],[[[4,[27]]],[[9,[29]]]],[[[4,[38]]],[[9,[29]]]],[[[4,[37]]],[[9,[29]]]],[[[4,[36]]],[[9,[29]]]],[[[4,[28]]],[[9,[29]]]],[[[4,[35]]],[[9,[29]]]],[[[4,[36]]],[[9,[38]]]],[[[4,[32]]],[[9,[38]]]],[[[4,[30]]],[[9,[38]]]],[[[4,[34]]],[[9,[38]]]],[[[4,[27]]],[[9,[38]]]],[[[4,[38]]],[[9,[38]]]],[[[4,[37]]],[[9,[38]]]],[[[4,[31]]],[[9,[38]]]],[[[4,[28]]],[[9,[38]]]],[[[4,[35]]],[[9,[38]]]],[[[4,[[0,[1,2]]]]],[[0,[1,2]]]],[[]],[[]],[[],48],[[],48],[[[4,[30]]],[[9,[33]]]],[[[4,[31]]],[[9,[33]]]],[[[4,[32]]],[[9,[33]]]],[[[4,[27]]],[[9,[33]]]],[[[4,[35]]],[[9,[33]]]],[[[4,[36]]],[[9,[33]]]],[[[4,[28]]],[[9,[33]]]],[[[4,[34]]],[[9,[33]]]],[[[4,[38]]],[[9,[33]]]],[[[4,[37]]],[[9,[33]]]],[[[4,[36]]],[[9,[30]]]],[[[4,[37]]],[[9,[30]]]],[[[4,[38]]],[[9,[30]]]],[[[4,[28]]],[[9,[30]]]],[[[4,[27]]],[[9,[30]]]],[[[4,[34]]],[[9,[30]]]],[[[4,[32]]],[[9,[30]]]],[[[4,[30]]],[[9,[30]]]],[[[4,[35]]],[[9,[30]]]],[[[4,[31]]],[[9,[30]]]],[[[4,[[0,[1,2]]]]],[[4,[[0,[1,2]]]]]],[[],42],[[],42],[[],42],[[],42],[[],49],[[],49],[[],[[4,[[0,[1,2]]]]]]],"c":[],"p":[[8,"Clone"],[8,"Integer"],[8,"Signed"],[3,"Ratio"],[8,"NumAssign"],[8,"FloatCore"],[8,"NumCast"],[8,"Bounded"],[4,"Option"],[8,"CheckedMul"],[8,"CheckedAdd"],[8,"CheckedSub"],[3,"ParseRatioError"],[4,"Ordering"],[15,"bool"],[8,"UpperExp"],[3,"Formatter"],[6,"Result"],[8,"Octal"],[8,"LowerExp"],[8,"Debug"],[8,"LowerHex"],[8,"Binary"],[8,"UpperHex"],[8,"Display"],[15,"f32"],[15,"isize"],[15,"u16"],[15,"i128"],[15,"u64"],[15,"i32"],[15,"u32"],[15,"u128"],[15,"i16"],[15,"usize"],[15,"u8"],[15,"i8"],[15,"i64"],[15,"f64"],[15,"str"],[8,"FromStr"],[4,"Result"],[8,"Hash"],[8,"Hasher"],[8,"Neg"],[8,"Pow"],[8,"Iterator"],[3,"String"],[3,"TypeId"]]},\
"num_traits":{"doc":"Numeric traits for generic mathematics","t":"CCCCCCCCCCCNCCCECCQCNCCIIIICIICDCCICCCCCCCCCCCCCCCCCLLLLAACCFFFALLLLLKAALLMCAACAACLLLLLLLCIIIKKKKIIIIKFKLLLLLKLLLLLKLLLLLLLKLLLLLKLLKKKKKKKKKKIIIKKLKLKKKLKLKKKKKKKKKKLKKLKKKLKKKKLKLKKKKKKLKLKLKLKLKLLLKKKKKKLKKKLKKKKKKKKKKKKKLKLKLKLKKKKKKKLKLKLIILKFKLLFKIKKKKLKKLKKKKKKKLKKKAAAAAAAAQQIIIKKLKKLIIIIIIIIKKKKKKKKIIKKKKIQKIIQKKIIIKKKIIIIKKKKKIIIIIIKKKKKKQIFFKIKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKIIFKFKKKFK","n":["AsPrimitive","Bounded","CheckedAdd","CheckedDiv","CheckedEuclid","CheckedMul","CheckedNeg","CheckedRem","CheckedShl","CheckedShr","CheckedSub","Empty","Euclid","Float","FloatConst","FloatErrorKind","FromBytes","FromPrimitive","FromStrRadixErr","Inv","Invalid","MulAdd","MulAddAssign","Num","NumAssign","NumAssignOps","NumAssignRef","NumCast","NumOps","NumRef","One","ParseFloatError","Pow","PrimInt","RefNum","Saturating","SaturatingAdd","SaturatingMul","SaturatingSub","Signed","ToBytes","ToPrimitive","Unsigned","WrappingAdd","WrappingMul","WrappingNeg","WrappingShl","WrappingShr","WrappingSub","Zero","abs","abs_sub","borrow","borrow","borrow_mut","borrow_mut","bounds","cast","cast","checked_pow","clamp","clamp_max","clamp_min","float","fmt","fmt","fmt","from","from","from_str_radix","identities","int","into","into","kind","one","ops","pow","pow","real","sign","signum","to_string","try_from","try_from","try_into","try_into","type_id","type_id","zero","Bounded","LowerBounded","UpperBounded","max_value","max_value","min_value","min_value","AsPrimitive","FromPrimitive","NumCast","ToPrimitive","as_","cast","from","from_f32","from_f64","from_i128","from_i16","from_i32","from_i64","from_i8","from_isize","from_u128","from_u16","from_u32","from_u64","from_u8","from_usize","to_f32","to_f64","to_i128","to_i16","to_i32","to_i64","to_i8","to_isize","to_u128","to_u16","to_u32","to_u64","to_u8","to_usize","E","FRAC_1_PI","FRAC_1_SQRT_2","FRAC_2_PI","FRAC_2_SQRT_PI","FRAC_PI_2","FRAC_PI_3","FRAC_PI_4","FRAC_PI_6","FRAC_PI_8","Float","FloatConst","FloatCore","LN_10","LN_2","LOG10_2","LOG10_E","LOG2_10","LOG2_E","PI","SQRT_2","TAU","abs","abs","abs_sub","acos","acosh","asin","asinh","atan","atan2","atanh","cbrt","ceil","ceil","classify","classify","copysign","cos","cosh","epsilon","epsilon","exp","exp2","exp_m1","floor","floor","fract","fract","hypot","infinity","infinity","integer_decode","integer_decode","is_finite","is_finite","is_infinite","is_infinite","is_nan","is_nan","is_normal","is_normal","is_sign_negative","is_sign_negative","is_sign_positive","is_sign_positive","is_subnormal","is_subnormal","ln","ln_1p","log","log10","log2","max","max","max_value","max_value","min","min","min_positive_value","min_positive_value","min_value","min_value","mul_add","nan","nan","neg_infinity","neg_infinity","neg_zero","neg_zero","powf","powi","powi","recip","recip","round","round","signum","signum","sin","sin_cos","sinh","sqrt","tan","tanh","to_degrees","to_degrees","to_radians","to_radians","trunc","trunc","One","Zero","is_one","is_zero","one","one","set_one","set_zero","zero","zero","PrimInt","count_ones","count_zeros","from_be","from_le","leading_ones","leading_zeros","pow","reverse_bits","rotate_left","rotate_right","signed_shl","signed_shr","swap_bytes","to_be","to_le","trailing_ones","trailing_zeros","unsigned_shl","unsigned_shr","bytes","checked","euclid","inv","mul_add","overflowing","saturating","wrapping","Bytes","Bytes","FromBytes","NumBytes","ToBytes","from_be_bytes","from_le_bytes","from_ne_bytes","to_be_bytes","to_le_bytes","to_ne_bytes","CheckedAdd","CheckedDiv","CheckedMul","CheckedNeg","CheckedRem","CheckedShl","CheckedShr","CheckedSub","checked_add","checked_div","checked_mul","checked_neg","checked_rem","checked_shl","checked_shr","checked_sub","CheckedEuclid","Euclid","checked_div_euclid","checked_rem_euclid","div_euclid","rem_euclid","Inv","Output","inv","MulAdd","MulAddAssign","Output","mul_add","mul_add_assign","OverflowingAdd","OverflowingMul","OverflowingSub","overflowing_add","overflowing_mul","overflowing_sub","Saturating","SaturatingAdd","SaturatingMul","SaturatingSub","saturating_add","saturating_add","saturating_mul","saturating_sub","saturating_sub","WrappingAdd","WrappingMul","WrappingNeg","WrappingShl","WrappingShr","WrappingSub","wrapping_add","wrapping_mul","wrapping_neg","wrapping_shl","wrapping_shr","wrapping_sub","Output","Pow","checked_pow","pow","pow","Real","abs","abs_sub","acos","acosh","asin","asinh","atan","atan2","atanh","cbrt","ceil","cos","cosh","epsilon","exp","exp2","exp_m1","floor","fract","hypot","is_sign_negative","is_sign_positive","ln","ln_1p","log","log10","log2","max","max_value","min","min_positive_value","min_value","mul_add","powf","powi","recip","round","signum","sin","sin_cos","sinh","sqrt","tan","tanh","to_degrees","to_radians","trunc","Signed","Unsigned","abs","abs","abs_sub","abs_sub","is_negative","is_positive","signum","signum"],"q":[[0,"num_traits"],[90,"num_traits::bounds"],[97,"num_traits::cast"],[132,"num_traits::float"],[243,"num_traits::identities"],[253,"num_traits::int"],[273,"num_traits::ops"],[281,"num_traits::ops::bytes"],[292,"num_traits::ops::checked"],[308,"num_traits::ops::euclid"],[314,"num_traits::ops::inv"],[317,"num_traits::ops::mul_add"],[322,"num_traits::ops::overflowing"],[328,"num_traits::ops::saturating"],[337,"num_traits::ops::wrapping"],[349,"num_traits::pow"],[354,"num_traits::real"],[402,"num_traits::sign"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","The base trait for numeric types, covering <code>0</code> and <code>1</code> values, …","The trait for <code>Num</code> types which also implement assignment …","Generic trait for types implementing numeric assignment …","The trait for <code>NumAssign</code> types which also implement …","","Generic trait for types implementing basic numeric …","The trait for <code>Num</code> types which also implement numeric …","","","","","The trait for <code>Num</code> references which implement numeric …","","","","","","","","","","","","","","","","","","","","","","","","","","A value bounded by a minimum and a maximum","A value bounded by a maximum value","A value bounded by a minimum value","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Convert from a string and radix (typically <code>2..=36</code>).","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Numbers which have upper and lower bounds","Numbers which have lower bounds","Numbers which have upper bounds","Returns the largest finite number this type can represent","Returns the largest finite number this type can represent","Returns the smallest finite number this type can represent","Returns the smallest finite number this type can represent","A generic interface for casting between machine scalars …","A generic trait for converting a number to a value.","An interface for casting between machine scalars.","A generic trait for converting a value to a number.","Convert a value to another, using the <code>as</code> operator.","Cast from one machine scalar to another.","Creates a number from another value that can be converted …","Converts a <code>f32</code> to return an optional value of this type. …","Converts a <code>f64</code> to return an optional value of this type. …","Converts an <code>i128</code> to return an optional value of this type. …","Converts an <code>i16</code> to return an optional value of this type. …","Converts an <code>i32</code> to return an optional value of this type. …","Converts an <code>i64</code> to return an optional value of this type. …","Converts an <code>i8</code> to return an optional value of this type. …","Converts an <code>isize</code> to return an optional value of this …","Converts an <code>u128</code> to return an optional value of this type. …","Converts an <code>u16</code> to return an optional value of this type. …","Converts an <code>u32</code> to return an optional value of this type. …","Converts an <code>u64</code> to return an optional value of this type. …","Converts an <code>u8</code> to return an optional value of this type. …","Converts a <code>usize</code> to return an optional value of this type. …","Converts the value of <code>self</code> to an <code>f32</code>. Overflows may map to …","Converts the value of <code>self</code> to an <code>f64</code>. Overflows may map to …","Converts the value of <code>self</code> to an <code>i128</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i16</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i32</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i64</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i8</code>. If the value cannot be","Converts the value of <code>self</code> to an <code>isize</code>. If the value …","Converts the value of <code>self</code> to a <code>u128</code>. If the value cannot …","Converts the value of <code>self</code> to a <code>u16</code>. If the value cannot be","Converts the value of <code>self</code> to a <code>u32</code>. If the value cannot be","Converts the value of <code>self</code> to a <code>u64</code>. If the value cannot be","Converts the value of <code>self</code> to a <code>u8</code>. If the value cannot be …","Converts the value of <code>self</code> to a <code>usize</code>. If the value cannot …","Return Euler’s number.","Return <code>1.0 / π</code>.","Return <code>1.0 / sqrt(2.0)</code>.","Return <code>2.0 / π</code>.","Return <code>2.0 / sqrt(π)</code>.","Return <code>π / 2.0</code>.","Return <code>π / 3.0</code>.","Return <code>π / 4.0</code>.","Return <code>π / 6.0</code>.","Return <code>π / 8.0</code>.","Generic trait for floating point numbers","","Generic trait for floating point numbers that works with …","Return <code>ln(10.0)</code>.","Return <code>ln(2.0)</code>.","Return <code>log10(2.0)</code>.","Return <code>log10(e)</code>.","Return <code>log2(10.0)</code>.","Return <code>log2(e)</code>.","Return Archimedes’ constant <code>π</code>.","Return <code>sqrt(2.0)</code>.","Return the full circle constant <code>τ</code>.","Computes the absolute value of <code>self</code>. Returns <code>Float::nan()</code> …","Computes the absolute value of <code>self</code>. Returns …","The positive difference of two numbers.","Computes the arccosine of a number. Return value is in …","Inverse hyperbolic cosine function.","Computes the arcsine of a number. Return value is in …","Inverse hyperbolic sine function.","Computes the arctangent of a number. Return value is in …","Computes the four quadrant arctangent of <code>self</code> (<code>y</code>) and <code>other</code>…","Inverse hyperbolic tangent function.","Take the cubic root of a number.","Returns the smallest integer greater than or equal to a …","Returns the smallest integer greater than or equal to a …","Returns the floating point category of the number. If only …","Returns the floating point category of the number. If only …","Returns a number composed of the magnitude of <code>self</code> and the …","Computes the cosine of a number (in radians).","Hyperbolic cosine function.","Returns epsilon, a small positive value.","Returns epsilon, a small positive value.","Returns <code>e^(self)</code>, (the exponential function).","Returns <code>2^(self)</code>.","Returns <code>e^(self) - 1</code> in a way that is accurate even if the …","Returns the largest integer less than or equal to a number.","Returns the largest integer less than or equal to a number.","Returns the fractional part of a number.","Returns the fractional part of a number.","Calculate the length of the hypotenuse of a right-angle …","Returns positive infinity.","Returns the infinite value.","Returns the mantissa, base 2 exponent, and sign as …","Returns the mantissa, base 2 exponent, and sign as …","Returns <code>true</code> if this number is neither infinite nor <code>NaN</code>.","Returns <code>true</code> if the number is neither infinite or NaN.","Returns <code>true</code> if this value is positive infinity or …","Returns <code>true</code> if the number is infinite.","Returns <code>true</code> if this value is <code>NaN</code> and false otherwise.","Returns <code>true</code> if the number is NaN.","Returns <code>true</code> if the number is neither zero, infinite, …","Returns <code>true</code> if the number is neither zero, infinite, …","Returns <code>true</code> if <code>self</code> is negative, including <code>-0.0</code>, …","Returns <code>true</code> if <code>self</code> is negative, including <code>-0.0</code> and …","Returns <code>true</code> if <code>self</code> is positive, including <code>+0.0</code>, …","Returns <code>true</code> if <code>self</code> is positive, including <code>+0.0</code> and …","Returns <code>true</code> if the number is subnormal.","Returns <code>true</code> if the number is subnormal.","Returns the natural logarithm of the number.","Returns <code>ln(1+n)</code> (natural logarithm) more accurately than if","Returns the logarithm of the number with respect to an …","Returns the base 10 logarithm of the number.","Returns the base 2 logarithm of the number.","Returns the maximum of the two numbers.","Returns the maximum of the two numbers.","Returns the largest finite value that this type can …","Returns the largest finite value that this type can …","Returns the minimum of the two numbers.","Returns the minimum of the two numbers.","Returns the smallest positive, normalized value that this …","Returns the smallest positive, normalized value that this …","Returns the smallest finite value that this type can …","Returns the smallest finite value that this type can …","Fused multiply-add. Computes <code>(self * a) + b</code> with only one …","Returns NaN.","Returns the <code>NaN</code> value.","Returns negative infinity.","Returns the negative infinite value.","Returns <code>-0.0</code>.","Returns <code>-0.0</code>.","Raise a number to a floating point power.","Raise a number to an integer power.","Raise a number to an integer power.","Take the reciprocal (inverse) of a number, <code>1/x</code>.","Returns the reciprocal (multiplicative inverse) of the …","Returns the nearest integer to a number. Round half-way …","Returns the nearest integer to a number. Round half-way …","Returns a number that represents the sign of <code>self</code>.","Returns a number that represents the sign of <code>self</code>.","Computes the sine of a number (in radians).","Simultaneously computes the sine and cosine of the number, …","Hyperbolic sine function.","Take the square root of a number.","Computes the tangent of a number (in radians).","Hyperbolic tangent function.","Converts to degrees, assuming the number is in radians.","Converts radians to degrees.","Converts to radians, assuming the number is in degrees.","Converts degrees to radians.","Return the integer part of a number.","Return the integer part of a number.","Defines a multiplicative identity element for <code>Self</code>.","Defines an additive identity element for <code>Self</code>.","Returns <code>true</code> if <code>self</code> is equal to the multiplicative …","Returns <code>true</code> if <code>self</code> is equal to the additive identity.","Returns the multiplicative identity, <code>1</code>.","Returns the multiplicative identity element of <code>Self</code>, <code>1</code>.","Sets <code>self</code> to the multiplicative identity element of <code>Self</code>, <code>1</code>…","Sets <code>self</code> to the additive identity element of <code>Self</code>, <code>0</code>.","Returns the additive identity, <code>0</code>.","Returns the additive identity element of <code>Self</code>, <code>0</code>.","Generic trait for primitive integers.","Returns the number of ones in the binary representation of …","Returns the number of zeros in the binary representation …","Convert an integer from big endian to the target’s …","Convert an integer from little endian to the target’s …","Returns the number of leading ones in the binary …","Returns the number of leading zeros in the binary …","Raises self to the power of <code>exp</code>, using exponentiation by …","Reverses the order of bits in the integer.","Shifts the bits to the left by a specified amount, <code>n</code>, …","Shifts the bits to the right by a specified amount, <code>n</code>, …","Shifts the bits to the left by a specified amount, <code>n</code>, …","Shifts the bits to the right by a specified amount, <code>n</code>, …","Reverses the byte order of the integer.","Convert <code>self</code> to big endian from the target’s endianness.","Convert <code>self</code> to little endian from the target’s …","Returns the number of trailing ones in the binary …","Returns the number of trailing zeros in the binary …","Shifts the bits to the left by a specified amount, <code>n</code>, …","Shifts the bits to the right by a specified amount, <code>n</code>, …","","","","","","","","","","","","","","Create a number from its representation as a byte array in …","Create a number from its representation as a byte array in …","Create a number from its memory representation as a byte …","Return the memory representation of this number as a byte …","Return the memory representation of this number as a byte …","Return the memory representation of this number as a byte …","Performs addition that returns <code>None</code> instead of wrapping …","Performs division that returns <code>None</code> instead of panicking …","Performs multiplication that returns <code>None</code> instead of …","Performs negation that returns <code>None</code> if the result can’t …","Performs an integral remainder that returns <code>None</code> instead …","Performs a left shift that returns <code>None</code> on shifts larger …","Performs a right shift that returns <code>None</code> on shifts larger …","Performs subtraction that returns <code>None</code> instead of wrapping …","Adds two numbers, checking for overflow. If overflow …","Divides two numbers, checking for underflow, overflow and …","Multiplies two numbers, checking for underflow or …","Negates a number, returning <code>None</code> for results that can’t …","Finds the remainder of dividing two numbers, checking for …","Checked shift left. Computes <code>self &lt;&lt; rhs</code>, returning <code>None</code> …","Checked shift right. Computes <code>self &gt;&gt; rhs</code>, returning <code>None</code> …","Subtracts two numbers, checking for underflow. If …","","","Performs euclid division that returns <code>None</code> instead of …","Finds the euclid remainder of dividing two numbers, …","Calculates Euclidean division, the matching method for …","Calculates the least nonnegative remainder of <code>self (mod v)</code>.","Unary operator for retrieving the multiplicative inverse, …","The result after applying the operator.","Returns the multiplicative inverse of <code>self</code>.","Fused multiply-add. Computes <code>(self * a) + b</code> with only one …","The fused multiply-add assignment operation …","The resulting type after applying the fused multiply-add.","Performs the fused multiply-add operation <code>(self * a) + b</code>","Performs the fused multiply-add assignment operation …","Performs addition with a flag for overflow.","Performs multiplication with a flag for overflow.","Performs substraction with a flag for overflow.","Returns a tuple of the sum along with a boolean indicating …","Returns a tuple of the product along with a boolean …","Returns a tuple of the difference along with a boolean …","Saturating math operations. Deprecated, use <code>SaturatingAdd</code>, …","Performs addition that saturates at the numeric bounds …","Performs multiplication that saturates at the numeric …","Performs subtraction that saturates at the numeric bounds …","Saturating addition operator. Returns a+b, saturating at …","Saturating addition. Computes <code>self + other</code>, saturating at …","Saturating multiplication. Computes <code>self * other</code>, …","Saturating subtraction operator. Returns a-b, saturating …","Saturating subtraction. Computes <code>self - other</code>, saturating …","Performs addition that wraps around on overflow.","Performs multiplication that wraps around on overflow.","Performs a negation that does not panic.","Performs a left shift that does not panic.","Performs a right shift that does not panic.","Performs subtraction that wraps around on overflow.","Wrapping (modular) addition. Computes <code>self + other</code>, …","Wrapping (modular) multiplication. Computes <code>self * other</code>, …","Wrapping (modular) negation. Computes <code>-self</code>, wrapping …","Panic-free bitwise shift-left; yields <code>self &lt;&lt; mask(rhs)</code>, …","Panic-free bitwise shift-right; yields <code>self &gt;&gt; mask(rhs)</code>, …","Wrapping (modular) subtraction. Computes <code>self - other</code>, …","The result after applying the operator.","Binary operator for raising a value to a power.","Raises a value to the power of exp, returning <code>None</code> if an …","Raises a value to the power of exp, using exponentiation …","Returns <code>self</code> to the power <code>rhs</code>.","A trait for real number types that do not necessarily have …","Computes the absolute value of <code>self</code>. Returns <code>Float::nan()</code> …","The positive difference of two numbers.","Computes the arccosine of a number. Return value is in …","Inverse hyperbolic cosine function.","Computes the arcsine of a number. Return value is in …","Inverse hyperbolic sine function.","Computes the arctangent of a number. Return value is in …","Computes the four quadrant arctangent of <code>self</code> (<code>y</code>) and <code>other</code>…","Inverse hyperbolic tangent function.","Take the cubic root of a number.","Returns the smallest integer greater than or equal to a …","Computes the cosine of a number (in radians).","Hyperbolic cosine function.","Returns epsilon, a small positive value.","Returns <code>e^(self)</code>, (the exponential function).","Returns <code>2^(self)</code>.","Returns <code>e^(self) - 1</code> in a way that is accurate even if the …","Returns the largest integer less than or equal to a number.","Returns the fractional part of a number.","Calculate the length of the hypotenuse of a right-angle …","Returns <code>true</code> if <code>self</code> is negative, including <code>-0.0</code>, …","Returns <code>true</code> if <code>self</code> is positive, including <code>+0.0</code>, …","Returns the natural logarithm of the number.","Returns <code>ln(1+n)</code> (natural logarithm) more accurately than if","Returns the logarithm of the number with respect to an …","Returns the base 10 logarithm of the number.","Returns the base 2 logarithm of the number.","Returns the maximum of the two numbers.","Returns the largest finite value that this type can …","Returns the minimum of the two numbers.","Returns the smallest positive, normalized value that this …","Returns the smallest finite value that this type can …","Fused multiply-add. Computes <code>(self * a) + b</code> with only one …","Raise a number to a real number power.","Raise a number to an integer power.","Take the reciprocal (inverse) of a number, <code>1/x</code>.","Returns the nearest integer to a number. Round half-way …","Returns a number that represents the sign of <code>self</code>.","Computes the sine of a number (in radians).","Simultaneously computes the sine and cosine of the number, …","Hyperbolic sine function.","Take the square root of a number.","Computes the tangent of a number (in radians).","Hyperbolic tangent function.","Converts radians to degrees.","Converts degrees to radians.","Return the integer part of a number.","Useful functions for signed numbers (i.e. numbers that can …","A trait for values which cannot be negative","Computes the absolute value.","Computes the absolute value.","The positive difference of two numbers.","The positive difference of two numbers.","Returns true if the number is negative and false if the …","Returns true if the number is positive and false if the …","Returns the sign of the number.","Returns the sign of the number."],"i":[0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,39,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,5,2,5,0,0,0,0,0,0,0,0,2,5,5,2,5,39,0,0,2,5,5,0,0,0,0,0,0,0,5,2,5,2,5,2,5,0,0,0,0,40,41,40,42,0,0,0,0,43,0,11,44,44,44,44,44,44,44,44,44,44,44,44,44,44,13,13,13,13,13,13,13,13,13,13,13,13,13,13,45,45,45,45,45,45,45,45,45,45,0,0,0,45,45,45,45,45,45,45,45,45,46,47,46,46,46,46,46,46,46,46,46,46,47,47,46,46,46,46,47,46,46,46,46,46,47,46,47,46,47,46,47,46,46,47,46,47,46,47,46,47,46,47,46,47,47,46,46,46,46,46,46,46,47,47,46,46,47,47,46,47,46,46,47,46,47,46,47,46,46,46,47,46,47,46,47,46,47,46,46,46,46,46,46,47,46,47,46,46,47,0,0,33,34,0,33,33,34,0,34,0,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,0,0,0,0,0,0,0,0,49,50,0,0,0,50,50,50,49,49,49,0,0,0,0,0,0,0,0,51,52,36,53,54,55,56,57,0,0,58,58,59,59,0,60,60,0,0,61,61,62,0,0,0,63,64,65,0,0,0,0,66,67,68,66,69,0,0,0,0,0,0,70,71,72,73,74,75,76,0,0,0,76,0,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,0,0,0,38,0,38,38,38,0,38],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],0,0,0,0,[[1,1,1],1],[[1,1],1],[[1,1],1],0,[[2,3],4],[[5,3],4],[[5,3],4],[[]],[[]],[[6,7],8],0,0,[[]],[[]],0,0,0,0,0,0,0,0,[[],9],[[],8],[[],8],[[],8],[[],8],[[],10],[[],10],0,0,0,0,[[]],[[]],[[]],[[]],0,0,0,0,[[]],[11,[[12,[11]]]],[13,12],[14,12],[15,12],[16,12],[17,12],[18,12],[19,12],[20,12],[21,12],[22,12],[23,12],[7,12],[24,12],[25,12],[26,12],[[],[[12,[14]]]],[[],[[12,[15]]]],[[],[[12,[16]]]],[[],[[12,[17]]]],[[],[[12,[18]]]],[[],[[12,[19]]]],[[],[[12,[20]]]],[[],[[12,[21]]]],[[],[[12,[22]]]],[[],[[12,[23]]]],[[],[[12,[7]]]],[[],[[12,[24]]]],[[],[[12,[25]]]],[[],[[12,[26]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[]],[[]],[[],[[0,[27,[28,[[0,[27,[28,[[0,[27,[28,[[0,[27,[28,[[0,[27,28]]]]]]]]]]]]]]]]]]]],[[]],[[],[[0,[27,[28,[[0,[27,[28,[[0,[27,[28,[[0,[27,[28,[[0,[27,28]]]]]]]]]]]]]]]]]]]],[[]],[[]],[[]],[[],[[0,[27,[29,[[0,[27,[29,[[0,[27,[29,[[0,[27,[29,[[0,[27,29]]]]]]]]]]]]]]]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],30],[[],30],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[18],[18],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[32,31],[[],31],[[],33],[[]],[[]],[[]],[[],34],[[]],0,[[],7],[[],7],[[]],[[]],[[],7],[[],7],[7],[[]],[7],[7],[7],[7],[[]],[[]],[[]],[[],7],[[],7],[7],[7],0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,[[],12],[[],12],[[],12],[[],12],[[],12],[7,12],[7,12],[[],12],0,0,[[],12],[[],12],[[]],[[]],0,0,[[]],0,0,0,[[]],[[]],0,0,0,[[]],[[]],[[]],0,0,0,0,[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,[[]],[[]],[[]],[7],[7],[[]],0,0,[[[0,[35,33,36]],26],[[12,[[0,[35,33,36]]]]]],[[[0,[35,33,[37,[[0,[35,33,[37,[[0,[35,33,[37,[[0,[35,33,[37,[[0,[35,33,37]]]]]]]]]]]]]]]]]],26],[[0,[35,33,[37,[[0,[35,33,[37,[[0,[35,33,[37,[[0,[35,33,[37,[[0,[35,33,37]]]]]]]]]]]]]]]]]]]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],31],[[],31],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[18],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[38,38],[[]],[[38,38],38],[[]],[[],31],[[],31],[38,38],[[]]],"c":[],"p":[[8,"PartialOrd"],[4,"FloatErrorKind"],[3,"Formatter"],[6,"Result"],[3,"ParseFloatError"],[15,"str"],[15,"u32"],[4,"Result"],[3,"String"],[3,"TypeId"],[8,"NumCast"],[4,"Option"],[8,"ToPrimitive"],[15,"f32"],[15,"f64"],[15,"i128"],[15,"i16"],[15,"i32"],[15,"i64"],[15,"i8"],[15,"isize"],[15,"u128"],[15,"u16"],[15,"u64"],[15,"u8"],[15,"usize"],[8,"Sized"],[8,"Div"],[8,"Add"],[4,"FpCategory"],[15,"bool"],[8,"PartialEq"],[8,"One"],[8,"Zero"],[8,"Clone"],[8,"CheckedMul"],[8,"Mul"],[8,"Signed"],[8,"Num"],[8,"Bounded"],[8,"UpperBounded"],[8,"LowerBounded"],[8,"AsPrimitive"],[8,"FromPrimitive"],[8,"FloatConst"],[8,"Float"],[8,"FloatCore"],[8,"PrimInt"],[8,"ToBytes"],[8,"FromBytes"],[8,"CheckedAdd"],[8,"CheckedDiv"],[8,"CheckedNeg"],[8,"CheckedRem"],[8,"CheckedShl"],[8,"CheckedShr"],[8,"CheckedSub"],[8,"CheckedEuclid"],[8,"Euclid"],[8,"Inv"],[8,"MulAdd"],[8,"MulAddAssign"],[8,"OverflowingAdd"],[8,"OverflowingMul"],[8,"OverflowingSub"],[8,"Saturating"],[8,"SaturatingAdd"],[8,"SaturatingMul"],[8,"SaturatingSub"],[8,"WrappingAdd"],[8,"WrappingMul"],[8,"WrappingNeg"],[8,"WrappingShl"],[8,"WrappingShr"],[8,"WrappingSub"],[8,"Pow"],[8,"Real"]]},\
"once_cell":{"doc":"Overview","t":"AAADDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["race","sync","unsync","OnceBool","OnceBox","OnceNonZeroUsize","OnceRef","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","default","default","default","default","drop","fmt","fmt","fmt","fmt","from","from","from","from","get","get","get","get","get_or_init","get_or_init","get_or_init","get_or_init","get_or_try_init","get_or_try_init","get_or_try_init","get_or_try_init","into","into","into","into","new","new","new","new","set","set","set","set","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","Lazy","OnceCell","borrow","borrow","borrow_mut","borrow_mut","clone","clone_from","clone_into","default","default","deref","deref_mut","eq","equivalent","fmt","fmt","force","force_mut","from","from","from","from","get","get","get_mut","get_mut","get_or_init","get_or_try_init","get_unchecked","into","into","into_inner","into_value","new","new","set","take","to_owned","try_from","try_from","try_insert","try_into","try_into","type_id","type_id","wait","with_value","Lazy","OnceCell","borrow","borrow","borrow_mut","borrow_mut","clone","clone_from","clone_into","default","default","deref","deref_mut","eq","equivalent","fmt","fmt","force","force_mut","from","from","from","from","get","get","get_mut","get_mut","get_or_init","get_or_try_init","into","into","into_inner","into_value","new","new","set","take","to_owned","try_from","try_from","try_insert","try_into","try_into","type_id","type_id","with_value"],"q":[[0,"once_cell"],[3,"once_cell::race"],[64,"once_cell::sync"],[112,"once_cell::unsync"]],"d":["Thread-safe, non-blocking, “first one wins” flavor of …","Thread-safe, blocking version of <code>OnceCell</code>.","Single-threaded version of <code>OnceCell</code>.","A thread-safe cell which can be written to only once.","A thread-safe cell which can be written to only once.","A thread-safe cell which can be written to only once.","A thread-safe cell which can be written to only once.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Gets a reference to the underlying value.","Gets a reference to the underlying value.","Gets the underlying value.","Gets the underlying value.","Gets the contents of the cell, initializing it with <code>f</code> if …","Gets the contents of the cell, initializing it with <code>f</code> if …","Gets the contents of the cell, initializing it with <code>f</code> if …","Gets the contents of the cell, initializing it with <code>f</code> if …","Gets the contents of the cell, initializing it with <code>f</code> if …","Gets the contents of the cell, initializing it with <code>f</code> if …","Gets the contents of the cell, initializing it with <code>f</code> if …","Gets the contents of the cell, initializing it with <code>f</code> if …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Creates a new empty cell.","Creates a new empty cell.","Creates a new empty cell.","Creates a new empty cell.","Sets the contents of this cell to <code>value</code>.","Sets the contents of this cell to <code>value</code>.","Sets the contents of this cell to <code>value</code>.","Sets the contents of this cell to <code>value</code>.","","","","","","","","","","","","","A value which is initialized on the first access.","A thread-safe cell which can be written to only once.","","","","","","","","","Creates a new lazy value using <code>Default</code> as the initializing …","","","","","","","Forces the evaluation of this lazy value and returns a …","Forces the evaluation of this lazy value and returns a …","Returns the argument unchanged.","","","Returns the argument unchanged.","Gets the reference to the underlying value.","Gets the reference to the result of this lazy value if it …","Gets the mutable reference to the underlying value.","Gets the reference to the result of this lazy value if it …","Gets the contents of the cell, initializing it with <code>f</code> if …","Gets the contents of the cell, initializing it with <code>f</code> if …","Get the reference to the underlying value, without …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consumes the <code>OnceCell</code>, returning the wrapped value. Returns","Consumes this <code>Lazy</code> returning the stored value.","Creates a new empty cell.","Creates a new lazy value with the given initializing …","Sets the contents of this cell to <code>value</code>.","Takes the value out of this <code>OnceCell</code>, moving it back to an …","","","","Like <code>set</code>, but also returns a reference to the final cell …","","","","","Gets the reference to the underlying value, blocking the …","Creates a new initialized cell.","A value which is initialized on the first access.","A cell which can be written to only once. It is not thread …","","","","","","","","","Creates a new lazy value using <code>Default</code> as the initializing …","","","","","","","Forces the evaluation of this lazy value and returns a …","Forces the evaluation of this lazy value and returns a …","","Returns the argument unchanged.","","Returns the argument unchanged.","Gets a reference to the underlying value.","Gets the reference to the result of this lazy value if it …","Gets a mutable reference to the underlying value.","Gets the mutable reference to the result of this lazy …","Gets the contents of the cell, initializing it with <code>f</code> if …","Gets the contents of the cell, initializing it with <code>f</code> if …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consumes the <code>OnceCell</code>, returning the wrapped value.","Consumes this <code>Lazy</code> returning the stored value.","Creates a new empty cell.","Creates a new lazy value with the given initializing …","Sets the contents of this cell to <code>value</code>.","Takes the value out of this <code>OnceCell</code>, moving it back to an …","","","","Like <code>set</code>, but also returns a reference to the final cell …","","","","","Creates a new initialized cell."],"i":[0,0,0,0,0,0,0,1,2,3,4,1,2,3,4,1,2,3,4,2,1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4,0,0,15,17,15,17,15,15,15,15,17,17,17,15,15,15,17,17,17,15,15,15,17,15,17,15,17,15,15,15,15,17,15,17,15,17,15,15,15,15,17,15,15,17,15,17,15,15,0,0,21,22,21,22,21,21,21,21,22,22,22,21,21,21,22,22,22,21,21,21,22,21,22,21,22,21,21,21,22,21,22,21,22,21,21,21,21,22,21,21,22,21,22,21],"f":[0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],1],[[],2],[[],3],[[],4],[2],[[1,5],6],[[2,5],6],[[3,5],6],[[4,5],6],[[]],[[]],[[]],[[]],[1,7],[2,7],[3,[[7,[8]]]],[4,[[7,[9]]]],[[1,10]],[[2,10]],[[3,10],8],[[4,10],9],[[1,10],11],[[2,10],11],[[3,10],[[11,[8]]]],[[4,10],[[11,[9]]]],[[]],[[]],[[]],[[]],[[],1],[[],2],[[],3],[[],4],[1,11],[[2,12],[[11,[12]]]],[[3,8],11],[[4,9],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],13],[[],13],[[],13],[[],13],0,0,[[]],[[]],[[]],[[]],[[[15,[14]]],[[15,[14]]]],[[[15,[14]],[15,[14]]]],[[]],[[],15],[[],[[17,[16]]]],[[[17,[10]]]],[[[17,[10]]]],[[[15,[18]],[15,[18]]],9],[[],9],[[[15,[19]],5],6],[[[17,[19]],5],6],[[[17,[10]]]],[[[17,[10]]]],[[]],[[],15],[20],[[]],[15,7],[[[17,[10]]],7],[15,7],[[[17,[10]]],7],[[15,10]],[[15,10],11],[15],[[]],[[]],[15,7],[17,11],[[],15],[[],17],[15,11],[15,7],[[]],[[],11],[[],11],[15,11],[[],11],[[],11],[[],13],[[],13],[15],[[],15],0,0,[[]],[[]],[[]],[[]],[[[21,[14]]],[[21,[14]]]],[[[21,[14]],[21,[14]]]],[[]],[[],21],[[],[[22,[16]]]],[[[22,[10]]]],[[[22,[10]]]],[[[21,[18]],[21,[18]]],9],[[],9],[[[21,[19]],5],6],[[[22,[19]],5],6],[[[22,[10]]]],[[[22,[10]]]],[20],[[]],[[],21],[[]],[21,7],[[[22,[10]]],7],[21,7],[[[22,[10]]],7],[[21,10]],[[21,10],11],[[]],[[]],[21,7],[22,11],[[],21],[[],22],[21,11],[21,7],[[]],[[],11],[[],11],[21,11],[[],11],[[],11],[[],13],[[],13],[[],21]],"c":[],"p":[[3,"OnceRef"],[3,"OnceBox"],[3,"OnceNonZeroUsize"],[3,"OnceBool"],[3,"Formatter"],[6,"Result"],[4,"Option"],[3,"NonZeroUsize"],[15,"bool"],[8,"FnOnce"],[4,"Result"],[3,"Box"],[3,"TypeId"],[8,"Clone"],[3,"OnceCell"],[8,"Default"],[3,"Lazy"],[8,"PartialEq"],[8,"Debug"],[15,"never"],[3,"OnceCell"],[3,"Lazy"]]},\
"osmesa_sys":{"doc":"","t":"RRRRRRRRRRRRRRRRRRRRRRRGFMGFMFMFMFMFMFMFMFMFMFMFMDLLLLLLLLLDLLLLLLL","n":["OSMESA_ACCUM_BITS","OSMESA_ARGB","OSMESA_BGR","OSMESA_BGRA","OSMESA_COLOR_INDEX","OSMESA_COMPAT_PROFILE","OSMESA_CONTEXT_MAJOR_VERSION","OSMESA_CONTEXT_MINOR_VERSION","OSMESA_CORE_PROFILE","OSMESA_DEPTH_BITS","OSMESA_FORMAT","OSMESA_HEIGHT","OSMESA_MAX_HEIGHT","OSMESA_MAX_WIDTH","OSMESA_PROFILE","OSMESA_RGB","OSMESA_RGBA","OSMESA_RGB_565","OSMESA_ROW_LENGTH","OSMESA_STENCIL_BITS","OSMESA_TYPE","OSMESA_WIDTH","OSMESA_Y_UP","OSMESAproc","OSMesaColorClamp","OSMesaColorClamp","OSMesaContext","OSMesaCreateContext","OSMesaCreateContext","OSMesaCreateContextAttribs","OSMesaCreateContextAttribs","OSMesaCreateContextExt","OSMesaCreateContextExt","OSMesaDestroyContext","OSMesaDestroyContext","OSMesaGetColorBuffer","OSMesaGetColorBuffer","OSMesaGetCurrentContext","OSMesaGetCurrentContext","OSMesaGetDepthBuffer","OSMesaGetDepthBuffer","OSMesaGetIntegerv","OSMesaGetIntegerv","OSMesaGetProcAddress","OSMesaGetProcAddress","OSMesaMakeCurrent","OSMesaMakeCurrent","OSMesaPixelStore","OSMesaPixelStore","OsMesa","borrow","borrow","borrow_mut","borrow_mut","from","from","into","into","open","osmesa_context","try_from","try_from","try_into","try_into","try_loading","type_id","type_id"],"q":[[0,"osmesa_sys"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Symbols loaded from a shared library.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Tries to open the dynamic library.","","","","","","Try loading the static symbols linked to this library.","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,9,0,9,0,9,0,9,0,9,0,9,0,9,0,9,0,9,0,9,0,9,0,13,9,13,9,13,9,13,9,9,0,13,9,13,9,9,13,9],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],0,0,[[2,3],3],0,[[4,3],3],0,[[2,4,4,4,3],3],0,[3],0,[[3,4,4,4,5],1],0,[[],3],0,[[3,4,4,4,5],1],0,[[4,4]],0,[6,7],0,[[3,5,2,4,4],1],0,[[4,4]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[8,[[11,[9,10]]]],0,[[],11],[[],11],[[],11],[[],11],[[],[[11,[9,10]]]],[[],12],[[],12]],"c":[],"p":[[6,"c_uchar"],[6,"c_uint"],[6,"OSMesaContext"],[6,"c_int"],[6,"c_void"],[6,"c_char"],[6,"OSMESAproc"],[3,"Path"],[3,"OsMesa"],[4,"LoadingError"],[4,"Result"],[3,"TypeId"],[3,"osmesa_context"]]},\
"parking":{"doc":"Thread parking and unparking.","t":"DDLLLLLLLLLLLLLLFLLLLLLLLLLLLLLL","n":["Parker","Unparker","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","default","fmt","fmt","from","from","into","into","new","pair","park","park_deadline","park_timeout","same_parker","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","unpark","unpark","unparker","will_unpark"],"q":[[0,"parking"]],"d":["Waits for a notification.","Notifies a parker.","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Creates a new parker.","Creates a parker and an associated unparker.","Blocks until notified and then goes back into unnotified …","Blocks until notified and then goes back into unnotified …","Blocks until notified and then goes back into unnotified …","Indicates whether two unparkers will unpark the same …","","","","","","","","Notifies the parker.","Notifies the associated parker.","Returns a handle for unparking.","Indicates whether this unparker will unpark the associated …"],"i":[0,0,2,1,2,1,1,1,2,2,1,2,1,2,1,2,0,2,2,2,1,1,2,1,2,1,2,1,2,1,2,1],"f":[0,0,[[]],[[]],[[]],[[]],[1,1],[[]],[[],2],[[2,3],4],[[1,3],4],[[]],[[]],[[]],[[]],[[],2],[[]],[2],[[2,5],6],[[2,7],6],[[1,1],6],[[]],[[],8],[[],8],[[],8],[[],8],[[],9],[[],9],[2,6],[1,6],[2,1],[[1,2],6]],"c":[],"p":[[3,"Unparker"],[3,"Parker"],[3,"Formatter"],[6,"Result"],[3,"Instant"],[15,"bool"],[3,"Duration"],[4,"Result"],[3,"TypeId"]]},\
"parking_lot":{"doc":"This library provides implementations of <code>Mutex</code>, <code>RwLock</code>, …","t":"DNGGNGGGGGGGNDENDDDDGGGGGGDLLLLLLLLLLLLLLLLLLLLLLLLLLLFFFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLCLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["Condvar","Done","FairMutex","FairMutexGuard","InProgress","MappedFairMutexGuard","MappedMutexGuard","MappedReentrantMutexGuard","MappedRwLockReadGuard","MappedRwLockWriteGuard","Mutex","MutexGuard","New","Once","OnceState","Poisoned","RawFairMutex","RawMutex","RawRwLock","RawThreadId","ReentrantMutex","ReentrantMutexGuard","RwLock","RwLockReadGuard","RwLockUpgradableReadGuard","RwLockWriteGuard","WaitTimeoutResult","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bump","bump","bump_exclusive","bump_shared","bump_upgradable","call_once","call_once_force","clone","clone","clone_into","clone_into","const_fair_mutex","const_mutex","const_reentrant_mutex","const_rwlock","default","default","done","downgrade","downgrade_to_upgradable","downgrade_upgradable","eq","eq","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","is_locked","is_locked","is_locked","is_locked_exclusive","lock","lock","lock_api","lock_exclusive","lock_shared","lock_shared_recursive","lock_upgradable","new","new","nonzero_thread_id","notify_all","notify_one","poisoned","state","timed_out","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_lock","try_lock","try_lock_exclusive","try_lock_exclusive_for","try_lock_exclusive_until","try_lock_for","try_lock_for","try_lock_shared","try_lock_shared_for","try_lock_shared_recursive","try_lock_shared_recursive_for","try_lock_shared_recursive_until","try_lock_shared_until","try_lock_until","try_lock_until","try_lock_upgradable","try_lock_upgradable_for","try_lock_upgradable_until","try_upgrade","try_upgrade_for","try_upgrade_until","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unlock","unlock","unlock_exclusive","unlock_exclusive_fair","unlock_fair","unlock_fair","unlock_shared","unlock_shared_fair","unlock_upgradable","unlock_upgradable_fair","upgrade","wait","wait_for","wait_until","wait_while","wait_while_for","wait_while_until"],"q":[[0,"parking_lot"]],"d":["A Condition Variable","A closure has completed successfully.","A mutual exclusive primitive that is always fair, useful …","An RAII implementation of a “scoped lock” of a mutex. …","A thread is currently executing a closure.","An RAII mutex guard returned by <code>FairMutexGuard::map</code>, which …","An RAII mutex guard returned by <code>MutexGuard::map</code>, which can …","An RAII mutex guard returned by <code>ReentrantMutexGuard::map</code>, …","An RAII read lock guard returned by <code>RwLockReadGuard::map</code>, …","An RAII write lock guard returned by <code>RwLockWriteGuard::map</code>…","A mutual exclusion primitive useful for protecting shared …","An RAII implementation of a “scoped lock” of a mutex. …","A closure has not been executed yet","A synchronization primitive which can be used to run a …","Current state of a <code>Once</code>.","A closure was executed but panicked.","Raw fair mutex type backed by the parking lot.","Raw mutex type backed by the parking lot.","Raw reader-writer lock type backed by the parking lot.","Implementation of the <code>GetThreadId</code> trait for …","A mutex which can be recursively locked by a single thread.","An RAII implementation of a “scoped lock” of a …","A reader-writer lock","RAII structure used to release the shared read access of a …","RAII structure used to release the upgradable read access …","RAII structure used to release the exclusive write access …","A type indicating whether a timed wait on a condition …","","","","","","","","","","","","","","","","","","","","","","Performs an initialization routine once and only once. The …","Performs the same function as <code>call_once</code> except ignores …","","","","","Creates a new fair mutex in an unlocked state ready for …","Creates a new mutex in an unlocked state ready for use.","Creates a new reentrant mutex in an unlocked state ready …","Creates a new instance of an <code>RwLock&lt;T&gt;</code> which is unlocked.","","","Returns whether the associated <code>Once</code> has successfully …","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Creates a new condition variable which is ready to be …","Creates a new <code>Once</code> value.","","Wakes up all blocked threads on this condvar.","Wakes up one blocked thread on this condvar.","Returns whether the associated <code>Once</code> has been poisoned.","Returns the current state of this <code>Once</code>.","Returns whether the wait was known to have timed out.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Blocks the current thread until this condition variable …","Waits on this condition variable for a notification, …","Waits on this condition variable for a notification, …","Blocks the current thread until this condition variable …","Waits on this condition variable for a notification, …","Waits on this condition variable for a notification, …"],"i":[0,7,0,0,7,0,0,0,0,0,0,0,7,0,0,7,0,0,0,0,0,0,0,0,0,0,0,12,4,1,2,3,16,6,7,12,4,1,2,3,16,6,7,1,2,3,3,3,4,4,6,7,6,7,0,0,0,0,12,4,7,3,3,3,6,7,6,7,12,4,6,7,12,4,1,2,3,16,6,7,12,4,1,2,3,16,6,7,1,2,3,3,1,2,0,3,3,3,3,12,4,16,12,12,7,4,6,6,7,12,4,1,2,3,16,6,7,12,4,1,2,3,16,6,7,1,2,3,3,3,1,2,3,3,3,3,3,3,1,2,3,3,3,3,3,3,12,4,1,2,3,16,6,7,1,2,3,3,1,2,3,3,3,3,3,12,12,12,12,12,12],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1],[2],[3],[3],[3],[[4,5]],[[4,5]],[6,6],[7,7],[[]],[[]],[[],8],[[],9],[[],10],[[],11],[[],12],[[],4],[7,13],[3],[3],[3],[[6,6],13],[[7,7],13],[[],13],[[],13],[[12,14],15],[[4,14],15],[[6,14],15],[[7,14],15],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,13],[2,13],[3,13],[3,13],[1],[2],0,[3],[3],[3],[3],[[],12],[[],4],[16,17],[12,18],[12,13],[7,13],[4,7],[6,13],[[]],[[]],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[1,13],[2,13],[3,13],[[3,20],13],[[3,21],13],[1,13],[[2,20],13],[3,13],[3,13],[3,13],[3,13],[3,13],[3,13],[1,13],[[2,21],13],[3,13],[[3,20],13],[[3,21],13],[3,13],[[3,20],13],[[3,21],13],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[1],[2],[3],[3],[1],[2],[3],[3],[3],[3],[3],[[12,[24,[23]]]],[[12,[24,[23]],20],6],[[12,[24,[23]],21],6],[[12,[24,[23]],25]],[[12,[24,[23]],25,20],6],[[12,[24,[23]],25,21],6]],"c":[],"p":[[3,"RawFairMutex"],[3,"RawMutex"],[3,"RawRwLock"],[3,"Once"],[8,"FnOnce"],[3,"WaitTimeoutResult"],[4,"OnceState"],[6,"FairMutex"],[6,"Mutex"],[6,"ReentrantMutex"],[6,"RwLock"],[3,"Condvar"],[15,"bool"],[3,"Formatter"],[6,"Result"],[3,"RawThreadId"],[3,"NonZeroUsize"],[15,"usize"],[4,"Result"],[3,"Duration"],[3,"Instant"],[3,"TypeId"],[8,"Sized"],[6,"MutexGuard"],[8,"FnMut"]]},\
"parking_lot_core":{"doc":"This library exposes a low-level API for creating your own …","t":"NRRENEDNNENDNNNNNDDNMLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLFMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFFFMFF","n":["Abort","DEFAULT_PARK_TOKEN","DEFAULT_UNPARK_TOKEN","FilterOp","Invalid","ParkResult","ParkToken","RequeueAll","RequeueOne","RequeueOp","Skip","SpinWait","Stop","TimedOut","Unpark","UnparkOne","UnparkOneRequeueRest","UnparkResult","UnparkToken","Unparked","be_fair","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","deadlock","default","default","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","have_more_threads","into","into","into","into","into","into","into","is_unparked","new","park","requeued_threads","reset","spin","spin_no_yield","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unpark_all","unpark_filter","unpark_one","unpark_requeue","unparked_threads","acquire_resource","release_resource"],"q":[[0,"parking_lot_core"],[122,"parking_lot_core::deadlock"]],"d":["Abort the operation without doing anything.","A default park token to use.","A default unpark token to use.","Operation that <code>unpark_filter</code> should perform for each …","The validation callback returned false.","Result of a park operation.","A value associated with a parked thread which can be used …","Requeue all threads onto the target queue.","Requeue one thread and leave the rest parked on the …","Operation that <code>unpark_requeue</code> should perform.","Don’t unpark the thread and continue scanning the list …","A counter used to perform exponential backoff in spin …","Don’t unpark the thread and stop scanning the list of …","The timeout expired.","Unpark the thread and continue scanning the list of parked …","Unpark one thread and leave the rest parked. No requeuing …","Unpark one thread and requeue the rest onto the target …","Result of an unpark operation.","A value which is passed from an unparker to a parked …","We were unparked by another thread with the given token.","This is set to true on average once every 0.5ms for any …","","","","","","","","","","","","","","","","","","","","","","","","","","","[Experimental] Deadlock detection","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Whether there are any threads remaining in the queue. This …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns true if we were unparked by another thread.","Creates a new <code>SpinWait</code>.","Parks the current thread in the queue associated with the …","The number of threads that were requeued.","Resets a <code>SpinWait</code> to its initial state.","Spins until the sleep threshold has been reached.","Spins without yielding the thread to the OS.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Unparks all threads in the queue associated with the given …","Unparks a number of threads from the front of the queue …","Unparks one thread from the queue associated with the …","Removes all threads from the queue associated with <code>key_from</code>…","The number of threads that were unparked.","Acquire a resource identified by key in the deadlock …","Release a resource identified by key in the deadlock …"],"i":[3,0,0,0,1,0,0,3,3,0,4,0,4,1,4,3,3,0,0,1,2,1,2,3,4,5,6,7,1,2,3,4,5,6,7,1,2,3,4,5,6,1,2,3,4,5,6,0,2,7,1,2,3,4,5,6,1,2,3,4,5,6,1,2,3,4,5,6,1,2,3,4,5,6,7,2,1,2,3,4,5,6,7,1,7,0,2,7,7,7,1,2,3,4,5,6,1,2,3,4,5,6,7,1,2,3,4,5,6,7,1,2,3,4,5,6,7,0,0,0,0,2,0,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,1],[2,2],[3,3],[4,4],[5,5],[6,6],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],2],[[],7],[[1,1],8],[[2,2],8],[[3,3],8],[[4,4],8],[[5,5],8],[[6,6],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[1,9],10],[[2,9],10],[[3,9],10],[[4,9],10],[[5,9],10],[[6,9],10],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,8],[[],7],[[11,12,12,12,6,[14,[13]]],1],0,[7],[7,8],[7],[[]],[[]],[[]],[[]],[[]],[[]],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[11,5],11],[[11,17,12],2],[[11,12],2],[[11,11,12,12],2],0,[11],[11]],"c":[],"p":[[4,"ParkResult"],[3,"UnparkResult"],[4,"RequeueOp"],[4,"FilterOp"],[3,"UnparkToken"],[3,"ParkToken"],[3,"SpinWait"],[15,"bool"],[3,"Formatter"],[6,"Result"],[15,"usize"],[8,"FnOnce"],[3,"Instant"],[4,"Option"],[4,"Result"],[3,"TypeId"],[8,"FnMut"]]},\
"percent_encoding":{"doc":"URLs use special characters to indicate the parts of the …","t":"DRRDDLLLLLLLLLLLLLLLLLLLLLLLLLFFFFLLLLLLLLLLLLLLLF","n":["AsciiSet","CONTROLS","NON_ALPHANUMERIC","PercentDecode","PercentEncode","add","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","decode_utf8","decode_utf8_lossy","fmt","fmt","from","from","from","into","into","into","into_iter","into_iter","next","next","percent_decode","percent_decode_str","percent_encode","percent_encode_byte","remove","size_hint","size_hint","to_owned","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","utf8_percent_encode"],"q":[[0,"percent_encoding"]],"d":["Represents a set of characters or bytes in the ASCII range.","The set of 0x00 to 0x1F (C0 controls), and 0x7F (DEL).","Everything that is not an ASCII letter or digit.","The return type of <code>percent_decode</code>.","The return type of <code>percent_encode</code> and <code>utf8_percent_encode</code>.","","","","","","","","","","","","Decode the result of percent-decoding as UTF-8.","Decode the result of percent-decoding as UTF-8, lossily.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Percent-decode the given bytes.","Percent-decode the given string.","Percent-encode the given bytes with the given set.","Return the percent-encoding of the given byte.","","","","","","","","","","","","","","","","Percent-encode the UTF-8 encoding of the given string."],"i":[0,0,0,0,0,1,1,3,4,1,3,4,3,4,3,4,4,4,3,4,1,3,4,1,3,4,3,4,3,4,0,0,0,0,1,3,4,3,4,3,1,3,4,1,3,4,1,3,4,0],"f":[0,0,0,0,0,[[1,2],1],[[]],[[]],[[]],[[]],[[]],[[]],[3,3],[4,4],[[]],[[]],[4,[[8,[[6,[5]],7]]]],[4,[[6,[5]]]],[[3,9],10],[[4,9],10],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[3,[[11,[5]]]],[4,[[11,[2]]]],[[[12,[2]]],4],[5,4],[[[12,[2]],1],3],[2,5],[[1,2],1],[3],[4],[[]],[[]],[[],13],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],14],[[],14],[[],14],[[5,1],3]],"c":[],"p":[[3,"AsciiSet"],[15,"u8"],[3,"PercentEncode"],[3,"PercentDecode"],[15,"str"],[4,"Cow"],[3,"Utf8Error"],[4,"Result"],[3,"Formatter"],[6,"Result"],[4,"Option"],[15,"slice"],[3,"String"],[3,"TypeId"]]},\
"petgraph":{"doc":"<code>petgraph</code> is a graph data structure library.","t":"EEICCNIQCNEAALLLLLLLLLLLLLAAALLLLLLLLLAALLLLLKKLLAALLAALLLLLLLLLLLLAACDDDDCDDGDDDGLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLIDDICIDDDCACACLLLLLLLLLLLLLLLLLLFFLLACALLACACLLLLLLLLLLCCFKLLLLLLFFFCCCCAACFAKCKFLLLLLKLFACFLLLLFALLLLLLLLLLLLLLLKFDFLLLLMFLLLMLLLLFDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLFFFFFFFFDDDLLLLLLLLLLLLFLLLLLLLLLFLLLLLLLLLLLLFFFDCGDDDDCDDGDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLIIIINEIDINLKLLLLLLLLKKLLLLLLLLLLLLLKKLLLLLLLLLKKMMMMEDNNNNNLLLLLLLLLLLLLLLLLLLLLLLLGGDDDDDDDDDDDIIDDDDDDGDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLDDGDDDDDDDIDDGLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLGDDCDDDGDDIGILLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKFCCCCCCCCCCCCCCCCCCCCCCDDDDDDCCDCDDGDGDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLCLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLCLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLQNDNNEINIDEDNIDDDDQQIIQQQQQQIINIIIIIIIIIIIQQQQIIDDDDDQQQQIIQQQNDDDDDDNIIIDQQKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLFMMMKLLLKLKLLLLLLKLLLKLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKKLLLLLLLLKKLKKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLKLLLLKLLLKLLLLLLLLLLLLLLLLLLLLLKLLLKLLKLLLKLLLLLLLLLLKLLLKLKLLLLLLLLLLKLMMMKLKKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKKLLLKLLLLKKL","n":["Directed","Direction","EdgeType","Graph","Incoming","Incoming","IntoWeightedEdge","NodeId","Outgoing","Outgoing","Undirected","adj","algo","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","csr","data","dot","eq","equivalent","equivalent","fmt","fmt","fmt","from","from","from","graph","graphmap","hash","index","into","into","into","into_weighted_edge","is_directed","is_directed","is_directed","matrix_graph","operator","opposite","partial_cmp","prelude","stable_graph","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unionfind","visit","DefaultIx","EdgeIndex","EdgeIndices","EdgeReference","EdgeReferences","IndexType","List","Neighbors","NodeIndex","NodeIndices","OutgoingEdgeIndices","OutgoingEdgeReferences","UnweightedList","add_edge","add_edge","add_node","add_node","add_node_from_edges","add_node_with_capacity","adjacency_matrix","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","contains_edge","default","edge_count","edge_count","edge_endpoints","edge_indices","edge_indices_from","edge_references","edge_weight","edge_weight_mut","edges","eq","eq","equivalent","equivalent","equivalent","equivalent","find_edge","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_index","hash","id","id","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","is_adjacent","is_directed","len","len","neighbors","new","next","next","next","next","next","next","next_back","next_back","node_bound","node_count","node_identifiers","node_indices","node_references","node_weight","node_weight_mut","partial_cmp","partial_cmp","reset_map","rfind","rfind","rfold","rfold","size_hint","size_hint","size_hint","size_hint","size_hint","source","target","to_index","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update_edge","visit_map","weight","weight","with_capacity","BoundedMeasure","Cycle","DfsSpace","FloatMeasure","Matching","Measure","MinSpanningTree","NegativeCycle","TarjanScc","all_simple_paths","astar","astar","bellman_ford","bellman_ford","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","condensation","connected_components","default","default","dijkstra","dijkstra","dominators","eq","eq","feedback_arc_set","find_negative_cycle","floyd_warshall","floyd_warshall","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","greedy_feedback_arc_set","greedy_matching","has_path_connecting","infinite","into","into","into","into","into","into_iter","is_bipartite_undirected","is_cyclic_directed","is_cyclic_undirected","is_isomorphic","is_isomorphic_matching","is_isomorphic_subgraph","is_isomorphic_subgraph_matching","isomorphism","k_shortest_path","k_shortest_path","kosaraju_scc","matching","max","maximum_matching","min","min_spanning_tree","new","new","next","node_component_index","node_id","overflowing_add","run","scc","simple_paths","subgraph_isomorphisms_iter","tarjan_scc","to_owned","to_owned","to_owned","to_owned","toposort","tred","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","zero","astar","Paths","bellman_ford","borrow","borrow_mut","clone","clone_into","distances","find_negative_cycle","fmt","from","into","predecessors","to_owned","try_from","try_into","type_id","dijkstra","DominatedByIter","Dominators","DominatorsIter","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","dominators","fmt","fmt","fmt","from","from","from","immediate_dominator","immediately_dominated_by","into","into","into","into_iter","into_iter","next","next","root","simple_fast","size_hint","strict_dominators","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","greedy_feedback_arc_set","floyd_warshall","is_isomorphic","is_isomorphic_matching","is_isomorphic_subgraph","is_isomorphic_subgraph_matching","subgraph_isomorphisms_iter","k_shortest_path","MatchedEdges","MatchedNodes","Matching","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","contains_edge","contains_node","edges","from","from","from","greedy_matching","into","into","into","into_iter","into_iter","is_empty","is_perfect","len","mate","maximum_matching","next","next","nodes","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","all_simple_paths","dag_to_toposorted_adjacency_list","dag_transitive_reduction_closure","Csr","DefaultIx","EdgeIndex","EdgeReference","EdgeReferences","Edges","EdgesNotSorted","IndexType","Neighbors","NodeIdentifiers","NodeIndex","NodeReferences","add_edge","add_node","adjacency_matrix","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear_edges","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","contains_edge","default","edge_count","edge_count","edge_references","edges","edges","edges_slice","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_index","from_sorted_edges","id","index","index_mut","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","is_adjacent","is_directed","neighbors","neighbors_slice","new","next","next","next","next","next","next_back","node_bound","node_count","node_count","node_identifiers","node_references","out_degree","reset_map","size_hint","size_hint","size_hint","size_hint","source","target","to_index","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","visit_map","weight","weight","with_nodes","Build","Create","DataMap","DataMapMut","Edge","Element","ElementIterator","FilterElements","FromElements","Node","add_edge","add_node","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","edge_weight","edge_weight_mut","eq","equivalent","equivalent","filter_elements","fmt","fmt","from","from","from_elements","into","into","into_iter","next","node_weight","node_weight_mut","size_hint","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","update_edge","with_capacity","source","target","weight","weight","Config","Dot","EdgeIndexLabel","EdgeNoLabel","GraphContentOnly","NodeIndexLabel","NodeNoLabel","borrow","borrow","borrow_mut","borrow_mut","eq","equivalent","equivalent","fmt","fmt","fmt","from","from","into","into","new","to_string","try_from","try_from","try_into","try_into","type_id","type_id","with_attr_getters","with_config","DefaultIx","DiGraph","Edge","EdgeIndex","EdgeIndices","EdgeReference","EdgeReferences","EdgeWeightsMut","Edges","EdgesConnecting","Externals","Frozen","Graph","GraphIndex","IndexType","Neighbors","Node","NodeIndex","NodeIndices","NodeReferences","NodeWeightsMut","UnGraph","WalkNeighbors","add_edge","add_edge","add_node","add_node","adjacency_matrix","adjacency_matrix","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capacity","clear","clear_edges","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_from","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","contains_edge","default","default","default","deref","detach","edge_bound","edge_bound","edge_count","edge_count","edge_count","edge_endpoints","edge_index","edge_indices","edge_references","edge_references","edge_references","edge_weight","edge_weight","edge_weight","edge_weight_mut","edge_weight_mut","edge_weight_mut","edge_weights","edge_weights_mut","edges","edges","edges","edges_connecting","edges_directed","edges_directed","edges_directed","end","end","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","extend_with_edges","externals","filter_map","find_edge","find_edge_undirected","first_edge","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_edges","from_elements","from_index","from_index","from_index","from_index","hash","hash","id","id","index","index","index","index","index","index","index","index_mut","index_mut","index_mut","index_twice_mut","index_twice_mut","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_edge_type","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_nodes_edges","is_adjacent","is_adjacent","is_directed","map","max","max","neighbors","neighbors","neighbors","neighbors_directed","neighbors_directed","neighbors_directed","neighbors_undirected","new","new","new","new","new","new","new_undirected","next","next","next","next","next","next","next","next","next","next","next","next_back","next_back","next_back","next_back","next_edge","next_edge","next_edge","next_edge","next_node","node_bound","node_bound","node_count","node_count","node_count","node_identifiers","node_identifiers","node_index","node_indices","node_references","node_references","node_weight","node_weight","node_weight","node_weight_mut","node_weight_mut","node_weight_mut","node_weights","node_weights_mut","partial_cmp","partial_cmp","raw_edges","raw_nodes","remove_edge","remove_node","reserve_edges","reserve_exact_edges","reserve_exact_nodes","reserve_nodes","reset_map","reset_map","retain_edges","retain_nodes","reverse","shrink_to_fit","shrink_to_fit_edges","shrink_to_fit_nodes","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","source","source","target","target","to_index","to_index","to_index","to_index","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update_edge","update_edge","visit_map","visit_map","weight","weight","weight","weight","weight","with_capacity","with_capacity","AllEdges","AllEdgesMut","DiGraphMap","Edges","EdgesDirected","GraphMap","Neighbors","NeighborsDirected","NodeIdentifiers","NodeReferences","NodeTrait","Nodes","Ptr","UnGraphMap","add_edge","add_edge","add_node","add_node","adjacency_matrix","all_edges","all_edges_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capacity","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","contains_edge","contains_node","count","count","default","deref","edge_bound","edge_count","edge_count","edge_references","edge_weight","edge_weight_mut","edges","edges","edges_directed","edges_directed","eq","equivalent","equivalent","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from_edges","from_elements","from_graph","from_index","from_index","from_iter","hash","index","index_mut","into","into","into","into","into","into","into","into","into","into","into","into_graph","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","is_adjacent","is_directed","last","last","len","neighbors","neighbors","neighbors_directed","neighbors_directed","new","next","next","next","next","next","next","next","next","next","next_back","next_back","next_back","node_bound","node_count","node_count","node_identifiers","node_references","nodes","nth","nth","partial_cmp","remove_edge","remove_node","reset_map","rfind","rfold","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","to_index","to_index","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update_edge","visit_map","with_capacity","with_capacity","DiMatrix","EdgeReferences","Edges","IndexType","MatrixGraph","Neighbors","NodeIdentifiers","NodeIndex","NodeReferences","NotZero","Nullable","UnMatrix","Zero","add_edge","add_edge","add_node","add_node","adjacency_matrix","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","edge_count","edge_count","edge_references","edge_weight","edge_weight_mut","edges","edges","edges_directed","edges_directed","extend_with_edges","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_edges","from_index","has_edge","index","index","index_mut","index_mut","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","is_adjacent","is_directed","is_zero","neighbors","neighbors","neighbors_directed","neighbors_directed","new","new_undirected","next","next","next","next","next","node_bound","node_count","node_count","node_identifiers","node_index","node_references","node_weight","node_weight_mut","remove_edge","remove_node","reset_map","size_hint","size_hint","size_hint","to_index","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update_edge","update_edge","visit_map","with_capacity","zero","complement","Bfs","Dfs","DfsPostOrder","DiGraph","DiGraphMap","Directed","Direction","EdgeIndex","EdgeRef","Graph","GraphMap","Incoming","NodeIndex","Outgoing","StableDiGraph","StableGraph","StableUnGraph","UnGraph","UnGraphMap","Undirected","DefaultIx","EdgeIndex","EdgeIndices","EdgeReference","EdgeReferences","Edges","EdgesConnecting","Externals","GraphIndex","IndexType","Neighbors","NodeIndex","NodeIndices","NodeReferences","StableDiGraph","StableGraph","StableUnGraph","WalkNeighbors","add_edge","add_edge","add_node","add_node","adjacency_matrix","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capacity","clear","clear_edges","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_from","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","contains_edge","contains_node","default","detach","edge_bound","edge_count","edge_count","edge_endpoints","edge_index","edge_indices","edge_references","edge_weight","edge_weight","edge_weight_mut","edge_weight_mut","edge_weights","edge_weights_mut","edges","edges","edges_connecting","edges_directed","edges_directed","eq","extend_with_edges","externals","filter_map","find_edge","find_edge_undirected","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from_edges","from_elements","from_index","from_index","id","index","index","index_mut","index_mut","index_twice_mut","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","is_adjacent","is_directed","map","neighbors","neighbors","neighbors_directed","neighbors_directed","neighbors_undirected","new","next","next","next","next","next","next","next","next","next","next_back","next_back","next_back","next_back","next_edge","next_node","node_bound","node_count","node_count","node_identifiers","node_index","node_indices","node_references","node_weight","node_weight","node_weight_mut","node_weight_mut","node_weights","node_weights_mut","remove_edge","remove_node","reset_map","retain_edges","retain_nodes","reverse","size_hint","size_hint","size_hint","size_hint","size_hint","source","target","to_index","to_index","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update_edge","update_edge","visit_map","weight","weight","with_capacity","with_capacity","UnionFind","borrow","borrow_mut","clone","clone_into","equiv","find","find_mut","fmt","from","into","into_labeling","new","to_owned","try_from","try_into","type_id","union","AdjMatrix","BackEdge","Bfs","Break","Continue","Control","ControlFlow","CrossForwardEdge","Data","Dfs","DfsEvent","DfsPostOrder","Discover","EdgeCount","EdgeFiltered","EdgeFilteredEdges","EdgeFilteredNeighbors","EdgeFilteredNeighborsDirected","EdgeId","EdgeId","EdgeIndexable","EdgeRef","EdgeRef","EdgeReferences","EdgeType","EdgeWeight","Edges","EdgesDirected","FilterEdge","FilterNode","Finish","GetAdjacencyMatrix","GraphBase","GraphProp","GraphRef","IntoEdgeReferences","IntoEdges","IntoEdgesDirected","IntoNeighbors","IntoNeighborsDirected","IntoNodeIdentifiers","IntoNodeReferences","Item","Map","Neighbors","NeighborsDirected","NodeCompactIndexable","NodeCount","NodeFiltered","NodeFilteredEdgeReferences","NodeFilteredEdges","NodeFilteredNeighbors","NodeFilteredNodes","NodeId","NodeId","NodeId","NodeIdentifiers","NodeIndexable","NodeRef","NodeRef","NodeReferences","NodeWeight","Prune","Reversed","ReversedEdgeReference","ReversedEdgeReferences","ReversedEdges","Time","Topo","TreeEdge","VisitMap","Visitable","Walker","WalkerIter","Weight","Weight","adjacency_matrix","adjacency_matrix","as_unreversed","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","break_value","breaking","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","context","continuing","continuing","default","default","default","default","default","default","depth_first_search","discovered","discovered","discovered","edge_bound","edge_bound","edge_bound","edge_bound","edge_count","edge_count","edge_references","edge_references","edge_references","edge_references","edge_weight","edge_weight","edge_weight_mut","edges","edges","edges","edges","edges_directed","edges_directed","edges_directed","edges_directed","empty","empty","eq","equivalent","equivalent","finished","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_fn","from_fn","from_index","from_index","from_index","from_index","from_index","from_index","from_index","from_index","from_parts","hash","id","id","id","include_edge","include_node","inner_mut","inner_ref","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_unreversed","is_adjacent","is_adjacent","is_directed","is_visited","iter","iter","move_to","move_to","neighbors","neighbors","neighbors","neighbors","neighbors_directed","neighbors_directed","neighbors_directed","neighbors_directed","new","new","new","new","next","next","next","next","next","next","next","next","next","next","next","next","next","next","node_bound","node_bound","node_bound","node_bound","node_count","node_count","node_count","node_identifiers","node_identifiers","node_identifiers","node_identifiers","node_references","node_references","node_references","node_references","node_weight","node_weight","node_weight_mut","partial_cmp","reset","reset","reset","reset_map","reset_map","reset_map","reset_map","should_break","should_break","should_prune","should_prune","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","source","source","stack","stack","stack","target","target","to_index","to_index","to_index","to_index","to_index","to_index","to_index","to_index","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","visit","visit_map","visit_map","visit_map","visit_map","walk_next","walk_next","walk_next","walk_next","walk_next","weight","weight","weight"],"q":[[0,"petgraph"],[69,"petgraph::adj"],[260,"petgraph::algo"],[374,"petgraph::algo::astar"],[375,"petgraph::algo::bellman_ford"],[391,"petgraph::algo::dijkstra"],[392,"petgraph::algo::dominators"],[439,"petgraph::algo::feedback_arc_set"],[440,"petgraph::algo::floyd_warshall"],[441,"petgraph::algo::isomorphism"],[446,"petgraph::algo::k_shortest_path"],[447,"petgraph::algo::matching"],[485,"petgraph::algo::simple_paths"],[486,"petgraph::algo::tred"],[488,"petgraph::csr"],[639,"petgraph::data"],[687,"petgraph::data::Element"],[691,"petgraph::dot"],[722,"petgraph::graph"],[1132,"petgraph::graphmap"],[1363,"petgraph::matrix_graph"],[1512,"petgraph::operator"],[1513,"petgraph::prelude"],[1533,"petgraph::stable_graph"],[1786,"petgraph::unionfind"],[1804,"petgraph::visit"]],"d":["Marker type for a directed graph.","Edge direction.","A graph’s edge type determines whether it has directed …","","","An <code>Incoming</code> edge is an inbound edge <em>to</em> the current node.","Convert an element like <code>(i, j)</code> or <code>(i, j, w)</code> into a triple …","","","An <code>Outgoing</code> edge is an outward edge <em>from</em> the current node.","Marker type for an undirected graph.","Simple adjacency list.","Graph algorithms.","","","","","","","","","","","","","","Compressed Sparse Row (CSR) is a sparse adjacency matrix …","Graph traits for associated data and graph construction.","Simple graphviz dot file format output.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","<code>Graph&lt;N, E, Ty, Ix&gt;</code> is a graph datastructure using an …","<code>GraphMap&lt;N, E, Ty&gt;</code> is a graph datastructure where node …","","Return <code>0</code> for <code>Outgoing</code> and <code>1</code> for <code>Incoming</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","<code>MatrixGraph&lt;N, E, Ty, NullN, NullE, Ix&gt;</code> is a graph …","","Return the opposite <code>Direction</code>.","","Commonly used items.","<code>StableGraph</code> keeps indices stable across removals.","","","","","","","","","","","","","<code>UnionFind&lt;K&gt;</code> is a disjoint-set data structure.","Graph traits and graph traversals.","","Adjacency list edge index type, a pair of integers.","","A reference to an edge of the graph.","An iterator over the <code>EdgeReference</code> of all the edges of the …","","An adjacency list with labeled edges.","An iterator over the indices of the neighbors of a node.","Adjacency list node index type, a plain integer.","An iterator over all node indices in the graph.","An Iterator over the indices of the outgoing edges from a …","Iterator over the <code>EdgeReference</code> of the outgoing edges from …","A very simple adjacency list with no node or label weights.","Add an edge from <code>a</code> to <code>b</code> to the graph, with its associated …","Add an edge from <code>a</code> to <code>b</code> to the graph, with its associated …","Adds a new node to the list. This allocates a new <code>Vec</code> and …","Adds a new node to the list. This allocates a new <code>Vec</code> and …","Adds a new node to the list by giving its list of …","Adds a new node to the list. This allocates a new <code>Vec</code> and …","","","","","","","","","","","","","","","","","","","","Removes all nodes and edges from the list.","","","","","","","","","","","","","","","","","","","","","Lookups whether there is an edge from <code>a</code> to <code>b</code>.","","Returns the number of edges in the list","Returns the number of edges in the list","Accesses the source and target of edge <code>e</code>","Returns an iterator over all edge indices of the graph.","","","Accesses the weight of edge <code>e</code>","Accesses the weight of edge <code>e</code>","","","","","","","","Lookups whether there is an edge from <code>a</code> to <code>b</code>.","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Returns an iterator of all nodes with an edge starting …","Creates a new, empty adjacency list.","","","","","","","","","","Returns the number of nodes in the list","","Returns an iterator over all node indices of the graph.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Updates or adds an edge from <code>a</code> to <code>b</code> to the graph, with its …","","","","Creates a new, empty adjacency list tailored for <code>nodes</code> …","","An algorithm error: a cycle was found in the graph.","Workspace for a graph traversal.","A floating-point measure.","","Associated data that can be used for measures (such as …","An iterator producing a minimum spanning forest of a graph.","An algorithm error: a cycle of negative weights was found …","A reusable state for computing the <em>strongly connected </em>…","","","","Bellman-Ford algorithms.","","","","","","","","","","","","","","","","","","","","Graph Condense every strongly connected component into a …","[Generic] Return the number of connected components of the …","","","","","Compute dominators of a control-flow graph.","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","[Generic] Check if there exists a path starting at <code>from</code> …","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Return <code>true</code> if the graph is bipartite. A graph is …","[Generic] Return <code>true</code> if the input directed graph contains …","[Generic] Return <code>true</code> if the input graph contains a cycle.","","","","","","","","[Generic] Compute the <em>strongly connected components</em> using …","","","","","[Generic] Compute a <em>minimum spanning tree</em> of a graph.","","Creates a new <code>TarjanScc</code>","","Returns the index of the component in which v has been …","Return a node id that participates in the cycle","","[Generic] Compute the <em>strongly connected components</em> using …","Renamed to <code>kosaraju_scc</code>.","","","[Generic] Compute the <em>strongly connected components</em> using …","","","","","[Generic] Perform a topological sort of a directed graph.","Compute the transitive reduction and closure of a directed …","","","","","","","","","","","","","","","","","[Generic] A* shortest path algorithm.","","[Generic] Compute shortest paths from node <code>source</code> to all …","","","","","","[Generic] Find the path of a negative cycle reachable from …","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","[Generic] Dijkstra’s shortest path algorithm.","Iterator for nodes dominated by a given node.","The dominance relation for some graph and root.","Iterator for a node’s dominators.","","","","","","","","","","","","","Iterate over all of the given node’s dominators …","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get the immediate dominator of the given node.","Iterate over all nodes immediately dominated by the given …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Get the root node used to construct these dominance …","This is an implementation of the engineered “Simple, …","","Iterate over the given node’s strict dominators.","","","","","","","","","","","","","[Generic] Finds a feedback arc set: a set of edges in the …","[Generic] Floyd–Warshall algorithm is an algorithm for …","[Generic] Return <code>true</code> if the graphs <code>g0</code> and <code>g1</code> are …","[Generic] Return <code>true</code> if the graphs <code>g0</code> and <code>g1</code> are …","[Generic] Return <code>true</code> if <code>g0</code> is isomorphic to a subgraph of …","[Generic] Return <code>true</code> if <code>g0</code> is isomorphic to a subgraph of …","Using the VF2 algorithm, examine both syntactic and …","[Generic] k’th shortest path algorithm.","","","Computed <em>matching</em> of the graph.","","","","","","","Returns <code>true</code> if given edge is in the matching, or <code>false</code> …","Returns <code>true</code> if given node is in the matching, or <code>false</code> …","Iterates over all edges from the matching.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","[Generic] Compute a <em>matching</em> using a greedy heuristic.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Returns <code>true</code> if the number of matched <strong>edges</strong> is 0.","Returns <code>true</code> if the matching is perfect.","Gets the number of matched <strong>edges</strong>.","Gets the matched counterpart of given node, if there is …","[Generic] Compute the <em>maximum matching</em> using Gabow’s …","","","Iterates over all nodes from the matching.","","","","","","","","","","Returns an iterator that produces all simple paths from …","Creates a representation of the same graph respecting …","Computes the transitive reduction and closure of a DAG.","Compressed Sparse Row (<code>CSR</code>) is a sparse adjacency matrix …","","Csr edge index type, a plain integer.","","","","Csr creation error: edges were not in sorted order.","","","","Csr node index type, a plain integer.","Iterator over all nodes of a graph.","Return <code>true</code> if the edge was added","Adds a new node with the given weight, returning the …","","","","","","","","","","","","","","","","","","Remove all edges","","","","","","","","","","","","","","","","","Computes in <strong>O(log |V|)</strong> time.","","","","","Return an iterator of all edges of <code>a</code>.","","Computes in <strong>O(1)</strong> time.","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Create a new <code>Csr</code> from a sorted sequence of edges","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","Return an iterator of all neighbors of <code>a</code>.","Computes in <strong>O(1)</strong> time.","Create an empty <code>Csr</code>.","","","","","","","","","","","","Computes in <strong>O(1)</strong> time.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Access the edge’s weight.","Create a new <code>Csr</code> with <code>n</code> nodes. <code>N</code> must implement <code>Default</code> …","A graph that can be extended with further nodes and edges","A graph that can be created","Access node and edge weights (associated data).","Access node and edge weights mutably.","A graph edge.","A graph element.","Iterator adaptors for iterators of <code>Element</code>.","An iterator that filters graph elements.","Create a graph from an iterator of elements.","A graph node.","Add a new edge. If parallel edges (duplicate) are not …","","","","","","","","","","","","","","","Create an iterator adaptor that filters graph elements.","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Add or update the edge from <code>a</code> to <code>b</code>. Return the id of the …","","","","","","<code>Dot</code> configuration.","<code>Dot</code> implements output to graphviz .dot format for a graph.","Use indices for edge labels.","Use no edge labels.","Do not print the graph/digraph string.","Use indices for node labels.","Use no node labels.","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Create a <code>Dot</code> formatting wrapper with default configuration.","","","","","","","","","Create a <code>Dot</code> formatting wrapper with custom configuration.","The default integer type for graph indices. <code>u32</code> is the …","A <code>Graph</code> with directed edges.","The graph’s edge type.","Edge identifier.","Iterator over the edge indices of a graph.","Reference to a <code>Graph</code> edge.","Iterator over all edges of a graph.","Iterator yielding mutable access to all edge weights.","Iterator over the edges of from or to a node","Iterator over the multiple directed edges connecting a …","An iterator over either the nodes without edges to them or …","<code>Frozen</code> is a graph wrapper.","<code>Graph&lt;N, E, Ty, Ix&gt;</code> is a graph datastructure using an …","A <code>GraphIndex</code> is a node or edge index.","Trait for the unsigned integer type used for node and edge …","Iterator over the neighbors of a node.","The graph’s node type.","Node identifier.","Iterator over the node indices of a graph.","Iterator over all nodes of a graph.","Iterator yielding mutable access to all node weights.","A <code>Graph</code> with undirected edges.","A “walker” object that can be used to step through the …","","Add an edge from <code>a</code> to <code>b</code> to the graph, with its associated …","","Add a node (also called vertex) with associated data <code>weight</code>…","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return the current node and edge capacity of the graph.","Remove all nodes and edges","Remove all edges","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Lookup if there is an edge from <code>a</code> to <code>b</code>.","","","","","Return a “walker” object that can be used to step …","","","","Return the number of edges in the graph.","","Access the source and target nodes for <code>e</code>.","Short version of <code>EdgeIndex::new</code>","Return an iterator over the edge indices of the graph","","Create an iterator over all edges, in indexed order.","","Access the weight for edge <code>e</code>.","","","","Access the weight for edge <code>e</code>, mutably.","","Return an iterator yielding immutable access to all edge …","Return an iterator yielding mutable access to all edge …","","Return an iterator of all edges of <code>a</code>.","","Return an iterator over all the edges connecting <code>a</code> and <code>b</code>.","Return an iterator of all edges of <code>a</code>, in the specified …","","","","An invalid <code>EdgeIndex</code> used to denote absence of an edge, …","","","","","","","","Extend the graph from an iterable of edges.","Return an iterator over either the nodes without edges to …","Create a new <code>Graph</code> by mapping nodes and edges. A node or …","Lookup an edge from <code>a</code> to <code>b</code>.","Lookup an edge between <code>a</code> and <code>b</code>, in either direction.","Accessor for data structure internals: the first edge in …","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Create a new <code>Graph</code> from an iterable of edges.","","","","","","","","","","","","","","","","","","","","Index the <code>Graph</code> by two indices, any combination of node or …","Index the <code>Graph</code> by two indices, any combination of node or …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Convert the graph into either undirected or directed. No …","","","","","","","","","","","Convert the graph into a vector of Nodes and a vector of …","","","Whether the graph has directed edges or not.","Create a new <code>Graph</code> by mapping node and edge weights to new …","","","Return an iterator of all nodes with an edge starting from …","","","","Return an iterator of all neighbors that have an edge …","","Return an iterator of all neighbors that have an edge …","","Create a new <code>Graph</code> with directed edges.","Create a new <code>Frozen</code> from a mutable reference to a graph.","","","","Create a new <code>Graph</code> with undirected edges.","Step to the next edge and its endpoint node in the walk …","","","","","","","","","","","","","","","Accessor for data structure internals: the next edge for …","","Accessor for data structure internals: the first edge in …","Accessor for data structure internals: the next edge for …","","","","","Return the number of nodes (vertices) in the graph.","","","","Short version of <code>NodeIndex::new</code>","Return an iterator over the node indices of the graph.","","","","Access the weight for node <code>a</code>.","","Access the weight for node <code>a</code>, mutably.","","","Return an iterator yielding immutable access to all node …","Return an iterator yielding mutable access to all node …","","","Access the internal edge array.","Access the internal node array.","Remove an edge and return its edge weight, or <code>None</code> if it …","Remove <code>a</code> from the graph if it exists, and return its …","Reserves capacity for at least <code>additional</code> more edges to be …","Reserves the minimum capacity for exactly <code>additional</code> more …","Reserves the minimum capacity for exactly <code>additional</code> more …","Reserves capacity for at least <code>additional</code> more nodes to be …","","","Keep all edges that return <code>true</code> from the <code>visit</code> closure, …","Keep all nodes that return <code>true</code> from the <code>visit</code> closure, …","Reverse the direction of all edges","Shrinks the capacity of the graph as much as possible.","Shrinks the capacity of the underlying edges collection as …","Shrinks the capacity of the underlying nodes collection as …","","","","","","","","","Return the source node index.","","Return the target node index.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Add or update an edge from <code>a</code> to <code>b</code>. If the edge already …","","","","","","Access the edge’s weight.","Associated node data.","Associated edge data.","","Create a new <code>Graph</code> with estimated capacity.","","","A <code>GraphMap</code> with directed edges.","","","<code>GraphMap&lt;N, E, Ty&gt;</code> is a graph datastructure using an …","","","","","A trait group for <code>GraphMap</code>’s node identifier.","","A reference that is hashed and compared by its pointer …","A <code>GraphMap</code> with undirected edges.","Add an edge connecting <code>a</code> and <code>b</code> to the graph, with …","","Add node <code>n</code> to the graph.","","","Return an iterator over all edges of the graph with their …","Return an iterator over all edges of the graph in …","","","","","","","","","","","","","","","","","","","","","","","Return the current node and edge capacity of the graph.","Remove all nodes and edges","","","","","","","","","","","","","","","","","","","","","Ptr is ordered by pointer value, i.e. an arbitrary but …","Return <code>true</code> if the edge connecting <code>a</code> with <code>b</code> is contained …","Return <code>true</code> if the node is contained in the graph.","","","","","","Return the number of edges in the graph.","","","Return a reference to the edge weight connecting <code>a</code> with <code>b</code>, …","Return a mutable reference to the edge weight connecting <code>a</code> …","Return an iterator of target nodes with an edge starting …","","","Return an iterator of target nodes with an edge starting …","Ptr compares by pointer equality, i.e if they point to the …","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Create a new <code>GraphMap</code> from an iterable of edges.","","Creates a <code>GraphMap</code> that corresponds to the given <code>Graph</code>.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Return a <code>Graph</code> that corresponds to this <code>GraphMap</code>.","","","","","","","","","","","Whether the graph has directed edges.","","","","Return an iterator of all nodes with an edge starting from …","","Return an iterator of all neighbors that have an edge …","","Create a new <code>GraphMap</code>","","","","","","","","","","","","","","","Return the number of nodes in the graph.","","","Return an iterator over the nodes of the graph.","","","","Remove edge from <code>a</code> to <code>b</code> from the graph and return the edge …","Return <code>true</code> if node <code>n</code> was removed.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a new <code>GraphMap</code> with estimated capacity.","","A <code>MatrixGraph</code> with directed edges.","Iterator over all edges of a graph.","Iterator over the edges of from or to a node","","<code>MatrixGraph&lt;N, E, Ty, Null&gt;</code> is a graph datastructure using …","Iterator over the neighbors of a node.","Iterator over the node identifiers of a graph.","Node identifier.","Iterator over all nodes of a graph.","<code>NotZero</code> is used to optimize the memory usage of edge …","Wrapper trait for an <code>Option</code>, allowing user-defined structs …","A <code>MatrixGraph</code> with undirected edges.","Base trait for types that can be wrapped in a <code>NotZero</code>.","","Add an edge from <code>a</code> to <code>b</code> to the graph, with its associated …","Add a node (also called vertex) with associated data <code>weight</code>…","","","","","","","","","","","","","","","","","Remove all nodes and edges.","","","","","","","","","","","","","","","Return the number of edges in the graph.","","","Access the weight for edge <code>e</code>.","Access the weight for edge <code>e</code>, mutably.","Return an iterator of all edges of <code>a</code>.","","Return an iterator of all edges of <code>a</code>, in the specified …","","Extend the graph from an iterable of edges.","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Create a new <code>MatrixGraph</code> from an iterable of edges.","","Return true if there is an edge between <code>a</code> and <code>b</code>.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Return whether the graph has directed edges or not.","Return true if <code>self</code> is equal to the sentinel value.","Return an iterator of all nodes with an edge starting from …","","Return an iterator of all neighbors that have an edge …","","Create a new <code>MatrixGraph</code> with directed edges.","Create a new <code>MatrixGraph</code> with undirected edges.","","","","","","","Return the number of nodes (vertices) in the graph.","","","Short version of <code>NodeIndex::new</code> (with Ix = <code>DefaultIx</code>)","","Access the weight for node <code>a</code>.","Access the weight for node <code>a</code>, mutably.","Remove the edge from <code>a</code> to <code>b</code> to the graph.","Remove <code>a</code> from the graph.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Update the edge from <code>a</code> to <code>b</code> to the graph, with its …","","","Create a new <code>MatrixGraph</code> with estimated capacity for nodes.","Return the singleton object which can be used as a …","[Generic] complement of the graph","","","","","","","","","","","","","","","","","","","","","","","Iterator over the edge indices of a graph.","Reference to a <code>StableGraph</code> edge.","Iterator over all edges of a graph.","Iterator over the edges of from or to a node","Iterator over the multiple directed edges connecting a …","An iterator over either the nodes without edges to them or …","","","Iterator over the neighbors of a node.","","Iterator over the node indices of a graph.","Iterator over all nodes of a graph.","A <code>StableGraph</code> with directed edges.","<code>StableGraph&lt;N, E, Ty, Ix&gt;</code> is a graph datastructure using …","A <code>StableGraph</code> with undirected edges.","A “walker” object that can be used to step through the …","","Add an edge from <code>a</code> to <code>b</code> to the graph, with its associated …","","Add a node (also called vertex) with associated data <code>weight</code>…","","","","","","","","","","","","","","","","","","","","","","","","Return the current node and edge capacity of the graph.","Remove all nodes and edges","Remove all edges","","","","","","","","","","","","","","","","","","","","","","","","Lookup if there is an edge from <code>a</code> to <code>b</code>.","","","Return a “walker” object that can be used to step …","","Return the number of edges in the graph.","","Access the source and target nodes for <code>e</code>.","","Return an iterator over the edge indices of the graph","Create an iterator over all edges in the graph, in indexed …","Access the weight for edge <code>e</code>.","","","Access the weight for edge <code>e</code>, mutably","Return an iterator yielding immutable access to all edge …","Return an iterator yielding mutable access to all edge …","","Return an iterator of all edges of <code>a</code>.","Return an iterator over all the edges connecting <code>a</code> and <code>b</code>.","","Return an iterator of all edges of <code>a</code>, in the specified …","","Extend the graph from an iterable of edges.","Return an iterator over either the nodes without edges to …","Create a new <code>StableGraph</code> by mapping nodes and edges. A …","Lookup an edge from <code>a</code> to <code>b</code>.","Lookup an edge between <code>a</code> and <code>b</code>, in either direction.","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Create a new <code>StableGraph</code> from an iterable of edges.","","","","","","","","","Index the <code>StableGraph</code> by two indices, any combination of …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","Whether the graph has directed edges or not.","Create a new <code>StableGraph</code> by mapping node and edge weights …","","Return an iterator of all nodes with an edge starting from …","","Return an iterator of all neighbors that have an edge …","Return an iterator of all neighbors that have an edge …","Create a new <code>StableGraph</code> with directed edges.","Step to the next edge and its endpoint node in the walk …","","","","","","","","","","","","","","","Return an upper bound of the node indices in the graph","","Return the number of nodes (vertices) in the graph.","","","Return an iterator over the node indices of the graph","","Access the weight for node <code>a</code>.","","","Access the weight for node <code>a</code>, mutably.","Return an iterator yielding immutable access to all node …","Return an iterator yielding mutable access to all node …","Remove an edge and return its edge weight, or <code>None</code> if it …","Remove <code>a</code> from the graph if it exists, and return its …","","Keep all edges that return <code>true</code> from the <code>visit</code> closure, …","Keep all nodes that return <code>true</code> from the <code>visit</code> closure, …","Reverse the direction of all edges","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Add or update an edge from <code>a</code> to <code>b</code>. If the edge already …","","","Access the edge’s weight.","","Create a new <code>StableGraph</code> with estimated capacity.","<code>UnionFind&lt;K&gt;</code> is a disjoint-set data structure. It tracks …","","","","","Returns <code>true</code> if the given elements belong to the same set, …","Return the representative for <code>x</code>.","Return the representative for <code>x</code>.","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Return a vector mapping each element to its representative.","Create a new <code>UnionFind</code> of <code>n</code> disjoint sets.","","","","","Unify the two sets containing <code>x</code> and <code>y</code>.","The associated adjacency matrix type","An edge to an already visited node.","A breadth first search (BFS) of a graph.","Stop the DFS traversal and return the provided value.","Continue the DFS traversal as normal.","Control flow for <code>depth_first_search</code> callbacks.","Control flow for callbacks.","A cross or forward edge.","Define associated data for nodes and edges","Visit nodes of a graph in a depth-first-search (DFS) …","A depth first search (DFS) visitor event.","Visit nodes in a depth-first-search (DFS) emitting nodes …","","A graph with a known edge count.","An edge-filtering graph adaptor.","A filtered edges iterator.","A filtered neighbors iterator.","A filtered neighbors-directed iterator.","","edge identifier","The graph’s <code>NodeId</code>s map to indices","An edge reference.","","","The kind edges in the graph.","","","","A graph filter for edges","A graph filter for nodes.","All edges from a node have been reported.","Create or access the adjacency matrix of a graph.","Base graph trait: defines the associated node identifier …","Edge kind property (directed or undirected edges)","A copyable reference to a graph.","Access to the sequence of the graph’s edges","Access to the edges of each node.","Access to all edges of each node, in the specified …","Access to the neighbors of each node","Access to the neighbors of each node, through incoming or …","Access to the sequence of the graph’s <code>NodeId</code>s.","Access to the sequence of the graph’s nodes","","The associated map type","","","The graph’s <code>NodeId</code>s map to indices, in a range without …","A graph with a known node count.","A node-filtering graph adaptor.","A filtered edges iterator.","A filtered edges iterator.","A filtered neighbors iterator.","A filtered node references iterator.","","","node identifier","","The graph’s <code>NodeId</code>s map to indices","A node reference.","","","","Prune the current node from the DFS traversal. No more …","An edge-reversing graph adaptor.","A reversed edge reference","A reversed edge references iterator.","A reversed edges iterator.","Strictly monotonically increasing event time for a depth …","A topological order traversal for a graph.","An edge of the tree formed by the traversal.","A mapping for storing the visited status for NodeId <code>N</code>.","A graph that can create a map that tracks the visited …","A walker is a traversal state, but where part of the …","A walker and its context wrapped into an iterator.","","","Create the adjacency matrix","","Return the original, unreversed edge reference.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the value in <code>Control::Break(_)</code>, if present.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A recursive depth first search.","The map of discovered nodes","The map of discovered nodes","The map of discovered nodes","Return an upper bound of the edge indices in the graph …","","","","Return the number of edges in the graph.","","","","","","","","","","","","","","","","","Create a new <strong>Dfs</strong> using the graph’s visitor map, and no …","Create a new <code>DfsPostOrder</code> using the graph’s visitor map, …","","","","The map of finished nodes","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Create an <code>NodeFiltered</code> adaptor from the closure <code>filter</code>.","Create an <code>EdgeFiltered</code> adaptor from the closure <code>filter</code>.","Convert <code>i</code> to a node index. <code>i</code> must be a valid value in the …","Convert <code>i</code> to an edge index. <code>i</code> must be a valid value in the …","","","","","","","Create a <code>Dfs</code> from a vector and a visit map","","The edge’s identifier.","","","Return true to have the edge be part of the graph","Return true to have the node be part of the graph","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Consume <code>self</code> and return the original, unreversed edge …","Return true if there is an edge from <code>a</code> to <code>b</code>, false …","","","Return whether <code>a</code> has been visited before.","Create an iterator out of the walker and given <code>context</code>.","Create an iterator out of the walker and given <code>context</code>.","Keep the discovered map, but clear the visit stack and …","Keep the discovered and finished map, but clear the visit …","Return an iterator of the neighbors of node <code>a</code>.","","","","","","","","Create a new <strong>Dfs</strong>, using the graph’s visitor map, and put …","Create a new <code>DfsPostOrder</code> using the graph’s visitor map, …","Create a new <strong>Bfs</strong>, using the graph’s visitor map, and put …","Create a new <code>Topo</code>, using the graph’s visitor map, and …","Return the next node in the dfs, or <strong>None</strong> if the traversal …","Return the next node in the traversal, or <code>None</code> if the …","Return the next node in the bfs, or <strong>None</strong> if the traversal …","Return the next node in the current topological order …","","","","","","","","","","","Return an upper bound of the node indices in the graph …","","","","","","","","","","","","","","","","","","","Clear the visit state","Clear the visit state","Clear visited state, and put all initial nodes in the to …","Reset the visitor map (and resize to new size of graph if …","","","","","","","","","","","","","","","","","The source node of the edge.","","The stack of nodes to visit","The stack of nodes to visit","The queue of nodes to visit","The target node of the edge.","","Convert <code>a</code> to an integer index.","Convert <code>a</code> to an integer index.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Mark <code>a</code> as visited.","Create a new visitor map","","","","Advance to the next item","","","","","A reference to the weight of the edge.","",""],"i":[0,0,0,0,0,1,0,83,0,1,0,0,0,1,2,3,1,2,3,1,2,3,1,2,3,1,0,0,0,1,1,1,1,2,3,1,2,3,0,0,1,1,1,2,3,83,40,2,3,0,0,1,1,0,0,1,2,3,1,2,3,1,2,3,1,2,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,14,14,16,20,21,22,23,24,14,25,26,16,20,21,22,23,24,14,25,26,14,16,20,21,22,23,24,14,25,26,16,20,21,22,23,24,14,25,26,16,22,14,14,14,14,14,14,14,14,14,14,14,16,22,16,16,22,22,14,16,20,21,22,23,24,14,25,26,16,20,21,22,23,24,14,25,26,14,16,15,22,16,20,21,22,23,24,14,25,26,20,21,23,24,25,26,14,14,21,24,14,14,20,21,23,24,25,26,21,24,14,14,14,14,14,14,14,16,22,14,21,24,21,24,20,21,24,25,26,22,22,14,16,20,21,22,23,24,14,25,26,16,20,21,22,23,24,14,25,26,16,20,21,22,23,24,14,25,26,16,20,21,22,23,24,14,25,26,14,14,15,22,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,34,46,37,38,39,34,46,37,38,39,34,37,38,39,34,37,38,39,0,0,34,46,0,0,0,38,39,0,0,0,0,34,46,37,38,39,34,46,37,38,39,0,0,0,175,34,46,37,38,39,37,0,0,0,0,0,0,0,0,0,0,0,0,64,0,64,0,34,46,37,46,38,64,46,0,0,0,0,34,37,38,39,0,0,34,46,37,38,39,34,46,37,38,39,34,46,37,38,39,175,0,0,0,56,56,56,56,56,0,56,56,56,56,56,56,56,56,0,0,0,0,60,61,62,60,61,62,60,61,62,60,61,62,60,60,61,62,60,61,62,60,60,60,61,62,61,62,61,62,60,0,62,60,60,61,62,60,61,62,60,61,62,60,61,62,0,0,0,0,0,0,0,0,0,0,0,69,71,70,69,71,70,69,69,69,69,71,70,0,69,71,70,71,70,69,69,69,69,0,71,70,69,69,71,70,69,71,70,69,71,70,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,74,74,74,74,76,77,78,79,80,81,82,74,76,77,78,79,80,81,82,74,74,76,77,78,79,80,81,82,74,76,77,78,79,80,81,82,74,74,74,74,74,74,74,74,74,76,77,78,79,80,81,82,74,76,77,78,79,80,81,82,74,74,78,74,74,74,76,77,78,79,80,81,82,77,79,80,81,82,74,74,74,74,74,77,79,80,81,82,82,74,74,74,74,74,74,74,77,80,81,82,78,78,74,74,76,77,78,79,80,81,82,74,76,77,78,79,80,81,82,74,76,77,78,79,80,81,82,74,76,77,78,79,80,81,82,74,78,78,74,0,0,0,0,84,0,0,0,0,84,176,176,84,85,84,85,84,85,84,85,67,108,84,84,84,177,84,85,84,85,178,84,85,85,85,67,108,85,84,85,84,85,84,85,84,85,176,179,180,180,181,180,0,0,88,88,88,88,88,89,88,89,88,88,88,88,89,89,88,89,88,89,88,89,89,89,88,89,88,89,88,89,89,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,41,41,41,41,41,94,41,95,94,92,93,96,97,98,99,100,101,110,109,102,103,104,105,106,41,95,94,92,93,96,97,98,99,100,101,110,109,102,103,104,105,106,41,41,41,41,95,92,93,96,97,98,99,100,101,102,103,104,105,106,41,41,95,92,93,96,97,98,99,100,101,102,103,104,105,106,92,93,41,41,92,93,94,99,41,94,41,41,94,41,0,41,41,41,94,41,41,94,41,41,94,41,41,41,41,94,41,41,41,94,92,93,92,93,104,92,92,93,93,41,41,41,41,41,41,41,92,93,96,97,98,99,100,101,110,109,102,103,104,105,106,41,41,95,94,92,92,93,93,96,97,98,99,100,101,110,109,102,103,104,105,106,41,41,41,41,94,94,92,93,92,104,13,41,41,94,92,92,93,41,41,94,41,94,41,95,94,92,93,96,97,98,99,100,101,110,109,102,103,104,105,106,41,98,99,100,101,110,109,102,103,105,106,41,41,94,41,41,13,92,41,41,94,41,41,94,41,13,41,94,92,92,93,41,95,98,99,100,101,110,109,102,103,105,106,102,103,105,106,41,95,96,97,95,41,94,41,41,94,41,94,0,41,41,94,41,41,94,41,41,94,41,41,92,93,41,41,41,41,41,41,41,41,41,94,41,41,41,41,41,41,98,101,110,109,102,103,105,106,97,104,97,104,41,41,94,94,41,95,92,93,96,97,98,99,100,101,102,103,104,105,106,41,95,94,92,93,96,97,98,99,100,101,110,109,102,103,104,105,106,41,95,94,92,93,96,97,98,99,100,101,110,109,102,103,104,105,106,41,95,94,92,93,96,97,98,99,100,101,110,109,102,103,104,105,106,41,41,41,94,92,104,104,96,97,41,41,0,0,0,0,0,0,0,0,0,0,0,0,0,0,116,116,116,116,116,116,116,118,119,116,120,121,122,123,124,117,125,126,118,119,116,120,121,122,123,124,117,125,126,116,116,119,116,120,121,122,123,124,117,125,126,119,116,120,121,122,123,124,117,125,126,119,116,116,118,117,116,119,116,116,116,116,116,116,116,116,116,116,119,119,119,116,119,116,120,121,122,123,124,117,125,126,118,119,116,120,121,122,123,124,117,125,126,116,116,116,116,116,116,119,116,116,118,119,116,120,121,122,123,124,117,125,126,116,118,120,121,122,123,124,117,125,126,116,116,118,117,120,116,116,116,116,116,118,120,121,122,123,124,117,125,126,118,120,117,116,116,116,116,116,116,118,117,119,116,116,116,120,120,118,120,121,122,123,124,117,125,126,116,116,119,116,120,121,122,123,124,117,125,126,118,119,116,120,121,122,123,124,117,125,126,118,119,116,120,121,122,123,124,117,125,126,118,119,116,120,121,122,123,124,117,125,126,116,116,116,116,0,0,0,0,0,0,0,0,0,0,0,0,0,129,129,129,129,129,137,129,131,132,133,134,135,137,129,131,132,133,134,135,129,129,131,132,133,134,135,129,131,132,133,134,135,137,129,129,129,129,129,129,129,129,129,129,129,131,132,133,134,135,137,129,131,132,133,134,135,129,129,129,129,129,129,129,137,129,131,132,133,134,135,131,132,133,134,135,129,129,136,129,129,129,129,129,129,131,132,133,134,135,129,129,129,129,0,129,129,129,129,129,129,131,132,134,129,129,131,132,133,134,135,137,129,131,132,133,134,135,137,129,131,132,133,134,135,137,129,131,132,133,134,135,129,129,129,129,136,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,111,111,111,111,111,111,138,139,140,141,142,143,144,145,146,147,111,138,139,140,141,142,143,144,145,146,147,111,111,111,111,138,139,140,141,142,143,144,145,146,147,111,111,138,139,140,141,142,143,144,145,146,147,111,111,111,145,111,111,111,111,0,111,111,111,111,111,111,111,111,111,111,111,111,111,140,111,111,111,111,111,111,139,140,141,142,143,144,145,146,147,111,111,138,139,140,141,142,143,144,145,146,147,111,111,111,111,140,111,111,111,111,111,111,138,139,140,141,142,143,144,145,146,147,139,141,142,143,144,145,146,147,111,111,111,111,111,111,111,111,111,138,139,141,142,143,144,145,146,147,139,143,146,147,138,138,111,111,111,111,0,111,111,111,111,111,111,111,111,111,111,111,111,111,111,139,142,144,146,147,140,140,111,111,111,138,139,140,141,142,143,144,145,146,147,111,138,139,140,141,142,143,144,145,146,147,111,138,139,140,141,142,143,144,145,146,147,111,138,139,140,141,142,143,144,145,146,147,111,111,111,140,140,111,111,0,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,66,153,0,151,151,0,0,153,0,0,0,0,153,0,0,0,0,0,174,72,0,0,44,44,63,35,54,68,0,0,153,0,0,0,0,0,0,0,0,0,0,0,170,48,47,53,0,0,0,0,0,0,0,174,182,72,51,0,0,36,36,35,151,0,0,0,0,0,0,153,0,0,0,0,174,182,66,149,150,152,153,151,154,155,156,157,158,159,160,161,162,163,164,165,166,167,149,168,150,169,152,153,151,154,155,156,157,158,159,160,161,162,163,164,165,166,167,149,168,150,169,151,151,152,153,151,154,155,156,157,158,159,160,161,162,163,164,165,166,167,149,168,150,169,152,153,151,154,155,156,157,158,159,160,161,162,163,164,165,166,167,149,168,150,169,152,158,171,151,152,151,154,155,156,157,0,154,155,156,107,159,164,149,65,149,44,159,164,149,159,149,149,54,159,164,149,68,159,164,149,154,155,152,152,152,155,152,153,151,154,155,158,159,160,161,162,163,164,165,166,167,149,168,150,169,152,153,151,154,155,156,157,158,159,160,161,162,163,164,165,166,167,149,168,150,169,159,164,52,107,159,159,164,164,149,149,154,152,174,182,150,173,172,158,158,152,153,151,154,155,156,157,158,159,160,161,162,163,164,165,166,167,149,168,150,169,158,160,161,162,163,165,166,167,168,169,150,66,149,63,45,170,170,154,155,47,159,164,149,53,159,164,149,154,155,156,157,154,155,156,157,158,160,161,162,163,165,166,167,168,169,52,159,164,149,55,164,149,51,159,164,149,36,159,164,149,159,149,149,152,154,155,157,48,159,164,149,171,151,171,151,160,161,162,163,165,166,167,168,169,174,150,154,155,156,174,150,52,107,159,159,164,164,149,149,152,153,151,154,155,156,157,158,159,160,161,162,163,164,165,166,167,149,168,150,169,152,153,151,154,155,156,157,158,159,160,161,162,163,164,165,166,167,149,168,150,169,152,153,151,154,155,156,157,158,159,160,161,162,163,164,165,166,167,149,168,150,169,152,153,151,154,155,156,157,158,159,160,161,162,163,164,165,166,167,149,168,150,169,45,48,159,164,149,170,154,155,156,157,174,182,150],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[1,1],[2,2],[3,3],[[]],[[]],[[]],[[1,1],4],0,0,0,[[1,1],5],[[],5],[[],5],[[1,6],7],[[2,6],7],[[3,6],7],[[]],[[]],[[]],0,0,[[1,8]],[1,9],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],0,0,[1,1],[[1,1],[[10,[4]]]],0,0,[[]],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[],12],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[14,[13]],[15,[13]],[15,[13]]],[[16,[13]]]],[[[14,[13]],[15,[13]],[15,[13]]],[[10,[[16,[13]]]]]],[[[14,[13]]],[[15,[13]]]],[[[14,[13]]],[[15,[13]]]],[[[14,[13]],17],[[15,[13]]]],[[[14,[13]],9],[[15,[13]]]],[[[14,[13]]],18],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[14,[13]]]],[[[16,[[0,[13,19]]]]],[[16,[[0,[13,19]]]]]],[[[20,[[0,[13,19]]]]],[[20,[[0,[13,19]]]]]],[[[21,[19,[0,[13,19]]]]],[[21,[19,[0,[13,19]]]]]],[[[22,[13]]],[[22,[13]]]],[[[23,[19,[0,[19,13]]]]],[[23,[19,[0,[19,13]]]]]],[[[24,[19]]],[[24,[19]]]],[[[14,[19,[0,[13,19]]]]],[[14,[19,[0,[13,19]]]]]],[[[25,[13]]],[[25,[13]]]],[[[26,[19,[0,[13,19]]]]],[[26,[19,[0,[13,19]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[16,[[0,[13,27]]]],[16,[[0,[13,27]]]]],4],[[[22,[27,[0,[27,13]]]],[22,[27,[0,[27,13]]]]],4],[[[14,[13]],[15,[13]],[15,[13]]],5],[[],[[14,[28,[0,[13,28]]]]]],[[[14,[13]]],9],[[[14,[13]]],9],[[[14,[13]],[16,[13]]],10],[[[14,[13]]],[[23,[13]]]],[[[14,[13]],[15,[13]]],[[20,[13]]]],[[[14,[13]]]],[[[14,[13]],[16,[13]]],10],[[[14,[13]],[16,[13]]],10],[[[14,[13]]]],[[[16,[[0,[13,29]]]],[16,[[0,[13,29]]]]],5],[[[22,[29,[0,[29,13]]]],[22,[29,[0,[29,13]]]]],5],[[],5],[[],5],[[],5],[[],5],[[[14,[13]],[15,[13]],[15,[13]]],[[10,[[16,[13]]]]]],[[[16,[[0,[13,30]]]],6],7],[[[20,[[0,[13,30]]]],6],7],[[[21,[30,[0,[13,30]]]],6],7],[[[22,[30,[0,[30,13]]]],6],7],[[[23,[30,[0,[30,13]]]],6],7],[[[24,[30]],6],7],[[[14,[30,13]],6],7],[[[25,[30,13]],6],7],[[[26,[30,[0,[13,30]]]],6],7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[14,[13]],9]],[[[16,[[0,[13,31]]]],8]],[[[15,[13]]]],[[[22,[13]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[14,[13]],18,[15,[13]],[15,[13]]],5],[[[14,[13]]],5],[[[21,[13]]],9],[24,9],[[[14,[13]],[15,[13]]]],[[],[[14,[13]]]],[[[20,[13]]],10],[[[21,[13]]],10],[[[23,[13]]],[[10,[[16,[13]]]]]],[24,10],[[[25,[13]]],10],[[[26,[13]]],10],[[[21,[13]]],10],[24,10],[[[14,[13]]],9],[[[14,[13]]],9],[[[14,[13]]],[[24,[13]]]],[[[14,[13]]],[[24,[13]]]],[[[14,[13]]]],[[[14,[13]]],10],[[[14,[13]]],10],[[[16,[[0,[13,32]]]],[16,[[0,[13,32]]]]],[[10,[4]]]],[[[22,[32,[0,[32,13]]]],[22,[32,[0,[32,13]]]]],[[10,[4]]]],[[[14,[13]]]],[[[21,[13]],33],10],[[24,33],10],[[[21,[13]],33]],[[24,33]],[[[20,[13]]]],[[[21,[13]]]],[24],[[[25,[13]]]],[[[26,[13]]]],[[[22,[13]]]],[[[22,[13]]]],[[[14,[13]]],9],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[[14,[13]],[15,[13]],[15,[13]]],[[16,[13]]]],[[[14,[13]]],18],[[[15,[13]]]],[[[22,[13]]]],[9,[[14,[13]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[34,[19,19]]],[[34,[19,19]]]],[[[37,[[0,[35,36,19]]]]],[[37,[[0,[35,36,19]]]]]],[[[38,[19]]],[[38,[19]]]],[39,39],[[]],[[]],[[]],[[]],[[[41,[40,13]],5],[[41,[42,40,13]]]],[[[0,[43,44]]],9],[[],[[34,[[0,[45,28]]]]]],[[],46],0,0,0,[[[38,[29]],[38,[29]]],5],[[39,39],5],0,0,0,0,[[[34,[30,30]],6],7],[[[46,[30]],6],7],[[[37,[[0,[35,36,30]]]],6],7],[[[38,[30]],6],7],[[39,6],7],[[]],[[]],[[]],[[]],[[]],0,0,[[[0,[47,48]],[10,[34]]],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[0,[49,48,47]],[0,[50,29,30]]],5],[[[0,[51,47,48]]],5],[[[0,[52,44]]],5],0,0,0,0,0,0,0,[[[0,[53,48,51]]],[[42,[42]]]],0,[[]],0,[[]],[[[0,[36,44,52]]],[[37,[[0,[36,44,52]]]]]],[[[0,[49,48]]],[[34,[[0,[50,29]],[45,[[0,[50,29]]]]]]]],[[],46],[[[37,[[0,[36,52]]]]],10],[[[46,[[0,[50,29]]]],[0,[47,52]],[0,[50,29]]],9],[[[38,[50]]],50],[[]],[[[46,[[0,[50,29]]]],[0,[51,47,52]],33]],[[[0,[53,48,51]]],[[42,[42]]]],0,0,[[[0,[51,47,52]]],[[42,[42]]]],[[]],[[]],[[]],[[]],[[[0,[53,51,48]],[10,[34]]],[[11,[42,38]]]],0,[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[],12],[[],12],[[],12],[[]],[[[0,[54,48]],33,33,33],10],0,[[[0,[55,51,54,52]]],[[11,[56,39]]]],[[]],[[]],[[[56,[19,19]]],[[56,[19,19]]]],[[]],0,[[[0,[55,51,54,52,48]]],[[10,[42]]]],[[[56,[30,30]],6],7],[[]],[[]],0,[[]],[[],11],[[],11],[[],12],[[[0,[54,48]],10,33],[[58,[[0,[57,50]]]]]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[[60,[[0,[50,59,31,19]]]]],[[60,[[0,[50,59,31,19]]]]]],[[[61,[[0,[50,59,31,19]]]]],[[61,[[0,[50,59,31,19]]]]]],[[[62,[[0,[50,59,31,19]]]]],[[62,[[0,[50,59,31,19]]]]]],[[]],[[]],[[]],[[[60,[[0,[50,59,31]]]],[0,[50,59,31]]],[[10,[[61,[[0,[50,59,31]]]]]]]],[[[60,[[0,[50,59,31,30]]]],6],7],[[[61,[[0,[50,59,31,30]]]],6],7],[[[62,[[0,[50,59,31,30]]]],6],7],[[]],[[]],[[]],[[[60,[[0,[50,59,31]]]],[0,[50,59,31]]],[[10,[[0,[50,59,31]]]]]],[[[60,[[0,[50,59,31]]]],[0,[50,59,31]]],[[62,[[0,[50,59,31]]]]]],[[]],[[]],[[]],[[]],[[]],[[[61,[[0,[50,59,31]]]]],10],[[[62,[[0,[50,59,31]]]]],10],[[[60,[[0,[50,59,31]]]]],[[0,[50,59,31]]]],[[[0,[47,48]]],60],[[[62,[[0,[50,59,31]]]]]],[[[60,[[0,[50,59,31]]]],[0,[50,59,31]]],[[10,[[61,[[0,[50,59,31]]]]]]]],[[]],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[],12],[[[0,[44,63,55]]],17],[[[0,[43,44,51,63]],33],[[11,[[58,[[0,[64,50]]]],39]]]],[[[0,[43,65,66,63,53]],[0,[43,65,66,63,53]]],5],[[[0,[43,65,67,66,63,68]],[0,[43,65,67,66,63,68]],33,33],5],[[[0,[43,65,66,63,53]],[0,[43,65,66,63,53]]],5],[[[0,[43,65,67,66,63,68]],[0,[43,65,67,66,63,68]],33,33],5],[[[0,[43,65,67,66,63,68]],[0,[43,65,67,66,63,68]],33,33],[[10,[17]]]],[[[0,[54,48,55,52]],10,9,33],[[58,[[0,[57,50]]]]]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[[69,[52]]],5],[[[69,[52]]],5],[[[69,[52]]],[[70,[52]]]],[[]],[[]],[[]],[[[0,[48,51,52,47]]],[[69,[[0,[48,51,52,47]]]]]],[[]],[[]],[[]],[[]],[[]],[[[69,[52]]],5],[[[69,[55]]],5],[[[69,[52]]],9],[[[69,[52]]],10],[[[0,[48,52,51,54]]],[[69,[[0,[48,52,51,54]]]]]],[[[71,[52]]],10],[[[70,[52]]],10],[[[69,[52]]],[[71,[52]]]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[],12],[[[0,[55,53]],9,[10,[9]]],17],[[[0,[72,53,43,55]],73]],[[[14,[13]]]],0,0,0,0,0,0,0,0,0,0,0,0,[[[74,[19,40,13]],[75,[13]],[75,[13]],19],5],[[[74,[40,13]]],[[75,[13]]]],[[[74,[40,13]]],18],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[74,[40,13]]]],[[[74,[19,19,19]]],[[74,[19,19,19]]]],[76,76],[[[77,[19,19,19]]],[[77,[19,19,19]]]],[[[78,[50]]],[[78,[50]]]],[[[79,[19,19,19]]],[[79,[19,19,19]]]],[[[80,[19]]],[[80,[19]]]],[[[81,[19]]],[[81,[19]]]],[[[82,[19,[0,[19,13]]]]],[[82,[19,[0,[19,13]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[74,[40,13]],[75,[13]],[75,[13]]],5],[[],[[74,[40,13]]]],[[[74,[40,13]]],9],[[[74,[40,13]]],9],[[[74,[40,13]]]],[[[74,[40,13]],[75,[13]]],[[77,[40,13]]]],[[[74,[40,13]]]],[[[74,[40,13]],[75,[13]]],73],[[[74,[30,30,30,30]],6],7],[[76,6],7],[[[77,[30,30,30]],6],7],[[[78,[30,30,30]],6],7],[[[79,[30,30,30]],6],7],[[[80,[30]],6],7],[[[81,[30]],6],7],[[[82,[30,[0,[30,13]]]],6],7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[74,[40,13]],9]],[[[73,[[0,[19,83]]]]],[[11,[[74,[28,2,13]],76]]]],[[[78,[40,13]]]],[[[74,[40,13]],[75,[13]]]],[[[74,[40,13]],[75,[13]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[74,[40,13]],18,[75,[13]],[75,[13]]],5],[[[74,[40,13]]],5],[[[74,[40,13]]]],[[[74,[40,13]],[75,[13]]],[[73,[[75,[13]]]]]],[[],[[74,[40,13]]]],[[[77,[40,13]]],10],[[[79,[40,13]]],10],[[[80,[13]]],10],[[[81,[13]]],10],[[[82,[13]]],10],[[[82,[13]]],10],[[[74,[40,13]]],9],[[[74,[40,13]]],9],[[[74,[40,13]]],9],[[[74,[40,13]]]],[[[74,[40,13]]]],[[[74,[40,13]],[75,[13]]],9],[[[74,[40,13]]]],[[[77,[40,13]]]],[[[80,[13]]]],[[[81,[13]]]],[[[82,[13]]]],[[[78,[40,13]]]],[[[78,[40,13]]]],[[[74,[40,13]]],9],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[[74,[40,13]]],18],[[[78,[40,13]]]],[[[78,[40]]]],[9,[[74,[28,40,13]]]],0,0,0,0,0,0,0,0,0,0,[[],10],[[]],[[]],[[]],[[]],[[]],[[[84,[19,19]]],[[84,[19,19]]]],[[[85,[19,19]]],[[85,[19,19]]]],[[]],[[]],[[],10],[[],10],[[[84,[29,29]],[84,[29,29]]],5],[[],5],[[],5],[[86,33],[[85,[86,33]]]],[[[84,[30,30]],6],7],[[[85,[30,30]],6],7],[[]],[[]],[87,86],[[]],[[]],[[]],[[[85,[17,33]]],10],[[],10],[[],10],[[[85,[17,33]]]],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[]],[[9,9]],0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[88,88],5],[[],5],[[],5],[[[89,[[0,[44,36,52,63]]]],6],7],[[[89,[[0,[44,36,52,63]]]],6],7],[[88,6],7],[[]],[[]],[[]],[[]],[[[0,[36,44]]],[[89,[[0,[36,44]]]]]],[[],90],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[[0,[36,44]],[73,[88]],91,91],[[89,[[0,[36,44]]]]]],[[[0,[36,44]],[73,[88]]],[[89,[[0,[36,44]]]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[41,[40,13]]],10],[[[41,[40,13]],[92,[13]],[92,[13]]],[[93,[13]]]],[[[41,[40,13]]]],[[[41,[40,13]]],[[92,[13]]]],[[[41,[40,13]]],18],[[[94,[66]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[41,[40,13]]]],[[[41,[40,13]]]],[[[41,[40,13]]]],[[[41,[19,19,13]]],[[41,[19,19,13]]]],[[[95,[13]]],[[95,[13]]]],[[[92,[19]]],[[92,[19]]]],[[[93,[19]]],[[93,[19]]]],[[[96,[19,50]]],[[96,[19,50]]]],[[[97,[19,50]]],[[97,[19,50]]]],[[[98,[19,19,[0,[19,13]]]]],[[98,[19,19,[0,[19,13]]]]]],[[[99,[13]]],[[99,[13]]]],[[[100,[40,13]]],[[100,[40,13]]]],[[[101,[19,[0,[40,19]],[0,[13,19]]]]],[[101,[19,[0,[40,19]],[0,[13,19]]]]]],[[[102,[19]]],[[102,[19]]]],[[[103,[19]]],[[103,[19]]]],[[[104,[13]]],[[104,[13]]]],[[[105,[19,[0,[19,13]]]]],[[105,[19,[0,[19,13]]]]]],[[[106,[19,[0,[19,13]]]]],[[106,[19,[0,[19,13]]]]]],[[[41,[19,19,13]],[41,[19,19,13]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[92,[27]],[92,[27]]],4],[[[93,[27]],[93,[27]]],4],[[[41,[40,13]],[92,[13]],[92,[13]]],5],[[],[[41,[40,13]]]],[[],[[92,[28]]]],[[],[[93,[28]]]],[94],[[[99,[13]]],[[95,[13]]]],[[[41,[40,13]]],9],[[[94,[107]]],9],[[[41,[40,13]]],9],[[[41,[40,13]]],9],[[[94,[65]]],9],[[[41,[40,13]],[93,[13]]],10],[9,[[93,[13]]]],[[[41,[40,13]]],[[103,[13]]]],[[[41,[40,13]]]],[[[41,[40,13]]],[[106,[13]]]],[[[94,[44]]]],[[[41,[40,13]],[93,[13]]],10],[[[41,[40,13]]],10],[[[94,[67]]],10],[[[41,[40,13]]],10],[[[41,[40,13]],[93,[13]]],10],[[[94,[108]]],10],[[[41,[40,13]]],[[0,[13]]]],[[[41,[40,13]]],[[109,[13]]]],[[[41,[40,13]]]],[[[41,[40,13]],[92,[13]]],[[100,[40,13]]]],[[[94,[54]]]],[[[41,[40,13]],[92,[13]],[92,[13]]],[[101,[40,13]]]],[[[41,[40,13]],[92,[13]],1],[[100,[40,13]]]],[[[41,[40,13]],1]],[[[94,[68]],1]],[[],[[92,[13]]]],[[],[[93,[13]]]],[[[92,[29]],[92,[29]]],5],[[[93,[29]],[93,[29]]],5],[[[104,[29,13]],[104,[29,13]]],5],[[],5],[[],5],[[],5],[[],5],[[[41,[28,40,13]],87]],[[[41,[40,13]],1],[[98,[40,13]]]],[[[41,[40,13]],33,33],[[41,[40,13]]]],[[[41,[40,13]],[92,[13]],[92,[13]]],[[10,[[93,[13]]]]]],[[[41,[40,13]],[92,[13]],[92,[13]]],10],[[[41,[40,13]],[92,[13]],1],[[10,[[93,[13]]]]]],[[[41,[30,30,40,13]],6],7],[[[92,[30]],6],7],[[[93,[30]],6],7],[[[96,[30,30]],6],7],[[[97,[30,30]],6],7],[[[98,[30,30,[0,[30,13]]]],6],7],[[[99,[30,30]],6],7],[[[100,[30,[0,[40,30]],[0,[13,30]]]],6],7],[[[101,[30,[0,[40,30]],[0,[13,30]]]],6],7],[[[110,[30,[0,[30,13]]]],6],7],[[[109,[30,[0,[30,13]]]],6],7],[[[102,[30]],6],7],[[[103,[30]],6],7],[[[104,[30,30]],6],7],[[[105,[30,[0,[30,13]]]],6],7],[[[106,[30,[0,[30,13]]]],6],7],[[[111,[40,13]]],[[41,[40,13]]]],[[]],[[]],[[]],[13,[[92,[13]]]],[[]],[13,[[93,[13]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[87,[[41,[28,40,13]]]],[87,[[41,[40,13]]]],[[[41,[40,13]],9]],[[[41,[40,13]],9]],[[[94,[107]],9]],[[[94,[52]],9]],[[[92,[31]],8]],[[[93,[31]],8]],[[]],[[[104,[13]]]],[[],9],[[[41,[40,13]],[92,[13]]]],[[[41,[40,13]],[93,[13]]]],[[[94,[112]]]],[[[92,[13]]],9],[[[92,[13]]],9],[[[93,[13]]],9],[[[41,[40,13]],[92,[13]]]],[[[41,[40,13]],[93,[13]]]],[[[94,[113]]]],[[[41,[40,13]],114,114]],[[[94,[[41,[40,13]]]],114,114]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[41,[40,13]]],[[41,[40,13]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[41,[40,13]]]],[[[41,[40,13]],18,[92,[13]],[92,[13]]],5],[[[94,[66]]],5],[[[41,[40,13]]],5],[[[41,[40,13]],33,33],[[41,[40,13]]]],[[]],[[],[[92,[13]]]],[[[41,[40,13]],[92,[13]]],[[99,[13]]]],[[[41,[40,13]],[92,[13]]],[[99,[13]]]],[[[94,[47]]]],[[[41,[40,13]],[92,[13]],1],[[99,[13]]]],[[[41,[40,13]],[92,[13]],1],[[99,[13]]]],[[[94,[53]],1]],[[[41,[40,13]],[92,[13]]],[[99,[13]]]],[9],[[],[[41,[2]]]],[[],94],[9,[[92,[13]]]],[9,[[92,[13]]]],[9,[[93,[13]]]],[[],[[41,[3]]]],[[[95,[13]],[41,[40,13]]],10],[[[98,[40,13]]],[[10,[[92,[13]]]]]],[[[99,[13]]],[[10,[[92,[13]]]]]],[[[100,[40,13]]],10],[[[101,[40,13]]],[[10,[[104,[13]]]]]],[[[110,[13]]],10],[[[109,[13]]],10],[[[102,[13]]],10],[[[103,[13]]],10],[[[105,[13]]],10],[[[106,[13]]],10],[[[102,[13]]],10],[[[103,[13]]],10],[[[105,[13]]],10],[[[106,[13]]],10],[[[41,[40,13]],[93,[13]],1],[[10,[[93,[13]]]]]],[[[95,[13]],[41,[40,13]]],[[10,[[93,[13]]]]]],[[[96,[13]],1],[[93,[13]]]],[[[97,[13]],1],[[93,[13]]]],[[[95,[13]],[41,[40,13]]],[[10,[[92,[13]]]]]],[[[41,[40,13]]],9],[[[94,[52]]],9],[[[41,[40,13]]],9],[[[41,[40,13]]],9],[[[94,[55]]],9],[[[41,[40,13]]],[[102,[13]]]],[[[94,[51]]]],[9,[[92,[13]]]],[[[41,[40,13]]],[[102,[13]]]],[[[41,[40,13]]]],[[[94,[36]]]],[[[41,[40,13]]],10],[[[41,[40,13]],[92,[13]]],10],[[[94,[67]]],10],[[[41,[40,13]],[92,[13]]],10],[[[41,[40,13]]],10],[[[94,[108]]],10],[[[41,[40,13]]],[[0,[13]]]],[[[41,[40,13]]],[[110,[13]]]],[[[92,[32]],[92,[32]]],[[10,[4]]]],[[[93,[32]],[93,[32]]],[[10,[4]]]],[[[41,[40,13]]],[[73,[[97,[13]]]]]],[[[41,[40,13]]],[[73,[[96,[13]]]]]],[[[41,[40,13]],[93,[13]]],10],[[[41,[40,13]],[92,[13]]],10],[[[41,[40,13]],9]],[[[41,[40,13]],9]],[[[41,[40,13]],9]],[[[41,[40,13]],9]],[[[41,[40,13]]]],[[[94,[48]]]],[[[41,[40,13]],33]],[[[41,[40,13]],33]],[[[41,[40,13]]]],[[[41,[40,13]]]],[[[41,[40,13]]]],[[[41,[40,13]]]],[[[98,[40,13]]]],[[[101,[40,13]]]],[[[110,[13]]]],[[[109,[13]]]],[[[102,[13]]]],[[[103,[13]]]],[[[105,[13]]]],[[[106,[13]]]],[[[97,[13]]],[[92,[13]]]],[[[104,[13]]]],[[[97,[13]]],[[92,[13]]]],[[[104,[13]]]],[[[41,[40,13]],[92,[13]]],9],[[[41,[40,13]],[93,[13]]],9],[[[94,[107]]],9],[[[94,[52]]],9],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[[41,[40,13]],[92,[13]],[92,[13]]],[[93,[13]]]],[[[41,[40,13]]]],[[[41,[40,13]]],18],[[[94,[48]]]],[[]],[[[104,[13]]]],[[[104,[13]]]],0,0,[[9,9],[[41,[40,13]]]],[[9,9],[[41,[40,13]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[116,[115,40]],115,115],10],[[[116,[115,40]]],10],[[[116,[115,40]],115],115],[[[116,[115,40]]]],[[[116,[[0,[50,27,31]],40]]]],[[[116,[115,40]]],[[117,[115,40]]]],[[[116,[115,40]]],[[118,[115,40]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[116,[115,40]]]],[[[116,[115,40]]]],[119,119],[[[116,[19,19,19]]],[[116,[19,19,19]]]],[[[120,[[0,[115,19]]]]],[[120,[[0,[115,19]]]]]],[[[121,[19,[0,[40,19]]]]],[[121,[19,[0,[40,19]]]]]],[[[122,[19,[0,[40,19]]]]],[[122,[19,[0,[40,19]]]]]],[[[123,[[0,[115,19]],19,[0,[40,19]]]]],[[123,[[0,[115,19]],19,[0,[40,19]]]]]],[[[124,[[0,[115,19]],19,[0,[40,19]]]]],[[124,[[0,[115,19]],19,[0,[40,19]]]]]],[[[117,[[0,[115,19]],19,19]]],[[117,[[0,[115,19]],19,19]]]],[[[125,[[0,[115,19]],19,19]]],[[125,[[0,[115,19]],19,19]]]],[[[126,[[0,[115,19]],19,19]]],[[126,[[0,[115,19]],19,19]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[119,119],4],[[[116,[115,40]],115,115],5],[[[116,[115,40]],115],5],[[[118,[115,40]]],9],[[[117,[115,40]]],9],[[],[[116,[115,40]]]],[119],[[[116,[115,40]]],9],[[[116,[115,40]]],9],[[[116,[115,40]]],9],[[[116,[115,40]]]],[[[116,[115,40]],115,115],10],[[[116,[115,40]],115,115],10],[[[116,[115,40]],115],[[123,[115,40]]]],[[[116,[115,40]]]],[[[116,[115,40]],1]],[[[116,[115,40]],115,1],[[124,[115,40]]]],[[119,119],5],[[],5],[[],5],[[[116,[115,40]],87]],[[[119,[30]],6],7],[[[116,[[0,[59,31,30]],30,40]],6],7],[[[120,[[0,[115,30]]]],6],7],[[[121,[30,[0,[40,30]]]],6],7],[[[122,[30,[0,[40,30]]]],6],7],[[[123,[[0,[115,30]],30,[0,[40,30]]]],6],7],[[[124,[[0,[115,30]],30,[0,[40,30]]]],6],7],[[[117,[[0,[115,30]],30,30]],6],7],[[[125,[[0,[115,30]],30,30]],6],7],[[[126,[[0,[115,30]],30,30]],6],7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[87,[[116,[115,40]]]],[87,[[116,[115,40]]]],[[[41,[115,19,40,13]]],[[116,[115,19,40]]]],[[[116,[115,40]],9]],[[[116,[115,40]],9]],[87,[[116,[115,40]]]],[[119,8]],[[[116,[115,40]]]],[[[116,[115,40]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[116,[115,40]]],[[41,[115,40,13]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[116,[[0,[50,27,31]],40]],[0,[50,27,31]],[0,[50,27,31]]],5],[[[116,[115,40]]],5],[[[118,[115,40]]],10],[[[117,[115,40]]],10],[[[120,[115]]],9],[[[116,[115,40]],115],[[121,[115,40]]]],[[[116,[[0,[50,27,31]],40]]]],[[[116,[115,40]],115,1],[[122,[115,40]]]],[[[116,[[0,[50,27,31]],40]],[0,[50,27,31]],1]],[[],[[116,[115,40]]]],[[[118,[115,40]]],10],[[[120,[115]]],10],[[[121,[115,40]]],[[10,[115]]]],[[[122,[115,40]]],[[10,[115]]]],[[[123,[115,40]]],10],[[[124,[115,40]]],10],[[[117,[115,40]]],10],[[[125,[115,40]]],10],[[[126,[115,40]]],10],[[[118,[115,40]]],10],[[[120,[115]]],10],[[[117,[115,40]]],10],[[[116,[115,40]]],9],[[[116,[115,40]]],9],[[[116,[115,40]]],9],[[[116,[115,40]]]],[[[116,[115,40]]]],[[[116,[115,40]]],[[120,[115]]]],[[[118,[115,40]],9],10],[[[117,[115,40]],9],10],[[119,119],[[10,[4]]]],[[[116,[115,40]],115,115],10],[[[116,[115,40]],115],5],[[[116,[[0,[50,27,31]],40]]]],[[[120,[115]],33],10],[[[120,[115]],33]],[[[118,[115,40]]]],[[[120,[115]]]],[[[121,[115,40]]]],[[[122,[115,40]]]],[[[123,[115,40]]]],[[[124,[115,40]]]],[[[117,[115,40]]]],[[[125,[115,40]]]],[[[126,[115,40]]]],[[[116,[115,40]]],9],[[[116,[115,40]]],9],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[[116,[115,40]]]],[[[116,[[0,[50,27,31]],40]]],[[127,[[0,[50,27,31]]]]]],[[9,9],[[116,[115,40]]]],[[9,9],[[116,[115,40]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[[129,[40,128,13]]],10],[[[129,[40,128,13]],[130,[13]],[130,[13]]]],[[[129,[40,128,13]]],[[130,[13]]]],[[[129,[40,128,13]]]],[[[129,[40,128,13]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[129,[40,128,13]]]],[[[129,[19,19,19,[0,[19,128]],19]]],[[129,[19,19,19,[0,[19,128]],19]]]],[[[131,[19]]],[[131,[19]]]],[[[132,[19,19]]],[[132,[19,19]]]],[[[133,[[0,[19,40]],[0,[19,128]],19]]],[[133,[[0,[19,40]],[0,[19,128]],19]]]],[[[134,[[0,[19,40]],[0,[19,128]],19]]],[[134,[[0,[19,40]],[0,[19,128]],19]]]],[[[135,[[0,[19,40]],[0,[19,128]],19]]],[[135,[[0,[19,40]],[0,[19,128]],19]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[137,[136]]]],[[],[[129,[40,128,13]]]],[[[129,[40,128,13]]],9],[[[129,[40,128,13]]],9],[[[129,[40,128,13]]]],[[[129,[40,128,13]],[130,[13]],[130,[13]]]],[[[129,[40,128,13]],[130,[13]],[130,[13]]]],[[[129,[40,128,13]],[130,[13]]],[[135,[40,128,13]]]],[[[129,[40,128,13]]]],[[[129,[2,128,13]],[130,[13]],1],[[135,[2,128,13]]]],[[[129,[2,128,13]],1]],[[[129,[28,40,128,13]],87]],[[[131,[30]],6],7],[[[132,[30,30]],6],7],[[[133,[[0,[30,40]],[0,[30,128]],30]],6],7],[[[134,[[0,[30,40]],[0,[30,128]],30]],6],7],[[[135,[[0,[30,40]],[0,[30,128]],30]],6],7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[87,[[129,[28,40,128,13]]]],[[[129,[40,128,13]],9]],[[[129,[40,128,13]],[130,[13]],[130,[13]]],5],[[[129,[40,128,13]],[130,[13]]]],[[[129,[40,128,13]]]],[[[129,[40,128,13]],[130,[13]]]],[[[129,[40,128,13]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[129,[40,128,13]],[130,[13]],[130,[13]]],5],[[[129,[40,128,13]]],5],[[],5],[[[129,[40,128,13]],[130,[13]]],[[134,[40,128,13]]]],[[[129,[40,128,13]],[130,[13]]]],[[[129,[2,128,13]],[130,[13]],1],[[134,[2,128,13]]]],[[[129,[2,128,13]],[130,[13]],1]],[[],[[129,[2]]]],[[],[[129,[3]]]],[[[131,[13]]],10],[[[132,[13]]],10],[[[133,[40,128,13]]],10],[[[134,[40,128,13]]],10],[[[135,[40,128,13]]],10],[[[129,[40,128,13]]],9],[[[129,[40,128,13]]],9],[[[129,[40,128,13]]],9],[[[129,[40,128,13]]]],[9,130],[[[129,[40,128,13]]]],[[[129,[40,128,13]],[130,[13]]]],[[[129,[40,128,13]],[130,[13]]]],[[[129,[40,128,13]],[130,[13]],[130,[13]]]],[[[129,[40,128,13]],[130,[13]]]],[[[129,[40,128,13]]]],[[[131,[13]]]],[[[132,[13]]]],[[[134,[40,128,13]]]],[[[129,[40,128,13]],[130,[13]]],9],[[]],[[]],[[]],[[]],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[[129,[40,128,13]],[130,[13]],[130,[13]]],10],[[[129,[40,128,13]]]],[[[129,[40,128,13]]],18],[9,[[129,[40,128,13]]]],[[]],[[[41,[19,19,40,13]],[41,[19,19,40,13]],19]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[111,[40,13]]],10],[[[111,[40,13]],[92,[13]],[92,[13]]],[[93,[13]]]],[[[111,[40,13]]]],[[[111,[40,13]]],[[92,[13]]]],[[[111,[40,13]]],18],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[111,[40,13]]]],[[[111,[40,13]]]],[[[111,[40,13]]]],[[[111,[19,19,13]]],[[111,[19,19,13]]]],[[[138,[13]]],[[138,[13]]]],[[[139,[19,[0,[19,13]]]]],[[139,[19,[0,[19,13]]]]]],[[[140,[13]]],[[140,[13]]]],[[[141,[19,[0,[40,19]],[0,[13,19]]]]],[[141,[19,[0,[40,19]],[0,[13,19]]]]]],[[[142,[19,[0,[40,19]],[0,[13,19]]]]],[[142,[19,[0,[40,19]],[0,[13,19]]]]]],[[[143,[19,19]]],[[143,[19,19]]]],[[[144,[19,19,[0,[19,13]]]]],[[144,[19,19,[0,[19,13]]]]]],[[[145,[19,19]]],[[145,[19,19]]]],[[[146,[19,19]]],[[146,[19,19]]]],[[[147,[19,19]]],[[147,[19,19]]]],[[[111,[19,19,13]],[111,[19,19,13]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[111,[40,13]],[92,[13]],[92,[13]]],5],[[[111,[40,13]],[92,[13]]],5],[[],[[111,[40,13]]]],[[[145,[13]]],[[138,[13]]]],[[[111,[40,13]]],9],[[[111,[40,13]]],9],[[[111,[40,13]]],9],[[[111,[40,13]],[93,[13]]],10],0,[[[111,[40,13]]],[[147,[13]]]],[[[111,[40,13]]]],[[[111,[40,13]],[93,[13]]],10],[[[111,[40,13]]],10],[[[111,[40,13]]],10],[[[111,[40,13]],[93,[13]]],10],[[[111,[40,13]]],17],[[[111,[40,13]]],17],[[[111,[40,13]]]],[[[111,[40,13]],[92,[13]]],[[141,[40,13]]]],[[[111,[40,13]],[92,[13]],[92,[13]]],[[142,[40,13]]]],[[[111,[40,13]],1]],[[[111,[40,13]],[92,[13]],1],[[141,[40,13]]]],[[[140,[29,13]],[140,[29,13]]],5],[[[111,[28,40,13]],87]],[[[111,[40,13]],1],[[144,[40,13]]]],[[[111,[40,13]],33,33],[[111,[40,13]]]],[[[111,[40,13]],[92,[13]],[92,[13]]],[[10,[[93,[13]]]]]],[[[111,[40,13]],[92,[13]],[92,[13]]],10],[[[111,[30,30,40,13]],6],7],[[[139,[30,[0,[30,13]]]],6],7],[[[140,[30,30]],6],7],[[[141,[30,[0,[40,30]],[0,[13,30]]]],6],7],[[[142,[30,[0,[40,30]],[0,[13,30]]]],6],7],[[[143,[30,30]],6],7],[[[144,[30,30,[0,[30,13]]]],6],7],[[[145,[30,30]],6],7],[[[146,[30,30]],6],7],[[[147,[30,30]],6],7],[[[41,[40,13]]],[[111,[40,13]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[87,[[111,[28,40,13]]]],[87,[[111,[40,13]]]],[[[111,[40,13]],9]],[[[111,[40,13]],9]],[[[140,[13]]]],[[[111,[40,13]],[93,[13]]]],[[[111,[40,13]],[92,[13]]]],[[[111,[40,13]],[93,[13]]]],[[[111,[40,13]],[92,[13]]]],[[[111,[40,13]],114,114]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[111,[40,13]],18,[92,[13]],[92,[13]]],5],[[[111,[40,13]]],5],[[[111,[40,13]],33,33],[[111,[40,13]]]],[[[111,[40,13]]]],[[[111,[40,13]],[92,[13]]],[[145,[13]]]],[[[111,[40,13]],[92,[13]],1]],[[[111,[40,13]],[92,[13]],1],[[145,[13]]]],[[[111,[40,13]],[92,[13]]],[[145,[13]]]],[[],[[111,[2]]]],[[[138,[13]],[111,[40,13]]],10],[[[139,[13]]],10],[[[141,[40,13]]],10],[[[142,[40,13]]],[[10,[[140,[13]]]]]],[[[143,[13]]],10],[[[144,[40,13]]],[[10,[[92,[13]]]]]],[[[145,[13]]],[[10,[[92,[13]]]]]],[[[146,[13]]],10],[[[147,[13]]],10],[[[139,[13]]],10],[[[143,[13]]],10],[[[146,[13]]],10],[[[147,[13]]],10],[[[138,[13]],[111,[40,13]]],[[10,[[93,[13]]]]]],[[[138,[13]],[111,[40,13]]],[[10,[[92,[13]]]]]],[[[111,[40,13]]],9],[[[111,[40,13]]],9],[[[111,[40,13]]],9],[[[111,[40,13]]]],0,[[[111,[40,13]]],[[146,[13]]]],[[[111,[40,13]]]],[[[111,[40,13]],[92,[13]]],10],[[[111,[40,13]]],10],[[[111,[40,13]]],10],[[[111,[40,13]],[92,[13]]],10],[[[111,[40,13]]],17],[[[111,[40,13]]],17],[[[111,[40,13]],[93,[13]]],10],[[[111,[40,13]],[92,[13]]],10],[[[111,[40,13]]]],[[[111,[40,13]],33]],[[[111,[40,13]],33]],[[[111,[40,13]]]],[[[139,[13]]]],[[[142,[40,13]]]],[[[144,[40,13]]]],[[[146,[13]]]],[[[147,[13]]]],[[[140,[13]]]],[[[140,[13]]]],[[[111,[40,13]],[93,[13]]],9],[[[111,[40,13]],[92,[13]]],9],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[[111,[40,13]]]],[[[111,[40,13]],[92,[13]],[92,[13]]],[[93,[13]]]],[[[111,[40,13]]],18],[[[140,[13]]]],[[[140,[13]]]],[[9,9],[[111,[40,13]]]],[[9,9],[[111,[40,13]]]],0,[[]],[[]],[[[148,[19]]],[[148,[19]]]],[[]],[[[148,[13]],13,13],5],[[[148,[13]],13],13],[[[148,[13]],13],13],[[[148,[30]],6],7],[[]],[[]],[[[148,[13]]],[[42,[13]]]],[9,[[148,[13]]]],[[]],[[],11],[[],11],[[],12],[[[148,[13]],13,13],5],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[[149,[66]]]],[150],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[151,10],[[],151],[152,152],[[[153,[19]]],[[153,[19]]]],[[[151,[19]]],[[151,[19]]]],[[[154,[19,19]]],[[154,[19,19]]]],[[[155,[19,19]]],[[155,[19,19]]]],[[[156,[19,19]]],[[156,[19,19]]]],[[[157,[19,19]]],[[157,[19,19]]]],[[[158,[19,19]]],[[158,[19,19]]]],[[[159,[19,19]]],[[159,[19,19]]]],[[[160,[19,19]]],[[160,[19,19]]]],[[[161,[19,19]]],[[161,[19,19]]]],[[[162,[19,19,19]]],[[162,[19,19,19]]]],[[[163,[19,19,19]]],[[163,[19,19,19]]]],[[[164,[19,19]]],[[164,[19,19]]]],[[[165,[[0,[54,19]],19]]],[[165,[[0,[54,19]],19]]]],[[[166,[19,19,19]]],[[166,[19,19,19]]]],[[[167,[[0,[68,19]],19]]],[[167,[[0,[68,19]],19]]]],[[[149,[19]]],[[149,[19]]]],[[[168,[19]]],[[168,[19]]]],[[[150,[19]]],[[150,[19]]]],[[[169,[19]]],[[169,[19]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[152,152],4],[[[158,[[170,[19]],19]]],19],[[]],[[],151],[[],152],[[],151],[[],[[154,[28]]]],[[],[[155,[28]]]],[[],[[156,[28]]]],[[],[[157,[28]]]],[[[0,[47,48]],87,33],171],0,0,0,[[],9],[[[159,[107]]],9],[[[164,[107]]],9],[[[149,[107]]],9],[[],9],[[[149,[65]]],9],[[]],[[[159,[44,172]]]],[[[164,[44,173]]]],[[[149,[44]]]],[[[159,[67,172]]],10],[[[149,[67]]],10],[[[149,[108]]],10],[[]],[[[159,[54,172]]]],[[[164,[54,173]]]],[[[149,[68]]]],[1],[[[159,[68,172]],1]],[[[164,[68,173]],1]],[[[149,[68]],1]],[[[0,[49,48]]],[[154,[[0,[50,29]],[45,[[0,[50,29]]]]]]]],[[[0,[49,48]]],[[155,[[0,[50,29]],[45,[[0,[50,29]]]]]]]],[[152,152],5],[[],5],[[],5],0,[[152,6],7],[[[153,[30]],6],7],[[[151,[30]],6],7],[[[154,[30,30]],6],7],[[[155,[30,30]],6],7],[[[158,[30,30]],6],7],[[[159,[30,30]],6],7],[[[160,[30,30]],6],7],[[[161,[30,30]],6],7],[[[162,[30,30,30]],6],7],[[[163,[30,30,30]],6],7],[[[164,[30,30]],6],7],[[[165,[[0,[54,30]],30]],6],7],[[[166,[30,30,30]],6],7],[[[167,[[0,[68,30]],30]],6],7],[[[149,[30]],6],7],[[[168,[30]],6],7],[[[150,[30]],6],7],[[[169,[30]],6],7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[72,91],[[159,[72,91]]]],[[44,91],[[164,[44,91]]]],[9],[9],[[[159,[52]],9]],[[[159,[107]],9]],[[[164,[52]],9]],[[[164,[107]],9]],[[[149,[107]],9]],[[[149,[52]],9]],[[[42,[[0,[50,29]]]],[45,[[0,[50,29]]]]],[[154,[[0,[50,29]],[45,[[0,[50,29]]]]]]]],[[152,8]],[[]],[[]],[[[150,[174]]]],[[],5],[[],5],[[[158,[[170,[19]],19]]],[[170,[19]]]],[[[158,[[170,[19]],19]]],[[170,[19]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[150],[[],5],[[[149,[66]]],5],[[],5],[[],5],[[86,19],[[158,[86,19]]]],[[86,19],[[158,[86,19]]]],[[[154,[[0,[50,29]],[45,[[0,[50,29]]]]]],[0,[50,29]]]],[[[155,[[0,[50,29]],[45,[[0,[50,29]]]]]],[0,[50,29]]]],[[]],[[[159,[47,172]]]],[[[164,[54,173]]]],[[[149,[53]]]],[1],[[[159,[53,172]],1]],[[[164,[68,173]],1]],[[[149,[53]],1]],[[[0,[49,48]],[0,[50,29]]],[[154,[[0,[50,29]],[45,[[0,[50,29]]]]]]]],[[[0,[49,48]],[0,[50,29]]],[[155,[[0,[50,29]],[45,[[0,[50,29]]]]]]]],[[[0,[49,48]],[0,[50,29]]],[[156,[[0,[50,29]],[45,[[0,[50,29]]]]]]]],[[[0,[51,53,48]]],[[157,[[0,[50,29]],[45,[[0,[50,29]]]]]]]],[[[154,[[0,[50,29]],[45,[[0,[50,29]]]]]],47],[[10,[[0,[50,29]]]]]],[[[155,[[0,[50,29]],[45,[[0,[50,29]]]]]],47],[[10,[[0,[50,29]]]]]],[[[156,[[0,[50,29]],[45,[[0,[50,29]]]]]],47],[[10,[[0,[50,29]]]]]],[[[157,[[0,[50,29]],[45,[[0,[50,29]]]]]],[0,[53,48]]],[[10,[[0,[50,29]]]]]],[[[158,[[170,[19]],19]]],10],[[[160,[17,172]]],10],[[[161,[17,172]]],10],[[[162,[44,17,172]]],10],[[[163,[54,17,172]]],10],[[[165,[54,173]]],10],[[[166,[44,17,173]]],10],[[[167,[68,173]]],10],[[[168,[17]]],10],[[[169,[17]]],10],[[],9],[[[159,[52]]],9],[[[164,[52]]],9],[[[149,[52]]],9],[[],9],[[[164,[55]]],9],[[[149,[55]]],9],[[]],[[[159,[51,172]]]],[[[164,[51]]]],[[[149,[51]]]],[[]],[[[159,[36,172]]]],[[[164,[36]]]],[[[149,[36]]]],[[[159,[67,172]]],10],[[[149,[67]]],10],[[[149,[108]]],10],[[152,152],[[10,[4]]]],[[[154,[[0,[50,29]],[45,[[0,[50,29]]]]]],[0,[49,48]]]],[[[155,[[0,[50,29]],[45,[[0,[50,29]]]]]],[0,[49,48]]]],[[[157,[[0,[50,29]],[45,[[0,[50,29]]]]]],[0,[51,53,48]]]],[[]],[[[159,[48]]]],[[[164,[48]]]],[[[149,[48]]]],[[],5],[151,5],[[],5],[151,5],[[[160,[17,172]]]],[[[161,[17,172]]]],[[[162,[44,17,172]]]],[[[163,[54,17,172]]]],[[[165,[54,173]]]],[[[166,[44,17,173]]]],[[[167,[68,173]]]],[[[168,[17]]]],[[[169,[17]]]],[[]],[[[150,[174]]]],0,0,0,[[]],[[[150,[174]]]],[[],9],[[],9],[[[159,[52]]],9],[[[159,[107]]],9],[[[164,[52]]],9],[[[164,[107]]],9],[[[149,[107]]],9],[[[149,[52]]],9],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],5],[[]],[[[159,[48]]]],[[[164,[48]]]],[[[149,[48]]]],[[],10],[[154,[0,[47,48]]],10],[[155,[0,[47,48]]],10],[[156,[0,[47,48]]],10],[[157,[0,[53,48]]],10],[[]],[[]],[[[150,[174]]]]],"c":[348],"p":[[4,"Direction"],[4,"Directed"],[4,"Undirected"],[4,"Ordering"],[15,"bool"],[3,"Formatter"],[6,"Result"],[8,"Hasher"],[15,"usize"],[4,"Option"],[4,"Result"],[3,"TypeId"],[8,"IndexType"],[3,"List"],[6,"NodeIndex"],[3,"EdgeIndex"],[8,"Iterator"],[3,"FixedBitSet"],[8,"Clone"],[3,"OutgoingEdgeIndices"],[3,"Neighbors"],[3,"EdgeReference"],[3,"EdgeIndices"],[3,"NodeIndices"],[3,"EdgeReferences"],[3,"OutgoingEdgeReferences"],[8,"Ord"],[8,"Default"],[8,"PartialEq"],[8,"Debug"],[8,"Hash"],[8,"PartialOrd"],[8,"FnMut"],[3,"DfsSpace"],[8,"Data"],[8,"IntoNodeReferences"],[3,"MinSpanningTree"],[3,"Cycle"],[3,"NegativeCycle"],[8,"EdgeType"],[3,"Graph"],[3,"Vec"],[8,"NodeCompactIndexable"],[8,"IntoEdgeReferences"],[8,"VisitMap"],[3,"TarjanScc"],[8,"IntoNeighbors"],[8,"Visitable"],[8,"GraphRef"],[8,"Copy"],[8,"IntoNodeIdentifiers"],[8,"NodeIndexable"],[8,"IntoNeighborsDirected"],[8,"IntoEdges"],[8,"NodeCount"],[3,"Paths"],[8,"Measure"],[3,"HashMap"],[8,"Eq"],[3,"Dominators"],[3,"DominatorsIter"],[3,"DominatedByIter"],[8,"GraphProp"],[8,"BoundedMeasure"],[8,"EdgeCount"],[8,"GetAdjacencyMatrix"],[8,"DataMap"],[8,"IntoEdgesDirected"],[3,"Matching"],[3,"MatchedEdges"],[3,"MatchedNodes"],[8,"GraphBase"],[15,"slice"],[3,"Csr"],[6,"NodeIndex"],[3,"EdgesNotSorted"],[3,"Edges"],[3,"EdgeReference"],[3,"EdgeReferences"],[3,"Neighbors"],[3,"NodeIdentifiers"],[3,"NodeReferences"],[8,"IntoWeightedEdge"],[4,"Element"],[3,"FilterElements"],[8,"Sized"],[8,"IntoIterator"],[4,"Config"],[3,"Dot"],[3,"String"],[8,"Fn"],[3,"NodeIndex"],[3,"EdgeIndex"],[3,"Frozen"],[3,"WalkNeighbors"],[3,"Node"],[3,"Edge"],[3,"Externals"],[3,"Neighbors"],[3,"Edges"],[3,"EdgesConnecting"],[3,"NodeIndices"],[3,"EdgeIndices"],[3,"EdgeReference"],[3,"NodeReferences"],[3,"EdgeReferences"],[8,"EdgeIndexable"],[8,"DataMapMut"],[3,"EdgeWeightsMut"],[3,"NodeWeightsMut"],[3,"StableGraph"],[8,"Index"],[8,"IndexMut"],[8,"GraphIndex"],[8,"NodeTrait"],[3,"GraphMap"],[3,"AllEdges"],[3,"AllEdgesMut"],[3,"Ptr"],[3,"Nodes"],[3,"Neighbors"],[3,"NeighborsDirected"],[3,"Edges"],[3,"EdgesDirected"],[3,"NodeIdentifiers"],[3,"NodeReferences"],[3,"HashSet"],[8,"Nullable"],[3,"MatrixGraph"],[6,"NodeIndex"],[3,"NodeIdentifiers"],[3,"NodeReferences"],[3,"EdgeReferences"],[3,"Neighbors"],[3,"Edges"],[8,"Zero"],[3,"NotZero"],[3,"WalkNeighbors"],[3,"NodeReferences"],[3,"EdgeReference"],[3,"Edges"],[3,"EdgesConnecting"],[3,"EdgeReferences"],[3,"Externals"],[3,"Neighbors"],[3,"NodeIndices"],[3,"EdgeIndices"],[3,"UnionFind"],[3,"Reversed"],[3,"ReversedEdgeReference"],[4,"Control"],[3,"Time"],[4,"DfsEvent"],[3,"Dfs"],[3,"DfsPostOrder"],[3,"Bfs"],[3,"Topo"],[3,"WalkerIter"],[3,"NodeFiltered"],[3,"NodeFilteredNeighbors"],[3,"NodeFilteredNodes"],[3,"NodeFilteredEdgeReferences"],[3,"NodeFilteredEdges"],[3,"EdgeFiltered"],[3,"EdgeFilteredNeighbors"],[3,"EdgeFilteredEdges"],[3,"EdgeFilteredNeighborsDirected"],[3,"ReversedEdges"],[3,"ReversedEdgeReferences"],[8,"Walker"],[8,"ControlFlow"],[8,"FilterNode"],[8,"FilterEdge"],[8,"EdgeRef"],[8,"FloatMeasure"],[8,"Build"],[8,"ElementIterator"],[8,"FromElements"],[8,"Create"],[13,"Edge"],[13,"Node"],[8,"NodeRef"]]},\
"pin_project_lite":{"doc":"A lightweight version of pin-project written with …","t":"O","n":["pin_project"],"q":[[0,"pin_project_lite"]],"d":["A macro that creates a projection type covering all the …"],"i":[0],"f":[0],"c":[],"p":[]},\
"png":{"doc":"PNG encoder and decoder","t":"NNEDNNNNEENNEEDEDENESNDENENNNDNNNNNSNNNNDNNDNNNNNNNNDNNNNDNNDNNDNNNNSNDNNDEDDNDNENNDLLLLLMMMLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLMALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLMMLLLLLLLLLLMMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLMMMMLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLMMLLLMLMLLLLLLLMLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMLMLMMMMLLLLLLMMMMDRRRRRRLLRLLLLRRLLRLRRLFFRFRFRRRLLLLRRIDDDLLLLLLLLLLLLLLMLLLLKLLLLLLLLLLLLLLLLLLLLMMMMLLLMLLLMLLLLLLLLL","n":["AbsoluteColorimetric","Adaptive","AdaptiveFilterType","AnimationControl","AnimationControl","Avg","Background","Best","BitDepth","BlendOp","ChunkBegin","ChunkComplete","ColorType","Compression","DecodeOptions","Decoded","Decoder","DecodingError","Default","DisposeOp","EXPAND","Eight","Encoder","EncodingError","Fast","FilterType","Format","Format","Four","FrameControl","FrameControl","Grayscale","GrayscaleAlpha","Header","Huffman","IDENTITY","ImageData","ImageDataFlushed","ImageEnd","Indexed","Info","IoError","IoError","Limits","LimitsExceeded","LimitsExceeded","Meter","NoFilter","NonAdaptive","None","Nothing","One","OutputInfo","Over","Paeth","Parameter","Parameter","ParameterError","PartialChunk","Perceptual","PixelDimensions","PixelDimensions","Previous","Reader","RelativeColorimetric","Rgb","Rgba","Rle","STRIP_16","Saturation","ScaledFloat","Sixteen","Source","SourceChromaticities","SrgbRenderingIntent","StreamWriter","StreamingDecoder","Sub","Transformations","Two","Unit","Unspecified","Up","Writer","add_itxt_chunk","add_text_chunk","add_ztxt_chunk","all","animation_control","animation_control","bit_depth","bit_depth","bitand","bitand_assign","bitor","bitor_assign","bits","bits_per_pixel","bitxor","bitxor_assign","blend_op","blue","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffer_size","bytes","bytes_per_pixel","cause","cause","chrm_chunk","chunk","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","color_type","color_type","complement","compressed_latin1_text","compression","contains","default","default","default","default","default","default","default","default","default","delay_den","delay_num","difference","dispose_op","drop","drop","empty","encode","encode","encode","encode","encode","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","exact","extend","finish","finish","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","frame_control","frame_control","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","from_scaled","from_u8","from_u8","from_u8","from_u8","from_u8","from_u8","gama_chunk","green","hash","height","height","height","icc_profile","ignore_adler32","ignore_checksums","in_range","inc_seq_num","info","info","insert","interlaced","intersection","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_scaled","into_stream_writer","into_stream_writer_with_size","into_value","is_all","is_animated","is_empty","line_size","new","new","new","new","new","new_with_limits","new_with_options","new_with_options","next_frame","next_interlaced_row","next_row","normalize_to_color8","not","num_frames","num_plays","output_buffer_size","output_color_type","output_line_size","palette","partial_cmp","pixel_dims","provide","provide","raw_bytes","raw_row_length","raw_row_length_from_width","read_header_info","read_info","red","remove","reset","reset_frame_dimension","reset_frame_dimension","reset_frame_position","reset_frame_position","samples","sequence_number","set","set_adaptive_filter","set_adaptive_filter","set_adaptive_filter","set_animated","set_blend_op","set_blend_op","set_blend_op","set_color","set_compression","set_depth","set_dispose_op","set_dispose_op","set_dispose_op","set_filter","set_filter","set_filter","set_frame_delay","set_frame_delay","set_frame_delay","set_frame_dimension","set_frame_dimension","set_frame_position","set_frame_position","set_ignore_adler32","set_ignore_adler32","set_ignore_checksums","set_ignore_crc","set_ignore_crc","set_ignore_text_chunk","set_ignore_text_chunk","set_ignore_text_chunk","set_limits","set_palette","set_sep_def_img","set_seq_num","set_source_chromaticities","set_source_gamma","set_srgb","set_transformations","set_trns","size","source_chromaticities","source_gamma","srgb","stream_writer","stream_writer_with_size","sub","sub_assign","symmetric_difference","text_metadata","to_be_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","toggle","trns","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uncompressed_latin1_text","union","unit","update","utf8_text","validate_sequence","white","width","width","width","with_size","write","write_chunk","write_header","write_image_data","write_text_chunk","x_offset","xppu","y_offset","yppu","ChunkType","IDAT","IEND","IHDR","PLTE","acTL","bKGD","borrow","borrow_mut","cHRM","clone","clone_into","eq","equivalent","fcTL","fdAT","fmt","from","gAMA","hash","iCCP","iTXt","into","is_critical","is_private","pHYs","reserved_set","sRGB","safe_to_copy","tEXt","tIME","tRNS","to_owned","try_from","try_into","type_id","zTXt","DECOMPRESSION_LIMIT","EncodableTextChunk","ITXtChunk","TEXtChunk","ZTXtChunk","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","compress_text","compress_text","compressed","decompress_text","decompress_text","decompress_text_with_limit","decompress_text_with_limit","encode","encode","encode","encode","eq","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","from","from","from","get_text","get_text","into","into","into","keyword","keyword","keyword","language_tag","new","new","new","text","to_owned","to_owned","to_owned","translated_keyword","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id"],"q":[[0,"png"],[610,"png::chunk"],[647,"png::text_metadata"]],"d":["For images requiring preservation of absolute colorimetry, …","","The filtering method for preprocessing scanline data …","Animation control information","","","Clear buffer with the background color.","Higher compression level","Bit depth of the PNG file. Specifies the number of bits …","How pixels are written into the buffer.","","","Describes how a pixel is encoded.","The type and strength of applied compression.","Decoder configuration options","Result of the decoding process","PNG Decoder","Any kind of error during PNG decoding.","Default level","How to reset buffer of an animated png (APNG) at the end …","Expand paletted images to RGB; expand grayscale images of …","","PNG Encoder.","","Fast minimal compression","The byte level filter applied to scanlines to prepare them …","The input image was not a valid PNG.","","","Frame control information","","1 grayscale sample.","1 grayscale sample, then 1 alpha sample.","","","No transformation","Decoded raw image data.","The last of a consecutive chunk of IDAT was done. This is …","","1 sample for the palette index.","PNG info struct","An error in IO of the underlying reader.","","Limits on the resources the <code>Decoder</code> is allowed too use","The image would have required exceeding the limits …","","","","","Leave the buffer unchanged.","Nothing decoded yet","","Output info.","The new pixels are blended into the current state based on …","","An interface was used incorrectly.","","","","For images preferring good adaptation to the output device …","Pixel dimensions information","","Reset the buffer to the state before the current frame.","PNG reader (mostly high-level interface)","For images requiring colour appearance matching (relative …","1 red sample, 1 green sample, 1 blue sample.","1 red sample, 1 green sample, 1 blue sample, and finally, …","","Strip 16-bit samples to 8 bits","For images preferring preservation of saturation at the …","An unsigned integer scaled version of a floating point …","","Pixels overwrite the value at their position.","Chromaticities of the color space primaries","The rendering intent for an sRGB image.","Streaming PNG writer","PNG StreamingDecoder (low-level interface)","","Output transformations","","Physical unit of the pixel dimensions","","","PNG writer","Convenience function to add iTXt chunks to <code>Info</code> struct","Convenience function to add tEXt chunks to <code>Info</code> struct","Convenience function to add zTXt chunks to <code>Info</code> struct","Returns the set containing all flags.","Returns the frame control information of the image.","","","The chosen output bit depth.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the number of bits per pixel.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","Type of frame area rendering for this frame","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the size needed to hold a decoded frame If the …","maximum number of bytes the decoder is allowed to …","Returns the number of bytes per pixel.","","","The contents of the image’s <code>cHRM</code> chunk, if present. …","Chunk types and functions","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","How colors are stored in the image.","The chosen output color type.","Returns the complement of this set of flags.","zTXt field","","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","","","","","","","","","","Frame delay fraction denominator","Frame delay fraction numerator","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Type of frame area disposal to be done after rendering …","","","Returns an empty set of flags.","","","","","Encode this header to the writer.","","","","","","","","","","","","","","","","","","","","","","","","","Gets whether the value can be exactly converted in …","","Consume the stream writer with validation.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the frame control information of the current frame","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","Fully accurate construction from a value scaled as per …","u8 -&gt; Self. Temporary solution until Rust provides a …","u8 -&gt; Self. Temporary solution until Rust provides a …","u8 -&gt; Self. Temporary solution until Rust provides a …","u8 -&gt; Self. Using enum_primitive or transmute is probably …","u8 -&gt; Self. Using enum_primitive or transmute is probably …","u8 -&gt; Self. Temporary solution until Rust provides a …","The contents of the image’s gAMA chunk, if present. …","","","Height of the following frame","","The pixel height of this frame.","The ICC profile for the image.","Return whether the decoder is set to ignore the Adler-32 …","Set the decoder to ignore and not verify the Adler-32 …","Gets whether the value is within the clamped range of this …","","Provides access to the inner <code>info</code> field","Get information on the image.","Inserts the specified flags in-place.","","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Get the accurate encoded value.","Turn this into a stream writer for image data.","Turn this into a stream writer with custom buffer size.","Get the unscaled value as a floating point.","Returns <code>true</code> if all flags are currently set.","Returns true if the image is an APNG image.","Returns <code>true</code> if no flags are currently stored.","The byte count of each scan line in the image.","Creates a new StreamingDecoder","Create a new decoder configuration with default limits.","","Slightly inaccurate scaling and quantization. Clamps the …","","Create a new decoder configuration with custom limits.","","Create a new decoder configuration with custom …","Decodes the next frame into <code>buf</code>.","Returns the next processed row of the image","Returns the next processed row of the image","Transform every input to 8bit grayscale or color.","Returns the complement of this set of flags.","Number of frames","Number of times to loop this APNG.  0 indicates infinite …","Returns the number of bytes required to hold a …","Returns the color type and the number of bits per sample …","Returns the number of bytes required to hold a …","The image’s <code>PLTE</code> chunk, if present; contains the RGB …","","","","","Returns the number of bytes needed for one deinterlaced …","Returns the number of bytes needed for one deinterlaced …","Returns the number of bytes needed for one deinterlaced …","Read the PNG header and return the information contained …","Reads all meta data until the first IDAT chunk","","Removes the specified flags in-place.","Resets the StreamingDecoder","Set the frame dimension to occupy all the image, starting …","Set the frame dimension to occupy all the image, starting …","Set the frame position to (0, 0).","Set the frame position to (0, 0).","Returns the number of samples used per pixel encoded in …","Sequence number of the animation chunk, starting from 0","Inserts or removes the specified flags depending on the …","Set the adaptive filter type.","Set the adaptive filter type for the following frames.","Set the adaptive filter type for the next frame.","Specify that the image is animated.","Set the blend operation for every frame.","Set the blend operation for the following frames.","Set the blend operation for the following frames.","Set the color of the encoded image.","Set compression parameters.","Set the indicated depth of the image data.","Set the dispose operation for every frame.","Set the dispose operation for the following frames.","Set the dispose operation for the following frames.","Set the used filter type.","Set the used filter type for the following frames.","Set the used filter type for the next frame.","Set the fraction of time every frame is going to be …","Set the fraction of time the following frames are going to …","Set the fraction of time the following frames are going to …","Set the dimension of the following frames.","Set the dimension of the following frames.","Set the position of the following frames.","Set the position of the following frames.","Set whether to compute and verify the Adler-32 checksum …","When set, the decoder will not compute and verify the …","Flag to ignore computing and verifying the Adler-32 …","Set whether to compute and verify the Adler-32 checksum …","When set, the decoder will not compute and verify the CRC …","","Set the decoder to ignore all text chunks while parsing.","Ignore text chunks while decoding.","Limit resource usage.","Sets the raw byte contents of the PLTE chunk. This method …","Mark the first animated frame as a ‘separate default …","","Set the chromaticities for the source system’s display …","Set the display gamma of the source system on which the …","Mark the image data as conforming to the SRGB color space …","Set the allowed and performed transformations.","Sets the raw byte contents of the tRNS chunk. This method …","Size of the image, width then height.","Chromaticities of the source system. Set by both <code>cHRM</code> as …","Gamma of the source system. Set by both <code>gAMA</code> as well as to …","The rendering intent of an SRGB image.","Create a stream writer.","Create a stream writer with custom buffer size.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Text chunks (tEXt/zTXt/iTXt) structs and functions","","","","","","","","","","","","","","","","","","","","","","","","","Toggles the specified flags in-place.","The image’s <code>tRNS</code> chunk, if present; contains the alpha …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","tEXt field","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Either <em>Meter</em> or <em>Unspecified</em>","Low level StreamingDecoder interface.","iTXt field","Validate the written image sequence.","","Width of the following frame","","The pixel width of this frame.","A utility constructor for a default info with width and …","","Write a raw chunk of PNG data.","Start encoding by writing the header data.","Writes the next image data.","","X position at which to render the following frame","Pixels per unit, X axis","Y position at which to render the following frame","Pixels per unit, Y axis","","Image data","Image trailer","Image header","Palette","Animation control","Background colour","","","Source system’s pixel chromaticities","","","","","Frame control","Frame data","","Returns the argument unchanged.","Source system’s gamma value","","ICC profile chunk","UTF-8 textual data","Calls <code>U::from(self)</code>.","Returns true if the chunk is critical.","Returns true if the chunk is private.","Physical pixel dimensions","Checks whether the reserved bit of the chunk name is set. …","sRGB color space chunk","Returns true if the chunk is safe to copy if unknown.","Latin-1 uncompressed textual data","Image last-modification time","Transparency","","","","","Latin-1 compressed textual data","Default decompression limit for compressed text chunks.","A generalized text chunk trait","Struct encoding an iTXt chunk","Struct representing a tEXt chunk","Struct representing a zTXt chunk","","","","","","","","","","","","","Compresses the inner text, mutating its own state.","Compresses the inner text, mutating its own state.","Indicates whether the text will be (or was) compressed in …","Decompresses the inner text, mutating its own state. Can …","Decompresses the inner text, mutating its own state. Can …","Decompresses the inner text, mutating its own state. Can …","Decompresses the inner text, mutating its own state. Can …","Encode text chunk as Vec to a <code>Write</code>","Encodes TEXtChunk to a Writer. The keyword and text are …","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Decompresses the inner text, and returns it as a <code>String</code>. …","Decompresses the inner text, and returns it as a <code>String</code>. …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Keyword field of the tEXt chunk. Needs to be between 1-79 …","Keyword field of the tEXt chunk. Needs to be between 1-79 …","The keyword field. This needs to be between 1-79 bytes …","A hyphen separated list of languages that the keyword is …","Constructs a new TEXtChunk. Not sure whether it should …","Creates a new ZTXt chunk.","Constructs a new iTXt chunk. Leaves all but keyword and …","Text field of tEXt chunk. Can be at most 2GB.","","","","Translated keyword. This is UTF-8 encoded.","","","","","","","","",""],"i":[25,29,0,0,41,28,19,22,0,0,41,41,0,0,0,0,0,0,22,0,6,16,0,0,22,0,13,4,16,0,41,15,15,41,22,6,41,41,41,15,0,13,4,0,13,4,18,28,29,19,41,16,0,20,28,13,4,0,41,25,0,41,19,0,25,15,15,22,6,25,0,16,20,0,0,0,0,28,0,16,0,18,28,0,2,2,2,6,7,7,7,12,6,6,6,6,6,7,6,6,21,24,32,47,48,2,33,34,15,16,17,18,19,20,21,8,22,23,24,25,7,6,40,41,13,26,12,27,4,28,29,32,47,48,2,33,34,15,16,17,18,19,20,21,8,22,23,24,25,7,6,40,41,13,26,12,27,4,28,29,12,27,7,13,4,7,0,15,16,17,18,19,20,21,8,22,23,24,25,7,6,26,27,28,29,15,16,17,18,19,20,21,8,22,23,24,25,7,6,26,27,28,29,6,7,12,6,7,7,6,32,21,22,7,6,26,27,28,29,21,21,6,21,33,34,6,21,8,24,25,7,15,16,18,19,20,23,24,25,6,12,28,29,15,16,18,19,20,23,24,25,6,12,28,29,23,6,33,34,34,15,16,17,18,19,19,20,20,21,8,22,23,24,25,7,6,6,6,6,6,40,40,41,13,13,12,27,4,4,28,29,7,7,32,47,48,2,33,34,15,16,17,18,19,20,21,8,22,23,24,25,7,6,40,41,13,13,26,12,27,4,4,28,29,6,6,6,6,23,15,16,18,19,20,28,7,24,6,21,7,12,7,32,47,23,21,32,48,6,7,6,6,32,47,48,2,33,34,15,16,17,18,19,20,21,8,22,23,24,25,7,6,40,41,13,26,12,27,4,28,29,23,33,33,23,6,7,6,12,32,47,2,23,24,47,32,47,48,48,48,6,6,8,8,48,48,48,7,6,7,13,4,7,7,7,47,47,24,6,32,33,34,33,34,15,21,6,2,33,34,2,2,33,34,2,2,2,2,33,34,2,33,34,2,33,34,33,34,33,34,32,26,26,32,26,32,47,26,47,2,2,21,2,2,2,47,2,7,7,7,7,33,33,6,6,6,0,24,15,16,17,18,19,20,21,8,22,23,24,25,7,6,26,27,28,29,19,20,40,13,4,6,7,32,47,48,2,33,34,15,16,17,18,19,20,21,8,22,23,24,25,7,6,40,41,13,26,12,27,4,28,29,32,47,48,2,33,34,15,16,17,18,19,20,21,8,22,23,24,25,7,6,40,41,13,26,12,27,4,28,29,32,47,48,2,33,34,15,16,17,18,19,20,21,8,22,23,24,25,7,6,40,41,13,26,12,27,4,28,29,7,6,17,32,7,2,24,21,7,12,7,34,33,2,33,33,21,17,21,17,0,0,0,0,0,0,0,57,57,0,57,57,57,57,0,0,57,57,0,57,0,0,57,0,0,0,0,0,0,0,0,0,57,57,57,57,0,0,0,0,0,0,59,60,61,59,60,61,59,60,61,59,60,61,60,61,61,60,61,60,61,58,59,60,61,59,60,61,59,60,61,59,60,61,59,60,61,60,61,59,60,61,59,60,61,61,59,60,61,59,59,60,61,61,59,60,61,59,60,61,59,60,61],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[2,[1]],3,3],[[5,[4]]]],[[[2,[1]],3,3],[[5,[4]]]],[[[2,[1]],3,3],[[5,[4]]]],[[],6],[7,[[9,[8]]]],0,0,0,[[6,6],6],[[6,6]],[[6,6],6],[[6,6]],[6,10],[7,11],[[6,6],6],[[6,6]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[12,11],0,[7,11],[13,[[9,[14]]]],[4,[[9,[14]]]],0,0,[15,15],[16,16],[17,17],[18,18],[19,19],[20,20],[21,21],[8,8],[22,22],[23,23],[24,24],[25,25],[7,7],[6,6],[26,26],[27,27],[28,28],[29,29],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[6,6],30],0,0,[6,6],0,0,[[6,6],31],[[],32],[[],21],[[],22],[[],7],[[],6],[[],26],[[],27],[[],28],[[],29],0,0,[[6,6],6],0,[[[33,[1]]]],[[[34,[1]]]],[[],6],[[21,1],[[5,[4]]]],[[8,1],[[5,[4]]]],[[24,1],[[5,[4]]]],[[25,1],[[5,[4]]]],[[7,1],[[5,[4]]]],[[15,15],31],[[16,16],31],[[18,18],31],[[19,19],31],[[20,20],31],[[23,23],31],[[24,24],31],[[25,25],31],[[6,6],31],[[12,12],31],[[28,28],31],[[29,29],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[35,31],[[6,36]],[[[33,[1]]],[[5,[4]]]],[[[34,[1]]],[[5,[4]]]],[[[34,[1]]],37],[[15,38],39],[[16,38],39],[[17,38],39],[[18,38],39],[[19,38],39],[[19,38],39],[[20,38],39],[[20,38],39],[[21,38],39],[[8,38],39],[[22,38],39],[[23,38],39],[[24,38],39],[[25,38],39],[[7,38],39],[[6,38],39],[[6,38],39],[[6,38],39],[[6,38],39],[[6,38],39],[[40,38],39],[[40,38],39],[[41,38],39],[[13,38],[[5,[42]]]],[[13,38],39],[[12,38],39],[[27,38],39],[[4,38],[[5,[42]]]],[[4,38],39],[[28,38],39],[[29,38],39],[7,[[9,[21]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[43,13],[[]],[[]],[[]],[[]],[43,4],[[]],[[]],[10,[[9,[6]]]],[10,6],[10,6],[36,6],[10,23],[44,[[9,[15]]]],[44,[[9,[16]]]],[44,[[9,[18]]]],[44,[[9,[19]]]],[44,[[9,[20]]]],[44,[[9,[28]]]],0,0,[[6,45]],0,0,0,0,[32,31],[[[47,[46]],31]],[35,31],[[21,10]],[32,[[9,[7]]]],[[[48,[46]]],7],[[6,6]],0,[[6,6],6],[[6,6],31],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[23,10],[[[33,[1]]],[[5,[[34,[1]],4]]]],[[[33,[1]],11],[[5,[[34,[1]],4]]]],[23,35],[6,31],[7,31],[6,31],0,[[],32],[46,[[47,[46]]]],[[1,10,10],[[2,[1]]]],[35,23],[[],24],[[46,27],[[47,[46]]]],[26,32],[[46,26],[[47,[46]]]],[[[48,[46]],[49,[44]]],[[5,[12,13]]]],[[[48,[46]]],[[5,[[9,[0]],13]]]],[[[48,[46]]],[[5,[[9,[0]],13]]]],[[],6],[6,6],0,0,[[[48,[46]]],11],[[[48,[46]]]],[[[48,[46]],10],11],0,[[6,6],[[9,[30]]]],0,[50],[50],[7,11],[7,11],[[7,10],11],[[[47,[46]]],[[5,[7,13]]]],[[[47,[46]]],[[5,[[48,[46]],13]]]],0,[[6,6]],[32],[[[33,[1]]],[[5,[4]]]],[[[34,[1]]],[[5,[4]]]],[[[33,[1]]],[[5,[4]]]],[[[34,[1]]],[[5,[4]]]],[15,11],0,[[6,6,31]],[[[2,[1]],29]],[[[33,[1]],29]],[[[34,[1]],29]],[[[2,[1]],10,10],[[5,[4]]]],[[[2,[1]],20],[[5,[4]]]],[[[33,[1]],20],[[5,[4]]]],[[[34,[1]],20],[[5,[4]]]],[[[2,[1]],15]],[[[2,[1]],22]],[[[2,[1]],16]],[[[2,[1]],19],[[5,[4]]]],[[[33,[1]],19],[[5,[4]]]],[[[34,[1]],19],[[5,[4]]]],[[[2,[1]],28]],[[[33,[1]],28]],[[[34,[1]],28]],[[[2,[1]],51,51],[[5,[4]]]],[[[33,[1]],51,51],[[5,[4]]]],[[[34,[1]],51,51],[[5,[4]]]],[[[33,[1]],10,10],[[5,[4]]]],[[[34,[1]],10,10],[[5,[4]]]],[[[33,[1]],10,10],[[5,[4]]]],[[[34,[1]],10,10],[[5,[4]]]],[[32,31],31],[[26,31]],[[26,31]],[[32,31]],[[26,31]],[[32,31]],[[[47,[46]],31]],[[26,31]],[[[47,[46]],27]],[[[2,[1]],[53,[[52,[[49,[44]]]]]]]],[[[2,[1]],31],[[5,[4]]]],[[21,10]],[[[2,[1]],24]],[[[2,[1]],23]],[[[2,[1]],25]],[[[47,[46]],6]],[[[2,[1]],[53,[[52,[[49,[44]]]]]]]],[7],0,0,0,[[[33,[1]]],[[5,[[34,[1]],4]]]],[[[33,[1]],11],[[5,[[34,[1]],4]]]],[[6,6],6],[[6,6]],[[6,6],6],0,[24,[[54,[44]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],3],[[],3],[[],3],[[],3],[[],3],[[6,6]],0,[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],0,[[6,6],6],0,[[32,[49,[44]],[56,[44]]],[[5,[13]]]],0,[[[2,[1]],31]],0,0,0,0,[[10,10],7],[[[34,[1]],[49,[44]]],[[37,[11]]]],[[[33,[1]],57,[49,[44]]],[[5,[4]]]],[[[2,[1]]],[[5,[[33,[1]],4]]]],[[[33,[1]],[49,[44]]],[[5,[4]]]],[[[33,[1]],58],[[5,[4]]]],0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],0,[57,57],[[]],[[57,57],31],[[],31],0,0,[[57,38],39],[[]],0,[[57,45]],0,0,[[]],[57,31],[57,31],0,[57,31],0,[57,31],0,0,0,[[]],[[],5],[[],5],[[],55],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[59,59],[60,60],[61,61],[[]],[[]],[[]],[60,[[5,[4]]]],[61,[[5,[4]]]],0,[60,[[5,[13]]]],[61,[[5,[13]]]],[[60,11],[[5,[13]]]],[[61,11],[[5,[13]]]],[1,[[5,[4]]]],[[59,1],[[5,[4]]]],[[60,1],[[5,[4]]]],[[61,1],[[5,[4]]]],[[59,59],31],[[60,60],31],[[61,61],31],[[],31],[[],31],[[],31],[[59,38],39],[[60,38],39],[[61,38],39],[[]],[[]],[[]],[60,[[5,[3,13]]]],[61,[[5,[3,13]]]],[[]],[[]],[[]],0,0,0,0,[[[53,[3]],[53,[3]]],59],[[[53,[3]],[53,[3]]],60],[[[53,[3]],[53,[3]]],61],0,[[]],[[]],[[]],0,[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],55],[[],55],[[],55]],"c":[34,67],"p":[[8,"Write"],[3,"Encoder"],[3,"String"],[4,"EncodingError"],[4,"Result"],[3,"Transformations"],[3,"Info"],[3,"AnimationControl"],[4,"Option"],[15,"u32"],[15,"usize"],[3,"OutputInfo"],[4,"DecodingError"],[8,"Error"],[4,"ColorType"],[4,"BitDepth"],[3,"PixelDimensions"],[4,"Unit"],[4,"DisposeOp"],[4,"BlendOp"],[3,"FrameControl"],[4,"Compression"],[3,"ScaledFloat"],[3,"SourceChromaticities"],[4,"SrgbRenderingIntent"],[3,"DecodeOptions"],[3,"Limits"],[4,"FilterType"],[4,"AdaptiveFilterType"],[4,"Ordering"],[15,"bool"],[3,"StreamingDecoder"],[3,"Writer"],[3,"StreamWriter"],[15,"f32"],[8,"IntoIterator"],[6,"Result"],[3,"Formatter"],[6,"Result"],[3,"ParameterError"],[4,"Decoded"],[3,"Error"],[3,"Error"],[15,"u8"],[8,"Hasher"],[8,"Read"],[3,"Decoder"],[3,"Reader"],[15,"slice"],[3,"Demand"],[15,"u16"],[4,"Cow"],[8,"Into"],[15,"array"],[3,"TypeId"],[3,"Vec"],[3,"ChunkType"],[8,"EncodableTextChunk"],[3,"TEXtChunk"],[3,"ZTXtChunk"],[3,"ITXtChunk"]]},\
"proc_macro2":{"doc":"github crates-io docs-rs","t":"NNNEDNDNNDDNNNDNEDDELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLDCLLLLLLLLLLLLLL","n":["Alone","Brace","Bracket","Delimiter","Group","Group","Ident","Ident","Joint","LexError","Literal","Literal","None","Parenthesis","Punct","Punct","Spacing","Span","TokenStream","TokenTree","as_char","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","byte_string","call_site","character","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","default","delim_span","delimiter","eq","eq","eq","eq","equivalent","equivalent","equivalent","extend","extend","extra","f32_suffixed","f32_unsuffixed","f64_suffixed","f64_unsuffixed","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_iter","from_iter","from_str","from_str","hash","i128_suffixed","i128_unsuffixed","i16_suffixed","i16_unsuffixed","i32_suffixed","i32_unsuffixed","i64_suffixed","i64_unsuffixed","i8_suffixed","i8_unsuffixed","into","into","into","into","into","into","into","into","into","into","into_iter","is_empty","isize_suffixed","isize_unsuffixed","join","located_at","mixed_site","new","new","new","new","new_raw","partial_cmp","provide","resolved_at","set_span","set_span","set_span","set_span","set_span","source_text","spacing","span","span","span","span","span","span","span_close","span_open","stream","string","subspan","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","token_stream","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","u128_suffixed","u128_unsuffixed","u16_suffixed","u16_unsuffixed","u32_suffixed","u32_unsuffixed","u64_suffixed","u64_unsuffixed","u8_suffixed","u8_unsuffixed","unwrap","usize_suffixed","usize_unsuffixed","DelimSpan","borrow","borrow_mut","clone","clone_into","close","fmt","from","into","join","open","to_owned","try_from","try_into","type_id","IntoIter","TokenStream","borrow","borrow_mut","clone","clone_into","fmt","from","into","into_iter","next","size_hint","to_owned","try_from","try_into","type_id"],"q":[[0,"proc_macro2"],[232,"proc_macro2::extra"],[247,"proc_macro2::token_stream"]],"d":["E.g. <code>+</code> is <code>Alone</code> in <code>+ =</code>, <code>+ident</code> or <code>+()</code>.","<code>{ ... }</code>","<code>[ ... ]</code>","Describes how a sequence of token trees is delimited.","A delimited token stream.","A token stream surrounded by bracket delimiters.","A word of Rust code, which may be a keyword or legal …","An identifier.","E.g. <code>+</code> is <code>Joint</code> in <code>+=</code> or <code>&#39;</code> is <code>Joint</code> in <code>&#39;#</code>.","Error returned from <code>TokenStream::from_str</code>.","A literal string (<code>&quot;hello&quot;</code>), byte string (<code>b&quot;hello&quot;</code>), …","A literal character (<code>&#39;a&#39;</code>), string (<code>&quot;hello&quot;</code>), number (<code>2.3</code>), …","<code>Ø ... Ø</code>","<code>( ... )</code>","A <code>Punct</code> is a single punctuation character like <code>+</code>, <code>-</code> or <code>#</code>.","A single punctuation character (<code>+</code>, <code>,</code>, <code>$</code>, etc.).","Whether a <code>Punct</code> is followed immediately by another <code>Punct</code> …","A region of source code, along with macro expansion …","An abstract stream of tokens, or more concretely a …","A single token or a delimited sequence of token trees …","Returns the value of this punctuation character as <code>char</code>.","","","","","","","","","","","","","","","","","","","","","Byte string literal.","The span of the invocation of the current procedural macro.","Character literal.","","","","","","","","","","","","","","","","","","","","","Returns an object that holds this group’s <code>span_open()</code> and","Returns the punctuation used as the delimiter for this …","","","","","","","","","","Items which do not have a correspondence to any API in the …","Creates a new suffixed floating-point literal.","Creates a new unsuffixed floating-point literal.","Creates a new suffixed floating-point literal.","Creates a new unsuffixed floating-point literal.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Checks if this <code>TokenStream</code> is empty.","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Create a new span encompassing <code>self</code> and <code>other</code>.","Creates a new span with the same name resolution behavior …","The span located at the invocation of the procedural …","Returns an empty <code>TokenStream</code> containing no token trees.","Creates a new <code>Group</code> with the given delimiter and token …","Creates a new <code>Punct</code> from the given character and spacing.","Creates a new <code>Ident</code> with the given <code>string</code> as well as the …","Same as <code>Ident::new</code>, but creates a raw identifier (<code>r#ident</code>…","","","Creates a new span with the same line/column information …","Configures the span for <em>only this token</em>.","Configures the span for this <code>Group</code>’s delimiters, but not …","Configure the span for this punctuation character.","Configures the span of this <code>Ident</code>, possibly changing its …","Configures the span associated for this literal.","Returns the source text behind a span. This preserves the …","Returns the spacing of this punctuation character, …","","Returns the span of this tree, delegating to the <code>span</code> …","Returns the span for the delimiters of this token stream, …","Returns the span for this punctuation character.","Returns the span of this <code>Ident</code>.","Returns the span encompassing this literal.","Returns the span pointing to the closing delimiter of this …","Returns the span pointing to the opening delimiter of this …","Returns the <code>TokenStream</code> of tokens that are delimited in …","String literal.","Returns a <code>Span</code> that is a subset of <code>self.span()</code> containing …","","","","","","","","","","","","","","","","","Public implementation details for the <code>TokenStream</code> type, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Convert <code>proc_macro2::Span</code> to <code>proc_macro::Span</code>.","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","An object that holds a <code>Group</code>’s <code>span_open()</code> and …","","","","","Returns a span for the closing punctuation of the group …","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Returns a span covering the entire delimited group.","Returns a span for the opening punctuation of the group …","","","","","An iterator over <code>TokenStream</code>’s <code>TokenTree</code>s.","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","",""],"i":[11,10,10,0,0,8,0,8,11,0,0,8,10,10,0,8,0,0,0,0,1,22,7,6,8,9,10,1,11,12,5,22,7,6,8,9,10,1,11,12,5,5,6,5,7,6,8,9,10,1,11,12,5,7,6,8,9,10,1,11,12,5,12,7,9,9,10,11,12,12,10,11,12,7,7,0,5,5,5,5,22,22,7,7,6,8,8,9,9,10,1,1,11,12,12,5,5,22,7,7,7,6,6,8,8,8,8,8,9,10,1,11,12,5,7,7,7,5,12,5,5,5,5,5,5,5,5,5,5,22,7,6,8,9,10,1,11,12,5,7,7,5,5,6,6,6,7,9,1,12,12,12,22,6,8,9,1,12,5,6,1,22,8,9,1,12,5,9,9,9,5,5,7,6,8,9,10,1,11,12,5,22,7,8,9,1,12,5,0,22,7,6,8,9,10,1,11,12,5,22,7,6,8,9,10,1,11,12,5,22,7,6,8,9,10,1,11,12,5,5,5,5,5,5,5,5,5,5,5,6,5,5,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,34,34,34,34,34,34,34,34,34,34,34,34,34,34],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[4,[3]]],5],[[],6],[2,5],[7,7],[6,6],[8,8],[9,9],[10,10],[1,1],[11,11],[12,12],[5,5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[12,12],13],[[],7],[9,14],[9,10],[[10,10],15],[[11,11],15],[[12,[0,[16,[18,[17]]]]],15],[[12,12],15],[[],15],[[],15],[[],15],[[7,19]],[[7,19]],0,[20,5],[20,5],[21,5],[21,5],[[22,23],24],[[22,23],24],[[7,23],24],[[7,23],24],[[6,23],24],[[8,23],24],[[8,23],24],[[9,23],24],[[9,23],24],[[10,23],24],[[1,23],24],[[1,23],24],[[11,23],24],[[12,23],24],[[12,23],24],[[5,23],24],[[5,23],24],[[]],[25,7],[[]],[8,7],[[]],[26,6],[1,8],[9,8],[[]],[5,8],[12,8],[[]],[[]],[[]],[[]],[[]],[[]],[19,7],[19,7],[17,[[27,[7,22]]]],[17,[[27,[5,22]]]],[[12,28]],[29,5],[29,5],[30,5],[30,5],[31,5],[31,5],[32,5],[32,5],[33,5],[33,5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[7,34],[7,15],[35,5],[35,5],[[6,6],[[36,[6]]]],[[6,6],6],[[],6],[[],7],[[10,7],9],[[2,11],1],[[17,6],12],[[17,6],12],[[12,12],[[36,[13]]]],[37],[[6,6],6],[[8,6]],[[9,6]],[[1,6]],[[12,6]],[[5,6]],[6,[[36,[38]]]],[1,11],[22,6],[8,6],[9,6],[1,6],[12,6],[5,6],[9,6],[9,6],[9,7],[17,5],[[5,[40,[39]]],[[36,[6]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],0,[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[42,5],[42,5],[43,5],[43,5],[44,5],[44,5],[45,5],[45,5],[3,5],[3,5],[6,26],[39,5],[39,5],0,[[]],[[]],[14,14],[[]],[14,6],[[14,23],24],[[]],[[]],[14,6],[14,6],[[]],[[],27],[[],27],[[],41],0,0,[[]],[[]],[34,34],[[]],[[34,23],24],[[]],[[]],[[]],[34,[[36,[8]]]],[34],[[]],[[],27],[[],27],[[],41]],"c":[],"p":[[3,"Punct"],[15,"char"],[15,"u8"],[15,"slice"],[3,"Literal"],[3,"Span"],[3,"TokenStream"],[4,"TokenTree"],[3,"Group"],[4,"Delimiter"],[4,"Spacing"],[3,"Ident"],[4,"Ordering"],[3,"DelimSpan"],[15,"bool"],[8,"Sized"],[15,"str"],[8,"AsRef"],[8,"IntoIterator"],[15,"f32"],[15,"f64"],[3,"LexError"],[3,"Formatter"],[6,"Result"],[3,"TokenStream"],[3,"Span"],[4,"Result"],[8,"Hasher"],[15,"i128"],[15,"i16"],[15,"i32"],[15,"i64"],[15,"i8"],[3,"IntoIter"],[15,"isize"],[4,"Option"],[3,"Demand"],[3,"String"],[15,"usize"],[8,"RangeBounds"],[3,"TypeId"],[15,"u128"],[15,"u16"],[15,"u32"],[15,"u64"]]},\
"quote":{"doc":"github crates-io docs-rs","t":"IIIKKKKKOLLOOLLLLK","n":["IdentFragment","ToTokens","TokenStreamExt","append","append_all","append_separated","append_terminated","fmt","format_ident","into_token_stream","into_token_stream","quote","quote_spanned","span","span","to_token_stream","to_token_stream","to_tokens"],"q":[[0,"quote"]],"d":["Specialized formatting trait used by <code>format_ident!</code>.","Types that can be interpolated inside a <code>quote!</code> invocation.","TokenStream extension trait with methods for appending …","For use by <code>ToTokens</code> implementations.","For use by <code>ToTokens</code> implementations.","For use by <code>ToTokens</code> implementations.","For use by <code>ToTokens</code> implementations.","Format this value as an identifier fragment.","Formatting macro for constructing <code>Ident</code>s.","Convert <code>self</code> directly into a <code>TokenStream</code> object.","Convert <code>self</code> directly into a <code>TokenStream</code> object.","The whole point.","Same as <code>quote!</code>, but applies a given span to all tokens …","Span associated with this <code>IdentFragment</code>.","Span associated with this <code>IdentFragment</code>.","Convert <code>self</code> directly into a <code>TokenStream</code> object.","Convert <code>self</code> directly into a <code>TokenStream</code> object.","Write <code>self</code> to the given <code>TokenStream</code>."],"i":[0,0,0,11,11,11,11,12,0,4,4,0,0,12,12,4,4,4],"f":[0,0,0,[[[2,[1]]]],[3],[[3,4]],[[3,4]],[5,6],0,[7,8],[7,8],0,0,[[],[[10,[9]]]],[[],[[10,[9]]]],[[],8],[[],8],[8]],"c":[],"p":[[4,"TokenTree"],[8,"Into"],[8,"IntoIterator"],[8,"ToTokens"],[3,"Formatter"],[6,"Result"],[8,"Sized"],[3,"TokenStream"],[3,"Span"],[4,"Option"],[8,"TokenStreamExt"],[8,"IdentFragment"]]},\
"raw_window_handle":{"doc":"Interoperability library for Rust Windowing applications.","t":"DDNDNDNNDDDNNDDNNDDNNDDEIIIINNNDDEENNDDNNDDNNDDNDNDDNDNNDDNNDDMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMKLKLMMLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMKL","n":["Active","ActiveHandle","Android","AndroidDisplayHandle","AndroidNdk","AndroidNdkWindowHandle","AppKit","AppKit","AppKitDisplayHandle","AppKitWindowHandle","DisplayHandle","Drm","Drm","DrmDisplayHandle","DrmWindowHandle","Gbm","Gbm","GbmDisplayHandle","GbmWindowHandle","Haiku","Haiku","HaikuDisplayHandle","HaikuWindowHandle","HandleError","HasDisplayHandle","HasRawDisplayHandle","HasRawWindowHandle","HasWindowHandle","Inactive","Orbital","Orbital","OrbitalDisplayHandle","OrbitalWindowHandle","RawDisplayHandle","RawWindowHandle","UiKit","UiKit","UiKitDisplayHandle","UiKitWindowHandle","Wayland","Wayland","WaylandDisplayHandle","WaylandWindowHandle","Web","Web","WebDisplayHandle","WebWindowHandle","Win32","Win32WindowHandle","WinRt","WinRtWindowHandle","WindowHandle","Windows","WindowsDisplayHandle","Xcb","Xcb","XcbDisplayHandle","XcbWindowHandle","Xlib","Xlib","XlibDisplayHandle","XlibWindowHandle","a_native_window","b_direct_window","b_window","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_raw","borrow_raw","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","connection","core_window","display","display","display_handle","display_handle","empty","empty","empty","empty","empty","empty","empty","empty","empty","empty","empty","empty","empty","empty","empty","empty","empty","empty","empty","empty","empty","empty","empty","empty","empty","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","fd","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","gbm_device","gbm_surface","handle","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hinstance","hwnd","id","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","new","new","new_unchecked","ns_view","ns_window","plane","raw_display_handle","raw_display_handle","raw_window_handle","raw_window_handle","screen","screen","set_active","set_inactive","surface","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","ui_view","ui_view_controller","ui_window","visual_id","visual_id","window","window","window","window_handle","window_handle"],"q":[[0,"raw_window_handle"]],"d":["Keeps track of whether the application is currently active.","Represents a live window handle.","A raw display handle for Android NDK.","Raw display handle for Android.","A raw window handle for Android NDK.","Raw window handle for Android NDK.","A raw window handle for AppKit.","A raw display handle for AppKit.","Raw display handle for AppKit.","Raw window handle for AppKit.","The handle to the display controller of the windowing …","A raw window handle for the Linux Kernel Mode Set/Direct …","A raw display handle for the Linux Kernel Mode Set/Direct …","Raw display handle for the Linux Kernel Mode Set/Direct …","Raw window handle for the Linux Kernel Mode Set/Direct …","A raw window handle for the Linux Generic Buffer Manager.","A raw display handle for the Linux Generic Buffer Manager.","Raw display handle for the Linux Generic Buffer Manager.","Raw window handle for the Linux Generic Buffer Manager.","A raw window handle for Haiku.","A raw display handle for Haiku.","Raw display handle for Haiku.","Raw window handle for Haiku.","The error type returned when a handle cannot be obtained.","A display that acts as a wrapper around a display handle.","Display that wraps around a raw display handle.","Window that wraps around a raw window handle.","A handle to a window.","The handle is not currently active.","A raw window handle for the Redox operating system.","A raw display handle for the Redox operating system.","Raw display handle for the Redox operating system.","Raw window handle for the Redox operating system.","A display server handle for a particular windowing system.","A window handle for a particular windowing system.","A raw window handle for UIKit (Apple’s non-macOS …","A raw display handle for UIKit (Apple’s non-macOS …","Raw display handle for UIKit.","Raw window handle for UIKit.","A raw window handle for Wayland.","A raw display handle for Wayland.","Raw display handle for Wayland.","Raw window handle for Wayland.","A raw window handle for the Web.","A raw display handle for the Web.","Raw display handle for the Web.","Raw window handle for the Web.","A raw window handle for Win32.","Raw window handle for Win32.","A raw window handle for WinRT.","Raw window handle for WinRT.","The handle to a window.","A raw display handle for Win32.","Raw display handle for Windows.","A raw window handle for Xcb.","A raw display handle for Xcb.","Raw display handle for Xcb.","Raw window handle for Xcb.","A raw window handle for Xlib.","A raw display handle for Xlib.","Raw display handle for Xlib.","Raw window handle for Xlib.","A pointer to an <code>ANativeWindow</code>.","A pointer to a BDirectWindow object that might be null","A pointer to a BWindow object","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a <code>DisplayHandle</code> from a <code>RawDisplayHandle</code>.","Borrow a <code>WindowHandle</code> from a <code>RawWindowHandle</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A pointer to an X server <code>xcb_connection_t</code>.","A WinRT <code>CoreWindow</code> handle.","A pointer to an Xlib <code>Display</code>.","A pointer to a <code>wl_display</code>.","Get a handle to the display controller of the windowing …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The drm file descriptor.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","Returns the argument unchanged.","","The gbm device.","The gbm surface.","Get a live window handle.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The <code>HINSTANCE</code> associated with this type’s <code>HWND</code>.","A Win32 <code>HWND</code> handle.","An ID value inserted into the data attributes of the …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Create a new <code>Active</code> tracker.","Create a new <code>ActiveHandle</code>.","Create a new freestanding active handle.","A pointer to an <code>NSView</code> object.","A pointer to an <code>NSWindow</code> object.","The primary drm plane handle.","","","","","An X11 screen to use with this display handle.","An X11 screen to use with this display handle.","Set the application to be active.","Set the application to be inactive.","A pointer to a <code>wl_surface</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A pointer to an <code>UIView</code> object.","A pointer to an <code>UIViewController</code> object.","A pointer to an <code>UIWindow</code> object.","An Xlib visual ID, or 0 if unknown.","An X11 <code>xcb_visualid_t</code>, or 0 if unknown.","A pointer to an orbclient window.","An Xlib <code>Window</code>.","An X11 <code>xcb_window_t</code>.","Get a handle to the window.",""],"i":[0,0,1,0,3,0,3,1,0,0,0,3,1,0,0,3,1,0,0,3,1,0,0,0,0,0,0,0,31,3,1,0,0,0,0,3,1,0,0,3,1,0,0,3,1,0,0,3,0,3,0,0,1,0,3,1,0,0,3,1,0,0,7,11,11,34,6,7,8,9,4,2,5,31,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,3,1,34,6,7,8,9,4,2,5,31,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,3,1,2,5,6,7,8,9,4,2,5,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,3,1,18,30,16,20,40,2,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,6,7,8,9,2,5,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,3,1,22,34,6,7,8,9,4,2,5,31,31,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,3,1,34,6,7,8,9,4,2,5,31,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,3,3,3,3,3,3,3,3,3,3,3,3,3,3,1,1,1,1,1,1,1,1,1,1,1,1,1,24,25,34,6,7,8,9,2,5,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,3,1,29,29,27,34,6,7,8,9,4,2,5,31,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,3,1,34,4,4,9,9,23,41,2,42,5,16,18,34,34,21,34,6,7,8,9,4,2,5,31,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,3,1,34,6,7,8,9,4,2,5,31,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,3,1,34,6,7,8,9,4,2,5,31,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,3,1,15,15,15,17,19,13,17,19,43,5],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,2],[[3,4],5],[6,6],[7,7],[8,8],[9,9],[4,4],[2,2],[5,5],[10,10],[11,11],[12,12],[13,13],[14,14],[15,15],[16,16],[17,17],[18,18],[19,19],[20,20],[21,21],[22,22],[23,23],[24,24],[25,25],[26,26],[27,27],[28,28],[29,29],[30,30],[3,3],[1,1],0,0,0,0,[[],[[32,[2,31]]]],[2,[[32,[2,31]]]],[[],6],[[],7],[[],8],[[],9],[[],10],[[],11],[[],12],[[],13],[[],14],[[],15],[[],16],[[],17],[[],18],[[],19],[[],20],[[],21],[[],22],[[],23],[[],24],[[],25],[[],26],[[],27],[[],28],[[],29],[[],30],[[6,6],33],[[7,7],33],[[8,8],33],[[9,9],33],[[2,2],33],[[5,5],33],[[10,10],33],[[11,11],33],[[12,12],33],[[13,13],33],[[14,14],33],[[15,15],33],[[16,16],33],[[17,17],33],[[18,18],33],[[19,19],33],[[20,20],33],[[21,21],33],[[22,22],33],[[23,23],33],[[24,24],33],[[25,25],33],[[26,26],33],[[27,27],33],[[28,28],33],[[29,29],33],[[30,30],33],[[3,3],33],[[1,1],33],0,[[34,35],36],[[6,35],36],[[7,35],36],[[8,35],36],[[9,35],36],[[4,35],36],[[2,35],36],[[5,35],36],[[31,35],36],[[31,35],36],[[10,35],36],[[11,35],36],[[12,35],36],[[13,35],36],[[14,35],36],[[15,35],36],[[16,35],36],[[17,35],36],[[18,35],36],[[19,35],36],[[20,35],36],[[21,35],36],[[22,35],36],[[23,35],36],[[24,35],36],[[25,35],36],[[26,35],36],[[27,35],36],[[28,35],36],[[29,35],36],[[30,35],36],[[3,35],36],[[1,35],36],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[21,3],[27,3],[15,3],[19,3],[29,3],[9,3],[11,3],[25,3],[23,3],[[]],[13,3],[17,3],[7,3],[30,3],[22,1],[20,1],[26,1],[14,1],[24,1],[18,1],[10,1],[8,1],[6,1],[16,1],[28,1],[[]],[12,1],0,0,[34,[[37,[4]]]],[[6,38]],[[7,38]],[[8,38]],[[9,38]],[[2,38]],[[5,38]],[[10,38]],[[11,38]],[[12,38]],[[13,38]],[[14,38]],[[15,38]],[[16,38]],[[17,38]],[[18,38]],[[19,38]],[[20,38]],[[21,38]],[[22,38]],[[23,38]],[[24,38]],[[25,38]],[[26,38]],[[27,38]],[[28,38]],[[29,38]],[[30,38]],[[3,38]],[[1,38]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],34],[[],4],[[],4],0,0,0,[[],1],[2,1],[[],3],[5,3],0,0,[34],[34],0,[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],0,0,0,0,0,0,0,0,[[],[[32,[5,31]]]],[5,[[32,[5,31]]]]],"c":[],"p":[[4,"RawDisplayHandle"],[3,"DisplayHandle"],[4,"RawWindowHandle"],[3,"ActiveHandle"],[3,"WindowHandle"],[3,"AndroidDisplayHandle"],[3,"AndroidNdkWindowHandle"],[3,"AppKitDisplayHandle"],[3,"AppKitWindowHandle"],[3,"HaikuDisplayHandle"],[3,"HaikuWindowHandle"],[3,"OrbitalDisplayHandle"],[3,"OrbitalWindowHandle"],[3,"UiKitDisplayHandle"],[3,"UiKitWindowHandle"],[3,"XlibDisplayHandle"],[3,"XlibWindowHandle"],[3,"XcbDisplayHandle"],[3,"XcbWindowHandle"],[3,"WaylandDisplayHandle"],[3,"WaylandWindowHandle"],[3,"DrmDisplayHandle"],[3,"DrmWindowHandle"],[3,"GbmDisplayHandle"],[3,"GbmWindowHandle"],[3,"WebDisplayHandle"],[3,"WebWindowHandle"],[3,"WindowsDisplayHandle"],[3,"Win32WindowHandle"],[3,"WinRtWindowHandle"],[4,"HandleError"],[4,"Result"],[15,"bool"],[3,"Active"],[3,"Formatter"],[6,"Result"],[4,"Option"],[8,"Hasher"],[3,"TypeId"],[8,"HasDisplayHandle"],[8,"HasRawDisplayHandle"],[8,"HasRawWindowHandle"],[8,"HasWindowHandle"]]},\
"rustc_hash":{"doc":"Fast, non-cryptographic hash used by rustc and Firefox.","t":"GGDLLLLLLLLLLLLLLL","n":["FxHashMap","FxHashSet","FxHasher","borrow","borrow_mut","default","finish","from","into","try_from","try_into","type_id","write","write_u16","write_u32","write_u64","write_u8","write_usize"],"q":[[0,"rustc_hash"]],"d":["Type alias for a hashmap using the <code>fx</code> hash algorithm.","Type alias for a hashmap using the <code>fx</code> hash algorithm.","A speedy hash algorithm for use within rustc. The hashmap …","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","",""],"i":[0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],"f":[0,0,0,[[]],[[]],[[],1],[1,2],[[]],[[]],[[],3],[[],3],[[],4],[[1,[6,[5]]]],[[1,7]],[[1,8]],[[1,2]],[[1,5]],[[1,9]]],"c":[],"p":[[3,"FxHasher"],[15,"u64"],[4,"Result"],[3,"TypeId"],[15,"u8"],[15,"slice"],[15,"u16"],[15,"u32"],[15,"usize"]]},\
"safe_arch":{"doc":"A crate that safely exposes arch intrinsics via <code>#[cfg()]</code>.","t":"LLLLFFFFFFFFFFFFFFLLLLLLFFFFFFLLLLLLFFFLLLLLLFFFLLLLLLLLLLLLOOOOFFFFFFFFLLLLLLFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFLLLLLLLLLLFFFFLLLOOLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFFFFFFOOLLLLLLLLLLLLFFFFFFFFFFFFFFFDDDDDDFFFFFFFFFFFFFFFFFFLLLLFFFFFFFFFALLLLLFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFOOOOOOFFFFFOOOOOOOOOOOOOOOOOOOOFFFFFFFFFFFFFFFFFFLLLLFFFFFFFFFFFFFLLLLLLLLFFFFFLLLLLLLLLLLLLLLLLLFFFFFFFFFFFFFFF","n":["add","add","add_assign","add_assign","add_i16_m128i","add_i32_m128i","add_i64_m128i","add_i8_m128i","add_m128","add_m128_s","add_m128d","add_m128d_s","add_saturating_i16_m128i","add_saturating_i8_m128i","add_saturating_u16_m128i","add_saturating_u8_m128i","average_u16_m128i","average_u8_m128i","bitand","bitand","bitand","bitand_assign","bitand_assign","bitand_assign","bitand_m128","bitand_m128d","bitand_m128i","bitandnot_m128","bitandnot_m128d","bitandnot_m128i","bitor","bitor","bitor","bitor_assign","bitor_assign","bitor_assign","bitor_m128","bitor_m128d","bitor_m128i","bitxor","bitxor","bitxor","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_m128","bitxor_m128d","bitxor_m128i","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","byte_shl_imm_u128_m128i","byte_shl_imm_u128_m128i","byte_shr_imm_u128_m128i","byte_shr_imm_u128_m128i","byte_swap_i32","byte_swap_i64","cast_to_m128_from_m128d","cast_to_m128_from_m128i","cast_to_m128d_from_m128","cast_to_m128d_from_m128i","cast_to_m128i_from_m128","cast_to_m128i_from_m128d","clone","clone","clone","clone","clone","clone","cmp_eq_i32_m128_s","cmp_eq_i32_m128d_s","cmp_eq_mask_i16_m128i","cmp_eq_mask_i32_m128i","cmp_eq_mask_i8_m128i","cmp_eq_mask_m128","cmp_eq_mask_m128_s","cmp_eq_mask_m128d","cmp_eq_mask_m128d_s","cmp_ge_i32_m128_s","cmp_ge_i32_m128d_s","cmp_ge_mask_m128","cmp_ge_mask_m128_s","cmp_ge_mask_m128d","cmp_ge_mask_m128d_s","cmp_gt_i32_m128_s","cmp_gt_i32_m128d_s","cmp_gt_mask_i16_m128i","cmp_gt_mask_i32_m128i","cmp_gt_mask_i8_m128i","cmp_gt_mask_m128","cmp_gt_mask_m128_s","cmp_gt_mask_m128d","cmp_gt_mask_m128d_s","cmp_le_i32_m128_s","cmp_le_i32_m128d_s","cmp_le_mask_m128","cmp_le_mask_m128_s","cmp_le_mask_m128d","cmp_le_mask_m128d_s","cmp_lt_i32_m128_s","cmp_lt_i32_m128d_s","cmp_lt_mask_i16_m128i","cmp_lt_mask_i32_m128i","cmp_lt_mask_i8_m128i","cmp_lt_mask_m128","cmp_lt_mask_m128_s","cmp_lt_mask_m128d","cmp_lt_mask_m128d_s","cmp_neq_i32_m128_s","cmp_neq_i32_m128d_s","cmp_neq_mask_m128","cmp_neq_mask_m128_s","cmp_neq_mask_m128d","cmp_neq_mask_m128d_s","cmp_nge_mask_m128","cmp_nge_mask_m128_s","cmp_nge_mask_m128d","cmp_nge_mask_m128d_s","cmp_ngt_mask_m128","cmp_ngt_mask_m128_s","cmp_ngt_mask_m128d","cmp_ngt_mask_m128d_s","cmp_nle_mask_m128","cmp_nle_mask_m128_s","cmp_nle_mask_m128d","cmp_nle_mask_m128d_s","cmp_nlt_mask_m128","cmp_nlt_mask_m128_s","cmp_nlt_mask_m128d","cmp_nlt_mask_m128d_s","cmp_ordinary_mask_m128","cmp_ordinary_mask_m128_s","cmp_ordinary_mask_m128d","cmp_ordinary_mask_m128d_s","cmp_unord_mask_m128","cmp_unord_mask_m128_s","cmp_unord_mask_m128d","cmp_unord_mask_m128d_s","convert_i32_replace_m128_s","convert_i32_replace_m128d_s","convert_i64_replace_m128d_s","convert_m128_s_replace_m128d_s","convert_m128d_s_replace_m128_s","convert_to_i32_m128i_from_m128","convert_to_i32_m128i_from_m128d","convert_to_m128_from_i32_m128i","convert_to_m128_from_m128d","convert_to_m128d_from_lower2_i32_m128i","convert_to_m128d_from_lower2_m128","copy_i64_m128i_s","copy_replace_low_f64_m128d","default","default","default","default","default","default","div","div","div_assign","div_assign","div_m128","div_m128_s","div_m128d","div_m128d_s","eq","eq","eq","extract_i16_as_i32_m128i","extract_i16_as_i32_m128i","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_array","from_array","from_array","from_array","from_bits","from_bits","from_bits","from_bits","get_f32_from_m128_s","get_f64_from_m128d_s","get_i32_from_m128_s","get_i32_from_m128d_s","get_i32_from_m128i_s","get_i64_from_m128d_s","get_i64_from_m128i_s","insert_i16_from_i32_m128i","insert_i16_from_i32_m128i","into","into","into","into","into","into","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","load_f32_m128_s","load_f32_splat_m128","load_f64_m128d_s","load_f64_splat_m128d","load_i64_m128i_s","load_m128","load_m128d","load_m128i","load_replace_high_m128d","load_replace_low_m128d","load_reverse_m128","load_reverse_m128d","load_unaligned_m128","load_unaligned_m128d","load_unaligned_m128i","m128","m128d","m128i","m256","m256d","m256i","max_i16_m128i","max_m128","max_m128_s","max_m128d","max_m128d_s","max_u8_m128i","min_i16_m128i","min_m128","min_m128_s","min_m128d","min_m128d_s","min_u8_m128i","move_high_low_m128","move_low_high_m128","move_m128_s","move_mask_i8_m128i","move_mask_m128","move_mask_m128d","mul","mul","mul_assign","mul_assign","mul_i16_horizontal_add_m128i","mul_i16_keep_high_m128i","mul_i16_keep_low_m128i","mul_m128","mul_m128_s","mul_m128d","mul_m128d_s","mul_u16_keep_high_m128i","mul_widen_u32_odd_m128i","naming_conventions","neg","neg","not","not","not","pack_i16_to_i8_m128i","pack_i16_to_u8_m128i","pack_i32_to_i16_m128i","read_timestamp_counter","read_timestamp_counter_p","reciprocal_m128","reciprocal_m128_s","reciprocal_sqrt_m128","reciprocal_sqrt_m128_s","set_i16_m128i","set_i32_m128i","set_i32_m128i_s","set_i64_m128i","set_i64_m128i_s","set_i8_m128i","set_m128","set_m128_s","set_m128d","set_m128d_s","set_reversed_i16_m128i","set_reversed_i32_m128i","set_reversed_i8_m128i","set_reversed_m128","set_reversed_m128d","set_splat_i16_m128i","set_splat_i32_m128i","set_splat_i64_m128i","set_splat_i8_m128i","set_splat_m128","set_splat_m128d","shl_all_u16_m128i","shl_all_u32_m128i","shl_all_u64_m128i","shl_imm_u16_m128i","shl_imm_u16_m128i","shl_imm_u32_m128i","shl_imm_u32_m128i","shl_imm_u64_m128i","shl_imm_u64_m128i","shr_all_i16_m128i","shr_all_i32_m128i","shr_all_u16_m128i","shr_all_u32_m128i","shr_all_u64_m128i","shr_imm_i16_m128i","shr_imm_i16_m128i","shr_imm_i32_m128i","shr_imm_i32_m128i","shr_imm_u16_m128i","shr_imm_u16_m128i","shr_imm_u32_m128i","shr_imm_u32_m128i","shr_imm_u64_m128i","shr_imm_u64_m128i","shuffle_abi_f32_all_m128","shuffle_abi_f32_all_m128","shuffle_abi_f64_all_m128d","shuffle_abi_f64_all_m128d","shuffle_ai_f32_all_m128i","shuffle_ai_f32_all_m128i","shuffle_ai_i16_h64all_m128i","shuffle_ai_i16_h64all_m128i","shuffle_ai_i16_l64all_m128i","shuffle_ai_i16_l64all_m128i","sqrt_m128","sqrt_m128_s","sqrt_m128d","sqrt_m128d_s","store_high_m128d_s","store_i64_m128i_s","store_m128","store_m128_s","store_m128d","store_m128d_s","store_m128i","store_reverse_m128","store_reversed_m128d","store_splat_m128","store_splat_m128d","store_unaligned_m128","store_unaligned_m128d","store_unaligned_m128i","sub","sub","sub_assign","sub_assign","sub_i16_m128i","sub_i32_m128i","sub_i64_m128i","sub_i8_m128i","sub_m128","sub_m128_s","sub_m128d","sub_m128d_s","sub_saturating_i16_m128i","sub_saturating_i8_m128i","sub_saturating_u16_m128i","sub_saturating_u8_m128i","sum_of_u8_abs_diff_m128i","to_array","to_array","to_array","to_array","to_bits","to_bits","to_bits","to_bits","transpose_four_m128","truncate_m128_to_m128i","truncate_m128d_to_m128i","truncate_to_i32_m128d_s","truncate_to_i64_m128d_s","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","unpack_high_i16_m128i","unpack_high_i32_m128i","unpack_high_i64_m128i","unpack_high_i8_m128i","unpack_high_m128","unpack_high_m128d","unpack_low_i16_m128i","unpack_low_i32_m128i","unpack_low_i64_m128i","unpack_low_i8_m128i","unpack_low_m128","unpack_low_m128d","zeroed_m128","zeroed_m128d","zeroed_m128i"],"q":[[0,"safe_arch"]],"d":["","","","","Lanewise <code>a + b</code> with lanes as <code>i16</code>.","Lanewise <code>a + b</code> with lanes as <code>i32</code>.","Lanewise <code>a + b</code> with lanes as <code>i64</code>.","Lanewise <code>a + b</code> with lanes as <code>i8</code>.","Lanewise <code>a + b</code>.","Low lane <code>a + b</code>, other lanes unchanged.","Lanewise <code>a + b</code>.","Lowest lane <code>a + b</code>, high lane unchanged.","Lanewise saturating <code>a + b</code> with lanes as <code>i16</code>.","Lanewise saturating <code>a + b</code> with lanes as <code>i8</code>.","Lanewise saturating <code>a + b</code> with lanes as <code>u16</code>.","Lanewise saturating <code>a + b</code> with lanes as <code>u8</code>.","Lanewise average of the <code>u16</code> values.","Lanewise average of the <code>u8</code> values.","","","","","","","Bitwise <code>a &amp; b</code>.","Bitwise <code>a &amp; b</code>.","Bitwise <code>a &amp; b</code>.","Bitwise <code>(!a) &amp; b</code>.","Bitwise <code>(!a) &amp; b</code>.","Bitwise <code>(!a) &amp; b</code>.","","","","","","","Bitwise <code>a | b</code>.","Bitwise <code>a | b</code>.","Bitwise <code>a | b</code>.","","","","","","","Bitwise <code>a ^ b</code>.","Bitwise <code>a ^ b</code>.","Bitwise <code>a ^ b</code>.","","","","","","","","","","","","","Shifts all bits in the entire register left by a number of …","Shifts all bits in the entire register left by a number of …","Shifts all bits in the entire register right by a number …","Shifts all bits in the entire register right by a number …","Swap the bytes of the given 32-bit value.","Swap the bytes of the given 64-bit value.","Bit-preserving cast to <code>m128</code> from <code>m128d</code>","Bit-preserving cast to <code>m128</code> from <code>m128i</code>","Bit-preserving cast to <code>m128d</code> from <code>m128</code>","Bit-preserving cast to <code>m128d</code> from <code>m128i</code>","Bit-preserving cast to <code>m128i</code> from <code>m128</code>","Bit-preserving cast to <code>m128i</code> from <code>m128d</code>","","","","","","","Low lane equality.","Low lane <code>f64</code> equal to.","Lanewise <code>a == b</code> with lanes as <code>i16</code>.","Lanewise <code>a == b</code> with lanes as <code>i32</code>.","Lanewise <code>a == b</code> with lanes as <code>i8</code>.","Lanewise <code>a == b</code>.","Low lane <code>a == b</code>, other lanes unchanged.","Lanewise <code>a == b</code>, mask output.","Low lane <code>a == b</code>, other lanes unchanged.","Low lane greater than or equal to.","Low lane <code>f64</code> greater than or equal to.","Lanewise <code>a &gt;= b</code>.","Low lane <code>a &gt;= b</code>, other lanes unchanged.","Lanewise <code>a &gt;= b</code>.","Low lane <code>a &gt;= b</code>, other lanes unchanged.","Low lane greater than.","Low lane <code>f64</code> greater than.","Lanewise <code>a &gt; b</code> with lanes as <code>i16</code>.","Lanewise <code>a &gt; b</code> with lanes as <code>i32</code>.","Lanewise <code>a &gt; b</code> with lanes as <code>i8</code>.","Lanewise <code>a &gt; b</code>.","Low lane <code>a &gt; b</code>, other lanes unchanged.","Lanewise <code>a &gt; b</code>.","Low lane <code>a &gt; b</code>, other lanes unchanged.","Low lane less than or equal to.","Low lane <code>f64</code> less than or equal to.","Lanewise <code>a &lt;= b</code>.","Low lane <code>a &lt;= b</code>, other lanes unchanged.","Lanewise <code>a &lt;= b</code>.","Low lane <code>a &lt;= b</code>, other lanes unchanged.","Low lane less than.","Low lane <code>f64</code> less than.","Lanewise <code>a &lt; b</code> with lanes as <code>i16</code>.","Lanewise <code>a &lt; b</code> with lanes as <code>i32</code>.","Lanewise <code>a &lt; b</code> with lanes as <code>i8</code>.","Lanewise <code>a &lt; b</code>.","Low lane <code>a &lt; b</code>, other lanes unchanged.","Lanewise <code>a &lt; b</code>.","Low lane <code>a &lt; b</code>, other lane unchanged.","Low lane not equal to.","Low lane <code>f64</code> less than.","Lanewise <code>a != b</code>.","Low lane <code>a != b</code>, other lanes unchanged.","Lanewise <code>a != b</code>.","Low lane <code>a != b</code>, other lane unchanged.","Lanewise <code>!(a &gt;= b)</code>.","Low lane <code>!(a &gt;= b)</code>, other lanes unchanged.","Lanewise <code>!(a &gt;= b)</code>.","Low lane <code>!(a &gt;= b)</code>, other lane unchanged.","Lanewise <code>!(a &gt; b)</code>.","Low lane <code>!(a &gt; b)</code>, other lanes unchanged.","Lanewise <code>!(a &gt; b)</code>.","Low lane <code>!(a &gt; b)</code>, other lane unchanged.","Lanewise <code>!(a &lt;= b)</code>.","Low lane <code>!(a &lt;= b)</code>, other lanes unchanged.","Lanewise <code>!(a &lt;= b)</code>.","Low lane <code>!(a &lt;= b)</code>, other lane unchanged.","Lanewise <code>!(a &lt; b)</code>.","Low lane <code>!(a &lt; b)</code>, other lanes unchanged.","Lanewise <code>!(a &lt; b)</code>.","Low lane <code>!(a &lt; b)</code>, other lane unchanged.","Lanewise <code>(!a.is_nan()) &amp; (!b.is_nan())</code>.","Low lane <code>(!a.is_nan()) &amp; (!b.is_nan())</code>, other lanes …","Lanewise <code>(!a.is_nan()) &amp; (!b.is_nan())</code>.","Low lane <code>(!a.is_nan()) &amp; (!b.is_nan())</code>, other lane …","Lanewise <code>a.is_nan() | b.is_nan()</code>.","Low lane <code>a.is_nan() | b.is_nan()</code>, other lanes unchanged.","Lanewise <code>a.is_nan() | b.is_nan()</code>.","Low lane <code>a.is_nan() | b.is_nan()</code>, other lane unchanged.","Convert <code>i32</code> to <code>f32</code> and replace the low lane of the input.","Convert <code>i32</code> to <code>f64</code> and replace the low lane of the input.","Convert <code>i64</code> to <code>f64</code> and replace the low lane of the input.","Converts the lower <code>f32</code> to <code>f64</code> and replace the low lane of …","Converts the low <code>f64</code> to <code>f32</code> and replaces the low lane of …","Rounds the <code>f32</code> lanes to <code>i32</code> lanes.","Rounds the two <code>f64</code> lanes to the low two <code>i32</code> lanes.","Rounds the four <code>i32</code> lanes to four <code>f32</code> lanes.","Rounds the two <code>f64</code> lanes to the low two <code>f32</code> lanes.","Rounds the lower two <code>i32</code> lanes to two <code>f64</code> lanes.","Rounds the two <code>f64</code> lanes to the low two <code>f32</code> lanes.","Copy the low <code>i64</code> lane to a new register, upper bits 0.","Copies the <code>a</code> value and replaces the low lane with the low <code>b</code>…","","","","","","","","","","","Lanewise <code>a / b</code>.","Low lane <code>a / b</code>, other lanes unchanged.","Lanewise <code>a / b</code>.","Lowest lane <code>a / b</code>, high lane unchanged.","Not a direct intrinsic, this is a <code>cmp_eq_mask</code> and then a …","Not a direct intrinsic, this is a <code>cmp_eq_mask</code> and then a …","Not a direct intrinsic, this is a <code>cmp_eq_mask_i8_m128i</code> and …","Gets an <code>i16</code> value out of an <code>m128i</code>, returns as <code>i32</code>.","Gets an <code>i16</code> value out of an <code>m128i</code>, returns as <code>i32</code>.","UpperHex formats each float’s bit pattern (via …","LowerHex formats each float’s bit pattern (via …","Debug formats each float.","UpperExp formats each float.","Octal formats each float’s bit pattern (via <code>f32::to_bits</code>…","Display formats each float, and leaves the type name off …","LowerExp formats each float.","Binary formats each float’s bit pattern (via <code>f32::to_bits</code>…","Display formats each double, and leaves the type name off …","LowerHex formats each double’s bit pattern (via …","Octal formats each double’s bit pattern (via <code>f64::to_bits</code>…","Debug formats each double.","UpperHex formats each double’s bit pattern (via …","LowerExp formats each double.","Binary formats each double’s bit pattern (via …","UpperExp formats each double.","Debug formats each <code>i32</code>.","Binary formats each <code>i32</code>.","LowerHex formats each <code>i32</code>.","Display formats each <code>i32</code>, and leaves the type name off of …","LowerExp formats each <code>i32</code>.","Octal formats each <code>i32</code>.","UpperExp formats each <code>i32</code>.","UpperHex formats each <code>i32</code>.","Display formats each float, and leaves the type name off …","LowerExp formats each float.","LowerHex formats each float’s bit pattern (via …","UpperHex formats each float’s bit pattern (via …","Binary formats each float’s bit pattern (via <code>f32::to_bits</code>…","Octal formats each float’s bit pattern (via <code>f32::to_bits</code>…","UpperExp formats each float.","Debug formats each float.","Debug formats each double.","LowerHex formats each double’s bit pattern (via …","Octal formats each double’s bit pattern (via <code>f64::to_bits</code>…","Binary formats each double’s bit pattern (via …","LowerExp formats each double.","UpperHex formats each double’s bit pattern (via …","Display formats each double, and leaves the type name off …","UpperExp formats each double.","Octal formats each <code>i32</code>.","Binary formats each <code>i32</code>.","Debug formats each <code>i32</code>.","UpperHex formats each <code>i32</code>.","LowerExp formats each <code>i32</code>.","UpperExp formats each <code>i32</code>.","LowerHex formats each <code>i32</code>.","Display formats each <code>i32</code>, and leaves the type name off of …","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","","","","","Transmutes an array into <code>m128</code>.","Transmutes an array into <code>m128d</code>.","Transmutes an array into <code>m256</code>.","Transmutes an array into <code>m256d</code>.","Converts from the bit patterns of these floats (<code>[u32;4]</code>).","Converts from the bit patterns of these doubles (<code>[u64;2]</code>).","Converts from the bit patterns of these floats (<code>[u32;8]</code>).","Converts from the bit patterns of these doubles (<code>[u64;4]</code>).","Gets the low lane as an individual <code>f32</code> value.","Gets the lower lane as an <code>f64</code> value.","Converts the low lane to <code>i32</code> and extracts as an individual …","Converts the lower lane to an <code>i32</code> value.","Converts the lower lane to an <code>i32</code> value.","Converts the lower lane to an <code>i64</code> value.","Converts the lower lane to an <code>i64</code> value.","Inserts the low 16 bits of an <code>i32</code> value into an <code>m128i</code>.","Inserts the low 16 bits of an <code>i32</code> value into an <code>m128i</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Loads the <code>f32</code> reference into the low lane of the register.","Loads the <code>f32</code> reference into all lanes of a register.","Loads the reference into the low lane of the register.","Loads the <code>f64</code> reference into all lanes of a register.","Loads the low <code>i64</code> into a register.","Loads the reference into a register.","Loads the reference into a register.","Loads the reference into a register.","Loads the reference into a register, replacing the high …","Loads the reference into a register, replacing the low …","Loads the reference into a register with reversed order.","Loads the reference into a register with reversed order.","Loads the reference into a register.","Loads the reference into a register.","Loads the reference into a register.","The data for a 128-bit SSE register of four <code>f32</code> lanes.","The data for a 128-bit SSE register of two <code>f64</code> values.","The data for a 128-bit SSE register of integer data.","The data for a 256-bit AVX register of eight <code>f32</code> lanes.","The data for a 256-bit AVX register of four <code>f64</code> values.","The data for a 256-bit AVX register of integer data.","Lanewise <code>max(a, b)</code> with lanes as <code>i16</code>.","Lanewise <code>max(a, b)</code>.","Low lane <code>max(a, b)</code>, other lanes unchanged.","Lanewise <code>max(a, b)</code>.","Low lane <code>max(a, b)</code>, other lanes unchanged.","Lanewise <code>max(a, b)</code> with lanes as <code>u8</code>.","Lanewise <code>min(a, b)</code> with lanes as <code>i16</code>.","Lanewise <code>min(a, b)</code>.","Low lane <code>min(a, b)</code>, other lanes unchanged.","Lanewise <code>min(a, b)</code>.","Low lane <code>min(a, b)</code>, other lanes unchanged.","Lanewise <code>min(a, b)</code> with lanes as <code>u8</code>.","Move the high lanes of <code>b</code> to the low lanes of <code>a</code>, other …","Move the low lanes of <code>b</code> to the high lanes of <code>a</code>, other …","Move the low lane of <code>b</code> to <code>a</code>, other lanes unchanged.","Gathers the <code>i8</code> sign bit of each lane.","Gathers the sign bit of each lane.","Gathers the sign bit of each lane.","","","","","Multiply <code>i16</code> lanes producing <code>i32</code> values, horizontal add …","Lanewise <code>a * b</code> with lanes as <code>i16</code>, keep the high bits of …","Lanewise <code>a * b</code> with lanes as <code>i16</code>, keep the low bits of the …","Lanewise <code>a * b</code>.","Low lane <code>a * b</code>, other lanes unchanged.","Lanewise <code>a * b</code>.","Lowest lane <code>a * b</code>, high lane unchanged.","Lanewise <code>a * b</code> with lanes as <code>u16</code>, keep the high bits of …","Multiplies the odd <code>u32</code> lanes and gives the widened (<code>u64</code>) …","An explanation of the crate’s naming conventions.","","","Not a direct intrinsic, but it’s very useful and the …","Not a direct intrinsic, but it’s very useful and the …","Not a direct intrinsic, but it’s very useful and the …","Saturating convert <code>i16</code> to <code>i8</code>, and pack the values.","Saturating convert <code>i16</code> to <code>u8</code>, and pack the values.","Saturating convert <code>i32</code> to <code>i16</code>, and pack the values.","Reads the CPU’s timestamp counter value.","Reads the CPU’s timestamp counter value and store the …","Lanewise <code>1.0 / a</code> approximation.","Low lane <code>1.0 / a</code> approximation, other lanes unchanged.","Lanewise <code>1.0 / sqrt(a)</code> approximation.","Low lane <code>1.0 / sqrt(a)</code> approximation, other lanes …","Sets the args into an <code>m128i</code>, first arg is the high lane.","Sets the args into an <code>m128i</code>, first arg is the high lane.","Set an <code>i32</code> as the low 32-bit lane of an <code>m128i</code>, other lanes …","Sets the args into an <code>m128i</code>, first arg is the high lane.","Set an <code>i64</code> as the low 64-bit lane of an <code>m128i</code>, other lanes …","Sets the args into an <code>m128i</code>, first arg is the high lane.","Sets the args into an <code>m128</code>, first arg is the high lane.","Sets the args into an <code>m128</code>, first arg is the high lane.","Sets the args into an <code>m128d</code>, first arg is the high lane.","Sets the args into the low lane of a <code>m128d</code>.","Sets the args into an <code>m128i</code>, first arg is the low lane.","Sets the args into an <code>m128i</code>, first arg is the low lane.","Sets the args into an <code>m128i</code>, first arg is the low lane.","Sets the args into an <code>m128</code>, first arg is the low lane.","Sets the args into an <code>m128d</code>, first arg is the low lane.","Splats the <code>i16</code> to all lanes of the <code>m128i</code>.","Splats the <code>i32</code> to all lanes of the <code>m128i</code>.","Splats the <code>i64</code> to both lanes of the <code>m128i</code>.","Splats the <code>i8</code> to all lanes of the <code>m128i</code>.","Splats the value to all lanes.","Splats the args into both lanes of the <code>m128d</code>.","Shift all <code>u16</code> lanes to the left by the <code>count</code> in the lower …","Shift all <code>u32</code> lanes to the left by the <code>count</code> in the lower …","Shift all <code>u64</code> lanes to the left by the <code>count</code> in the lower …","Shifts all <code>u16</code> lanes left by an immediate.","Shifts all <code>u16</code> lanes left by an immediate.","Shifts all <code>u32</code> lanes left by an immediate.","Shifts all <code>u32</code> lanes left by an immediate.","Shifts both <code>u64</code> lanes left by an immediate.","Shifts both <code>u64</code> lanes left by an immediate.","Shift each <code>i16</code> lane to the right by the <code>count</code> in the lower …","Shift each <code>i32</code> lane to the right by the <code>count</code> in the lower …","Shift each <code>u16</code> lane to the right by the <code>count</code> in the lower …","Shift each <code>u32</code> lane to the right by the <code>count</code> in the lower …","Shift each <code>u64</code> lane to the right by the <code>count</code> in the lower …","Shifts all <code>i16</code> lanes right by an immediate.","Shifts all <code>i16</code> lanes right by an immediate.","Shifts all <code>i32</code> lanes right by an immediate.","Shifts all <code>i32</code> lanes right by an immediate.","Shifts all <code>u16</code> lanes right by an immediate.","Shifts all <code>u16</code> lanes right by an immediate.","Shifts all <code>u32</code> lanes right by an immediate.","Shifts all <code>u32</code> lanes right by an immediate.","Shifts both <code>u64</code> lanes right by an immediate.","Shifts both <code>u64</code> lanes right by an immediate.","Shuffle the <code>f32</code> lanes from <code>$a</code> and <code>$b</code> together using an …","Shuffle the <code>f32</code> lanes from <code>$a</code> and <code>$b</code> together using an …","Shuffle the <code>f64</code> lanes from <code>$a</code> and <code>$b</code> together using an …","Shuffle the <code>f64</code> lanes from <code>$a</code> and <code>$b</code> together using an …","Shuffle the <code>i32</code> lanes in <code>$a</code> using an immediate control …","Shuffle the <code>i32</code> lanes in <code>$a</code> using an immediate control …","Shuffle the high <code>i16</code> lanes in <code>$a</code> using an immediate …","Shuffle the high <code>i16</code> lanes in <code>$a</code> using an immediate …","Shuffle the low <code>i16</code> lanes in <code>$a</code> using an immediate control …","Shuffle the low <code>i16</code> lanes in <code>$a</code> using an immediate control …","Lanewise <code>sqrt(a)</code>.","Low lane <code>sqrt(a)</code>, other lanes unchanged.","Lanewise <code>sqrt(a)</code>.","Low lane <code>sqrt(b)</code>, upper lane is unchanged from <code>a</code>.","Stores the high lane value to the reference given.","Stores the value to the reference given.","Stores the value to the reference given.","Stores the low lane value to the reference given.","Stores the value to the reference given.","Stores the low lane value to the reference given.","Stores the value to the reference given.","Stores the value to the reference given in reverse order.","Stores the value to the reference given.","Stores the low lane value to all lanes of the reference …","Stores the low lane value to all lanes of the reference …","Stores the value to the reference given.","Stores the value to the reference given.","Stores the value to the reference given.","","","","","Lanewise <code>a - b</code> with lanes as <code>i16</code>.","Lanewise <code>a - b</code> with lanes as <code>i32</code>.","Lanewise <code>a - b</code> with lanes as <code>i64</code>.","Lanewise <code>a - b</code> with lanes as <code>i8</code>.","Lanewise <code>a - b</code>.","Low lane <code>a - b</code>, other lanes unchanged.","Lanewise <code>a - b</code>.","Lowest lane <code>a - b</code>, high lane unchanged.","Lanewise saturating <code>a - b</code> with lanes as <code>i16</code>.","Lanewise saturating <code>a - b</code> with lanes as <code>i8</code>.","Lanewise saturating <code>a - b</code> with lanes as <code>u16</code>.","Lanewise saturating <code>a - b</code> with lanes as <code>u8</code>.","Compute “sum of <code>u8</code> absolute differences”.","Transmutes the <code>m128</code> to an array.","Transmutes the <code>m128d</code> to an array.","Transmutes the <code>m256</code> to an array.","Transmutes the <code>m256d</code> to an array.","Converts into the bit patterns of these floats (<code>[u32;4]</code>).","Converts into the bit patterns of these doubles (<code>[u64;2]</code>).","Converts into the bit patterns of these floats (<code>[u32;8]</code>).","Converts into the bit patterns of these doubles (<code>[u64;4]</code>).","Transpose four <code>m128</code> as if they were a 4x4 matrix.","Truncate the <code>f32</code> lanes to <code>i32</code> lanes.","Truncate the <code>f64</code> lanes to the lower <code>i32</code> lanes (upper <code>i32</code> …","Truncate the lower lane into an <code>i32</code>.","Truncate the lower lane into an <code>i64</code>.","","","","","","","","","","","","","","","","","","","Unpack and interleave high <code>i16</code> lanes of <code>a</code> and <code>b</code>.","Unpack and interleave high <code>i32</code> lanes of <code>a</code> and <code>b</code>.","Unpack and interleave high <code>i64</code> lanes of <code>a</code> and <code>b</code>.","Unpack and interleave high <code>i8</code> lanes of <code>a</code> and <code>b</code>.","Unpack and interleave high lanes of <code>a</code> and <code>b</code>.","Unpack and interleave high lanes of <code>a</code> and <code>b</code>.","Unpack and interleave low <code>i16</code> lanes of <code>a</code> and <code>b</code>.","Unpack and interleave low <code>i32</code> lanes of <code>a</code> and <code>b</code>.","Unpack and interleave low <code>i64</code> lanes of <code>a</code> and <code>b</code>.","Unpack and interleave low <code>i8</code> lanes of <code>a</code> and <code>b</code>.","Unpack and interleave low lanes of <code>a</code> and <code>b</code>.","Unpack and interleave low lanes of <code>a</code> and <code>b</code>.","All lanes zero.","Both lanes zero.","All lanes zero."],"i":[1,2,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,3,1,2,3,0,0,0,0,0,0,1,2,3,1,2,3,0,0,0,1,2,3,1,2,3,0,0,0,1,2,3,6,7,8,1,2,3,6,7,8,0,0,0,0,0,0,0,0,0,0,0,0,1,2,3,6,7,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,3,6,7,8,1,2,1,2,0,0,0,0,1,2,3,0,0,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,6,6,6,6,6,6,6,6,7,7,7,7,7,7,7,7,8,8,8,8,8,8,8,8,1,1,2,2,3,3,3,3,3,3,3,3,3,3,3,6,6,7,7,8,8,8,8,8,8,8,8,8,8,8,1,2,6,7,1,2,6,7,0,0,0,0,0,0,0,0,0,1,2,3,6,7,8,1,2,3,6,7,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,1,2,0,0,0,0,0,0,0,0,0,0,1,2,1,2,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,6,7,1,2,6,7,0,0,0,0,0,1,2,3,6,7,8,1,2,3,6,7,8,1,2,3,6,7,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":[[[1,1],1],[[2,2],2],[[1,1]],[[2,2]],[[3,3],3],[[3,3],3],[[3,3],3],[[3,3],3],[[1,1],1],[[1,1],1],[[2,2],2],[[2,2],2],[[3,3],3],[[3,3],3],[[3,3],3],[[3,3],3],[[3,3],3],[[3,3],3],[[1,1],1],[[2,2],2],[[3,3],3],[[1,1]],[[2,2]],[[3,3]],[[1,1],1],[[2,2],2],[[3,3],3],[[1,1],1],[[2,2],2],[[3,3],3],[[1,1],1],[[2,2],2],[[3,3],3],[[1,1]],[[2,2]],[[3,3]],[[1,1],1],[[2,2],2],[[3,3],3],[[1,1],1],[[2,2],2],[[3,3],3],[[1,1]],[[2,2]],[[3,3]],[[1,1],1],[[2,2],2],[[3,3],3],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[4,4],[5,5],[2,1],[3,1],[1,2],[3,2],[1,3],[2,3],[1,1],[2,2],[3,3],[6,6],[7,7],[8,8],[[1,1],4],[[2,2],4],[[3,3],3],[[3,3],3],[[3,3],3],[[1,1],1],[[1,1],1],[[2,2],2],[[2,2],2],[[1,1],4],[[2,2],4],[[1,1],1],[[1,1],1],[[2,2],2],[[2,2],2],[[1,1],4],[[2,2],4],[[3,3],3],[[3,3],3],[[3,3],3],[[1,1],1],[[1,1],1],[[2,2],2],[[2,2],2],[[1,1],4],[[2,2],4],[[1,1],1],[[1,1],1],[[2,2],2],[[2,2],2],[[1,1],4],[[2,2],4],[[3,3],3],[[3,3],3],[[3,3],3],[[1,1],1],[[1,1],1],[[2,2],2],[[2,2],2],[[1,1],4],[[2,2],4],[[1,1],1],[[1,1],1],[[2,2],2],[[2,2],2],[[1,1],1],[[1,1],1],[[2,2],2],[[2,2],2],[[1,1],1],[[1,1],1],[[2,2],2],[[2,2],2],[[1,1],1],[[1,1],1],[[2,2],2],[[2,2],2],[[1,1],1],[[1,1],1],[[2,2],2],[[2,2],2],[[1,1],1],[[1,1],1],[[2,2],2],[[2,2],2],[[1,1],1],[[1,1],1],[[2,2],2],[[2,2],2],[[1,4],1],[[2,4],2],[[2,5],2],[[2,1],2],[[1,2],1],[1,3],[2,3],[3,1],[2,1],[3,2],[1,2],[3,3],[[2,2],2],[[],1],[[],2],[[],3],[[],6],[[],7],[[],8],[[1,1],1],[[2,2],2],[[1,1]],[[2,2]],[[1,1],1],[[1,1],1],[[2,2],2],[[2,2],2],[[1,1],9],[[2,2],9],[[3,3],9],0,0,[[1,10],11],[[1,10],11],[[1,10],11],[[1,10],11],[[1,10],11],[[1,10],11],[[1,10],11],[[1,10],11],[[2,10],11],[[2,10],11],[[2,10],11],[[2,10],11],[[2,10],11],[[2,10],11],[[2,10],11],[[2,10],11],[[3,10],11],[[3,10],11],[[3,10],11],[[3,10],11],[[3,10],11],[[3,10],11],[[3,10],11],[[3,10],11],[[6,10],11],[[6,10],11],[[6,10],11],[[6,10],11],[[6,10],11],[[6,10],11],[[6,10],11],[[6,10],11],[[7,10],11],[[7,10],11],[[7,10],11],[[7,10],11],[[7,10],11],[[7,10],11],[[7,10],11],[[7,10],11],[[8,10],11],[[8,10],11],[[8,10],11],[[8,10],11],[[8,10],11],[[8,10],11],[[8,10],11],[[8,10],11],[[[13,[12]]],1],[[]],[[[13,[14]]],2],[[]],[[[13,[15]]],3],[[]],[[[13,[16]]],3],[[[13,[17]]],3],[[[13,[4]]],3],[[[13,[18]]],3],[[[13,[19]]],3],[20,3],[[[13,[5]]],3],[[[13,[21]]],3],[22,3],[[]],[[[13,[12]]],6],[[]],[[[13,[14]]],7],[[[13,[19]]],8],[[]],[[[13,[4]]],8],[[[13,[17]]],8],[[[13,[15]]],8],[[[13,[16]]],8],[[[13,[5]]],8],[[[13,[22]]],8],[[[13,[21]]],8],[[[13,[20]]],8],[[[13,[18]]],8],[[[13,[12]]],1],[[[13,[14]]],2],[[[13,[12]]],6],[[[13,[14]]],7],[[[13,[16]]],1],[[[13,[18]]],2],[[[13,[16]]],6],[[[13,[18]]],7],[1,12],[2,14],[1,4],[2,4],[3,4],[2,5],[3,5],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[12,1],[12,1],[14,2],[14,2],[3,3],[1,1],[2,2],[3,3],[[2,14],2],[[2,14],2],[1,1],[2,2],[[[13,[12]]],1],[[[13,[14]]],2],[[[13,[21]]],3],0,0,0,0,0,0,[[3,3],3],[[1,1],1],[[1,1],1],[[2,2],2],[[2,2],2],[[3,3],3],[[3,3],3],[[1,1],1],[[1,1],1],[[2,2],2],[[2,2],2],[[3,3],3],[[1,1],1],[[1,1],1],[[1,1],1],[3,4],[1,4],[2,4],[[1,1],1],[[2,2],2],[[1,1]],[[2,2]],[[3,3],3],[[3,3],3],[[3,3],3],[[1,1],1],[[1,1],1],[[2,2],2],[[2,2],2],[[3,3],3],[[3,3],3],0,[1,1],[2,2],[1,1],[2,2],[3,3],[[3,3],3],[[3,3],3],[[3,3],3],[[],18],[16,18],[1,1],[1,1],[1,1],[1,1],[[17,17,17,17,17,17,17,17],3],[[4,4,4,4],3],[4,3],[[5,5],3],[5,3],[[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15],3],[[12,12,12,12],1],[12,1],[[14,14],2],[14,2],[[17,17,17,17,17,17,17,17],3],[[4,4,4,4],3],[[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15],3],[[12,12,12,12],1],[[14,14],2],[17,3],[4,3],[5,3],[15,3],[12,1],[14,2],[[3,3],3],[[3,3],3],[[3,3],3],0,0,0,0,0,0,[[3,3],3],[[3,3],3],[[3,3],3],[[3,3],3],[[3,3],3],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,1],[1,1],[2,2],[[2,2],2],[[14,2]],[[5,3]],[[1,1]],[[12,1]],[[2,2]],[[14,2]],[[3,3]],[[1,1]],[[2,2]],[[1,1]],[[2,2]],[[[13,[12]],1]],[[[13,[14]],2]],[[[13,[21]],3]],[[1,1],1],[[2,2],2],[[1,1]],[[2,2]],[[3,3],3],[[3,3],3],[[3,3],3],[[3,3],3],[[1,1],1],[[1,1],1],[[2,2],2],[[2,2],2],[[3,3],3],[[3,3],3],[[3,3],3],[[3,3],3],[[3,3],3],[1,[[13,[12]]]],[2,[[13,[14]]]],[6,[[13,[12]]]],[7,[[13,[14]]]],[1,[[13,[16]]]],[2,[[13,[18]]]],[6,[[13,[16]]]],[7,[[13,[18]]]],[[1,1,1,1]],[1,3],[2,3],[2,4],[2,5],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[3,3],3],[[3,3],3],[[3,3],3],[[3,3],3],[[1,1],1],[[2,2],2],[[3,3],3],[[3,3],3],[[3,3],3],[[3,3],3],[[1,1],1],[[2,2],2],[[],1],[[],2],[[],3]],"c":[],"p":[[3,"m128"],[3,"m128d"],[3,"m128i"],[15,"i32"],[15,"i64"],[3,"m256"],[3,"m256d"],[3,"m256i"],[15,"bool"],[3,"Formatter"],[6,"Result"],[15,"f32"],[15,"array"],[15,"f64"],[15,"i8"],[15,"u32"],[15,"i16"],[15,"u64"],[15,"u16"],[15,"i128"],[15,"u8"],[15,"u128"],[4,"Result"],[3,"TypeId"]]},\
"scoped_tls":{"doc":"Scoped thread-local storage","t":"DLLLLLOLLLLL","n":["ScopedKey","borrow","borrow_mut","from","into","is_set","scoped_thread_local","set","try_from","try_into","type_id","with"],"q":[[0,"scoped_tls"]],"d":["Type representing a thread local storage key corresponding …","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Test whether this TLS key has been <code>set</code> for the current …","The macro. See the module level documentation for the …","Inserts a value into this scoped thread local storage slot …","","","","Gets a value out of this scoped variable."],"i":[0,1,1,1,1,1,0,1,1,1,1,1],"f":[0,[[]],[[]],[[]],[[]],[1,2],0,[[1,3]],[[],4],[[],4],[[],5],[[1,3]]],"c":[],"p":[[3,"ScopedKey"],[15,"bool"],[8,"FnOnce"],[4,"Result"],[3,"TypeId"]]},\
"scopeguard":{"doc":"A scope guard will run a given closure when it goes out of …","t":"EDILLLLOLLLLLLLFLLLKLLLLLLLL","n":["Always","ScopeGuard","Strategy","borrow","borrow","borrow_mut","borrow_mut","defer","deref","deref_mut","drop","fmt","fmt","from","from","guard","into","into","into_inner","should_run","should_run","try_from","try_from","try_into","try_into","type_id","type_id","with_strategy"],"q":[[0,"scopeguard"]],"d":["Always run on scope exit.","<code>ScopeGuard</code> is a scope guard that may own a protected value.","Controls in which cases the associated code should be run","","","","","Macro to create a <code>ScopeGuard</code> (always run).","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Create a new <code>ScopeGuard</code> owning <code>v</code> and with deferred closure …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","“Defuse” the guard and extract the value without …","Return <code>true</code> if the guard’s associated code should run …","","","","","","","","Create a <code>ScopeGuard</code> that owns <code>v</code> (accessible through deref) …"],"i":[0,0,0,3,7,3,7,0,3,3,3,3,7,3,7,0,3,7,3,2,7,3,7,3,7,3,7,3],"f":[0,0,0,[[]],[[]],[[]],[[]],0,[[[3,[1,2]]]],[[[3,[1,2]]]],[[[3,[1,2]]]],[[[3,[4,1,2]],5],6],[[7,5],6],[[]],[[]],[1,[[3,[1,7]]]],[[]],[[]],[[[3,[1,2]]]],[[],8],[[],8],[[],9],[[],9],[[],9],[[],9],[[],10],[[],10],[1,[[3,[1,2]]]]],"c":[],"p":[[8,"FnOnce"],[8,"Strategy"],[3,"ScopeGuard"],[8,"Debug"],[3,"Formatter"],[6,"Result"],[4,"Always"],[15,"bool"],[4,"Result"],[3,"TypeId"]]},\
"sctk_adwaita":{"doc":"","t":"DDLLLLLLLLLLLLLLLLLLLLLLLLLLLLAMLLLLLLLSDDDSSMLLLMLLLLLLMMMLLLLLLLLLLLLMLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLL","n":["AdwaitaFrame","FrameConfig","add_borders","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","dark","drop","fmt","fmt","from","from","init","into","into","light","location","new_seat","redraw","remove_seat","resize","set_config","set_hidden","set_resizable","set_states","set_title","subtract_borders","theme","theme","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","BLACK","Color","ColorMap","ColorTheme","TRANSPARENT","WHITE","active","alpha","apply_opacity","blue","border_color","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","button_hover","button_icon","button_idle","clone","clone","clone","clone_into","clone_into","clone_into","dark","default","eq","fmt","fmt","fmt","font_color","from","from","from","from_rgba","from_rgba8","green","headerbar","inactive","into","into","into","is_opaque","light","premultiply","red","set_alpha","set_blue","set_green","set_red","to_color_u8","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id"],"q":[[0,"sctk_adwaita"],[39,"sctk_adwaita::theme"]],"d":["A simple set of decorations","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","A black color.","An RGBA color value, holding four floating point …","","","A transparent color.","A white color.","","Returns color’s alpha component.","Shifts color’s opacity.","Returns color’s blue component.","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates a new color from 4 components.","Creates a new color from 4 components.","Returns color’s green component.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Check that color is opaque.","","Converts into a premultiplied color.","Returns color’s red component.","Sets the alpha component value.","Sets the blue component value.","Sets the green component value.","Sets the red component value.","Converts into <code>ColorU8</code>.","","","","","","","","","","","",""],"i":[0,0,1,3,1,3,1,3,3,3,1,3,1,3,1,1,3,1,3,1,1,1,1,1,1,1,1,1,1,1,0,3,3,3,1,3,1,3,1,23,0,0,0,23,23,26,23,23,23,25,25,26,23,25,26,23,25,25,25,25,26,23,25,26,23,26,26,23,25,26,23,25,25,26,23,23,23,23,25,26,25,26,23,23,26,23,23,23,23,23,23,23,25,26,23,25,26,23,25,26,23,25,26,23],"f":[0,0,[[1,2,2]],[[]],[[]],[[]],[[]],[3,3],[[]],[[],3],[1],[[3,4],5],[[1,4],5],[[]],[[]],[[6,[8,[7]],[8,[9]],[8,[10]],[12,[11]],[14,[13]]],[[16,[1,15]]]],[[]],[[]],[[],3],[1],[[1,[8,[17]]]],[1],[[1,17]],[1],[[1,3]],[[1,18]],[[1,18]],[[1,[20,[19]]],18],[[1,21]],[[1,2,2]],0,0,[[]],[[],16],[[],16],[[],16],[[],16],[[],22],[[],22],0,0,0,0,0,0,0,[23,24],[[23,24]],[23,24],0,[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[25,25],[26,26],[23,23],[[]],[[]],[[]],[[],26],[[],26],[[23,23],18],[[25,4],5],[[26,4],5],[[23,4],[[16,[27]]]],0,[[]],[[]],[[]],[[24,24,24,24],[[12,[23]]]],[[28,28,28,28],23],[23,24],0,0,[[]],[[]],[[]],[23,18],[[],26],[23,29],[23,24],[[23,24]],[[23,24]],[[23,24]],[[23,24]],[23,30],[[]],[[]],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],22],[[],22],[[],22]],"c":[],"p":[[3,"AdwaitaFrame"],[15,"i32"],[3,"FrameConfig"],[3,"Formatter"],[6,"Result"],[3,"WlSurface"],[3,"WlCompositor"],[3,"Attached"],[3,"WlSubcompositor"],[3,"WlShm"],[3,"ThemeManager"],[4,"Option"],[8,"FnMut"],[3,"Box"],[3,"Error"],[4,"Result"],[3,"WlSeat"],[15,"bool"],[4,"State"],[15,"slice"],[3,"String"],[3,"TypeId"],[3,"Color"],[15,"f32"],[3,"ColorMap"],[3,"ColorTheme"],[3,"Error"],[15,"u8"],[3,"PremultipliedColor"],[3,"ColorU8"]]},\
"serde":{"doc":"Serde","t":"IIQQQIQQQQQQQILLLAKKKKKKKKKLKKKKKKKKKKKKKKKLKKKKKKOLLAOKKKKKKLKKKKKKKKKKKKKKKKLKKKKKKKNNNIIIIQNIIQQQQQINDININNNNNINCNNNENNNQQQIILLLLLLLLKLKKLKKKKKKKKLKKKKKKKKKKKKKKKLKKKKKKLLLKLKLLLLLLLLLKLLLLLLKLKLLLKLKLLKLLLLLLLKLLKLLALKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDDDDDDDDDDDDDDDDDDDDDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLIQQQQQQQQDQQQQQQQQIIQIQIQIQIQIQIQICLLLLLKKKKKKKKLLLLLLLLLLKKKKKKLLLKKKKKKLLLLLKKKKKLKKKKKKKKKKKKLKKKKKKKKLLLLLL","n":["Deserialize","Deserializer","Error","Error","Ok","Serialize","SerializeMap","SerializeSeq","SerializeStruct","SerializeStructVariant","SerializeTuple","SerializeTupleStruct","SerializeTupleVariant","Serializer","collect_map","collect_seq","collect_str","de","deserialize","deserialize_any","deserialize_bool","deserialize_byte_buf","deserialize_bytes","deserialize_char","deserialize_enum","deserialize_f32","deserialize_f64","deserialize_i128","deserialize_i16","deserialize_i32","deserialize_i64","deserialize_i8","deserialize_identifier","deserialize_ignored_any","deserialize_map","deserialize_newtype_struct","deserialize_option","deserialize_seq","deserialize_str","deserialize_string","deserialize_struct","deserialize_tuple","deserialize_tuple_struct","deserialize_u128","deserialize_u16","deserialize_u32","deserialize_u64","deserialize_u8","deserialize_unit","deserialize_unit_struct","forward_to_deserialize_any","is_human_readable","is_human_readable","ser","serde_if_integer128","serialize","serialize_bool","serialize_bytes","serialize_char","serialize_f32","serialize_f64","serialize_i128","serialize_i16","serialize_i32","serialize_i64","serialize_i8","serialize_map","serialize_newtype_struct","serialize_newtype_variant","serialize_none","serialize_seq","serialize_some","serialize_str","serialize_struct","serialize_struct_variant","serialize_tuple","serialize_tuple_struct","serialize_tuple_variant","serialize_u128","serialize_u16","serialize_u32","serialize_u64","serialize_u8","serialize_unit","serialize_unit_struct","serialize_unit_variant","Bool","Bytes","Char","Deserialize","DeserializeOwned","DeserializeSeed","Deserializer","Deserializer","Enum","EnumAccess","Error","Error","Error","Error","Error","Error","Expected","Float","IgnoredAny","IntoDeserializer","Map","MapAccess","NewtypeStruct","NewtypeVariant","Option","Other","Seq","SeqAccess","Signed","StdError","Str","StructVariant","TupleVariant","Unexpected","Unit","UnitVariant","Unsigned","Value","Value","Variant","VariantAccess","Visitor","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","custom","default","deserialize","deserialize","deserialize","deserialize_any","deserialize_bool","deserialize_byte_buf","deserialize_bytes","deserialize_char","deserialize_enum","deserialize_f32","deserialize_f64","deserialize_i128","deserialize_i16","deserialize_i32","deserialize_i64","deserialize_i8","deserialize_identifier","deserialize_ignored_any","deserialize_map","deserialize_newtype_struct","deserialize_option","deserialize_seq","deserialize_str","deserialize_string","deserialize_struct","deserialize_tuple","deserialize_tuple_struct","deserialize_u128","deserialize_u16","deserialize_u32","deserialize_u64","deserialize_u8","deserialize_unit","deserialize_unit_struct","duplicate_field","eq","eq","expecting","expecting","fmt","fmt","fmt","fmt","fmt","fmt","from","from","into","into","into_deserializer","invalid_length","invalid_type","invalid_value","is_human_readable","missing_field","newtype_variant","newtype_variant_seed","next_element","next_element_seed","next_entry","next_entry_seed","next_key","next_key_seed","next_value","next_value_seed","size_hint","size_hint","struct_variant","to_owned","to_owned","to_string","try_from","try_from","try_into","try_into","tuple_variant","type_id","type_id","unit_variant","unknown_field","unknown_variant","value","variant","variant_seed","visit_bool","visit_bool","visit_borrowed_bytes","visit_borrowed_str","visit_byte_buf","visit_bytes","visit_bytes","visit_char","visit_enum","visit_enum","visit_f32","visit_f64","visit_f64","visit_i128","visit_i128","visit_i16","visit_i32","visit_i64","visit_i64","visit_i8","visit_map","visit_map","visit_newtype_struct","visit_newtype_struct","visit_none","visit_none","visit_seq","visit_seq","visit_some","visit_some","visit_str","visit_str","visit_string","visit_u128","visit_u128","visit_u16","visit_u32","visit_u64","visit_u64","visit_u8","visit_unit","visit_unit","BoolDeserializer","BorrowedBytesDeserializer","BorrowedStrDeserializer","BytesDeserializer","CharDeserializer","CowStrDeserializer","EnumAccessDeserializer","Error","F32Deserializer","F64Deserializer","I128Deserializer","I16Deserializer","I32Deserializer","I64Deserializer","I8Deserializer","IsizeDeserializer","MapAccessDeserializer","MapDeserializer","SeqAccessDeserializer","SeqDeserializer","StrDeserializer","StringDeserializer","U128Deserializer","U16Deserializer","U32Deserializer","U64Deserializer","U8Deserializer","UnitDeserializer","UsizeDeserializer","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","custom","custom","description","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","end","end","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","next_element_seed","next_element_seed","next_entry_seed","next_key_seed","next_value_seed","provide","size_hint","size_hint","size_hint","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","variant_seed","variant_seed","variant_seed","variant_seed","variant_seed","variant_seed","Error","Error","Error","Error","Error","Error","Error","Error","Error","Impossible","Ok","Ok","Ok","Ok","Ok","Ok","Ok","Ok","Serialize","SerializeMap","SerializeMap","SerializeSeq","SerializeSeq","SerializeStruct","SerializeStruct","SerializeStructVariant","SerializeStructVariant","SerializeTuple","SerializeTuple","SerializeTupleStruct","SerializeTupleStruct","SerializeTupleVariant","SerializeTupleVariant","Serializer","StdError","borrow","borrow_mut","collect_map","collect_seq","collect_str","custom","end","end","end","end","end","end","end","end","end","end","end","end","end","end","from","into","is_human_readable","serialize","serialize_bool","serialize_bytes","serialize_char","serialize_element","serialize_element","serialize_element","serialize_element","serialize_entry","serialize_f32","serialize_f64","serialize_field","serialize_field","serialize_field","serialize_field","serialize_field","serialize_field","serialize_field","serialize_field","serialize_i128","serialize_i16","serialize_i32","serialize_i64","serialize_i8","serialize_key","serialize_key","serialize_map","serialize_newtype_struct","serialize_newtype_variant","serialize_none","serialize_seq","serialize_some","serialize_str","serialize_struct","serialize_struct_variant","serialize_tuple","serialize_tuple_struct","serialize_tuple_variant","serialize_u128","serialize_u16","serialize_u32","serialize_u64","serialize_u8","serialize_unit","serialize_unit_struct","serialize_unit_variant","serialize_value","serialize_value","skip_field","skip_field","try_from","try_into","type_id"],"q":[[0,"serde"],[86,"serde::de"],[264,"serde::de::value"],[1531,"serde::ser"]],"d":["A <strong>data structure</strong> that can be deserialized from any data …","A <strong>data format</strong> that can deserialize any data structure …","The error type that can be returned if some error occurs …","The error type when some error occurs during serialization.","The output type produced by this <code>Serializer</code> during …","A <strong>data structure</strong> that can be serialized into any data …","Type returned from <code>serialize_map</code> for serializing the …","Type returned from <code>serialize_seq</code> for serializing the …","Type returned from <code>serialize_struct</code> for serializing the …","Type returned from <code>serialize_struct_variant</code> for …","Type returned from <code>serialize_tuple</code> for serializing the …","Type returned from <code>serialize_tuple_struct</code> for serializing …","Type returned from <code>serialize_tuple_variant</code> for serializing …","A <strong>data format</strong> that can serialize any data structure …","Collect an iterator as a map.","Collect an iterator as a sequence.","Serialize a string produced by an implementation of <code>Display</code>…","Generic data structure deserialization framework.","Deserialize this value from the given Serde deserializer.","Require the <code>Deserializer</code> to figure out how to drive the …","Hint that the <code>Deserialize</code> type is expecting a <code>bool</code> value.","Hint that the <code>Deserialize</code> type is expecting a byte array …","Hint that the <code>Deserialize</code> type is expecting a byte array …","Hint that the <code>Deserialize</code> type is expecting a <code>char</code> value.","Hint that the <code>Deserialize</code> type is expecting an enum value …","Hint that the <code>Deserialize</code> type is expecting a <code>f32</code> value.","Hint that the <code>Deserialize</code> type is expecting a <code>f64</code> value.","Hint that the <code>Deserialize</code> type is expecting an <code>i128</code> value.","Hint that the <code>Deserialize</code> type is expecting an <code>i16</code> value.","Hint that the <code>Deserialize</code> type is expecting an <code>i32</code> value.","Hint that the <code>Deserialize</code> type is expecting an <code>i64</code> value.","Hint that the <code>Deserialize</code> type is expecting an <code>i8</code> value.","Hint that the <code>Deserialize</code> type is expecting the name of a …","Hint that the <code>Deserialize</code> type needs to deserialize a …","Hint that the <code>Deserialize</code> type is expecting a map of …","Hint that the <code>Deserialize</code> type is expecting a newtype …","Hint that the <code>Deserialize</code> type is expecting an optional …","Hint that the <code>Deserialize</code> type is expecting a sequence of …","Hint that the <code>Deserialize</code> type is expecting a string value …","Hint that the <code>Deserialize</code> type is expecting a string value …","Hint that the <code>Deserialize</code> type is expecting a struct with …","Hint that the <code>Deserialize</code> type is expecting a sequence of …","Hint that the <code>Deserialize</code> type is expecting a tuple struct …","Hint that the <code>Deserialize</code> type is expecting an <code>u128</code> value.","Hint that the <code>Deserialize</code> type is expecting a <code>u16</code> value.","Hint that the <code>Deserialize</code> type is expecting a <code>u32</code> value.","Hint that the <code>Deserialize</code> type is expecting a <code>u64</code> value.","Hint that the <code>Deserialize</code> type is expecting a <code>u8</code> value.","Hint that the <code>Deserialize</code> type is expecting a unit value.","Hint that the <code>Deserialize</code> type is expecting a unit struct …","Helper macro when implementing the <code>Deserializer</code> part of a …","Determine whether <code>Deserialize</code> implementations should …","Determine whether <code>Serialize</code> implementations should …","Generic data structure serialization framework.","Conditional compilation depending on whether Serde is …","Serialize this value into the given Serde serializer.","Serialize a <code>bool</code> value.","Serialize a chunk of raw byte data.","Serialize a character.","Serialize an <code>f32</code> value.","Serialize an <code>f64</code> value.","Serialize an <code>i128</code> value.","Serialize an <code>i16</code> value.","Serialize an <code>i32</code> value.","Serialize an <code>i64</code> value.","Serialize an <code>i8</code> value.","Begin to serialize a map. This call must be followed by …","Serialize a newtype struct like <code>struct Millimeters(u8)</code>.","Serialize a newtype variant like <code>E::N</code> in <code>enum E { N(u8) }</code>.","Serialize a <code>None</code> value.","Begin to serialize a variably sized sequence. This call …","Serialize a <code>Some(T)</code> value.","Serialize a <code>&amp;str</code>.","Begin to serialize a struct like …","Begin to serialize a struct variant like <code>E::S</code> in …","Begin to serialize a statically sized sequence whose …","Begin to serialize a tuple struct like …","Begin to serialize a tuple variant like <code>E::T</code> in …","Serialize a <code>u128</code> value.","Serialize a <code>u16</code> value.","Serialize a <code>u32</code> value.","Serialize a <code>u64</code> value.","Serialize a <code>u8</code> value.","Serialize a <code>()</code> value.","Serialize a unit struct like <code>struct Unit</code> or <code>PhantomData&lt;T&gt;</code>.","Serialize a unit variant like <code>E::A</code> in <code>enum E { A, B }</code>.","The input contained a boolean value that was not expected.","The input contained a <code>&amp;[u8]</code> or <code>Vec&lt;u8&gt;</code> that was not …","The input contained a <code>char</code> that was not expected.","A <strong>data structure</strong> that can be deserialized from any data …","A data structure that can be deserialized without …","<code>DeserializeSeed</code> is the stateful form of the <code>Deserialize</code> …","A <strong>data format</strong> that can deserialize any data structure …","The type of the deserializer being converted into.","The input contained an enum that was not expected.","Provides a <code>Visitor</code> access to the data of an enum in the …","The <code>Error</code> trait allows <code>Deserialize</code> implementations to …","The error type that can be returned if some error occurs …","The error type that can be returned if some error occurs …","The error type that can be returned if some error occurs …","The error type that can be returned if some error occurs …","The error type that can be returned if some error occurs …","<code>Expected</code> represents an explanation of what data a <code>Visitor</code> …","The input contained a floating point <code>f32</code> or <code>f64</code> that was …","An efficient way of discarding data from a deserializer.","Converts an existing value into a <code>Deserializer</code> from which …","The input contained a map that was not expected.","Provides a <code>Visitor</code> access to each entry of a map in the …","The input contained a newtype struct that was not expected.","The input contained a newtype variant that was not …","The input contained an <code>Option&lt;T&gt;</code> that was not expected.","A message stating what uncategorized thing the input …","The input contained a sequence that was not expected.","Provides a <code>Visitor</code> access to each element of a sequence in …","The input contained a signed integer <code>i8</code>, <code>i16</code>, <code>i32</code> or <code>i64</code> …","","The input contained a <code>&amp;str</code> or <code>String</code> that was not expected.","The input contained a struct variant that was not expected.","The input contained a tuple variant that was not expected.","<code>Unexpected</code> represents an unexpected invocation of any one …","The input contained a unit <code>()</code> that was not expected.","The input contained a unit variant that was not expected.","The input contained an unsigned integer <code>u8</code>, <code>u16</code>, <code>u32</code> or <code>u64</code>…","The type produced by using this seed.","The value produced by this visitor.","The <code>Visitor</code> that will be used to deserialize the content …","<code>VariantAccess</code> is a visitor that is created by the …","This trait represents a visitor that walks through a …","","","","","","","","","Raised when there is general error when deserializing a …","","Deserialize this value from the given Serde deserializer.","Equivalent to the more common <code>Deserialize::deserialize</code> …","","Require the <code>Deserializer</code> to figure out how to drive the …","Hint that the <code>Deserialize</code> type is expecting a <code>bool</code> value.","Hint that the <code>Deserialize</code> type is expecting a byte array …","Hint that the <code>Deserialize</code> type is expecting a byte array …","Hint that the <code>Deserialize</code> type is expecting a <code>char</code> value.","Hint that the <code>Deserialize</code> type is expecting an enum value …","Hint that the <code>Deserialize</code> type is expecting a <code>f32</code> value.","Hint that the <code>Deserialize</code> type is expecting a <code>f64</code> value.","Hint that the <code>Deserialize</code> type is expecting an <code>i128</code> value.","Hint that the <code>Deserialize</code> type is expecting an <code>i16</code> value.","Hint that the <code>Deserialize</code> type is expecting an <code>i32</code> value.","Hint that the <code>Deserialize</code> type is expecting an <code>i64</code> value.","Hint that the <code>Deserialize</code> type is expecting an <code>i8</code> value.","Hint that the <code>Deserialize</code> type is expecting the name of a …","Hint that the <code>Deserialize</code> type needs to deserialize a …","Hint that the <code>Deserialize</code> type is expecting a map of …","Hint that the <code>Deserialize</code> type is expecting a newtype …","Hint that the <code>Deserialize</code> type is expecting an optional …","Hint that the <code>Deserialize</code> type is expecting a sequence of …","Hint that the <code>Deserialize</code> type is expecting a string value …","Hint that the <code>Deserialize</code> type is expecting a string value …","Hint that the <code>Deserialize</code> type is expecting a struct with …","Hint that the <code>Deserialize</code> type is expecting a sequence of …","Hint that the <code>Deserialize</code> type is expecting a tuple struct …","Hint that the <code>Deserialize</code> type is expecting an <code>u128</code> value.","Hint that the <code>Deserialize</code> type is expecting a <code>u16</code> value.","Hint that the <code>Deserialize</code> type is expecting a <code>u32</code> value.","Hint that the <code>Deserialize</code> type is expecting a <code>u64</code> value.","Hint that the <code>Deserialize</code> type is expecting a <code>u8</code> value.","Hint that the <code>Deserialize</code> type is expecting a unit value.","Hint that the <code>Deserialize</code> type is expecting a unit struct …","Raised when a <code>Deserialize</code> struct type received more than …","","","Format a message stating what data this Visitor expects to …","","Format an explanation of what data was being expected. …","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Convert this value into a deserializer.","Raised when deserializing a sequence or map and the input …","Raised when a <code>Deserialize</code> receives a type different from …","Raised when a <code>Deserialize</code> receives a value of the right …","Determine whether <code>Deserialize</code> implementations should …","Raised when a <code>Deserialize</code> struct type expected to receive …","Called when deserializing a variant with a single value.","Called when deserializing a variant with a single value.","This returns <code>Ok(Some(value))</code> for the next value in the …","This returns <code>Ok(Some(value))</code> for the next value in the …","This returns <code>Ok(Some((key, value)))</code> for the next …","This returns <code>Ok(Some((key, value)))</code> for the next …","This returns <code>Ok(Some(key))</code> for the next key in the map, or …","This returns <code>Ok(Some(key))</code> for the next key in the map, or …","This returns a <code>Ok(value)</code> for the next value in the map.","This returns a <code>Ok(value)</code> for the next value in the map.","Returns the number of elements remaining in the sequence, …","Returns the number of entries remaining in the map, if …","Called when deserializing a struct-like variant.","","","","","","","","Called when deserializing a tuple-like variant.","","","Called when deserializing a variant with no values.","Raised when a <code>Deserialize</code> struct type received a field …","Raised when a <code>Deserialize</code> enum type received a variant …","Building blocks for deserializing basic values using the …","<code>variant</code> is called to identify which variant to deserialize.","<code>variant</code> is called to identify which variant to deserialize.","The input contains a boolean.","","The input contains a byte array that lives at least as …","The input contains a string that lives at least as long as …","The input contains a byte array and ownership of the byte …","The input contains a byte array. The lifetime of the byte …","","The input contains a <code>char</code>.","The input contains an enum.","","The input contains an <code>f32</code>.","The input contains an <code>f64</code>.","","The input contains a <code>i128</code>.","","The input contains an <code>i16</code>.","The input contains an <code>i32</code>.","The input contains an <code>i64</code>.","","The input contains an <code>i8</code>.","The input contains a key-value map.","","The input contains a newtype struct.","","The input contains an optional that is absent.","","The input contains a sequence of elements.","","The input contains an optional that is present.","","The input contains a string. The lifetime of the string is …","","The input contains a string and ownership of the string is …","The input contains a <code>u128</code>.","","The input contains a <code>u16</code>.","The input contains a <code>u32</code>.","The input contains a <code>u64</code>.","","The input contains a <code>u8</code>.","The input contains a unit <code>()</code>.","","A deserializer holding a <code>bool</code>.","A deserializer holding a <code>&amp;[u8]</code> with a lifetime tied to …","A deserializer holding a <code>&amp;str</code> with a lifetime tied to …","A deserializer holding a <code>&amp;[u8]</code>. Always calls …","A deserializer holding a <code>char</code>.","A deserializer holding a <code>Cow&lt;str&gt;</code>.","A deserializer holding an <code>EnumAccess</code>.","A minimal representation of all possible errors that can …","A deserializer holding an <code>f32</code>.","A deserializer holding an <code>f64</code>.","A deserializer holding an <code>i128</code>.","A deserializer holding an <code>i16</code>.","A deserializer holding an <code>i32</code>.","A deserializer holding an <code>i64</code>.","A deserializer holding an <code>i8</code>.","A deserializer holding an <code>isize</code>.","A deserializer holding a <code>MapAccess</code>.","A deserializer that iterates over a map.","A deserializer holding a <code>SeqAccess</code>.","A deserializer that iterates over a sequence.","A deserializer holding a <code>&amp;str</code>.","A deserializer holding a <code>String</code>.","A deserializer holding a <code>u128</code>.","A deserializer holding a <code>u16</code>.","A deserializer holding a <code>u32</code>.","A deserializer holding a <code>u64</code>.","A deserializer holding a <code>u8</code>.","A deserializer holding a <code>()</code>.","A deserializer holding a <code>usize</codeheck for remaining elements after passing a …","Check for remaining elements after passing a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Create a new borrowed deserializer from the given string.","","","Create a new deserializer from the given bytes.","Create a new borrowed deserializer from the given borrowed …","Construct a new <code>MapDeserializer&lt;I, E&gt;</code>.","","","","","","","","","","","","","","","","Construct a new <code>SeqDeserializer&lt;I, E&gt;</code>.","Construct a new <code>SeqAccessDeserializer&lt;A&gt;</code>.","Construct a new <code>MapAccessDeserializer&lt;A&gt;</code>.","Construct a new <code>EnumAccessDeserializer&lt;A&gt;</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Trait used by <code>Serialize</code> implementations to generically …","The error type when some error occurs during serialization.","Must match the <code>Error</code> type of our <code>Serializer</code>.","Must match the <code>Error</code> type of our <code>Serializer</code>.","Must match the <code>Error</code> type of our <code>Serializer</code>.","Must match the <code>Error</code> type of our <code>Serializer</code>.","Must match the <code>Error</code> type of our <code>Serializer</code>.","Must match the <code>Error</code> type of our <code>Serializer</code>.","Must match the <code>Error</code> type of our <code>Serializer</code>.","Helper type for implementing a <code>Serializer</code> that does not …","The output type produced by this <code>Serializer</code> during …","Must match the <code>Ok</code> type of our <code>Serializer</code>.","Must match the <code>Ok</code> type of our <code>Serializer</code>.","Must match the <code>Ok</code> type of our <code>Serializer</code>.","Must match the <code>Ok</code> type of our <code>Serializer</code>.","Must match the <code>Ok</code> type of our <code>Serializer</code>.","Must match the <code>Ok</code> type of our <code>Serializer</code>.","Must match the <code>Ok</code> type of our <code>Serializer</code>.","A <strong>data structure</strong> that can be serialized into any data …","Returned from <code>Serializer::serialize_map</code>.","Type returned from <code>serialize_map</code> for serializing the …","Returned from <code>Serializer::serialize_seq</code>.","Type returned from <code>serialize_seq</code> for serializing the …","Returned from <code>Serializer::serialize_struct</code>.","Type returned from <code>serialize_struct</code> for serializing the …","Returned from <code>Serializer::serialize_struct_variant</code>.","Type returned from <code>serialize_struct_variant</code> for …","Returned from <code>Serializer::serialize_tuple</code>.","Type returned from <code>serialize_tuple</code> for serializing the …","Returned from <code>Serializer::serialize_tuple_struct</code>.","Type returned from <code>serialize_tuple_struct</code> for serializing …","Returned from <code>Serializer::serialize_tuple_variant</code>.","Type returned from <code>serialize_tuple_variant</code> for serializing …","A <strong>data format</strong> that can serialize any data structure …","","","","Collect an iterator as a map.","Collect an iterator as a sequence.","Serialize a string produced by an implementation of <code>Display</code>…","Used when a <code>Serialize</code> implementation encounters any error …","Finish serializing a sequence.","Finish serializing a tuple.","Finish serializing a tuple struct.","Finish serializing a tuple variant.","Finish serializing a map.","Finish serializing a struct.","Finish serializing a struct variant.","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Determine whether <code>Serialize</code> implementations should …","Serialize this value into the given Serde serializer.","Serialize a <code>bool</code> value.","Serialize a chunk of raw byte data.","Serialize a character.","Serialize a sequence element.","Serialize a tuple element.","","","Serialize a map entry consisting of a key and a value.","Serialize an <code>f32</code> value.","Serialize an <code>f64</code> value.","Serialize a tuple struct field.","Serialize a tuple variant field.","Serialize a struct field.","Serialize a struct variant field.","","","","","Serialize an <code>i128</code> value.","Serialize an <code>i16</code> value.","Serialize an <code>i32</code> value.","Serialize an <code>i64</code> value.","Serialize an <code>i8</code> value.","Serialize a map key.","","Begin to serialize a map. This call must be followed by …","Serialize a newtype struct like <code>struct Millimeters(u8)</code>.","Serialize a newtype variant like <code>E::N</code> in <code>enum E { N(u8) }</code>.","Serialize a <code>None</code> value.","Begin to serialize a variably sized sequence. This call …","Serialize a <code>Some(T)</code> value.","Serialize a <code>&amp;str</code>.","Begin to serialize a struct like …","Begin to serialize a struct variant like <code>E::S</code> in …","Begin to serialize a statically sized sequence whose …","Begin to serialize a tuple struct like …","Begin to serialize a tuple variant like <code>E::T</code> in …","Serialize a <code>u128</code> value.","Serialize a <code>u16</code> value.","Serialize a <code>u32</code> value.","Serialize a <code>u64</code> value.","Serialize a <code>u8</code> value.","Serialize a <code>()</code> value.","Serialize a unit struct like <code>struct Unit</code> or <code>PhantomData&lt;T&gt;</code>.","Serialize a unit variant like <code>E::A</code> in <code>enum E { A, B }</code>.","Serialize a map value.","","Indicate that a struct field has been skipped.","Indicate that a struct variant field has been skipped.","","",""],"i":[0,0,5,11,11,0,11,11,11,11,11,11,11,0,11,11,11,0,33,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,5,11,0,0,22,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,28,28,28,0,0,0,0,79,28,0,0,5,41,40,39,80,0,28,0,0,28,0,28,28,28,28,28,0,28,0,28,28,28,0,28,28,28,34,6,39,0,0,27,28,27,28,27,28,27,28,37,27,33,34,27,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,37,27,28,6,27,31,31,27,27,28,28,27,28,27,28,79,37,37,37,5,37,80,80,41,41,40,40,40,40,40,40,41,40,80,27,28,28,27,28,27,28,80,27,28,80,37,37,0,39,39,6,27,6,6,6,6,27,6,6,27,6,6,27,6,27,6,6,6,27,6,6,27,6,27,6,27,6,27,6,27,6,27,6,6,27,6,6,6,27,6,6,27,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,42,43,44,45,46,47,48,49,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,53,53,53,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,52,69,53,42,43,44,45,46,47,48,49,52,53,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,52,69,52,52,52,53,52,52,69,42,43,44,45,46,47,48,49,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,53,42,43,44,45,46,47,48,49,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,43,44,45,46,47,71,0,11,81,82,83,84,85,86,87,0,11,81,82,83,84,85,86,87,0,0,11,0,11,0,11,0,11,0,11,0,11,0,11,0,0,78,78,11,11,11,77,81,82,83,84,85,86,87,78,78,78,78,78,78,78,78,78,11,22,11,11,11,81,82,78,78,85,11,11,83,84,86,87,78,78,78,78,11,11,11,11,11,85,78,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,85,78,86,87,78,78,78],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],[1,2],[[[0,[3,4]]],2],0,[5,2],[6,2],[6,2],[6,2],[6,2],[6,2],[[7,[8,[7]],6],2],[6,2],[6,2],[6,2],[6,2],[6,2],[6,2],[6,2],[6,2],[6,2],[6,2],[[7,6],2],[6,2],[6,2],[6,2],[6,2],[[7,[8,[7]],6],2],[[9,6],2],[[7,9,6],2],[6,2],[6,2],[6,2],[6,2],[6,2],[6,2],[[7,6],2],0,[[],10],[[],10],0,0,[11,2],[10,2],[[[8,[12]]],2],[13,2],[14,2],[15,2],[16,2],[17,2],[18,2],[19,2],[20,2],[[[21,[9]]],2],[[7,[0,[22,4]]],2],[[7,23,7,[0,[22,4]]],2],[[],2],[[[21,[9]]],2],[[[0,[22,4]]],2],[7,2],[[7,9],2],[[7,23,7,9],2],[9,2],[[7,9],2],[[7,23,7,9],2],[24,2],[25,2],[23,2],[26,2],[12,2],[[],2],[7,2],[[7,23,7],2],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[27,27],[28,28],[[]],[[]],[3],[[],27],[5,2],[5,2],[5,[[2,[27]]]],[6,2],[6,2],[6,2],[6,2],[6,2],[[7,[8,[7]],6],2],[6,2],[6,2],[6,2],[6,2],[6,2],[6,2],[6,2],[6,2],[6,2],[6,2],[[7,6],2],[6,2],[6,2],[6,2],[6,2],[[7,[8,[7]],6],2],[[9,6],2],[[7,9,6],2],[6,2],[6,2],[6,2],[6,2],[6,2],[6,2],[[7,6],2],[7],[[27,27],10],[[28,28],10],[29,30],[[27,29],30],[29,30],[[31,29],30],[[27,29],30],[29,[[2,[32]]]],[[28,29],30],[[28,29],30],[[]],[[]],[[]],[[]],[[]],[[9,31]],[[28,31]],[[28,31]],[[],10],[7],[[],[[2,[33]]]],[34,2],[[],[[2,[[21,[33]]]]]],[34,[[2,[21]]]],[[],[[2,[21]]]],[[34,34],[[2,[21]]]],[[],[[2,[[21,[33]]]]]],[34,[[2,[21]]]],[[],[[2,[33]]]],[34,2],[[],[[21,[9]]]],[[],[[21,[9]]]],[[[8,[7]],6],2],[[]],[[]],[[],35],[[],2],[[],2],[[],2],[[],2],[[9,6],2],[[],36],[[],36],[[],2],[[7,[8,[7]]]],[[7,[8,[7]]]],0,[[],2],[34,2],[10,[[2,[37]]]],[[27,10],2],[[[8,[12]]],[[2,[37]]]],[7,[[2,[37]]]],[[[38,[12]]],[[2,[37]]]],[[[8,[12]]],[[2,[37]]]],[[27,[8,[12]]],[[2,[37]]]],[13,[[2,[37]]]],[39,2],[[27,39],2],[14,[[2,[37]]]],[15,[[2,[37]]]],[[27,15],2],[16,[[2,[37]]]],[[27,16],2],[17,[[2,[37]]]],[18,[[2,[37]]]],[19,[[2,[37]]]],[[27,19],2],[20,[[2,[37]]]],[40,2],[[27,40],2],[5,2],[[27,5],2],[[],[[2,[37]]]],[27,2],[41,2],[[27,41],2],[5,2],[[27,5],2],[7,[[2,[37]]]],[[27,7],[[2,[37]]]],[35,[[2,[37]]]],[24,[[2,[37]]]],[[27,24],2],[25,[[2,[37]]]],[23,[[2,[37]]]],[26,[[2,[37]]]],[[27,26],2],[12,[[2,[37]]]],[[],[[2,[37]]]],[27,2],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[42,42],[43,43],[44,44],[45,45],[46,46],[47,47],[48,48],[49,49],[[[52,[[0,[50,51]]]]],[[52,[[0,[50,51]]]]]],[53,53],[54,54],[55,55],[56,56],[57,57],[58,58],[59,59],[60,60],[61,61],[62,62],[63,63],[64,64],[65,65],[66,66],[67,67],[68,68],[[[69,[51,51]]],[[69,[51,51]]]],[[[70,[51]]],[[70,[51]]]],[[[71,[51]]],[[71,[51]]]],[[[72,[51]]],[[72,[51]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[3,53],[3,53],[53,7],[[[42,[37]],6],2],[[[43,[37]],6],2],[[[44,[37]],6],2],[[[45,[37]],6],2],[[[46,[37]],6],2],[[[47,[37]],6],2],[[[48,[37]],6],2],[[[49,[37]],6],2],[[[52,[50,37]],6],2],[[[54,[37]],6],2],[[[55,[37]],6],2],[[[56,[37]],6],2],[[[57,[37]],6],2],[[[58,[37]],6],2],[[[59,[37]],6],2],[[[60,[37]],6],2],[[[61,[37]],6],2],[[[62,[37]],6],2],[[[63,[37]],6],2],[[[64,[37]],6],2],[[[65,[37]],6],2],[[[66,[37]],6],2],[[[67,[37]],6],2],[[[68,[37]],6],2],[[[69,[50,37]],6],2],[[[70,[41]],6],2],[[[71,[40]],6],2],[[[72,[39]],6],2],[[[42,[37]],6],2],[[[43,[37]],6],2],[[[44,[37]],6],2],[[[45,[37]],6],2],[[[46,[37]],6],2],[[[47,[37]],6],2],[[[48,[37]],6],2],[[[49,[37]],6],2],[[[52,[50,37]],6],2],[[[54,[37]],6],2],[[[55,[37]],6],2],[[[56,[37]],6],2],[[[57,[37]],6],2],[[[58,[37]],6],2],[[[59,[37]],6],2],[[[60,[37]],6],2],[[[61,[37]],6],2],[[[62,[37]],6],2],[[[63,[37]],6],2],[[[64,[37]],6],2],[[[65,[37]],6],2],[[[66,[37]],6],2],[[[67,[37]],6],2],[[[68,[37]],6],2],[[[69,[50,37]],6],2],[[[70,[41]],6],2],[[[71,[40]],6],2],[[[72,[39]],6],2],[[[42,[37]],6],2],[[[43,[37]],6],2],[[[44,[37]],6],2],[[[45,[37]],6],2],[[[46,[37]],6],2],[[[47,[37]],6],2],[[[48,[37]],6],2],[[[49,[37]],6],2],[[[52,[50,37]],6],2],[[[54,[37]],6],2],[[[55,[37]],6],2],[[[56,[37]],6],2],[[[57,[37]],6],2],[[[58,[37]],6],2],[[[59,[37]],6],2],[[[60,[37]],6],2],[[[61,[37]],6],2],[[[62,[37]],6],2],[[[63,[37]],6],2],[[[64,[37]],6],2],[[[65,[37]],6],2],[[[66,[37]],6],2],[[[67,[37]],6],2],[[[68,[37]],6],2],[[[69,[50,37]],6],2],[[[70,[41]],6],2],[[[71,[40]],6],2],[[[72,[39]],6],2],[[[42,[37]],6],2],[[[43,[37]],6],2],[[[44,[37]],6],2],[[[45,[37]],6],2],[[[46,[37]],6],2],[[[47,[37]],6],2],[[[48,[37]],6],2],[[[49,[37]],6],2],[[[52,[50,37]],6],2],[[[54,[37]],6],2],[[[55,[37]],6],2],[[[56,[37]],6],2],[[[57,[37]],6],2],[[[58,[37]],6],2],[[[59,[37]],6],2],[[[60,[37]],6],2],[[[61,[37]],6],2],[[[62,[37]],6],2],[[[63,[37]],6],2],[[[64,[37]],6],2],[[[65,[37]],6],2],[[[66,[37]],6],2],[[[67,[37]],6],2],[[[68,[37]],6],2],[[[69,[50,37]],6],2],[[[70,[41]],6],2],[[[71,[40]],6],2],[[[72,[39]],6],2],[[[42,[37]],6],2],[[[43,[37]],6],2],[[[44,[37]],6],2],[[[45,[37]],6],2],[[[46,[37]],6],2],[[[47,[37]],6],2],[[[48,[37]],6],2],[[[49,[37]],6],2],[[[52,[50,37]],6],2],[[[54,[37]],6],2],[[[55,[37]],6],2],[[[56,[37]],6],2],[[[57,[37]],6],2],[[[58,[37]],6],2],[[[59,[37]],6],2],[[[60,[37]],6],2],[[[61,[37]],6],2],[[[62,[37]],6],2],[[[63,[37]],6],2],[[[64,[37]],6],2],[[[65,[37]],6],2],[[[66,[37]],6],2],[[[67,[37]],6],2],[[[68,[37]],6],2],[[[69,[50,37]],6],2],[[[70,[41]],6],2],[[[71,[40]],6],2],[[[72,[39]],6],2],[[[42,[37]],7,[8,[7]],6],2],[[[43,[37]],7,[8,[7]],6],2],[[[44,[37]],7,[8,[7]],6],2],[[[45,[37]],7,[8,[7]],6],2],[[[46,[37]],7,[8,[7]],6],2],[[[47,[37]],7,[8,[7]],6],2],[[[48,[37]],7,[8,[7]],6],2],[[[49,[37]],7,[8,[7]],6],2],[[[52,[50,37]],7,[8,[7]],6],2],[[[54,[37]],7,[8,[7]],6],2],[[[55,[37]],7,[8,[7]],6],2],[[[56,[37]],7,[8,[7]],6],2],[[[57,[37]],7,[8,[7]],6],2],[[[58,[37]],7,[8,[7]],6],2],[[[59,[37]],7,[8,[7]],6],2],[[[60,[37]],7,[8,[7]],6],2],[[[61,[37]],7,[8,[7]],6],2],[[[62,[37]],7,[8,[7]],6],2],[[[63,[37]],7,[8,[7]],6],2],[[[64,[37]],7,[8,[7]],6],2],[[[65,[37]],7,[8,[7]],6],2],[[[66,[37]],7,[8,[7]],6],2],[[[67,[37]],7,[8,[7]],6],2],[[[68,[37]],7,[8,[7]],6],2],[[[69,[50,37]],7,[8,[7]],6],2],[[[70,[41]],7,[8,[7]],6],2],[[[71,[40]],7,[8,[7]],6],2],[[[72,[39]],7,[8,[7]],6],2],[[[42,[37]],6],2],[[[43,[37]],6],2],[[[44,[37]],6],2],[[[45,[37]],6],2],[[[46,[37]],6],2],[[[47,[37]],6],2],[[[48,[37]],6],2],[[[49,[37]],6],2],[[[52,[50,37]],6],2],[[[54,[37]],6],2],[[[55,[37]],6],2],[[[56,[37]],6],2],[[[57,[37]],6],2],[[[58,[37]],6],2],[[[59,[37]],6],2],[[[60,[37]],6],2],[[[61,[37]],6],2],[[[62,[37]],6],2],[[[63,[37]],6],2],[[[64,[37]],6],2],[[[65,[37]],6],2],[[[66,[37]],6],2],[[[67,[37]],6],2],[[[68,[37]],6],2],[[[69,[50,37]],6],2],[[[70,[41]],6],2],[[[71,[40]],6],2],[[[72,[39]],6],2],[[[42,[37]],6],2],[[[43,[37]],6],2],[[[44,[37]],6],2],[[[45,[37]],6],2],[[[46,[37]],6],2],[[[47,[37]],6],2],[[[48,[37]],6],2],[[[49,[37]],6],2],[[[52,[50,37]],6],2],[[[54,[37]],6],2],[[[55,[37]],6],2],[[[56,[37]],6],2],[[[57,[37]],6],2],[[[58,[37]],6],2],[[[59,[37]],6],2],[[[60,[37]],6],2],[[[61,[37]],6],2],[[[62,[37]],6],2],[[[63,[37]],6],2],[[[64,[37]],6],2],[[[65,[37]],6],2],[[[66,[37]],6],2],[[[67,[37]],6],2],[[[68,[37]],6],2],[[[69,[50,37]],6],2],[[[70,[41]],6],2],[[[71,[40]],6],2],[[[72,[39]],6],2],[[[42,[37]],6],2],[[[43,[37]],6],2],[[[44,[37]],6],2],[[[45,[37]],6],2],[[[46,[37]],6],2],[[[47,[37]],6],2],[[[48,[37]],6],2],[[[49,[37]],6],2],[[[52,[50,37]],6],2],[[[54,[37]],6],2],[[[55,[37]],6],2],[[[56,[37]],6],2],[[[57,[37]],6],2],[[[58,[37]],6],2],[[[59,[37]],6],2],[[[60,[37]],6],2],[[[61,[37]],6],2],[[[62,[37]],6],2],[[[63,[37]],6],2],[[[64,[37]],6],2],[[[65,[37]],6],2],[[[66,[37]],6],2],[[[67,[37]],6],2],[[[68,[37]],6],2],[[[69,[50,37]],6],2],[[[70,[41]],6],2],[[[71,[40]],6],2],[[[72,[39]],6],2],[[[42,[37]],6],2],[[[43,[37]],6],2],[[[44,[37]],6],2],[[[45,[37]],6],2],[[[46,[37]],6],2],[[[47,[37]],6],2],[[[48,[37]],6],2],[[[49,[37]],6],2],[[[52,[50,37]],6],2],[[[54,[37]],6],2],[[[55,[37]],6],2],[[[56,[37]],6],2],[[[57,[37]],6],2],[[[58,[37]],6],2],[[[59,[37]],6],2],[[[60,[37]],6],2],[[[61,[37]],6],2],[[[62,[37]],6],2],[[[63,[37]],6],2],[[[64,[37]],6],2],[[[65,[37]],6],2],[[[66,[37]],6],2],[[[67,[37]],6],2],[[[68,[37]],6],2],[[[69,[50,37]],6],2],[[[70,[41]],6],2],[[[71,[40]],6],2],[[[72,[39]],6],2],[[[42,[37]],6],2],[[[43,[37]],6],2],[[[44,[37]],6],2],[[[45,[37]],6],2],[[[46,[37]],6],2],[[[47,[37]],6],2],[[[48,[37]],6],2],[[[49,[37]],6],2],[[[52,[50,37]],6],2],[[[54,[37]],6],2],[[[55,[37]],6],2],[[[56,[37]],6],2],[[[57,[37]],6],2],[[[58,[37]],6],2],[[[59,[37]],6],2],[[[60,[37]],6],2],[[[61,[37]],6],2],[[[62,[37]],6],2],[[[63,[37]],6],2],[[[64,[37]],6],2],[[[65,[37]],6],2],[[[66,[37]],6],2],[[[67,[37]],6],2],[[[68,[37]],6],2],[[[69,[50,37]],6],2],[[[70,[41]],6],2],[[[71,[40]],6],2],[[[72,[39]],6],2],[[[42,[37]],6],2],[[[43,[37]],6],2],[[[44,[37]],6],2],[[[45,[37]],6],2],[[[46,[37]],6],2],[[[47,[37]],6],2],[[[48,[37]],6],2],[[[49,[37]],6],2],[[[52,[50,37]],6],2],[[[54,[37]],6],2],[[[55,[37]],6],2],[[[56,[37]],6],2],[[[57,[37]],6],2],[[[58,[37]],6],2],[[[59,[37]],6],2],[[[60,[37]],6],2],[[[61,[37]],6],2],[[[62,[37]],6],2],[[[63,[37]],6],2],[[[64,[37]],6],2],[[[65,[37]],6],2],[[[66,[37]],6],2],[[[67,[37]],6],2],[[[68,[37]],6],2],[[[69,[50,37]],6],2],[[[70,[41]],6],2],[[[71,[40]],6],2],[[[72,[39]],6],2],[[[42,[37]],6],2],[[[43,[37]],6],2],[[[44,[37]],6],2],[[[45,[37]],6],2],[[[46,[37]],6],2],[[[47,[37]],6],2],[[[48,[37]],6],2],[[[49,[37]],6],2],[[[52,[50,37]],6],2],[[[54,[37]],6],2],[[[55,[37]],6],2],[[[56,[37]],6],2],[[[57,[37]],6],2],[[[58,[37]],6],2],[[[59,[37]],6],2],[[[60,[37]],6],2],[[[61,[37]],6],2],[[[62,[37]],6],2],[[[63,[37]],6],2],[[[64,[37]],6],2],[[[65,[37]],6],2],[[[66,[37]],6],2],[[[67,[37]],6],2],[[[68,[37]],6],2],[[[69,[50,37]],6],2],[[[70,[41]],6],2],[[[71,[40]],6],2],[[[72,[39]],6],2],[[[42,[37]],6],2],[[[43,[37]],6],2],[[[44,[37]],6],2],[[[45,[37]],6],2],[[[46,[37]],6],2],[[[47,[37]],6],2],[[[48,[37]],6],2],[[[49,[37]],6],2],[[[52,[50,37]],6],2],[[[54,[37]],6],2],[[[55,[37]],6],2],[[[56,[37]],6],2],[[[57,[37]],6],2],[[[58,[37]],6],2],[[[59,[37]],6],2],[[[60,[37]],6],2],[[[61,[37]],6],2],[[[62,[37]],6],2],[[[63,[37]],6],2],[[[64,[37]],6],2],[[[65,[37]],6],2],[[[66,[37]],6],2],[[[67,[37]],6],2],[[[68,[37]],6],2],[[[69,[50,37]],6],2],[[[70,[41]],6],2],[[[71,[40]],6],2],[[[72,[39]],6],2],[[[42,[37]],6],2],[[[43,[37]],6],2],[[[44,[37]],6],2],[[[45,[37]],6],2],[[[46,[37]],6],2],[[[47,[37]],6],2],[[[48,[37]],6],2],[[[49,[37]],6],2],[[[52,[50,37]],6],2],[[[54,[37]],6],2],[[[55,[37]],6],2],[[[56,[37]],6],2],[[[57,[37]],6],2],[[[58,[37]],6],2],[[[59,[37]],6],2],[[[60,[37]],6],2],[[[61,[37]],6],2],[[[62,[37]],6],2],[[[63,[37]],6],2],[[[64,[37]],6],2],[[[65,[37]],6],2],[[[66,[37]],6],2],[[[67,[37]],6],2],[[[68,[37]],6],2],[[[69,[50,37]],6],2],[[[70,[41]],6],2],[[[71,[40]],6],2],[[[72,[39]],6],2],[[[42,[37]],6],2],[[[43,[37]],6],2],[[[44,[37]],6],2],[[[45,[37]],6],2],[[[46,[37]],6],2],[[[47,[37]],6],2],[[[48,[37]],6],2],[[[49,[37]],6],2],[[[52,[50,37]],6],2],[[[54,[37]],6],2],[[[55,[37]],6],2],[[[56,[37]],6],2],[[[57,[37]],6],2],[[[58,[37]],6],2],[[[59,[37]],6],2],[[[60,[37]],6],2],[[[61,[37]],6],2],[[[62,[37]],6],2],[[[63,[37]],6],2],[[[64,[37]],6],2],[[[65,[37]],6],2],[[[66,[37]],6],2],[[[67,[37]],6],2],[[[68,[37]],6],2],[[[69,[50,37]],6],2],[[[70,[41]],6],2],[[[71,[40]],6],2],[[[72,[39]],6],2],[[[42,[37]],7,6],2],[[[43,[37]],7,6],2],[[[44,[37]],7,6],2],[[[45,[37]],7,6],2],[[[46,[37]],7,6],2],[[[47,[37]],7,6],2],[[[48,[37]],7,6],2],[[[49,[37]],7,6],2],[[[52,[50,37]],7,6],2],[[[54,[37]],7,6],2],[[[55,[37]],7,6],2],[[[56,[37]],7,6],2],[[[57,[37]],7,6],2],[[[58,[37]],7,6],2],[[[59,[37]],7,6],2],[[[60,[37]],7,6],2],[[[61,[37]],7,6],2],[[[62,[37]],7,6],2],[[[63,[37]],7,6],2],[[[64,[37]],7,6],2],[[[65,[37]],7,6],2],[[[66,[37]],7,6],2],[[[67,[37]],7,6],2],[[[68,[37]],7,6],2],[[[69,[50,37]],7,6],2],[[[70,[41]],7,6],2],[[[71,[40]],7,6],2],[[[72,[39]],7,6],2],[[[42,[37]],6],2],[[[43,[37]],6],2],[[[44,[37]],6],2],[[[45,[37]],6],2],[[[46,[37]],6],2],[[[47,[37]],6],2],[[[48,[37]],6],2],[[[49,[37]],6],2],[[[52,[50,37]],6],2],[[[54,[37]],6],2],[[[55,[37]],6],2],[[[56,[37]],6],2],[[[57,[37]],6],2],[[[58,[37]],6],2],[[[59,[37]],6],2],[[[60,[37]],6],2],[[[61,[37]],6],2],[[[62,[37]],6],2],[[[63,[37]],6],2],[[[64,[37]],6],2],[[[65,[37]],6],2],[[[66,[37]],6],2],[[[67,[37]],6],2],[[[68,[37]],6],2],[[[69,[50,37]],6],2],[[[70,[41]],6],2],[[[71,[40]],6],2],[[[72,[39]],6],2],[[[42,[37]],6],2],[[[43,[37]],6],2],[[[44,[37]],6],2],[[[45,[37]],6],2],[[[46,[37]],6],2],[[[47,[37]],6],2],[[[48,[37]],6],2],[[[49,[37]],6],2],[[[52,[50,37]],6],2],[[[54,[37]],6],2],[[[55,[37]],6],2],[[[56,[37]],6],2],[[[57,[37]],6],2],[[[58,[37]],6],2],[[[59,[37]],6],2],[[[60,[37]],6],2],[[[61,[37]],6],2],[[[62,[37]],6],2],[[[63,[37]],6],2],[[[64,[37]],6],2],[[[65,[37]],6],2],[[[66,[37]],6],2],[[[67,[37]],6],2],[[[68,[37]],6],2],[[[69,[50,37]],6],2],[[[70,[41]],6],2],[[[71,[40]],6],2],[[[72,[39]],6],2],[[[42,[37]],6],2],[[[43,[37]],6],2],[[[44,[37]],6],2],[[[45,[37]],6],2],[[[46,[37]],6],2],[[[47,[37]],6],2],[[[48,[37]],6],2],[[[49,[37]],6],2],[[[52,[50,37]],6],2],[[[54,[37]],6],2],[[[55,[37]],6],2],[[[56,[37]],6],2],[[[57,[37]],6],2],[[[58,[37]],6],2],[[[59,[37]],6],2],[[[60,[37]],6],2],[[[61,[37]],6],2],[[[62,[37]],6],2],[[[63,[37]],6],2],[[[64,[37]],6],2],[[[65,[37]],6],2],[[[66,[37]],6],2],[[[67,[37]],6],2],[[[68,[37]],6],2],[[[69,[50,37]],6],2],[[[70,[41]],6],2],[[[71,[40]],6],2],[[[72,[39]],6],2],[[[42,[37]],6],2],[[[43,[37]],6],2],[[[44,[37]],6],2],[[[45,[37]],6],2],[[[46,[37]],6],2],[[[47,[37]],6],2],[[[48,[37]],6],2],[[[49,[37]],6],2],[[[52,[50,37]],6],2],[[[54,[37]],6],2],[[[55,[37]],6],2],[[[56,[37]],6],2],[[[57,[37]],6],2],[[[58,[37]],6],2],[[[59,[37]],6],2],[[[60,[37]],6],2],[[[61,[37]],6],2],[[[62,[37]],6],2],[[[63,[37]],6],2],[[[64,[37]],6],2],[[[65,[37]],6],2],[[[66,[37]],6],2],[[[67,[37]],6],2],[[[68,[37]],6],2],[[[69,[50,37]],6],2],[[[70,[41]],6],2],[[[71,[40]],6],2],[[[72,[39]],6],2],[[[42,[37]],7,[8,[7]],6],2],[[[43,[37]],7,[8,[7]],6],2],[[[44,[37]],7,[8,[7]],6],2],[[[45,[37]],7,[8,[7]],6],2],[[[46,[37]],7,[8,[7]],6],2],[[[47,[37]],7,[8,[7]],6],2],[[[48,[37]],7,[8,[7]],6],2],[[[49,[37]],7,[8,[7]],6],2],[[[52,[50,37]],7,[8,[7]],6],2],[[[54,[37]],7,[8,[7]],6],2],[[[55,[37]],7,[8,[7]],6],2],[[[56,[37]],7,[8,[7]],6],2],[[[57,[37]],7,[8,[7]],6],2],[[[58,[37]],7,[8,[7]],6],2],[[[59,[37]],7,[8,[7]],6],2],[[[60,[37]],7,[8,[7]],6],2],[[[61,[37]],7,[8,[7]],6],2],[[[62,[37]],7,[8,[7]],6],2],[[[63,[37]],7,[8,[7]],6],2],[[[64,[37]],7,[8,[7]],6],2],[[[65,[37]],7,[8,[7]],6],2],[[[66,[37]],7,[8,[7]],6],2],[[[67,[37]],7,[8,[7]],6],2],[[[68,[37]],7,[8,[7]],6],2],[[[69,[50,37]],7,[8,[7]],6],2],[[[70,[41]],7,[8,[7]],6],2],[[[71,[40]],7,[8,[7]],6],2],[[[72,[39]],7,[8,[7]],6],2],[[[42,[37]],9,6],2],[[[43,[37]],9,6],2],[[[44,[37]],9,6],2],[[[45,[37]],9,6],2],[[[46,[37]],9,6],2],[[[47,[37]],9,6],2],[[[48,[37]],9,6],2],[[[49,[37]],9,6],2],[[[52,[50,37]],9,6],2],[[[54,[37]],9,6],2],[[[55,[37]],9,6],2],[[[56,[37]],9,6],2],[[[57,[37]],9,6],2],[[[58,[37]],9,6],2],[[[59,[37]],9,6],2],[[[60,[37]],9,6],2],[[[61,[37]],9,6],2],[[[62,[37]],9,6],2],[[[63,[37]],9,6],2],[[[64,[37]],9,6],2],[[[65,[37]],9,6],2],[[[66,[37]],9,6],2],[[[67,[37]],9,6],2],[[[68,[37]],9,6],2],[[[69,[50,37]],9,6],2],[[[70,[41]],9,6],2],[[[71,[40]],9,6],2],[[[72,[39]],9,6],2],[[[42,[37]],7,9,6],2],[[[43,[37]],7,9,6],2],[[[44,[37]],7,9,6],2],[[[45,[37]],7,9,6],2],[[[46,[37]],7,9,6],2],[[[47,[37]],7,9,6],2],[[[48,[37]],7,9,6],2],[[[49,[37]],7,9,6],2],[[[52,[50,37]],7,9,6],2],[[[54,[37]],7,9,6],2],[[[55,[37]],7,9,6],2],[[[56,[37]],7,9,6],2],[[[57,[37]],7,9,6],2],[[[58,[37]],7,9,6],2],[[[59,[37]],7,9,6],2],[[[60,[37]],7,9,6],2],[[[61,[37]],7,9,6],2],[[[62,[37]],7,9,6],2],[[[63,[37]],7,9,6],2],[[[64,[37]],7,9,6],2],[[[65,[37]],7,9,6],2],[[[66,[37]],7,9,6],2],[[[67,[37]],7,9,6],2],[[[68,[37]],7,9,6],2],[[[69,[50,37]],7,9,6],2],[[[70,[41]],7,9,6],2],[[[71,[40]],7,9,6],2],[[[72,[39]],7,9,6],2],[[[42,[37]],6],2],[[[43,[37]],6],2],[[[44,[37]],6],2],[[[45,[37]],6],2],[[[46,[37]],6],2],[[[47,[37]],6],2],[[[48,[37]],6],2],[[[49,[37]],6],2],[[[52,[50,37]],6],2],[[[54,[37]],6],2],[[[55,[37]],6],2],[[[56,[37]],6],2],[[[57,[37]],6],2],[[[58,[37]],6],2],[[[59,[37]],6],2],[[[60,[37]],6],2],[[[61,[37]],6],2],[[[62,[37]],6],2],[[[63,[37]],6],2],[[[64,[37]],6],2],[[[65,[37]],6],2],[[[66,[37]],6],2],[[[67,[37]],6],2],[[[68,[37]],6],2],[[[69,[50,37]],6],2],[[[70,[41]],6],2],[[[71,[40]],6],2],[[[72,[39]],6],2],[[[42,[37]],6],2],[[[43,[37]],6],2],[[[44,[37]],6],2],[[[45,[37]],6],2],[[[46,[37]],6],2],[[[47,[37]],6],2],[[[48,[37]],6],2],[[[49,[37]],6],2],[[[52,[50,37]],6],2],[[[54,[37]],6],2],[[[55,[37]],6],2],[[[56,[37]],6],2],[[[57,[37]],6],2],[[[58,[37]],6],2],[[[59,[37]],6],2],[[[60,[37]],6],2],[[[61,[37]],6],2],[[[62,[37]],6],2],[[[63,[37]],6],2],[[[64,[37]],6],2],[[[65,[37]],6],2],[[[66,[37]],6],2],[[[67,[37]],6],2],[[[68,[37]],6],2],[[[69,[50,37]],6],2],[[[70,[41]],6],2],[[[71,[40]],6],2],[[[72,[39]],6],2],[[[42,[37]],6],2],[[[43,[37]],6],2],[[[44,[37]],6],2],[[[45,[37]],6],2],[[[46,[37]],6],2],[[[47,[37]],6],2],[[[48,[37]],6],2],[[[49,[37]],6],2],[[[52,[50,37]],6],2],[[[54,[37]],6],2],[[[55,[37]],6],2],[[[56,[37]],6],2],[[[57,[37]],6],2],[[[58,[37]],6],2],[[[59,[37]],6],2],[[[60,[37]],6],2],[[[61,[37]],6],2],[[[62,[37]],6],2],[[[63,[37]],6],2],[[[64,[37]],6],2],[[[65,[37]],6],2],[[[66,[37]],6],2],[[[67,[37]],6],2],[[[68,[37]],6],2],[[[69,[50,37]],6],2],[[[70,[41]],6],2],[[[71,[40]],6],2],[[[72,[39]],6],2],[[[42,[37]],6],2],[[[43,[37]],6],2],[[[44,[37]],6],2],[[[45,[37]],6],2],[[[46,[37]],6],2],[[[47,[37]],6],2],[[[48,[37]],6],2],[[[49,[37]],6],2],[[[52,[50,37]],6],2],[[[54,[37]],6],2],[[[55,[37]],6],2],[[[56,[37]],6],2],[[[57,[37]],6],2],[[[58,[37]],6],2],[[[59,[37]],6],2],[[[60,[37]],6],2],[[[61,[37]],6],2],[[[62,[37]],6],2],[[[63,[37]],6],2],[[[64,[37]],6],2],[[[65,[37]],6],2],[[[66,[37]],6],2],[[[67,[37]],6],2],[[[68,[37]],6],2],[[[69,[50,37]],6],2],[[[70,[41]],6],2],[[[71,[40]],6],2],[[[72,[39]],6],2],[[[42,[37]],6],2],[[[43,[37]],6],2],[[[44,[37]],6],2],[[[45,[37]],6],2],[[[46,[37]],6],2],[[[47,[37]],6],2],[[[48,[37]],6],2],[[[49,[37]],6],2],[[[52,[50,37]],6],2],[[[54,[37]],6],2],[[[55,[37]],6],2],[[[56,[37]],6],2],[[[57,[37]],6],2],[[[58,[37]],6],2],[[[59,[37]],6],2],[[[60,[37]],6],2],[[[61,[37]],6],2],[[[62,[37]],6],2],[[[63,[37]],6],2],[[[64,[37]],6],2],[[[65,[37]],6],2],[[[66,[37]],6],2],[[[67,[37]],6],2],[[[68,[37]],6],2],[[[69,[50,37]],6],2],[[[70,[41]],6],2],[[[71,[40]],6],2],[[[72,[39]],6],2],[[[42,[37]],6],2],[[[43,[37]],6],2],[[[44,[37]],6],2],[[[45,[37]],6],2],[[[46,[37]],6],2],[[[47,[37]],6],2],[[[48,[37]],6],2],[[[49,[37]],6],2],[[[52,[50,37]],6],2],[[[54,[37]],6],2],[[[55,[37]],6],2],[[[56,[37]],6],2],[[[57,[37]],6],2],[[[58,[37]],6],2],[[[59,[37]],6],2],[[[60,[37]],6],2],[[[61,[37]],6],2],[[[62,[37]],6],2],[[[63,[37]],6],2],[[[64,[37]],6],2],[[[65,[37]],6],2],[[[66,[37]],6],2],[[[67,[37]],6],2],[[[68,[37]],6],2],[[[69,[50,37]],6],2],[[[70,[41]],6],2],[[[71,[40]],6],2],[[[72,[39]],6],2],[[[42,[37]],7,6],2],[[[43,[37]],7,6],2],[[[44,[37]],7,6],2],[[[45,[37]],7,6],2],[[[46,[37]],7,6],2],[[[47,[37]],7,6],2],[[[48,[37]],7,6],2],[[[49,[37]],7,6],2],[[[52,[50,37]],7,6],2],[[[54,[37]],7,6],2],[[[55,[37]],7,6],2],[[[56,[37]],7,6],2],[[[57,[37]],7,6],2],[[[58,[37]],7,6],2],[[[59,[37]],7,6],2],[[[60,[37]],7,6],2],[[[61,[37]],7,6],2],[[[62,[37]],7,6],2],[[[63,[37]],7,6],2],[[[64,[37]],7,6],2],[[[65,[37]],7,6],2],[[[66,[37]],7,6],2],[[[67,[37]],7,6],2],[[[68,[37]],7,6],2],[[[69,[50,37]],7,6],2],[[[70,[41]],7,6],2],[[[71,[40]],7,6],2],[[[72,[39]],7,6],2],[[[52,[50,37]]],[[2,[37]]]],[[[69,[50,37]]],[[2,[37]]]],[[53,53],10],[[42,29],30],[[43,29],30],[[44,29],30],[[45,29],30],[[46,29],30],[[47,29],30],[[48,29],30],[[49,29],30],[[[52,[[0,[50,73]]]],29],30],[[53,29],30],[[53,29],30],[[54,29],30],[[55,29],30],[[56,29],30],[[57,29],30],[[58,29],30],[[59,29],30],[[60,29],30],[[61,29],30],[[62,29],30],[[63,29],30],[[64,29],30],[[65,29],30],[[66,29],30],[[67,29],30],[[68,29],30],[[[69,[73]],29],30],[[[70,[73]],29],30],[[[71,[73]],29],30],[[[72,[73]],29],30],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],42],[23,43],[7,44],[7,45],[35,46],[[[74,[7]]],47],[[[8,[12]]],48],[[[8,[12]]],49],[50,[[52,[50]]]],[10,54],[20,55],[17,56],[18,57],[19,58],[75,59],[12,60],[25,61],[26,62],[9,63],[14,64],[15,65],[13,66],[16,67],[24,68],[50,[[69,[50]]]],[[],70],[[],71],[[],72],[[[52,[50,37]],34],[[2,[21]]]],[[[69,[50,37]],34],[[2,[21]]]],[[[52,[50,37]],34,34],[[2,[21]]]],[[[52,[50,37]],34],[[2,[21]]]],[[[52,[50,37]],34],2],[76],[[[52,[50,37]]],[[21,[9]]]],[[[52,[50,37]]],[[21,[9]]]],[[[69,[50,37]]],[[21,[9]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],35],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[[43,[37]],34],2],[[[44,[37]],34],2],[[[45,[37]],34],2],[[[46,[37]],34],2],[[[47,[37]],34],2],[[[71,[40]],34],2],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[1,2],[1,2],[[[0,[3,4]]],2],[3],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[[78,[77]]],[[2,[77]]]],[[[78,[77]]],[[2,[77]]]],[[[78,[77]]],[[2,[77]]]],[[[78,[77]]],[[2,[77]]]],[[[78,[77]]],[[2,[77]]]],[[[78,[77]]],[[2,[77]]]],[[[78,[77]]],[[2,[77]]]],[[]],[[]],[[],10],[11,2],[10,2],[[[8,[12]]],2],[13,2],[[[0,[22,4]]],2],[[[0,[22,4]]],2],[[[78,[77]],[0,[22,4]]],[[2,[77]]]],[[[78,[77]],[0,[22,4]]],[[2,[77]]]],[[[0,[22,4]],[0,[22,4]]],2],[14,2],[15,2],[[[0,[22,4]]],2],[[[0,[22,4]]],2],[[7,[0,[22,4]]],2],[[7,[0,[22,4]]],2],[[[78,[77]],[0,[22,4]]],[[2,[77]]]],[[[78,[77]],[0,[22,4]]],[[2,[77]]]],[[[78,[77]],7,[0,[22,4]]],[[2,[77]]]],[[[78,[77]],7,[0,[22,4]]],[[2,[77]]]],[16,2],[17,2],[18,2],[19,2],[20,2],[[[0,[22,4]]],2],[[[78,[77]],[0,[22,4]]],[[2,[77]]]],[[[21,[9]]],2],[[7,[0,[22,4]]],2],[[7,23,7,[0,[22,4]]],2],[[],2],[[[21,[9]]],2],[[[0,[22,4]]],2],[7,2],[[7,9],2],[[7,23,7,9],2],[9,2],[[7,9],2],[[7,23,7,9],2],[24,2],[25,2],[23,2],[26,2],[12,2],[[],2],[7,2],[[7,23,7],2],[[[0,[22,4]]],2],[[[78,[77]],[0,[22,4]]],[[2,[77]]]],[7,2],[7,2],[[],2],[[],2],[[],36]],"c":[],"p":[[8,"IntoIterator"],[4,"Result"],[8,"Display"],[8,"Sized"],[8,"Deserializer"],[8,"Visitor"],[15,"str"],[15,"slice"],[15,"usize"],[15,"bool"],[8,"Serializer"],[15,"u8"],[15,"char"],[15,"f32"],[15,"f64"],[15,"i128"],[15,"i16"],[15,"i32"],[15,"i64"],[15,"i8"],[4,"Option"],[8,"Serialize"],[15,"u32"],[15,"u128"],[15,"u16"],[15,"u64"],[3,"IgnoredAny"],[4,"Unexpected"],[3,"Formatter"],[6,"Result"],[8,"Expected"],[3,"Error"],[8,"Deserialize"],[8,"DeserializeSeed"],[3,"String"],[3,"TypeId"],[8,"Error"],[3,"Vec"],[8,"EnumAccess"],[8,"MapAccess"],[8,"SeqAccess"],[3,"UnitDeserializer"],[3,"U32Deserializer"],[3,"StrDeserializer"],[3,"BorrowedStrDeserializer"],[3,"StringDeserializer"],[3,"CowStrDeserializer"],[3,"BytesDeserializer"],[3,"BorrowedBytesDeserializer"],[8,"Iterator"],[8,"Clone"],[3,"MapDeserializer"],[3,"Error"],[3,"BoolDeserializer"],[3,"I8Deserializer"],[3,"I16Deserializer"],[3,"I32Deserializer"],[3,"I64Deserializer"],[3,"IsizeDeserializer"],[3,"U8Deserializer"],[3,"U16Deserializer"],[3,"U64Deserializer"],[3,"UsizeDeserializer"],[3,"F32Deserializer"],[3,"F64Deserializer"],[3,"CharDeserializer"],[3,"I128Deserializer"],[3,"U128Deserializer"],[3,"SeqDeserializer"],[3,"SeqAccessDeserializer"],[3,"MapAccessDeserializer"],[3,"EnumAccessDeserializer"],[8,"Debug"],[4,"Cow"],[15,"isize"],[3,"Demand"],[8,"Error"],[3,"Impossible"],[8,"IntoDeserializer"],[8,"VariantAccess"],[8,"SerializeSeq"],[8,"SerializeTuple"],[8,"SerializeTupleStruct"],[8,"SerializeTupleVariant"],[8,"SerializeMap"],[8,"SerializeStruct"],[8,"SerializeStructVariant"]]},\
"shared_library":{"doc":"","t":"NENLLLLALLLOLLLLMMNDNELLLLLLLLLLLLLLLLLLLLLL","n":["LibraryNotFound","LoadingError","SymbolNotFound","borrow","borrow_mut","clone","clone_into","dynamic_library","fmt","from","into","shared_library","to_owned","try_from","try_into","type_id","descr","symbol","Default","DynamicLibrary","Next","SpecialHandles","borrow","borrow","borrow_mut","borrow_mut","create_path","drop","envvar","from","from","into","into","open","prepend_search_path","search_path","symbol","symbol_special","try_from","try_from","try_into","try_into","type_id","type_id"],"q":[[0,"shared_library"],[16,"shared_library::LoadingError"],[18,"shared_library::dynamic_library"]],"d":["","Error that can happen while loading the shared library.","One of the symbols could not be found in the library.","","","","","Dynamic library facilities.","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","The symbol.","","","","Special handles to be used with the <code>symbol_special</code> …","","","","","From a slice of paths, create a new vector which is …","","Returns the environment variable for this process’s …","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Lazily loads the dynamic library named <code>filename</code> into …","Prepends a path to this process’s search path for …","Returns the current search path for dynamic libraries …","Returns the address of where symbol <code>symbol</code> was loaded into …","Returns the address of the first occurance of symbol <code>symbol</code>…","","","","","",""],"i":[1,0,1,1,1,1,1,0,1,1,1,0,1,1,1,1,16,17,15,0,15,0,9,15,9,15,9,9,9,9,15,9,15,9,9,9,9,9,9,15,9,15,9,15],"f":[0,0,0,[[]],[[]],[1,1],[[]],0,[[1,2],3],[[]],[[]],0,[[]],[[],4],[[],4],[[],5],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[[7,[6]]],8],[9],[[],10],[[]],[[]],[[]],[[]],[[[12,[11]]],[[4,[9,13]]]],[11],[[],[[14,[6]]]],[[9,10],[[4,[13]]]],[[15,10],[[4,[13]]]],[[],4],[[],4],[[],4],[[],4],[[],5],[[],5]],"c":[],"p":[[4,"LoadingError"],[3,"Formatter"],[6,"Result"],[4,"Result"],[3,"TypeId"],[3,"PathBuf"],[15,"slice"],[3,"OsString"],[3,"DynamicLibrary"],[15,"str"],[3,"Path"],[4,"Option"],[3,"String"],[3,"Vec"],[4,"SpecialHandles"],[13,"LibraryNotFound"],[13,"SymbolNotFound"]]},\
"simd_adler32":{"doc":"simd-adler32","t":"DIFLLALLLLLLKLLALLLLLLFF","n":["Adler32","Adler32Hash","adler32","borrow","borrow_mut","bufread","clone","clone_into","default","finish","from","from_checksum","hash","into","new","read","reset","to_owned","try_from","try_into","type_id","write","adler32","adler32"],"q":[[0,"simd_adler32"],[22,"simd_adler32::bufread"],[23,"simd_adler32::read"]],"d":["An adler32 hash generator type.","A Adler-32 hash-able type.","Compute Adler-32 hash on <code>Adler32Hash</code> type.","","","BufRead-based hashing.","","","","Returns the hash value for the values written so far.","Returns the argument unchanged.","Constructs a new <code>Adler32</code> using existing checksum.","Feeds this value into <code>Adler32</code>.","Calls <code>U::from(self)</code>.","Constructs a new <code>Adler32</code>.","Reader-based hashing.","Resets the internal state.","","","","","Computes hash for supplied data and stores results in …","Compute Adler-32 hash on buf reader until EOF.","Compute Adler-32 hash on reader until EOF."],"i":[0,0,0,3,3,0,3,3,3,3,3,3,1,3,3,0,3,3,3,3,3,3,0,0],"f":[0,0,[1,2],[[]],[[]],0,[3,3],[[]],[[],3],[3,2],[[]],[2,3],[[],2],[[]],[[],3],0,[3],[[]],[[],4],[[],4],[[],5],[[3,[7,[6]]]],[8,[[9,[2]]]],[10,[[9,[2]]]]],"c":[],"p":[[8,"Adler32Hash"],[15,"u32"],[3,"Adler32"],[4,"Result"],[3,"TypeId"],[15,"u8"],[15,"slice"],[8,"BufRead"],[6,"Result"],[8,"Read"]]},\
"slab":{"doc":"Pre-allocated storage for a uniform data type.","t":"DDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["Drain","IntoIter","Iter","IterMut","Slab","VacantEntry","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capacity","clear","clone","clone","clone_into","clone_into","compact","contains","default","drain","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_iter","get","get2_mut","get2_unchecked_mut","get_mut","get_unchecked","get_unchecked_mut","index","index_mut","insert","insert","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","is_empty","iter","iter_mut","key","key_of","len","len","len","len","len","new","next","next","next","next","next_back","next_back","next_back","next_back","remove","reserve","reserve_exact","retain","shrink_to_fit","size_hint","size_hint","size_hint","size_hint","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_remove","type_id","type_id","type_id","type_id","type_id","type_id","vacant_entry","vacant_key","with_capacity"],"q":[[0,"slab"]],"d":["A draining iterator for <code>Slab</code>","A consuming iterator over the values stored in a <code>Slab</code>","An iterator over the values stored in the <code>Slab</code>","A mutable iterator over the values stored in the <code>Slab</code>","Pre-allocated storage for a uniform data type","A handle to a vacant entry in a <code>Slab</code>.","","","","","","","","","","","","","Return the number of values the slab can store without …","Clear the slab of all values.","","","","","Reduce the capacity as much as possible, changing the key …","Return <code>true</code> if a value is associated with the given key.","","Return a draining iterator that removes all elements from …","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Return a reference to the value associated with the given …","Return two mutable references to the values associated …","Return two mutable references to the values associated …","Return a mutable reference to the value associated with …","Return a reference to the value associated with the given …","Return a mutable reference to the value associated with …","","","Insert a value in the slab, returning key assigned to the …","Insert a value in the entry, returning a mutable reference …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","Return <code>true</code> if there are no values stored in the slab.","Return an iterator over the slab.","Return an iterator that allows modifying each value.","Return the key associated with this entry.","Get the key for an element in the slab.","","","","","Return the number of stored values.","Construct a new, empty <code>Slab</code>.","","","","","","","","","Remove and return the value associated with the given key.","Reserve capacity for at least <code>additional</code> more values to be …","Reserve the minimum capacity required to store exactly …","Retain only the elements specified by the predicate.","Shrink the capacity of the slab as much as possible …","","","","","","","","","","","","","","","","","","","Tries to remove the value associated with the given key, …","","","","","","","Return a handle to a vacant entry allowing for further …","Returns the key of the next vacant entry.","Construct a new, empty <code>Slab</code> with the specified capacity."],"i":[0,0,0,0,0,0,9,3,12,7,1,13,9,3,12,7,1,13,1,1,3,1,3,1,1,1,1,1,9,3,12,7,1,13,9,3,12,7,1,13,1,1,1,1,1,1,1,1,1,1,13,9,3,12,7,1,13,9,3,12,7,1,1,1,1,1,1,13,1,9,3,12,7,1,1,9,3,12,7,9,3,12,7,1,1,1,1,1,9,3,12,7,3,1,9,3,12,7,1,13,9,3,12,7,1,13,1,9,3,12,7,1,13,1,1,1],"f":[0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,2],[1],[3,3],[[[1,[4]]],[[1,[4]]]],[[]],[[]],[[1,5]],[[1,2],6],[[],1],[1,7],[[[9,[8]],10],11],[[[3,[8]],10],11],[[[12,[8]],10],11],[[7,10],11],[[[1,[8]],10],11],[[[13,[8]],10],11],[[]],[[]],[[]],[[]],[[]],[[]],[14,1],[[1,2],15],[[1,2,2],15],[[1,2,2]],[[1,2],15],[[1,2]],[[1,2]],[[1,2]],[[1,2]],[1,2],[13],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,12],[1,3],[1,9],[1,6],[1,3],[1,12],[13,2],[1,2],[9,2],[3,2],[12,2],[7,2],[1,2],[[],1],[9,15],[3,15],[12,15],[7,15],[9,15],[3,15],[12,15],[7,15],[[1,2]],[[1,2]],[[1,2]],[[1,5]],[1],[9],[3],[12],[7],[[]],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[1,2],15],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[1,13],[1,2],[2,1]],"c":[],"p":[[3,"Slab"],[15,"usize"],[3,"Iter"],[8,"Clone"],[8,"FnMut"],[15,"bool"],[3,"Drain"],[8,"Debug"],[3,"IntoIter"],[3,"Formatter"],[6,"Result"],[3,"IterMut"],[3,"VacantEntry"],[8,"IntoIterator"],[4,"Option"],[4,"Result"],[3,"TypeId"]]},\
"slotmap":{"doc":"slotmap","t":"DDDIDDDDLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLOLLLAALLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDEDDDDNDDNDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDEDDDDNDDNDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["DefaultKey","DenseSlotMap","HopSlotMap","Key","KeyData","SecondaryMap","SlotMap","SparseSecondaryMap","as_ffi","basic","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","data","data","default","default","default","default","default","default","default","dense","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","extend","extend","extend","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_ffi","from_iter","from_iter","hash","hash","hop","index","index","index","index","index","index_mut","index_mut","index_mut","index_mut","index_mut","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","is_null","new_key_type","null","partial_cmp","partial_cmp","secondary","sparse_secondary","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","Drain","IntoIter","Iter","IterMut","Keys","SlotMap","Values","ValuesMut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capacity","clear","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","contains_key","drain","drop","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","get","get_disjoint_mut","get_disjoint_unchecked_mut","get_mut","get_unchecked","get_unchecked_mut","insert","insert_with_key","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","is_empty","iter","iter_mut","keys","len","new","next","next","next","next","next","next","next","remove","reserve","retain","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","values","values_mut","with_capacity","with_capacity_and_key","with_key","DenseSlotMap","Drain","IntoIter","Iter","IterMut","Keys","Values","ValuesMut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capacity","clear","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","contains_key","drain","drop","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","get","get_disjoint_mut","get_disjoint_unchecked_mut","get_mut","get_unchecked","get_unchecked_mut","insert","insert_with_key","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","is_empty","iter","iter_mut","keys","len","new","next","next","next","next","next","next","next","remove","reserve","retain","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","values","values_mut","with_capacity","with_capacity_and_key","with_key","Drain","HopSlotMap","IntoIter","Iter","IterMut","Keys","Values","ValuesMut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capacity","clear","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","contains_key","drain","drop","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","get","get_disjoint_mut","get_disjoint_unchecked_mut","get_mut","get_unchecked","get_unchecked_mut","insert","insert_with_key","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","is_empty","iter","iter_mut","keys","len","new","next","next","next","next","next","next","next","remove","reserve","retain","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","values","values_mut","with_capacity","with_capacity_and_key","with_key","Drain","Entry","IntoIter","Iter","IterMut","Keys","Occupied","OccupiedEntry","SecondaryMap","Vacant","VacantEntry","Values","ValuesMut","and_modify","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capacity","clear","contains_key","drain","drop","entry","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","get","get","get_disjoint_mut","get_disjoint_unchecked_mut","get_mut","get_mut","get_unchecked","get_unchecked_mut","insert","insert","insert","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_mut","is_empty","iter","iter_mut","key","key","key","keys","len","new","next","next","next","next","next","next","next","or_default","or_insert","or_insert_with","remove","remove","remove_entry","retain","set_capacity","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","values","values_mut","with_capacity","Drain","Entry","IntoIter","Iter","IterMut","Keys","Occupied","OccupiedEntry","SparseSecondaryMap","Vacant","VacantEntry","Values","ValuesMut","and_modify","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capacity","clear","contains_key","drain","drop","entry","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","get","get","get_disjoint_mut","get_disjoint_unchecked_mut","get_mut","get_mut","get_unchecked","get_unchecked_mut","insert","insert","insert","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_mut","is_empty","iter","iter_mut","key","key","key","keys","len","new","next","next","next","next","next","next","next","or_default","or_insert","or_insert_with","remove","remove","remove_entry","reserve","retain","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","values","values_mut","with_capacity","with_capacity_and_hasher","with_hasher"],"q":[[0,"slotmap"],[150,"slotmap::basic"],[274,"slotmap::dense"],[398,"slotmap::hop"],[522,"slotmap::secondary"],[675,"slotmap::sparse_secondary"]],"d":["The default slot map key type.","Dense slot map, storage with stable unique keys.","Hop slot map, storage with stable unique keys.","Key used to access stored values in a slot map.","The actual data stored in a <code>Key</code>.","Secondary map, associate data with previously stored …","Slot map, storage with stable unique keys.","Sparse secondary map, associate data with previously …","Returns the key data as a 64-bit integer. No guarantees …","Contains the slot map implementation.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Gets the <code>KeyData</code> stored in this key.","","","","","","","","","Contains the dense slot map implementation.","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Iff <code>value</code> is a value received from <code>k.as_ffi()</code>, returns a …","","","","","Contains the faster iteration, slower insertion/removal …","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Checks if a key is null. There is only a single null key, …","A helper macro to create new key types. If you use a new …","Creates a new key that is always invalid and distinct from …","","","Contains the secondary map implementation.","Contains the sparse secondary map implementation.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A draining iterator for <code>SlotMap</code>.","An iterator that moves key-value pairs out of a <code>SlotMap</code>.","An iterator over the key-value pairs in a <code>SlotMap</code>.","A mutable iterator over the key-value pairs in a <code>SlotMap</code>.","An iterator over the keys in a <code>SlotMap</code>.","Slot map, storage with stable unique keys.","An iterator over the values in a <code>SlotMap</code>.","A mutable iterator over the values in a <code>SlotMap</code>.","","","","","","","","","","","","","","","Returns the number of elements the <code>SlotMap</code> can hold without","Clears the slot map. Keeps the allocated memory for reuse.","","","","","","","","","Returns <code>true</code> if the slot map contains <code>key</code>.","Clears the slot map, returning all key-value pairs in …","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns a reference to the value corresponding to the key.","Returns mutable references to the values corresponding to …","Returns mutable references to the values corresponding to …","Returns a mutable reference to the value corresponding to …","Returns a reference to the value corresponding to the key …","Returns a mutable reference to the value corresponding to …","Inserts a value into the slot map. Returns a unique key …","Inserts a value given by <code>f</code> into the slot map. The key …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","Returns if the slot map is empty.","An iterator visiting all key-value pairs in arbitrary …","An iterator visiting all key-value pairs in arbitrary …","An iterator visiting all keys in arbitrary order. The …","Returns the number of elements in the slot map.","Constructs a new, empty <code>SlotMap</code>.","","","","","","","","Removes a key from the slot map, returning the value at …","Reserves capacity for at least <code>additional</code> more elements to …","Retains only the elements specified by the predicate.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An iterator visiting all values in arbitrary order. The …","An iterator visiting all values mutably in arbitrary …","Creates an empty <code>SlotMap</code> with the given capacity.","Creates an empty <code>SlotMap</code> with the given capacity and a …","Constructs a new, empty <code>SlotMap</code> with a custom key type.","Dense slot map, storage with stable unique keys.","A draining iterator for <code>DenseSlotMap</code>.","An iterator that moves key-value pairs out of a …","An iterator over the key-value pairs in a <code>DenseSlotMap</code>.","A mutable iterator over the key-value pairs in a …","An iterator over the keys in a <code>DenseSlotMap</code>.","An iterator over the values in a <code>DenseSlotMap</code>.","A mutable iterator over the values in a <code>DenseSlotMap</code>.","","","","","","","","","","","","","","","Returns the number of elements the <code>DenseSlotMap</code> can hold …","Clears the slot map. Keeps the allocated memory for reuse.","","","","","","","","","Returns <code>true</code> if the slot map contains <code>key</code>.","Clears the slot map, returning all key-value pairs in …","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns a reference to the value corresponding to the key.","Returns mutable references to the values corresponding to …","Returns mutable references to the values corresponding to …","Returns a mutable reference to the value corresponding to …","Returns a reference to the value corresponding to the key …","Returns a mutable reference to the value corresponding to …","Inserts a value into the slot map. Returns a unique key …","Inserts a value given by <code>f</code> into the slot map. The key …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","Returns if the slot map is empty.","An iterator visiting all key-value pairs in arbitrary …","An iterator visiting all key-value pairs in arbitrary …","An iterator visiting all keys in arbitrary order. The …","Returns the number of elements in the slot map.","Construct a new, empty <code>DenseSlotMap</code>.","","","","","","","","Removes a key from the slot map, returning the value at …","Reserves capacity for at least <code>additional</code> more elements to …","Retains only the elements specified by the predicate.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An iterator visiting all values in arbitrary order. The …","An iterator visiting all values mutably in arbitrary …","Creates an empty <code>DenseSlotMap</code> with the given capacity.","Creates an empty <code>DenseSlotMap</code> with the given capacity and …","Constructs a new, empty <code>DenseSlotMap</code> with a custom key …","A draining iterator for <code>HopSlotMap</code>.","Hop slot map, storage with stable unique keys.","An iterator that moves key-value pairs out of a <code>HopSlotMap</code>.","An iterator over the key-value pairs in a <code>HopSlotMap</code>.","A mutable iterator over the key-value pairs in a <code>HopSlotMap</code>…","An iterator over the keys in a <code>HopSlotMap</code>.","An iterator over the values in a <code>HopSlotMap</code>.","A mutable iterator over the values in a <code>HopSlotMap</code>.","","","","","","","","","","","","","","","Returns the number of elements the <code>HopSlotMap</code> can hold …","Clears the slot map. Keeps the allocated memory for reuse.","","","","","","","","","Returns <code>true</code> if the slot map contains <code>key</code>.","Clears the slot map, returning all key-value pairs in …","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns a reference to the value corresponding to the key.","Returns mutable references to the values corresponding to …","Returns mutable references to the values corresponding to …","Returns a mutable reference to the value corresponding to …","Returns a reference to the value corresponding to the key …","Returns a mutable reference to the value corresponding to …","Inserts a value into the slot map. Returns a unique key …","Inserts a value given by <code>f</code> into the slot map. The key …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","Returns if the slot map is empty.","An iterator visiting all key-value pairs in arbitrary …","An iterator visiting all key-value pairs in arbitrary …","An iterator visiting all keys in arbitrary order. The …","Returns the number of elements in the slot map.","Constructs a new, empty <code>HopSlotMap</code>.","","","","","","","","Removes a key from the slot map, returning the value at …","Reserves capacity for at least <code>additional</code> more elements to …","Retains only the elements specified by the predicate.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An iterator visiting all values in arbitrary order. The …","An iterator visiting all values mutably in arbitrary …","Creates an empty <code>HopSlotMap</code> with the given capacity.","Creates an empty <code>HopSlotMap</code> with the given capacity and a …","Constructs a new, empty <code>HopSlotMap</code> with a custom key type.","A draining iterator for <code>SecondaryMap</code>.","A view into a single entry in a <code>SecondaryMap</code>, which may …","An iterator that moves key-value pairs out of a …","An iterator over the key-value pairs in a <code>SecondaryMap</code>.","A mutable iterator over the key-value pairs in a …","An iterator over the keys in a <code>SecondaryMap</code>.","An occupied entry.","A view into a occupied entry in a <code>SecondaryMap</code>. It is part …","Secondary map, associate data with previously stored …","A vacant entry.","A view into a vacant entry in a <code>SecondaryMap</code>. It is part …","An iterator over the values in a <code>SecondaryMap</code>.","A mutable iterator over the values in a <code>SecondaryMap</code>.","Provides in-place mutable access to an occupied entry …","","","","","","","","","","","","","","","","","","","","","Returns the number of elements the <code>SecondaryMap</code> can hold …","Clears the secondary map. Keeps the allocated memory for …","Returns <code>true</code> if the secondary map contains <code>key</code>.","Clears the slot map, returning all key-value pairs in …","","Gets the given key’s corresponding <code>Entry</code> in the map for …","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns a reference to the value corresponding to the key.","Gets a reference to the value in the entry.","Returns mutable references to the values corresponding to …","Returns mutable references to the values corresponding to …","Returns a mutable reference to the value corresponding to …","Gets a mutable reference to the value in the entry.","Returns a reference to the value corresponding to the key …","Returns a mutable reference to the value corresponding to …","Inserts a value into the secondary map at the given <code>key</code>. …","Sets the value of the entry, and returns the entry’s old …","Sets the value of the entry with the <code>VacantEntry</code>’s key, …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","Converts the <code>OccupiedEntry</code> into a mutable reference to the …","Returns if the secondary map is empty.","An iterator visiting all key-value pairs in arbitrary …","An iterator visiting all key-value pairs in arbitrary …","Returns this entry’s key.","Gets the key that would be used when inserting a value …","Returns this entry’s key.","An iterator visiting all keys in arbitrary order. The …","Returns the number of elements in the secondary map.","Constructs a new, empty <code>SecondaryMap</code>.","","","","","","","","Ensures a value is in the entry by inserting the default …","Ensures a value is in the entry by inserting the default …","Ensures a value is in the entry by inserting the result of …","Removes a key from the secondary map, returning the value …","Takes the value out of the entry, and returns it.","Removes the entry from the slot map and returns the key …","Retains only the elements specified by the predicate.","Sets the capacity of the <code>SecondaryMap</code> to <code>new_capacity</code>, if …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An iterator visiting all values in arbitrary order. The …","An iterator visiting all values mutably in arbitrary …","Creates an empty <code>SecondaryMap</code> with the given capacity of …","A draining iterator for <code>SparseSecondaryMap</code>.","A view into a single entry in a <code>SparseSecondaryMap</code>, which …","An iterator that moves key-value pairs out of a …","An iterator over the key-value pairs in a …","A mutable iterator over the key-value pairs in a …","An iterator over the keys in a <code>SparseSecondaryMap</code>.","An occupied entry.","A view into a occupied entry in a <code>SparseSecondaryMap</code>. It …","Sparse secondary map, associate data with previously …","A vacant entry.","A view into a vacant entry in a <code>SparseSecondaryMap</code>. It is …","An iterator over the values in a <code>SparseSecondaryMap</code>.","A mutable iterator over the values in a <code>SparseSecondaryMap</code>.","Provides in-place mutable access to an occupied entry …","","","","","","","","","","","","","","","","","","","","","Returns the number of elements the <code>SparseSecondaryMap</code> can …","Clears the secondary map. Keeps the allocated memory for …","Returns <code>true</code> if the secondary map contains <code>key</code>.","Clears the slot map, returning all key-value pairs in …","","Gets the given key’s corresponding <code>Entry</code> in the map for …","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns a reference to the value corresponding to the key.","Gets a reference to the value in the entry.","Returns mutable references to the values corresponding to …","Returns mutable references to the values corresponding to …","Returns a mutable reference to the value corresponding to …","Gets a mutable reference to the value in the entry.","Returns a reference to the value corresponding to the key …","Returns a mutable reference to the value corresponding to …","Inserts a value into the secondary map at the given <code>key</code>. …","Sets the value of the entry, and returns the entry’s old …","Sets the value of the entry with the <code>VacantEntry</code>’s key, …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","Converts the <code>OccupiedEntry</code> into a mutable reference to the …","Returns if the secondary map is empty.","An iterator visiting all key-value pairs in arbitrary …","An iterator visiting all key-value pairs in arbitrary …","Returns this entry’s key.","Gets the key that would be used when inserting a value …","Returns this entry’s key.","An iterator visiting all keys in arbitrary order. The …","Returns the number of elements in the secondary map.","Constructs a new, empty <code>SparseSecondaryMap</code>.","","","","","","","","Ensures a value is in the entry by inserting the default …","Ensures a value is in the entry by inserting the default …","Ensures a value is in the entry by inserting the result of …","Removes a key from the secondary map, returning the value …","Takes the value out of the entry, and returns it.","Removes the entry from the slot map and returns the key …","Reserves capacity for at least <code>additional</code> more slots in the","Retains only the elements specified by the predicate.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An iterator visiting all values in arbitrary order. The …","An iterator visiting all values mutably in arbitrary …","Creates an empty <code>SparseSecondaryMap</code> with the given …","Creates an empty <code>SparseSecondaryMap</code> with the given …","Creates an empty <code>SparseSecondaryMap</code> which will use the …"],"i":[0,0,0,0,0,0,0,0,1,0,5,6,7,8,10,1,11,5,6,7,8,10,1,11,5,6,7,8,10,1,11,5,6,7,8,10,1,11,1,11,4,11,5,6,7,8,10,1,11,0,8,10,1,11,8,10,1,11,8,8,10,10,5,6,7,8,10,1,11,5,6,7,8,10,1,11,11,1,8,10,1,11,0,5,6,7,8,10,5,6,7,8,10,5,6,7,8,10,1,11,5,5,5,6,6,6,7,7,7,8,8,8,10,10,10,4,0,4,1,11,0,0,5,6,7,8,10,1,11,5,6,7,8,10,1,11,5,6,7,8,10,1,11,5,6,7,8,10,1,11,0,0,0,0,0,0,0,0,30,26,27,31,28,29,32,30,26,27,31,28,29,32,5,5,26,27,28,29,26,27,28,29,5,5,30,30,26,27,31,28,29,32,30,26,27,31,28,29,32,5,5,5,5,5,5,5,5,30,26,27,31,28,29,32,30,26,27,31,28,29,32,5,5,5,5,5,5,30,26,27,31,28,29,32,5,5,5,30,26,27,31,28,29,32,26,27,28,29,30,26,27,31,28,29,32,30,26,27,31,28,29,32,30,26,27,31,28,29,32,5,5,5,5,5,0,0,0,0,0,0,0,0,40,36,37,41,38,39,42,40,36,37,41,38,39,42,6,6,36,37,38,39,36,37,38,39,6,6,40,40,36,37,41,38,39,42,40,36,37,41,38,39,42,6,6,6,6,6,6,6,6,40,36,37,41,38,39,42,40,36,37,41,38,39,42,6,6,6,6,6,6,40,36,37,41,38,39,42,6,6,6,40,36,37,41,38,39,42,36,37,38,39,40,36,37,41,38,39,42,40,36,37,41,38,39,42,40,36,37,41,38,39,42,6,6,6,6,6,0,0,0,0,0,0,0,0,47,43,44,48,45,46,49,47,43,44,48,45,46,49,7,7,43,44,45,46,43,44,45,46,7,7,47,47,43,44,48,45,46,49,47,43,44,48,45,46,49,7,7,7,7,7,7,7,7,47,43,44,48,45,46,49,47,43,44,48,45,46,49,7,7,7,7,7,7,47,43,44,48,45,46,49,7,7,7,47,43,44,48,45,46,49,43,44,45,46,47,43,44,48,45,46,49,47,43,44,48,45,46,49,47,43,44,48,45,46,49,7,7,7,7,7,0,0,0,0,0,0,50,0,0,50,0,0,0,50,52,53,50,51,54,55,56,57,58,59,52,53,50,51,54,55,56,57,58,59,8,8,8,8,51,8,52,53,50,51,54,55,56,57,58,59,52,53,50,51,54,55,56,57,58,59,8,52,8,8,8,52,8,8,8,52,53,52,53,50,51,54,55,56,57,58,59,51,54,55,56,57,58,59,52,8,8,8,52,53,50,8,8,8,51,54,55,56,57,58,59,50,50,50,8,52,52,8,8,51,54,55,56,57,58,59,52,53,50,51,54,55,56,57,58,59,52,53,50,51,54,55,56,57,58,59,52,53,50,51,54,55,56,57,58,59,8,8,8,0,0,0,0,0,0,60,0,0,60,0,0,0,60,62,63,60,61,64,65,66,67,68,69,62,63,60,61,64,65,66,67,68,69,10,10,10,10,61,10,62,63,60,61,64,65,66,67,68,69,62,63,60,61,64,65,66,67,68,69,10,62,10,10,10,62,10,10,10,62,63,62,63,60,61,64,65,66,67,68,69,61,64,65,66,67,68,69,62,10,10,10,62,63,60,10,10,10,61,64,65,66,67,68,69,60,60,60,10,62,62,10,10,61,64,65,66,67,68,69,62,63,60,61,64,65,66,67,68,69,62,63,60,61,64,65,66,67,68,69,62,63,60,61,64,65,66,67,68,69,10,10,10,10,10],"f":[0,0,0,0,0,0,0,0,[1,2],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[5,[[0,[3,4]],3]]],[[5,[[0,[3,4]],3]]]],[[[6,[[0,[3,4]],3]]],[[6,[[0,[3,4]],3]]]],[[[7,[[0,[3,4]],3]]],[[7,[[0,[3,4]],3]]]],[[[8,[[0,[3,4]],3]]],[[8,[[0,[3,4]],3]]]],[[[10,[[0,[3,4]],3,[0,[3,9]]]]],[[10,[[0,[3,4]],3,[0,[3,9]]]]]],[1,1],[11,11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[1,1],12],[[11,11],12],[[],1],[11,1],[[],[[5,[4]]]],[[],[[6,[4]]]],[[],[[7,[4]]]],[[],[[8,[4]]]],[[],[[10,[4,[0,[9,13]]]]]],[[],1],[[],11],0,[[[8,[4,14]],[8,[4,14]]],15],[[[10,[4,14,9]],[10,[4,14,9]]],15],[[1,1],15],[[11,11],15],[[],15],[[],15],[[],15],[[],15],[[[8,[4,16]],17]],[[[8,[4]],17]],[[[10,[4,16,9]],17]],[[[10,[4,9]],17]],[[[5,[[0,[18,4]],18]],19],20],[[[6,[[0,[18,4]],18]],19],20],[[[7,[[0,[18,4]],18]],19],20],[[[8,[[0,[18,4]],18]],19],20],[[[10,[[0,[18,4]],18,[0,[18,9]]]],19],20],[[1,19],20],[[11,19],20],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,11],[2,1],[17,[[8,[4]]]],[17,[[10,[4,[0,[9,13]]]]]],[[1,21]],[[11,21]],0,[[[5,[4]],4]],[[[6,[4]],4]],[[[7,[4]],4]],[[[8,[4]],4]],[[[10,[4,9]],4]],[[[5,[4]],4]],[[[6,[4]],4]],[[[7,[4]],4]],[[[8,[4]],4]],[[[10,[4,9]],4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[5,[4]]]],[[[5,[4]]]],[[[5,[4]]]],[[[6,[4]]]],[[[6,[4]]]],[[[6,[4]]]],[[[7,[4]]]],[[[7,[4]]]],[[[7,[4]]]],[[[8,[4]]]],[[[8,[4]]]],[[[8,[4]]]],[[[10,[4,9]]]],[[[10,[4,9]]]],[[[10,[4,9]]]],[[],15],0,[[]],[[1,1],[[22,[12]]]],[[11,11],[[22,[12]]]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[5,[4]]],25],[[[5,[4]]]],[[[26,[[0,[3,4]],3]]],[[26,[[0,[3,4]],3]]]],[[[27,[[0,[3,4]],3]]],[[27,[[0,[3,4]],3]]]],[[[28,[[0,[3,4]],3]]],[[28,[[0,[3,4]],3]]]],[[[29,[[0,[3,4]],3]]],[[29,[[0,[3,4]],3]]]],[[]],[[]],[[]],[[]],[[[5,[4]],4],15],[[[5,[4]]],[[30,[4]]]],[[[30,[4]]]],[[[30,[[0,[18,4]],18]],19],20],[[[26,[[0,[18,4]],18]],19],20],[[[27,[[0,[18,4]],18]],19],20],[[[31,[[0,[18,4]],18]],19],20],[[[28,[[0,[18,4]],18]],19],20],[[[29,[[0,[18,4]],18]],19],20],[[[32,[[0,[18,4]],18]],19],20],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[5,[4]],4],22],[[[5,[4]],[33,[4]]],[[22,[33]]]],[[[5,[4]],[33,[4]]],33],[[[5,[4]],4],22],[[[5,[4]],4]],[[[5,[4]],4]],[[[5,[4]]],4],[[[5,[4]],34],4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[5,[4]]],15],[[[5,[4]]],[[27,[4]]]],[[[5,[4]]],[[31,[4]]]],[[[5,[4]]],[[28,[4]]]],[[[5,[4]]],25],[[],[[5,[11]]]],[[[30,[4]]],22],[[[26,[4]]],22],[[[27,[4]]],22],[[[31,[4]]],22],[[[28,[4]]],[[22,[4]]]],[[[29,[4]]],22],[[[32,[4]]],22],[[[5,[4]],4],22],[[[5,[4]],25]],[[[5,[4]],35]],[[[30,[4]]]],[[[26,[4]]]],[[[27,[4]]]],[[[31,[4]]]],[[[28,[4]]]],[[[29,[4]]]],[[[32,[4]]]],[[]],[[]],[[]],[[]],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[[5,[4]]],[[29,[4]]]],[[[5,[4]]],[[32,[4]]]],[25,[[5,[11]]]],[25,[[5,[4]]]],[[],[[5,[4]]]],0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[6,[4]]],25],[[[6,[4]]]],[[[36,[3,3]]],[[36,[3,3]]]],[[[37,[[0,[3,4]],3]]],[[37,[[0,[3,4]],3]]]],[[[38,[[0,[3,4]],3]]],[[38,[[0,[3,4]],3]]]],[[[39,[[0,[3,4]],3]]],[[39,[[0,[3,4]],3]]]],[[]],[[]],[[]],[[]],[[[6,[4]],4],15],[[[6,[4]]],[[40,[4]]]],[[[40,[4]]]],[[[40,[[0,[18,4]],18]],19],20],[[[36,[18,18]],19],20],[[[37,[[0,[18,4]],18]],19],20],[[[41,[[0,[18,4]],18]],19],20],[[[38,[[0,[18,4]],18]],19],20],[[[39,[[0,[18,4]],18]],19],20],[[[42,[[0,[18,4]],18]],19],20],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[6,[4]],4],22],[[[6,[4]],[33,[4]]],[[22,[33]]]],[[[6,[4]],[33,[4]]],33],[[[6,[4]],4],22],[[[6,[4]],4]],[[[6,[4]],4]],[[[6,[4]]],4],[[[6,[4]],34],4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[6,[4]]],15],[[[6,[4]]],[[37,[4]]]],[[[6,[4]]],[[41,[4]]]],[[[6,[4]]],[[38,[4]]]],[[[6,[4]]],25],[[],[[6,[11]]]],[[[40,[4]]],22],[[[36,[4]]],22],[[[37,[4]]],22],[[[41,[4]]],22],[[[38,[4]]],[[22,[4]]]],[[[39,[4]]],22],[[[42,[4]]],22],[[[6,[4]],4],22],[[[6,[4]],25]],[[[6,[4]],35]],[[[40,[4]]]],[[[36,[4]]]],[[[37,[4]]]],[[[41,[4]]]],[[[38,[4]]]],[[[39,[4]]]],[[[42,[4]]]],[[]],[[]],[[]],[[]],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[[6,[4]]],[[39,[4]]]],[[[6,[4]]],[[42,[4]]]],[25,[[6,[11]]]],[25,[[6,[4]]]],[[],[[6,[4]]]],0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[7,[4]]],25],[[[7,[4]]]],[[[43,[[0,[3,4]],3]]],[[43,[[0,[3,4]],3]]]],[[[44,[[0,[3,4]],3]]],[[44,[[0,[3,4]],3]]]],[[[45,[[0,[3,4]],3]]],[[45,[[0,[3,4]],3]]]],[[[46,[[0,[3,4]],3]]],[[46,[[0,[3,4]],3]]]],[[]],[[]],[[]],[[]],[[[7,[4]],4],15],[[[7,[4]]],[[47,[4]]]],[[[47,[4]]]],[[[47,[[0,[18,4]],18]],19],20],[[[43,[[0,[18,4]],18]],19],20],[[[44,[[0,[18,4]],18]],19],20],[[[48,[[0,[18,4]],18]],19],20],[[[45,[[0,[18,4]],18]],19],20],[[[46,[[0,[18,4]],18]],19],20],[[[49,[[0,[18,4]],18]],19],20],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[7,[4]],4],22],[[[7,[4]],[33,[4]]],[[22,[33]]]],[[[7,[4]],[33,[4]]],33],[[[7,[4]],4],22],[[[7,[4]],4]],[[[7,[4]],4]],[[[7,[4]]],4],[[[7,[4]],34],4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[7,[4]]],15],[[[7,[4]]],[[44,[4]]]],[[[7,[4]]],[[48,[4]]]],[[[7,[4]]],[[45,[4]]]],[[[7,[4]]],25],[[],[[7,[11]]]],[[[47,[4]]],22],[[[43,[4]]],22],[[[44,[4]]],22],[[[48,[4]]],22],[[[45,[4]]],[[22,[4]]]],[[[46,[4]]],22],[[[49,[4]]],22],[[[7,[4]],4],22],[[[7,[4]],25]],[[[7,[4]],35]],[[[47,[4]]]],[[[43,[4]]]],[[[44,[4]]]],[[[48,[4]]]],[[[45,[4]]]],[[[46,[4]]]],[[[49,[4]]]],[[]],[[]],[[]],[[]],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[[7,[4]]],[[46,[4]]]],[[[7,[4]]],[[49,[4]]]],[25,[[7,[11]]]],[25,[[7,[4]]]],[[],[[7,[4]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[[50,[4]],34],[[50,[4]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[8,[4]]],25],[[[8,[4]]]],[[[8,[4]],4],15],[[[8,[4]]],[[51,[4]]]],[[[51,[4]]]],[[[8,[4]],4],[[22,[[50,[4]]]]]],[[[52,[[0,[18,4]],18]],19],20],[[[53,[[0,[18,4]],18]],19],20],[[[50,[[0,[18,4]],18]],19],20],[[[51,[[0,[18,4]],18]],19],20],[[[54,[[0,[18,4]],18]],19],20],[[[55,[[0,[18,4]],18]],19],20],[[[56,[[0,[18,4]],18]],19],20],[[[57,[[0,[18,4]],18]],19],20],[[[58,[[0,[18,4]],18]],19],20],[[[59,[[0,[18,4]],18]],19],20],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[8,[4]],4],22],[[[52,[4]]]],[[[8,[4]],[33,[4]]],[[22,[33]]]],[[[8,[4]],[33,[4]]],33],[[[8,[4]],4],22],[[[52,[4]]]],[[[8,[4]],4]],[[[8,[4]],4]],[[[8,[4]],4],22],[[[52,[4]]]],[[[53,[4]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[52,[4]]]],[[[8,[4]]],15],[[[8,[4]]],[[55,[4]]]],[[[8,[4]]],[[56,[4]]]],[[[52,[4]]],4],[[[53,[4]]],4],[[[50,[4]]],4],[[[8,[4]]],[[57,[4]]]],[[[8,[4]]],25],[[],[[8,[4]]]],[[[51,[4]]],22],[[[54,[4]]],22],[[[55,[4]]],22],[[[56,[4]]],22],[[[57,[4]]],[[22,[4]]]],[[[58,[4]]],22],[[[59,[4]]],22],[[[50,[4,13]]],13],[[[50,[4]]]],[[[50,[4]],34]],[[[8,[4]],4],22],[[[52,[4]]]],[[[52,[4]]]],[[[8,[4]],35]],[[[8,[4]],25]],[[[51,[4]]]],[[[54,[4]]]],[[[55,[4]]]],[[[56,[4]]]],[[[57,[4]]]],[[[58,[4]]]],[[[59,[4]]]],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[[8,[4]]],[[58,[4]]]],[[[8,[4]]],[[59,[4]]]],[25,[[8,[4]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[[60,[4]],34],[[60,[4]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[10,[4,9]]],25],[[[10,[4,9]]]],[[[10,[4,9]],4],15],[[[10,[4,9]]],[[61,[4]]]],[[[61,[4]]]],[[[10,[4,9]],4],[[22,[[60,[4]]]]]],[[[62,[[0,[18,4]],18]],19],20],[[[63,[[0,[18,4]],18]],19],20],[[[60,[[0,[18,4]],18]],19],20],[[[61,[[0,[18,4]],18]],19],20],[[[64,[[0,[18,4]],18]],19],20],[[[65,[[0,[18,4]],18]],19],20],[[[66,[[0,[18,4]],18]],19],20],[[[67,[[0,[18,4]],18]],19],20],[[[68,[[0,[18,4]],18]],19],20],[[[69,[[0,[18,4]],18]],19],20],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[10,[4,9]],4],22],[[[62,[4]]]],[[[10,[4,9]],[33,[4]]],[[22,[33]]]],[[[10,[4,9]],[33,[4]]],33],[[[10,[4,9]],4],22],[[[62,[4]]]],[[[10,[4,9]],4]],[[[10,[4,9]],4]],[[[10,[4,9]],4],22],[[[62,[4]]]],[[[63,[4]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[62,[4]]]],[[[10,[4,9]]],15],[[[10,[4,9]]],[[65,[4]]]],[[[10,[4,9]]],[[66,[4]]]],[[[62,[4]]],4],[[[63,[4]]],4],[[[60,[4]]],4],[[[10,[4,9]]],[[67,[4]]]],[[[10,[4,9]]],25],[[],[[10,[4,70]]]],[[[61,[4]]],22],[[[64,[4]]],22],[[[65,[4]]],22],[[[66,[4]]],22],[[[67,[4]]],[[22,[4]]]],[[[68,[4]]],22],[[[69,[4]]],22],[[[60,[4,13]]],13],[[[60,[4]]]],[[[60,[4]],34]],[[[10,[4,9]],4],22],[[[62,[4]]]],[[[62,[4]]]],[[[10,[4,9]],25]],[[[10,[4,9]],35]],[[[61,[4]]]],[[[64,[4]]]],[[[65,[4]]]],[[[66,[4]]]],[[[67,[4]]]],[[[68,[4]]]],[[[69,[4]]]],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[[10,[4,9]]],[[68,[4]]]],[[[10,[4,9]]],[[69,[4]]]],[25,[[10,[4,70]]]],[[25,9],[[10,[4,9]]]],[9,[[10,[4,9]]]]],"c":[],"p":[[3,"KeyData"],[15,"u64"],[8,"Clone"],[8,"Key"],[3,"SlotMap"],[3,"DenseSlotMap"],[3,"HopSlotMap"],[3,"SecondaryMap"],[8,"BuildHasher"],[3,"SparseSecondaryMap"],[3,"DefaultKey"],[4,"Ordering"],[8,"Default"],[8,"PartialEq"],[15,"bool"],[8,"Copy"],[8,"IntoIterator"],[8,"Debug"],[3,"Formatter"],[6,"Result"],[8,"Hasher"],[4,"Option"],[4,"Result"],[3,"TypeId"],[15,"usize"],[3,"IntoIter"],[3,"Iter"],[3,"Keys"],[3,"Values"],[3,"Drain"],[3,"IterMut"],[3,"ValuesMut"],[15,"array"],[8,"FnOnce"],[8,"FnMut"],[3,"IntoIter"],[3,"Iter"],[3,"Keys"],[3,"Values"],[3,"Drain"],[3,"IterMut"],[3,"ValuesMut"],[3,"IntoIter"],[3,"Iter"],[3,"Keys"],[3,"Values"],[3,"Drain"],[3,"IterMut"],[3,"ValuesMut"],[4,"Entry"],[3,"Drain"],[3,"OccupiedEntry"],[3,"VacantEntry"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"Keys"],[3,"Values"],[3,"ValuesMut"],[4,"Entry"],[3,"Drain"],[3,"OccupiedEntry"],[3,"VacantEntry"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"Keys"],[3,"Values"],[3,"ValuesMut"],[3,"RandomState"]]},\
"smallvec":{"doc":"Small vectors in various sizes. These store a certain …","t":"NINEDDQDILLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLOLLLLKLLLLLLLLLLLLLLLLLLM","n":["AllocErr","Array","CapacityOverflow","CollectionAllocErr","Drain","IntoIter","Item","SmallVec","ToSmallVec","append","as_mut","as_mut_ptr","as_mut_slice","as_mut_slice","as_ptr","as_ref","as_slice","as_slice","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capacity","clear","clone","clone","clone_from","clone_into","clone_into","cmp","dedup","dedup_by","dedup_by_key","default","deref","deref_mut","drain","drop","drop","drop","eq","extend","extend_from_slice","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_buf","from_buf_and_len","from_buf_and_len_unchecked","from_elem","from_iter","from_raw_parts","from_slice","from_vec","grow","hash","index","index_mut","inline_size","insert","insert_from_slice","insert_many","into","into","into","into","into_boxed_slice","into_inner","into_iter","into_iter","into_iter","into_iter","into_iter","into_vec","is_empty","len","len","new","next","next","next_back","next_back","partial_cmp","pop","push","remove","reserve","reserve_exact","resize","resize_with","retain","retain_mut","set_len","shrink_to_fit","size","size_hint","size_hint","smallvec","spilled","swap_remove","to_owned","to_owned","to_smallvec","to_string","truncate","try_from","try_from","try_from","try_from","try_grow","try_into","try_into","try_into","try_into","try_reserve","try_reserve_exact","type_id","type_id","type_id","type_id","with_capacity","layout"],"q":[[0,"smallvec"],[138,"smallvec::CollectionAllocErr"]],"d":["The allocator return an error","Types that can be used as the backing store for a SmallVec","Overflow <code>usize::MAX</code> or other error during size computation","Error type for APIs with fallible heap allocation","An iterator that removes the items from a <code>SmallVec</code> and …","An iterator that consumes a <code>SmallVec</code> and yields its items …","The type of the array’s elements.","A <code>Vec</code>-like container that can store a small number of …","Convenience trait for constructing a <code>SmallVec</code>","Moves all the elements of <code>other</code> into <code>self</code>, leaving <code>other</code> …","","Returns a raw mutable pointer to the vector’s buffer.","Extracts a mutable slice of the entire vector.","Returns the remaining items of this iterator as a mutable …","Returns a raw pointer to the vector’s buffer.","","Extracts a slice containing the entire vector.","Returns the remaining items of this iterator as a slice.","","","","","","","","","","","The number of items the vector can hold without …","Remove all elements from the vector.","","","","","","","Removes consecutive duplicate elements.","Removes consecutive duplicate elements using the given …","Removes consecutive elements that map to the same key.","","","","Creates a draining iterator that removes the specified …","","","","","","Copy elements from a slice and append them to the vector.","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Constructs a new <code>SmallVec</code> on the stack from an <code>A</code> without …","Constructs a new <code>SmallVec</code> on the stack from an <code>A</code> without …","Constructs a new <code>SmallVec</code> on the stack from an <code>A</code> without …","Creates a <code>SmallVec</code> with <code>n</code> copies of <code>elem</code>.","","Creates a <code>SmallVec</code> directly from the raw components of …","Copy the elements from a slice into a new <code>SmallVec</code>.","Construct a new <code>SmallVec</code> from a <code>Vec&lt;A::Item&gt;</code>.","Re-allocate to set the capacity to …","","","","The maximum number of elements this vector can hold inline","Insert an element at position <code>index</code>, shifting all elements …","Copy elements from a slice into the vector at position …","Insert multiple elements at position <code>index</code>, shifting all …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Converts a <code>SmallVec</code> into a <code>Box&lt;[T]&gt;</code> without reallocating …","Convert the SmallVec into an <code>A</code> if possible. Otherwise …","","","","","","Convert a SmallVec to a Vec, without reallocating if the …","Returns <code>true</code> if the vector is empty","","The number of elements stored in the vector","Construct an empty vector","","","","","","Remove an item from the end of the vector and return it, …","Append an item to the vector.","Remove and return the element at position <code>index</code>, shifting …","Reserve capacity for <code>additional</code> more elements to be …","Reserve the minimum capacity for <code>additional</code> more elements …","Resizes the vector so that its length is equal to <code>len</code>.","Resizes the <code>SmallVec</code> in-place so that <code>len</code> is equal to …","Retains only the elements specified by the predicate.","Retains only the elements specified by the predicate.","Sets the length of a vector.","Shrink the capacity of the vector as much as possible.","Returns the number of items the array can hold.","","","Creates a <code>SmallVec</code> containing the arguments.","Returns <code>true</code> if the data has spilled into a separate …","Remove the element at position <code>index</code>, replacing it with …","","","Construct a new <code>SmallVec</code> from a slice.","","Shorten the vector, keeping the first <code>len</code> elements and …","","","","","Re-allocate to set the capacity to …","","","","","Reserve capacity for <code>additional</code> more elements to be …","Reserve the minimum capacity for <code>additional</code> more elements …","","","","","Construct an empty vector with enough capacity …","The layout that was passed to the allocator"],"i":[15,0,15,0,0,0,1,0,0,2,2,2,2,4,2,2,2,4,10,2,2,4,15,10,2,2,4,15,2,2,2,4,2,2,4,2,2,2,2,2,2,2,2,10,2,4,2,2,2,10,2,4,15,15,10,2,2,2,2,2,4,15,15,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,10,2,4,15,2,2,10,2,2,2,4,2,2,10,2,2,10,4,10,4,2,2,2,2,2,2,2,2,2,2,2,2,1,10,4,0,2,2,2,4,27,15,2,10,2,4,15,2,10,2,4,15,2,2,10,2,4,15,2,28],"f":[0,0,0,0,0,0,0,0,0,[[[2,[1]],[2,[1]]]],[[[2,[1]]],3],[[[2,[1]]]],[[[2,[1]]],3],[[[4,[1]]],3],[[[2,[1]]]],[[[2,[1]]],3],[[[2,[1]]],3],[[[4,[1]]],3],[[]],[[]],[[[2,[1]]],3],[[]],[[]],[[]],[[[2,[1]]],3],[[]],[[]],[[]],[[[2,[1]]],5],[[[2,[1]]]],[[[2,[1]]],[[2,[1]]]],[[[4,[[0,[1,6]]]]],[[4,[[0,[1,6]]]]]],[[[2,[1]],[2,[1]]]],[[]],[[]],[[[2,[1]],[2,[1]]],7],[[[2,[1]]]],[[[2,[1]],8]],[[[2,[1]],8]],[[],[[2,[1]]]],[[[2,[1]]],3],[[[2,[1]]],3],[[[2,[1]],[9,[5]]],[[10,[1]]]],[[[10,[1]]]],[[[2,[1]]]],[[[4,[1]]]],[[[2,[1]],[2,[1]]],11],[[[2,[1]],12]],[[[2,[1]],3]],[[[10,[1]],13],14],[[[2,[1]],13],14],[[[4,[1]],13],14],[[15,13],14],[[15,13],14],[[]],[[]],[16],[3,[[2,[1]]]],[17,[[2,[1]]]],[1,[[2,[1]]]],[[]],[[]],[18,15],[1,[[2,[1]]]],[[1,5],[[2,[1]]]],[[[19,[1]],5],[[2,[1]]]],[5,[[2,[1]]]],[12,[[2,[1]]]],[[5,5],[[2,[1]]]],[3,[[2,[1]]]],[17,[[2,[1]]]],[[[2,[1]],5]],[[[2,[1]],20]],[[[2,[1]],[21,[3]]]],[[[2,[1]],[21,[3]]]],[[[2,[1]]],5],[[[2,[1]],5]],[[[2,[1]],5,3]],[[[2,[1]],5,12]],[[]],[[]],[[]],[[]],[[[2,[1]]],[[22,[3]]]],[[[2,[1]]],[[23,[1,[2,[1]]]]]],[[]],[[[2,[1]]]],[[[2,[1]]]],[[[2,[1]]]],[[]],[[[2,[1]]],17],[[[2,[1]]],11],[[[10,[1]]],5],[[[2,[1]]],5],[[],[[2,[1]]]],[[[10,[1]]],24],[[[4,[1]]],24],[[[10,[1]]],24],[[[4,[1]]],24],[[[2,[1]],[2,[1]]],[[24,[7]]]],[[[2,[1]]],24],[[[2,[1]]]],[[[2,[1]],5]],[[[2,[1]],5]],[[[2,[1]],5]],[[[2,[1]],5]],[[[2,[1]],5,8]],[[[2,[1]],8]],[[[2,[1]],8]],[[[2,[1]],5]],[[[2,[1]]]],[[],5],[[[10,[1]]]],[[[4,[1]]]],0,[[[2,[1]]],11],[[[2,[1]],5]],[[]],[[]],[[],2],[[],25],[[[2,[1]],5]],[[],23],[[],23],[[],23],[[],23],[[[2,[1]],5],[[23,[15]]]],[[],23],[[],23],[[],23],[[],23],[[[2,[1]],5],[[23,[15]]]],[[[2,[1]],5],[[23,[15]]]],[[],26],[[],26],[[],26],[[],26],[5,[[2,[1]]]],0],"c":[],"p":[[8,"Array"],[3,"SmallVec"],[15,"slice"],[3,"IntoIter"],[15,"usize"],[8,"Clone"],[4,"Ordering"],[8,"FnMut"],[8,"RangeBounds"],[3,"Drain"],[15,"bool"],[8,"IntoIterator"],[3,"Formatter"],[6,"Result"],[4,"CollectionAllocErr"],[15,"never"],[3,"Vec"],[6,"LayoutErr"],[19,"MaybeUninit"],[8,"Hasher"],[8,"SliceIndex"],[3,"Box"],[4,"Result"],[4,"Option"],[3,"String"],[3,"TypeId"],[8,"ToSmallVec"],[13,"AllocErr"]]},\
"smithay_client_toolkit":{"doc":"Smithay Client Toolkit","t":"DDLLLLLLAOAOLLLLLFFLLLOALLALLLLALLAAALLLLLLLLLANSNSDDIDDEDENNNNNNSSDNNDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLMMMMMMMMMMMMMMDIIIDLLLLLLLLLLLLLKKLLLLLKLKLLLLLLLLLLMLLLLLKKLLLLLLLLLLLLLNNNNNNDNNDIDDDEENNNDNNNFLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLMMKLMMMMMLLLMMMLMMLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLFNNDEDIDDENNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLMMCCCDDIDLLLLLLLLFLMLLLLLLLMMMLLLAKLMLALLLLLLLLLLLFNNEENNENNDNNDNNEDNNNMLLLLLLLLLLLLLLMLLLLMLLLLLLLLLLLLLLLLLLLLLLLLAMMFFMMMLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRNNDEDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMNNNENNNEDIIENNNNNNNLLLLLLLLLLLLLLLLLLLLKLKLLLKLLKKKKKKKKKKLLLLLLLLLLKKMMNNNNNNNNNNNNDNNNNNNNNNNNNNNNNNDENNDNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNDINNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLNNENNNQNENQEDNIENNNNNNNNNNNNNNNENNNNNDEKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLKLKLLKLKLLLKLLLLKLLLLLKLLKLKLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMM","n":["MissingGlobal","WaylandSource","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","data_device","default_environment","environment","environment","fmt","fmt","fmt","from","from","get_surface_outputs","get_surface_scale_factor","into","into","new","new_default_environment","output","post_run","pre_run","primary_selection","process_events","provide","queue","quick_insert","reexports","register","reregister","seat","shell","shm","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","unregister","window","Action","Ask","Cancelled","Copy","DataDevice","DataDeviceHandler","DataDeviceHandling","DataOffer","DataSource","DataSourceEvent","DndAction","DndEvent","Drop","Dropped","Enter","Finished","Leave","Motion","Move","None","ReadPipe","Send","Target","WritePipe","accept","all","as_raw_fd","as_raw_fd","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","cmp","complement","contains","created","difference","drop","drop","empty","eq","equivalent","extend","finish","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","from_raw","from_raw_fd","from_raw_fd","get","get_available_actions","get_current_action","hash","init","init_for_seat","insert","intersection","intersects","into","into","into","into","into","into","into","into","into","into_raw_fd","into_raw_fd","is_all","is_empty","new","not","partial_cmp","process_events","read","receive","receive_to_fd","register","remove","reregister","set","set_actions","set_callback","set_callback","set_selection","start_drag","sub","sub_assign","symmetric_difference","to_owned","to_raw","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","unregister","with_device","with_device","with_dnd","with_mime_types","with_selection","write","action","mime_type","mime_type","pipe","offer","offer","offer","serial","surface","time","x","x","y","y","Environment","GlobalHandler","InnerEnv","MultiGlobalHandler","SimpleGlobal","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","create_auto_pool","create_double_pool","create_shell_surface","create_simple_pool","create_surface","create_surface_with_scale_callback","create_window","created","created","created","fmt","fmt","from","from","get","get","get_all","get_all_globals","get_all_outputs","get_all_seats","get_global","get_primary_selection_manager","get_shell","into","into","listen_for_outputs","listen_for_seats","manager","new","new","new_data_source","new_pending","new_primary_selection_source","process_event","removed","require_global","set_data_device_callback","shm_formats","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","with_data_device","with_inner","with_primary_selection","Flipped","Flipped180","Flipped270","Flipped90","HorizontalBgr","HorizontalRgb","Mode","None","Normal","OutputHandler","OutputHandling","OutputInfo","OutputListener","OutputStatusListener","Subpixel","Transform","Unknown","VerticalBgr","VerticalRgb","XdgOutputHandler","_180","_270","_90","add_output_listener","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","created","created","description","dimensions","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_raw","from_raw","get","get_all","id","into","into","into","into","into","into","into","into","is_current","is_preferred","listen","listen","location","make","model","modes","name","new","new","new_output_handlers","obsolete","physical_size","refresh_rate","removed","scale_factor","subpixel","to_owned","to_owned","to_owned","to_owned","to_raw","to_raw","transform","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","with_output_info","Cancelled","Gtk","PrimarySelectionDevice","PrimarySelectionDeviceManager","PrimarySelectionHandler","PrimarySelectionHandling","PrimarySelectionOffer","PrimarySelectionSource","PrimarySelectionSourceEvent","Send","Zwp","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","created","created","drop","drop","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","get","get","get_primary_selection_manager","get_primary_selection_manager","init","init_for_seat","into","into","into","into","into","into","new","receive","set_selection","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","with_mime_types","with_primary_selection","with_primary_selection","with_selection","mime_type","pipe","calloop","client","protocols","SeatData","SeatHandler","SeatHandling","SeatListener","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","clone_seat_data","created","defunct","fmt","fmt","fmt","from","from","from","get_all","has_keyboard","has_pointer","has_touch","into","into","into","keyboard","listen","listen","name","new","pointer","removed","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","with_seat_data","BadNames","Enter","Error","Event","Fixed","Key","KeyState","Leave","Modifiers","ModifiersState","NoKeyboard","Pressed","RMLVO","Released","Repeat","RepeatKind","RepeatSource","System","TimerError","XKBNotFound","alt","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","caps_lock","clone","clone","clone_into","clone_into","ctrl","default","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_raw","into","into","into","into","into","into","into","keysyms","layout","logo","map_keyboard","map_keyboard_repeat","model","num_lock","options","process_events","register","reregister","rules","shift","to_owned","to_owned","to_raw","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unregister","variant","keysym","keysym","keysyms","modifiers","rawkey","rawkey","rawkeys","serial","serial","serial","state","surface","surface","time","time","utf8","utf8","delay","rate","XKB_KEY_0","XKB_KEY_1","XKB_KEY_2","XKB_KEY_3","XKB_KEY_3270_AltCursor","XKB_KEY_3270_Attn","XKB_KEY_3270_BackTab","XKB_KEY_3270_ChangeScreen","XKB_KEY_3270_Copy","XKB_KEY_3270_CursorBlink","XKB_KEY_3270_CursorSelect","XKB_KEY_3270_DeleteWord","XKB_KEY_3270_Duplicate","XKB_KEY_3270_Enter","XKB_KEY_3270_EraseEOF","XKB_KEY_3270_EraseInput","XKB_KEY_3270_ExSelect","XKB_KEY_3270_FieldMark","XKB_KEY_3270_Ident","XKB_KEY_3270_Jump","XKB_KEY_3270_KeyClick","XKB_KEY_3270_Left2","XKB_KEY_3270_PA1","XKB_KEY_3270_PA2","XKB_KEY_3270_PA3","XKB_KEY_3270_Play","XKB_KEY_3270_PrintScreen","XKB_KEY_3270_Quit","XKB_KEY_3270_Record","XKB_KEY_3270_Reset","XKB_KEY_3270_Right2","XKB_KEY_3270_Rule","XKB_KEY_3270_Setup","XKB_KEY_3270_Test","XKB_KEY_4","XKB_KEY_5","XKB_KEY_6","XKB_KEY_7","XKB_KEY_8","XKB_KEY_9","XKB_KEY_A","XKB_KEY_AE","XKB_KEY_Aacute","XKB_KEY_Abelowdot","XKB_KEY_Abreve","XKB_KEY_Abreveacute","XKB_KEY_Abrevebelowdot","XKB_KEY_Abrevegrave","XKB_KEY_Abrevehook","XKB_KEY_Abrevetilde","XKB_KEY_AccessX_Enable","XKB_KEY_AccessX_Feedback_Enable","XKB_KEY_Acircumflex","XKB_KEY_Acircumflexacute","XKB_KEY_Acircumflexbelowdot","XKB_KEY_Acircumflexgrave","XKB_KEY_Acircumflexhook","XKB_KEY_Acircumflextilde","XKB_KEY_Adiaeresis","XKB_KEY_Agrave","XKB_KEY_Ahook","XKB_KEY_Alt_L","XKB_KEY_Alt_R","XKB_KEY_Amacron","XKB_KEY_Aogonek","XKB_KEY_Arabic_0","XKB_KEY_Arabic_1","XKB_KEY_Arabic_2","XKB_KEY_Arabic_3","XKB_KEY_Arabic_4","XKB_KEY_Arabic_5","XKB_KEY_Arabic_6","XKB_KEY_Arabic_7","XKB_KEY_Arabic_8","XKB_KEY_Arabic_9","XKB_KEY_Arabic_ain","XKB_KEY_Arabic_alef","XKB_KEY_Arabic_alefmaksura","XKB_KEY_Arabic_beh","XKB_KEY_Arabic_comma","XKB_KEY_Arabic_dad","XKB_KEY_Arabic_dal","XKB_KEY_Arabic_damma","XKB_KEY_Arabic_dammatan","XKB_KEY_Arabic_ddal","XKB_KEY_Arabic_farsi_yeh","XKB_KEY_Arabic_fatha","XKB_KEY_Arabic_fathatan","XKB_KEY_Arabic_feh","XKB_KEY_Arabic_fullstop","XKB_KEY_Arabic_gaf","XKB_KEY_Arabic_ghain","XKB_KEY_Arabic_ha","XKB_KEY_Arabic_hah","XKB_KEY_Arabic_hamza","XKB_KEY_Arabic_hamza_above","XKB_KEY_Arabic_hamza_below","XKB_KEY_Arabic_hamzaonalef","XKB_KEY_Arabic_hamzaonwaw","XKB_KEY_Arabic_hamzaonyeh","XKB_KEY_Arabic_hamzaunderalef","XKB_KEY_Arabic_heh","XKB_KEY_Arabic_heh_doachashmee","XKB_KEY_Arabic_heh_goal","XKB_KEY_Arabic_jeem","XKB_KEY_Arabic_jeh","XKB_KEY_Arabic_kaf","XKB_KEY_Arabic_kasra","XKB_KEY_Arabic_kasratan","XKB_KEY_Arabic_keheh","XKB_KEY_Arabic_khah","XKB_KEY_Arabic_lam","XKB_KEY_Arabic_madda_above","XKB_KEY_Arabic_maddaonalef","XKB_KEY_Arabic_meem","XKB_KEY_Arabic_noon","XKB_KEY_Arabic_noon_ghunna","XKB_KEY_Arabic_peh","XKB_KEY_Arabic_percent","XKB_KEY_Arabic_qaf","XKB_KEY_Arabic_question_mark","XKB_KEY_Arabic_ra","XKB_KEY_Arabic_rreh","XKB_KEY_Arabic_sad","XKB_KEY_Arabic_seen","XKB_KEY_Arabic_semicolon","XKB_KEY_Arabic_shadda","XKB_KEY_Arabic_sheen","XKB_KEY_Arabic_sukun","XKB_KEY_Arabic_superscript_alef","XKB_KEY_Arabic_switch","XKB_KEY_Arabic_tah","XKB_KEY_Arabic_tatweel","XKB_KEY_Arabic_tcheh","XKB_KEY_Arabic_teh","XKB_KEY_Arabic_tehmarbuta","XKB_KEY_Arabic_thal","XKB_KEY_Arabic_theh","XKB_KEY_Arabic_tteh","XKB_KEY_Arabic_veh","XKB_KEY_Arabic_waw","XKB_KEY_Arabic_yeh","XKB_KEY_Arabic_yeh_baree","XKB_KEY_Arabic_zah","XKB_KEY_Arabic_zain","XKB_KEY_Aring","XKB_KEY_Armenian_AT","XKB_KEY_Armenian_AYB","XKB_KEY_Armenian_BEN","XKB_KEY_Armenian_CHA","XKB_KEY_Armenian_DA","XKB_KEY_Armenian_DZA","XKB_KEY_Armenian_E","XKB_KEY_Armenian_FE","XKB_KEY_Armenian_GHAT","XKB_KEY_Armenian_GIM","XKB_KEY_Armenian_HI","XKB_KEY_Armenian_HO","XKB_KEY_Armenian_INI","XKB_KEY_Armenian_JE","XKB_KEY_Armenian_KE","XKB_KEY_Armenian_KEN","XKB_KEY_Armenian_KHE","XKB_KEY_Armenian_LYUN","XKB_KEY_Armenian_MEN","XKB_KEY_Armenian_NU","XKB_KEY_Armenian_O","XKB_KEY_Armenian_PE","XKB_KEY_Armenian_PYUR","XKB_KEY_Armenian_RA","XKB_KEY_Armenian_RE","XKB_KEY_Armenian_SE","XKB_KEY_Armenian_SHA","XKB_KEY_Armenian_TCHE","XKB_KEY_Armenian_TO","XKB_KEY_Armenian_TSA","XKB_KEY_Armenian_TSO","XKB_KEY_Armenian_TYUN","XKB_KEY_Armenian_VEV","XKB_KEY_Armenian_VO","XKB_KEY_Armenian_VYUN","XKB_KEY_Armenian_YECH","XKB_KEY_Armenian_ZA","XKB_KEY_Armenian_ZHE","XKB_KEY_Armenian_accent","XKB_KEY_Armenian_amanak","XKB_KEY_Armenian_apostrophe","XKB_KEY_Armenian_at","XKB_KEY_Armenian_ayb","XKB_KEY_Armenian_ben","XKB_KEY_Armenian_but","XKB_KEY_Armenian_cha","XKB_KEY_Armenian_da","XKB_KEY_Armenian_dza","XKB_KEY_Armenian_e","XKB_KEY_Armenian_exclam","XKB_KEY_Armenian_fe","XKB_KEY_Armenian_full_stop","XKB_KEY_Armenian_ghat","XKB_KEY_Armenian_gim","XKB_KEY_Armenian_hi","XKB_KEY_Armenian_ho","XKB_KEY_Armenian_hyphen","XKB_KEY_Armenian_ini","XKB_KEY_Armenian_je","XKB_KEY_Armenian_ke","XKB_KEY_Armenian_ken","XKB_KEY_Armenian_khe","XKB_KEY_Armenian_ligature_ew","XKB_KEY_Armenian_lyun","XKB_KEY_Armenian_men","XKB_KEY_Armenian_nu","XKB_KEY_Armenian_o","XKB_KEY_Armenian_paruyk","XKB_KEY_Armenian_pe","XKB_KEY_Armenian_pyur","XKB_KEY_Armenian_question","XKB_KEY_Armenian_ra","XKB_KEY_Armenian_re","XKB_KEY_Armenian_se","XKB_KEY_Armenian_separation_mark","XKB_KEY_Armenian_sha","XKB_KEY_Armenian_shesht","XKB_KEY_Armenian_tche","XKB_KEY_Armenian_to","XKB_KEY_Armenian_tsa","XKB_KEY_Armenian_tso","XKB_KEY_Armenian_tyun","XKB_KEY_Armenian_verjaket","XKB_KEY_Armenian_vev","XKB_KEY_Armenian_vo","XKB_KEY_Armenian_vyun","XKB_KEY_Armenian_yech","XKB_KEY_Armenian_yentamna","XKB_KEY_Armenian_za","XKB_KEY_Armenian_zhe","XKB_KEY_Atilde","XKB_KEY_AudibleBell_Enable","XKB_KEY_B","XKB_KEY_Babovedot","XKB_KEY_BackSpace","XKB_KEY_BackTab","XKB_KEY_Begin","XKB_KEY_BounceKeys_Enable","XKB_KEY_Break","XKB_KEY_Byelorussian_SHORTU","XKB_KEY_Byelorussian_shortu","XKB_KEY_C","XKB_KEY_CH","XKB_KEY_C_H","XKB_KEY_C_h","XKB_KEY_Cabovedot","XKB_KEY_Cacute","XKB_KEY_Cancel","XKB_KEY_Caps_Lock","XKB_KEY_Ccaron","XKB_KEY_Ccedilla","XKB_KEY_Ccircumflex","XKB_KEY_Ch","XKB_KEY_Clear","XKB_KEY_ClearLine","XKB_KEY_Codeinput","XKB_KEY_ColonSign","XKB_KEY_Control_L","XKB_KEY_Control_R","XKB_KEY_CruzeiroSign","XKB_KEY_Cyrillic_A","XKB_KEY_Cyrillic_BE","XKB_KEY_Cyrillic_CHE","XKB_KEY_Cyrillic_CHE_descender","XKB_KEY_Cyrillic_CHE_vertstroke","XKB_KEY_Cyrillic_DE","XKB_KEY_Cyrillic_DZHE","XKB_KEY_Cyrillic_E","XKB_KEY_Cyrillic_EF","XKB_KEY_Cyrillic_EL","XKB_KEY_Cyrillic_EM","XKB_KEY_Cyrillic_EN","XKB_KEY_Cyrillic_EN_descender","XKB_KEY_Cyrillic_ER","XKB_KEY_Cyrillic_ES","XKB_KEY_Cyrillic_GHE","XKB_KEY_Cyrillic_GHE_bar","XKB_KEY_Cyrillic_HA","XKB_KEY_Cyrillic_HARDSIGN","XKB_KEY_Cyrillic_HA_descender","XKB_KEY_Cyrillic_I","XKB_KEY_Cyrillic_IE","XKB_KEY_Cyrillic_IO","XKB_KEY_Cyrillic_I_macron","XKB_KEY_Cyrillic_JE","XKB_KEY_Cyrillic_KA","XKB_KEY_Cyrillic_KA_descender","XKB_KEY_Cyrillic_KA_vertstroke","XKB_KEY_Cyrillic_LJE","XKB_KEY_Cyrillic_NJE","XKB_KEY_Cyrillic_O","XKB_KEY_Cyrillic_O_bar","XKB_KEY_Cyrillic_PE","XKB_KEY_Cyrillic_SCHWA","XKB_KEY_Cyrillic_SHA","XKB_KEY_Cyrillic_SHCHA","XKB_KEY_Cyrillic_SHHA","XKB_KEY_Cyrillic_SHORTI","XKB_KEY_Cyrillic_SOFTSIGN","XKB_KEY_Cyrillic_TE","XKB_KEY_Cyrillic_TSE","XKB_KEY_Cyrillic_U","XKB_KEY_Cyrillic_U_macron","XKB_KEY_Cyrillic_U_straight","XKB_KEY_Cyrillic_U_straight_bar","XKB_KEY_Cyrillic_VE","XKB_KEY_Cyrillic_YA","XKB_KEY_Cyrillic_YERU","XKB_KEY_Cyrillic_YU","XKB_KEY_Cyrillic_ZE","XKB_KEY_Cyrillic_ZHE","XKB_KEY_Cyrillic_ZHE_descender","XKB_KEY_Cyrillic_a","XKB_KEY_Cyrillic_be","XKB_KEY_Cyrillic_che","XKB_KEY_Cyrillic_che_descender","XKB_KEY_Cyrillic_che_vertstroke","XKB_KEY_Cyrillic_de","XKB_KEY_Cyrillic_dzhe","XKB_KEY_Cyrillic_e","XKB_KEY_Cyrillic_ef","XKB_KEY_Cyrillic_el","XKB_KEY_Cyrillic_em","XKB_KEY_Cyrillic_en","XKB_KEY_Cyrillic_en_descender","XKB_KEY_Cyrillic_er","XKB_KEY_Cyrillic_es","XKB_KEY_Cyrillic_ghe","XKB_KEY_Cyrillic_ghe_bar","XKB_KEY_Cyrillic_ha","XKB_KEY_Cyrillic_ha_descender","XKB_KEY_Cyrillic_hardsign","XKB_KEY_Cyrillic_i","XKB_KEY_Cyrillic_i_macron","XKB_KEY_Cyrillic_ie","XKB_KEY_Cyrillic_io","XKB_KEY_Cyrillic_je","XKB_KEY_Cyrillic_ka","XKB_KEY_Cyrillic_ka_descender","XKB_KEY_Cyrillic_ka_vertstroke","XKB_KEY_Cyrillic_lje","XKB_KEY_Cyrillic_nje","XKB_KEY_Cyrillic_o","XKB_KEY_Cyrillic_o_bar","XKB_KEY_Cyrillic_pe","XKB_KEY_Cyrillic_schwa","XKB_KEY_Cyrillic_sha","XKB_KEY_Cyrillic_shcha","XKB_KEY_Cyrillic_shha","XKB_KEY_Cyrillic_shorti","XKB_KEY_Cyrillic_softsign","XKB_KEY_Cyrillic_te","XKB_KEY_Cyrillic_tse","XKB_KEY_Cyrillic_u","XKB_KEY_Cyrillic_u_macron","XKB_KEY_Cyrillic_u_straight","XKB_KEY_Cyrillic_u_straight_bar","XKB_KEY_Cyrillic_ve","XKB_KEY_Cyrillic_ya","XKB_KEY_Cyrillic_yeru","XKB_KEY_Cyrillic_yu","XKB_KEY_Cyrillic_ze","XKB_KEY_Cyrillic_zhe","XKB_KEY_Cyrillic_zhe_descender","XKB_KEY_D","XKB_KEY_DRemove","XKB_KEY_Dabovedot","XKB_KEY_Dacute_accent","XKB_KEY_Dcaron","XKB_KEY_Dcedilla_accent","XKB_KEY_Dcircumflex_accent","XKB_KEY_Ddiaeresis","XKB_KEY_Delete","XKB_KEY_DeleteChar","XKB_KEY_DeleteLine","XKB_KEY_Dgrave_accent","XKB_KEY_DongSign","XKB_KEY_Down","XKB_KEY_Dring_accent","XKB_KEY_Dstroke","XKB_KEY_Dtilde","XKB_KEY_E","XKB_KEY_ENG","XKB_KEY_ETH","XKB_KEY_EZH","XKB_KEY_Eabovedot","XKB_KEY_Eacute","XKB_KEY_Ebelowdot","XKB_KEY_Ecaron","XKB_KEY_Ecircumflex","XKB_KEY_Ecircumflexacute","XKB_KEY_Ecircumflexbelowdot","XKB_KEY_Ecircumflexgrave","XKB_KEY_Ecircumflexhook","XKB_KEY_Ecircumflextilde","XKB_KEY_EcuSign","XKB_KEY_Ediaeresis","XKB_KEY_Egrave","XKB_KEY_Ehook","XKB_KEY_Eisu_Shift","XKB_KEY_Eisu_toggle","XKB_KEY_Emacron","XKB_KEY_End","XKB_KEY_Eogonek","XKB_KEY_Escape","XKB_KEY_Eth","XKB_KEY_Etilde","XKB_KEY_EuroSign","XKB_KEY_Execute","XKB_KEY_Ext16bit_L","XKB_KEY_Ext16bit_R","XKB_KEY_F","XKB_KEY_F1","XKB_KEY_F10","XKB_KEY_F11","XKB_KEY_F12","XKB_KEY_F13","XKB_KEY_F14","XKB_KEY_F15","XKB_KEY_F16","XKB_KEY_F17","XKB_KEY_F18","XKB_KEY_F19","XKB_KEY_F2","XKB_KEY_F20","XKB_KEY_F21","XKB_KEY_F22","XKB_KEY_F23","XKB_KEY_F24","XKB_KEY_F25","XKB_KEY_F26","XKB_KEY_F27","XKB_KEY_F28","XKB_KEY_F29","XKB_KEY_F3","XKB_KEY_F30","XKB_KEY_F31","XKB_KEY_F32","XKB_KEY_F33","XKB_KEY_F34","XKB_KEY_F35","XKB_KEY_F4","XKB_KEY_F5","XKB_KEY_F6","XKB_KEY_F7","XKB_KEY_F8","XKB_KEY_F9","XKB_KEY_FFrancSign","XKB_KEY_Fabovedot","XKB_KEY_Farsi_0","XKB_KEY_Farsi_1","XKB_KEY_Farsi_2","XKB_KEY_Farsi_3","XKB_KEY_Farsi_4","XKB_KEY_Farsi_5","XKB_KEY_Farsi_6","XKB_KEY_Farsi_7","XKB_KEY_Farsi_8","XKB_KEY_Farsi_9","XKB_KEY_Farsi_yeh","XKB_KEY_Find","XKB_KEY_First_Virtual_Screen","XKB_KEY_G","XKB_KEY_Gabovedot","XKB_KEY_Gbreve","XKB_KEY_Gcaron","XKB_KEY_Gcedilla","XKB_KEY_Gcircumflex","XKB_KEY_Georgian_an","XKB_KEY_Georgian_ban","XKB_KEY_Georgian_can","XKB_KEY_Georgian_char","XKB_KEY_Georgian_chin","XKB_KEY_Georgian_cil","XKB_KEY_Georgian_don","XKB_KEY_Georgian_en","XKB_KEY_Georgian_fi","XKB_KEY_Georgian_gan","XKB_KEY_Georgian_ghan","XKB_KEY_Georgian_hae","XKB_KEY_Georgian_har","XKB_KEY_Georgian_he","XKB_KEY_Georgian_hie","XKB_KEY_Georgian_hoe","XKB_KEY_Georgian_in","XKB_KEY_Georgian_jhan","XKB_KEY_Georgian_jil","XKB_KEY_Georgian_kan","XKB_KEY_Georgian_khar","XKB_KEY_Georgian_las","XKB_KEY_Georgian_man","XKB_KEY_Georgian_nar","XKB_KEY_Georgian_on","XKB_KEY_Georgian_par","XKB_KEY_Georgian_phar","XKB_KEY_Georgian_qar","XKB_KEY_Georgian_rae","XKB_KEY_Georgian_san","XKB_KEY_Georgian_shin","XKB_KEY_Georgian_tan","XKB_KEY_Georgian_tar","XKB_KEY_Georgian_un","XKB_KEY_Georgian_vin","XKB_KEY_Georgian_we","XKB_KEY_Georgian_xan","XKB_KEY_Georgian_zen","XKB_KEY_Georgian_zhar","XKB_KEY_Greek_ALPHA","XKB_KEY_Greek_ALPHAaccent","XKB_KEY_Greek_BETA","XKB_KEY_Greek_CHI","XKB_KEY_Greek_DELTA","XKB_KEY_Greek_EPSILON","XKB_KEY_Greek_EPSILONaccent","XKB_KEY_Greek_ETA","XKB_KEY_Greek_ETAaccent","XKB_KEY_Greek_GAMMA","XKB_KEY_Greek_IOTA","XKB_KEY_Greek_IOTAaccent","XKB_KEY_Greek_IOTAdiaeresis","XKB_KEY_Greek_IOTAdieresis","XKB_KEY_Greek_KAPPA","XKB_KEY_Greek_LAMBDA","XKB_KEY_Greek_LAMDA","XKB_KEY_Greek_MU","XKB_KEY_Greek_NU","XKB_KEY_Greek_OMEGA","XKB_KEY_Greek_OMEGAaccent","XKB_KEY_Greek_OMICRON","XKB_KEY_Greek_OMICRONaccent","XKB_KEY_Greek_PHI","XKB_KEY_Greek_PI","XKB_KEY_Greek_PSI","XKB_KEY_Greek_RHO","XKB_KEY_Greek_SIGMA","XKB_KEY_Greek_TAU","XKB_KEY_Greek_THETA","XKB_KEY_Greek_UPSILON","XKB_KEY_Greek_UPSILONaccent","XKB_KEY_Greek_UPSILONdieresis","XKB_KEY_Greek_XI","XKB_KEY_Greek_ZETA","XKB_KEY_Greek_accentdieresis","XKB_KEY_Greek_alpha","XKB_KEY_Greek_alphaaccent","XKB_KEY_Greek_beta","XKB_KEY_Greek_chi","XKB_KEY_Greek_delta","XKB_KEY_Greek_epsilon","XKB_KEY_Greek_epsilonaccent","XKB_KEY_Greek_eta","XKB_KEY_Greek_etaaccent","XKB_KEY_Greek_finalsmallsigma","XKB_KEY_Greek_gamma","XKB_KEY_Greek_horizbar","XKB_KEY_Greek_iota","XKB_KEY_Greek_iotaaccent","XKB_KEY_Greek_iotaaccentdieresis","XKB_KEY_Greek_iotadieresis","XKB_KEY_Greek_kappa","XKB_KEY_Greek_lambda","XKB_KEY_Greek_lamda","XKB_KEY_Greek_mu","XKB_KEY_Greek_nu","XKB_KEY_Greek_omega","XKB_KEY_Greek_omegaaccent","XKB_KEY_Greek_omicron","XKB_KEY_Greek_omicronaccent","XKB_KEY_Greek_phi","XKB_KEY_Greek_pi","XKB_KEY_Greek_psi","XKB_KEY_Greek_rho","XKB_KEY_Greek_sigma","XKB_KEY_Greek_switch","XKB_KEY_Greek_tau","XKB_KEY_Greek_theta","XKB_KEY_Greek_upsilon","XKB_KEY_Greek_upsilonaccent","XKB_KEY_Greek_upsilonaccentdieresis","XKB_KEY_Greek_upsilondieresis","XKB_KEY_Greek_xi","XKB_KEY_Greek_zeta","XKB_KEY_H","XKB_KEY_Hangul","XKB_KEY_Hangul_A","XKB_KEY_Hangul_AE","XKB_KEY_Hangul_AraeA","XKB_KEY_Hangul_AraeAE","XKB_KEY_Hangul_Banja","XKB_KEY_Hangul_Cieuc","XKB_KEY_Hangul_Codeinput","XKB_KEY_Hangul_Dikeud","XKB_KEY_Hangul_E","XKB_KEY_Hangul_EO","XKB_KEY_Hangul_EU","XKB_KEY_Hangul_End","XKB_KEY_Hangul_Hanja","XKB_KEY_Hangul_Hieuh","XKB_KEY_Hangul_I","XKB_KEY_Hangul_Ieung","XKB_KEY_Hangul_J_Cieuc","XKB_KEY_Hangul_J_Dikeud","XKB_KEY_Hangul_J_Hieuh","XKB_KEY_Hangul_J_Ieung","XKB_KEY_Hangul_J_Jieuj","XKB_KEY_Hangul_J_Khieuq","XKB_KEY_Hangul_J_Kiyeog","XKB_KEY_Hangul_J_KiyeogSios","XKB_KEY_Hangul_J_KkogjiDalrinIeung","XKB_KEY_Hangul_J_Mieum","XKB_KEY_Hangul_J_Nieun","XKB_KEY_Hangul_J_NieunHieuh","XKB_KEY_Hangul_J_NieunJieuj","XKB_KEY_Hangul_J_PanSios","XKB_KEY_Hangul_J_Phieuf","XKB_KEY_Hangul_J_Pieub","XKB_KEY_Hangul_J_PieubSios","XKB_KEY_Hangul_J_Rieul","XKB_KEY_Hangul_J_RieulHieuh","XKB_KEY_Hangul_J_RieulKiyeog","XKB_KEY_Hangul_J_RieulMieum","XKB_KEY_Hangul_J_RieulPhieuf","XKB_KEY_Hangul_J_RieulPieub","XKB_KEY_Hangul_J_RieulSios","XKB_KEY_Hangul_J_RieulTieut","XKB_KEY_Hangul_J_Sios","XKB_KEY_Hangul_J_SsangKiyeog","XKB_KEY_Hangul_J_SsangSios","XKB_KEY_Hangul_J_Tieut","XKB_KEY_Hangul_J_YeorinHieuh","XKB_KEY_Hangul_Jamo","XKB_KEY_Hangul_Jeonja","XKB_KEY_Hangul_Jieuj","XKB_KEY_Hangul_Khieuq","XKB_KEY_Hangul_Kiyeog","XKB_KEY_Hangul_KiyeogSios","XKB_KEY_Hangul_KkogjiDalrinIeung","XKB_KEY_Hangul_Mieum","XKB_KEY_Hangul_MultipleCandidate","XKB_KEY_Hangul_Nieun","XKB_KEY_Hangul_NieunHieuh","XKB_KEY_Hangul_NieunJieuj","XKB_KEY_Hangul_O","XKB_KEY_Hangul_OE","XKB_KEY_Hangul_PanSios","XKB_KEY_Hangul_Phieuf","XKB_KEY_Hangul_Pieub","XKB_KEY_Hangul_PieubSios","XKB_KEY_Hangul_PostHanja","XKB_KEY_Hangul_PreHanja","XKB_KEY_Hangul_PreviousCandidate","XKB_KEY_Hangul_Rieul","XKB_KEY_Hangul_RieulHieuh","XKB_KEY_Hangul_RieulKiyeog","XKB_KEY_Hangul_RieulMieum","XKB_KEY_Hangul_RieulPhieuf","XKB_KEY_Hangul_RieulPieub","XKB_KEY_Hangul_RieulSios","XKB_KEY_Hangul_RieulTieut","XKB_KEY_Hangul_RieulYeorinHieuh","XKB_KEY_Hangul_Romaja","XKB_KEY_Hangul_SingleCandidate","XKB_KEY_Hangul_Sios","XKB_KEY_Hangul_Special","XKB_KEY_Hangul_SsangDikeud","XKB_KEY_Hangul_SsangJieuj","XKB_KEY_Hangul_SsangKiyeog","XKB_KEY_Hangul_SsangPieub","XKB_KEY_Hangul_SsangSios","XKB_KEY_Hangul_Start","XKB_KEY_Hangul_SunkyeongeumMieum","XKB_KEY_Hangul_SunkyeongeumPhieuf","XKB_KEY_Hangul_SunkyeongeumPieub","XKB_KEY_Hangul_Tieut","XKB_KEY_Hangul_U","XKB_KEY_Hangul_WA","XKB_KEY_Hangul_WAE","XKB_KEY_Hangul_WE","XKB_KEY_Hangul_WEO","XKB_KEY_Hangul_WI","XKB_KEY_Hangul_YA","XKB_KEY_Hangul_YAE","XKB_KEY_Hangul_YE","XKB_KEY_Hangul_YEO","XKB_KEY_Hangul_YI","XKB_KEY_Hangul_YO","XKB_KEY_Hangul_YU","XKB_KEY_Hangul_YeorinHieuh","XKB_KEY_Hangul_switch","XKB_KEY_Hankaku","XKB_KEY_Hcircumflex","XKB_KEY_Hebrew_switch","XKB_KEY_Help","XKB_KEY_Henkan","XKB_KEY_Henkan_Mode","XKB_KEY_Hiragana","XKB_KEY_Hiragana_Katakana","XKB_KEY_Home","XKB_KEY_Hstroke","XKB_KEY_Hyper_L","XKB_KEY_Hyper_R","XKB_KEY_I","XKB_KEY_IO","XKB_KEY_ISO_Center_Object","XKB_KEY_ISO_Continuous_Underline","XKB_KEY_ISO_Discontinuous_Underline","XKB_KEY_ISO_Emphasize","XKB_KEY_ISO_Enter","XKB_KEY_ISO_Fast_Cursor_Down","XKB_KEY_ISO_Fast_Cursor_Left","XKB_KEY_ISO_Fast_Cursor_Right","XKB_KEY_ISO_Fast_Cursor_Up","XKB_KEY_ISO_First_Group","XKB_KEY_ISO_First_Group_Lock","XKB_KEY_ISO_Group_Latch","XKB_KEY_ISO_Group_Lock","XKB_KEY_ISO_Group_Shift","XKB_KEY_ISO_Last_Group","XKB_KEY_ISO_Last_Group_Lock","XKB_KEY_ISO_Left_Tab","XKB_KEY_ISO_Level2_Latch","XKB_KEY_ISO_Level3_Latch","XKB_KEY_ISO_Level3_Lock","XKB_KEY_ISO_Level3_Shift","XKB_KEY_ISO_Level5_Latch","XKB_KEY_ISO_Level5_Lock","XKB_KEY_ISO_Level5_Shift","XKB_KEY_ISO_Lock","XKB_KEY_ISO_Move_Line_Down","XKB_KEY_ISO_Move_Line_Up","XKB_KEY_ISO_Next_Group","XKB_KEY_ISO_Next_Group_Lock","XKB_KEY_ISO_Partial_Line_Down","XKB_KEY_ISO_Partial_Line_Up","XKB_KEY_ISO_Partial_Space_Left","XKB_KEY_ISO_Partial_Space_Right","XKB_KEY_ISO_Prev_Group","XKB_KEY_ISO_Prev_Group_Lock","XKB_KEY_ISO_Release_Both_Margins","XKB_KEY_ISO_Release_Margin_Left","XKB_KEY_ISO_Release_Margin_Right","XKB_KEY_ISO_Set_Margin_Left","XKB_KEY_ISO_Set_Margin_Right","XKB_KEY_Iabovedot","XKB_KEY_Iacute","XKB_KEY_Ibelowdot","XKB_KEY_Ibreve","XKB_KEY_Icircumflex","XKB_KEY_Idiaeresis","XKB_KEY_Igrave","XKB_KEY_Ihook","XKB_KEY_Imacron","XKB_KEY_Insert","XKB_KEY_InsertChar","XKB_KEY_InsertLine","XKB_KEY_Iogonek","XKB_KEY_Itilde","XKB_KEY_J","XKB_KEY_Jcircumflex","XKB_KEY_K","XKB_KEY_KP_0","XKB_KEY_KP_1","XKB_KEY_KP_2","XKB_KEY_KP_3","XKB_KEY_KP_4","XKB_KEY_KP_5","XKB_KEY_KP_6","XKB_KEY_KP_7","XKB_KEY_KP_8","XKB_KEY_KP_9","XKB_KEY_KP_Add","XKB_KEY_KP_BackTab","XKB_KEY_KP_Begin","XKB_KEY_KP_Decimal","XKB_KEY_KP_Delete","XKB_KEY_KP_Divide","XKB_KEY_KP_Down","XKB_KEY_KP_End","XKB_KEY_KP_Enter","XKB_KEY_KP_Equal","XKB_KEY_KP_F1","XKB_KEY_KP_F2","XKB_KEY_KP_F3","XKB_KEY_KP_F4","XKB_KEY_KP_Home","XKB_KEY_KP_Insert","XKB_KEY_KP_Left","XKB_KEY_KP_Multiply","XKB_KEY_KP_Next","XKB_KEY_KP_Page_Down","XKB_KEY_KP_Page_Up","XKB_KEY_KP_Prior","XKB_KEY_KP_Right","XKB_KEY_KP_Separator","XKB_KEY_KP_Space","XKB_KEY_KP_Subtract","XKB_KEY_KP_Tab","XKB_KEY_KP_Up","XKB_KEY_Kana_Lock","XKB_KEY_Kana_Shift","XKB_KEY_Kanji","XKB_KEY_Kanji_Bangou","XKB_KEY_Katakana","XKB_KEY_Kcedilla","XKB_KEY_Korean_Won","XKB_KEY_L","XKB_KEY_L1","XKB_KEY_L10","XKB_KEY_L2","XKB_KEY_L3","XKB_KEY_L4","XKB_KEY_L5","XKB_KEY_L6","XKB_KEY_L7","XKB_KEY_L8","XKB_KEY_L9","XKB_KEY_Lacute","XKB_KEY_Last_Virtual_Screen","XKB_KEY_Lbelowdot","XKB_KEY_Lcaron","XKB_KEY_Lcedilla","XKB_KEY_Left","XKB_KEY_Linefeed","XKB_KEY_LiraSign","XKB_KEY_Lstroke","XKB_KEY_M","XKB_KEY_Mabovedot","XKB_KEY_Macedonia_DSE","XKB_KEY_Macedonia_GJE","XKB_KEY_Macedonia_KJE","XKB_KEY_Macedonia_dse","XKB_KEY_Macedonia_gje","XKB_KEY_Macedonia_kje","XKB_KEY_Mae_Koho","XKB_KEY_Massyo","XKB_KEY_Menu","XKB_KEY_Meta_L","XKB_KEY_Meta_R","XKB_KEY_MillSign","XKB_KEY_Mode_switch","XKB_KEY_MouseKeys_Accel_Enable","XKB_KEY_MouseKeys_Enable","XKB_KEY_Muhenkan","XKB_KEY_Multi_key","XKB_KEY_MultipleCandidate","XKB_KEY_N","XKB_KEY_Nacute","XKB_KEY_NairaSign","XKB_KEY_Ncaron","XKB_KEY_Ncedilla","XKB_KEY_NewSheqelSign","XKB_KEY_Next","XKB_KEY_Next_Virtual_Screen","XKB_KEY_Ntilde","XKB_KEY_Num_Lock","XKB_KEY_O","XKB_KEY_OE","XKB_KEY_Oacute","XKB_KEY_Obarred","XKB_KEY_Obelowdot","XKB_KEY_Ocaron","XKB_KEY_Ocircumflex","XKB_KEY_Ocircumflexacute","XKB_KEY_Ocircumflexbelowdot","XKB_KEY_Ocircumflexgrave","XKB_KEY_Ocircumflexhook","XKB_KEY_Ocircumflextilde","XKB_KEY_Odiaeresis","XKB_KEY_Odoubleacute","XKB_KEY_Ograve","XKB_KEY_Ohook","XKB_KEY_Ohorn","XKB_KEY_Ohornacute","XKB_KEY_Ohornbelowdot","XKB_KEY_Ohorngrave","XKB_KEY_Ohornhook","XKB_KEY_Ohorntilde","XKB_KEY_Omacron","XKB_KEY_Ooblique","XKB_KEY_Oslash","XKB_KEY_Otilde","XKB_KEY_Overlay1_Enable","XKB_KEY_Overlay2_Enable","XKB_KEY_P","XKB_KEY_Pabovedot","XKB_KEY_Page_Down","XKB_KEY_Page_Up","XKB_KEY_Pause","XKB_KEY_PesetaSign","XKB_KEY_Pointer_Accelerate","XKB_KEY_Pointer_Button1","XKB_KEY_Pointer_Button2","XKB_KEY_Pointer_Button3","XKB_KEY_Pointer_Button4","XKB_KEY_Pointer_Button5","XKB_KEY_Pointer_Button_Dflt","XKB_KEY_Pointer_DblClick1","XKB_KEY_Pointer_DblClick2","XKB_KEY_Pointer_DblClick3","XKB_KEY_Pointer_DblClick4","XKB_KEY_Pointer_DblClick5","XKB_KEY_Pointer_DblClick_Dflt","XKB_KEY_Pointer_DfltBtnNext","XKB_KEY_Pointer_DfltBtnPrev","XKB_KEY_Pointer_Down","XKB_KEY_Pointer_DownLeft","XKB_KEY_Pointer_DownRight","XKB_KEY_Pointer_Drag1","XKB_KEY_Pointer_Drag2","XKB_KEY_Pointer_Drag3","XKB_KEY_Pointer_Drag4","XKB_KEY_Pointer_Drag5","XKB_KEY_Pointer_Drag_Dflt","XKB_KEY_Pointer_EnableKeys","XKB_KEY_Pointer_Left","XKB_KEY_Pointer_Right","XKB_KEY_Pointer_Up","XKB_KEY_Pointer_UpLeft","XKB_KEY_Pointer_UpRight","XKB_KEY_Prev_Virtual_Screen","XKB_KEY_PreviousCandidate","XKB_KEY_Print","XKB_KEY_Prior","XKB_KEY_Q","XKB_KEY_R","XKB_KEY_R1","XKB_KEY_R10","XKB_KEY_R11","XKB_KEY_R12","XKB_KEY_R13","XKB_KEY_R14","XKB_KEY_R15","XKB_KEY_R2","XKB_KEY_R3","XKB_KEY_R4","XKB_KEY_R5","XKB_KEY_R6","XKB_KEY_R7","XKB_KEY_R8","XKB_KEY_R9","XKB_KEY_Racute","XKB_KEY_Rcaron","XKB_KEY_Rcedilla","XKB_KEY_Redo","XKB_KEY_RepeatKeys_Enable","XKB_KEY_Reset","XKB_KEY_Return","XKB_KEY_Right","XKB_KEY_Romaji","XKB_KEY_RupeeSign","XKB_KEY_S","XKB_KEY_SCHWA","XKB_KEY_Sabovedot","XKB_KEY_Sacute","XKB_KEY_Scaron","XKB_KEY_Scedilla","XKB_KEY_Scircumflex","XKB_KEY_Scroll_Lock","XKB_KEY_Select","XKB_KEY_Serbian_DJE","XKB_KEY_Serbian_DZE","XKB_KEY_Serbian_JE","XKB_KEY_Serbian_LJE","XKB_KEY_Serbian_NJE","XKB_KEY_Serbian_TSHE","XKB_KEY_Serbian_dje","XKB_KEY_Serbian_dze","XKB_KEY_Serbian_je","XKB_KEY_Serbian_lje","XKB_KEY_Serbian_nje","XKB_KEY_Serbian_tshe","XKB_KEY_Shift_L","XKB_KEY_Shift_Lock","XKB_KEY_Shift_R","XKB_KEY_SingleCandidate","XKB_KEY_Sinh_a","XKB_KEY_Sinh_aa","XKB_KEY_Sinh_aa2","XKB_KEY_Sinh_ae","XKB_KEY_Sinh_ae2","XKB_KEY_Sinh_aee","XKB_KEY_Sinh_aee2","XKB_KEY_Sinh_ai","XKB_KEY_Sinh_ai2","XKB_KEY_Sinh_al","XKB_KEY_Sinh_au","XKB_KEY_Sinh_au2","XKB_KEY_Sinh_ba","XKB_KEY_Sinh_bha","XKB_KEY_Sinh_ca","XKB_KEY_Sinh_cha","XKB_KEY_Sinh_dda","XKB_KEY_Sinh_ddha","XKB_KEY_Sinh_dha","XKB_KEY_Sinh_dhha","XKB_KEY_Sinh_e","XKB_KEY_Sinh_e2","XKB_KEY_Sinh_ee","XKB_KEY_Sinh_ee2","XKB_KEY_Sinh_fa","XKB_KEY_Sinh_ga","XKB_KEY_Sinh_gha","XKB_KEY_Sinh_h2","XKB_KEY_Sinh_ha","XKB_KEY_Sinh_i","XKB_KEY_Sinh_i2","XKB_KEY_Sinh_ii","XKB_KEY_Sinh_ii2","XKB_KEY_Sinh_ja","XKB_KEY_Sinh_jha","XKB_KEY_Sinh_jnya","XKB_KEY_Sinh_ka","XKB_KEY_Sinh_kha","XKB_KEY_Sinh_kunddaliya","XKB_KEY_Sinh_la","XKB_KEY_Sinh_lla","XKB_KEY_Sinh_lu","XKB_KEY_Sinh_lu2","XKB_KEY_Sinh_luu","XKB_KEY_Sinh_luu2","XKB_KEY_Sinh_ma","XKB_KEY_Sinh_mba","XKB_KEY_Sinh_na","XKB_KEY_Sinh_ndda","XKB_KEY_Sinh_ndha","XKB_KEY_Sinh_ng","XKB_KEY_Sinh_ng2","XKB_KEY_Sinh_nga","XKB_KEY_Sinh_nja","XKB_KEY_Sinh_nna","XKB_KEY_Sinh_nya","XKB_KEY_Sinh_o","XKB_KEY_Sinh_o2","XKB_KEY_Sinh_oo","XKB_KEY_Sinh_oo2","XKB_KEY_Sinh_pa","XKB_KEY_Sinh_pha","XKB_KEY_Sinh_ra","XKB_KEY_Sinh_ri","XKB_KEY_Sinh_rii","XKB_KEY_Sinh_ru2","XKB_KEY_Sinh_ruu2","XKB_KEY_Sinh_sa","XKB_KEY_Sinh_sha","XKB_KEY_Sinh_ssha","XKB_KEY_Sinh_tha","XKB_KEY_Sinh_thha","XKB_KEY_Sinh_tta","XKB_KEY_Sinh_ttha","XKB_KEY_Sinh_u","XKB_KEY_Sinh_u2","XKB_KEY_Sinh_uu","XKB_KEY_Sinh_uu2","XKB_KEY_Sinh_va","XKB_KEY_Sinh_ya","XKB_KEY_SlowKeys_Enable","XKB_KEY_StickyKeys_Enable","XKB_KEY_SunAgain","XKB_KEY_SunAltGraph","XKB_KEY_SunAudioLowerVolume","XKB_KEY_SunAudioMute","XKB_KEY_SunAudioRaiseVolume","XKB_KEY_SunCompose","XKB_KEY_SunCopy","XKB_KEY_SunCut","XKB_KEY_SunF36","XKB_KEY_SunF37","XKB_KEY_SunFA_Acute","XKB_KEY_SunFA_Cedilla","XKB_KEY_SunFA_Circum","XKB_KEY_SunFA_Diaeresis","XKB_KEY_SunFA_Grave","XKB_KEY_SunFA_Tilde","XKB_KEY_SunFind","XKB_KEY_SunFront","XKB_KEY_SunOpen","XKB_KEY_SunPageDown","XKB_KEY_SunPageUp","XKB_KEY_SunPaste","XKB_KEY_SunPowerSwitch","XKB_KEY_SunPowerSwitchShift","XKB_KEY_SunPrint_Screen","XKB_KEY_SunProps","XKB_KEY_SunStop","XKB_KEY_SunSys_Req","XKB_KEY_SunUndo","XKB_KEY_SunVideoDegauss","XKB_KEY_SunVideoLowerBrightness","XKB_KEY_SunVideoRaiseBrightness","XKB_KEY_Super_L","XKB_KEY_Super_R","XKB_KEY_Sys_Req","XKB_KEY_System","XKB_KEY_T","XKB_KEY_THORN","XKB_KEY_Tab","XKB_KEY_Tabovedot","XKB_KEY_Tcaron","XKB_KEY_Tcedilla","XKB_KEY_Terminate_Server","XKB_KEY_Thai_baht","XKB_KEY_Thai_bobaimai","XKB_KEY_Thai_chochan","XKB_KEY_Thai_chochang","XKB_KEY_Thai_choching","XKB_KEY_Thai_chochoe","XKB_KEY_Thai_dochada","XKB_KEY_Thai_dodek","XKB_KEY_Thai_fofa","XKB_KEY_Thai_fofan","XKB_KEY_Thai_hohip","XKB_KEY_Thai_honokhuk","XKB_KEY_Thai_khokhai","XKB_KEY_Thai_khokhon","XKB_KEY_Thai_khokhuat","XKB_KEY_Thai_khokhwai","XKB_KEY_Thai_khorakhang","XKB_KEY_Thai_kokai","XKB_KEY_Thai_lakkhangyao","XKB_KEY_Thai_lekchet","XKB_KEY_Thai_lekha","XKB_KEY_Thai_lekhok","XKB_KEY_Thai_lekkao","XKB_KEY_Thai_leknung","XKB_KEY_Thai_lekpaet","XKB_KEY_Thai_leksam","XKB_KEY_Thai_leksi","XKB_KEY_Thai_leksong","XKB_KEY_Thai_leksun","XKB_KEY_Thai_lochula","XKB_KEY_Thai_loling","XKB_KEY_Thai_lu","XKB_KEY_Thai_maichattawa","XKB_KEY_Thai_maiek","XKB_KEY_Thai_maihanakat","XKB_KEY_Thai_maihanakat_maitho","XKB_KEY_Thai_maitaikhu","XKB_KEY_Thai_maitho","XKB_KEY_Thai_maitri","XKB_KEY_Thai_maiyamok","XKB_KEY_Thai_moma","XKB_KEY_Thai_ngongu","XKB_KEY_Thai_nikhahit","XKB_KEY_Thai_nonen","XKB_KEY_Thai_nonu","XKB_KEY_Thai_oang","XKB_KEY_Thai_paiyannoi","XKB_KEY_Thai_phinthu","XKB_KEY_Thai_phophan","XKB_KEY_Thai_phophung","XKB_KEY_Thai_phosamphao","XKB_KEY_Thai_popla","XKB_KEY_Thai_rorua","XKB_KEY_Thai_ru","XKB_KEY_Thai_saraa","XKB_KEY_Thai_saraaa","XKB_KEY_Thai_saraae","XKB_KEY_Thai_saraaimaimalai","XKB_KEY_Thai_saraaimaimuan","XKB_KEY_Thai_saraam","XKB_KEY_Thai_sarae","XKB_KEY_Thai_sarai","XKB_KEY_Thai_saraii","XKB_KEY_Thai_sarao","XKB_KEY_Thai_sarau","XKB_KEY_Thai_saraue","XKB_KEY_Thai_sarauee","XKB_KEY_Thai_sarauu","XKB_KEY_Thai_sorusi","XKB_KEY_Thai_sosala","XKB_KEY_Thai_soso","XKB_KEY_Thai_sosua","XKB_KEY_Thai_thanthakhat","XKB_KEY_Thai_thonangmontho","XKB_KEY_Thai_thophuthao","XKB_KEY_Thai_thothahan","XKB_KEY_Thai_thothan","XKB_KEY_Thai_thothong","XKB_KEY_Thai_thothung","XKB_KEY_Thai_topatak","XKB_KEY_Thai_totao","XKB_KEY_Thai_wowaen","XKB_KEY_Thai_yoyak","XKB_KEY_Thai_yoying","XKB_KEY_Thorn","XKB_KEY_Touroku","XKB_KEY_Tslash","XKB_KEY_U","XKB_KEY_Uacute","XKB_KEY_Ubelowdot","XKB_KEY_Ubreve","XKB_KEY_Ucircumflex","XKB_KEY_Udiaeresis","XKB_KEY_Udoubleacute","XKB_KEY_Ugrave","XKB_KEY_Uhook","XKB_KEY_Uhorn","XKB_KEY_Uhornacute","XKB_KEY_Uhornbelowdot","XKB_KEY_Uhorngrave","XKB_KEY_Uhornhook","XKB_KEY_Uhorntilde","XKB_KEY_Ukrainian_GHE_WITH_UPTURN","XKB_KEY_Ukrainian_I","XKB_KEY_Ukrainian_IE","XKB_KEY_Ukrainian_YI","XKB_KEY_Ukrainian_ghe_with_upturn","XKB_KEY_Ukrainian_i","XKB_KEY_Ukrainian_ie","XKB_KEY_Ukrainian_yi","XKB_KEY_Ukranian_I","XKB_KEY_Ukranian_JE","XKB_KEY_Ukranian_YI","XKB_KEY_Ukranian_i","XKB_KEY_Ukranian_je","XKB_KEY_Ukranian_yi","XKB_KEY_Umacron","XKB_KEY_Undo","XKB_KEY_Uogonek","XKB_KEY_Up","XKB_KEY_Uring","XKB_KEY_User","XKB_KEY_Utilde","XKB_KEY_V","XKB_KEY_VoidSymbol","XKB_KEY_W","XKB_KEY_Wacute","XKB_KEY_Wcircumflex","XKB_KEY_Wdiaeresis","XKB_KEY_Wgrave","XKB_KEY_WonSign","XKB_KEY_X","XKB_KEY_XF86AddFavorite","XKB_KEY_XF86ApplicationLeft","XKB_KEY_XF86ApplicationRight","XKB_KEY_XF86AudioCycleTrack","XKB_KEY_XF86AudioForward","XKB_KEY_XF86AudioLowerVolume","XKB_KEY_XF86AudioMedia","XKB_KEY_XF86AudioMicMute","XKB_KEY_XF86AudioMute","XKB_KEY_XF86AudioNext","XKB_KEY_XF86AudioPause","XKB_KEY_XF86AudioPlay","XKB_KEY_XF86AudioPreset","XKB_KEY_XF86AudioPrev","XKB_KEY_XF86AudioRaiseVolume","XKB_KEY_XF86AudioRandomPlay","XKB_KEY_XF86AudioRecord","XKB_KEY_XF86AudioRepeat","XKB_KEY_XF86AudioRewind","XKB_KEY_XF86AudioStop","XKB_KEY_XF86Away","XKB_KEY_XF86Back","XKB_KEY_XF86BackForward","XKB_KEY_XF86Battery","XKB_KEY_XF86Blue","XKB_KEY_XF86Bluetooth","XKB_KEY_XF86Book","XKB_KEY_XF86BrightnessAdjust","XKB_KEY_XF86CD","XKB_KEY_XF86Calculater","XKB_KEY_XF86Calculator","XKB_KEY_XF86Calendar","XKB_KEY_XF86Clear","XKB_KEY_XF86ClearGrab","XKB_KEY_XF86Close","XKB_KEY_XF86Community","XKB_KEY_XF86ContrastAdjust","XKB_KEY_XF86Copy","XKB_KEY_XF86Cut","XKB_KEY_XF86CycleAngle","XKB_KEY_XF86DOS","XKB_KEY_XF86Display","XKB_KEY_XF86Documents","XKB_KEY_XF86Eject","XKB_KEY_XF86Excel","XKB_KEY_XF86Explorer","XKB_KEY_XF86Favorites","XKB_KEY_XF86Finance","XKB_KEY_XF86Forward","XKB_KEY_XF86FrameBack","XKB_KEY_XF86FrameForward","XKB_KEY_XF86FullScreen","XKB_KEY_XF86Game","XKB_KEY_XF86Go","XKB_KEY_XF86Green","XKB_KEY_XF86Hibernate","XKB_KEY_XF86History","XKB_KEY_XF86HomePage","XKB_KEY_XF86HotLinks","XKB_KEY_XF86KbdBrightnessDown","XKB_KEY_XF86KbdBrightnessUp","XKB_KEY_XF86KbdLightOnOff","XKB_KEY_XF86Keyboard","XKB_KEY_XF86Launch0","XKB_KEY_XF86Launch1","XKB_KEY_XF86Launch2","XKB_KEY_XF86Launch3","XKB_KEY_XF86Launch4","XKB_KEY_XF86Launch5","XKB_KEY_XF86Launch6","XKB_KEY_XF86Launch7","XKB_KEY_XF86Launch8","XKB_KEY_XF86Launch9","XKB_KEY_XF86LaunchA","XKB_KEY_XF86LaunchB","XKB_KEY_XF86LaunchC","XKB_KEY_XF86LaunchD","XKB_KEY_XF86LaunchE","XKB_KEY_XF86LaunchF","XKB_KEY_XF86LightBulb","XKB_KEY_XF86LogGrabInfo","XKB_KEY_XF86LogOff","XKB_KEY_XF86LogWindowTree","XKB_KEY_XF86Mail","XKB_KEY_XF86MailForward","XKB_KEY_XF86Market","XKB_KEY_XF86Meeting","XKB_KEY_XF86Memo","XKB_KEY_XF86MenuKB","XKB_KEY_XF86MenuPB","XKB_KEY_XF86Messenger","XKB_KEY_XF86ModeLock","XKB_KEY_XF86MonBrightnessCycle","XKB_KEY_XF86MonBrightnessDown","XKB_KEY_XF86MonBrightnessUp","XKB_KEY_XF86Music","XKB_KEY_XF86MyComputer","XKB_KEY_XF86MySites","XKB_KEY_XF86New","XKB_KEY_XF86News","XKB_KEY_XF86Next_VMode","XKB_KEY_XF86OfficeHome","XKB_KEY_XF86Open","XKB_KEY_XF86OpenURL","XKB_KEY_XF86Option","XKB_KEY_XF86Paste","XKB_KEY_XF86Phone","XKB_KEY_XF86Pictures","XKB_KEY_XF86PowerDown","XKB_KEY_XF86PowerOff","XKB_KEY_XF86Prev_VMode","XKB_KEY_XF86Q","XKB_KEY_XF86RFKill","XKB_KEY_XF86Red","XKB_KEY_XF86Refresh","XKB_KEY_XF86Reload","XKB_KEY_XF86Reply","XKB_KEY_XF86RockerDown","XKB_KEY_XF86RockerEnter","XKB_KEY_XF86RockerUp","XKB_KEY_XF86RotateWindows","XKB_KEY_XF86RotationKB","XKB_KEY_XF86RotationLockToggle","XKB_KEY_XF86RotationPB","XKB_KEY_XF86Save","XKB_KEY_XF86ScreenSaver","XKB_KEY_XF86ScrollClick","XKB_KEY_XF86ScrollDown","XKB_KEY_XF86ScrollUp","XKB_KEY_XF86Search","XKB_KEY_XF86Select","XKB_KEY_XF86Send","XKB_KEY_XF86Shop","XKB_KEY_XF86Sleep","XKB_KEY_XF86Spell","XKB_KEY_XF86SplitScreen","XKB_KEY_XF86Standby","XKB_KEY_XF86Start","XKB_KEY_XF86Stop","XKB_KEY_XF86Subtitle","XKB_KEY_XF86Support","XKB_KEY_XF86Suspend","XKB_KEY_XF86Switch_VT_1","XKB_KEY_XF86Switch_VT_10","XKB_KEY_XF86Switch_VT_11","XKB_KEY_XF86Switch_VT_12","XKB_KEY_XF86Switch_VT_2","XKB_KEY_XF86Switch_VT_3","XKB_KEY_XF86Switch_VT_4","XKB_KEY_XF86Switch_VT_5","XKB_KEY_XF86Switch_VT_6","XKB_KEY_XF86Switch_VT_7","XKB_KEY_XF86Switch_VT_8","XKB_KEY_XF86Switch_VT_9","XKB_KEY_XF86TaskPane","XKB_KEY_XF86Terminal","XKB_KEY_XF86Time","XKB_KEY_XF86ToDoList","XKB_KEY_XF86Tools","XKB_KEY_XF86TopMenu","XKB_KEY_XF86TouchpadOff","XKB_KEY_XF86TouchpadOn","XKB_KEY_XF86TouchpadToggle","XKB_KEY_XF86Travel","XKB_KEY_XF86UWB","XKB_KEY_XF86Ungrab","XKB_KEY_XF86User1KB","XKB_KEY_XF86User2KB","XKB_KEY_XF86UserPB","XKB_KEY_XF86VendorHome","XKB_KEY_XF86Video","XKB_KEY_XF86View","XKB_KEY_XF86WLAN","XKB_KEY_XF86WWAN","XKB_KEY_XF86WWW","XKB_KEY_XF86WakeUp","XKB_KEY_XF86WebCam","XKB_KEY_XF86WheelButton","XKB_KEY_XF86Word","XKB_KEY_XF86Xfer","XKB_KEY_XF86Yellow","XKB_KEY_XF86ZoomIn","XKB_KEY_XF86ZoomOut","XKB_KEY_XF86iTouch","XKB_KEY_Xabovedot","XKB_KEY_Y","XKB_KEY_Yacute","XKB_KEY_Ybelowdot","XKB_KEY_Ycircumflex","XKB_KEY_Ydiaeresis","XKB_KEY_Ygrave","XKB_KEY_Yhook","XKB_KEY_Ytilde","XKB_KEY_Z","XKB_KEY_Zabovedot","XKB_KEY_Zacute","XKB_KEY_Zcaron","XKB_KEY_Zen_Koho","XKB_KEY_Zenkaku","XKB_KEY_Zenkaku_Hankaku","XKB_KEY_Zstroke","XKB_KEY_a","XKB_KEY_aacute","XKB_KEY_abelowdot","XKB_KEY_abovedot","XKB_KEY_abreve","XKB_KEY_abreveacute","XKB_KEY_abrevebelowdot","XKB_KEY_abrevegrave","XKB_KEY_abrevehook","XKB_KEY_abrevetilde","XKB_KEY_acircumflex","XKB_KEY_acircumflexacute","XKB_KEY_acircumflexbelowdot","XKB_KEY_acircumflexgrave","XKB_KEY_acircumflexhook","XKB_KEY_acircumflextilde","XKB_KEY_acute","XKB_KEY_adiaeresis","XKB_KEY_ae","XKB_KEY_agrave","XKB_KEY_ahook","XKB_KEY_amacron","XKB_KEY_ampersand","XKB_KEY_aogonek","XKB_KEY_apostrophe","XKB_KEY_approxeq","XKB_KEY_approximate","XKB_KEY_aring","XKB_KEY_asciicircum","XKB_KEY_asciitilde","XKB_KEY_asterisk","XKB_KEY_at","XKB_KEY_atilde","XKB_KEY_b","XKB_KEY_babovedot","XKB_KEY_backslash","XKB_KEY_ballotcross","XKB_KEY_bar","XKB_KEY_because","XKB_KEY_blank","XKB_KEY_block","XKB_KEY_botintegral","XKB_KEY_botleftparens","XKB_KEY_botleftsqbracket","XKB_KEY_botleftsummation","XKB_KEY_botrightparens","XKB_KEY_botrightsqbracket","XKB_KEY_botrightsummation","XKB_KEY_bott","XKB_KEY_botvertsummationconnector","XKB_KEY_braceleft","XKB_KEY_braceright","XKB_KEY_bracketleft","XKB_KEY_bracketright","XKB_KEY_braille_blank","XKB_KEY_braille_dot_1","XKB_KEY_braille_dot_10","XKB_KEY_braille_dot_2","XKB_KEY_braille_dot_3","XKB_KEY_braille_dot_4","XKB_KEY_braille_dot_5","XKB_KEY_braille_dot_6","XKB_KEY_braille_dot_7","XKB_KEY_braille_dot_8","XKB_KEY_braille_dot_9","XKB_KEY_braille_dots_1","XKB_KEY_braille_dots_12","XKB_KEY_braille_dots_123","XKB_KEY_braille_dots_1234","XKB_KEY_braille_dots_12345","XKB_KEY_braille_dots_123456","XKB_KEY_braille_dots_1234567","XKB_KEY_braille_dots_12345678","XKB_KEY_braille_dots_1234568","XKB_KEY_braille_dots_123457","XKB_KEY_braille_dots_1234578","XKB_KEY_braille_dots_123458","XKB_KEY_braille_dots_12346","XKB_KEY_braille_dots_123467","XKB_KEY_braille_dots_1234678","XKB_KEY_braille_dots_123468","XKB_KEY_braille_dots_12347","XKB_KEY_braille_dots_123478","XKB_KEY_braille_dots_12348","XKB_KEY_braille_dots_1235","XKB_KEY_braille_dots_12356","XKB_KEY_braille_dots_123567","XKB_KEY_braille_dots_1235678","XKB_KEY_braille_dots_123568","XKB_KEY_braille_dots_12357","XKB_KEY_braille_dots_123578","XKB_KEY_braille_dots_12358","XKB_KEY_braille_dots_1236","XKB_KEY_braille_dots_12367","XKB_KEY_braille_dots_123678","XKB_KEY_braille_dots_12368","XKB_KEY_braille_dots_1237","XKB_KEY_braille_dots_12378","XKB_KEY_braille_dots_1238","XKB_KEY_braille_dots_124","XKB_KEY_braille_dots_1245","XKB_KEY_braille_dots_12456","XKB_KEY_braille_dots_124567","XKB_KEY_braille_dots_1245678","XKB_KEY_braille_dots_124568","XKB_KEY_braille_dots_12457","XKB_KEY_braille_dots_124578","XKB_KEY_braille_dots_12458","XKB_KEY_braille_dots_1246","XKB_KEY_braille_dots_12467","XKB_KEY_braille_dots_124678","XKB_KEY_braille_dots_12468","XKB_KEY_braille_dots_1247","XKB_KEY_braille_dots_12478","XKB_KEY_braille_dots_1248","XKB_KEY_braille_dots_125","XKB_KEY_braille_dots_1256","XKB_KEY_braille_dots_12567","XKB_KEY_braille_dots_125678","XKB_KEY_braille_dots_12568","XKB_KEY_braille_dots_1257","XKB_KEY_braille_dots_12578","XKB_KEY_braille_dots_1258","XKB_KEY_braille_dots_126","XKB_KEY_braille_dots_1267","XKB_KEY_braille_dots_12678","XKB_KEY_braille_dots_1268","XKB_KEY_braille_dots_127","XKB_KEY_braille_dots_1278","XKB_KEY_braille_dots_128","XKB_KEY_braille_dots_13","XKB_KEY_braille_dots_134","XKB_KEY_braille_dots_1345","XKB_KEY_braille_dots_13456","XKB_KEY_braille_dots_134567","XKB_KEY_braille_dots_1345678","XKB_KEY_braille_dots_134568","XKB_KEY_braille_dots_13457","XKB_KEY_braille_dots_134578","XKB_KEY_braille_dots_13458","XKB_KEY_braille_dots_1346","XKB_KEY_braille_dots_13467","XKB_KEY_braille_dots_134678","XKB_KEY_braille_dots_13468","XKB_KEY_braille_dots_1347","XKB_KEY_braille_dots_13478","XKB_KEY_braille_dots_1348","XKB_KEY_braille_dots_135","XKB_KEY_braille_dots_1356","XKB_KEY_braille_dots_13567","XKB_KEY_braille_dots_135678","XKB_KEY_braille_dots_13568","XKB_KEY_braille_dots_1357","XKB_KEY_braille_dots_13578","XKB_KEY_braille_dots_1358","XKB_KEY_braille_dots_136","XKB_KEY_braille_dots_1367","XKB_KEY_braille_dots_13678","XKB_KEY_braille_dots_1368","XKB_KEY_braille_dots_137","XKB_KEY_braille_dots_1378","XKB_KEY_braille_dots_138","XKB_KEY_braille_dots_14","XKB_KEY_braille_dots_145","XKB_KEY_braille_dots_1456","XKB_KEY_braille_dots_14567","XKB_KEY_braille_dots_145678","XKB_KEY_braille_dots_14568","XKB_KEY_braille_dots_1457","XKB_KEY_braille_dots_14578","XKB_KEY_braille_dots_1458","XKB_KEY_braille_dots_146","XKB_KEY_braille_dots_1467","XKB_KEY_braille_dots_14678","XKB_KEY_braille_dots_1468","XKB_KEY_braille_dots_147","XKB_KEY_braille_dots_1478","XKB_KEY_braille_dots_148","XKB_KEY_braille_dots_15","XKB_KEY_braille_dots_156","XKB_KEY_braille_dots_1567","XKB_KEY_braille_dots_15678","XKB_KEY_braille_dots_1568","XKB_KEY_braille_dots_157","XKB_KEY_braille_dots_1578","XKB_KEY_braille_dots_158","XKB_KEY_braille_dots_16","XKB_KEY_braille_dots_167","XKB_KEY_braille_dots_1678","XKB_KEY_braille_dots_168","XKB_KEY_braille_dots_17","XKB_KEY_braille_dots_178","XKB_KEY_braille_dots_18","XKB_KEY_braille_dots_2","XKB_KEY_braille_dots_23","XKB_KEY_braille_dots_234","XKB_KEY_braille_dots_2345","XKB_KEY_braille_dots_23456","XKB_KEY_braille_dots_234567","XKB_KEY_braille_dots_2345678","XKB_KEY_braille_dots_234568","XKB_KEY_braille_dots_23457","XKB_KEY_braille_dots_234578","XKB_KEY_braille_dots_23458","XKB_KEY_braille_dots_2346","XKB_KEY_braille_dots_23467","XKB_KEY_braille_dots_234678","XKB_KEY_braille_dots_23468","XKB_KEY_braille_dots_2347","XKB_KEY_braille_dots_23478","XKB_KEY_braille_dots_2348","XKB_KEY_braille_dots_235","XKB_KEY_braille_dots_2356","XKB_KEY_braille_dots_23567","XKB_KEY_braille_dots_235678","XKB_KEY_braille_dots_23568","XKB_KEY_braille_dots_2357","XKB_KEY_braille_dots_23578","XKB_KEY_braille_dots_2358","XKB_KEY_braille_dots_236","XKB_KEY_braille_dots_2367","XKB_KEY_braille_dots_23678","XKB_KEY_braille_dots_2368","XKB_KEY_braille_dots_237","XKB_KEY_braille_dots_2378","XKB_KEY_braille_dots_238","XKB_KEY_braille_dots_24","XKB_KEY_braille_dots_245","XKB_KEY_braille_dots_2456","XKB_KEY_braille_dots_24567","XKB_KEY_braille_dots_245678","XKB_KEY_braille_dots_24568","XKB_KEY_braille_dots_2457","XKB_KEY_braille_dots_24578","XKB_KEY_braille_dots_2458","XKB_KEY_braille_dots_246","XKB_KEY_braille_dots_2467","XKB_KEY_braille_dots_24678","XKB_KEY_braille_dots_2468","XKB_KEY_braille_dots_247","XKB_KEY_braille_dots_2478","XKB_KEY_braille_dots_248","XKB_KEY_braille_dots_25","XKB_KEY_braille_dots_256","XKB_KEY_braille_dots_2567","XKB_KEY_braille_dots_25678","XKB_KEY_braille_dots_2568","XKB_KEY_braille_dots_257","XKB_KEY_braille_dots_2578","XKB_KEY_braille_dots_258","XKB_KEY_braille_dots_26","XKB_KEY_braille_dots_267","XKB_KEY_braille_dots_2678","XKB_KEY_braille_dots_268","XKB_KEY_braille_dots_27","XKB_KEY_braille_dots_278","XKB_KEY_braille_dots_28","XKB_KEY_braille_dots_3","XKB_KEY_braille_dots_34","XKB_KEY_braille_dots_345","XKB_KEY_braille_dots_3456","XKB_KEY_braille_dots_34567","XKB_KEY_braille_dots_345678","XKB_KEY_braille_dots_34568","XKB_KEY_braille_dots_3457","XKB_KEY_braille_dots_34578","XKB_KEY_braille_dots_3458","XKB_KEY_braille_dots_346","XKB_KEY_braille_dots_3467","XKB_KEY_braille_dots_34678","XKB_KEY_braille_dots_3468","XKB_KEY_braille_dots_347","XKB_KEY_braille_dots_3478","XKB_KEY_braille_dots_348","XKB_KEY_braille_dots_35","XKB_KEY_braille_dots_356","XKB_KEY_braille_dots_3567","XKB_KEY_braille_dots_35678","XKB_KEY_braille_dots_3568","XKB_KEY_braille_dots_357","XKB_KEY_braille_dots_3578","XKB_KEY_braille_dots_358","XKB_KEY_braille_dots_36","XKB_KEY_braille_dots_367","XKB_KEY_braille_dots_3678","XKB_KEY_braille_dots_368","XKB_KEY_braille_dots_37","XKB_KEY_braille_dots_378","XKB_KEY_braille_dots_38","XKB_KEY_braille_dots_4","XKB_KEY_braille_dots_45","XKB_KEY_braille_dots_456","XKB_KEY_braille_dots_4567","XKB_KEY_braille_dots_45678","XKB_KEY_braille_dots_4568","XKB_KEY_braille_dots_457","XKB_KEY_braille_dots_4578","XKB_KEY_braille_dots_458","XKB_KEY_braille_dots_46","XKB_KEY_braille_dots_467","XKB_KEY_braille_dots_4678","XKB_KEY_braille_dots_468","XKB_KEY_braille_dots_47","XKB_KEY_braille_dots_478","XKB_KEY_braille_dots_48","XKB_KEY_braille_dots_5","XKB_KEY_braille_dots_56","XKB_KEY_braille_dots_567","XKB_KEY_braille_dots_5678","XKB_KEY_braille_dots_568","XKB_KEY_braille_dots_57","XKB_KEY_braille_dots_578","XKB_KEY_braille_dots_58","XKB_KEY_braille_dots_6","XKB_KEY_braille_dots_67","XKB_KEY_braille_dots_678","XKB_KEY_braille_dots_68","XKB_KEY_braille_dots_7","XKB_KEY_braille_dots_78","XKB_KEY_braille_dots_8","XKB_KEY_breve","XKB_KEY_brokenbar","XKB_KEY_c","XKB_KEY_c_h","XKB_KEY_cabovedot","XKB_KEY_cacute","XKB_KEY_careof","XKB_KEY_caret","XKB_KEY_caron","XKB_KEY_ccaron","XKB_KEY_ccedilla","XKB_KEY_ccircumflex","XKB_KEY_cedilla","XKB_KEY_cent","XKB_KEY_ch","XKB_KEY_checkerboard","XKB_KEY_checkmark","XKB_KEY_circle","XKB_KEY_club","XKB_KEY_colon","XKB_KEY_comma","XKB_KEY_containsas","XKB_KEY_copyright","XKB_KEY_cr","XKB_KEY_crossinglines","XKB_KEY_cuberoot","XKB_KEY_currency","XKB_KEY_cursor","XKB_KEY_d","XKB_KEY_dabovedot","XKB_KEY_dagger","XKB_KEY_dcaron","XKB_KEY_dead_A","XKB_KEY_dead_E","XKB_KEY_dead_I","XKB_KEY_dead_O","XKB_KEY_dead_U","XKB_KEY_dead_a","XKB_KEY_dead_abovecomma","XKB_KEY_dead_abovedot","XKB_KEY_dead_abovereversedcomma","XKB_KEY_dead_abovering","XKB_KEY_dead_aboveverticalline","XKB_KEY_dead_acute","XKB_KEY_dead_belowbreve","XKB_KEY_dead_belowcircumflex","XKB_KEY_dead_belowcomma","XKB_KEY_dead_belowdiaeresis","XKB_KEY_dead_belowdot","XKB_KEY_dead_belowmacron","XKB_KEY_dead_belowring","XKB_KEY_dead_belowtilde","XKB_KEY_dead_belowverticalline","XKB_KEY_dead_breve","XKB_KEY_dead_capital_schwa","XKB_KEY_dead_caron","XKB_KEY_dead_cedilla","XKB_KEY_dead_circumflex","XKB_KEY_dead_currency","XKB_KEY_dead_dasia","XKB_KEY_dead_diaeresis","XKB_KEY_dead_doubleacute","XKB_KEY_dead_doublegrave","XKB_KEY_dead_e","XKB_KEY_dead_grave","XKB_KEY_dead_greek","XKB_KEY_dead_hook","XKB_KEY_dead_horn","XKB_KEY_dead_i","XKB_KEY_dead_invertedbreve","XKB_KEY_dead_iota","XKB_KEY_dead_longsolidusoverlay","XKB_KEY_dead_lowline","XKB_KEY_dead_macron","XKB_KEY_dead_o","XKB_KEY_dead_ogonek","XKB_KEY_dead_perispomeni","XKB_KEY_dead_psili","XKB_KEY_dead_semivoiced_sound","XKB_KEY_dead_small_schwa","XKB_KEY_dead_stroke","XKB_KEY_dead_tilde","XKB_KEY_dead_u","XKB_KEY_dead_voiced_sound","XKB_KEY_decimalpoint","XKB_KEY_degree","XKB_KEY_diaeresis","XKB_KEY_diamond","XKB_KEY_digitspace","XKB_KEY_dintegral","XKB_KEY_division","XKB_KEY_dollar","XKB_KEY_doubbaselinedot","XKB_KEY_doubleacute","XKB_KEY_doubledagger","XKB_KEY_doublelowquotemark","XKB_KEY_downarrow","XKB_KEY_downcaret","XKB_KEY_downshoe","XKB_KEY_downstile","XKB_KEY_downtack","XKB_KEY_dstroke","XKB_KEY_e","XKB_KEY_eabovedot","XKB_KEY_eacute","XKB_KEY_ebelowdot","XKB_KEY_ecaron","XKB_KEY_ecircumflex","XKB_KEY_ecircumflexacute","XKB_KEY_ecircumflexbelowdot","XKB_KEY_ecircumflexgrave","XKB_KEY_ecircumflexhook","XKB_KEY_ecircumflextilde","XKB_KEY_ediaeresis","XKB_KEY_egrave","XKB_KEY_ehook","XKB_KEY_eightsubscript","XKB_KEY_eightsuperior","XKB_KEY_elementof","XKB_KEY_ellipsis","XKB_KEY_em3space","XKB_KEY_em4space","XKB_KEY_emacron","XKB_KEY_emdash","XKB_KEY_emfilledcircle","XKB_KEY_emfilledrect","XKB_KEY_emopencircle","XKB_KEY_emopenrectangle","XKB_KEY_emptyset","XKB_KEY_emspace","XKB_KEY_endash","XKB_KEY_enfilledcircbullet","XKB_KEY_enfilledsqbullet","XKB_KEY_eng","XKB_KEY_enopencircbullet","XKB_KEY_enopensquarebullet","XKB_KEY_enspace","XKB_KEY_eogonek","XKB_KEY_equal","XKB_KEY_eth","XKB_KEY_etilde","XKB_KEY_exclam","XKB_KEY_exclamdown","XKB_KEY_ezh","XKB_KEY_f","XKB_KEY_fabovedot","XKB_KEY_femalesymbol","XKB_KEY_ff","XKB_KEY_figdash","XKB_KEY_filledlefttribullet","XKB_KEY_filledrectbullet","XKB_KEY_filledrighttribullet","XKB_KEY_filledtribulletdown","XKB_KEY_filledtribulletup","XKB_KEY_fiveeighths","XKB_KEY_fivesixths","XKB_KEY_fivesubscript","XKB_KEY_fivesuperior","XKB_KEY_fourfifths","XKB_KEY_foursubscript","XKB_KEY_foursuperior","XKB_KEY_fourthroot","XKB_KEY_function","XKB_KEY_g","XKB_KEY_gabovedot","XKB_KEY_gbreve","XKB_KEY_gcaron","XKB_KEY_gcedilla","XKB_KEY_gcircumflex","XKB_KEY_grave","XKB_KEY_greater","XKB_KEY_greaterthanequal","XKB_KEY_guilder","XKB_KEY_guillemotleft","XKB_KEY_guillemotright","XKB_KEY_h","XKB_KEY_hairspace","XKB_KEY_hcircumflex","XKB_KEY_heart","XKB_KEY_hebrew_aleph","XKB_KEY_hebrew_ayin","XKB_KEY_hebrew_bet","XKB_KEY_hebrew_beth","XKB_KEY_hebrew_chet","XKB_KEY_hebrew_dalet","XKB_KEY_hebrew_daleth","XKB_KEY_hebrew_doublelowline","XKB_KEY_hebrew_finalkaph","XKB_KEY_hebrew_finalmem","XKB_KEY_hebrew_finalnun","XKB_KEY_hebrew_finalpe","XKB_KEY_hebrew_finalzade","XKB_KEY_hebrew_finalzadi","XKB_KEY_hebrew_gimel","XKB_KEY_hebrew_gimmel","XKB_KEY_hebrew_he","XKB_KEY_hebrew_het","XKB_KEY_hebrew_kaph","XKB_KEY_hebrew_kuf","XKB_KEY_hebrew_lamed","XKB_KEY_hebrew_mem","XKB_KEY_hebrew_nun","XKB_KEY_hebrew_pe","XKB_KEY_hebrew_qoph","XKB_KEY_hebrew_resh","XKB_KEY_hebrew_samech","XKB_KEY_hebrew_samekh","XKB_KEY_hebrew_shin","XKB_KEY_hebrew_taf","XKB_KEY_hebrew_taw","XKB_KEY_hebrew_tet","XKB_KEY_hebrew_teth","XKB_KEY_hebrew_waw","XKB_KEY_hebrew_yod","XKB_KEY_hebrew_zade","XKB_KEY_hebrew_zadi","XKB_KEY_hebrew_zain","XKB_KEY_hebrew_zayin","XKB_KEY_hexagram","XKB_KEY_horizconnector","XKB_KEY_horizlinescan1","XKB_KEY_horizlinescan3","XKB_KEY_horizlinescan5","XKB_KEY_horizlinescan7","XKB_KEY_horizlinescan9","XKB_KEY_hpBackTab","XKB_KEY_hpClearLine","XKB_KEY_hpDeleteChar","XKB_KEY_hpDeleteLine","XKB_KEY_hpIO","XKB_KEY_hpInsertChar","XKB_KEY_hpInsertLine","XKB_KEY_hpKP_BackTab","XKB_KEY_hpModelock1","XKB_KEY_hpModelock2","XKB_KEY_hpReset","XKB_KEY_hpSystem","XKB_KEY_hpUser","XKB_KEY_hpYdiaeresis","XKB_KEY_hpblock","XKB_KEY_hpguilder","XKB_KEY_hplira","XKB_KEY_hplongminus","XKB_KEY_hpmute_acute","XKB_KEY_hpmute_asciicircum","XKB_KEY_hpmute_asciitilde","XKB_KEY_hpmute_diaeresis","XKB_KEY_hpmute_grave","XKB_KEY_hstroke","XKB_KEY_ht","XKB_KEY_hyphen","XKB_KEY_i","XKB_KEY_iacute","XKB_KEY_ibelowdot","XKB_KEY_ibreve","XKB_KEY_icircumflex","XKB_KEY_identical","XKB_KEY_idiaeresis","XKB_KEY_idotless","XKB_KEY_ifonlyif","XKB_KEY_igrave","XKB_KEY_ihook","XKB_KEY_imacron","XKB_KEY_implies","XKB_KEY_includedin","XKB_KEY_includes","XKB_KEY_infinity","XKB_KEY_integral","XKB_KEY_intersection","XKB_KEY_iogonek","XKB_KEY_itilde","XKB_KEY_j","XKB_KEY_jcircumflex","XKB_KEY_jot","XKB_KEY_k","XKB_KEY_kana_A","XKB_KEY_kana_CHI","XKB_KEY_kana_E","XKB_KEY_kana_FU","XKB_KEY_kana_HA","XKB_KEY_kana_HE","XKB_KEY_kana_HI","XKB_KEY_kana_HO","XKB_KEY_kana_HU","XKB_KEY_kana_I","XKB_KEY_kana_KA","XKB_KEY_kana_KE","XKB_KEY_kana_KI","XKB_KEY_kana_KO","XKB_KEY_kana_KU","XKB_KEY_kana_MA","XKB_KEY_kana_ME","XKB_KEY_kana_MI","XKB_KEY_kana_MO","XKB_KEY_kana_MU","XKB_KEY_kana_N","XKB_KEY_kana_NA","XKB_KEY_kana_NE","XKB_KEY_kana_NI","XKB_KEY_kana_NO","XKB_KEY_kana_NU","XKB_KEY_kana_O","XKB_KEY_kana_RA","XKB_KEY_kana_RE","XKB_KEY_kana_RI","XKB_KEY_kana_RO","XKB_KEY_kana_RU","XKB_KEY_kana_SA","XKB_KEY_kana_SE","XKB_KEY_kana_SHI","XKB_KEY_kana_SO","XKB_KEY_kana_SU","XKB_KEY_kana_TA","XKB_KEY_kana_TE","XKB_KEY_kana_TI","XKB_KEY_kana_TO","XKB_KEY_kana_TSU","XKB_KEY_kana_TU","XKB_KEY_kana_U","XKB_KEY_kana_WA","XKB_KEY_kana_WO","XKB_KEY_kana_YA","XKB_KEY_kana_YO","XKB_KEY_kana_YU","XKB_KEY_kana_a","XKB_KEY_kana_closingbracket","XKB_KEY_kana_comma","XKB_KEY_kana_conjunctive","XKB_KEY_kana_e","XKB_KEY_kana_fullstop","XKB_KEY_kana_i","XKB_KEY_kana_middledot","XKB_KEY_kana_o","XKB_KEY_kana_openingbracket","XKB_KEY_kana_switch","XKB_KEY_kana_tsu","XKB_KEY_kana_tu","XKB_KEY_kana_u","XKB_KEY_kana_ya","XKB_KEY_kana_yo","XKB_KEY_kana_yu","XKB_KEY_kappa","XKB_KEY_kcedilla","XKB_KEY_kra","XKB_KEY_l","XKB_KEY_lacute","XKB_KEY_latincross","XKB_KEY_lbelowdot","XKB_KEY_lcaron","XKB_KEY_lcedilla","XKB_KEY_leftanglebracket","XKB_KEY_leftarrow","XKB_KEY_leftcaret","XKB_KEY_leftdoublequotemark","XKB_KEY_leftmiddlecurlybrace","XKB_KEY_leftopentriangle","XKB_KEY_leftpointer","XKB_KEY_leftradical","XKB_KEY_leftshoe","XKB_KEY_leftsinglequotemark","XKB_KEY_leftt","XKB_KEY_lefttack","XKB_KEY_less","XKB_KEY_lessthanequal","XKB_KEY_lf","XKB_KEY_lira","XKB_KEY_logicaland","XKB_KEY_logicalor","XKB_KEY_longminus","XKB_KEY_lowleftcorner","XKB_KEY_lowrightcorner","XKB_KEY_lstroke","XKB_KEY_m","XKB_KEY_mabovedot","XKB_KEY_macron","XKB_KEY_malesymbol","XKB_KEY_maltesecross","XKB_KEY_marker","XKB_KEY_masculine","XKB_KEY_minus","XKB_KEY_minutes","XKB_KEY_mu","XKB_KEY_multiply","XKB_KEY_musicalflat","XKB_KEY_musicalsharp","XKB_KEY_mute_acute","XKB_KEY_mute_asciicircum","XKB_KEY_mute_asciitilde","XKB_KEY_mute_diaeresis","XKB_KEY_mute_grave","XKB_KEY_n","XKB_KEY_nabla","XKB_KEY_nacute","XKB_KEY_ncaron","XKB_KEY_ncedilla","XKB_KEY_ninesubscript","XKB_KEY_ninesuperior","XKB_KEY_nl","XKB_KEY_nobreakspace","XKB_KEY_notapproxeq","XKB_KEY_notelementof","XKB_KEY_notequal","XKB_KEY_notidentical","XKB_KEY_notsign","XKB_KEY_ntilde","XKB_KEY_numbersign","XKB_KEY_numerosign","XKB_KEY_o","XKB_KEY_oacute","XKB_KEY_obarred","XKB_KEY_obelowdot","XKB_KEY_ocaron","XKB_KEY_ocircumflex","XKB_KEY_ocircumflexacute","XKB_KEY_ocircumflexbelowdot","XKB_KEY_ocircumflexgrave","XKB_KEY_ocircumflexhook","XKB_KEY_ocircumflextilde","XKB_KEY_odiaeresis","XKB_KEY_odoubleacute","XKB_KEY_oe","XKB_KEY_ogonek","XKB_KEY_ograve","XKB_KEY_ohook","XKB_KEY_ohorn","XKB_KEY_ohornacute","XKB_KEY_ohornbelowdot","XKB_KEY_ohorngrave","XKB_KEY_ohornhook","XKB_KEY_ohorntilde","XKB_KEY_omacron","XKB_KEY_oneeighth","XKB_KEY_onefifth","XKB_KEY_onehalf","XKB_KEY_onequarter","XKB_KEY_onesixth","XKB_KEY_onesubscript","XKB_KEY_onesuperior","XKB_KEY_onethird","XKB_KEY_ooblique","XKB_KEY_openrectbullet","XKB_KEY_openstar","XKB_KEY_opentribulletdown","XKB_KEY_opentribulletup","XKB_KEY_ordfeminine","XKB_KEY_osfActivate","XKB_KEY_osfAddMode","XKB_KEY_osfBackSpace","XKB_KEY_osfBackTab","XKB_KEY_osfBeginData","XKB_KEY_osfBeginLine","XKB_KEY_osfCancel","XKB_KEY_osfClear","XKB_KEY_osfCopy","XKB_KEY_osfCut","XKB_KEY_osfDelete","XKB_KEY_osfDeselectAll","XKB_KEY_osfDown","XKB_KEY_osfEndData","XKB_KEY_osfEndLine","XKB_KEY_osfEscape","XKB_KEY_osfExtend","XKB_KEY_osfHelp","XKB_KEY_osfInsert","XKB_KEY_osfLeft","XKB_KEY_osfMenu","XKB_KEY_osfMenuBar","XKB_KEY_osfNextField","XKB_KEY_osfNextMenu","XKB_KEY_osfPageDown","XKB_KEY_osfPageLeft","XKB_KEY_osfPageRight","XKB_KEY_osfPageUp","XKB_KEY_osfPaste","XKB_KEY_osfPrevField","XKB_KEY_osfPrevMenu","XKB_KEY_osfPrimaryPaste","XKB_KEY_osfQuickPaste","XKB_KEY_osfReselect","XKB_KEY_osfRestore","XKB_KEY_osfRight","XKB_KEY_osfSelect","XKB_KEY_osfSelectAll","XKB_KEY_osfUndo","XKB_KEY_osfUp","XKB_KEY_oslash","XKB_KEY_otilde","XKB_KEY_overbar","XKB_KEY_overline","XKB_KEY_p","XKB_KEY_pabovedot","XKB_KEY_paragraph","XKB_KEY_parenleft","XKB_KEY_parenright","XKB_KEY_partdifferential","XKB_KEY_partialderivative","XKB_KEY_percent","XKB_KEY_period","XKB_KEY_periodcentered","XKB_KEY_permille","XKB_KEY_phonographcopyright","XKB_KEY_plus","XKB_KEY_plusminus","XKB_KEY_prescription","XKB_KEY_prolongedsound","XKB_KEY_punctspace","XKB_KEY_q","XKB_KEY_quad","XKB_KEY_question","XKB_KEY_questiondown","XKB_KEY_quotedbl","XKB_KEY_quoteleft","XKB_KEY_quoteright","XKB_KEY_r","XKB_KEY_racute","XKB_KEY_radical","XKB_KEY_rcaron","XKB_KEY_rcedilla","XKB_KEY_registered","XKB_KEY_rightanglebracket","XKB_KEY_rightarrow","XKB_KEY_rightcaret","XKB_KEY_rightdoublequotemark","XKB_KEY_rightmiddlecurlybrace","XKB_KEY_rightmiddlesummation","XKB_KEY_rightopentriangle","XKB_KEY_rightpointer","XKB_KEY_rightshoe","XKB_KEY_rightsinglequotemark","XKB_KEY_rightt","XKB_KEY_righttack","XKB_KEY_s","XKB_KEY_sabovedot","XKB_KEY_sacute","XKB_KEY_scaron","XKB_KEY_scedilla","XKB_KEY_schwa","XKB_KEY_scircumflex","XKB_KEY_script_switch","XKB_KEY_seconds","XKB_KEY_section","XKB_KEY_semicolon","XKB_KEY_semivoicedsound","XKB_KEY_seveneighths","XKB_KEY_sevensubscript","XKB_KEY_sevensuperior","XKB_KEY_signaturemark","XKB_KEY_signifblank","XKB_KEY_similarequal","XKB_KEY_singlelowquotemark","XKB_KEY_sixsubscript","XKB_KEY_sixsuperior","XKB_KEY_slash","XKB_KEY_soliddiamond","XKB_KEY_space","XKB_KEY_squareroot","XKB_KEY_ssharp","XKB_KEY_sterling","XKB_KEY_stricteq","XKB_KEY_t","XKB_KEY_tabovedot","XKB_KEY_tcaron","XKB_KEY_tcedilla","XKB_KEY_telephone","XKB_KEY_telephonerecorder","XKB_KEY_therefore","XKB_KEY_thinspace","XKB_KEY_thorn","XKB_KEY_threeeighths","XKB_KEY_threefifths","XKB_KEY_threequarters","XKB_KEY_threesubscript","XKB_KEY_threesuperior","XKB_KEY_tintegral","XKB_KEY_topintegral","XKB_KEY_topleftparens","XKB_KEY_topleftradical","XKB_KEY_topleftsqbracket","XKB_KEY_topleftsummation","XKB_KEY_toprightparens","XKB_KEY_toprightsqbracket","XKB_KEY_toprightsummation","XKB_KEY_topt","XKB_KEY_topvertsummationconnector","XKB_KEY_trademark","XKB_KEY_trademarkincircle","XKB_KEY_tslash","XKB_KEY_twofifths","XKB_KEY_twosubscript","XKB_KEY_twosuperior","XKB_KEY_twothirds","XKB_KEY_u","XKB_KEY_uacute","XKB_KEY_ubelowdot","XKB_KEY_ubreve","XKB_KEY_ucircumflex","XKB_KEY_udiaeresis","XKB_KEY_udoubleacute","XKB_KEY_ugrave","XKB_KEY_uhook","XKB_KEY_uhorn","XKB_KEY_uhornacute","XKB_KEY_uhornbelowdot","XKB_KEY_uhorngrave","XKB_KEY_uhornhook","XKB_KEY_uhorntilde","XKB_KEY_umacron","XKB_KEY_underbar","XKB_KEY_underscore","XKB_KEY_union","XKB_KEY_uogonek","XKB_KEY_uparrow","XKB_KEY_upcaret","XKB_KEY_upleftcorner","XKB_KEY_uprightcorner","XKB_KEY_upshoe","XKB_KEY_upstile","XKB_KEY_uptack","XKB_KEY_uring","XKB_KEY_utilde","XKB_KEY_v","XKB_KEY_variation","XKB_KEY_vertbar","XKB_KEY_vertconnector","XKB_KEY_voicedsound","XKB_KEY_vt","XKB_KEY_w","XKB_KEY_wacute","XKB_KEY_wcircumflex","XKB_KEY_wdiaeresis","XKB_KEY_wgrave","XKB_KEY_x","XKB_KEY_xabovedot","XKB_KEY_y","XKB_KEY_yacute","XKB_KEY_ybelowdot","XKB_KEY_ycircumflex","XKB_KEY_ydiaeresis","XKB_KEY_yen","XKB_KEY_ygrave","XKB_KEY_yhook","XKB_KEY_ytilde","XKB_KEY_z","XKB_KEY_zabovedot","XKB_KEY_zacute","XKB_KEY_zcaron","XKB_KEY_zerosubscript","XKB_KEY_zerosuperior","XKB_KEY_zstroke","Precise","System","ThemeManager","ThemeSpec","ThemedPointer","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","fmt","fmt","fmt","from","from","from","init","into","into","into","set_cursor","theme_pointer","theme_pointer_with_impl","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","name","size","Activated","Close","Configure","Event","Fullscreen","Maximized","Resizing","Shell","ShellHandler","ShellHandling","ShellSurface","State","TiledBottom","TiledLeft","TiledRight","TiledTop","Wl","Xdg","Zxdg","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","created","created","created","fmt","fmt","fmt","from","from","from","get","get","get","get_shell","get_shell","get_xdg","into","into","into","move_","needs_configure","new","resize","set_app_id","set_fullscreen","set_geometry","set_max_size","set_maximized","set_min_size","set_minimized","set_title","show_window_menu","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unset_fullscreen","unset_maximized","new_size","states","Abgr1555","Abgr16161616","Abgr16161616f","Abgr2101010","Abgr4444","Abgr8888","Argb1555","Argb16161616","Argb16161616f","Argb2101010","Argb4444","Argb8888","AutoMemPool","Axbxgxrx106106106106","Ayuv","Bgr233","Bgr565","Bgr565A8","Bgr888","Bgr888A8","Bgra1010102","Bgra4444","Bgra5551","Bgra8888","Bgrx1010102","Bgrx4444","Bgrx5551","Bgrx8888","Bgrx8888A8","C8","DoubleMemPool","Format","Gr1616","Gr88","MemPool","Nv12","Nv15","Nv16","Nv21","Nv24","Nv42","Nv61","P010","P012","P016","P210","Q401","Q410","R16","R8","Rg1616","Rg88","Rgb332","Rgb565","Rgb565A8","Rgb888","Rgb888A8","Rgba1010102","Rgba4444","Rgba5551","Rgba8888","Rgbx1010102","Rgbx4444","Rgbx5551","Rgbx8888","Rgbx8888A8","ShmHandler","ShmHandling","Uyvy","Vuy101010","Vuy888","Vyuy","X0l0","X0l2","Xbgr1555","Xbgr16161616","Xbgr16161616f","Xbgr2101010","Xbgr4444","Xbgr8888","Xbgr8888A8","Xrgb1555","Xrgb16161616","Xrgb16161616f","Xrgb2101010","Xrgb4444","Xrgb8888","Xrgb8888A8","Xvyu1216161616","Xvyu16161616","Xvyu2101010","Xyuv8888","Y0l0","Y0l2","Y210","Y212","Y216","Y410","Y412","Y416","Yuv410","Yuv411","Yuv420","Yuv42010bit","Yuv4208bit","Yuv422","Yuv444","Yuyv","Yvu410","Yvu411","Yvu420","Yvu422","Yvu444","Yvyu","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffer","buffer","clone","clone_into","created","eq","flush","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_raw","get","into","into","into","into","into","is_used","mmap","new","new","new","new","pool","resize","resize","seek","shm_formats","shm_formats","to_owned","to_raw","try_draw","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","with_min_align","write","Activated","Active","ButtonState","ClientSide","Close","Close","Config","Configure","Decorations","Disabled","Error","Event","FallbackFrame","FollowServer","Frame","FrameRequest","Fullscreen","Hovered","Idle","Inactive","Maximize","Maximized","Minimize","Move","None","Refresh","Refresh","Resize","Resizing","ServerSide","ShowMenu","State","TiledBottom","TiledLeft","TiledRight","TiledTop","UnMaximize","Window","WindowState","add_borders","add_borders","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","drop","drop","eq","eq","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_raw","init","init","into","into","into","into","into","into","into","into","location","location","new_seat","new_seat","redraw","redraw","refresh","remove_seat","remove_seat","resize","resize","resize","set_app_id","set_config","set_config","set_decorate","set_frame_config","set_fullscreen","set_hidden","set_hidden","set_max_size","set_maximized","set_min_size","set_minimized","set_resizable","set_resizable","set_resizable","set_states","set_states","set_title","set_title","set_title","start_interactive_move","subtract_borders","subtract_borders","surface","to_owned","to_owned","to_owned","to_owned","to_raw","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unset_fullscreen","unset_maximized","new_size","states"],"q":[[0,"smithay_client_toolkit"],[47,"smithay_client_toolkit::data_device"],[223,"smithay_client_toolkit::data_device::DataSourceEvent"],[227,"smithay_client_toolkit::data_device::DndEvent"],[237,"smithay_client_toolkit::environment"],[296,"smithay_client_toolkit::output"],[429,"smithay_client_toolkit::primary_selection"],[505,"smithay_client_toolkit::primary_selection::PrimarySelectionSourceEvent"],[507,"smithay_client_toolkit::reexports"],[510,"smithay_client_toolkit::seat"],[556,"smithay_client_toolkit::seat::keyboard"],[660,"smithay_client_toolkit::seat::keyboard::Event"],[677,"smithay_client_toolkit::seat::keyboard::RepeatKind"],[679,"smithay_client_toolkit::seat::keyboard::keysyms"],[3087,"smithay_client_toolkit::seat::pointer"],[3127,"smithay_client_toolkit::seat::pointer::ThemeSpec"],[3129,"smithay_client_toolkit::shell"],[3199,"smithay_client_toolkit::shell::Event"],[3201,"smithay_client_toolkit::shm"],[3381,"smithay_client_toolkit::window"],[3550,"smithay_client_toolkit::window::Event"]],"d":["An error representing the fact that a required global was …","An adapter to insert a Wayland <code>EventQueue</code> into a calloop …","","","","","","","Helpers to handle data device related actions","Declare a batteries-included SCTK environment","Environment management utilities","Macro for declaring an environment","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns a list of outputs the surface is displayed on.","Returns the current suggested scale factor of a surface.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Wrap an <code>EventQueue</code> as a <code>WaylandSource</code>.","Initialize a batteries-included SCTK environment","Types and functions related to graphical outputs","","","Helpers to handle primary selection related actions.","","","Access the underlying event queue","Insert this source into given event loop with an adapter …","Re-exports of some crates, for convenience","","","Types for automatically handling seats","Unified shell surface handling","Various small utilities helping you to write clients","","","","","","","","","","Window abstraction","Notifies of the current selected action for the drag’n’…","ask action","The action using this data source was cancelled.","copy action","Handle to support data exchange on a given seat","A handler for data devices","An interface trait to forward the data device handler …","A data offer for receiving data though copy/paste or drag …","A data source for sending data though copy/paste or drag …","Possible events a data source needs to react to","drag and drop actions","Possible events generated during a drag’n’drop session","The drag’n’drop was dropped on your surface","The user performed the “drop” during a drag’n’drop","A new drag’n’drop entered your surfaces","The action is finished, this data source will not be used …","The drag’n’drop offer left your surface","The drag’n’drop offer moved on the surface","move action","no action","A file descriptor that can only be read from","Write the offered data for selected mime type","Target mime type","A file descriptor that can only be written to","Accept a mime type for receiving data through this offer","Returns the set containing all flags.","","","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","","","Returns an empty set of flags.","","","","Notify that you are finished with this offer, and will no …","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","","","","Get the list of available actions for this offer","Get the currently set final action for this offer","","Initialize a data device handler","Create the DataDevice helper for this seat.","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Create a new data source","Returns the complement of this set of flags.","","","","Request to receive the data of a given mime type","Receive data to the write end of a raw file descriptor. If …","","Removes the specified flags in-place.","","Inserts or removes the specified flags depending on the …","Notify the send and compositor of the dnd actions you …","Set the global drag’n’drop callback","","Provide a data source as the new content for the selection","Start a drag’n’drop offer","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","","","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","","Access the data device associated with a seat","","Access the <code>DataOffer</code> currently associated with current DnD","Access the list of mime types proposed by this offer","Access the <code>DataOffer</code> currently associated with the …","","The action chosen by the target","Requested mime type","The type accepted by the target","Pipe to write into","The associated data offer","The associated data offer","The associated data offer","A serial associated with the entry of this dnd","The entered surface","The time of this motion","horizontal location on the surface","new horizontal location","vertical location on the surface","new vertical location","A Wayland Environment","Required trait for implementing a handler for “single” …","Internal trait for the <code>Environment</code> logic","Required trait for implementing a handler for “multi” …","A minimalist global handler for “single” globals","","","","","","","Create an automatic memory pool","Create a double memory pool","Create a new shell surface for this surface","Create a simple memory pool","Create a DPI-aware surface","Create a DPI-aware surface with callbacks","Create a new window wrapping given surface","This global was created and signaled in the registry with …","A new instance of this global was created with given id …","","","","Returns the argument unchanged.","Returns the argument unchanged.","Access the global if it was signaled","","Access all the currently existing instances","Access all instances of a “multi” global","Shorthand method to retrieve the list of outputs","Shorthand method to retrieve the list of seats","Access a “single” global","Get the best available primary selection device manager …","Get the best available shell protocol","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Insert a new listener for outputs","Insert a new listener for seats","The underlying <code>GlobalManager</code>, if you need to do manual …","Create new <code>Environment</code>","Create a new handler","Create a new data source","Create new pending <code>Environment</code>","Create a new primary selection source.","Process a <code>GlobalEvent</code>","The instance with given id was removed","Access a “single” global or panic","Set the data device callback","Access the list of SHM formats supported by the compositor","","","","","","","","Access the data device associated with a seat","Access the inner environment","Access the primary selection associated with a seat.","180 degree flip around a vertical axis","flip and rotate 180 degrees counter-clockwise","flip and rotate 270 degrees counter-clockwise","flip and rotate 90 degrees counter-clockwise","horizontal BGR","horizontal RGB","A possible mode for an output","no geometry","no transform","A handler for <code>wl_output</code>","Trait representing the OutputHandler functions","Compiled information about an output","A handle to an output listener callback","A handle to an output status callback","subpixel geometry information","transform from framebuffer to output","unknown geometry","vertical BGR","vertical RGB","A handler for <code>zxdg_output_manager_v1</code>","180 degrees counter-clockwise","270 degrees counter-clockwise","90 degrees counter-clockwise","Add a listener to this output","","","","","","","","","","","","","","","","","","","","","","","","","","","The description of this output as advertised by the server","Number of pixels of this mode in format <code>(width, height)</code>","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","The ID of this output as a global","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Whether this is the current mode for this output","Whether this is the preferred mode for this output","Insert a listener for output creation and removal events","","Location of the top-left corner of this output in …","The make name of this output as advertised by the server","The model name of this output as advertised by the server","Possible modes for an output","The name of this output as advertised by the server","Create a new instance of this handler","Create a new instance of this handler bound to the given …","Helper function to create a bound pair of OutputHandler …","Has this output been unadvertized by the registry","Physical dimensions of this output, in unspecified units","Refresh rate for this mode, in mHz","","The scaling factor of this output","The subpixel layout for this output","","","","","","","The current transformation applied to this output","","","","","","","","","","","","","","","","","","","","","","","","","Access the info associated with this output","The action using the primary selection source was …","The old <code>gtk_primary_selection</code> protocol, which is still …","Handle to support primary selection on a given seat.","Possible supported primary selection protocols","A handler for primary selection.","An interface trait to forward the primary selection device …","A primary selection offer for receiving data through …","A primary selection source for sending data through …","Possible events a primary selection source needs to react …","Write the offered data for selected mime type.","The current standard <code>primary_selection</code> protocol.","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Get the best available primary selection device manager …","Get the best available primary selection device manager …","Initialize a primary selection handler.","Create the <code>PrimarySelectionDevice</code> helper for this seat.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Create a new primary selection source.","Request to receive the data of a given mime type.","Provide a primary selection source as the new content for …","","","","","","","","","","","","","","","","","","","Access the list of mime types proposed by this offer.","Access the primary selection associated with a seat.","Access the primary selection associated with a seat.","Access the <code>PrimarySelectionOffer</code> currently associated with …","Requested mime type.","Pipe to write into.","","","","The metadata associated with a seat","A simple handler for seats","Trait representing the SeatHandler functions","A handle to an seat listener callback","","","","","","","","","Get the copy of the data associated with this seat","","Whether this seat has been removed from the registry","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Whether this seat has a keyboard available","Whether this seat has a pointer available","Whether this seat has a touchscreen available","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Utilities for keymap interpretation of keyboard input","Insert a listener for seat events","","The name of this seat","Create a new SeatHandler","Utilities to work with pointers and their icons","","","","","","","","","","","","Access the data associated with this seat","Provided RMLVO specified a keymap that would not be loaded","The keyboard focus has entered a surface","An error that occurred while trying to initialize a mapped …","Events received from a mapped keyboard","keys will be repeated at a set rate and delay","A key event occurred","physical key state","The keyboard focus has left a surface","The key modifiers have changed state","Represents the current state of the keyboard modifiers","The provided seat does not have the keyboard capability","key is pressed","The RMLVO description of a keymap","key is not pressed","A key repetition event","Possible kinds of key repetition","An event source managing the key repetition of a keyboard","keys will be repeated at a rate and delay set by the …","Failed to init timers for repetition","libxkbcommon is not available","The “alt” key","","","","","","","","","","","","","","","The “Caps lock” key","","","","","The “control” key","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","A comma separated list of layouts (languages) to include …","The “logo” key","Implement a keyboard for keymap translation with key …","Implement a keyboard for keymap translation with key …","The keyboard model by which to interpret keycodes and LEDs","The “Num lock” key","A comma separated list of options, through which the user …","","","","The rules file to use","The “shift” key","","","","","","","","","","","","","","","","","","","","","","","","","","A comma separated list of variants, one per layout, which …","interpreted symbol of the key","interpreted symbol of the key","interpreted symbols of the currently pressed keys","current state of the modifiers","raw value of the key","raw value of the key","raw values of the currently pressed keys","serial number of the event","serial number of the event","serial number of the event","new state of the key","surface that was entered","surface that was left","time at which the keypress occurred","time at which the repetition occured","utf8 interpretation of the entered text","utf8 interpretation of the entered text","delay (in milliseconds) between a key press and the start …","The number of repetitions per second that should occurse this specific theme with given base size","Use the system provided theme","Wrapper managing a system theme for pointer images","The specification of a cursor theme to be used by the …","Wrapper of a themed pointer","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Load a system pointer theme","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Change the cursor to the given cursor name","Wrap a pointer to theme it","Initialize a new pointer as a ThemedPointer with an …","","","","","","","","","","","","Name of the cursor theme to use","Base size of the cursor images","the surface is now activated","A close request has been received","The state of your window has been changed","Possible events generated by a shell surface that you need …","the surface is fullscreen","the surface is maximized","the surface is being resized","Possible supported shell protocols","A handler for shells","A helper trait for delegating shell handling","Trait abstracting over shell surface protocols","types of state on the surface","the surface is tiled","the surface is tiled","the surface is tiled","the surface is tiled","The legacy <code>wl_shell</code>.","The current standard <code>xdg_shell</code> protocol.","A previous iteration of the <code>xdg_shell</code> protocol.","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Get the best available shell","","Retrive the <code>XdgToplevel</code> proxy if the underlying shell …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Moves the shell surface","Check if the shell in use needs you to wait for a <code>configure</code>…","Create a new handler","Resizes the shell surface","Set the app id of the shell surface","Make fullscreen","Set geometry","Set maximum surface size","Maximize surface","Set minimum surface size","Minimize surface","Set the title of the shell surface","Show window menu.","","","","","","","","","","","Unset fullscreen","Unmaximize surface","Optional new size for your shell surface","New combination of states of your window","16-bit ABGR 1555 format, [15:0] A:B:G:R 1:5:5:5 little …","[63:0] A:B:G:R 16:16:16:16 little endian","[63:0] A:B:G:R 16:16:16:16 little endian","32-bit ABGR format, [31:0] A:B:G:R 2:10:10:10 little endian","16-bit ABGR format, [15:0] A:B:G:R 4:4:4:4 little endian","32-bit ABGR format, [31:0] A:B:G:R 8:8:8:8 little endian","16-bit ARGB 1555 format, [15:0] A:R:G:B 1:5:5:5 little …","[63:0] A:R:G:B 16:16:16:16 little endian","[63:0] A:R:G:B 16:16:16:16 little endian","32-bit ARGB format, [31:0] A:R:G:B 2:10:10:10 little endian","16-bit ARGB format, [15:0] A:R:G:B 4:4:4:4 little endian","32-bit ARGB format, [31:0] A:R:G:B 8:8:8:8 little endian","A wrapper handling an SHM memory pool backed by a shared …","[63:0] A:x:B:x:G:x:R:x 10:6:10:6:10:6:10:6 little endian","packed AYCbCr format, [31:0] A:Y:Cb:Cr 8:8:8:8 little …","8-bit BGR format, [7:0] B:G:R 2:3:3","16-bit BGR 565 format, [15:0] B:G:R 5:6:5 little endian","","24-bit BGR format, [23:0] B:G:R little endian","","32-bit BGRA format, [31:0] B:G:R:A 10:10:10:2 little endian","16-bit BGRA format, [15:0] B:G:R:A 4:4:4:4 little endian","16-bit BGRA 5551 format, [15:0] B:G:R:A 5:5:5:1 little …","32-bit BGRA format, [31:0] B:G:R:A 8:8:8:8 little endian","32-bit BGRx format, [31:0] B:G:R:x 10:10:10:2 little endian","16-bit BGRx format, [15:0] B:G:R:x 4:4:4:4 little endian","16-bit BGRx 5551 format, [15:0] B:G:R:x 5:5:5:1 little …","32-bit BGRx format, [31:0] B:G:R:x 8:8:8:8 little endian","","8-bit color index format, [7:0] C","A Double memory pool, for convenient double-buffering","pixel formats","[31:0] G:R 16:16 little endian","[15:0] G:R 8:8 little endian","A wrapper handling an SHM memory pool backed by a shared …","2 plane YCbCr Cr:Cb format, 2x2 subsampled Cr:Cb plane","2x2 subsampled Cr:Cb plane","2 plane YCbCr Cr:Cb format, 2x1 subsampled Cr:Cb plane","2 plane YCbCr Cb:Cr format, 2x2 subsampled Cb:Cr plane","non-subsampled Cr:Cb plane","non-subsampled Cb:Cr plane","2 plane YCbCr Cb:Cr format, 2x1 subsampled Cb:Cr plane","2x2 subsampled Cr:Cb plane 10 bits per channel","2x2 subsampled Cr:Cb plane 12 bits per channel","2x2 subsampled Cr:Cb plane 16 bits per channel","2x1 subsampled Cr:Cb plane, 10 bit per channel","","","[15:0] R little endian","[7:0] R","[31:0] R:G 16:16 little endian","[15:0] R:G 8:8 little endian","8-bit RGB format, [7:0] R:G:B 3:3:2","16-bit RGB 565 format, [15:0] R:G:B 5:6:5 little endian","","24-bit RGB format, [23:0] R:G:B little endian","","32-bit RGBA format, [31:0] R:G:B:A 10:10:10:2 little endian","16-bit RBGA format, [15:0] R:G:B:A 4:4:4:4 little endian","16-bit RGBA 5551 format, [15:0] R:G:B:A 5:5:5:1 little …","32-bit RGBA format, [31:0] R:G:B:A 8:8:8:8 little endian","32-bit RGBx format, [31:0] R:G:B:x 10:10:10:2 little endian","16-bit RGBx format, [15:0] R:G:B:x 4:4:4:4 little endian","16-bit RGBx 5551 format, [15:0] R:G:B:x 5:5:5:1 little …","32-bit RGBx format, [31:0] R:G:B:x 8:8:8:8 little endian","","A handler for the <code>wl_shm</code> global","An interface trait to forward the shm handler capability","packed YCbCr format, [31:0] Y1:Cr0:Y0:Cb0 8:8:8:8 little …","Y followed by U then V, 10:10:10. Non-linear modifier only","[23:0] Cr:Cb:Y 8:8:8 little endian","packed YCbCr format, [31:0] Y1:Cb0:Y0:Cr0 8:8:8:8 little …","[63:0] X3:X2:Y3:0:Cr0:0:Y2:0:X1:X0:Y1:0:Cb0:0:Y0:0 …","[63:0] X3:X2:Y3:Cr0:Y2:X1:X0:Y1:Cb0:Y0 …","16-bit xBGR 1555 format, [15:0] x:B:G:R 1:5:5:5 little …","[63:0] x:B:G:R 16:16:16:16 little endian","[63:0] x:B:G:R 16:16:16:16 little endian","32-bit xBGR format, [31:0] x:B:G:R 2:10:10:10 little endian","16-bit xBGR format, [15:0] x:B:G:R 4:4:4:4 little endian","32-bit xBGR format, [31:0] x:B:G:R 8:8:8:8 little endian","","16-bit xRGB format, [15:0] x:R:G:B 1:5:5:5 little endian","[63:0] x:R:G:B 16:16:16:16 little endian","[63:0] x:R:G:B 16:16:16:16 little endian","32-bit xRGB format, [31:0] x:R:G:B 2:10:10:10 little endian","16-bit xRGB format, [15:0] x:R:G:B 4:4:4:4 little endian","32-bit RGB format, [31:0] x:R:G:B 8:8:8:8 little endian","","[63:0] X:0:Cr:0:Y:0:Cb:0 12:4:12:4:12:4:12:4 little endian","[63:0] X:Cr:Y:Cb 16:16:16:16 little endian","[31:0] X:Cr:Y:Cb 2:10:10:10 little endian","[31:0] X:Y:Cb:Cr 8:8:8:8 little endian","[63:0] A3:A2:Y3:0:Cr0:0:Y2:0:A1:A0:Y1:0:Cb0:0:Y0:0 …","[63:0] A3:A2:Y3:Cr0:Y2:A1:A0:Y1:Cb0:Y0 …","[63:0] Cr0:0:Y1:0:Cb0:0:Y0:0 10:6:10:6:10:6:10:6 little …","[63:0] Cr0:0:Y1:0:Cb0:0:Y0:0 12:4:12:4:12:4:12:4 little …","[63:0] Cr0:Y1:Cb0:Y0 16:16:16:16 little endian per 2 Y …","[31:0] A:Cr:Y:Cb 2:10:10:10 little endian","[63:0] A:0:Cr:0:Y:0:Cb:0 12:4:12:4:12:4:12:4 little endian","[63:0] A:Cr:Y:Cb 16:16:16:16 little endian","3 plane YCbCr format, 4x4 subsampled Cb (1) and Cr (2) …","3 plane YCbCr format, 4x1 subsampled Cb (1) and Cr (2) …","3 plane YCbCr format, 2x2 subsampled Cb (1) and Cr (2) …","","","3 plane YCbCr format, 2x1 subsampled Cb (1) and Cr (2) …","3 plane YCbCr format, non-subsampled Cb (1) and Cr (2) …","packed YCbCr format, [31:0] Cr0:Y1:Cb0:Y0 8:8:8:8 little …","3 plane YCbCr format, 4x4 subsampled Cr (1) and Cb (2) …","3 plane YCbCr format, 4x1 subsampled Cr (1) and Cb (2) …","3 plane YCbCr format, 2x2 subsampled Cr (1) and Cb (2) …","3 plane YCbCr format, 2x1 subsampled Cr (1) and Cb (2) …","3 plane YCbCr format, non-subsampled Cr (1) and Cb (2) …","packed YCbCr format, [31:0] Cb0:Y1:Cr0:Y0 8:8:8:8 little …","","","","","","","","","","","Create a new buffer to this pool","Create a new buffer in this pool","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns true if the pool contains buffers that are …","Uses the memmap2 crate to map the underlying shared memory …","Create a new memory pool associated with given shm","Create a double memory pool","Create a new memory pool associated with the given shm","Create a new ShmHandler","This method checks both its internal memory pools and …","Resize the memory pool","Resize the memory pool","","Access the list of SHM formats supported by the compositor","","","","Try drawing with the given closure","","","","","","","","","","","","","","","","Create a new memory pool associated with the given shm.","","the surface is now activated","The window is active, in the foreground","Represents the status of a button","Force using the client-side <code>Frame</code>","A close request has been received","The window should be closed","Configuration for this frame","The state of your window has been changed","Possible decoration modes for a Window","Button is disabled","Type of errors that may occur when attempting to create a …","Possible events generated by a window that you need to …","A simple set of decorations that can be used as a fallback","Follow the preference of the compositor","Interface for defining the drawing of decorations","Request generated by a Frame","the surface is fullscreen","Button is being hovered over by pointer","Button is not being hovered over by pointer","The window is inactive, in the background","The window should be maximized","the surface is maximized","The window should be minimized","An interactive move should be started","Don’t decorate the Window","The decorations need to be refreshed","The frame requests to be refreshed","An interactive resize should be started","the surface is being resized","Request server-side decorations","Show window menu.","types of state on the surface","the surface is tiled","the surface is tiled","the surface is tiled","the surface is tiled","The window should be unmaximized","A window","Represents the status of a window","Adds the border dimensions to the given dimensions.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Initialize the Frame.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns the coordinates of the top-left corner of the …","","Notify that a new wl_seat should be handled","","Redraw the decorations","","Refreshes the frame","Notify that this seat has lost the pointer capability or …","","Change the size of the decorations","Resize the decorations","","Set an app id for the surface.","Sets the configuration for the frame","","Set whether the window should be decorated or not.","Sets the frame configuration for the window","Request the window to be set fullscreen","Hide or show the decorations","","Sets the maximum possible size for this window","Request the window to be maximized","Sets the minimum possible size for this window","Request the window to be minimized","Set whether interactive resize hints should be displayed …","Set whether the window should be resizeable by the user","","Set the Window XDG states for the frame","","Sets the frames title","Set a short title for the window.","","Start an interactive, user-driven move of the surface","Subtracts the border dimensions from the given dimensions.","","Access the surface wrapped in this Window","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Request the window to quit fullscreen mode","Request the window to be un-maximized","Optional new size for your <em>inner</em> surface","New combination of states of your window"],"i":[0,0,2,1,2,1,1,1,0,0,0,0,2,1,1,2,1,0,0,2,1,2,0,0,2,2,0,2,1,2,2,0,2,2,0,0,0,1,1,2,1,2,1,2,1,2,0,42,27,42,27,0,0,0,0,0,0,0,0,40,42,40,42,40,40,27,27,0,42,42,0,25,27,28,30,27,27,27,27,27,27,27,38,40,25,28,41,42,30,34,27,38,40,25,28,41,42,30,34,27,27,27,27,27,27,34,27,38,25,27,27,27,27,25,30,38,40,25,28,41,42,30,34,27,27,27,27,27,38,40,25,28,41,42,30,34,27,27,27,27,27,27,28,30,34,25,25,27,34,38,27,27,27,38,40,25,28,41,42,30,34,27,28,30,27,27,41,27,27,28,28,25,25,28,27,28,27,25,85,34,38,38,27,27,27,27,27,27,38,40,25,28,41,42,30,34,27,38,40,25,28,41,42,30,34,27,38,40,25,28,41,42,30,34,27,27,28,85,34,38,25,38,30,139,140,141,140,142,143,144,142,142,143,142,143,142,143,0,0,0,0,0,52,73,52,73,52,52,52,52,52,52,52,52,52,54,63,73,52,73,52,73,54,73,63,52,52,52,52,52,52,52,73,52,52,52,52,73,52,52,52,82,63,52,52,52,52,52,73,52,73,52,73,52,52,52,95,95,95,95,94,94,0,94,95,0,0,0,0,0,0,0,94,94,94,0,95,95,95,0,96,91,79,92,93,97,94,95,96,91,79,92,93,97,94,95,92,93,94,95,92,93,94,95,96,97,93,92,94,95,96,91,79,92,93,97,94,95,96,91,79,92,93,97,94,95,94,95,97,96,93,96,91,79,92,93,97,94,95,92,92,78,96,93,93,93,93,93,96,97,97,93,93,92,96,93,93,92,93,94,95,94,95,93,96,91,79,92,93,97,94,95,96,91,79,92,93,97,94,95,96,91,79,92,93,97,94,95,0,102,76,0,0,0,0,0,0,0,102,76,100,101,83,102,99,76,100,101,83,102,99,76,99,99,100,101,100,101,83,102,99,76,100,101,83,102,99,76,99,99,75,99,99,100,100,101,83,102,99,76,83,101,100,100,101,83,102,99,76,100,101,83,102,99,76,100,101,83,102,99,76,101,75,99,100,145,145,0,0,0,0,0,0,0,107,80,106,107,80,106,106,106,0,107,106,107,80,106,107,80,106,107,106,106,106,107,80,106,0,46,107,106,107,0,107,106,107,80,106,107,80,106,107,80,106,0,112,113,0,0,111,113,0,113,113,0,112,109,0,109,113,0,0,111,112,112,108,110,108,109,111,112,113,114,110,108,109,111,112,113,114,108,108,109,108,109,108,108,109,110,108,109,111,112,113,114,110,108,109,111,112,113,114,109,110,108,109,111,112,113,114,0,110,108,0,0,110,108,110,114,114,114,110,108,108,109,109,110,108,109,111,112,113,114,110,108,109,111,112,113,114,110,108,109,111,112,113,114,114,110,146,147,148,149,146,147,148,148,150,146,146,148,150,146,147,146,147,151,151,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,118,118,0,0,0,118,65,116,118,65,116,65,116,65,116,116,118,65,116,118,65,116,65,118,65,116,116,65,65,65,116,118,65,116,118,65,116,118,65,116,152,152,136,120,120,0,136,136,136,0,0,0,0,0,136,136,136,136,77,77,77,120,77,121,120,77,121,120,120,121,121,121,120,77,121,120,77,121,121,121,121,57,121,58,120,77,121,58,77,121,58,58,58,58,58,58,58,58,58,58,120,120,77,121,120,77,121,120,77,121,58,58,153,153,87,87,87,87,87,87,87,87,87,87,87,87,0,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,0,0,87,87,0,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,0,0,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,60,87,56,55,128,60,87,56,55,128,60,55,87,87,128,87,60,60,87,56,55,128,60,87,56,55,128,87,128,60,87,56,55,128,60,60,60,56,55,128,56,60,55,60,86,128,87,87,55,60,87,56,55,128,60,87,56,55,128,60,87,56,55,128,55,60,136,134,0,137,135,138,66,135,0,133,66,0,0,137,0,0,136,133,133,134,138,136,138,138,137,135,138,138,136,137,138,0,136,136,136,136,138,0,0,66,132,67,132,133,134,135,137,138,136,67,132,133,134,135,137,138,136,133,134,135,136,133,134,135,136,67,132,133,134,137,136,133,134,137,67,132,133,134,135,137,138,136,67,132,133,134,134,135,137,138,136,136,66,132,67,132,133,134,135,137,138,136,66,132,66,132,66,132,67,66,132,66,67,132,67,66,132,67,67,67,66,132,67,67,67,67,66,67,132,66,132,66,67,132,67,66,132,67,133,134,135,136,136,67,132,133,134,135,137,138,136,67,132,133,134,135,137,138,136,67,132,133,134,135,137,138,136,67,67,154,154],"f":[0,0,[[]],[[]],[[]],[[]],[1,1],[[]],0,0,0,0,[[2,3],4],[[1,3],4],[[1,3],4],[[]],[[]],[5,[[7,[6]]]],[5,8],[[]],[[]],[9,2],0,0,[[2,10],11],[[2,10],11],0,[[2,12,13,10],[[15,[14]]]],[16],[2,9],[[2,17],[[20,[18,[19,[2]]]]]],0,[[2,21,22],11],[[2,21,22],11],0,0,0,[[]],[[],23],[[],20],[[],20],[[],20],[[],20],[[],24],[[],24],[[2,21],11],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[25,[26,[23]]]],[[],27],[28,29],[30,29],[[27,27],27],[[27,27]],[[27,27],27],[[27,27]],[27,31],[[27,27],27],[[27,27]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[27,27],[[]],[[27,27],32],[27,27],[[27,27],33],[[34,[36,[35]],31,31,37]],[[27,27],27],[38],[25],[[],27],[[27,27],33],[[],33],[[27,39]],[25],[30,15],[[38,3],4],[[40,3],4],[[25,3],4],[[28,3],4],[[41,3],4],[[42,3],4],[[30,3],4],[[34,3],4],[[27,3],[[20,[43]]]],[[27,3],[[20,[43]]]],[[27,3],[[20,[43]]]],[[27,3],[[20,[43]]]],[[27,3],[[20,[43]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[31,[[26,[27]]]],[31,27],[31,27],[39,27],[31,[[26,[27]]]],[29,28],[29,30],[34,[[26,[[36,[44]]]]]],[25,27],[25,27],[[27,45]],[46,34],[[44,47,10],38],[[27,27]],[[27,27],27],[[27,27],33],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[28,29],[30,29],[27,33],[27,33],[[[36,[44]],39,10],41],[27,27],[[27,27],[[26,[32]]]],[[28,12,13,10],[[15,[14]]]],[[28,[49,[48]]],[[15,[50]]]],[[25,23],[[15,[28]]]],[[25,23,29]],[[28,21,22],11],[[27,27]],[[28,21,22],11],[[27,27,33]],[[25,27,27]],[10,[[20,[1]]]],[[34,10],[[20,[1]]]],[[38,[26,[41]],31]],[[38,5,[26,[41]],27,[26,[5]],31]],[[27,27],27],[[27,27]],[[27,27],27],[[]],[27,31],[[27,27]],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[27,27],27],[[28,21],11],[[47,51],[[20,[1]]]],[[34,47,51],[[20,[1]]]],[[38,51]],[[25,51]],[[38,51]],[[30,[49,[48]]],[[15,[50]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[52,52],[[]],[[[52,[[54,[53]]]]],[[15,[55]]]],[[[52,[[54,[53]]]],10],[[15,[56]]]],[[[52,[57]],5,10],[[59,[58]]]],[[[52,[[54,[53]]]],10],[[15,[60]]]],[[[52,[[54,[61]]]]],[[36,[5]]]],[[[52,[[54,[61]]]],10],[[36,[5]]]],[[[52,[[0,[[54,[61]],[54,[62]],[54,[53]],57,[63,[47]],[54,[64]],46]]]],5,[26,[65]],10],[[20,[[67,[66]]]]]],[[[36,[35]],31,31,37]],[[[36,[35]],31,31,37]],[[[73,[[0,[68,69,[71,[[70,[[0,[68,69,[71,[[70,[[0,[68,69,[71,[70]],[72,[70]]]]]]]],[72,[[70,[[0,[68,69,[71,[70]],[72,[70]]]]]]]]]]]]]],[72,[[70,[[0,[68,69,[71,[[70,[[0,[68,69,[71,[70]],[72,[70]]]]]]]],[72,[[70,[[0,[68,69,[71,[70]],[72,[70]]]]]]]]]]]]]]]]]],[36,[35]],31,31,37]],[[[52,[74]],3],4],[[[73,[[0,[74,68]]]],3],4],[[]],[[]],[[],[[26,[36]]]],[[[73,[[0,[68,69,[71,[[70,[[0,[68,69,[71,[[70,[[0,[68,69,[71,[70]],[72,[70]]]]]]]],[72,[[70,[[0,[68,69,[71,[70]],[72,[70]]]]]]]]]]]]]],[72,[[70,[[0,[68,69,[71,[[70,[[0,[68,69,[71,[70]],[72,[70]]]]]]]],[72,[[70,[[0,[68,69,[71,[70]],[72,[70]]]]]]]]]]]]]]]]]]],[[26,[[36,[[0,[68,69,[71,[[70,[[0,[68,69,[71,[[70,[[0,[68,69,71,72]]]]]],[72,[[70,[[0,[68,69,71,72]]]]]]]]]]]],[72,[[70,[[0,[68,69,[71,[[70,[[0,[68,69,71,72]]]]]],[72,[[70,[[0,[68,69,71,72]]]]]]]]]]]]]]]]]]]],[[],[[7,[36]]]],[[[52,[[63,[68]]]]],[[7,[[36,[68]]]]]],[[[52,[[63,[6]]]]],[[7,[6]]]],[[[52,[[63,[47]]]]],[[7,[[36,[47]]]]]],[[[52,[[54,[68]]]]],[[26,[[36,[68]]]]]],[[[52,[75]]],[[26,[76]]]],[[[52,[57]]],[[26,[77]]]],[[]],[[]],[[[52,[78]],10],79],[[[52,[46]],10],80],0,[[[36,[81]],9,82],[[15,[[52,[82]]]]]],[[],[[73,[68]]]],[[[52,[[54,[44]]]],[7,[23]],10],41],[[[36,[81]],82],[[52,[82]]]],[[[52,[75]],[7,[23]],10],83],[[84,[36,[35]],37]],[[31,37]],[[[52,[[54,[68]]]]],[[36,[68]]]],[[[52,[85]],10],[[20,[1]]]],[[[52,[86]]],[[7,[87]]]],[[]],[[],20],[[],20],[[],20],[[],20],[[],24],[[],24],[[[52,[85]],47,51],[[20,[1]]]],[[52,51]],[[[52,[75]],47,51],[[20,[1]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[6,[0,[88,89,90]]],91],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[92,92],[93,93],[94,94],[95,95],[[]],[[]],[[]],[[]],[[96,[36,[35]],31,31,37]],[[97,[36,[35]],31,31,37]],0,0,[[94,94],33],[[95,95],33],[[96,3],4],[[91,3],4],[[79,3],4],[[92,3],4],[[93,3],4],[[97,3],4],[[94,3],[[20,[43]]]],[[95,3],[[20,[43]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[31,[[26,[94]]]],[31,[[26,[95]]]],[97,[[26,[[36,[98]]]]]],[96,[[7,[[36,[6]]]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[10,79],[[96,10],79],0,0,0,0,0,[[],96],[96,97],[[]],0,0,0,[[96,31,37]],0,0,[[]],[[]],[[]],[[]],[94,31],[95,31],0,[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[6,51],26],0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[99,[36,[35]],31,31,37]],[[99,[36,[35]],31,31,37]],[100],[101],[[100,3],4],[[101,3],4],[[83,3],4],[[102,3],4],[[99,3],4],[[76,3],4],[[]],[[]],[[]],[[]],[[]],[[]],[99,[[26,[[36,[103]]]]]],[99,[[26,[[36,[104]]]]]],[[],[[26,[76]]]],[99,[[26,[76]]]],[46,99],[[76,47],100],[[]],[[]],[[]],[[]],[[]],[[]],[[76,39,10],83],[[101,23],[[20,[28,105]]]],[[100,[26,[83]],31]],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[101,51]],[[47,51],[[20,[1]]]],[[99,47,51],[[20,[1]]]],[[100,51]],0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[106,106],[[]],[47,[[26,[106]]]],[[107,[36,[35]],31,31,37]],0,[[107,3],4],[[80,3],4],[[106,3],4],[[]],[[]],[[]],[107,[[7,[[36,[47]]]]]],0,0,0,[[]],[[]],[[]],0,[10,80],[[107,10],80],0,[[],107],0,[[107,31,37]],[[]],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],24],[[],24],[[],24],[[47,51],26],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[108,108],[109,109],[[]],[[]],0,[[],108],[[109,109],33],[[110,3],4],[[108,3],4],[[109,3],[[20,[43]]]],[[111,3],4],[[112,3],4],[[113,3],4],[[114,3],4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[31,[[26,[109]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[[36,[47]],[26,[110]],10],[[20,[115,112]]]],[[17,[36,[47]],[26,[110]],111,10],[[20,[115,112]]]],0,0,0,[[114,12,13,10],[[15,[14]]]],[[114,21,22],11],[[114,21,22],11],0,0,[[]],[[]],[109,31],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[114,21],11],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[65,65],[116,116],[[]],[[]],[116,117],[[118,3],4],[[65,3],4],[[116,3],4],[[]],[[]],[[]],[[118,[36,[61]],[36,[53]]],65],[[]],[[]],[[]],[[116,119,[26,[31]]],[[20,[0]]]],[[65,117],116],[[65,[36,[47]],10],116],[[]],[[]],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],24],[[],24],[[],24],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[120,120],[[]],[[121,[36,[35]],31,31,37]],[[121,[36,[35]],31,31,37]],[[121,[36,[35]],31,31,37]],[[120,3],4],[[77,3],4],[[121,3],4],[[]],[[]],[[]],[121,[[26,[[36,[122]]]]]],[121,[[26,[[36,[123]]]]]],[121,[[26,[[36,[124]]]]]],[[],[[26,[77]]]],[121,[[26,[77]]]],[[],[[26,[125]]]],[[]],[[]],[[]],[[47,31]],[77,33],[[],121],[[47,31,126]],[23],[[[26,[6]]]],[[8,8,8,8]],[26],[[]],[26],[[]],[23],[[47,31,8,8]],[[]],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],24],[[],24],[[],24],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[60,8,8,8,8,87],127],[[55,8,8,8,87],15],[87,87],[[]],[[128,[36,[35]],31,31,37]],[[87,87],33],[60,15],[[60,3],4],[[87,3],[[20,[43]]]],[[56,3],4],[[55,3],4],[[128,3],4],[[]],[[]],[[]],[[]],[[]],[31,[[26,[87]]]],[128,[[26,[[36,[53]]]]]],[[]],[[]],[[]],[[]],[[]],[60,33],[60,129],[[[36,[53]],10],[[15,[60]]]],[[[36,[53]],10],[[15,[56]]]],[[[36,[53]]],[[15,[55]]]],[[],128],[56,[[26,[60]]]],[[60,50],15],[[55,50],15],[[60,130],[[15,[131]]]],[[],[[7,[87]]]],[128,[[7,[87]]]],[[]],[87,31],[[55,8,8,8,87,51],[[20,[127,[71,[105]]]]]],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],24],[[],24],[[],24],[[],24],[[],24],[[[36,[53]],50],[[15,[55]]]],[[60,[49,[48]]],[[15,[50]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[8,8]],[[132,8,8]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[133,133],[134,134],[135,135],[136,136],[[]],[[]],[[]],[[]],[[[67,[66]]]],[132],[[133,133],33],[[134,134],33],[[137,137],33],[[136,136],33],[[],33],[[],33],[[],33],[[[67,[[0,[74,66]]]],3],4],[[132,3],4],[[133,3],4],[[134,3],4],[[135,3],4],[[137,3],4],[[138,3],4],[[136,3],[[20,[43]]]],[[]],[[]],[[]],[33,134],[[]],[[]],[[]],[[]],[[]],[31,[[26,[136]]]],[[5,[36,[61]],[36,[62]],[36,[53]],[26,[65]],[59,[10]]],20],[[5,[36,[61]],[36,[62]],[36,[53]],[26,[65]],[59,[10]]],[[20,[132,105]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[132],[[[36,[47]]]],[[132,[36,[47]]]],[[]],[132],[[[67,[66]]]],[47],[[132,47]],[[]],[[[67,[66]],31,31]],[132],[[[67,[66]],23]],[[]],[132],[[[67,[66]],137]],[[[67,[66]]]],[[[67,[66]],[26,[6]]]],[33],[[132,33]],[[[67,[66]],26]],[[[67,[66]]]],[[[67,[66]],26]],[[[67,[66]]]],[33],[[[67,[66]],33]],[[132,33]],[[[49,[136]]],33],[[132,[49,[136]]],33],[23],[[[67,[66]],23]],[[132,23]],[[[67,[66]],47,31]],[[8,8]],[[132,8,8]],[[[67,[66]]],5],[[]],[[]],[[]],[[]],[136,31],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[[67,[66]]]],[[[67,[66]]]],0,0],"c":[],"p":[[3,"MissingGlobal"],[3,"WaylandSource"],[3,"Formatter"],[6,"Result"],[3,"WlSurface"],[3,"WlOutput"],[3,"Vec"],[15,"i32"],[3,"EventQueue"],[8,"FnMut"],[6,"Result"],[3,"Readiness"],[3,"Token"],[4,"PostAction"],[6,"Result"],[3,"Demand"],[3,"LoopHandle"],[3,"RegistrationToken"],[3,"InsertError"],[4,"Result"],[3,"Poll"],[3,"TokenFactory"],[3,"String"],[3,"TypeId"],[3,"DataOffer"],[4,"Option"],[3,"DndAction"],[3,"ReadPipe"],[6,"RawFd"],[3,"WritePipe"],[15,"u32"],[4,"Ordering"],[15,"bool"],[3,"DataDeviceHandler"],[3,"WlRegistry"],[3,"Attached"],[3,"DispatchData"],[3,"DataDevice"],[8,"IntoIterator"],[4,"DndEvent"],[3,"DataSource"],[4,"DataSourceEvent"],[3,"Error"],[3,"WlDataDeviceManager"],[8,"Hasher"],[8,"SeatHandling"],[3,"WlSeat"],[15,"u8"],[15,"slice"],[15,"usize"],[8,"FnOnce"],[3,"Environment"],[3,"WlShm"],[8,"GlobalHandler"],[3,"AutoMemPool"],[3,"DoubleMemPool"],[8,"ShellHandling"],[8,"ShellSurface"],[3,"Box"],[3,"MemPool"],[3,"WlCompositor"],[3,"WlSubcompositor"],[8,"MultiGlobalHandler"],[3,"ZxdgDecorationManagerV1"],[3,"ThemeManager"],[8,"Frame"],[3,"Window"],[8,"Interface"],[8,"Clone"],[3,"Proxy"],[8,"From"],[8,"AsRef"],[3,"SimpleGlobal"],[8,"Debug"],[8,"PrimarySelectionHandling"],[4,"PrimarySelectionDeviceManager"],[4,"Shell"],[8,"OutputHandling"],[3,"OutputStatusListener"],[3,"SeatListener"],[3,"WlDisplay"],[8,"InnerEnv"],[3,"PrimarySelectionSource"],[4,"GlobalEvent"],[8,"DataDeviceHandling"],[8,"ShmHandling"],[4,"Format"],[8,"Fn"],[8,"Send"],[8,"Sync"],[3,"OutputListener"],[3,"Mode"],[3,"OutputInfo"],[4,"Subpixel"],[4,"Transform"],[3,"OutputHandler"],[3,"XdgOutputHandler"],[3,"ZxdgOutputManagerV1"],[3,"PrimarySelectionHandler"],[3,"PrimarySelectionDevice"],[3,"PrimarySelectionOffer"],[4,"PrimarySelectionSourceEvent"],[3,"ZwpPrimarySelectionDeviceManagerV1"],[3,"GtkPrimarySelectionDeviceManager"],[3,"Error"],[3,"SeatData"],[3,"SeatHandler"],[3,"ModifiersState"],[4,"KeyState"],[3,"RMLVO"],[4,"RepeatKind"],[4,"Error"],[4,"Event"],[3,"RepeatSource"],[3,"WlKeyboard"],[3,"ThemedPointer"],[3,"WlPointer"],[4,"ThemeSpec"],[15,"str"],[4,"Event"],[3,"ShellHandler"],[3,"XdgWmBase"],[3,"ZxdgShellV6"],[3,"WlShell"],[3,"XdgToplevel"],[4,"ResizeEdge"],[3,"WlBuffer"],[3,"ShmHandler"],[3,"MmapMut"],[4,"SeekFrom"],[15,"u64"],[3,"FallbackFrame"],[4,"ButtonState"],[4,"WindowState"],[4,"Event"],[4,"State"],[4,"Decorations"],[4,"FrameRequest"],[13,"Action"],[13,"Send"],[13,"Target"],[13,"Enter"],[13,"Motion"],[13,"Drop"],[13,"Send"],[13,"Key"],[13,"Repeat"],[13,"Enter"],[13,"Modifiers"],[13,"Leave"],[13,"Fixed"],[13,"Precise"],[13,"Configure"],[13,"Configure"]]},\
"syn":{"doc":"github crates-io docs-rs","t":"DNNNNDDNNNDNDNNEDNNDDENNNNNNNDNNDNNNNNNNNNNNNNNNNNDDNNNEDDDNNDNNNNNDENDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDNDNEDDEDDDNNNNNENEDDDDNNEEDNNNNNNCDFNNNDEDDDDENDNNNNNNENDDDDDDDDDDDDDDDDNNDFNNNNDNEFNNDFDFDFDFDFDFDFDNDNNDNNNNNNNNENNEEDDNNNNNNNNNNNNNNNNNNNNNNNNNDEDDDDDDDDDDDDDDDDDNNNNNEDDDNNDNNENDNNNNNNNNNNGNENNNNDNNNNEEDNENNNNNNONNNDEEDDDDNNNNNNNDENNNNNNNNNDDDDDDDDDEDDDDDDDNENNNNNNNNDDDDDEDDNNNNNNNNNDEDENNNMMMMMMMMMMMMMMMLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMLLLLMMMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMOMMMMMMMOMAMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMLLMMMMMMMMMMMMOOMLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMLLLLLMMMMMMMMMMMMMMLLLLMMMMMMMMMMMMMMMMMMMAMMMMMMMMMMLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMLMMMMMMMLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMLLMMMMMMMMMMMLMMMMLMMMLMMMMMLMMMMMMMMMMMMMMMMMLMMMMAMMMMMMMMMMMMMMMMMMMLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMOAFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLFLOLLLLLLLOOLFLLLLLLLMMMMMMMMMLLMMMMMMMMMMMMMMMAMMMMMMMLMMMMLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMLLLLLLLLLLMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMALMMMMMMMMMMMLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMLMMMMMMMMLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMLLLLMDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLIKSKDLLLLMLLFMLLLLDDDQIDGIIGDLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLIIKKNDDDDEDDDNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLIKDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDIDDDDDDDDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["Abi","Add","AddAssign","And","AngleBracketed","AngleBracketedGenericArguments","Arm","Array","Array","Assign","AssocConst","AssocConst","AssocType","AssocType","Async","AttrStyle","Attribute","Await","BareFn","BareFnArg","BareVariadic","BinOp","Binary","BitAnd","BitAndAssign","BitOr","BitOrAssign","BitXor","BitXorAssign","Block","Block","Bool","BoundLifetimes","Brace","Bracket","Break","Byte","ByteStr","Call","Cast","Char","Closed","Closure","Const","Const","Const","Const","Const","Const","Const","ConstParam","Constraint","Constraint","Continue","Cooked","Data","DataEnum","DataStruct","DataUnion","Default","Deref","DeriveInput","Div","DivAssign","Enum","Enum","Eq","Error","Expr","Expr","ExprArray","ExprAssign","ExprAsync","ExprAwait","ExprBinary","ExprBlock","ExprBreak","ExprCall","ExprCast","ExprClosure","ExprConst","ExprContinue","ExprField","ExprForLoop","ExprGroup","ExprIf","ExprIndex","ExprInfer","ExprLet","ExprLit","ExprLoop","ExprMacro","ExprMatch","ExprMethodCall","ExprParen","ExprPath","ExprRange","ExprReference","ExprRepeat","ExprReturn","ExprStruct","ExprTry","ExprTryBlock","ExprTuple","ExprUnary","ExprUnsafe","ExprWhile","ExprYield","ExternCrate","Field","Field","FieldMutability","FieldPat","FieldValue","Fields","FieldsNamed","FieldsUnnamed","File","Float","Fn","Fn","Fn","Fn","FnArg","ForLoop","ForeignItem","ForeignItemFn","ForeignItemMacro","ForeignItemStatic","ForeignItemType","ForeignMod","Ge","GenericArgument","GenericParam","Generics","Glob","Group","Group","Group","Gt","HalfOpen","Ident","Ident","Ident","Ident","If","Impl","ImplGenerics","ImplItem","ImplItemConst","ImplItemFn","ImplItemMacro","ImplItemType","ImplRestriction","ImplTrait","Index","Index","Infer","Infer","Inherited","Inner","Int","Item","Item","ItemConst","ItemEnum","ItemExternCrate","ItemFn","ItemForeignMod","ItemImpl","ItemMacro","ItemMod","ItemStatic","ItemStruct","ItemTrait","ItemTraitAlias","ItemType","ItemUnion","ItemUse","Label","Le","Let","Lifetime","Lifetime","Lifetime","Lifetime","Lifetime","Lifetime","LifetimeParam","List","Lit","Lit","Lit","Lit","LitBool","LitBool","LitByte","LitByte","LitByteStr","LitByteStr","LitChar","LitChar","LitFloat","LitFloat","LitInt","LitInt","LitStr","LitStr","Local","Local","LocalInit","Loop","Lt","Macro","Macro","Macro","Macro","Macro","Macro","Macro","Macro","Macro","MacroDelimiter","Match","Maybe","Member","Meta","MetaList","MetaNameValue","MethodCall","Mod","Mul","MulAssign","Mut","Name","NameValue","Named","Named","Ne","Neg","Never","None","None","None","None","Not","Or","Or","Outer","Paren","Paren","Paren","Paren","Parenthesized","ParenthesizedGenericArguments","Pat","PatConst","PatIdent","PatLit","PatMacro","PatOr","PatParen","PatPath","PatRange","PatReference","PatRest","PatSlice","PatStruct","PatTuple","PatTupleStruct","PatType","PatWild","Path","Path","Path","Path","Path","Path","PathArguments","PathSegment","PredicateLifetime","PredicateType","Ptr","Public","QSelf","Range","Range","RangeLimits","Raw","Receiver","Receiver","Reference","Reference","Reference","Rem","RemAssign","Rename","Repeat","Rest","Restricted","Result","Return","ReturnType","Shl","ShlAssign","Shr","ShrAssign","Signature","Slice","Slice","Static","Static","StaticMutability","Stmt","StmtMacro","Str","StrStyle","Struct","Struct","Struct","Struct","Sub","SubAssign","Token","Trait","Trait","TraitAlias","TraitBound","TraitBoundModifier","TraitItem","TraitItemConst","TraitItemFn","TraitItemMacro","TraitItemType","TraitObject","Try","TryBlock","Tuple","Tuple","Tuple","TupleStruct","Turbofish","Type","Type","Type","Type","Type","Type","Type","Type","Type","Type","TypeArray","TypeBareFn","TypeGenerics","TypeGroup","TypeImplTrait","TypeInfer","TypeMacro","TypeNever","TypeParam","TypeParamBound","TypeParen","TypePath","TypePtr","TypeReference","TypeSlice","TypeTraitObject","TypeTuple","Typed","UnOp","Unary","Union","Union","Unit","Unnamed","Unnamed","Unsafe","Use","UseGlob","UseGroup","UseName","UsePath","UseRename","UseTree","Variadic","Variant","Verbatim","Verbatim","Verbatim","Verbatim","Verbatim","Verbatim","Verbatim","Verbatim","Verbatim","VisRestricted","Visibility","WhereClause","WherePredicate","While","Wild","Yield","abi","abi","abi","and_token","and_token","and_token","apostrophe","args","args","args","arguments","arms","as_token","as_token","as_token","as_turbofish","async_token","asyncness","asyncness","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","auto_token","await_token","bang_token","bang_token","base","base","base10_digits","base10_digits","base10_parse","base10_parse","block","block","block","block","block","block","block","block","body","body","body","body","body","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bounded_ty","bounds","bounds","bounds","bounds","bounds","bounds","bounds","bounds","bounds","brace_token","brace_token","brace_token","brace_token","brace_token","brace_token","brace_token","brace_token","brace_token","brace_token","brace_token","braced","bracket_token","bracket_token","bracket_token","bracket_token","bracket_token","bracket_token","bracket_token","bracketed","break_token","buffer","by_ref","capture","capture","cases","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","colon2_token","colon2_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","comma","comma","comma","cond","cond","const_params","const_params_mut","const_token","const_token","const_token","const_token","const_token","const_token","const_token","constness","constness","content","continue_token","crate_token","custom_keyword","custom_punctuation","data","default","default","default","default","default","default","default","default","defaultness","defaultness","defaultness","defaultness","delimiter","delimiter","discriminant","diverge","dot2_token","dot2_token","dot_token","dot_token","dot_token","dots","dots","dyn_token","elem","elem","elem","elem","elem","elem","elems","elems","elems","elems","elems","elems","else_branch","end","end","enum_token","enum_token","eq","eq","eq","eq","eq","eq_token","eq_token","eq_token","eq_token","eq_token","eq_token","eq_token","eq_token","eq_token","eq_token","eq_token","eq_token","eq_token","eq_token","equivalent","equivalent","equivalent","equivalent","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","ext","extern_token","extern_token","fat_arrow_token","fields","fields","fields","fields","fields","fields","fields","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fn_token","fn_token","for_token","for_token","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","func","generics","generics","generics","generics","generics","generics","generics","generics","generics","generics","generics","generics","generics","generics","generics","generics","generics","generics","get_ident","group_token","group_token","gt_token","gt_token","gt_token","gt_token","guard","hash","hash","hash","hash","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","if_token","impl_token","impl_token","in_token","in_token","index","index","init","inputs","inputs","inputs","inputs","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","is_empty","is_empty","is_ident","is_none","items","items","items","items","items","iter","iter_mut","label","label","label","label","label","label","leading_colon","leading_colon","leading_vert","left","left","len","len","len","let_token","let_token","lifetime","lifetime","lifetime","lifetime","lifetimes","lifetimes","lifetimes","lifetimes","lifetimes","lifetimes","lifetimes_mut","limits","limits","lit","lit","loop_token","lt_token","lt_token","lt_token","lt_token","mac","mac","mac","mac","mac","mac","mac","mac","make_where_clause","match_token","member","member","member","meta","meta","method","mod_token","modifier","movability","mutability","mutability","mutability","mutability","mutability","mutability","mutability","mutability","mutability","name","name","name","name","named","new","new","new","new","new","new","new","new","new","new","new","new_raw","op","op","or1_token","or2_token","output","output","output","output","params","paren_token","paren_token","paren_token","paren_token","paren_token","paren_token","paren_token","paren_token","paren_token","paren_token","paren_token","paren_token","paren_token","paren_token","paren_token","parenthesized","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse2","parse_any","parse_args","parse_args","parse_args_with","parse_args_with","parse_body","parse_body_with","parse_file","parse_inner","parse_macro_input","parse_mod_style","parse_multi","parse_multi_with_leading_vert","parse_named","parse_nested_meta","parse_nested_meta","parse_outer","parse_quote","parse_quote_spanned","parse_single","parse_str","parse_turbofish","parse_unnamed","parse_with","parse_within","parse_without_eager_brace","partial_cmp","partial_cmp","pat","pat","pat","pat","pat","pat","pat","pat","pat","path","path","path","path","path","path","path","path","path","path","path","path","path","position","pound_token","predicates","pub_token","punctuated","qself","qself","qself","qself","qself","qself","question_token","receiver","receiver","reference","rename","rename","require_list","require_name_value","require_path_only","rest","rest","restriction","return_token","right","right","segments","self_token","self_ty","semi","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","set_span","set_span","set_span","set_span","set_span","set_span","set_span","set_span","set_span","set_span","shebang","sig","sig","sig","sig","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","spanned","split_for_impl","star_token","star_token","start","start","static_token","static_token","stmts","struct_token","struct_token","style","subpat","suffix","suffix","suffix","suffix","suffix","suffix","suffix","supertraits","then_branch","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","token","token","token","token","token","token","token","token","tokens","tokens","trait_","trait_token","trait_token","tree","tree","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_token","turbofish","ty","ty","ty","ty","ty","ty","ty","ty","ty","ty","ty","ty","ty","ty","ty","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_params","type_params_mut","type_token","type_token","type_token","type_token","underscore_token","underscore_token","underscore_token","union_token","union_token","unnamed","unraw","unsafe_token","unsafety","unsafety","unsafety","unsafety","unsafety","unsafety","use_token","value","value","value","value","value","value","value","value","variadic","variadic","variants","variants","vis","vis","vis","vis","vis","vis","vis","vis","vis","vis","vis","vis","vis","vis","vis","vis","vis","vis","vis","vis","where_clause","where_token","while_token","without_plus","without_plus","without_plus","without_plus","yield_token","Cursor","TokenBuffer","begin","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","empty","eof","eq","equivalent","from","from","group","ident","into","into","lifetime","literal","new","new2","partial_cmp","punct","span","to_owned","token_stream","token_tree","try_from","try_from","try_into","try_into","type_id","type_id","IdentExt","parse_any","peek_any","unraw","ParseNestedMeta","borrow","borrow_mut","error","from","input","into","parse_nested_meta","parser","path","try_from","try_into","type_id","value","Error","Lookahead1","Nothing","Output","Parse","ParseBuffer","ParseStream","Parser","Peek","Result","StepCursor","advance_to","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","call","clone","clone","clone_into","clone_into","combine","cursor","deref","discouraged","drop","error","error","error","extend","fmt","fmt","fmt","fmt","fork","from","from","from","from","from","from","into","into","into","into","into","into_compile_error","into_iter","into_iter","is_empty","lookahead1","new","new_spanned","parse","parse","parse","parse","parse2","parse_any_delimiter","parse_str","parse_terminated","peek","peek","peek2","peek3","provide","span","span","step","to_compile_error","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","AnyDelimiter","Speculative","advance_to","parse_any_delimiter","End","IntoIter","IntoPairs","Iter","IterMut","Pair","Pairs","PairsMut","Punctuated","Punctuated","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clone","clone","clone","clone","clone","clone","clone_from","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cloned","default","empty_or_trailing","extend","extend","first","first_mut","from","from","from","from","from","from","from","from","from_iter","from_iter","index","index_mut","insert","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_pairs","into_tuple","into_value","is_empty","iter","iter_mut","last","last_mut","len","len","len","len","len","len","len","new","new","next","next","next","next","next","next","next_back","next_back","next_back","next_back","next_back","next_back","pairs","pairs_mut","parse_separated_nonempty","parse_separated_nonempty_with","parse_terminated","parse_terminated_with","pop","pop_punct","punct","punct_mut","push","push_punct","push_value","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","span","span","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_tokens","to_tokens","trailing_punct","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value","value_mut","Spanned","span","Abstract","And","AndAnd","AndEq","As","Async","At","Auto","Await","Become","Box","Brace","Bracket","Break","Caret","CaretEq","Colon","Comma","Const","Continue","Crate","Default","Do","Dollar","Dot","DotDot","DotDotDot","DotDotEq","Dyn","Else","Enum","Eq","EqEq","Extern","FatArrow","Final","Fn","For","Ge","Group","Gt","If","Impl","In","LArrow","Le","Let","Loop","Lt","Macro","Match","Minus","MinusEq","Mod","Move","Mut","Ne","Not","Or","OrEq","OrOr","Override","Paren","PathSep","Percent","PercentEq","Plus","PlusEq","Pound","Priv","Pub","Question","RArrow","Ref","Return","SelfType","SelfValue","Semi","Shl","ShlEq","Shr","ShrEq","Slash","SlashEq","Star","StarEq","Static","Struct","Super","Tilde","Token","Trait","Try","Type","Typeof","Underscore","Union","Unsafe","Unsized","Use","Virtual","Where","While","Yield","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","surround","surround","surround","surround","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id"],"q":[[0,"syn"],[3656,"syn::buffer"],[3691,"syn::ext"],[3695,"syn::meta"],[3709,"syn::parse"],[3804,"syn::parse::discouraged"],[3808,"syn::punctuated"],[3970,"syn::spanned"],[3972,"syn::token"]],"d":["The binary interface of a function: <code>extern &quot;C&quot;</code>.","The <code>+</code> operator (addition)","The <code>+=</code> operator","The <code>&amp;&amp;</code> operator (logical and)","The <code>&lt;&#39;a, T&gt;</code> in <code>std::slice::iter&lt;&#39;a, T&gt;</code>.","Angle bracketed arguments of a path segment: the <code>&lt;K, V&gt;</code> in …","One arm of a <code>match</code> expression: <code>0..=10 =&gt; { return true; }</code>.","A slice literal expression: <code>[a, b, c, d]</code>.","A fixed size array type: <code>[T; n]</code>.","An assignment expression: <code>a = compute()</code>.","An equality constraint on an associated constant: the …","An equality constraint on an associated constant: the …","A binding (equality constraint) on an associated type: the …","A binding (equality constraint) on an associated type: the …","An async block: <code>async { ... }</code>.","Distinguishes between attributes that decorate an item and …","An attribute, like <code>#[repr(transparent)]</code>.","An await expression: <code>fut.await</code>.","A bare function type: <code>fn(usize) -&gt; bool</code>.","An argument in a function type: the <code>usize</code> in …","The variadic argument of a function pointer like …","A binary operator: <code>+</code>, <code>+=</code>, <code>&amp;</code>.","A binary operation: <code>a + b</code>, <code>a += b</code>.","The <code>&amp;</code> operator (bitwise and)","The <code>&amp;=</code> operator","The <code>|</code> operator (bitwise or)","The <code>|=</code> operator","The <code>^</code> operator (bitwise xor)","The <code>^=</code> operator","A braced block containing Rust statements.","A blocked scope: <code>{ ... }</code>.","A boolean literal: <code>true</code> or <code>false</code>.","A set of bound lifetimes: <code>for&lt;&#39;a, &#39;b, &#39;c&gt;</code>.","","","A <code>break</code>, with an optional label to break and an optional …","A byte literal: <code>b&#39;f&#39;</code>.","A byte string literal: <code>b&quot;foo&quot;</code>.","A function call expression: <code>invoke(a, b)</code>.","A cast expression: <code>foo as f64</code>.","A character literal: <code>&#39;a&#39;</code>.","Inclusive at the beginning and end.","A closure expression: <code>|a, b| a + b</code>.","A const block: <code>const { ... }</code>.","A const generic parameter: <code>const LENGTH: usize</code>.","A constant item: <code>const MAX: u16 = 65535</code>.","An associated constant within the definition of a trait.","An associated constant within an impl block.","A const block: <code>const { ... }</code>.","A const expression. Must be inside of a block.","A const generic parameter: <code>const LENGTH: usize</code>.","An associated type bound: <code>Iterator&lt;Item: Display&gt;</code>.","An associated type bound: <code>Iterator&lt;Item: Display&gt;</code>.","A <code>continue</code>, with an optional label.","An ordinary string like <code>&quot;data&quot;</code>.","The storage of a struct, enum or union data structure.","An enum input to a <code>proc_macro_derive</code> macro.","A struct input to a <code>proc_macro_derive</code> macro.","An untagged union input to a <code>proc_macro_derive</code> macro.","Return type is not specified.","The <code>*</code> operator for dereferencing","Data structure sent to a <code>proc_macro_derive</code> macro.","The <code>/</code> operator (division)","The <code>/=</code> operator","","An enum definition: <code>enum Foo&lt;A, B&gt; { A(A), B(B) }</code>.","The <code>==</code> operator (equality)","Error returned when a Syn parser cannot parse the input …","A Rust expression.","Expression, with or without trailing semicolon.","A slice literal expression: <code>[a, b, c, d]</code>.","An assignment expression: <code>a = compute()</code>.","An async block: <code>async { ... }</code>.","An await expression: <code>fut.await</code>.","A binary operation: <code>a + b</code>, <code>a += b</code>.","A blocked scope: <code>{ ... }</code>.","A <code>break</code>, with an optional label to break and an optional …","A function call expression: <code>invoke(a, b)</code>.","A cast expression: <code>foo as f64</code>.","A closure expression: <code>|a, b| a + b</code>.","A const block: <code>const { ... }</code>.","A <code>continue</code>, with an optional label.","Access of a named struct field (<code>obj.k</code>) or unnamed tuple …","A for loop: <code>for pat in expr { ... }</code>.","An expression contained within invisible delimiters.","An <code>if</code> expression with an optional <code>else</code> block: …","A square bracketed indexing expression: <code>vector[2]</code>.","The inferred value of a const generic argument, denoted <code>_</code>.","A <code>let</code> guard: <code>let Some(x) = opt</code>.","A literal in place of an expression: <code>1</code>, <code>&quot;foo&quot;</code>.","Conditionless loop: <code>loop { ... }</code>.","A macro invocation expression: <code>format!(&quot;{}&quot;, q)</code>.","A <code>match</code> expression: <code>match n { Some(n) =&gt; {}, None =&gt; {} }</code>.","A method call expression: <code>x.foo::&lt;T&gt;(a, b)</code>.","A parenthesized expression: <code>(a + b)</code>.","A path like <code>std::mem::replace</code> possibly containing generic …","A range expression: <code>1..2</code>, <code>1..</code>, <code>..2</code>, <code>1..=2</code>, <code>..=2</code>.","A referencing operation: <code>&amp;a</code> or <code>&amp;mut a</code>.","An array literal constructed from one repeated element: …","A <code>return</code>, with an optional value to be returned.","A struct literal expression: <code>Point { x: 1, y: 1 }</code>.","A try-expression: <code>expr?</code>.","A try block: <code>try { ... }</code>.","A tuple expression: <code>(a, b, c, d)</code>.","A unary operation: <code>!x</code>, <code>*x</code>.","An unsafe block: <code>unsafe { ... }</code>.","A while loop: <code>while expr { ... }</code>.","A yield expression: <code>yield expr</code>.","An <code>extern crate</code> item: <code>extern crate serde</code>.","A field of a struct or enum variant.","Access of a named struct field (<code>obj.k</code>) or unnamed tuple …","Unused, but reserved for RFC 3323 restrictions.","A single field in a struct pattern.","A field-value pair in a struct literal.","Data stored within an enum variant or struct.","Named fields of a struct or struct variant such as …","Unnamed fields of a tuple struct or tuple variant such as …","A complete file of Rust source code.","A floating point literal: <code>1f64</code> or <code>1.0e10f64</code>.","A free-standing function: …","A foreign function in an <code>extern</code> block.","An associated function within the definition of a trait.","An associated function within an impl block.","An argument in a function signature: the <code>n: usize</code> in …","A for loop: <code>for pat in expr { ... }</code>.","An item within an <code>extern</code> block.","A foreign function in an <code>extern</code> block.","A macro invocation within an extern block.","A foreign static item in an <code>extern</code> block: <code>static ext: u8</code>.","A foreign type in an <code>extern</code> block: <code>type void</code>.","A block of foreign items: <code>extern &quot;C&quot; { ... }</code>.","The <code>&gt;=</code> operator (greater than or equal to)","An individual generic argument, like <code>&#39;a</code>, <code>T</code>, or <code>Item = T</code>.","A generic type parameter, lifetime, or const generic: …","Lifetimes and type parameters attached to a declaration of …","A glob import in a <code>use</code> item: <code>*</code>.","An expression contained within invisible delimiters.","A braced group of imports in a <code>use</code> item: <code>{A, B, C}</code>.","A type contained within invisible delimiters.","The <code>&gt;</code> operator (greater than)","Inclusive at the beginning, exclusive at the end.","","A word of Rust code, which may be a keyword or legal …","","A pattern that binds a new variable: …","An <code>if</code> expression with an optional <code>else</code> block: …","An impl block providing trait or associated items: …","Returned by <code>Generics::split_for_impl</code>.","An item within an impl block.","An associated constant within an impl block.","An associated function within an impl block.","A macro invocation within an impl block.","An associated type within an impl block.","Unused, but reserved for RFC 3323 restrictions.","An <code>impl Bound1 + Bound2 + Bound3</code> type where <code>Bound</code> is a …","The index of an unnamed tuple struct field.","A square bracketed indexing expression: <code>vector[2]</code>.","The inferred value of a const generic argument, denoted <code>_</code>.","Indication that a type should be inferred by the compiler: …","An inherited visibility, which usually means private.","","An integer literal: <code>1</code> or <code>1u16</code>.","Things that can appear directly inside of a module or …","An item definition.","A constant item: <code>const MAX: u16 = 65535</code>.","An enum definition: <code>enum Foo&lt;A, B&gt; { A(A), B(B) }</code>.","An <code>extern crate</code> item: <code>extern crate serde</code>.","A free-standing function: …","A block of foreign items: <code>extern &quot;C&quot; { ... }</code>.","An impl block providing trait or associated items: …","A macro invocation, which includes <code>macro_rules!</code> …","A module or module declaration: <code>mod m</code> or <code>mod m { ... }</code>.","A static item: <code>static BIKE: Shed = Shed(42)</code>.","A struct definition: <code>struct Foo&lt;A&gt; { x: A }</code>.","A trait definition: <code>pub trait Iterator { ... }</code>.","A trait alias: <code>pub trait SharableIterator = Iterator + Sync</code>…","A type alias: …","A union definition: <code>union Foo&lt;A, B&gt; { x: A, y: B }</code>.","A use declaration: <code>use std::collections::HashMap</code>.","A lifetime labeling a <code>for</code>, <code>while</code>, or <code>loop</code>.","The <code>&lt;=</code> operator (less than or equal to)","A <code>let</code> guard: <code>let Some(x) = opt</code>.","A Rust lifetime: <code>&#39;a</code>.","","A lifetime parameter: <code>&#39;a: &#39;b + &#39;c + &#39;d</code>.","","A lifetime predicate in a <code>where</code> clause: <code>&#39;a: &#39;b + &#39;c</code>.","A lifetime argument.","A lifetime definition: <code>&#39;a: &#39;b + &#39;c + &#39;d</code>.","A structured list within an attribute, like …","A Rust literal such as a string or integer or boolean.","","A literal in place of an expression: <code>1</code>, <code>&quot;foo&quot;</code>.","A literal pattern: <code>0</code>.","A boolean literal: <code>true</code> or <code>false</code>.","","A byte literal: <code>b&#39;f&#39;</code>.","","A byte string literal: <code>b&quot;foo&quot;</code>.","","A character literal: <code>&#39;a&#39;</code>.","","A floating point literal: <code>1f64</code> or <code>1.0e10f64</code>.","","An integer literal: <code>1</code> or <code>1u16</code>.","","A UTF-8 string literal: <code>&quot;foo&quot;</code>.","","A local <code>let</code> binding: <code>let x: u64 = s.parse()?</code>.","A local (let) binding.","The expression assigned in a local <code>let</code> binding, including …","Conditionless loop: <code>loop { ... }</code>.","The <code>&lt;</code> operator (less than)","A macro invocation: <code>println!(&quot;{}&quot;, mac)</code>.","A macro invocation expression: <code>format!(&quot;{}&quot;, q)</code>.","A macro invocation, which includes <code>macro_rules!</code> …","A macro invocation within an extern block.","A macro invocation within the definition of a trait.","A macro invocation within an impl block.","A macro in pattern position.","A macro invocation in statement position.","A macro in the type position.","A grouping token that surrounds a macro body: <code>m!(...)</code> or …","A <code>match</code> expression: <code>match n { Some(n) =&gt; {}, None =&gt; {} }</code>.","","A struct or tuple struct field accessed in a struct …","Content of a compile-time structured attribute.","A structured list within an attribute, like …","A name-value pair within an attribute, like …","A method call expression: <code>x.foo::&lt;T&gt;(a, b)</code>.","A module or module declaration: <code>mod m</code> or <code>mod m { ... }</code>.","The <code>*</code> operator (multiplication)","The <code>*=</code> operator","","An identifier imported by a <code>use</code> item: <code>HashMap</code>.","A name-value pair within an attribute, like …","Named fields of a struct or struct variant such as …","A named field like <code>self.x</code>.","The <code>!=</code> operator (not equal to)","The <code>-</code> operator for negation","The never type: <code>!</code>.","","","","","The <code>!</code> operator for logical inversion","The <code>||</code> operator (logical or)","A pattern that matches any one of a set of cases.","","A parenthesized expression: <code>(a + b)</code>.","","A parenthesized pattern: <code>(A | B)</code>.","A parenthesized type equivalent to the inner type.","The <code>(A, B) -&gt; C</code> in <code>Fn(A, B) -&gt; C</code>.","Arguments of a function path segment: the <code>(A, B) -&gt; C</code> in …","A pattern in a local binding, function signature, match …","A const block: <code>const { ... }</code>.","A pattern that binds a new variable: …","A literal in place of an expression: <code>1</code>, <code>&quot;foo&quot;</code>.","A macro invocation expression: <code>format!(&quot;{}&quot;, q)</code>.","A pattern that matches any one of a set of cases.","A parenthesized pattern: <code>(A | B)</code>.","A path like <code>std::mem::replace</code> possibly containing generic …","A range expression: <code>1..2</code>, <code>1..</code>, <code>..2</code>, <code>1..=2</code>, <code>..=2</code>.","A reference pattern: <code>&amp;mut var</code>.","The dots in a tuple or slice pattern: <code>[0, 1, ..]</code>.","A dynamically sized slice pattern: <code>[a, b, ref i @ .., y, z]</code>…","A struct or struct variant pattern: <code>Variant { x, y, .. }</code>.","A tuple pattern: <code>(a, b)</code>.","A tuple struct or tuple variant pattern: …","A type ascription pattern: <code>foo: f64</code>.","A pattern that matches any value: <code>_</code>.","A path at which a named item is exported (e.g. …","","A path like <code>std::mem::replace</code> possibly containing generic …","A path prefix of imports in a <code>use</code> item: <code>std::...</code>.","A path pattern like <code>Color::Red</code>, optionally qualified with a","A path like <code>std::slice::Iter</code>, optionally qualified with a …","Angle bracketed or parenthesized arguments of a path …","A segment of a path together with any path arguments on …","A lifetime predicate in a <code>where</code> clause: <code>&#39;a: &#39;b + &#39;c</code>.","A type predicate in a <code>where</code> clause: …","A raw pointer type: <code>*const T</code> or <code>*mut T</code>.","A public visibility level: <code>pub</code>.","The explicit Self type in a qualified path: the <code>T</code> in …","A range expression: <code>1..2</code>, <code>1..</code>, <code>..2</code>, <code>1..=2</code>, <code>..=2</code>.","A range pattern: <code>1..=2</code>.","Limit types of a range, inclusive or exclusive.","A raw string like <code>r##&quot;data&quot;##</code>.","The <code>self</code> argument of an associated method.","The <code>self</code> argument of an associated method.","A referencing operation: <code>&amp;a</code> or <code>&amp;mut a</code>.","A reference pattern: <code>&amp;mut var</code>.","A reference type: <code>&amp;&#39;a T</code> or <code>&amp;&#39;a mut T</code>.","The <code>%</code> operator (modulus)","The <code>%=</code> operator","An renamed identifier imported by a <code>use</code> item: …","An array literal constructed from one repeated element: …","The dots in a tuple or slice pattern: <code>[0, 1, ..]</code>.","A visibility level restricted to some path: <code>pub(self)</code> or …","The result of a Syn parser.","A <code>return</code>, with an optional value to be returned.","Return type of a function signature.","The <code>&lt;&lt;</code> operator (shift left)","The <code>&lt;&lt;=</code> operator","The <code>&gt;&gt;</code> operator (shift right)","The <code>&gt;&gt;=</code> operator","A function signature in a trait or implementation: …","A dynamically sized slice pattern: <code>[a, b, ref i @ .., y, z]</code>…","A dynamically sized slice type: <code>[T]</code>.","A static item: <code>static BIKE: Shed = Shed(42)</code>.","A foreign static item in an <code>extern</code> block: <code>static ext: u8</code>.","The mutability of an <code>Item::Static</code> or <code>ForeignItem::Static</code>.","A statement, usually ending in a semicolon.","A macro invocation in statement position.","A UTF-8 string literal: <code>&quot;foo&quot;</code>.","The style of a string literal, either plain quoted or a …","","A struct literal expression: <code>Point { x: 1, y: 1 }</code>.","A struct definition: <code>struct Foo&lt;A&gt; { x: A }</code>.","A struct or struct variant pattern: <code>Variant { x, y, .. }</code>.","The <code>-</code> operator (subtraction)","The <code>-=</code> operator","A type-macro that expands to the name of the Rust type …","","A trait definition: <code>pub trait Iterator { ... }</code>.","A trait alias: <code>pub trait SharableIterator = Iterator + Sync</code>…","A trait used as a bound on a type parameter.","A modifier on a trait bound, currently only used for the <code>?</code> …","An item declaration within the definition of a trait.","An associated constant within the definition of a trait.","An associated function within the definition of a trait.","A macro invocation within the definition of a trait.","An associated type within the definition of a trait.","A trait object type <code>dyn Bound1 + Bound2 + Bound3</code> where …","A try-expression: <code>expr?</code>.","A try block: <code>try { ... }</code>.","A tuple expression: <code>(a, b, c, d)</code>.","A tuple pattern: <code>(a, b)</code>.","A tuple type: <code>(A, B, C, String)</code>.","A tuple struct or tuple variant pattern: …","Returned by <code>TypeGenerics::as_turbofish</code>.","The possible types that a Rust value could have.","A generic type parameter: <code>T: Into&lt;String&gt;</code>.","A type predicate in a <code>where</code> clause: …","A type alias: …","A foreign type in an <code>extern</code> block: <code>type void</code>.","An associated type within the definition of a trait.","An associated type within an impl block.","A type ascription pattern: <code>foo: f64</code>.","A type argument.","A particular type is returned.","A fixed size array type: <code>[T; n]</code>.","A bare function type: <code>fn(usize) -&gt; bool</code>.","Returned by <code>Generics::split_for_impl</code>.","A type contained within invisible delimiters.","An <code>impl Bound1 + Bound2 + Bound3</code> type where <code>Bound</code> is a …","Indication that a type should be inferred by the compiler: …","A macro in the type position.","The never type: <code>!</code>.","A generic type parameter: <code>T: Into&lt;String&gt;</code>.","A trait or lifetime used as a bound on a type parameter.","A parenthesized type equivalent to the inner type.","A path like <code>std::slice::Iter</code>, optionally qualified with a …","A raw pointer type: <code>*const T</code> or <code>*mut T</code>.","A reference type: <code>&amp;&#39;a T</code> or <code>&amp;&#39;a mut T</code>.","A dynamically sized slice type: <code>[T]</code>.","A trait object type <code>dyn Bound1 + Bound2 + Bound3</code> where …","A tuple type: <code>(A, B, C, String)</code>.","A function argument accepted by pattern and type.","A unary operator: <code>*</code>, <code>!</code>, <code>-</code>.","A unary operation: <code>!x</code>, <code>*x</code>.","","A union definition: <code>union Foo&lt;A, B&gt; { x: A, y: B }</code>.","Unit struct or unit variant such as <code>None</code>.","Unnamed fields of a tuple struct or tuple variant such as …","An unnamed field like <code>self.0</code>.","An unsafe block: <code>unsafe { ... }</code>.","A use declaration: <code>use std::collections::HashMap</code>.","A glob import in a <code>use</code> item: <code>*</code>.","A braced group of imports in a <code>use</code> item: <code>{A, B, C}</code>.","An identifier imported by a <code>use</code> item: <code>HashMap</code>.","A path prefix of imports in a <code>use</code> item: <code>std::...</code>.","An renamed identifier imported by a <code>use</code> item: …","A suffix of an import tree in a <code>use</code> item: <code>Type as Renamed</code> …","The variadic argument of a foreign function.","An enum variant.","Tokens in expression position not interpreted by Syn.","","Tokens forming an item not interpreted by Syn.","Tokens in an <code>extern</code> block not interpreted by Syn.","Tokens within the definition of a trait not interpreted by …","Tokens within an impl block not interpreted by Syn.","A raw token literal not interpreted by Syn.","Tokens in pattern position not interpreted by Syn.","Tokens in type position not interpreted by Syn.","A visibility level restricted to some path: <code>pub(self)</code> or …","The visibility level of an item: inherited or <code>pub</code> or …","A <code>where</code> clause in a definition: …","A single predicate in a <code>where</code> clause: <code>T: Deserialize&lt;&#39;de&gt;</code>.","A while loop: <code>while expr { ... }</code>.","A pattern that matches any value: <code>_</code>.","A yield expression: <code>yield expr</code>.","","","","","","","","","","","","","","","","Turn a type’s generics like <code>&lt;X, Y&gt;</code> into a turbofish like …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Parses the literal into a selected number typehe type being bounded","","","","Trait and lifetime bounds (<code>Clone+Send+&#39;static</code>)","","","","","","","","","","","","","","","","","Parse a set of curly braces and expose their content to …","","","","","","","","Parse a set of square brackets and expose their content to …","","A stably addressed token buffer supporting efficient …he colon in <code>Struct { x: x }</code>. If written in shorthand like …","","","","","","","","","","","","","","","","","","","","","","","Returns an Iterator&lt;Item = &amp;ConstParam&gt; over the constant …","Returns an Iterator&lt;Item = &amp;mut ConstParam&gt; over the …","","","","","","","","","","","","","Define a type that supports parsing and printing a given …","Define a type that supports parsing and printing a …","","","","","","","","","","","","","","","","Explicit discriminant: <code>Variant = 1</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Extension traits to provide parsing methods on foreign …","","","","Content stored in the variant.","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Returns the argument unchanged.","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","If this path consists of a single ident, returns the ident.","","","","","","","","","","","","","Name of the variant.","Name of the field, if any.","","","","","","","The <code>example</code> in <code>macro_rules! example { ... }</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","<code>(A, B)</code>","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Returns <code>true</code> if there are zero fields.","","Determines whether this is a path of length 1 equal to the …","","","","","","","Get an iterator over the borrowed <code>Field</code> items in this …","Get an iterator over the mutably borrowed <code>Field</code> items in …","","","","","","","","","","","","Returns the number of fields.","","","","","","","","","Returns an Iterator&lt;Item = &amp;LifetimeParam&gt; over the …","","","The <code>for&lt;&#39;a&gt;</code> in <code>for&lt;&#39;a&gt; Foo&lt;&amp;&#39;a T&gt;</code>","Any lifetimes from a <code>for</code> binding","","Returns an Iterator&lt;Item = &amp;mut LifetimeParam&gt; over the …","","","","","","","","","","","","","","","","","","Initializes an empty <code>where</code>-clause if there is not one …","","","","","Facility for interpreting structured content inside of an …","","","","","","","","","","","","","","","","","","","","Creates a new <code>Ident</code> with the given <code>string</code> as well as the …","Panics","","Interpret a Syn literal from a proc-macro2 literal.","","","","","","","","Same as <code>Ident::new</code>, but creates a raw identifier (<code>r#ident</code>…","","","","","","","<code>C</code>","","","","","","","","","","","","","","","","","","Parse a set of parentheses and expose their content to …","Parsing interface for parsing a token stream into a syntax …","Parse tokens of source code into the chosen syntax tree …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Parse a syntax tree node from the content of this string …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Parse a proc-macro2 token stream into the chosen syntax …","","Parse the arguments to the attribute as a syntax tree.","See <code>Attribute::parse_args</code>.","Parse the arguments to the attribute using the given …","See <code>Attribute::parse_args_with</code>.","Parse the tokens within the macro invocation’s …","Parse the tokens within the macro invocation’s …","Parse the content of a file of Rust code.","Parses zero or more inner attributes from the stream.","Parse the input TokenStream of a macro, triggering a …","Parse a <code>Path</code> containing no path arguments on any of its …","Parse a pattern, possibly involving <code>|</code>, but not a leading <code>|</code>.","Parse a pattern, possibly involving <code>|</code>, possibly including a","Parses a named (braced struct) field.","Parse the arguments to the attribute, expecting it to …","See <code>Attribute::parse_nested_meta</code>.","Parses zero or more outer attributes from the stream.","Quasi-quotation macro that accepts input like the <code>quote!</code> …","This macro is <code>parse_quote!</code> + <code>quote_spanned!</code>.","Parse a pattern that does <em>not</em> involve <code>|</code> at the top level.","Parse a string of Rust code into the chosen syntax tree …","Parse <code>::&lt;…&gt;</code> with mandatory leading <code>::</code>.","Parses an unnamed (tuple struct) field.","Invoke parser on the content of this string literal.","Parse the body of a block as zero or more statements, …","An alternative to the primary <code>Expr::parse</code> parser (from the …","","","","","","","","","","","","Returns the path that identifies the interpretation of …","Returns the path that begins this structured meta item.","","","","","","The <code>Foo&lt;&amp;&#39;a T&gt;</code> in <code>for&lt;&#39;a&gt; Foo&lt;&amp;&#39;a T&gt;</code>","","","","","","","","","","A punctuated sequence of syntax tree nodes separated by …","","","","","","","","A method’s <code>self</code> receiver, such as <code>&amp;self</code> or …","","","","","Error if this is a <code>Meta::Path</code> or <code>Meta::NameValue</code>.","Error if this is a <code>Meta::Path</code> or <code>Meta::List</code>.","Error if this is a <code>Meta::List</code> or <code>Meta::NameValue</code>.","","","","","","","","","The Self type of the impl.","","","","","","","","","","","","","","","","","","","","","","","","","","Configures the span of this <code>Ident</code>, possibly changing its …","","","","","","","","","","","","","","","Returns the span of this <code>Ident</codetrait that can provide the <code>Span</code> of the complete contents …","Split a type’s generics into the pieces required for impl…","","","","","","","Statements in a blockokens representing Rust punctuation, keywords, and …","","","","","","","","","","Trait this impl implementseturns an Iterator&lt;Item = &amp;TypeParam&gt; over the type …","Returns an Iterator&lt;Item = &amp;mut TypeParam&gt; over the type …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","In some positions, types may not contain the <code>+</code> character, …","","","","","A cheaply copyable cursor into a <code>TokenBuffer</code>.","A buffer that can be efficiently traversed multiple times, …","Creates a cursor referencing the first token in the buffer …","","","","","","","Creates a cursor referencing a static empty TokenStream.","Checks whether the cursor is currently pointing at the end …","","","Returns the argument unchanged.","Returns the argument unchanged.","If the cursor is pointing at a <code>Group</code> with the given …","If the cursor is pointing at a <code>Ident</code>, returns it along …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","If the cursor is pointing at a <code>Lifetime</code>, returns it along …","If the cursor is pointing at a <code>Literal</code>, return it along …","Creates a <code>TokenBuffer</code> containing all the tokens from the …","Creates a <code>TokenBuffer</code> containing all the tokens from the …","","If the cursor is pointing at a <code>Punct</code>, returns it along …","Returns the <code>Span</code> of the current token, or <code>Span::call_site()</code>…","","Copies all remaining tokens visible from this cursor into a","If the cursor is pointing at a <code>TokenTree</code>, returns it along …","","","","","","","Additional methods for <code>Ident</code> not provided by proc-macro2 …","Parses any identifier including keywords.","Peeks any identifier including keywords. Usage: …","Strips the raw marker <code>r#</code>, if any, from the beginning of an …","Context for parsing a single property in the conventional …","","","Report that the attribute’s content did not conform to …","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Used when parsing <code>list(...)</code> syntax <strong>if</strong> the content inside …","Make a parser that is usable with <code>parse_macro_input!</code> in a …","","","","","Used when parsing <code>key = &quot;value&quot;</code> syntax.","Error returned when a Syn parser cannot parse the input …","Support for checking the next token in a stream to decide …","An empty syntax tree node that consumes no tokens when …","","Parsing interface implemented by all types that can be …","Cursor position within a buffered token stream.","Input to a Syn parser function.","Parser that can parse Rust tokens into a particular syntax …","Types that can be parsed by looking at just one token.","The result of a Syn parser.","Cursor state associated with speculative parsing.","","","","","","","","","","","","Calls the given parser function to parse a syntax tree …","","","","","Add another error message to self such that when …","Provides low-level access to the token representation …","","Extensions to the parsing API with niche applicability.","","Triggers an error at the current position of the parse …","Triggers an error at the current position of the parse …","Triggers an error at the current position of the parse …","","","","","","Forks a parse stream so that parsing tokens out of either …","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Render the error as an invocation of <code>compile_error!</code>.","","","Returns whether there are tokens remaining in this stream.","Constructs a helper for peeking at the next token in this …","Usually the <code>ParseStream::error</code> method will be used …","Creates an error with the specified message spanning the …","","Parses a syntax tree node of type <code>T</code>, advancing the …","Parse tokens of source code into the chosen syntax tree …","","Parse a proc-macro2 token stream into the chosen syntax …","","Parse a string of Rust code into the chosen syntax tree …","Parses zero or more occurrences of <code>T</code> separated by …","Looks at the next token in the parse stream to determine …","Looks at the next token in the parse stream to determine …","Looks at the second-next token in the parse stream.","Looks at the third-next token in the parse stream.","","The source location of the error.","Returns the <code>Span</code> of the next token in the parse stream, or …","Speculatively parses tokens from this parse stream, …","Render the error as an invocation of <code>compile_error!</code>.","","","","","","","","","","","","","","","","","","","","Extensions to the <code>ParseStream</code> API to support manipulating …","Extensions to the <code>ParseStream</code> API to support speculative …","Advance this parse stream to the position of a forked …","Returns the delimiter, the span of the delimiter token, …","","An iterator over owned values of type <code>T</code>.","An iterator over owned pairs of type <code>Pair&lt;T, P&gt;</code>.","An iterator over borrowed values of type <code>&amp;T</code>.","An iterator over mutably borrowed values of type <code>&amp;mut T</code>.","A single syntax tree node of type <code>T</code> followed by its …","An iterator over borrowed pairs of type <code>Pair&lt;&amp;T, &amp;P&gt;</code>.","An iterator over mutably borrowed pairs of type …","<strong>A punctuated sequence of syntax tree nodes of type <code>T</code> </strong>…","","","","","","","","","","","","","","","","","","Clears the sequence of all values and punctuation, making …","","","","","","","","","","","","","","","","Returns true if either this <code>Punctuated</code> is empty, or it has …","","","Borrows the first element in this sequence.","Mutably borrows the first element in this sequence.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Inserts an element at position <code>index</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","Returns an iterator over the contents of this sequence as …","Produces this punctuated pair as a tuple of syntax tree …","Extracts the syntax tree node from this punctuated pair, …","Determines whether this punctuated sequence is empty, …","Returns an iterator over borrowed syntax tree nodes of …","Returns an iterator over mutably borrowed syntax tree …","Borrows the last element in this sequence.","Mutably borrows the last element in this sequence.","Returns the number of syntax tree nodes in this punctuated …","","","","","","","Creates an empty punctuated sequence.","Creates a punctuated pair out of a syntax tree node and an …","","","","","","","","","","","","","Returns an iterator over the contents of this sequence as …","Returns an iterator over the contents of this sequence as …","Parses one or more occurrences of <code>T</code> separated by …","Parses one or more occurrences of <code>T</code> using the given parse …","Parses zero or more occurrences of <code>T</code> separated by …","Parses zero or more occurrences of <code>T</code> using the given parse …","Removes the last punctuated pair from this sequence, or …","Removes the trailing punctuation from this punctuated …","Borrows the punctuation from this punctuated pair, unless …","Mutably borrows the punctuation from this punctuated pair, …","Appends a syntax tree node onto the end of this punctuated …","Appends a trailing punctuation onto the end of this …","Appends a syntax tree node onto the end of this punctuated …","","","","","","","","","","","","","","","","","Determines whether this punctuated sequence ends with a …","","","","","","","","","","","","","","","","","","","","","","","","","Borrows the syntax tree node from this punctuated pair.","Mutably borrows the syntax tree node from this punctuated …","A trait that can provide the <code>Span</code> of the complete contents …","Returns a <code>Span</code> covering the complete contents of this …","<code>abstract</code>","<code>&amp;</code>","<code>&amp;&amp;</code>","<code>&amp;=</code>","<code>as</code>","<code>async</code>","<code>@</code>","<code>auto</code>","<code>await</code>","<code>become</code>","<code>box</code>","<code>{</code>…<code>}</code>","<code>[</code>…<code>]</code>","<code>break</code>","<code>^</code>","<code>^=</code>","<code>:</code>","<code>,</code>","<code>const</code>","<code>continue</code>","<code>crate</code>","<code>default</code>","<code>do</code>","<code>$</code>","<code>.</code>","<code>..</code>","<code>...</code>","<code>..=</code>","<code>dyn</code>","<code>else</code>","<code>enum</code>","<code>=</code>","<code>==</code>","<code>extern</code>","<code>=&gt;</code>","<code>final</code>","<code>fn</code>","<code>for</code>","<code>&gt;=</code>","None-delimited group","<code>&gt;</code>","<code>if</code>","<code>impl</code>","<code>in</code>","<code>&lt;-</code>","<code>&lt;=</code>","<code>let</code>","<code>loop</code>","<code>&lt;</code>","<code>macro</code>","<code>match</code>","<code>-</code>","<code>-=</code>","<code>mod</code>","<code>move</code>","<code>mut</code>","<code>!=</code>","<code>!</code>","<code>|</code>","<code>|=</code>","<code>||</code>","<code>override</code>","<code>(</code>…<code>)</code>","<code>::</code>","<code>%</code>","<code>%=</code>","<code>+</code>","<code>+=</code>","<code>#</code>","<code>priv</code>","<code>pub</code>","<code>?</code>","<code>-&gt;</code>","<code>ref</code>","<code>return</code>","<code>Self</code>","<code>self</code>","<code>;</code>","<code>&lt;&lt;</code>","<code>&lt;&lt;=</code>","<code>&gt;&gt;</code>","<code>&gt;&gt;=</code>","<code>/</code>","<code>/=</code>","<code>*</code>","<code>*=</code>","<code>static</code>","<code>struct</code>","<code>super</code>","<code>~</code>","Marker trait for types that represent single tokens.","<code>trait</code>","<code>try</code>","<code>type</code>","<code>typeof</code>","<code>_</code>","<code>union</code>","<code>unsafe</code>","<code>unsized</code>","<code>use</code>","<code>virtual</code>","<code>where</code>","<code>while</code>","<code>yield</codeeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codei":[0,136,136,136,153,0,0,32,169,32,0,154,0,154,32,0,0,32,169,0,0,0,32,136,136,136,136,136,136,0,32,3,0,135,135,32,3,3,32,32,3,76,32,32,79,91,118,123,138,154,0,0,154,32,345,0,0,0,0,187,137,0,136,136,28,91,136,0,0,165,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,91,0,32,0,0,0,0,0,0,0,3,91,113,118,123,0,32,0,0,0,0,0,91,136,0,0,0,107,32,107,169,136,76,0,0,0,138,32,91,0,0,0,0,0,0,0,169,0,32,32,169,161,18,3,0,165,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,136,32,0,0,79,84,88,154,0,19,0,0,32,138,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,165,0,32,136,0,32,91,113,118,123,138,165,169,0,32,86,0,0,0,0,32,91,136,136,132,107,19,23,71,136,137,169,86,132,153,163,137,136,138,18,32,135,138,169,153,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,32,107,138,169,0,0,0,0,169,161,0,32,138,0,345,0,129,32,138,169,136,136,107,32,138,161,0,32,0,136,136,136,136,0,138,169,91,113,0,0,0,3,0,28,32,91,138,136,136,0,84,91,91,0,0,0,0,0,0,0,169,32,32,32,138,169,138,0,0,79,88,91,113,118,123,138,154,187,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,129,0,32,28,91,23,23,71,32,91,0,0,0,0,0,0,0,0,32,84,91,113,118,123,3,138,169,0,0,0,0,32,138,32,96,128,171,60,142,180,2,40,56,155,152,55,41,110,160,11,35,42,128,22,26,27,33,34,35,36,37,38,39,40,41,42,43,43,44,45,46,47,48,49,50,51,52,52,53,54,54,55,56,57,58,58,59,59,60,61,62,63,64,65,66,67,68,69,70,73,75,77,80,81,82,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,114,115,116,117,119,120,121,122,124,125,126,127,130,131,139,140,141,142,143,144,145,146,147,148,149,150,166,168,185,186,102,36,134,176,36,45,9,8,9,8,35,38,43,43,65,68,95,125,42,46,53,69,75,1,16,11,12,2,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,3,10,6,5,7,9,8,4,345,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,1,16,11,12,2,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,3,10,6,5,7,9,8,4,345,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,90,80,81,89,90,103,121,158,173,182,24,30,55,63,93,96,97,102,112,145,164,0,17,33,49,61,144,170,181,0,39,0,139,35,42,140,1,16,11,12,2,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,3,10,6,5,7,9,8,4,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,1,16,11,12,2,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,3,10,6,5,7,9,8,4,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,1,2,108,155,26,73,74,80,81,82,89,90,92,100,102,115,119,121,124,130,148,150,158,75,131,186,48,69,78,78,43,43,82,92,119,124,179,42,128,99,44,94,0,0,27,78,83,153,81,82,119,120,121,97,124,125,126,20,134,22,167,63,143,36,45,56,131,186,182,170,172,177,179,180,181,33,66,144,146,147,183,48,59,59,30,93,1,1,2,71,72,21,34,51,81,82,92,100,103,104,124,126,156,157,167,1,2,71,72,39,41,46,47,49,51,55,57,60,61,62,64,67,70,73,92,100,124,167,0,94,184,75,22,29,31,63,101,105,145,1,1,1,2,71,72,9,8,128,171,46,83,1,1,1,1,1,1,1,16,11,12,2,17,18,19,19,19,19,20,21,22,23,23,23,24,25,26,27,27,27,27,28,29,30,31,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,71,71,71,72,72,73,74,75,76,77,78,79,79,79,79,80,81,81,82,83,84,84,84,85,86,87,88,88,88,89,90,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,107,107,107,107,107,108,109,110,111,112,113,113,113,113,113,114,115,116,117,118,118,118,118,118,119,120,121,122,123,123,123,123,123,124,125,126,127,128,129,129,129,130,131,132,133,3,3,3,3,3,3,3,3,10,6,5,7,9,9,8,8,4,345,134,135,136,137,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,139,140,141,142,143,144,145,146,147,148,149,150,151,151,152,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,40,27,92,93,97,101,102,103,104,105,116,119,121,124,126,128,156,157,158,151,47,172,78,83,155,160,75,1,2,71,72,2,22,26,27,81,82,92,93,94,98,99,100,101,102,103,104,105,108,109,110,115,116,119,121,124,126,128,139,152,156,157,158,48,97,173,46,162,49,72,166,42,128,159,171,1,16,11,12,2,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,3,10,6,5,7,9,8,4,345,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,23,23,23,23,153,151,153,77,96,97,102,112,23,23,38,39,44,46,53,69,106,151,140,34,37,23,61,170,51,166,130,80,89,180,78,42,83,85,90,171,78,59,59,52,52,53,78,83,155,160,54,54,98,117,122,127,168,175,78,55,45,73,150,0,17,56,99,85,42,26,60,100,115,130,139,142,179,180,74,184,185,186,24,1,2,80,3,10,6,5,7,9,8,4,1,37,67,42,42,42,128,159,171,78,25,40,56,57,66,85,128,141,146,147,159,162,171,177,183,0,0,0,1,2,19,20,21,22,24,25,27,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,132,3,10,10,6,5,7,9,8,4,134,136,137,151,152,154,155,159,161,164,165,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,187,0,1,17,20,17,20,134,134,0,17,0,151,138,138,26,17,20,17,0,0,138,0,155,26,10,164,32,1,2,46,51,75,131,141,142,148,150,166,17,19,20,21,58,58,63,85,134,145,147,162,178,160,17,87,162,0,58,58,63,145,147,178,64,128,56,130,94,110,19,19,19,63,145,102,62,34,37,151,130,97,99,29,61,92,94,98,100,101,103,104,106,114,115,116,117,119,120,121,122,124,126,127,166,168,170,1,2,3,10,6,5,7,9,8,4,77,95,114,120,125,1,1,1,16,11,12,2,2,17,19,20,21,22,23,24,25,26,27,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,71,72,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,3,3,10,10,6,6,5,5,7,7,9,9,8,8,4,4,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,164,165,166,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,72,4,0,78,111,179,59,59,100,115,164,29,101,17,139,3,10,6,5,7,9,8,102,48,1,16,11,12,2,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,3,10,6,5,7,9,8,4,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,1,2,9,8,1,16,11,12,2,17,19,20,21,22,23,24,25,26,27,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,3,10,6,5,7,9,8,4,134,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,161,162,164,165,166,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,0,10,6,5,7,9,8,4,20,134,97,102,103,106,108,1,16,11,12,2,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,3,10,6,5,7,9,8,4,345,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,1,16,11,12,2,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,3,10,6,5,7,9,8,4,345,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,65,56,26,41,82,92,100,104,115,119,124,126,130,148,156,160,185,1,16,11,12,2,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,3,10,6,5,7,9,8,4,345,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,78,78,104,116,121,126,50,149,174,31,105,25,1,68,96,97,99,102,128,171,106,10,6,5,7,4,21,4,157,128,171,30,93,26,27,92,93,94,95,99,100,101,102,103,104,105,106,114,115,116,124,125,126,78,87,69,169,173,182,187,70,0,0,223,223,224,223,224,224,224,224,224,224,224,223,224,224,224,223,224,224,224,223,223,224,224,224,224,224,224,223,224,223,224,223,224,0,346,346,346,0,226,226,226,226,226,226,226,0,226,226,226,226,226,0,0,0,217,0,0,0,0,0,0,0,229,228,231,229,230,235,228,231,229,230,235,229,228,230,228,230,228,229,230,0,229,231,229,230,228,228,228,229,229,229,228,228,231,229,230,235,228,231,229,230,235,228,228,228,229,229,228,228,214,229,217,235,217,229,217,229,231,229,229,229,228,228,229,229,228,228,230,228,229,228,231,229,230,235,228,231,229,230,235,228,231,229,230,235,0,0,347,348,244,0,0,0,0,0,0,0,0,244,237,241,246,242,243,207,208,244,237,241,246,242,243,207,208,244,237,237,241,242,243,207,244,237,237,241,242,243,207,244,244,237,237,237,237,237,237,237,241,246,242,243,207,208,244,237,237,237,237,237,237,241,246,242,243,207,208,244,237,237,237,241,246,242,243,207,208,237,244,244,237,237,237,237,237,237,241,246,242,243,207,208,237,244,241,246,242,243,207,208,241,246,242,243,207,208,237,237,237,237,237,237,237,237,244,244,237,237,237,241,246,242,243,207,208,237,244,237,241,242,243,207,244,237,244,237,237,241,246,242,243,207,208,244,237,241,246,242,243,207,208,244,237,241,246,242,243,207,208,244,244,244,0,349,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,248,199,249,250,251,252,253,254,255,256,257,258,196,259,260,261,262,263,201,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,200,198,282,283,197,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,248,199,249,250,251,252,253,254,255,256,257,258,196,259,260,261,262,263,201,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,200,198,282,283,197,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,248,199,249,250,251,252,253,254,255,256,257,258,196,259,260,261,262,263,201,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,200,198,282,283,197,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,248,199,249,250,251,252,253,254,255,256,257,258,196,259,260,261,262,263,201,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,200,198,282,283,197,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,248,199,249,250,251,252,253,254,255,256,257,258,196,259,260,261,262,263,201,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,200,198,282,283,197,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,199,296,299,300,302,303,304,305,309,313,316,317,320,321,325,327,329,330,332,337,339,341,199,296,299,300,302,303,304,305,309,313,316,317,320,321,325,327,329,330,332,337,339,341,248,199,249,250,251,252,253,254,255,256,257,258,196,259,260,261,262,263,201,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,200,198,282,283,197,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,248,199,249,250,251,252,253,254,255,256,257,258,196,259,260,261,262,263,201,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,200,198,282,283,197,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,199,249,250,251,252,253,254,255,256,257,258,196,259,260,261,262,263,201,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,200,198,282,283,197,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,199,249,250,251,252,253,254,255,256,257,258,196,259,260,261,262,263,201,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,200,198,282,283,197,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,248,249,250,251,252,253,254,255,256,257,258,196,259,260,261,262,263,201,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,200,198,282,283,197,284,285,286,287,288,289,290,291,292,293,294,295,342,343,344,199,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,248,342,343,344,248,199,249,250,251,252,253,254,255,256,257,258,196,259,260,261,262,263,201,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,200,198,282,283,197,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,199,249,250,251,252,253,254,255,256,257,258,196,259,260,261,262,263,201,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,200,198,282,283,197,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,248,199,249,250,251,252,253,254,255,256,257,258,196,259,260,261,262,263,201,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,200,198,282,283,197,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,248,199,249,250,251,252,253,254,255,256,257,258,196,259,260,261,262,263,201,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,200,198,282,283,197,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,248,199,249,250,251,252,253,254,255,256,257,258,196,259,260,261,262,263,201,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,200,198,282,283,197,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[11,12],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[9,13],[8,13],[9,[[15,[14]]]],[8,[[15,[14]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,1],[16,16],[11,11],[12,12],[2,2],[17,17],[18,18],[19,19],[20,20],[21,21],[22,22],[23,23],[24,24],[25,25],[26,26],[27,27],[28,28],[29,29],[30,30],[31,31],[32,32],[33,33],[34,34],[35,35],[36,36],[37,37],[38,38],[39,39],[40,40],[41,41],[42,42],[43,43],[44,44],[45,45],[46,46],[47,47],[48,48],[49,49],[50,50],[51,51],[52,52],[53,53],[54,54],[55,55],[56,56],[57,57],[58,58],[59,59],[60,60],[61,61],[62,62],[63,63],[64,64],[65,65],[66,66],[67,67],[68,68],[69,69],[70,70],[71,71],[72,72],[73,73],[74,74],[75,75],[76,76],[77,77],[78,78],[79,79],[80,80],[81,81],[82,82],[83,83],[84,84],[85,85],[86,86],[87,87],[88,88],[89,89],[90,90],[91,91],[92,92],[93,93],[94,94],[95,95],[96,96],[97,97],[98,98],[99,99],[100,100],[101,101],[102,102],[103,103],[104,104],[105,105],[106,106],[107,107],[108,108],[109,109],[110,110],[111,111],[112,112],[113,113],[114,114],[115,115],[116,116],[117,117],[118,118],[119,119],[120,120],[121,121],[122,122],[123,123],[124,124],[125,125],[126,126],[127,127],[128,128],[129,129],[130,130],[131,131],[132,132],[133,133],[3,3],[10,10],[6,6],[5,5],[7,7],[9,9],[8,8],[4,4],[134,134],[135,135],[136,136],[137,137],[138,138],[139,139],[140,140],[141,141],[142,142],[143,143],[144,144],[145,145],[146,146],[147,147],[148,148],[149,149],[150,150],[151,151],[152,152],[153,153],[154,154],[155,155],[156,156],[157,157],[158,158],[159,159],[160,160],[161,161],[162,162],[163,163],[164,164],[165,165],[166,166],[167,167],[168,168],[169,169],[170,170],[171,171],[172,172],[173,173],[174,174],[175,175],[176,176],[177,177],[178,178],[179,179],[180,180],[181,181],[182,182],[183,183],[184,184],[185,185],[186,186],[187,187],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[1,1],188],[[2,2],188],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],78],[[],83],[[],153],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,1],189],[[1,[0,[[190,[13]],191]]],189],[[2,2],189],[[71,71],189],[[72,72],189],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],189],[[],189],[[],189],[[],189],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,192],[[194,[193]]]],[[1,192],[[194,[193]]]],[[1,192],[[194,[193]]]],[[2,192],195],[[71,192],195],[[72,192],195],[[9,192],195],[[8,192],195],0,0,0,0,[196,1],[197,1],[198,1],[199,1],[[]],[200,1],[201,1],[[]],[[]],[[]],[[]],[[]],[[]],[151,19],[[]],[20,19],[21,19],[[]],[[]],[[]],[24,23],[[]],[25,23],[[]],[[]],[[]],[93,27],[105,27],[101,27],[[]],[[]],[[]],[[]],[[]],[35,32],[51,32],[61,32],[58,32],[54,32],[39,32],[59,32],[63,32],[43,32],[44,32],[50,32],[46,32],[70,32],[34,32],[42,32],[33,32],[53,32],[[]],[69,32],[40,32],[60,32],[67,32],[41,32],[65,32],[48,32],[56,32],[68,32],[49,32],[38,32],[47,32],[52,32],[57,32],[36,32],[66,32],[45,32],[64,32],[37,32],[62,32],[55,32],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,71],[72,71],[202,71],[[]],[[]],[202,72],[[]],[[]],[[]],[[]],[[]],[[]],[82,79],[[]],[81,79],[80,79],[[]],[1,81],[[]],[[]],[[]],[85,84],[[]],[2,84],[[]],[[]],[[]],[89,88],[90,88],[[]],[[]],[[]],[94,91],[106,91],[96,91],[103,91],[102,91],[97,91],[98,91],[93,91],[92,91],[95,91],[100,91],[101,91],[99,91],[105,91],[104,91],[27,91],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[110,107],[111,107],[[]],[112,107],[109,107],[108,107],[[]],[[]],[[]],[[]],[[]],[[]],[116,113],[114,113],[115,113],[117,113],[[]],[[]],[[]],[[]],[122,118],[[]],[119,118],[121,118],[120,118],[[]],[[]],[[]],[[]],[125,123],[124,123],[127,123],[[]],[126,123],[[]],[[]],[[]],[[]],[[]],[148,129],[[]],[130,129],[[]],[[]],[[]],[[]],[4,3],[9,3],[5,3],[10,3],[7,3],[[]],[8,3],[6,3],[[]],[[]],[[]],[[]],[203,9],[[]],[[]],[203,8],[[]],[[]],[[]],[[]],[[]],[[]],[143,138],[146,138],[141,138],[139,138],[[]],[149,138],[52,138],[58,138],[43,138],[142,138],[140,138],[59,138],[147,138],[145,138],[148,138],[54,138],[144,138],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[204,[152]]],151],[[]],[[[204,[1]]],152],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[179,169],[183,169],[174,169],[181,169],[182,169],[173,169],[171,169],[[]],[170,169],[180,169],[176,169],[175,169],[172,169],[178,169],[177,169],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[151,[[205,[1]]]],0,0,0,0,0,0,0,[[1,206]],[[2,206]],[[71,206]],[[72,206]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[23],[23],[23],[23,189],[153,189],[[151,191],189],[153,189],0,0,0,0,0,[23,[[207,[26]]]],[23,[[208,[26]]]],0,0,0,0,0,0,0,0,0,0,0,[23,202],0,0,0,0,[130,[[205,[2]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[78,87],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[13,209],1],[[13,209],2],[2,80],[203,3],[[13,209],10],[[[211,[210]],209],6],[[210,209],5],[[212,209],7],[[13,209],9],[[13,209],8],[[189,209],4],[[13,209],1],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[213,[[15,[214]]]],[215,[[15,[1]]]],[215,[[15,[2]]]],[215,[[15,[19]]]],[215,[[15,[20]]]],[215,[[15,[21]]]],[215,[[15,[22]]]],[215,[[15,[24]]]],[215,[[15,[25]]]],[215,[[15,[27]]]],[215,[[15,[32]]]],[215,[[15,[33]]]],[215,[[15,[34]]]],[215,[[15,[35]]]],[215,[[15,[36]]]],[215,[[15,[37]]]],[215,[[15,[38]]]],[215,[[15,[39]]]],[215,[[15,[40]]]],[215,[[15,[41]]]],[215,[[15,[42]]]],[215,[[15,[43]]]],[215,[[15,[44]]]],[215,[[15,[45]]]],[215,[[15,[46]]]],[215,[[15,[48]]]],[215,[[15,[49]]]],[215,[[15,[50]]]],[215,[[15,[51]]]],[215,[[15,[52]]]],[215,[[15,[53]]]],[215,[[15,[54]]]],[215,[[15,[55]]]],[215,[[15,[56]]]],[215,[[15,[57]]]],[215,[[15,[58]]]],[215,[[15,[59]]]],[215,[[15,[60]]]],[215,[[15,[61]]]],[215,[[15,[62]]]],[215,[[15,[63]]]],[215,[[15,[64]]]],[215,[[15,[65]]]],[215,[[15,[66]]]],[215,[[15,[67]]]],[215,[[15,[68]]]],[215,[[15,[69]]]],[215,[[15,[70]]]],[215,[[15,[71]]]],[215,[[15,[72]]]],[215,[[15,[73]]]],[215,[[15,[74]]]],[215,[[15,[75]]]],[215,[[15,[76]]]],[215,[[15,[77]]]],[215,[[15,[78]]]],[215,[[15,[79]]]],[215,[[15,[80]]]],[215,[[15,[81]]]],[215,[[15,[82]]]],[215,[[15,[83]]]],[215,[[15,[84]]]],[215,[[15,[85]]]],[215,[[15,[86]]]],[215,[[15,[87]]]],[215,[[15,[88]]]],[215,[[15,[91]]]],[215,[[15,[92]]]],[215,[[15,[93]]]],[215,[[15,[94]]]],[215,[[15,[95]]]],[215,[[15,[96]]]],[215,[[15,[97]]]],[215,[[15,[98]]]],[215,[[15,[99]]]],[215,[[15,[100]]]],[215,[[15,[101]]]],[215,[[15,[102]]]],[215,[[15,[103]]]],[215,[[15,[104]]]],[215,[[15,[105]]]],[215,[[15,[106]]]],[215,[[15,[107]]]],[215,[[15,[113]]]],[215,[[15,[114]]]],[215,[[15,[115]]]],[215,[[15,[116]]]],[215,[[15,[117]]]],[215,[[15,[118]]]],[215,[[15,[119]]]],[215,[[15,[120]]]],[215,[[15,[121]]]],[215,[[15,[122]]]],[215,[[15,[123]]]],[215,[[15,[124]]]],[215,[[15,[125]]]],[215,[[15,[126]]]],[215,[[15,[127]]]],[215,[[15,[128]]]],[215,[[15,[129]]]],[215,[[15,[130]]]],[215,[[15,[132]]]],[215,[[15,[3]]]],[215,[[15,[10]]]],[10,[[15,[214]]]],[215,[[15,[6]]]],[215,[[15,[5]]]],[215,[[15,[7]]]],[215,[[15,[9]]]],[215,[[15,[8]]]],[215,[[15,[4]]]],[215,[[15,[134]]]],[215,[[15,[136]]]],[215,[[15,[137]]]],[215,[[15,[151]]]],[215,[[15,[152]]]],[215,[[15,[154]]]],[215,[[15,[155]]]],[215,[[15,[159]]]],[215,[[15,[161]]]],[215,[[15,[164]]]],[215,[[15,[165]]]],[215,[[15,[169]]]],[215,[[15,[170]]]],[215,[[15,[171]]]],[215,[[15,[172]]]],[215,[[15,[173]]]],[215,[[15,[174]]]],[215,[[15,[175]]]],[215,[[15,[176]]]],[215,[[15,[177]]]],[215,[[15,[178]]]],[215,[[15,[179]]]],[215,[[15,[180]]]],[215,[[15,[181]]]],[215,[[15,[182]]]],[215,[[15,[183]]]],[215,[[15,[184]]]],[215,[[15,[185]]]],[215,[[15,[187]]]],[216,[[15,[214]]]],[215,[[15,[1]]]],[17,[[15,[214]]]],[20,[[15,[214]]]],[[17,217],15],[[20,217],15],[134,[[15,[214]]]],[[134,217],15],[13,[[15,[77]]]],[215,[[15,[[218,[17]]]]]],0,[215,[[15,[151]]]],[215,[[15,[138]]]],[215,[[15,[138]]]],[215,[[15,[26]]]],[[17,219],15],[[20,219],15],[215,[[15,[[218,[17]]]]]],0,0,[215,[[15,[138]]]],[13,[[15,[214]]]],[215,[[15,[155]]]],[215,[[15,[26]]]],[[10,217],15],[215,[[15,[[218,[165]]]]]],[215,[[15,[32]]]],[[1,1],[[205,[188]]]],[[2,2],[[205,[188]]]],0,0,0,0,0,0,0,0,0,[17,151],[19,151],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[128,[[205,[130]]]],0,0,0,0,[19,[[15,[20]]]],[19,[[15,[21]]]],[19,[[15,[151]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,209]],[[2,209]],[[3,209]],[[10,209]],[[6,209]],[[5,209]],[[7,209]],[[9,209]],[[8,209]],[[4,209]],0,0,0,0,0,[1,209],[1,[[205,[209]]]],[[],209],[[],209],[[],209],[[],209],[[],209],[2,209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[71,[[205,[209]]]],[[],209],[[],209],[72,[[205,[209]]]],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[3,209],[10,209],[[],209],[[],209],[6,209],[[],209],[5,209],[[],209],[7,209],[[],209],[9,209],[8,209],[[],209],[[],209],[4,209],[[],209],[135,220],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[160,209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],0,0,0,[78],0,0,0,0,0,0,0,0,0,0,0,[3,13],[10,13],[6,13],[5,13],[7,13],[9,13],[8,13],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],221],[[],221],[[],221],[[],221],[[1,216]],[[16,216]],[[11,216]],[[12,216]],[[2,216]],[[17,216]],[[19,216]],[[20,216]],[[21,216]],[[22,216]],[[23,216]],[[24,216]],[[25,216]],[[26,216]],[[27,216]],[[32,216]],[[33,216]],[[34,216]],[[35,216]],[[36,216]],[[37,216]],[[38,216]],[[39,216]],[[40,216]],[[41,216]],[[42,216]],[[43,216]],[[44,216]],[[45,216]],[[46,216]],[[47,216]],[[48,216]],[[49,216]],[[50,216]],[[51,216]],[[52,216]],[[53,216]],[[54,216]],[[55,216]],[[56,216]],[[57,216]],[[58,216]],[[59,216]],[[60,216]],[[61,216]],[[62,216]],[[63,216]],[[64,216]],[[65,216]],[[66,216]],[[67,216]],[[68,216]],[[69,216]],[[70,216]],[[71,216]],[[72,216]],[[73,216]],[[74,216]],[[75,216]],[[76,216]],[[77,216]],[[78,216]],[[79,216]],[[80,216]],[[81,216]],[[82,216]],[[83,216]],[[84,216]],[[85,216]],[[86,216]],[[87,216]],[[88,216]],[[89,216]],[[90,216]],[[91,216]],[[92,216]],[[93,216]],[[94,216]],[[95,216]],[[96,216]],[[97,216]],[[98,216]],[[99,216]],[[100,216]],[[101,216]],[[102,216]],[[103,216]],[[104,216]],[[105,216]],[[106,216]],[[107,216]],[[108,216]],[[109,216]],[[110,216]],[[111,216]],[[112,216]],[[113,216]],[[114,216]],[[115,216]],[[116,216]],[[117,216]],[[118,216]],[[119,216]],[[120,216]],[[121,216]],[[122,216]],[[123,216]],[[124,216]],[[125,216]],[[126,216]],[[127,216]],[[128,216]],[[129,216]],[[130,216]],[[131,216]],[[132,216]],[[3,216]],[[10,216]],[[6,216]],[[5,216]],[[7,216]],[[9,216]],[[8,216]],[[4,216]],[[134,216]],[[136,216]],[[137,216]],[[138,216]],[[139,216]],[[140,216]],[[141,216]],[[142,216]],[[143,216]],[[144,216]],[[145,216]],[[146,216]],[[147,216]],[[148,216]],[[149,216]],[[150,216]],[[151,216]],[[152,216]],[[153,216]],[[154,216]],[[155,216]],[[156,216]],[[157,216]],[[158,216]],[[159,216]],[[161,216]],[[162,216]],[[164,216]],[[165,216]],[[166,216]],[[168,216]],[[169,216]],[[170,216]],[[171,216]],[[172,216]],[[173,216]],[[174,216]],[[175,216]],[[176,216]],[[177,216]],[[178,216]],[[179,216]],[[180,216]],[[181,216]],[[182,216]],[[183,216]],[[184,216]],[[185,216]],[[186,216]],[[187,216]],0,[10,203],[6,203],[5,203],[7,203],[9,203],[8,203],[4,1],0,0,0,0,0,0,0,[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],0,0,0,0,0,0,0,0,0,0,0,0,[1,1],0,0,0,0,0,0,0,0,[10,221],[6,[[218,[210]]]],[5,210],[7,212],[4,189],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[215,[[15,[169]]]],[215,[[15,[173]]]],[215,[[15,[182]]]],[215,[[15,[187]]]],0,0,0,[223,224],[[]],[[]],[[]],[[]],[224,224],[[]],[[],224],[224,189],[[224,224],189],[[],189],[[]],[[]],[[224,225],205],[224,205],[[]],[[]],[224,205],[224,205],[213,223],[216,223],[[224,224],[[205,[188]]]],[224,205],[224,209],[[]],[224,216],[224,205],[[],194],[[],194],[[],194],[[],194],[[],222],[[],222],0,[215,15],0,[[],1],0,[[]],[[]],[[226,227],228],[[]],0,[[]],[[226,219],15],[219,217],0,[[],194],[[],194],[[],222],[226,[[15,[215]]]],0,0,0,0,0,0,0,0,0,0,0,[[229,229]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[229,15],[228,228],[230,230],[[]],[[]],[[228,228]],[229,224],[230],0,[229],[231,228],[[229,227],228],[[230,227],228],[[228,232]],[[228,192],195],[[228,192],195],[[229,192],195],[[229,192],195],[229,229],[[]],[233,228],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[228,216],[228],[228],[229,189],[229,231],[[209,227],228],[[234,227],228],[215,15],[229,[[15,[214]]]],[213,15],[215,[[15,[235]]]],[216,15],[229,15],[13,15],[[229,236],[[15,[237]]]],[[231,236],189],[[229,236],189],[[229,236],189],[[229,236],189],[238],[228,209],[229,209],[[229,239],15],[228,216],[[]],[[]],[[],221],[[],221],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],222],[[],222],[[],222],[[],222],[[],222],0,0,[[]],[[],15],0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[237],[[[237,[240,240]]],[[237,[240,240]]]],[241,241],[[[242,[240,240]]],[[242,[240,240]]]],[[[243,[240]]],[[243,[240]]]],[207,207],[[[244,[240,240]]],[[244,[240,240]]]],[[[237,[240,240]],[237,[240,240]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[[244,[240,240]]],[[244,[240,240]]]],[[],237],[237,189],[[[237,[245]],232]],[[[237,[245]],232]],[237,205],[237,205],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[232,[[237,[245]]]],[232,237],[[237,202]],[[237,202]],[[[237,[245]],202]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[237],[237],[237],[[]],[[]],[[]],[[]],[[]],[[]],[237,242],[244],[244],[237,189],[237,207],[237,208],[237,205],[237,205],[237,202],[241,202],[246,202],[242,202],[243,202],[207,202],[208,202],[[],237],[205,244],[241,205],[246,205],[242,205],[243,205],[207,205],[208,205],[241,205],[246,205],[242,205],[243,205],[207,205],[208,205],[237,241],[237,246],[215,[[15,[[237,[214,[0,[247,214]]]]]]]],[215,[[15,[[237,[[0,[247,214]]]]]]]],[215,[[15,[[237,[214,214]]]]]],[215,[[15,[[237,[214]]]]]],[237,[[205,[244]]]],[237,205],[244,205],[244,205],[[[237,[245]]]],[237],[237],[241],[246],[242],[243],[207],[208],[[],209],[[],209],[[]],[[]],[[]],[[]],[[]],[[]],[[[237,[234,234]],216]],[[[244,[234,234]],216]],[237,189],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[244],[244],0,[[],209],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[248,248],[199,199],[249,249],[250,250],[251,251],[252,252],[253,253],[254,254],[255,255],[256,256],[257,257],[258,258],[196,196],[259,259],[260,260],[261,261],[262,262],[263,263],[201,201],[264,264],[265,265],[266,266],[267,267],[268,268],[269,269],[270,270],[271,271],[272,272],[273,273],[274,274],[275,275],[276,276],[277,277],[278,278],[279,279],[280,280],[281,281],[200,200],[198,198],[282,282],[283,283],[197,197],[284,284],[285,285],[286,286],[287,287],[288,288],[289,289],[290,290],[291,291],[292,292],[293,293],[294,294],[295,295],[296,296],[297,297],[298,298],[299,299],[300,300],[301,301],[302,302],[303,303],[304,304],[305,305],[306,306],[307,307],[308,308],[309,309],[310,310],[311,311],[312,312],[313,313],[314,314],[315,315],[316,316],[317,317],[318,318],[319,319],[320,320],[321,321],[322,322],[323,323],[324,324],[325,325],[326,326],[327,327],[328,328],[329,329],[330,330],[331,331],[332,332],[333,333],[334,334],[335,335],[336,336],[337,337],[338,338],[339,339],[340,340],[341,341],[342,342],[343,343],[344,344],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],248],[[],199],[[],249],[[],250],[[],251],[[],252],[[],253],[[],254],[[],255],[[],256],[[],257],[[],258],[[],196],[[],259],[[],260],[[],261],[[],262],[[],263],[[],201],[[],264],[[],265],[[],266],[[],267],[[],268],[[],269],[[],270],[[],271],[[],272],[[],273],[[],274],[[],275],[[],276],[[],277],[[],278],[[],279],[[],280],[[],281],[[],200],[[],198],[[],282],[[],283],[[],197],[[],284],[[],285],[[],286],[[],287],[[],288],[[],289],[[],290],[[],291],[[],292],[[],293],[[],294],[[],295],[[],296],[[],297],[[],298],[[],299],[[],300],[[],301],[[],302],[[],303],[[],304],[[],305],[[],306],[[],307],[[],308],[[],309],[[],310],[[],311],[[],312],[[],313],[[],314],[[],315],[[],316],[[],317],[[],318],[[],319],[[],320],[[],321],[[],322],[[],323],[[],324],[[],325],[[],326],[[],327],[[],328],[[],329],[[],330],[[],331],[[],332],[[],333],[[],334],[[],335],[[],336],[[],337],[[],338],[[],339],[[],340],[[],341],[[],342],[[],343],[[],344],[199],[296],[299],[300],[302],[303],[304],[305],[309],[313],[316],[317],[320],[321],[325],[327],[329],[330],[332],[337],[339],[341],[199],[296],[299],[300],[302],[303],[304],[305],[309],[313],[316],[317],[320],[321],[325],[327],[329],[330],[332],[337],[339],[341],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[215,[[15,[199]]]],[215,[[15,[249]]]],[215,[[15,[250]]]],[215,[[15,[251]]]],[215,[[15,[252]]]],[215,[[15,[253]]]],[215,[[15,[254]]]],[215,[[15,[255]]]],[215,[[15,[256]]]],[215,[[15,[257]]]],[215,[[15,[258]]]],[215,[[15,[196]]]],[215,[[15,[259]]]],[215,[[15,[260]]]],[215,[[15,[261]]]],[215,[[15,[262]]]],[215,[[15,[263]]]],[215,[[15,[201]]]],[215,[[15,[264]]]],[215,[[15,[265]]]],[215,[[15,[266]]]],[215,[[15,[267]]]],[215,[[15,[268]]]],[215,[[15,[269]]]],[215,[[15,[270]]]],[215,[[15,[271]]]],[215,[[15,[272]]]],[215,[[15,[273]]]],[215,[[15,[274]]]],[215,[[15,[275]]]],[215,[[15,[276]]]],[215,[[15,[277]]]],[215,[[15,[278]]]],[215,[[15,[279]]]],[215,[[15,[280]]]],[215,[[15,[281]]]],[215,[[15,[200]]]],[215,[[15,[198]]]],[215,[[15,[282]]]],[215,[[15,[283]]]],[215,[[15,[197]]]],[215,[[15,[284]]]],[215,[[15,[285]]]],[215,[[15,[286]]]],[215,[[15,[287]]]],[215,[[15,[288]]]],[215,[[15,[289]]]],[215,[[15,[290]]]],[215,[[15,[291]]]],[215,[[15,[292]]]],[215,[[15,[293]]]],[215,[[15,[294]]]],[215,[[15,[295]]]],[215,[[15,[296]]]],[215,[[15,[297]]]],[215,[[15,[298]]]],[215,[[15,[299]]]],[215,[[15,[300]]]],[215,[[15,[301]]]],[215,[[15,[302]]]],[215,[[15,[303]]]],[215,[[15,[304]]]],[215,[[15,[305]]]],[215,[[15,[306]]]],[215,[[15,[307]]]],[215,[[15,[308]]]],[215,[[15,[309]]]],[215,[[15,[310]]]],[215,[[15,[311]]]],[215,[[15,[312]]]],[215,[[15,[313]]]],[215,[[15,[314]]]],[215,[[15,[315]]]],[215,[[15,[316]]]],[215,[[15,[317]]]],[215,[[15,[318]]]],[215,[[15,[319]]]],[215,[[15,[320]]]],[215,[[15,[321]]]],[215,[[15,[322]]]],[215,[[15,[323]]]],[215,[[15,[324]]]],[215,[[15,[325]]]],[215,[[15,[326]]]],[215,[[15,[327]]]],[215,[[15,[328]]]],[215,[[15,[329]]]],[215,[[15,[330]]]],[215,[[15,[331]]]],[215,[[15,[332]]]],[215,[[15,[333]]]],[215,[[15,[334]]]],[215,[[15,[335]]]],[215,[[15,[336]]]],[215,[[15,[337]]]],[215,[[15,[338]]]],[215,[[15,[339]]]],[215,[[15,[340]]]],[215,[[15,[341]]]],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],[[],209],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[248,216,239]],[[342,216,239]],[[343,216,239]],[[344,216,239]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[199,216]],[[249,216]],[[250,216]],[[251,216]],[[252,216]],[[253,216]],[[254,216]],[[255,216]],[[256,216]],[[257,216]],[[258,216]],[[196,216]],[[259,216]],[[260,216]],[[261,216]],[[262,216]],[[263,216]],[[201,216]],[[264,216]],[[265,216]],[[266,216]],[[267,216]],[[268,216]],[[269,216]],[[270,216]],[[271,216]],[[272,216]],[[273,216]],[[274,216]],[[275,216]],[[276,216]],[[277,216]],[[278,216]],[[279,216]],[[280,216]],[[281,216]],[[200,216]],[[198,216]],[[282,216]],[[283,216]],[[197,216]],[[284,216]],[[285,216]],[[286,216]],[[287,216]],[[288,216]],[[289,216]],[[290,216]],[[291,216]],[[292,216]],[[293,216]],[[294,216]],[[295,216]],[[296,216]],[[297,216]],[[298,216]],[[299,216]],[[300,216]],[[301,216]],[[302,216]],[[303,216]],[[304,216]],[[305,216]],[[306,216]],[[307,216]],[[308,216]],[[309,216]],[[310,216]],[[311,216]],[[312,216]],[[313,216]],[[314,216]],[[315,216]],[[316,216]],[[317,216]],[[318,216]],[[319,216]],[[320,216]],[[321,216]],[[322,216]],[[323,216]],[[324,216]],[[325,216]],[[326,216]],[[327,216]],[[328,216]],[[329,216]],[[330,216]],[[331,216]],[[332,216]],[[333,216]],[[334,216]],[[335,216]],[[336,216]],[[337,216]],[[338,216]],[[339,216]],[[340,216]],[[341,216]],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],194],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222],[[],222]],"c":[],"p":[[3,"Ident"],[3,"Lifetime"],[4,"Lit"],[3,"LitBool"],[3,"LitByte"],[3,"LitByteStr"],[3,"LitChar"],[3,"LitFloat"],[3,"LitInt"],[3,"LitStr"],[3,"TypeGenerics"],[3,"Turbofish"],[15,"str"],[8,"FromStr"],[6,"Result"],[3,"ImplGenerics"],[3,"Attribute"],[4,"AttrStyle"],[4,"Meta"],[3,"MetaList"],[3,"MetaNameValue"],[3,"Variant"],[4,"Fields"],[3,"FieldsNamed"],[3,"FieldsUnnamed"],[3,"Field"],[3,"DeriveInput"],[4,"Data"],[3,"DataStruct"],[3,"DataEnum"],[3,"DataUnion"],[4,"Expr"],[3,"ExprArray"],[3,"ExprAssign"],[3,"ExprAsync"],[3,"ExprAwait"],[3,"ExprBinary"],[3,"ExprBlock"],[3,"ExprBreak"],[3,"ExprCall"],[3,"ExprCast"],[3,"ExprClosure"],[3,"ExprConst"],[3,"ExprContinue"],[3,"ExprField"],[3,"ExprForLoop"],[3,"ExprGroup"],[3,"ExprIf"],[3,"ExprIndex"],[3,"ExprInfer"],[3,"ExprLet"],[3,"ExprLit"],[3,"ExprLoop"],[3,"ExprMacro"],[3,"ExprMatch"],[3,"ExprMethodCall"],[3,"ExprParen"],[3,"ExprPath"],[3,"ExprRange"],[3,"ExprReference"],[3,"ExprRepeat"],[3,"ExprReturn"],[3,"ExprStruct"],[3,"ExprTry"],[3,"ExprTryBlock"],[3,"ExprTuple"],[3,"ExprUnary"],[3,"ExprUnsafe"],[3,"ExprWhile"],[3,"ExprYield"],[4,"Member"],[3,"Index"],[3,"FieldValue"],[3,"Label"],[3,"Arm"],[4,"RangeLimits"],[3,"File"],[3,"Generics"],[4,"GenericParam"],[3,"LifetimeParam"],[3,"TypeParam"],[3,"ConstParam"],[3,"BoundLifetimes"],[4,"TypeParamBound"],[3,"TraitBound"],[4,"TraitBoundModifier"],[3,"WhereClause"],[4,"WherePredicate"],[3,"PredicateLifetime"],[3,"PredicateType"],[4,"Item"],[3,"ItemConst"],[3,"ItemEnum"],[3,"ItemExternCrate"],[3,"ItemFn"],[3,"ItemForeignMod"],[3,"ItemImpl"],[3,"ItemMacro"],[3,"ItemMod"],[3,"ItemStatic"],[3,"ItemStruct"],[3,"ItemTrait"],[3,"ItemTraitAlias"],[3,"ItemType"],[3,"ItemUnion"],[3,"ItemUse"],[4,"UseTree"],[3,"UsePath"],[3,"UseName"],[3,"UseRename"],[3,"UseGlob"],[3,"UseGroup"],[4,"ForeignItem"],[3,"ForeignItemFn"],[3,"ForeignItemStatic"],[3,"ForeignItemType"],[3,"ForeignItemMacro"],[4,"TraitItem"],[3,"TraitItemConst"],[3,"TraitItemFn"],[3,"TraitItemType"],[3,"TraitItemMacro"],[4,"ImplItem"],[3,"ImplItemConst"],[3,"ImplItemFn"],[3,"ImplItemType"],[3,"ImplItemMacro"],[3,"Signature"],[4,"FnArg"],[3,"Receiver"],[3,"Variadic"],[4,"StaticMutability"],[4,"ImplRestriction"],[3,"Macro"],[4,"MacroDelimiter"],[4,"BinOp"],[4,"UnOp"],[4,"Pat"],[3,"PatIdent"],[3,"PatOr"],[3,"PatParen"],[3,"PatReference"],[3,"PatRest"],[3,"PatSlice"],[3,"PatStruct"],[3,"PatTuple"],[3,"PatTupleStruct"],[3,"PatType"],[3,"PatWild"],[3,"FieldPat"],[3,"Path"],[3,"PathSegment"],[4,"PathArguments"],[4,"GenericArgument"],[3,"AngleBracketedGenericArguments"],[3,"AssocType"],[3,"AssocConst"],[3,"Constraint"],[3,"ParenthesizedGenericArguments"],[3,"QSelf"],[4,"Visibility"],[3,"VisRestricted"],[4,"FieldMutability"],[3,"Block"],[4,"Stmt"],[3,"Local"],[3,"LocalInit"],[3,"StmtMacro"],[4,"Type"],[3,"TypeArray"],[3,"TypeBareFn"],[3,"TypeGroup"],[3,"TypeImplTrait"],[3,"TypeInfer"],[3,"TypeMacro"],[3,"TypeNever"],[3,"TypeParen"],[3,"TypePath"],[3,"TypePtr"],[3,"TypeReference"],[3,"TypeSlice"],[3,"TypeTraitObject"],[3,"TypeTuple"],[3,"Abi"],[3,"BareFnArg"],[3,"BareVariadic"],[4,"ReturnType"],[4,"Ordering"],[15,"bool"],[8,"AsRef"],[8,"Sized"],[3,"Formatter"],[3,"Error"],[4,"Result"],[6,"Result"],[3,"Crate"],[3,"Super"],[3,"SelfValue"],[3,"Underscore"],[3,"SelfType"],[3,"Extern"],[15,"usize"],[3,"Literal"],[8,"Into"],[4,"Option"],[8,"Hasher"],[3,"Iter"],[3,"IterMut"],[3,"Span"],[15,"u8"],[15,"slice"],[15,"char"],[3,"TokenStream"],[8,"Parse"],[6,"ParseStream"],[3,"TokenStream"],[8,"Parser"],[3,"Vec"],[8,"FnMut"],[3,"DelimSpan"],[3,"String"],[3,"TypeId"],[3,"TokenBuffer"],[3,"Cursor"],[4,"Delimiter"],[3,"ParseNestedMeta"],[8,"Display"],[3,"Error"],[3,"ParseBuffer"],[3,"StepCursor"],[3,"Lookahead1"],[8,"IntoIterator"],[3,"LexError"],[8,"ToTokens"],[3,"Nothing"],[8,"Peek"],[3,"Punctuated"],[3,"Demand"],[8,"FnOnce"],[8,"Clone"],[3,"Pairs"],[3,"IntoPairs"],[3,"IntoIter"],[4,"Pair"],[8,"Default"],[3,"PairsMut"],[8,"Token"],[3,"Group"],[3,"Abstract"],[3,"As"],[3,"Async"],[3,"Auto"],[3,"Await"],[3,"Become"],[3,"Box"],[3,"Break"],[3,"Const"],[3,"Continue"],[3,"Default"],[3,"Do"],[3,"Dyn"],[3,"Else"],[3,"Enum"],[3,"Final"],[3,"Fn"],[3,"For"],[3,"If"],[3,"Impl"],[3,"In"],[3,"Let"],[3,"Loop"],[3,"Macro"],[3,"Match"],[3,"Mod"],[3,"Move"],[3,"Mut"],[3,"Override"],[3,"Priv"],[3,"Pub"],[3,"Ref"],[3,"Return"],[3,"Static"],[3,"Struct"],[3,"Trait"],[3,"Try"],[3,"Type"],[3,"Typeof"],[3,"Union"],[3,"Unsafe"],[3,"Unsized"],[3,"Use"],[3,"Virtual"],[3,"Where"],[3,"While"],[3,"Yield"],[3,"And"],[3,"AndAnd"],[3,"AndEq"],[3,"At"],[3,"Caret"],[3,"CaretEq"],[3,"Colon"],[3,"Comma"],[3,"Dollar"],[3,"Dot"],[3,"DotDot"],[3,"DotDotDot"],[3,"DotDotEq"],[3,"Eq"],[3,"EqEq"],[3,"FatArrow"],[3,"Ge"],[3,"Gt"],[3,"LArrow"],[3,"Le"],[3,"Lt"],[3,"Minus"],[3,"MinusEq"],[3,"Ne"],[3,"Not"],[3,"Or"],[3,"OrEq"],[3,"OrOr"],[3,"PathSep"],[3,"Percent"],[3,"PercentEq"],[3,"Plus"],[3,"PlusEq"],[3,"Pound"],[3,"Question"],[3,"RArrow"],[3,"Semi"],[3,"Shl"],[3,"ShlEq"],[3,"Shr"],[3,"ShrEq"],[3,"Slash"],[3,"SlashEq"],[3,"Star"],[3,"StarEq"],[3,"Tilde"],[3,"Brace"],[3,"Bracket"],[3,"Paren"],[4,"StrStyle"],[8,"IdentExt"],[8,"Speculative"],[8,"AnyDelimiter"],[8,"Spanned"]]},\
"thiserror":{"doc":"github crates-io docs-rs","t":"Y","n":["Error"],"q":[[0,"thiserror"]],"d":[""],"i":[0],"f":[0],"c":[],"p":[]},\
"thiserror_impl":{"doc":"","t":"Y","n":["Error"],"q":[[0,"thiserror_impl"]],"d":[""],"i":[0],"f":[0],"c":[],"p":[]},\
"thread_local":{"doc":"Per-object thread-local storage","t":"DDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["CachedIntoIter","CachedIterMut","CachedThreadLocal","IntoIter","Iter","IterMut","ThreadLocal","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clear","default","default","drop","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","get","get","get_or","get_or","get_or_default","get_or_default","get_or_try","get_or_try","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","iter","iter_mut","iter_mut","new","new","next","next","next","next","next","size_hint","size_hint","size_hint","size_hint","size_hint","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","with_capacity"],"q":[[0,"thread_local"]],"d":["An iterator that moves out of a <code>CachedThreadLocal</code>.","Mutable iterator over the contents of a <code>CachedThreadLocal</code>.","Wrapper around <code>ThreadLocal</code>.","An iterator that moves out of a <code>ThreadLocal</code>.","Iterator over the contents of a <code>ThreadLocal</code>.","Mutable iterator over the contents of a <code>ThreadLocal</code>.","Thread-local variable wrapper","","","","","","","","","","","","","","","Removes all thread-specific values from the <code>ThreadLocal</code>, …","Removes all thread-specific values from the <code>ThreadLocal</code>, …","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the element for the current thread, if it exists.","Returns the element for the current thread, if it exists.","Returns the element for the current thread, or creates it …","Returns the element for the current thread, or creates it …","Returns the element for the current thread, or creates a …","Returns the element for the current thread, or creates a …","Returns the element for the current thread, or creates it …","Returns the element for the current thread, or creates it …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Returns an iterator over the local values of all threads …","Returns a mutable iterator over the local values of all …","Returns a mutable iterator over the local values of all …","Creates a new empty <code>CachedThreadLocal</code>.","Creates a new empty <code>ThreadLocal</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new <code>ThreadLocal</code> with an initial capacity. If …"],"i":[0,0,0,0,0,0,0,2,15,16,3,7,9,10,2,15,16,3,7,9,10,2,3,2,3,3,2,3,7,9,10,2,15,16,3,7,9,10,2,3,2,3,2,3,2,3,2,15,16,3,7,9,10,2,2,15,16,3,3,3,7,9,10,3,2,3,2,3,15,16,7,9,10,15,16,7,9,10,2,15,16,3,7,9,10,2,15,16,3,7,9,10,2,15,16,3,7,9,10,3],"f":[0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[2,[1]]]],[[[3,[1]]]],[[],[[2,[1]]]],[[],[[3,[1]]]],[[[3,[1]]]],[[[2,[[0,[1,4]]]],5],6],[[[3,[[0,[1,4]]]],5],6],[[[7,[[0,[1,4]]]],5],6],[[[9,[[0,[4,1,8]]]],5],6],[[[10,[[0,[4,1]]]],5],6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[2,[1]]],[[11,[1]]]],[[[3,[1]]],[[11,[1]]]],[[[2,[1]],12],1],[[[3,[1]],12],1],[[[2,[[0,[1,13]]]]],[[0,[1,13]]]],[[[3,[[0,[1,13]]]]],[[0,[1,13]]]],[[[2,[1]],12],[[14,[1]]]],[[[3,[1]],12],[[14,[1]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[2,[1]]],[[15,[1]]]],[[[2,[1]]],[[16,[1]]]],[[]],[[]],[[[3,[1]]],[[10,[1]]]],[[[3,[[0,[1,8]]]]]],[[[3,[1]]],[[7,[1]]]],[[]],[[]],[[]],[[[3,[8,1]]],[[9,[8,1]]]],[[[2,[1]]],[[15,[1]]]],[[[3,[1]]],[[7,[1]]]],[[],[[2,[1]]]],[[],[[3,[1]]]],[[[15,[1]]],[[11,[1]]]],[[[16,[1]]],[[11,[1]]]],[[[7,[1]]],[[11,[1]]]],[[[9,[[0,[1,8]]]]],11],[[[10,[1]]],[[11,[1]]]],[[[15,[1]]]],[[[16,[1]]]],[[[7,[1]]]],[[[9,[[0,[1,8]]]]]],[[[10,[1]]]],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[18,[[3,[1]]]]],"c":[0,1,2],"p":[[8,"Send"],[3,"CachedThreadLocal"],[3,"ThreadLocal"],[8,"Debug"],[3,"Formatter"],[6,"Result"],[3,"IterMut"],[8,"Sync"],[3,"Iter"],[3,"IntoIter"],[4,"Option"],[8,"FnOnce"],[8,"Default"],[4,"Result"],[3,"CachedIterMut"],[3,"CachedIntoIter"],[3,"TypeId"],[15,"usize"]]},\
"time":{"doc":"Simple time handling.","t":"DNNNNNNNNNNNNNNDEDDDDDNLLLLLFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLFLLFMLLLLLLLLLLLLFFLLLLLMLLFLFLLLLLLLMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLL","n":["Duration","InvalidDay","InvalidDayOfMonth","InvalidDayOfWeek","InvalidDayOfYear","InvalidFormatSpecifier","InvalidHour","InvalidMinute","InvalidMonth","InvalidSecond","InvalidSecondsSinceEpoch","InvalidTime","InvalidYear","InvalidZoneOffset","MissingFormatConverter","OutOfRangeError","ParseError","PreciseTime","SteadyTime","Timespec","Tm","TmFmt","UnexpectedCharacter","add","add","add","add","asctime","at","at_utc","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","checked_add","checked_sub","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","ctime","days","description","description","div","empty_tm","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_std","get_time","hash","hash","hash","hours","into","into","into","into","into","into","into","into","is_zero","max_value","microseconds","milliseconds","min_value","minutes","mul","nanoseconds","neg","new","now","now","now","now_utc","nsec","num_days","num_hours","num_microseconds","num_milliseconds","num_minutes","num_nanoseconds","num_seconds","num_weeks","partial_cmp","partial_cmp","partial_cmp","partial_cmp","precise_time_ns","precise_time_s","provide","provide","rfc3339","rfc822","rfc822z","sec","seconds","span","strftime","strftime","strptime","sub","sub","sub","sub","sub","sub","sub","tm_hour","tm_isdst","tm_mday","tm_min","tm_mon","tm_nsec","tm_sec","tm_utcoff","tm_wday","tm_yday","tm_year","to","to_local","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_std","to_string","to_string","to_string","to_string","to_string","to_timespec","to_utc","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","tzset","weeks","zero"],"q":[[0,"time"]],"d":["ISO 8601 time duration with nanosecond precision. This …","","","","","","","","","","","","","","","Represents error when converting <code>Duration</code> to/from a …","","An opaque structure representing a moment in time.","A structure representing a moment in time.","A record specifying a time value in seconds and …","Holds a calendar date and time broken down into its …","A wrapper around a <code>Tm</code> and format string that implements …","","","","","The resulting Tm is in UTC.","Returns a TmFmt that outputs according to the <code>asctime</code> …","Returns the specified time in the local timezone","Returns the specified time in UTC","","","","","","","","","","","","","","","","","Add two durations, returning <code>None</code> if overflow occurred.","Subtract two durations, returning <code>None</code> if overflow …","","","","","","","","","","","","","","","","","","","Returns a TmFmt that outputs according to the <code>asctime</code> …","Makes a new <code>Duration</code> with given number of days. Equivalent …","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates a <code>time::Duration</code> object from <code>std::time::Duration</code>","Returns the current time as a <code>timespec</code> containing the …","","","","Makes a new <code>Duration</code> with given number of hours. …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if the duration equals <code>Duration::zero()</code>.","The maximum possible <code>Duration</code>: <code>i64::MAX</code> milliseconds.","Makes a new <code>Duration</code> with given number of microseconds.","Makes a new <code>Duration</code> with given number of milliseconds.","The minimum possible <code>Duration</code>: <code>i64::MIN</code> milliseconds.","Makes a new <code>Duration</code> with given number of minutes. …","","Makes a new <code>Duration</code> with given number of nanoseconds.","","","Returns the current time in the local timezone","Returns a <code>PreciseTime</code> representing the current moment in …","Returns a <code>SteadyTime</code> representing the current moment in …","Returns the current time in UTC","","Returns the total number of whole days in the duration.","Returns the total number of whole hours in the duration.","Returns the total number of whole microseconds in the …","Returns the total number of whole milliseconds in the …","Returns the total number of whole minutes in the duration.","Returns the total number of whole nanoseconds in the …","Returns the total number of whole seconds in the duration.","Returns the total number of whole weeks in the duration.","","","","","Returns the current value of a high-resolution performance …","Returns the current value of a high-resolution performance …","","","Returns a TmFmt that outputs according to RFC 3339. RFC …","Returns a TmFmt that outputs according to RFC 822.","Returns a TmFmt that outputs according to RFC 822 with …","","Makes a new <code>Duration</code> with given number of seconds. Panics …","Runs a closure, returning the duration of time it took to …","Formats the time according to the format string.","Formats the time according to the format string.","Parses the time from the string according to the format …","","","","","","The resulting Tm is in UTC.","","Hours after midnight - [0, 23]","Daylight Saving Time flag.","Day of the month - [1, 31]","Minutes after the hour - [0, 59]","Months since January - [0, 11]","Nanoseconds after the second - [0, 109 - 1]","Seconds after the minute - [0, 60]","Identifies the time zone that was used to compute this …","Days since Sunday - [0, 6]. 0 = Sunday, 1 = Monday, …, 6 …","Days since January 1 - [0, 365]","Years since 1900","Returns a <code>Duration</code> representing the span of time from the …","Convert time to the local timezone","","","","","","","","Creates a <code>std::time::Duration</code> object from <code>time::Duration</code>","","","","","","Convert time to the seconds from January 1, 1970","Convert time to the UTC","","","","","","","","","","","","","","","","","","","","","","","","","","Makes a new <code>Duration</code> with given number of weeks. …","A duration where the stored seconds and nanoseconds are …"],"i":[0,9,9,9,9,9,9,9,9,9,9,9,9,9,9,0,0,0,0,0,0,0,9,1,2,3,4,4,0,0,1,7,2,8,3,4,9,5,1,7,2,8,3,4,9,5,1,1,1,7,2,8,3,4,9,1,7,2,8,3,4,9,1,2,3,4,4,1,7,9,1,0,1,7,2,3,4,9,1,7,2,3,4,1,1,7,7,2,3,3,4,9,9,5,5,1,7,2,8,3,4,9,5,1,0,1,2,4,1,1,7,2,8,3,4,9,5,1,1,1,1,1,1,1,1,1,2,0,8,3,0,2,1,1,1,1,1,1,1,1,1,2,3,4,0,0,7,9,4,4,4,2,1,1,0,4,0,1,2,2,3,3,4,4,4,4,4,4,4,4,4,4,4,4,4,8,4,1,7,2,8,3,4,9,1,1,7,3,9,5,4,4,1,7,2,8,3,4,9,5,1,7,2,8,3,4,9,5,1,7,2,8,3,4,9,5,0,1,1],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,1],1],[[2,1],2],[[3,1],3],[[4,1],4],[4,5],[2,4],[2,4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[1,1],[[6,[1]]]],[[1,1],[[6,[1]]]],[1,1],[7,7],[2,2],[8,8],[3,3],[4,4],[9,9],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[1,1],10],[[2,2],10],[[3,3],10],[[4,4],10],[4,5],[11,1],[7,12],[9,12],[[1,13],1],[[],4],[[1,1],14],[[7,7],14],[[2,2],14],[[3,3],14],[[4,4],14],[[9,9],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[1,15],16],[[1,15],16],[[7,15],16],[[7,15],16],[[2,15],16],[[3,15],16],[[3,15],16],[[4,15],16],[[9,15],16],[[9,15],16],[[5,15],16],[[5,15],16],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[17,[[18,[1,7]]]],[[],2],[[1,19]],[[2,19]],[[4,19]],[11,1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,14],[[],1],[11,1],[11,1],[[],1],[11,1],[[1,13],1],[11,1],[1,1],[[11,13],2],[[],4],[[],8],[[],3],[[],4],0,[1,11],[1,11],[1,[[6,[11]]]],[1,11],[1,11],[1,[[6,[11]]]],[1,11],[1,11],[[1,1],[[6,[10]]]],[[2,2],[[6,[10]]]],[[3,3],[[6,[10]]]],[[4,4],[[6,[10]]]],[[],20],[[],21],[22],[22],[4,5],[4,5],[4,5],0,[11,1],[23,1],[[12,4],[[18,[24,9]]]],[[4,12],[[18,[5,9]]]],[[12,12],[[18,[4,9]]]],[[1,1],1],[[2,2],1],[[2,1],2],[[3,1],3],[[3,3],1],[[4,1],4],[[4,4],1],0,0,0,0,0,0,0,0,0,0,0,[[8,8],1],[4,4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,[[18,[17,7]]]],[[],24],[[],24],[[],24],[[],24],[[],24],[4,2],[4,4],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[]],[11,1],[[],1]],"c":[],"p":[[3,"Duration"],[3,"Timespec"],[3,"SteadyTime"],[3,"Tm"],[3,"TmFmt"],[4,"Option"],[3,"OutOfRangeError"],[3,"PreciseTime"],[4,"ParseError"],[4,"Ordering"],[15,"i64"],[15,"str"],[15,"i32"],[15,"bool"],[3,"Formatter"],[6,"Result"],[3,"Duration"],[4,"Result"],[8,"Hasher"],[15,"u64"],[15,"f64"],[3,"Demand"],[8,"FnOnce"],[3,"String"],[3,"TypeId"]]},\
"tiny_skia":{"doc":"<code>tiny-skia</code> is a tiny Skia subset ported to Rust.","t":"RRRRSRNNNENNDNDNNNDNNNNNNNNNNEEDNNDNEENDNNNNNNNNNDDDEDDNDDDDNDDDNDNDNNNNNNENNNNNNNENDDSSDSNNLLLLLLMLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLMMLLLLMLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLMLLML","n":["ALPHA_OPAQUE","ALPHA_TRANSPARENT","ALPHA_U8_OPAQUE","ALPHA_U8_TRANSPARENT","BLACK","BYTES_PER_PIXEL","Bevel","Bicubic","Bilinear","BlendMode","Butt","Clear","ClipMask","Close","Color","Color","ColorBurn","ColorDodge","ColorU8","CubicTo","Darken","Destination","DestinationAtop","DestinationIn","DestinationOut","DestinationOver","Difference","EvenOdd","Exclusion","FillRule","FilterQuality","GradientStop","HardLight","Hue","IntRect","Lighten","LineCap","LineJoin","LineTo","LinearGradient","LinearGradient","Luminosity","Miter","Modulate","MoveTo","Multiply","Nearest","Overlay","Pad","Paint","Path","PathBuilder","PathSegment","PathSegmentsIter","Pattern","Pattern","Pixmap","PixmapMut","PixmapPaint","PixmapRef","Plus","Point","PremultipliedColor","PremultipliedColorU8","QuadTo","RadialGradient","RadialGradient","Rect","Reflect","Repeat","Round","Round","Saturation","Screen","Shader","SoftLight","SolidColor","Source","SourceAtop","SourceIn","SourceOut","SourceOver","SpreadMode","Square","Stroke","StrokeDash","TRANSPARENT","TRANSPARENT","Transform","WHITE","Winding","Xor","add","add_assign","alpha","alpha","alpha","alpha","anti_alias","apply_opacity","apply_opacity","as_mut","as_ref","as_ref","blend_mode","blend_mode","blue","blue","blue","blue","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bottom","bottom","bounds","clear","clear","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_rect","clone_rect","close","cmp","contains","cross","cubic_to","curr_verb","dash","dash","data","data","data_mut","data_mut","decode_png","default","default","default","default","default","default","default","default","default","default","default","default","demultiply","demultiply","distance","dot","draw_pixmap","draw_pixmap","encode_png","encode_png","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","fill","fill","fill_path","fill_path","fill_rect","fill_rect","finish","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","force_hq_pipeline","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_circle","from_f32x2","from_ltrb","from_ltrb","from_oval","from_points","from_rect","from_rgba","from_rgba","from_rgba","from_rgba8","from_rotate","from_rotate_at","from_row","from_scale","from_skew","from_translate","from_xy","from_xywh","from_xywh","get","get","green","green","green","green","has_scale","has_skew","has_translate","height","height","height","height","height","identity","inset","inset","intersect","intersect","intersect_path","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","invert","is_empty","is_empty","is_empty","is_finite","is_finite","is_identity","is_opaque","is_opaque","is_opaque","is_opaque","is_scale","is_scale_translate","is_skew","is_solid_color","is_translate","is_valid_bit_pattern","is_zero","kx","ky","last_point","left","left","len","len","length","line_cap","line_join","line_to","load_png","make_outset","map_points","miter_limit","move_to","mul","mul_assign","neg","new","new","new","new","new","new","new","new","next","next_verb","normalize","opacity","outset","partial_cmp","pixel","pixel","pixels","pixels","pixels_mut","pixels_mut","points","post_concat","post_scale","post_translate","pre_concat","pre_scale","pre_translate","premultiply","premultiply","push_circle","push_oval","push_rect","quad_to","quality","red","red","red","red","right","right","round","round_out","save_png","save_png","scale","segments","set_alpha","set_auto_close","set_blue","set_color","set_color_rgba8","set_green","set_length","set_length_from","set_normalize","set_path","set_red","shader","size","stroke","stroke_path","stroke_path","sub","sub_assign","sx","sy","take","to_color_u8","to_color_u8","to_f32x2","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_rect","to_screen_int_rect","top","top","transform","transform","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tx","ty","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","verbs","width","width","width","width","width","width","with_capacity","x","x","x","y","y","y","zero"],"q":[[0,"tiny_skia"]],"d":["Represents fully opaque Alpha value.","Represents fully transparent Alpha value.","Represents fully opaque AlphaU8 value.","Represents fully transparent AlphaU8 value.","A black color.","Number of bytes per pixel.","Connects outside edges.","Bicubic. High quality, but slow.","Bilinear.","A blending mode.","No stroke extension.","Replaces destination with zero: fully transparent.","A clipping mask.","","An RGBA color value, holding four floating point …","Hue and saturation of source with luminosity of …","Darken destination to reflect source.","Brighten destination to reflect source.","A 32-bit RGBA color value.","","Darker of source and destination.","Preserves destination.","Destination inside source blended with source.","Destination trimmed by source.","Destination trimmed outside source.","Destination over source.","Subtract darker from lighter with higher contrast.","Specifies that “inside” is computed by an odd number …","Subtract darker from lighter with lower contrast.","A path filling rule.","Controls how much filtering to be done when transforming …","A gradient point.","Multiply or screen, depending on source.","Hue of source with saturation and luminosity of …","An integer rectangle.","Lighter of source and destination.","Draws at the beginning and end of an open path contour.","Specifies how corners are drawn when a shape is stroked.","","A linear gradient shader.","A linear gradient shader.","Luminosity of source with hue and saturation of …","Extends to miter limit.","Product of premultiplied colors; darkens destination.","","Multiply source with destination, darkening image.","Nearest-neighbor. Low quality, but fastest.","Multiply or screen, depending on destination.","Replicate the edge color if the shader draws outside of its","Controls how a shape should be painted.","A Bezier path.","A path builder.","A path segment.","A path segments iterator.","A pattern shader.","A pattern shader.","A container that owns premultiplied RGBA pixels.","A container that references mutable premultiplied RGBA …","Controls how a pixmap should be blended.","A container that references premultiplied RGBA pixels.","Sum of colors.","A point.","A premultiplied RGBA color value, holding four floating …","A 32-bit premultiplied RGBA color value.","","A radial gradient shader.","A radial gradient shader.","A rectangle defined by left, top, right and bottom edges.","Repeat the shader’s image horizontally and vertically, …","Repeat the shader’s image horizontally and vertically.","Adds circle.","Adds circle.","Saturation of source with hue and luminosity of …","Multiply inverse of pixels, inverting result; brightens …","A shader specifies the source color(s) for what is being …","Lighten or darken, depending on source.","A solid color shader.","Replaces destination.","Source inside destination blended with destination.","Source trimmed inside destination.","Source trimmed outside destination.","Source over destination.","A shader spreading mode.","Adds square.","Stroke properties.","A stroke dashing properties.","A transparent color.","A transparent color.","An affine transformation matrix.","A white color.","Specifies that “inside” is computed by a non-zero sum …","Each of source and destination trimmed outside the other.","","","Returns color’s alpha component.","Returns color’s alpha component.","Returns color’s alpha component.","Returns color’s alpha component.","Enables anti-aliased painting.","Shifts color’s opacity.","Shifts shader’s opacity.","Returns a container that references Pixmap’s data.","Returns a container that references Pixmap’s data.","Returns a container that references Pixmap’s data.","Paint blending mode.","Pixmap blending mode.","Returns color’s blue component.","Returns color’s blue component.","Returns color’s blue component.","Returns color’s blue component.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns rect’s bottom edge.","Returns the bottom edge.","Returns the bounds of the path’s points.","Clears the path and returns a <code>PathBuilder</code> that will reuse …","Reset the builder.","Clears the mask.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a copy of the pixmap that intersects the <code>rect</code>.","Returns a copy of the pixmap that intersects the <code>rect</code>.","Closes the current contour.","","Checks that the rect is completely includes <code>other</code> Rect.","Returns the cross product of vector and vec.","Adds a cubic curve from the last point to <code>x</code>, <code>y</code>.","Returns the current verb.","Converts the current path into a dashed one.","A stroke dashing properties.","Returns the internal data.","Returns the internal data.","Returns the mutable internal data.","Returns the mutable internal data.","Decodes a PNG data into a <code>Pixmap</code>.","","","","","","","","","","","","","Returns a demultiplied color.","Returns a demultiplied color.","Returns the Euclidean distance from origin.","Returns the dot product of two points.","Draws a <code>Pixmap</code> on top of the current <code>Pixmap</code>.","Draws a <code>Pixmap</code> on top of the current <code>Pixmap</code>.","Encodes pixmap into a PNG data.","Encodes pixmap into a PNG data.","","","","","","","","","","","","","","","","","","","","","","","","Fills the entire pixmap with a specified color.","Fills the entire pixmap with a specified color.","Draws a filled path onto the pixmap.","Draws a filled path onto the pixmap.","Draws a filled rectangle onto the pixmap.","Draws a filled rectangle onto the pixmap.","Finishes the builder and returns a <code>Path</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Forces the high quality/precision rendering pipeline.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates a new <code>PixmapRef</code> from bytes.","Creates a new <code>PixmapMut</code> from bytes.","Creates a new <code>Path</code> from a circle.","Creates a new <code>Point</code> from <code>f32x2</code>.","Creates a new <code>IntRect</code>.","Creates new <code>Rect</code>.","Creates a new <code>Path</code> from an oval.","Creates a Rect from Point array.","Creates a new <code>Path</code> from <code>Rect</code>.","Creates a new color.","Creates a new premultiplied color.","Creates a new color from 4 components.","Creates a new color from 4 components.","Creates a new rotating <code>Transform</code>.","Creates a new rotating <code>Transform</code> at the specified position.","Creates a new <code>Transform</code>.","Creates a new scaling <code>Transform</code>.","Creates a new skewing <code>Transform</code>.","Creates a new translating <code>Transform</code>.","Creates a new <code>Point</code>.","Creates a new <code>IntRect</code>.","Creates new <code>Rect</code>.","Returns the value as a primitive type.","Returns the value as a primitive type.","Returns color’s green component.","Returns color’s green component.","Returns color’s green component.","Returns color’s green component.","Checks that transform contains a scale part.","Checks that transform contains a skew part.","Checks that transform contains a translate part.","Returns rect’s height.","Returns rect’s height.","Returns pixmap’s height.","Returns pixmap’s height.","Returns pixmap’s height.","Creates an identity transform.","Insets the rectangle.","Insets the rectangle by the specified offset.","Returns an intersection of two rectangles.","Returns an intersection of two rectangles.","Intersects the provided path with the current clipping …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Returns an inverted transform.","Checks if path is empty.","Checks if the builder has any segments added.","Checks that mask is empty.","Checks that transform is finite.","Returns true if both x and y are measurable values.","Checks that transform is identity.","Check that color is opaque.","Check that color is opaque.","Check that color is opaque.","Checks if the shader is guaranteed to produce only opaque …","Checks that transform is scale-only.","Checks that transform contains only scale and translate.","Checks that transform is skew-only.","Checks that the paint source is a solid color.","Checks that transform is translate-only.","","Returns true if x and y are both zero.","","","Returns the last point if any.","Returns rect’s left edge.","Returns the left edge.","Returns the number of segments in the path.","Returns the current number of segments in the builder.","Returns the Euclidean distance from origin.","A stroke line cap.","A stroke line join.","Adds a line from the last point.","Loads a PNG file into a <code>Pixmap</code>.","Outsets the rectangle.","Transforms a slice of points using the current transform.","The limit at which a sharp corner is drawn beveled.","Adds beginning of a contour.","","","","Creates a new builder.","Creates a new stroke dashing object.","Creates a new, empty mask.","Allocates a new pixmap.","Creates a new gradient point.","Creates a new linear gradient shader.","Creates a new radial gradient shader.","Creates a new pattern shader.","","Returns the next verb.","Scales (fX, fY) so that length() returns one, while …","Pixmap opacity.","Outsets the rectangle by the specified offset.","","Returns a pixel color.","Returns a pixel color.","Returns a slice of pixels.","Returns a slice of pixels.","Returns a mutable slice of pixels.","Returns a mutable slice of pixels.","Returns an internal vector of points.","Post-concats the current transform.","Post-scales the current transform.","Post-translates the current transform.","Pre-concats the current transform.","Pre-scales the current transform.","Pre-translates the current transform.","Converts into a premultiplied color.","Converts into a premultiplied color.","Adds a circle contour.","Adds an oval contour bounded by the provided rectangle.","Adds a rectangle contour.","Adds a quad curve from the last point to <code>x</code>, <code>y</code>.","Specifies how much filtering to be done when transforming …","Returns color’s red component.","Returns color’s red component.","Returns color’s red component.","Returns color’s red component.","Returns rect’s right edge.","Returns the right edge.","Converts into an <code>IntRect</code> by adding 0.5 and discarding the …","Converts into an <code>IntRect</code> rounding outwards.","Saves pixmap as a PNG file.","Saves pixmap as a PNG file.","Scales Point in-place by scale.","Returns an iterator over path’s segments.","Sets the alpha component value.","Sets the auto closing mode. Off by default.","Sets the blue component value.","Sets a paint source to a solid color.","Sets a paint source to a solid color.","Sets the green component value.","Scales vector so that distanceToOrigin() returns length, …","Sets vector to (x, y) scaled to length, if possible.","Sets vector to (x, y) scaled so length() returns one, and …","Sets the current clipping path.","Sets the red component value.","A paint shader.","Returns rect’s size.","Returns a stoked path.","Strokes a path.","Strokes a path.","","","","","Consumes the internal data.","Converts into <code>ColorU8</code>.","Converts into <code>PremultipliedColorU8</code>.","Converts a <code>Point</code> into a <code>f32x2</code>.","","","","","","","","","","","","","","","","","","","","Creates a new <code>Pixmap</code> from the current data.","","Creates a new <code>Pixmap</code> from the current data.","","","","","","","","","","","Converts into <code>Rect</code>.","Converts into <code>ScreenIntRect</code>.","Returns rect’s top edge.","Returns the top edge.","Returns a transformed in-place path.","Transforms the shader.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns an internal vector of verbs.","Returns rect’s width.","Returns rect’s width.","Returns pixmap’s width.","Returns pixmap’s width.","Returns pixmap’s width.","A stroke thickness.","Creates a new builder with a specified capacity.","Returns rect’s X position.","Returns rect’s X position.","","Returns rect’s Y position.","Returns rect’s Y position.","","Creates a point at 0x0 position."],"i":[0,0,0,0,5,0,22,31,31,0,21,25,0,18,0,25,25,25,0,18,25,25,25,25,25,25,25,26,25,0,0,0,25,25,0,25,0,0,18,0,8,25,22,25,18,25,31,25,34,0,0,0,0,0,0,8,0,0,0,0,25,0,0,0,18,0,8,0,34,34,21,22,25,25,0,25,8,25,25,25,25,25,0,21,0,0,4,5,0,5,26,25,1,1,2,4,5,7,27,5,8,9,9,10,27,32,2,4,5,7,15,18,19,16,12,14,20,21,22,23,24,1,25,17,2,4,5,7,9,11,10,26,27,28,29,30,31,32,33,34,8,15,18,19,16,12,14,20,21,22,23,24,1,25,17,2,4,5,7,9,11,10,26,27,28,29,30,31,32,33,34,8,12,14,15,15,16,17,15,18,19,16,12,14,20,21,22,23,24,1,25,17,2,4,5,7,9,11,26,27,28,29,30,31,32,33,34,8,15,18,19,16,12,14,20,21,22,23,24,1,25,17,2,4,5,7,9,11,26,27,28,29,30,31,32,33,34,8,9,11,16,25,12,1,16,19,15,20,9,11,9,10,9,16,20,21,22,24,1,25,17,26,27,32,34,4,7,1,1,9,10,9,11,15,18,12,14,20,21,22,23,24,1,25,2,4,5,7,9,11,10,26,28,31,34,25,9,10,9,10,9,10,16,15,18,16,12,14,20,21,22,23,24,1,25,17,2,4,5,7,9,11,10,26,27,28,29,30,31,32,33,34,8,27,15,18,19,16,12,14,20,21,22,23,24,1,1,25,17,2,4,5,7,9,11,10,26,27,28,29,30,31,32,33,34,8,11,10,16,1,12,14,16,14,16,2,4,5,5,24,24,24,24,24,24,1,12,14,2,4,2,4,5,7,24,24,24,12,14,9,11,10,24,12,14,12,14,17,15,18,19,16,12,14,20,21,22,23,24,1,25,17,2,4,5,7,9,11,10,26,27,28,29,30,31,32,33,34,8,19,24,15,16,17,24,1,24,2,4,5,8,24,24,24,27,24,4,1,24,24,16,12,14,15,16,1,20,20,16,9,12,24,20,16,1,1,1,16,23,17,9,28,29,30,33,19,19,1,32,14,25,9,11,9,11,9,10,15,24,24,24,24,24,24,2,5,16,16,16,16,32,2,4,5,7,12,14,14,14,9,11,1,15,5,19,5,27,27,5,1,1,1,17,5,27,12,15,9,10,1,1,24,24,9,5,7,1,15,18,19,16,12,14,20,21,22,23,24,1,25,17,2,4,5,7,9,11,11,10,26,27,28,29,30,31,32,33,34,8,12,12,12,14,15,8,15,18,19,16,12,14,20,21,22,23,24,1,25,17,2,4,5,7,9,11,10,26,27,28,29,30,31,32,33,34,8,15,18,19,16,12,14,20,21,22,23,24,1,25,17,2,4,5,7,9,11,10,26,27,28,29,30,31,32,33,34,8,24,24,15,18,19,16,12,14,20,21,22,23,24,1,25,17,2,4,5,7,9,11,10,26,27,28,29,30,31,32,33,34,8,15,12,14,9,11,10,20,16,12,14,1,12,14,1,1],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,1]],[[1,1]],[2,3],[4,3],[5,6],[7,6],0,[[5,6]],[[8,6]],[9,10],[9,11],[10,11],0,0,[2,3],[4,3],[5,6],[7,6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[12,13],[14,6],[15,14],[15,16],[16],[17],[15,15],[18,18],[19,19],[16,16],[12,12],[14,14],[20,20],[21,21],[22,22],[23,23],[24,24],[1,1],[25,25],[17,17],[2,2],[4,4],[5,5],[7,7],[9,9],[11,11],[26,26],[27,27],[28,28],[29,29],[30,30],[31,31],[32,32],[33,33],[34,34],[8,8],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[9,12],[[35,[9]]]],[[11,12],[[35,[9]]]],[16],[[25,25],36],[[12,12],37],[[1,1],6],[[16,6,6,6,6,6,6]],[19,38],[[15,23,6],[[35,[15]]]],0,[9,[[39,[3]]]],[11,[[39,[3]]]],[9,[[39,[3]]]],[10,[[39,[3]]]],[[[39,[3]]],[[41,[9,40]]]],[[],16],[[],20],[[],21],[[],22],[[],24],[[],1],[[],25],[[],17],[[],26],[[],27],[[],32],[[],34],[4,2],[7,5],[[1,1],6],[[1,1],6],[[9,13,13,11,32,24,[35,[17]]],35],[[10,13,13,11,32,24,[35,[17]]],35],[9,[[41,[[42,[3]],43]]]],[11,[[41,[[42,[3]],43]]]],[[15,15],37],[[18,18],37],[[12,12],37],[[14,14],37],[[20,20],37],[[21,21],37],[[22,22],37],[[23,23],37],[[24,24],37],[[1,1],37],[[25,25],37],[[2,2],37],[[4,4],37],[[5,5],37],[[7,7],37],[[9,9],37],[[11,11],37],[[10,10],37],[[26,26],37],[[28,28],37],[[31,31],37],[[34,34],37],[[],37],[[9,5]],[[10,5]],[[9,15,27,26,24,[35,[17]]],35],[[10,15,27,26,24,[35,[17]]],35],[[9,14,27,24,[35,[17]]],35],[[10,14,27,24,[35,[17]]],35],[16,[[35,[15]]]],[[15,44],[[41,[45]]]],[[18,44],[[41,[45]]]],[[16,44],[[41,[45]]]],[[12,44],[[41,[45]]]],[[14,44],[[41,[45]]]],[[20,44],[[41,[45]]]],[[21,44],[[41,[45]]]],[[22,44],[[41,[45]]]],[[23,44],[[41,[45]]]],[[24,44],[[41,[45]]]],[[1,44],[[41,[45]]]],[[25,44],46],[[17,44],46],[[2,44],46],[[4,44],46],[[5,44],46],[[7,44],46],[[9,44],46],[[11,44],46],[[10,44],46],[[26,44],46],[[27,44],46],[[28,44],46],[[29,44],46],[[30,44],46],[[31,44],46],[[32,44],46],[[33,44],46],[[34,44],46],[[8,44],46],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[39,[3]],47,47],[[35,[11]]]],[[[39,[3]],47,47],[[35,[10]]]],[[6,6,6],[[35,[15]]]],[48,1],[[13,13,13,13],[[35,[12]]]],[[6,6,6,6],[[35,[14]]]],[14,[[35,[15]]]],[[[39,[1]]],[[35,[14]]]],[14,15],[[3,3,3,3],2],[[3,3,3,3],[[35,[4]]]],[[6,6,6,6],[[35,[5]]]],[[3,3,3,3],5],[6,24],[[6,6,6],24],[[6,6,6,6,6,6],24],[[6,6],24],[[6,6],24],[[6,6],24],[[6,6],1],[[13,13,47,47],[[35,[12]]]],[[6,6,6,6],[[35,[14]]]],[2,47],[4,47],[2,3],[4,3],[5,6],[7,6],[24,37],[24,37],[24,37],[12,47],[14,6],[9,47],[11,47],[10,47],[[],24],[[12,13,13],[[35,[12]]]],[[14,6,6],[[35,[14]]]],[[12,12],[[35,[12]]]],[[14,14],[[35,[14]]]],[[17,15,26,37],35],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[24,[[35,[24]]]],[15,37],[16,37],[17,37],[24,37],[1,37],[24,37],[2,37],[4,37],[5,37],[8,37],[24,37],[24,37],[24,37],[27,37],[24,37],[[],37],[1,37],0,0,[16,[[35,[1]]]],[12,13],[14,6],[15,49],[16,49],[1,6],0,0,[[16,6,6]],[[[51,[50]]],[[41,[9,40]]]],[[12,13,13],[[35,[12]]]],[[24,[39,[1]]]],0,[[16,6,6]],[[1,1]],[[1,1]],[1],[[],16],[[[42,[6,52]],6],[[35,[23]]]],[[],17],[[47,47],[[35,[9]]]],[[6,5],28],[[1,1,[42,[28]],34,24],[[35,[8]]]],[[1,1,6,[42,[28]],34,24],[[35,[8]]]],[[11,34,31,6,24],8],[19,35],[19,[[35,[38]]]],[1,37],0,[[14,6,6],[[35,[14]]]],[[25,25],[[35,[36]]]],[[9,47,47],[[35,[4]]]],[[11,47,47],[[35,[4]]]],[9,[[39,[4]]]],[11,[[39,[4]]]],[9,[[39,[4]]]],[10,[[39,[4]]]],[15,[[39,[1]]]],[[24,24],24],[[24,6,6],24],[[24,6,6],24],[[24,24],24],[[24,6,6],24],[[24,6,6],24],[2,4],[5,7],[[16,6,6,6]],[[16,14]],[[16,6,6,6,6]],[[16,6,6,6,6]],0,[2,3],[4,3],[5,6],[7,6],[12,13],[14,6],[14,[[35,[12]]]],[14,[[35,[12]]]],[[9,[51,[50]]],[[41,[43]]]],[[11,[51,[50]]],[[41,[43]]]],[[1,6]],[15,19],[[5,6]],[[19,37]],[[5,6]],[[27,5]],[[27,3,3,3,3]],[[5,6]],[[1,6],37],[[1,6,6,6],37],[[1,6,6],37],[[17,47,47,15,26,37],35],[[5,6]],0,[12,53],[[15,20,6],[[35,[15]]]],[[9,15,27,20,24,[35,[17]]],35],[[10,15,27,20,24,[35,[17]]],35],[[1,1]],[[1,1]],0,0,[9,[[42,[3]]]],[5,2],[7,4],[1,48],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[11,9],[[]],[10,9],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[12,14],[12,[[35,[54]]]],[12,13],[14,6],[[15,24],[[35,[15]]]],[[8,24]],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],0,0,[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],[15,[[39,[38]]]],[12,47],[14,6],[9,47],[11,47],[10,47],0,[[49,49],16],[12,13],[14,6],0,[12,13],[14,6],0,[[],1]],"c":[],"p":[[3,"Point"],[3,"ColorU8"],[15,"u8"],[3,"PremultipliedColorU8"],[3,"Color"],[15,"f32"],[3,"PremultipliedColor"],[4,"Shader"],[3,"Pixmap"],[3,"PixmapMut"],[3,"PixmapRef"],[3,"IntRect"],[15,"i32"],[3,"Rect"],[3,"Path"],[3,"PathBuilder"],[3,"ClipMask"],[4,"PathSegment"],[3,"PathSegmentsIter"],[3,"Stroke"],[4,"LineCap"],[4,"LineJoin"],[3,"StrokeDash"],[3,"Transform"],[4,"BlendMode"],[4,"FillRule"],[3,"Paint"],[3,"GradientStop"],[3,"LinearGradient"],[3,"RadialGradient"],[4,"FilterQuality"],[3,"PixmapPaint"],[3,"Pattern"],[4,"SpreadMode"],[4,"Option"],[4,"Ordering"],[15,"bool"],[4,"PathVerb"],[15,"slice"],[4,"DecodingError"],[4,"Result"],[3,"Vec"],[4,"EncodingError"],[3,"Formatter"],[3,"Error"],[6,"Result"],[15,"u32"],[3,"f32x2"],[15,"usize"],[3,"Path"],[8,"AsRef"],[3,"Global"],[3,"IntSize"],[3,"ScreenIntRect"],[3,"TypeId"]]},\
"tiny_skia_path":{"doc":"A tiny-skia Bezier path implementation.","t":"SNNNNNNSSDSDDNEENNNNDDDSDDEDDEDNNDNNRRRIIIDNDDDSLLLLKKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLKKKLLLLLMMLLLLLLLMMLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLKKKKLLLLLLLLLKLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLMLLLLMLDDMMMMLLLLMMFFLLLLMLLLLFFLLLLLLLLFLLLLLLLLF","n":["ANY","Bevel","Butt","Close","Close","Cubic","CubicTo","FINITE_ONE","FINITE_ZERO","FiniteF32","HALF","IntRect","IntSize","Line","LineCap","LineJoin","LineTo","Miter","Move","MoveTo","NonZeroPositiveF32","NormalizedF32","NormalizedF32Exclusive","ONE","Path","PathBuilder","PathSegment","PathSegmentsIter","PathStroker","PathVerb","Point","Quad","QuadTo","Rect","Round","Round","SCALAR_MAX","SCALAR_NEARLY_ZERO","SCALAR_ROOT_2_OVER_2","SaturateCast","SaturateRound","Scalar","ScreenIntRect","Square","Stroke","StrokeDash","Transform","ZERO","abs","add","add","add_assign","almost_dequal_ulps","ave","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bottom","bottom","bottom","bound","bounds","clear","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","close","cmp","cmp","cmp","cmp","cmp","compute_resolution_scale","contains","contains","cross","cubic_to","curr_verb","dash","dash","default","default","default","default","default","default","default","default","default","default","default","distance","div","dot","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","f32x2","finish","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_circle","from_f32x2","from_ltrb","from_ltrb","from_oval","from_points","from_rect","from_rotate","from_rotate_at","from_row","from_scale","from_skew","from_translate","from_u8","from_wh","from_xy","from_xywh","from_xywh","from_xywh","from_xywh_safe","get","get","get","get","get_finite","half","has_scale","has_skew","has_translate","height","height","height","height","identity","inset","inset","intersect","intersect","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","invert","invert","is_empty","is_empty","is_finite","is_finite","is_identity","is_nearly_equal","is_nearly_zero","is_nearly_zero_within_tolerance","is_scale","is_scale_translate","is_skew","is_translate","is_zero","kx","ky","last_point","left","left","left","len","len","length","line_cap","line_join","line_to","make_outset","map_points","max","max_component","min","miter_limit","move_to","mul","mul","mul_assign","neg","new","new","new","new","new","new","new","new","new_bounded","new_bounded","next","next_verb","normalize","outset","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","path_geometry","points","post_concat","post_scale","post_translate","pre_concat","pre_scale","pre_translate","push_circle","push_oval","push_rect","quad_to","right","right","right","round","round_out","saturate_ceil","saturate_floor","saturate_from","saturate_round","scale","segments","set_auto_close","set_length","set_length_from","set_normalize","size","size","splat","sqr","stroke","stroke","sub","sub","sub_assign","sx","sy","to_f32x2","to_int_rect","to_int_rect","to_normalized","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_rect","to_rect","to_screen_int_rect","to_screen_int_rect","to_string","to_string","to_string","top","top","top","transform","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tx","ty","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","verbs","width","width","width","width","width","width_safe","with_capacity","x","x","x","x","x","y","y","y","y","y","zero","CubicCoeff","QuadCoeff","a","a","b","b","borrow","borrow","borrow_mut","borrow_mut","c","c","chop_cubic_at2","chop_quad_at","clone","clone","clone_into","clone_into","d","default","default","eval","eval","find_cubic_max_curvature","find_unit_quad_roots","fmt","fmt","from","from","from_points","from_points","into","into","new_t_values","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","valid_unit_divide"],"q":[[0,"tiny_skia_path"],[517,"tiny_skia_path::path_geometry"]],"d":["Just a random, valid number.","Connects outside edges.","No stroke extension.","","","","","A predefined 1 value.","A predefined 0 value.","A float that is known to be finite.","A predefined 0.5 value.","An integer rectangle.","An integer size.","","Draws at the beginning and end of an open path contour.","Specifies how corners are drawn when a shape is stroked.","","Extends to miter limit.","","","A float that is known to be &gt; 0.","An immutable <code>f32</code> in a 0..=1 range.","An immutable <code>f32</code> that is larger than 0 but less then 1.","A NormalizedF32 value initialized with one.","A Bezier path.","A path builder.","A path segment.","A path segments iterator.","A path stroker.","A path verb.","A point.","","","A rectangle defined by left, top, right and bottom edges.","Adds circle.","Adds circle.","","","","Custom float to integer conversion routines.","Custom float to integer rounding routines.","Float number extension methods.","A screen <code>IntRect</code>.","Adds square.","Stroke properties.","A stroke dashing properties.","An affine transformation matrix.","A NormalizedF32 value initialized with zero.","Returns an absolute value.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns rect’s bottom edge.","Returns rect’s bottom edge.","Returns the bottom edge.","","Returns the bounds of the path’s points.","Clears the path and returns a <code>PathBuilder</code> that will reuse …","Reset the builder.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Closes the current contour.","","","","","","Computes a resolution scale.","Checks that the rect is completely includes <code>other</code> Rect.","Checks that the rect is completely includes <code>other</code> Rect.","Returns the cross product of vector and vec.","Adds a cubic curve from the last point to <code>x</code>, <code>y</code>.","Returns the current verb.","Converts the current path into a dashed one.","A stroke dashing properties.","","","","","","","","","","","","Returns the Euclidean distance from origin.","","Returns the dot product of two points.","","","","","","","","","","","","","","","","","","","","","","","","A pair of f32 numbers.","Finishes the builder and returns a <code>Path</code>.","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Creates a new <code>Path</code> from a circle.","Creates a new <code>Point</code> from <code>f32x2</code>.","Creates a new <code>IntRect</code>.","Creates new <code>Rect</code>.","Creates a new <code>Path</code> from an oval.","Creates a Rect from Point array.","Creates a new <code>Path</code> from <code>Rect</code>.","Creates a new rotating <code>Transform</code>.","Creates a new rotating <code>Transform</code> at the specified position.","Creates a new <code>Transform</code>.","Creates a new scaling <code>Transform</code>.","Creates a new skewing <code>Transform</code>.","Creates a new translating <code>Transform</code>.","Creates a <code>NormalizedF32</code> from <code>u8</code>.","Creates a new <code>IntSize</code> from width and height.","Creates a new <code>Point</code>.","Creates a new <code>IntRect</code>.","Creates a new <code>ScreenIntRect</code>.","Creates new <code>Rect</code>.","Creates a new <code>ScreenIntRect</code>.","Returns the value as a primitive type.","Returns the value as a primitive type.","Returns the value as a primitive type.","Returns the value as a primitive type.","Returns the value as a <code>FiniteF32</code>.","","Checks that transform contains a scale part.","Checks that transform contains a skew part.","Checks that transform contains a translate part.","Returns rect’s height.","Returns rect’s height.","Returns rect’s height.","Returns height.","Creates an identity transform.","Insets the rectangle.","Insets the rectangle by the specified offset.","Returns an intersection of two rectangles.","Returns an intersection of two rectangles.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Returns an inverted transform.","Checks if path is empty.","Checks if the builder has any segments added.","Checks that transform is finite.","Returns true if both x and y are measurable values.","Checks that transform is identity.","","","","Checks that transform is scale-only.","Checks that transform contains only scale and translate.","Checks that transform is skew-only.","Checks that transform is translate-only.","Returns true if x and y are both zero.","","","Returns the last point if any.","Returns rect’s left edge.","Returns rect’s left edge.","Returns the left edge.","Returns the number of segments in the path.","Returns the current number of segments in the builder.","Returns the Euclidean distance from origin.","A stroke line cap.","A stroke line join.","Adds a line from the last point.","Outsets the rectangle.","Transforms a slice of points using the current transform.","Returns a maximum value.","Returns a maximum of both values.","Returns a minimum value.","The limit at which a sharp corner is drawn beveled.","Adds beginning of a contour.","","","","","Creates a new pair.","Creates a finite f32 number.","Creates a <code>NormalizedF32</code> if the given value is in a 0..=1 …","Creates a <code>NormalizedF32Exclusive</code>.","Creates a new <code>NonZeroPositiveF32</code> if the given value is …","Creates a new builder.","Creates a new PathStroker.","Creates a new stroke dashing object.","Creates a <code>NormalizedValue</code> clamping the given value to a …","Creates a <code>NormalizedF32Exclusive</code> clamping the given value.","","Returns the next verb.","Scales (fX, fY) so that length() returns one, while …","Outsets the rectangle by the specified offset.","","","","","","A collection of functions to work with Bezier paths.","Returns an internal vector of points.","Post-concats the current transform.","Post-scales the current transform.","Post-translates the current transform.","Pre-concats the current transform.","Pre-scales the current transform.","Pre-translates the current transform.","Adds a circle contour.","Adds an oval contour bounded by the provided rectangle.","Adds a rectangle contour.","Adds a quad curve from the last point to <code>x</code>, <code>y</code>.","Returns rect’s right edge.","Returns rect’s right edge.","Returns the right edge.","Converts into an <code>IntRect</code> by adding 0.5 and discarding the …","Converts into an <code>IntRect</code> rounding outwards.","","","Return the closest integer for the given float.","","Scales Point in-place by scale.","Returns an iterator over path’s segments.","Sets the auto closing mode. Off by default.","Scales vector so that distanceToOrigin() returns length, …","Sets vector to (x, y) scaled to length, if possible.","Sets vector to (x, y) scaled so length() returns one, and …","Returns rect’s size.","Returns rect’s size.","Creates a new pair from a single value.","","Returns a stoked path.","Stokes the path.","","","","","","Converts a <code>Point</code> into a <code>f32x2</code>.","Converts into a <code>IntRect</code>.","Converts the current size into a <code>IntRect</code> at a provided …","Returns the value as a <code>FiniteF32</code>.","","","","","","","","","","","","","","","","","","","","","","Converts into <code>Rect</code>.","Converts into a <code>Rect</code>.","Converts into <code>ScreenIntRect</code>.","Converts the current size into a <code>IntRect</code> at a provided …","","","","Returns rect’s top edge.","Returns rect’s top edge.","Returns the top edge.","Returns a transformed in-place path.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns an internal vector of verbs.","Returns rect’s width.","Returns rect’s width.","Returns rect’s width.","Returns width.","A stroke thickness.","Returns rect’s width.","Creates a new builder with a specified capacity.","Returns the first value.","Returns rect’s X position.","Returns rect’s X position.","Returns rect’s X position.","","Returns the second value.","Returns rect’s Y position.","Returns rect’s Y position.","Returns rect’s Y position.","","Creates a point at 0x0 position.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","",""],"i":[14,21,20,16,17,16,17,12,12,0,14,0,0,16,0,0,17,21,16,17,0,0,0,13,0,0,0,0,0,0,0,16,17,0,20,21,0,0,0,0,0,0,0,20,0,0,0,13,1,1,2,2,41,41,1,12,13,14,15,16,10,17,18,11,4,6,8,19,20,21,22,23,24,2,25,1,12,13,14,15,16,10,17,18,11,4,6,8,19,20,21,22,23,24,2,25,4,6,8,41,10,10,11,1,12,13,14,15,16,10,17,18,11,4,6,8,19,20,21,22,23,24,2,25,1,12,13,14,15,16,10,17,18,11,4,6,8,19,20,21,22,23,24,2,25,11,12,13,14,15,16,22,4,6,2,11,18,10,19,1,12,13,14,11,19,20,21,22,24,2,2,1,2,1,12,13,14,15,16,10,17,4,6,8,19,20,21,23,24,2,25,12,13,14,15,16,0,11,1,12,12,13,13,14,15,15,16,10,17,11,4,6,8,19,20,21,23,24,2,25,1,12,13,14,15,16,10,17,18,11,4,6,8,19,20,21,22,23,24,2,2,25,11,2,4,8,11,8,11,24,24,24,24,24,24,13,25,2,4,6,8,6,12,13,14,15,13,41,24,24,24,4,6,8,25,24,4,8,4,8,1,12,13,14,15,16,10,17,18,11,4,6,8,19,20,21,22,23,24,2,25,18,41,24,10,11,24,2,24,41,41,41,24,24,24,24,2,24,24,11,4,6,8,10,11,2,19,19,11,4,24,1,1,1,19,11,1,2,2,2,1,12,13,14,15,11,22,23,13,14,18,18,2,8,12,13,14,15,16,0,10,24,24,24,24,24,24,11,11,11,11,4,6,8,8,8,42,42,43,42,2,10,18,2,2,2,4,6,1,41,10,22,1,2,2,24,24,2,6,25,14,1,12,13,14,15,16,10,17,18,11,4,6,8,19,20,21,22,23,24,2,25,4,6,4,25,12,13,15,4,6,8,10,1,12,13,14,15,16,10,17,18,11,4,6,8,19,20,21,22,23,24,2,25,1,12,13,14,15,16,10,17,18,11,4,6,8,19,20,21,22,23,24,2,25,24,24,1,12,13,14,15,16,10,17,18,11,4,6,8,19,20,21,22,23,24,2,25,10,4,6,8,25,19,6,11,1,4,6,8,2,1,4,6,8,2,2,0,0,39,40,39,40,39,40,39,40,39,40,0,0,39,40,39,40,40,39,40,39,40,0,0,39,40,39,40,39,40,39,40,0,39,40,39,40,39,40,39,40,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,1],[[1,1],1],[[2,2]],[[2,2]],[[],3],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[4,5],[6,7],[8,9],[[]],[10,8],[10,11],[11],[1,1],[12,12],[13,13],[14,14],[15,15],[16,16],[10,10],[17,17],[18,18],[11,11],[4,4],[6,6],[8,8],[19,19],[20,20],[21,21],[22,22],[23,23],[24,24],[2,2],[25,25],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[11],[[12,12],26],[[13,13],26],[[14,14],26],[[15,15],26],[[16,16],26],[24,9],[[4,4],3],[[6,6],3],[[2,2],9],[[11,9,9,9,9,9,9]],[18,16],[[10,23,9],[[27,[10]]]],0,[[],1],[[],12],[[],13],[[],14],[[],11],[[],19],[[],20],[[],21],[[],22],[[],24],[[],2],[[2,2],9],[[1,1],1],[[2,2],9],[[1,1],3],[[12,12],3],[[13,13],3],[[14,14],3],[[15,15],3],[[16,16],3],[[10,10],3],[[17,17],3],[[4,4],3],[[6,6],3],[[8,8],3],[[19,19],3],[[20,20],3],[[21,21],3],[[23,23],3],[[24,24],3],[[2,2],3],[[25,25],3],[[],3],[[],3],[[],3],[[],3],[[],3],0,[11,[[27,[10]]]],[[1,28],29],[[12,28],29],[[12,28],29],[[13,28],29],[[13,28],29],[[14,28],29],[[15,28],29],[[15,28],29],[[16,28],29],[[10,28],29],[[17,28],29],[[11,28],29],[[4,28],29],[[6,28],29],[[8,28],29],[[19,28],29],[[20,28],29],[[21,28],29],[[23,28],29],[[24,28],29],[[2,28],29],[[25,28],29],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],2],[[]],[[]],[[9,9,9],[[27,[10]]]],[1,2],[[5,5,5,5],[[27,[4]]]],[[9,9,9,9],[[27,[8]]]],[8,[[27,[10]]]],[[[30,[2]]],[[27,[8]]]],[8,10],[9,24],[[9,9,9],24],[[9,9,9,9,9,9],24],[[9,9],24],[[9,9],24],[[9,9],24],[31,13],[[7,7],[[27,[25]]]],[[9,9],2],[[5,5,7,7],[[27,[4]]]],[[7,7,7,7],[[27,[6]]]],[[9,9,9,9],[[27,[8]]]],[[7,7,32,32],6],[12,9],[13,9],[14,9],[15,9],[13,12],[[]],[24,3],[24,3],[24,3],[4,7],[6,7],[8,9],[25,7],[[],24],[[4,5,5],[[27,[4]]]],[[8,9,9],[[27,[8]]]],[[4,4],[[27,[4]]]],[[8,8],[[27,[8]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[24,[[27,[24]]]],[10,3],[11,3],[24,3],[2,3],[24,3],[[],3],[[],3],[[],3],[24,3],[24,3],[24,3],[24,3],[2,3],0,0,[11,[[27,[2]]]],[4,5],[6,7],[8,9],[10,33],[11,33],[2,9],0,0,[[11,9,9]],[[4,5,5],[[27,[4]]]],[[24,[30,[2]]]],[[1,1],1],[1,9],[[1,1],1],0,[[11,9,9]],[[1,1],1],[[2,2]],[[2,2]],[2],[[9,9],1],[9,[[27,[12]]]],[9,[[27,[13]]]],[9,[[27,[14]]]],[9,[[27,[15]]]],[[],11],[[],22],[[[34,[9]],9],[[27,[23]]]],[9,13],[9,14],[18,27],[18,[[27,[16]]]],[2,3],[[8,9,9],[[27,[8]]]],[[12,12],[[27,[26]]]],[[13,13],[[27,[26]]]],[[14,14],[[27,[26]]]],[[15,15],[[27,[26]]]],[[16,16],[[27,[26]]]],0,[10,[[30,[2]]]],[[24,24],24],[[24,9,9],24],[[24,9,9],24],[[24,24],24],[[24,9,9],24],[[24,9,9],24],[[11,9,9,9]],[[11,8]],[[11,9,9,9,9]],[[11,9,9,9,9]],[4,5],[6,7],[8,9],[8,[[27,[4]]]],[8,[[27,[4]]]],[[]],[[]],[[]],[[]],[[2,9]],[10,18],[[18,3]],[[2,9],3],[[2,9,9,9],3],[[2,9,9],3],[4,25],[6,25],[9,1],[[]],[[10,19,9],[[27,[10]]]],[[22,10,19,9],[[27,[10]]]],[[1,1],1],[[2,2]],[[2,2]],0,0,[2,1],[6,4],[[25,5,5],4],[14,13],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[4,8],[6,8],[4,[[27,[6]]]],[[25,7,7],6],[[],35],[[],35],[[],35],[4,5],[6,7],[8,9],[[10,24],[[27,[10]]]],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],0,0,[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[10,[[30,[16]]]],[4,7],[6,7],[8,9],[25,7],0,[6,32],[[33,33],11],[1,9],[4,5],[6,7],[8,9],0,[1,9],[4,5],[6,7],[8,9],0,[[],2],0,0,0,0,0,0,[[]],[[]],[[]],[[]],0,0,[[[38,[2]],14,[30,[2]]]],[[[30,[2]],14,[38,[2]]]],[39,39],[40,40],[[]],[[]],0,[[],39],[[],40],[[39,1],1],[[40,1],1],[[[38,[2]],[38,[13]]],[[30,[13]]]],[[9,9,9,[38,[14]]],33],[[39,28],29],[[40,28],29],[[]],[[]],[[[38,[2]]],39],[[[38,[2]]],40],[[]],[[]],[[],[[38,[14]]]],[[]],[[]],[[],36],[[],36],[[],36],[[],36],[[],37],[[],37],[[9,9],[[27,[14]]]]],"c":[],"p":[[3,"f32x2"],[3,"Point"],[15,"bool"],[3,"IntRect"],[15,"i32"],[3,"ScreenIntRect"],[15,"u32"],[3,"Rect"],[15,"f32"],[3,"Path"],[3,"PathBuilder"],[3,"FiniteF32"],[3,"NormalizedF32"],[3,"NormalizedF32Exclusive"],[3,"NonZeroPositiveF32"],[4,"PathVerb"],[4,"PathSegment"],[3,"PathSegmentsIter"],[3,"Stroke"],[4,"LineCap"],[4,"LineJoin"],[3,"PathStroker"],[3,"StrokeDash"],[3,"Transform"],[3,"IntSize"],[4,"Ordering"],[4,"Option"],[3,"Formatter"],[6,"Result"],[15,"slice"],[15,"u8"],[3,"NonZeroU32"],[15,"usize"],[3,"Vec"],[3,"String"],[4,"Result"],[3,"TypeId"],[15,"array"],[3,"QuadCoeff"],[3,"CubicCoeff"],[8,"Scalar"],[8,"SaturateRound"],[8,"SaturateCast"]]},\
"toml_datetime":{"doc":"A TOML-compatible datetime type","t":"NDDDEDNLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLMMMMLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLMM","n":["Custom","Date","Datetime","DatetimeParseError","Offset","Time","Z","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","date","day","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_str","hour","into","into","into","into","into","minute","month","nanosecond","offset","partial_cmp","partial_cmp","partial_cmp","partial_cmp","provide","second","time","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","year","minutes"],"q":[[0,"toml_datetime"],[102,"toml_datetime::Offset"]],"d":["Offset between local time and UTC","A parsed TOML date value","A parsed TOML datetime value","Error returned from parsing a <code>Datetime</code> in the <code>FromStr</code> …","A parsed TOML time offset","A parsed TOML time value","A suffix which, when applied to a time, denotes a UTC …","","","","","","","","","","","","","","","","","","","","","","","","","Optional date. Required for: <em>Offset Date-Time</em>, <em>Local </em>…","Day: 1 to {28, 29, 30, 31} (based on month/year)","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Hour: 0 to 23","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Minute: 0 to 59","Month: 1 to 12","Nanosecond: 0 to 999_999_999","Optional offset. Required for: <em>Offset Date-Time</em>.","","","","","","Second: 0 to {58, 59, 60} (based on leap second rules)","Optional time. Required for: <em>Offset Date-Time</em>, <em>Local </em>…","","","","","","","","","","","","","","","","","","","","","","","","","","Year: four digits","Minutes: -1_440..1_440"],"i":[5,0,0,0,0,0,5,1,2,3,4,5,1,2,3,4,5,1,2,3,4,5,1,2,3,4,5,1,3,4,5,1,3,1,3,4,5,1,3,4,5,1,1,2,2,3,3,4,4,5,5,1,1,1,2,3,4,5,1,4,1,2,3,4,5,4,3,4,1,1,3,4,5,2,4,1,1,2,3,4,5,1,2,3,4,5,1,2,3,4,5,1,2,3,4,5,1,2,3,4,5,3,16],"f":[0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,1],[2,2],[3,3],[4,4],[5,5],[[]],[[]],[[]],[[]],[[]],[[1,1],6],[[3,3],6],[[4,4],6],[[5,5],6],0,0,[[1,1],7],[[3,3],7],[[4,4],7],[[5,5],7],[[],7],[[],7],[[],7],[[],7],[[1,8],9],[[1,8],9],[[2,8],9],[[2,8],9],[[3,8],9],[[3,8],9],[[4,8],9],[[4,8],9],[[5,8],9],[[5,8],9],[4,1],[3,1],[[]],[[]],[[]],[[]],[[]],[10,[[11,[1,2]]]],0,[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[1,1],[[12,[6]]]],[[3,3],[[12,[6]]]],[[4,4],[[12,[6]]]],[[5,5],[[12,[6]]]],[13],0,0,[[]],[[]],[[]],[[]],[[]],[[],14],[[],14],[[],14],[[],14],[[],14],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],15],[[],15],[[],15],[[],15],[[],15],0,0],"c":[],"p":[[3,"Datetime"],[3,"DatetimeParseError"],[3,"Date"],[3,"Time"],[4,"Offset"],[4,"Ordering"],[15,"bool"],[3,"Formatter"],[6,"Result"],[15,"str"],[4,"Result"],[4,"Option"],[3,"Demand"],[3,"String"],[3,"TypeId"],[13,"Custom"]]},\
"toml_edit":{"doc":"<code>toml_edit</code>","t":"DNGGGDNGGGNNDDNDDDENDEDDNGGGDNDGEGGDDNNNDEDDNDNIDDNNDENNFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLKLLLLKLLLLKLLLLLLLLLLKLLLLLLLLLLLLMLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLKLLLLLLLLLLLLKLLLLKLLLLLLLLLLLLLLMMMLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLMKLLLLLLLLLLLLKLLLLLLLLFMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLAALMMIFLFLLLFLLFLLFLLFLFLFLFLIFLFLLLFLLFLLFLLFLFLFLFL","n":["Array","Array","ArrayIntoIter","ArrayIter","ArrayIterMut","ArrayOfTables","ArrayOfTables","ArrayOfTablesIntoIter","ArrayOfTablesIter","ArrayOfTablesIterMut","Boolean","Custom","Date","Datetime","Datetime","DatetimeParseError","Decor","Document","Entry","Float","Formatted","InlineEntry","InlineOccupiedEntry","InlineTable","InlineTable","InlineTableIntoIter","InlineTableIter","InlineTableIterMut","InlineVacantEntry","Integer","InternalString","IntoIter","Item","Iter","IterMut","Key","KeyMut","None","Occupied","Occupied","OccupiedEntry","Offset","RawString","Repr","String","Table","Table","TableLike","Time","TomlError","Vacant","Vacant","VacantEntry","Value","Value","Z","array","as_array","as_array","as_array_mut","as_array_mut","as_array_of_tables","as_array_of_tables_mut","as_bool","as_bool","as_datetime","as_datetime","as_float","as_float","as_inline_table","as_inline_table","as_inline_table_mut","as_inline_table_mut","as_integer","as_integer","as_item","as_item_mut","as_mut","as_raw","as_ref","as_repr","as_repr","as_repr","as_str","as_str","as_str","as_str","as_table","as_table","as_table_like","as_table_like_mut","as_table_mut","as_table_mut","as_value","as_value_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clear","clear","clear","clear","clear","clear","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","cmp","compare","compare","compare","compare","compare","compare","compare","contains_array_of_tables","contains_key","contains_key","contains_key","contains_key","contains_key","contains_table","contains_value","date","day","decor","decor","decor","decor","decor","decor","decor","decor_mut","decor_mut","decor_mut","decor_mut","decor_mut","decor_mut","decor_mut","decorated","default","default","default","default","default","default","default","default","default","default_repr","default_repr","default_repr","deref","deref","deref","deref","deref_mut","description","display_repr","display_repr","display_repr","entry","entry","entry","entry","entry","entry_format","entry_format","entry_format","entry_format","entry_format","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extend","extend","extend","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_str","from_str","from_str","from_str","from_str","from_str","get","get","get","get","get","get","get","get","get","get","get","get","get_key_value","get_key_value","get_key_value","get_key_value","get_key_value","get_key_value_mut","get_key_value_mut","get_key_value_mut","get_key_value_mut","get_key_value_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_or_insert","get_values","get_values","get_values","get_values","get_values","hash","hash","hash","hash","hash","hash","hash","hash","hour","index","index","index","index","index_mut","index_mut","index_mut","index_mut","insert","insert","insert","insert","insert","insert","insert","insert","insert","insert","insert_formatted","insert_formatted","insert_formatted","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_array","into_array_of_tables","into_inline_table","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_mut","into_mut","into_table","into_table","into_value","into_value","is_array","is_array","is_array_of_tables","is_bool","is_bool","is_datetime","is_datetime","is_dotted","is_dotted","is_dotted","is_dotted","is_dotted","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_float","is_float","is_implicit","is_inline_table","is_inline_table","is_integer","is_integer","is_none","is_str","is_str","is_table","is_table_like","is_value","iter","iter","iter","iter","iter","iter","iter","iter","iter_mut","iter_mut","iter_mut","iter_mut","iter_mut","iter_mut","iter_mut","key","key","key","key","key","key","key_decor","key_decor","key_decor","key_decor","key_decor","key_decor_mut","key_decor_mut","key_decor_mut","key_decor_mut","key_decor_mut","key_mut","key_mut","len","len","len","len","len","len","make_value","message","minute","month","nanosecond","new","new","new","new","new","new","new","new","new","offset","or_insert","or_insert","or_insert","or_insert_with","or_insert_with","parse","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","position","preamble","prefix","provide","provide","push","push","push_formatted","remove","remove","remove","remove","remove","remove","remove","remove","remove","remove_entry","remove_entry","replace","replace_formatted","retain","retain","retain","retain","second","set_dotted","set_dotted","set_dotted","set_dotted","set_dotted","set_implicit","set_position","set_preamble","set_prefix","set_suffix","set_trailing","set_trailing","set_trailing_comma","sort_values","sort_values","sort_values","sort_values","sort_values","sort_values_by","sort_values_by","span","suffix","table","time","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","trailing","trailing","trailing_comma","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_name","type_name","value","value","visit","visit_mut","with_decor","year","minutes","Visit","visit_array","visit_array","visit_array_of_tables","visit_array_of_tables","visit_boolean","visit_datetime","visit_document","visit_document","visit_float","visit_inline_table","visit_inline_table","visit_integer","visit_item","visit_item","visit_string","visit_table","visit_table","visit_table_like","visit_table_like","visit_table_like_kv","visit_table_like_kv","visit_value","visit_value","VisitMut","visit_array_mut","visit_array_mut","visit_array_of_tables_mut","visit_array_of_tables_mut","visit_boolean_mut","visit_datetime_mut","visit_document_mut","visit_document_mut","visit_float_mut","visit_inline_table_mut","visit_inline_table_mut","visit_integer_mut","visit_item_mut","visit_item_mut","visit_string_mut","visit_table_like_kv_mut","visit_table_like_kv_mut","visit_table_like_mut","visit_table_like_mut","visit_table_mut","visit_table_mut","visit_value_mut","visit_value_mut"],"q":[[0,"toml_edit"],[822,"toml_edit::Offset"],[823,"toml_edit::visit"],[847,"toml_edit::visit_mut"]],"d":["Type representing a TOML array, payload of the <code>Value::Array</code>…","An inline array of values.","An owned iterator type over <code>Table</code>’s key/value pairs.","An iterator type over <code>Array</code>’s values.","An iterator type over <code>Array</code>’s values.","Type representing a TOML array of tables","Type representing array of tables.","An iterator type over <code>ArrayOfTables</code>’s values.","An iterator type over <code>ArrayOfTables</code>’s values.","An iterator type over <code>ArrayOfTables</code>’s values.","A boolean value.","Offset between local time and UTC","A parsed TOML date value","A parsed TOML datetime value","An RFC 3339 formatted date-time with offset.","Error returned from parsing a <code>Datetime</code> in the <code>FromStr</code> …","A prefix and suffix,","Type representing a TOML document","A view into a single location in a map, which may be …","A 64-bit float value.","A value together with its <code>to_string</code> representation, …","A view into a single location in a map, which may be …","A view into a single occupied location in a <code>IndexMap</code>.","Type representing a TOML inline table, payload of the …","An inline table of key/value pairs.","An owned iterator type over key/value pairs of an inline …","An iterator type over key/value pairs of an inline table.","A mutable iterator type over key/value pairs of an inline …","A view into a single empty location in a <code>IndexMap</code>.","A 64-bit integer value.","Opaque string storage internal to <code>toml_edit</code>","An owned iterator type over <code>Table</code>’s key/value pairs.","Type representing either a value, a table, an array of …","An iterator type over <code>Table</code>’s key/value pairs.","A mutable iterator type over <code>Table</code>’s key/value pairs.","Key as part of a Key/Value Pair or a table header.","A mutable reference to a <code>Key</code>","Type representing none.","An occupied Entry.","An occupied Entry.","A view into a single occupied location in a <code>IndexMap</code>.","A parsed TOML time offset","Opaque string storage for raw TOML; internal to <code>toml_edit</code>","TOML-encoded value","A string value.","Type representing a TOML non-inline table","Type representing table.","This trait represents either a <code>Table</code>, or an <code>InlineTable</code>.","A parsed TOML time value","Type representing a TOML parse error","A vacant Entry.","A vacant Entry.","A view into a single empty location in a <code>IndexMap</code>.","Representation of a TOML Value (as part of a Key/Value …","Type representing value.","A suffix which, when applied to a time, denotes a UTC …","Returns an empty array of tables.","Casts <code>self</code> to array.","Casts <code>self</code> to array.","Casts <code>self</code> to mutable array.","Casts <code>self</code> to mutable array.","Casts <code>self</code> to array of tables.","Casts <code>self</code> to mutable array of tables.","Casts <code>self</code> to boolean.","Casts <code>self</code> to boolean.","Casts <code>self</code> to date-time.","Casts <code>self</code> to date-time.","Casts <code>self</code> to float.","Casts <code>self</code> to float.","Casts <code>self</code> to inline table.","Casts <code>self</code> to inline table.","Casts <code>self</code> to mutable inline table.","Casts <code>self</code> to mutable inline table.","Casts <code>self</code> to integer.","Casts <code>self</code> to integer.","Returns a reference to the root item.","Returns a mutable reference to the root item.","Access a mutable proxy for the <code>Key</code>.","Access the underlying value","","Returns key raw representation, if available.","Returns the raw representation, if available.","Returns the raw representation, if available.","Access the underlying string","Casts <code>self</code> to str.","Access the underlying string","Casts <code>self</code> to str.","Returns a reference to the root table.","Casts <code>self</code> to table.","Casts <code>self</code> to either a table or an inline table.","Casts <code>self</code> to either a table or an inline table.","Returns a mutable reference to the root table.","Casts <code>self</code> to mutable table.","Casts <code>self</code> to value.","Casts <code>self</code> to mutable value.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Clears the table, removing all key-value pairs. Keeps the …","Clears the array, removing all values. Keeps the allocated …","Removes all the tables.","Clears the table, removing all key-value pairs. Keeps the …","","Go back to default decor","Clears the table, removing all key-value pairs. Keeps the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns true if the table contains an array of tables with …","Returns true if the table contains an item with the given …","","Returns true iff the table contains given key.","Returns true if the table contains an item with the given …","","Returns true if the table contains a table with the given …","Returns true if the table contains a value with the given …","Optional date. Required for: <em>Offset Date-Time</em>, <em>Local </em>…","Day: 1 to {28, 29, 30, 31} (based on month/year)","Returns the surrounding whitespace","Returns the surrounding whitespace","Returns the surrounding whitespace","Returns the surrounding whitespace","Returns the surrounding whitespace","Returns the decor associated with a given key of the table.","Get the decoration of the value.","Returns the surrounding whitespace","Returns the surrounding whitespace","Returns the surrounding whitespace","Returns the surrounding whitespace","Returns the surrounding whitespace","Returns the surrounding whitespace","Get the decoration of the value.","Sets the prefix and the suffix for value.","","","","","","","","","","Returns the default raw representation.","Returns the default raw representation.","Returns the default raw representation.","","","","","","","Returns a raw representation.","Returns a raw representation.","Returns a raw representation.","Gets the given key’s corresponding entry in the Table …","","Gets the given key’s corresponding entry in the Table …","","Gets the given key’s corresponding entry in the Table …","Gets the given key’s corresponding entry in the Table …","Gets the given key’s corresponding entry in the Table …","","","Gets the given key’s corresponding entry in the Table …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Auto formats the table.","","","","","","","","","","","","","Auto formats the array.","","","","","","Auto formats the table.","","","","","","","","","Auto formats the key.","","Auto formats the key.","","","","","Auto formats the value.","","","","","","","Auto formats the table.","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","Parses a document from a &amp;str","","Parses a value from a &amp;str","Tries to parse a key from a &amp;str, if fails, tries as basic …","Parses a value from a &amp;str","Returns an optional reference to an item given the key.","Gets a reference to the value in the entry.","Gets a reference to the value in the entry.","Returns a reference to the value at the given index, or …","Returns an optional reference to the table.","Return an optional reference to the value at the given the …","","Index into a TOML array or map. A string index can be used …","Returns the parsed key value.","Returns the parsed key value.","","Returns an optional reference to an item given the key.","Return references to the key-value pair stored for key, if …","","Return references to the key-value pair stored for key, if …","","Return references to the key-value pair stored for key, if …","Return mutable references to the key-value pair stored for …","","Return mutable references to the key-value pair stored for …","","Return mutable references to the key-value pair stored for …","Returns an optional mutable reference to an item given the …","Gets a mutable reference to the value in the entry.","Gets a mutable reference to the value in the entry.","Returns a reference to the value at the given index, or …","Returns an optional mutable reference to the table.","","Return an optional mutable reference to the value at the …","Mutably index into a TOML array or map. A string index can …","Returns an optional mutable reference to an item given the …","","Inserts a key/value pair if the table does not contain the …","Get key/values for values that are visually children of …","","Get key/values for values that are visually children of …","","Get key/values for values that are visually children of …","","","","","","","","","Hour: 0 to 23","","","","","","","","","Inserts a key-value pair into the map.","Sets the value of the entry, and returns the entry’s old …","Sets the value of the entry with the VacantEntry’s key, …","Sets the value of the entry, and returns the entry’s old …","Sets the value of the entry with the VacantEntry’s key, …","Inserts an element at the given position within the array, …","","Inserts a key-value pair into the map.","Inserts a key-value pair into the map.","","Inserts an already formatted value at the given position …","Inserts a key-value pair into the map.","Inserts a key-value pair into the map.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Convert to an inline array","Casts <code>self</code> to array of tables.","Convert to an inline table","","","","","","","","","Converts the OccupiedEntry into a mutable reference to the …","Converts the OccupiedEntry into a mutable reference to the …","Convert to a table","Casts <code>self</code> to table.","Casts <code>self</code> to value.","The wrapped value","Returns true iff <code>self</code> is an array.","Returns true iff <code>self</code> is an array.","Returns true iff <code>self</code> is an array of tables.","Returns true iff <code>self</code> is a boolean.","Returns true iff <code>self</code> is a boolean.","Returns true iff <code>self</code> is a date-time.","Returns true iff <code>self</code> is a date-time.","Check if this is a wrapper for dotted keys, rather than a …","Check if this is a wrapper for dotted keys, rather than a …","","Check if this is a wrapper for dotted keys, rather than a …","","Returns true if the table is empty.","Returns true if the table is empty.","Return true iff <code>self.len() == 0</code>.","Returns true iff <code>self.len() == 0</code>.","Returns true iff the table is empty.","Returns true if the table is empty.","Returns true iff <code>self</code> is a float.","Returns true iff <code>self</code> is a float.","If a table has no key/value pairs and implicit, it will …","Returns true iff <code>self</code> is an inline table.","Returns true iff <code>self</code> is an inline table.","Returns true iff <code>self</code> is an integer.","Returns true iff <code>self</code> is an integer.","Returns true iff <code>self</code> is <code>None</code>.","Returns true iff <code>self</code> is a string.","Returns true iff <code>self</code> is a string.","Returns true iff <code>self</code> is a table.","Returns true iff <code>self</code> is either a table, or an inline …","Returns true iff <code>self</code> is a value.","Returns an iterator over key/value pairs.","Returns an iterator over all values.","Returns an iterator over tables.","Returns an iterator over the root table.","","Returns an iterator over key/value pairs.","Returns an iterator over all key/value pairs, including …","","Returns an mutable iterator over all key/value pairs, …","Returns an iterator over all values.","Returns an iterator over tables.","","Returns an iterator over key/value pairs.","","Returns an mutable iterator over all key/value pairs, …","Returns the entry key","Gets a reference to the entry key","Gets a reference to the entry key","Returns the entry key","Gets a reference to the entry key","Gets a reference to the entry key","Returns the decor associated with a given key of the table.","","Returns the decor associated with a given key of the table.","","Returns the decor associated with a given key of the table.","Returns the decor associated with a given key of the table.","","Returns the decor associated with a given key of the table.","Returns the decor associated with a given key of the table.","","Gets a mutable reference to the entry key","Gets a mutable reference to the entry key","Returns the number of nonempty items.","Returns the number of nonempty items.","Returns the length of the underlying Vec.","Returns the length of the underlying Vec. To get the …","Returns the number of key/value pairs.","Returns the number of non-empty items in the table.","In-place convert to a value","What went wrong","Minute: 0 to 59","Month: 1 to 12","Nanosecond: 0 to 999_999_999","Create an empty <code>Array</code>","Creates an empty array of tables.","Creates an empty document","Creates an empty table.","Create an empty string","Create a new table key","Default-formatted value","Creates a new decor from the given prefix and suffix.","Creates an empty table.","Optional offset. Required for: <em>Offset Date-Time</em>.","Ensures a value is in the entry by inserting the default …","Ensures a value is in the entry by inserting the default …","Sets <code>self</code> to the given item iff <code>self</code> is none and returns a …","Ensures a value is in the entry by inserting the result of …","Ensures a value is in the entry by inserting the result of …","Parse a TOML key expression","","","","","","","","The position of the <code>Table</code> within the <code>Document</code>.","Whitespace after before element","Get the prefix.","","","Appends a new value to the end of the array, applying …","Appends a table to the array.","Appends a new, already formatted value to the end of the …","Removes an item given the key.","Takes the value out of the entry, and returns it","Takes the value out of the entry, and returns it","Removes the value at the given index.","Removes a table with the given index.","Removes an item given the key.","","","Removes an item given the key.","Removes a key from the map, returning the stored key and …","Removes a key from the map, returning the stored key and …","Replaces the element at the given position within the …","Replaces the element at the given position within the …","Retains only the values specified by the <code>keep</code> predicate.","Retains only the elements specified by the <code>keep</code> predicate.","Retains only the elements specified by the <code>keep</code> predicate.","Retains only the elements specified by the <code>keep</code> predicate.","Second: 0 to {58, 59, 60} (based on leap second rules)","Change this table’s dotted status","","Change this table’s dotted status","","Change this table’s dotted status","If a table has no key/value pairs and implicit, it will …","Sets the position of the <code>Table</code> within the <code>Document</code>.","Set whitespace after before element","Set the prefix.","Set the suffix.","Set whitespace after last element","Set whitespace after last element","Set whether the array will use a trailing comma","Sorts Key/Value Pairs of the table.","Sorts the key/value pairs by key.","","","Sorts Key/Value Pairs of the table.","Sort Key/Value Pairs of the table using the using the …","Sort Key/Value Pairs of the table using the using the …","The start/end index into the original document where the …","Get the suffix.","Returns an empty table.","Optional time. Required for: <em>Offset Date-Time</em>, <em>Local </em>…","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Whitespace after last element","Whitespace after last element","Whether the array will use a trailing comma","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Text description of value type","Text description of value type","Returns a formatted value.","The wrapped value","Document tree traversal to walk a shared borrow of a …","Document tree traversal to mutate an exclusive borrow of a …","While creating the <code>Key</code>, add <code>Decor</code> to it","Year: four digits","Minutes: -1_440..1_440","Document tree traversal to mutate an exclusive borrow of a …","","","","","","","","","","","","","","","","","","","","","","","","Document tree traversal to mutate an exclusive borrow of a …","","","","","","","","","","","","","","","","","","","<code>visit_table_mut</code> and <code>visit_inline_table_mut</code> both recurse …","","","",""],"i":[0,4,0,0,0,0,1,0,0,0,4,25,0,0,4,0,0,0,0,4,0,0,0,0,4,0,0,0,0,4,0,0,0,0,0,0,0,1,32,31,0,0,0,0,4,0,1,0,0,0,32,31,0,0,1,25,0,1,4,1,4,1,1,1,4,1,4,1,4,1,4,1,4,1,4,11,11,12,14,16,12,13,18,16,1,15,4,11,1,1,1,11,1,1,1,7,22,23,24,25,32,42,48,31,43,49,2,5,11,9,16,16,1,12,13,26,15,18,14,21,19,4,7,22,23,24,25,32,42,48,31,43,49,2,5,11,9,16,1,12,13,26,15,18,14,21,19,4,20,2,5,9,9,21,19,19,7,22,23,24,25,2,5,11,9,16,1,12,26,15,18,14,21,19,4,7,22,23,24,25,2,5,11,9,16,1,12,26,15,18,14,21,19,4,7,23,24,25,16,12,13,7,23,24,25,16,12,13,19,20,9,9,19,19,19,19,7,23,2,9,12,13,18,19,4,2,9,12,13,18,19,4,4,2,5,11,9,16,1,15,21,19,12,13,18,11,16,12,13,11,26,12,13,18,20,9,9,19,19,20,9,9,19,19,7,23,24,25,16,12,12,12,12,13,13,13,13,26,15,18,14,21,7,7,7,23,23,23,24,24,24,25,25,25,16,16,16,12,12,12,13,13,13,26,26,26,15,15,15,18,18,18,14,14,14,21,21,21,2,5,9,19,20,7,7,22,22,23,23,24,24,25,25,2,2,2,5,5,11,11,9,9,9,9,16,16,1,1,12,12,12,13,13,13,26,26,15,18,18,18,14,21,19,19,19,19,4,4,7,7,7,22,23,24,25,32,42,48,31,43,49,2,5,11,11,9,16,16,16,16,16,16,1,12,12,12,12,12,13,26,15,15,15,15,15,15,15,18,14,21,19,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,2,5,9,19,4,4,7,11,16,1,12,4,20,42,43,2,5,9,9,1,12,13,19,19,20,9,9,19,19,20,9,9,19,19,20,42,43,2,5,9,9,1,19,19,9,20,9,9,19,19,16,12,13,26,15,18,14,21,24,11,9,1,19,11,9,1,19,20,42,48,43,49,2,9,9,19,19,2,9,19,7,22,23,24,25,32,42,48,31,43,49,2,5,11,9,16,1,12,13,26,15,18,14,21,19,4,5,1,19,2,2,5,5,9,9,19,19,42,43,9,1,1,18,1,4,1,1,4,1,4,20,9,9,19,19,20,20,2,5,9,19,1,4,19,1,4,1,4,1,1,4,1,1,1,20,2,5,11,9,9,19,19,20,2,5,9,9,19,19,32,42,48,31,43,49,20,9,9,19,19,20,9,9,19,19,42,43,20,20,2,5,9,19,1,26,24,23,24,2,5,11,9,16,12,18,21,19,7,32,31,1,32,31,12,7,23,24,25,16,12,13,19,9,21,22,26,2,5,2,20,42,43,2,5,9,9,19,19,9,19,2,2,2,5,9,19,24,20,9,9,19,19,19,19,9,21,21,2,11,2,20,9,9,19,19,9,19,26,21,0,7,7,22,23,24,25,2,5,11,9,16,1,12,26,15,18,14,21,19,4,7,22,23,24,25,2,5,11,9,16,1,12,13,26,18,19,4,2,11,2,7,22,23,24,25,32,42,48,31,43,49,2,5,11,9,16,1,12,13,26,15,18,14,21,19,4,7,22,23,24,25,32,42,48,31,43,49,2,5,11,9,16,1,12,13,26,15,18,14,21,19,4,7,22,23,24,25,32,42,48,31,43,49,2,5,11,9,16,1,12,13,26,15,18,14,21,19,4,1,4,0,18,0,0,12,23,66,0,0,63,0,63,63,63,0,63,63,0,63,63,0,63,63,0,63,0,63,0,63,0,63,0,0,65,0,65,65,65,0,65,65,0,65,65,0,65,65,0,65,0,65,0,65,0,65],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[1,[[3,[2]]]],[4,[[3,[2]]]],[1,[[3,[2]]]],[4,[[3,[2]]]],[1,[[3,[5]]]],[1,[[3,[5]]]],[1,[[3,[6]]]],[4,[[3,[6]]]],[1,[[3,[7]]]],[4,[[3,[7]]]],[1,[[3,[8]]]],[4,[[3,[8]]]],[1,[[3,[9]]]],[4,[[3,[9]]]],[1,[[3,[9]]]],[4,[[3,[9]]]],[1,[[3,[10]]]],[4,[[3,[10]]]],[11,1],[11,1],[12,13],[14,15],[16,17],[12,[[3,[14]]]],[13,[[3,[14]]]],[[[18,[0]]],[[3,[14]]]],[16,17],[1,[[3,[17]]]],[15,[[3,[17]]]],[4,[[3,[17]]]],[11,19],[1,[[3,[19]]]],[1,[[3,[20]]]],[1,[[3,[20]]]],[11,19],[1,[[3,[19]]]],[1,[[3,[4]]]],[1,[[3,[4]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[16,17],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[2],[5],[9],[9],[21],[19],[19],[7,7],[22,22],[23,23],[24,24],[25,25],[2,2],[5,5],[11,11],[9,9],[16,16],[1,1],[12,12],[26,26],[15,15],[[[18,[27]]],[[18,[27]]]],[14,14],[21,21],[19,19],[4,4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[7,7],28],[[23,23],28],[[24,24],28],[[25,25],28],[[16,16],28],[[12,12],28],[[13,13],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[19,17],6],[17,6],[[9,17],6],[[9,17],6],[[19,17],6],[[19,17],6],[[19,17],6],[[19,17],6],0,0,[2,21],[9,21],[12,21],[13,21],[[[18,[0]]],21],[19,21],[4,21],[2,21],[9,21],[12,21],[13,21],[[[18,[0]]],21],[19,21],[4,21],[[4,[29,[15]],[29,[15]]],4],[[],2],[[],5],[[],11],[[],9],[[],16],[[],1],[[],15],[[],21],[[],19],[12,14],[13,14],[[[18,[0]]],14],[11],[16,17],[12],[13],[11],[26,17],[12,[[30,[17]]]],[13,[[30,[17]]]],[[[18,[0]]],[[30,[17]]]],[17,31],[[9,17],31],[[9,[29,[16]]],32],[[19,17],31],[[19,17],31],[12,31],[[9,12],32],[[9,12],31],[[19,12],31],[[19,12],31],[[7,7],6],[[23,23],6],[[24,24],6],[[25,25],6],[[16,16],6],[[12,17],6],[[12,17],6],[[12,33],6],[[12,12],6],[[13,17],6],[[13,17],6],[[13,33],6],[[13,13],6],[[26,26],6],[[15,15],6],[[[18,[34]],[18,[34]]],6],[[14,14],6],[[21,21],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[2,35]],[[5,35]],[[9,35]],[[19,35]],[[]],[[7,36],[[38,[37]]]],[[7,36],[[38,[37]]]],[[22,36],[[38,[37]]]],[[22,36],[[38,[37]]]],[[23,36],[[38,[37]]]],[[23,36],[[38,[37]]]],[[24,36],[[38,[37]]]],[[24,36],[[38,[37]]]],[[25,36],[[38,[37]]]],[[25,36],[[38,[37]]]],[[2,36],39],[[2,36],39],[2],[[5,36],39],[[5,36],39],[[11,36],39],[[11,36],39],[9],[9],[[9,36],39],[[9,36],39],[[16,36],[[38,[37]]]],[[16,36],39],[[1,36],39],[[1,36],39],[[12,36],39],[[12,36],39],[12],[[13,36],39],[13],[[13,36],39],[[26,36],39],[[26,36],39],[[15,36],[[38,[37]]]],[[[18,[0]]]],[[[18,[0]],36],39],[[[18,[40]],36],[[38,[37]]]],[[14,36],[[38,[37]]]],[[21,36],[[38,[37]]]],[[19,36],39],[[19,36],39],[19],[19],[[4,36],39],[[4,36],39],[23,7],[24,7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[19,11],[[]],[[]],[[]],[17,16],[[[41,[17]]],16],[16,16],[33,16],[33,16],[[]],[[]],[33,12],[33,12],[16,12],[17,12],[[]],[[]],[16,15],[16,15],[33,15],[33,15],[[]],[[[41,[17]]],15],[17,15],[[]],[[]],[[]],[[]],[16,4],[24,4],[4,4],[9,4],[7,4],[23,4],[10,4],[33,4],[6,4],[17,4],[8,4],[33,4],[16,4],[2,4],[[]],[35,2],[35,5],[35,9],[35,19],[35,4],[35,4],[17,[[38,[7,22]]]],[17,[[38,[11]]]],[17,[[38,[16]]]],[17,[[38,[1]]]],[17,[[38,[12]]]],[17,[[38,[4]]]],[17,[[3,[1]]]],[42,4],[43,1],[[2,44],[[3,[4]]]],[[5,44],[[3,[19]]]],[[9,17],[[3,[4]]]],[[9,17],[[3,[1]]]],0,[12,17],[13,17],[[19,17],[[3,[1]]]],[[19,17],[[3,[1]]]],[17,3],[[9,17],3],[[9,17],3],[[19,17],3],[[19,17],3],[17,3],[[9,17],3],[[9,17],3],[[19,17],3],[[19,17],3],[17,[[3,[1]]]],[42,4],[43,1],[[2,44],[[3,[4]]]],[[5,44],[[3,[19]]]],[[9,17],[[3,[1]]]],[[9,17],[[3,[4]]]],0,[[19,17],[[3,[1]]]],[[19,17],[[3,[1]]]],[[9,[29,[16]],[29,[4]]],4],[[],45],[9,45],[9,45],[19,45],[19,45],[[16,46]],[[12,46]],[[13,46]],[[26,46]],[[15,46]],[[[18,[47]],46]],[[14,46]],[[21,46]],0,[[11,17],1],[[9,17],4],0,[[19,17],1],[[11,17],1],[[9,17],4],0,[[19,17],1],[[17,1],[[3,[1]]]],[[42,4],4],[[48,4],4],[[43,1],1],[[49,1],1],[[2,44,[29,[4]]]],[[9,17,1],[[3,[1]]]],[[9,[29,[16]],4],[[3,[4]]]],[[19,17,1],[[3,[1]]]],[[19,17,1],[[3,[1]]]],[[2,44,4]],[[9,12,4],[[3,[4]]]],[[19,12,1],[[3,[1]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[5,2],[1,[[38,[5,1]]]],[19,9],[2],[2],[5],[5],[9],[9],[19],[19],[42,4],[43,1],[9,19],[1,[[38,[19,1]]]],[1,[[38,[4,1]]]],0,[1,6],[4,6],[1,6],[1,6],[4,6],[1,6],[4,6],[[],6],[9,6],[9,6],[19,6],[19,6],[[],6],[[],6],[2,6],[5,6],[9,6],[19,6],[1,6],[4,6],[19,6],[1,6],[4,6],[1,6],[4,6],[1,6],[1,6],[4,6],[1,6],[1,6],[1,6],[[],50],[2,51],[5,52],[11,50],[9,50],[9,53],[19,50],[19,50],[[],54],[2,55],[5,56],[9,54],[9,57],[19,54],[19,54],[32,17],[42,17],[48,17],[31,17],[43,17],[49,17],[17,[[3,[21]]]],[[9,17],[[3,[21]]]],[[9,17],[[3,[21]]]],[[19,17],[[3,[21]]]],[[19,17],[[3,[21]]]],[17,[[3,[21]]]],[[9,17],[[3,[21]]]],[[9,17],[[3,[21]]]],[[19,17],[[3,[21]]]],[[19,17],[[3,[21]]]],[42,13],[43,13],[[],44],[[],44],[2,44],[5,44],[9,44],[19,44],[1],[26,17],0,0,0,[[],2],[[],5],[[],11],[[],9],[[],16],[[[29,[16]]],12],0,[[[29,[15]],[29,[15]]],21],[[],19],0,[[32,4],4],[[31,1],1],[[1,1],1],[[32,58],4],[[31,58],1],[17,[[38,[[45,[12]],26]]]],[[7,7],[[3,[28]]]],[[23,23],[[3,[28]]]],[[24,24],[[3,[28]]]],[[25,25],[[3,[28]]]],[[16,16],[[3,[28]]]],[[12,12],[[3,[28]]]],[[13,13],[[3,[28]]]],[19,[[3,[44]]]],[9,15],[21,[[3,[15]]]],[59],[59],[[2,[29,[4]]]],[[5,19]],[[2,4]],[17,[[3,[1]]]],[42,4],[43,1],[[2,44],4],[[5,44]],[[9,17],[[3,[4]]]],[[9,17],[[3,[1]]]],[[19,17],[[3,[1]]]],[[19,17],[[3,[1]]]],[[9,17],3],[[19,17],3],[[2,44,[29,[4]]],4],[[2,44,4],4],[[2,60]],[[5,60]],[[9,60]],[[19,60]],0,[6],[[9,6]],[[9,6]],[[19,6]],[[19,6]],[[19,6]],[[19,44]],[[9,[29,[15]]]],[[21,[29,[15]]]],[[21,[29,[15]]]],[[2,[29,[15]]]],[[11,[29,[15]]]],[[2,6]],[[]],[9],[9],[19],[19],[[9,60]],[[19,60]],[26,[[3,[[61,[44]]]]]],[21,[[3,[15]]]],[[],1],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[2,15],[11,15],[2,6],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],62],[[],62],[[],62],[[],62],[[],62],[[],62],[[],62],[[],62],[[],62],[[],62],[[],62],[[],62],[[],62],[[],62],[[],62],[[],62],[[],62],[[],62],[[],62],[[],62],[[],62],[[],62],[[],62],[[],62],[[],62],[[],62],[1,17],[4,17],[[[29,[4]]],1],0,0,0,[[12,21],12],0,0,0,[[[0,[63,64]],2]],[2],[[[0,[63,64]],5]],[5],[[[18,[6]]]],[[[18,[7]]]],[[[0,[63,64]],11]],[11],[[[18,[8]]]],[[[0,[63,64]],9]],[9],[[[18,[10]]]],[[[0,[63,64]],1]],[1],[[[18,[33]]]],[[[0,[63,64]],19]],[19],[[[0,[63,64]],20]],[20],[[[0,[63,64]],17,1]],[[17,1]],[[[0,[63,64]],4]],[4],0,[[[0,[65,64]],2]],[2],[[[0,[65,64]],5]],[5],[[[18,[6]]]],[[[18,[7]]]],[[[0,[65,64]],11]],[11],[[[18,[8]]]],[[[0,[65,64]],9]],[9],[[[18,[10]]]],[[[0,[65,64]],1]],[1],[[[18,[33]]]],[[[0,[65,64]],13,1]],[[13,1]],[[[0,[65,64]],20]],[20],[[[0,[65,64]],19]],[19],[[[0,[65,64]],4]],[4]],"c":[],"p":[[4,"Item"],[3,"Array"],[4,"Option"],[4,"Value"],[3,"ArrayOfTables"],[15,"bool"],[3,"Datetime"],[15,"f64"],[3,"InlineTable"],[15,"i64"],[3,"Document"],[3,"Key"],[3,"KeyMut"],[3,"Repr"],[3,"RawString"],[3,"InternalString"],[15,"str"],[3,"Formatted"],[3,"Table"],[8,"TableLike"],[3,"Decor"],[3,"DatetimeParseError"],[3,"Date"],[3,"Time"],[4,"Offset"],[3,"TomlError"],[8,"Clone"],[4,"Ordering"],[8,"Into"],[4,"Cow"],[4,"Entry"],[4,"InlineEntry"],[3,"String"],[8,"PartialEq"],[8,"IntoIterator"],[3,"Formatter"],[3,"Error"],[4,"Result"],[6,"Result"],[8,"Debug"],[3,"Box"],[3,"InlineOccupiedEntry"],[3,"OccupiedEntry"],[15,"usize"],[3,"Vec"],[8,"Hasher"],[8,"Hash"],[3,"InlineVacantEntry"],[3,"VacantEntry"],[6,"Iter"],[6,"ArrayIter"],[6,"ArrayOfTablesIter"],[6,"InlineTableIter"],[6,"IterMut"],[6,"ArrayIterMut"],[6,"ArrayOfTablesIterMut"],[6,"InlineTableIterMut"],[8,"FnOnce"],[3,"Demand"],[8,"FnMut"],[3,"Range"],[3,"TypeId"],[8,"Visit"],[8,"Sized"],[8,"VisitMut"],[13,"Custom"]]},\
"tracing":{"doc":"A scoped, structured logging and diagnostics system.","t":"SDSDSIDDDISISLLLLLLLLLLLLLLLLLLLLLOOLALLLLLLLLLLKLOKLLLLLLLOOAKLOLOKLALLLLLLLLLLLLLLLLLLLLLLOOALLLLLLLLLLLLLLLALLLLLLLLKLLLLLKKLKLLLAOOALLLLLOOLLLLLLLLLLLLLLOODDDDLLLLLLFLFFLLLLLFDLLLLLLLLLLLLLLLLLLIDDDDDDIDIKLLLLLLLLLLLLLLLLLLLLLLLLLLFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLIDDILLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLSSSDSDRSSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLIDDDDDDKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDILLLLLLLLLLLLLLLLLLLKLKLKLLKLLLLLLLLLLLLLLLLLLLLKLLLKLKLLLFFLLLLLLLLLLLLLLLLLF","n":["DEBUG","Dispatch","ERROR","Event","INFO","Instrument","Level","Metadata","Span","Subscriber","TRACE","Value","WARN","as_str","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","callsite","clone","clone","clone","clone_into","clone_into","clone_into","clone_span","clone_span","cmp","current_span","current_span","debug","debug_span","default","dispatcher","downcast_raw","downcast_ref","downcast_ref","downcast_ref","downcast_ref","downcast_ref","downgrade","drop","drop_span","drop_span","enabled","enabled","enabled","enter","enter","eq","eq","eq","eq","equivalent","equivalent","error","error_span","event","event","event","event","event_enabled","event_enabled","exit","exit","field","fields","file","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_str","ge","ge","gt","gt","hash","hash","in_current_span","info","info_span","instrument","instrument","into","into","into","into","is","is","is","is","is","is_event","is_span","le","le","level","level_filters","line","lt","lt","max_level_hint","module_path","name","new","new","new_span","new_span","none","on_register_dispatch","partial_cmp","partial_cmp","record","record","record","record_follows_from","record_follows_from","register_callsite","register_callsite","span","span","span_enabled","subscriber","target","to_owned","to_owned","to_owned","to_string","trace","trace_span","try_close","try_close","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","warn","warn_span","DefaultGuard","Dispatch","SetGlobalDefaultError","WeakDispatch","borrow","borrow_mut","clone","clone_into","fmt","from","get_default","into","set_default","set_global_default","to_owned","try_from","try_into","type_id","upgrade","with_default","Event","borrow","borrow_mut","child_of","dispatch","fields","fmt","from","into","is_contextual","is_root","metadata","new","new_child_of","parent","record","try_from","try_into","type_id","AsField","DebugValue","DisplayValue","Empty","Field","FieldSet","Iter","Value","ValueSet","Visit","as_field","as_field","as_field","as_ref","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","callsite","callsite","clone","clone","clone","clone_into","clone_into","clone_into","contains","debug","display","eq","eq","eq","equivalent","equivalent","equivalent","field","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","hash","into","into","into","into","into","into","into","into_iter","into_iter","is_empty","is_empty","iter","len","len","name","new","next","record","record","record","record","record","record_bool","record_debug","record_error","record_f64","record_i128","record_i64","record_str","record_u128","record_u64","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","Instrument","Instrumented","WithDispatch","WithSubscriber","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","dispatcher","fmt","fmt","from","from","in_current_span","inner","inner","inner_mut","inner_mut","inner_pin_mut","inner_pin_mut","inner_pin_ref","inner_pin_ref","instrument","into","into","into_future","into_future","into_inner","into_inner","poll","poll","span","span_mut","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","with_current_subscriber","with_subscriber","DEBUG","ERROR","INFO","LevelFilter","OFF","ParseLevelFilterError","STATIC_MAX_LEVEL","TRACE","WARN","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","current","eq","eq","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from_level","from_str","ge","ge","gt","gt","hash","into","into","into_level","le","le","lt","lt","partial_cmp","partial_cmp","provide","to_owned","to_owned","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id","AsId","Attributes","Entered","EnteredSpan","Id","Record","Span","as_id","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","child_of","child_of","clone","clone_into","contains","contains","current","deref","drop","drop","enter","entered","eq","equivalent","exit","field","fields","fmt","fmt","fmt","fmt","fmt","follows_from","from","from","from","from","from","from_non_zero_u64","from_u64","has_field","hash","id","id","in_scope","into","into","into","into","into","into_non_zero_u64","into_u64","is_contextual","is_disabled","is_empty","is_empty","is_none","is_root","len","metadata","metadata","new","new","new","new_disabled","new_root","new_root","none","or_current","parent","record","record","record","record_all","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","values","with_subscriber","DefaultGuard","Interest","NoSubscriber","SetGlobalDefaultError","Subscriber","always","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","clone_span","current_span","default","downcast_raw","drop","drop_span","enabled","enabled","enter","enter","event","event","event_enabled","exit","exit","fmt","fmt","fmt","fmt","fmt","from","from","from","from","into","into","into","into","is_always","is_never","is_sometimes","max_level_hint","never","new","new_span","new_span","on_register_dispatch","provide","record","record","record_follows_from","record_follows_from","register_callsite","register_callsite","set_default","set_global_default","sometimes","to_owned","to_owned","to_string","try_close","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","with_default"],"q":[[0,"tracing"],[159,"tracing::dispatcher"],[179,"tracing::event"],[198,"tracing::field"],[322,"tracing::instrument"],[369,"tracing::level_filters"],[426,"tracing::span"],[526,"tracing::subscriber"]],"d":["The “debug” level.","<code>Dispatch</code> trace data to a <code>Subscriber</code>.","The “error” level.","<code>Event</code>s represent single points in time where something …","The “info” level.","Attaches spans to a <code>std::future::Future</code>.","Describes the level of verbosity of a span or event.","Metadata describing a span or event.","A handle representing a span, with the capability to enter …","Trait representing the functions required to collect trace …","The “trace” level.","A field value of an erased type.","The “warn” level.","Returns the string representation of the <code>Level</code>.","","","","","","","","","Returns an opaque <code>Identifier</code> that uniquely identifies the …","","","","","","","Notifies the subscriber that a span ID has been cloned.","Notifies the subscriber that a span ID has been cloned.","","Returns a type representing this subscriber’s view of …","Returns a type representing this subscriber’s view of …","Constructs an event at the debug level.","Constructs a span at the debug level.","Returns the current default dispatcher","Dispatches trace events to <code>Subscriber</code>s.","If <code>self</code> is the same type as the provided <code>TypeId</code>, returns …","Returns some reference to this <code>[</code>Subscriber…","Returns some reference to this <code>Subscriber</code> value if it is …","Returns some reference to this <code>Subscriber</code> value if it is …","Returns some reference to this <code>Subscriber</code> value if it is …","Returns some reference to the <code>Subscriber</code> this <code>Dispatch</code> …","Creates a <code>WeakDispatch</code> from this <code>Dispatch</code>.","","<strong>This method is deprecated.</strong>","Notifies the subscriber that a span ID has been dropped.","Returns true if a span or event with the specified metadata…","Returns true if a span with the specified metadata would be","Checks whether a span or event is enabled based on the …","Records that a span has been entered.","Records that a span has been can_enter.","","","","","","","Constructs an event at the error level.","Constructs a span at the error level.","Events represent single points in time during the …","Records that an <code>Event</code> has occurred.","Records that an <code>Event</code> has occurred.","Constructs a new <code>Event</code>.","Determine if an <code>Event</code> should be recorded.","Tests whether an event with the specified level and target …","Records that a span has been exited.","Records that a span has been exited.","<code>Span</code> and <code>Event</code> key-value data.","Returns the names of the fields on the described span or …","Returns the name of the source code file where the span …","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Instruments this type with the current <code>Span</code>, returning an …","Constructs an event at the info level.","Constructs a span at the info level.","Attach a span to a <code>std::future::Future</code>.","Instruments this type with the provided <code>Span</code>, returning an …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if this <code>Subscriber</code> is the same type as <code>T</code>.","Returns <code>true</code> if this <code>Subscriber</code> is the same type as <code>T</code>.","Returns <code>true</code> if this <code>Subscriber</code> is the same type as <code>T</code>.","Returns <code>true</code> if this <code>Subscriber</code> is the same type as <code>T</code>.","Returns <code>true</code> if this <code>Dispatch</code> forwards to a <code>Subscriber</code> of …","Returns true if the callsite kind is <code>Event</code>.","Return true if the callsite kind is <code>Span</code>.","","","Returns the level of verbosity of the described span or …","Trace verbosity level filtering.","Returns the line number in the source code file where the …","","","Returns the highest verbosity level that this <code>Subscriber</code> …","Returns the path to the Rust module where the span …","Returns the name of the span.","Construct new metadata for a span or event, with a name, …","Returns a <code>Dispatch</code> that forwards to the given <code>Subscriber</code>.","Visit the construction of a new span, returning a new span …","Record the construction of a new span, returning a new ID …","Returns a new <code>Dispatch</code> that discards events and spans.","Invoked when this subscriber becomes a <code>Dispatch</code>.","","","Visits this value with the given <code>Visitor</code>.","Record a set of values on a span.","Record a set of values on a span.","Adds an indication that <code>span</code> follows from the span with …","Adds an indication that <code>span</code> follows from the span with …","Registers a new callsite with this subscriber, returning …","Registers a new callsite with this collector, returning …","Spans represent periods of time in which a program was …","Constructs a new span.","Tests whether a span with the specified level and target …","Collects and records trace data.","Returns a string describing the part of the system where …","","","","","Constructs an event at the trace level.","Constructs a span at the trace level.","Notifies the subscriber that a span ID has been dropped, …","Notifies the subscriber that a span ID has been dropped, …","","","","","","","","","","","","","Constructs an event at the warn level.","Constructs a span at the warn level.","A guard that resets the current default dispatcher to the …","<code>Dispatch</code> trace data to a <code>Subscriber</code>.","Returned if setting the global dispatcher fails.","<code>WeakDispatch</code> is a version of <code>Dispatch</code> that holds a …","","","","","","Returns the argument unchanged.","Executes a closure with a reference to this thread’s …","Calls <code>U::from(self)</code>.","Sets the dispatch as the default dispatch for the duration …","Sets this dispatch as the global default for the duration …","","","","","Attempts to upgrade this <code>WeakDispatch</code> to a <code>Dispatch</code>.","Sets this dispatch as the default for the duration of a …","<code>Event</code>s represent single points in time where something …","","","Constructs a new <code>Event</code> with the specified metadata and set …","Constructs a new <code>Event</code> with the specified metadata and set …","Returns an iterator over the set of values on this <code>Event</code>.","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Returns true if the new event’s parent should be …","Returns true if the new event should be a root.","Returns metadata describing this <code>Event</code>.","Returns a new <code>Event</code> in the current span, with the …","Returns a new <code>Event</code> as a child of the specified span, with …","Returns the new event’s explicitly-specified parent, if …","Visits all the fields on this <code>Event</code> with the specified …","","","","Trait implemented to allow a type to be used as a field …","A <code>Value</code> which serializes as a string using <code>fmt::Debug</code>.","A <code>Value</code> which serializes using <code>fmt::Display</code>.","An empty field.","An opaque key allowing <em>O</em>(1) access to a field in a <code>Span</code>’…","Describes the fields present on a span.","An iterator over a set of fields.","A field value of an erased type.","A set of fields and values for a span.","Visits typed values.","Attempts to convert <code>&amp;self</code> into a <code>Field</code> with the specified …","","","","","","","","","","","","","","","","","","Returns an <code>Identifier</code> that uniquely identifies the <code>Callsite</code>","Returns an <code>Identifier</code> that uniquely identifies the <code>Callsite</code>","","","","","","","Returns <code>true</code> if <code>self</code> contains the given <code>field</code>.","Wraps a type implementing <code>fmt::Debug</code> as a <code>Value</code> that can be","Wraps a type implementing <code>fmt::Display</code> as a <code>Value</code> that can …","","","","","","","Returns the <code>Field</code> named <code>name</code>, or <code>None</code> if no such field …","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Returns whether or not this <code>FieldSet</code> has fields.","Returns true if this <code>ValueSet</code> contains <em>no</em> values.","Returns an iterator over the <code>Field</code>s in this <code>FieldSet</code>.","Returns the number of fields in this <code>FieldSet</code>.","Returns the number of fields in this <code>ValueSet</code> that would …","Returns a string representing the name of the field.","Constructs a new <code>FieldSet</code> with the given array of field …","","Visits this value with the given <code>Visitor</code>.","Visits all the fields in this <code>ValueSet</code> with the provided …","","","","Visit a boolean value.","Visit a value implementing <code>fmt::Debug</code>.","Records a type implementing <code>Error</code>.","Visit a double-precision floating point value.","Visit a signed 128-bit integer value.","Visit a signed 64-bit integer value.","Visit a string value.","Visit an unsigned 128-bit integer value.","Visit an unsigned 64-bit integer value.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Attaches spans to a <code>std::future::Future</code>.","A <code>Future</code> that has been instrumented with a <code>tracing</code> <code>Span</code>.","A <code>Future</code> that has been instrumented with a <code>tracing</code> …","Extension trait allowing futures to be instrumented with a …","","","","","","","","","Borrows the <code>Dispatch</code> that is entered when this type is …","","","Returns the argument unchanged.","Returns the argument unchanged.","Instruments this type with the current <code>Span</code>, returning an …","Borrows the wrapped type.","Borrows the wrapped type.","Mutably borrows the wrapped type.","Mutably borrows the wrapped type.","Get a pinned mutable reference to the wrapped type.","Get a pinned mutable reference to the wrapped type.","Get a pinned reference to the wrapped type.","Get a pinned reference to the wrapped type.","Instruments this type with the provided <code>Span</code>, returning an …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Consumes the <code>Instrumented</code>, returning the wrapped type.","Consumes the <code>Instrumented</code>, returning the wrapped type.","","","Borrows the <code>Span</code> that this type is instrumented by.","Mutably borrows the <code>Span</code> that this type is instrumented by.","","","","","","","","","Attaches the current default <code>Subscriber</code> to this type, …","Attaches the provided <code>Subscriber</code> to this type, returning a …","The “debug” level.","The “error” level.","The “info” level.","A filter comparable to a verbosity <code>Level</code>.","The “off” level.","Indicates that a string could not be parsed to a valid …","The statically configured maximum trace level.","The “trace” level.","The “warn” level.","","","","","","","","","","Returns a <code>LevelFilter</code> that matches the most verbose <code>Level</code> …","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns a <code>LevelFilter</code> that enables spans and events with …","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns the most verbose <code>Level</code> that this filter accepts, …","","","","","","","","","","","","","","","","","","Trait implemented by types which have a span <code>Id</code>.","Attributes provided to a <code>Subscriber</code> describing a new span …","A guard representing a span which has been entered and is …","An owned version of <code>Entered</code>, a guard representing a span …","Identifies a span within the context of a subscriber.","A set of fields recorded by a span.","A handle representing a span, with the capability to enter …","Returns the <code>Id</code> of the span that <code>self</code> corresponds to, or …","","","","","","","","","","","Constructs a new <code>Span</code> as child of the given parent span, …","Returns <code>Attributes</code> describing a new child span of the …","","","Returns <code>true</code> if this set of <code>Attributes</code> contains a value …","Returns <code>true</code> if this <code>Record</code> contains a value for the given …","Returns a handle to the span considered by the <code>Subscriber</code> …","","","","Enters this span, returning a guard that will exit the …","Enters this span, consuming it and returning a guard that …","","","Exits this span, returning the underlying <code>Span</code>.","Returns a <code>Field</code> for the field with the given <code>name</code>, if one …","Returns the set of all fields defined by this span’s …","","","","","","Indicates that the span with the given ID has an indirect …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Constructs a new span ID from the given <code>NonZeroU64</code>.","Constructs a new span ID from the given <code>u64</code>.","Returns true if this <code>Span</code> has a field for the given <code>Field</code> …","","Returns this span’s <code>Id</code>, if it is enabled.","Returns this span’s <code>Id</code>, if it is enabled.","Executes the given function in the context of this span.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns the span’s ID as a <code>NonZeroU64</code>.","Returns the span’s ID as a <code>u64</code>.","Returns true if the new span’s parent should be …","Returns <code>true</code> if this span was disabled by the subscriber …","Returns true if this set of <code>Attributes</code> contains <em>no</em> values.","Returns true if this <code>Record</code> contains <em>no</em> values.","Returns <code>true</code> if this span was constructed by <code>Span::none</code> …","Returns true if the new span should be a root.","Returns the number of fields that would be visited from …","Returns this span’s <code>Metadata</code>, if it is enabled.","Returns a reference to the new span’s metadata.","Constructs a new <code>Span</code> with the given metadata and set of …","Returns <code>Attributes</code> describing a new child span of the …","Constructs a new <code>Record</code> from a <code>ValueSet</code>.","Constructs a new disabled span with the given <code>Metadata</code>.","Constructs a new <code>Span</code> as the root of its own trace tree, …","Returns <code>Attributes</code> describing a new span at the root of …","Constructs a new span that is <em>completely disabled</em>.","Returns this span, if it was enabled by the current …","Returns the new span’s explicitly-specified parent, if …","Records that the field described by <code>field</code> has the value …","Records all the fields in this set of <code>Attributes</code> with the …","Records all the fields in this <code>Record</code> with the provided …","Records all the fields in the provided <code>ValueSet</code>.","","","","","","","","","","","","","","","","","Returns a reference to a <code>ValueSet</code> containing any values …","Invokes a function with a reference to this span’s ID …","A guard that resets the current default dispatcher to the …","Indicates a <code>Subscriber</code>’s interest in a particular …","A no-op <code>Subscriber</code>.","Returned if setting the global dispatcher fails.","Trait representing the functions required to collect trace …","Returns an <code>Interest</code> indicating the subscriber is always …","","","","","","","","","","","","","Notifies the subscriber that a span ID has been cloned.","Returns a type representing this subscriber’s view of …","","If <code>self</code> is the same type as the provided <code>TypeId</code>, returns …","","<strong>This method is deprecated.</strong>","Returns true if a span or event with the specified metadata…","","Records that a span has been entered.","","Records that an <code>Event</code> has occurred.","","Determine if an <code>Event</code> should be recorded.","Records that a span has been exited.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if the subscriber is always interested in …","Returns <code>true</code> if the subscriber is never interested in …","Returns <code>true</code> if the subscriber is sometimes interested in …","Returns the highest verbosity level that this <code>Subscriber</code> …","Returns an <code>Interest</code> indicating that the subscriber is …","Returns a new <code>NoSubscriber</code>.","Visit the construction of a new span, returning a new span …","","Invoked when this subscriber becomes a <code>Dispatch</code>.","","Record a set of values on a span.","","Adds an indication that <code>span</code> follows from the span with …","","Registers a new callsite with this subscriber, returning …","","Sets the <code>Subscriber</code> as the default for the current thread …","Sets this subscriber as the global default for the …","Returns an <code>Interest</code> indicating the subscriber is sometimes …","","","","Notifies the subscriber that a span ID has been dropped, …","","","","","","","","","","","","","Sets this <code>Subscriber</code> as the default for the current thread …"],"i":[1,0,1,0,1,0,0,0,0,0,1,0,1,1,5,3,6,1,5,3,6,1,3,5,6,1,5,6,1,12,6,1,12,6,0,0,6,0,12,12,12,12,12,6,6,5,12,6,12,6,0,12,6,5,3,1,1,3,1,0,0,0,12,6,0,12,0,12,6,0,3,3,19,19,5,3,6,1,1,5,3,6,6,1,1,1,1,1,1,5,1,72,0,0,0,72,5,3,6,1,12,12,12,12,6,3,3,1,1,3,0,3,1,1,12,3,3,3,6,12,6,6,12,1,1,19,12,6,12,6,12,6,0,0,0,0,3,5,6,1,1,0,0,12,6,5,3,6,1,5,3,6,1,5,3,6,1,0,0,0,0,0,0,14,14,14,14,14,14,0,14,0,0,14,14,14,14,14,0,0,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,0,0,0,0,0,0,0,0,0,0,69,32,32,32,18,42,32,49,43,46,48,18,42,32,49,43,46,48,42,32,32,46,48,32,46,48,18,0,0,18,32,49,18,32,49,18,18,18,42,42,32,32,49,43,46,46,48,18,42,32,49,43,46,48,32,18,42,32,49,43,46,48,18,43,18,42,18,18,42,32,18,43,19,42,49,46,48,33,33,33,33,33,33,33,33,33,32,46,48,18,42,32,46,18,42,32,49,43,46,48,18,42,32,49,43,46,48,18,42,32,49,43,46,48,0,0,0,0,60,28,60,28,60,28,60,28,60,60,28,60,28,72,60,28,60,28,60,28,60,28,72,60,28,60,28,60,28,60,28,28,28,60,28,60,28,60,28,60,28,73,73,16,16,16,0,16,0,0,16,16,16,65,16,65,16,65,16,65,16,16,16,16,16,16,16,65,65,16,16,16,65,16,16,16,16,16,16,16,16,65,16,16,16,16,16,16,16,65,16,65,16,65,16,65,16,65,16,65,0,0,0,0,0,0,0,74,68,67,7,31,34,68,67,7,31,34,5,31,7,7,31,34,5,67,68,67,5,5,7,7,67,5,31,68,67,7,31,34,5,68,67,7,31,34,7,7,5,7,5,67,5,68,67,7,31,34,7,7,31,5,31,34,5,31,34,5,31,5,31,34,5,5,31,5,5,31,5,31,34,5,7,68,67,7,31,34,68,67,7,31,34,68,67,7,31,34,31,5,0,0,0,0,0,35,39,38,35,71,39,38,35,71,35,71,35,71,12,12,71,12,38,12,12,71,12,71,12,71,12,12,71,39,39,38,35,71,39,38,35,71,39,38,35,71,35,35,35,12,35,71,12,71,12,39,12,71,12,71,12,71,0,0,35,35,71,39,12,39,38,35,71,39,38,35,71,39,38,35,71,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[3,4],[5,5],[6,6],[1,1],[[]],[[]],[[]],[7,7],[[6,7],7],[[1,1],8],[[],9],[6,9],0,0,[[],6],0,[10,11],[12,[[11,[13]]]],[12,[[11,[13]]]],[12,[[11,[13]]]],[12,[[11,[13]]]],[6,[[11,[13]]]],[6,14],[5],[7],[[6,7]],[3,15],[[6,3],15],0,[7],[[6,7]],[[5,5],15],[[3,3],15],[[1,1],15],[[1,16],15],[[],15],[[],15],0,0,0,[17],[[6,17]],0,[17,15],0,[7],[[6,7]],0,[3,18],[3,[[11,[2]]]],[[19,20],[[22,[21]]]],[[19,20],[[22,[21]]]],[[5,20],23],[[3,20],[[22,[21]]]],[[6,20],[[22,[21]]]],[[1,20],[[22,[21]]]],[[1,20],[[22,[21]]]],[[]],[[]],[[[0,[12,24,25]]],6],[[]],[[]],[2,[[22,[1,26]]]],[[1,1],15],[[1,16],15],[[1,1],15],[[1,16],15],[[5,27]],[[1,27]],[[],28],0,0,0,[5,28],[[]],[[]],[[]],[[]],[12,15],[12,15],[12,15],[12,15],[6,15],[3,15],[3,15],[[1,1],15],[[1,16],15],[3,1],0,[3,[[11,[29]]]],[[1,1],15],[[1,16],15],[[],[[11,[16]]]],[3,[[11,[2]]]],[3,2],[[2,2,1,[11,[2]],[11,[29]],[11,[2]],18,30],3],[[[0,[12,24,25]]],6],[31,7],[[6,31],7],[[],6],[6],[[1,16],[[11,[8]]]],[[1,1],[[11,[8]]]],[[32,33]],[[7,34]],[[6,7,34]],[[7,7]],[[6,7,7]],[3,35],[[6,3],35],0,0,0,0,[3,2],[[]],[[]],[[]],[[],36],0,0,[7,15],[[6,7],15],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],10],[[],10],[[],10],[[],10],0,0,0,0,0,0,[[]],[[]],[14,14],[[]],[[14,20],[[22,[21]]]],[[]],[37],[[]],[6,38],[6,[[22,[39]]]],[[]],[[],22],[[],22],[[],10],[14,[[11,[6]]]],[[6,40]],0,[[]],[[]],[[[41,[[11,[7]]]],3,42]],[[3,42]],[17,43],[[17,20],[[22,[21]]]],[[]],[[]],[17,15],[17,15],[17,3],[[3,42],17],[[[41,[[11,[7]]]],3,42],17],[17,[[11,[7]]]],[[17,33]],[[],22],[[],22],[[],10],0,0,0,0,0,0,0,0,0,0,[3,[[11,[32]]]],[[32,3],[[11,[32]]]],[[32,3],[[11,[32]]]],[32,2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[42,4],[32,4],[32,32],[[[46,[[0,[44,45]]]]],[[46,[[0,[44,45]]]]]],[[[48,[[0,[44,47]]]]],[[48,[[0,[44,47]]]]]],[[]],[[]],[[]],[[18,32],15],[47,[[48,[47]]]],[45,[[46,[45]]]],[[18,18],15],[[32,32],15],[[49,49],15],[[],15],[[],15],[[],15],[[18,[0,[[50,[2]],51]]],[[11,[32]]]],[[18,20],[[22,[21]]]],[[18,20],[[22,[21]]]],[[42,20],[[22,[21]]]],[[42,20],[[22,[21]]]],[[32,20],[[22,[21]]]],[[32,20],[[22,[21]]]],[[49,20],[[22,[21]]]],[[43,20],[[22,[21]]]],[[[46,[45]],20],[[22,[21]]]],[[[46,[45]],20],[[22,[21]]]],[[[48,[47]],20],[[22,[21]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[32,27]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[18],[[]],[18,15],[42,15],[18,43],[18,52],[42,52],[32,2],[[[53,[2]],4],18],[43,[[11,[32]]]],[[32,33]],[[42,33]],[[49,32,33]],[[[46,[45]],32,33]],[[[48,[47]],32,33]],[[32,15]],[[32,47]],[[32,54]],[[32,55]],[[32,56]],[[32,57]],[[32,2]],[[32,58]],[[32,59]],[[]],[[]],[[]],[[],36],[[],36],[[],36],[[],36],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],0,0,0,0,[[]],[[]],[[]],[[]],[[[60,[44]]],[[60,[44]]]],[[[28,[44]]],[[28,[44]]]],[[]],[[]],[60,6],[[[60,[47]],20],23],[[[28,[47]],20],23],[[]],[[]],[[],28],[60],[28],[60],[28],[[[61,[60]]],61],[[[61,[28]]],61],[[[61,[60]]],61],[[[61,[28]]],61],[5,28],[[]],[[]],[[]],[[]],[60],[28],[[[61,[[60,[62]]]],63],64],[[[61,[[28,[62]]]],63],64],[28,5],[28,5],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],10],[[],10],[[],60],[[[41,[6]]],60],0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[16,16],[65,65],[[]],[[]],[[16,16],8],[[],16],[[16,16],15],[[16,1],15],[[],15],[[16,20],[[22,[21]]]],[[16,20],[[22,[21]]]],[[65,20],[[22,[21]]]],[[65,20],[[22,[21]]]],[[]],[1,16],[[[11,[1]]],16],[[]],[1,16],[2,[[22,[16]]]],[[16,1],15],[[16,16],15],[[16,16],15],[[16,1],15],[[16,27]],[[]],[[]],[16,[[11,[1]]]],[[16,1],15],[[16,16],15],[[16,1],15],[[16,16],15],[[16,16],[[11,[8]]]],[[16,1],[[11,[8]]]],[66],[[]],[[]],[[],36],[[],36],[[],22],[[],22],[[],22],[[],22],[[],10],[[],10],0,0,0,0,0,0,0,[[],[[11,[7]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[41,[[11,[7]]]],3,42],5],[[7,3,42],31],[7,7],[[]],[[31,32],15],[[34,32],15],[[],5],[67,5],[68],[67],[5,68],[5,67],[[7,7],15],[[],15],[67,5],[[5,[0,[69,51]]],[[11,[32]]]],[31,18],[[68,20],23],[[67,20],23],[[7,20],[[22,[21]]]],[[31,20],[[22,[21]]]],[[34,20],[[22,[21]]]],[[5,[41,[[11,[7]]]]],5],[[]],[[]],[[]],[[]],[[]],[70,7],[59,7],[[5,[0,[69,51]]],15],[[7,27]],[5,[[11,[7]]]],[67,[[11,[7]]]],[[5,40]],[[]],[[]],[[]],[[]],[[]],[7,70],[7,59],[31,15],[5,15],[31,15],[34,15],[5,15],[31,15],[34,52],[5,[[11,[3]]]],[31,3],[[3,42],5],[[3,42],31],[42,34],[3,5],[[3,42],5],[[3,42],31],[[],5],[5,5],[31,[[11,[7]]]],[[5,[0,[69,51]],19],5],[[31,33]],[[34,33]],[[5,42],5],[[]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],10],[[],10],[[],10],[[],10],[[],10],[31,42],[[5,40],11],0,0,0,0,0,[[],35],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[35,35],[71,71],[[]],[[]],[7,7],[[],9],[[],71],[10,11],[38],[7],[3,15],[[71,3],15],[7],[[71,7]],[17],[[71,17]],[17,15],[7],[[71,7]],[[39,20],[[22,[21]]]],[[39,20],[[22,[21]]]],[[38,20],[[22,[21]]]],[[35,20],[[22,[21]]]],[[71,20],[[22,[21]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[35,15],[35,15],[35,15],[[],[[11,[16]]]],[[],35],[[],71],[31,7],[[71,31],7],[6],[66],[[7,34]],[[71,7,34]],[[7,7]],[[71,7,7]],[3,35],[[71,3],35],[[[0,[12,24,25]]],38],[[[0,[12,24,25]]],[[22,[39]]]],[[],35],[[]],[[]],[[],36],[7,15],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],10],[[],10],[[],10],[[],10],[[[0,[12,24,25]],40]]],"c":[46,47,549],"p":[[3,"Level"],[15,"str"],[3,"Metadata"],[3,"Identifier"],[3,"Span"],[3,"Dispatch"],[3,"Id"],[4,"Ordering"],[3,"Current"],[3,"TypeId"],[4,"Option"],[8,"Subscriber"],[8,"Any"],[3,"WeakDispatch"],[15,"bool"],[3,"LevelFilter"],[3,"Event"],[3,"FieldSet"],[8,"Value"],[3,"Formatter"],[3,"Error"],[4,"Result"],[6,"Result"],[8,"Send"],[8,"Sync"],[3,"ParseLevelError"],[8,"Hasher"],[3,"Instrumented"],[15,"u32"],[3,"Kind"],[3,"Attributes"],[3,"Field"],[8,"Visit"],[3,"Record"],[3,"Interest"],[3,"String"],[8,"FnMut"],[3,"DefaultGuard"],[3,"SetGlobalDefaultError"],[8,"FnOnce"],[8,"Into"],[3,"ValueSet"],[3,"Iter"],[8,"Clone"],[8,"Display"],[3,"DisplayValue"],[8,"Debug"],[3,"DebugValue"],[3,"Empty"],[8,"Borrow"],[8,"Sized"],[15,"usize"],[15,"slice"],[8,"Error"],[15,"f64"],[15,"i128"],[15,"i64"],[15,"u128"],[15,"u64"],[3,"WithDispatch"],[3,"Pin"],[8,"Future"],[3,"Context"],[4,"Poll"],[3,"ParseLevelFilterError"],[3,"Demand"],[3,"EnteredSpan"],[3,"Entered"],[8,"AsField"],[3,"NonZeroU64"],[3,"NoSubscriber"],[8,"Instrument"],[8,"WithSubscriber"],[8,"AsId"]]},\
"tracing_core":{"doc":"Core primitives for <code>tracing</code>.","t":"IDDDCCDDDDILLLLLLLLLLLLLLLLLALLLLLLLLLLLLLALLKKLLLLLLLLLLAKLKALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLOLLLLLLLLLLLLLLLLLAKOLKLLLLLKKLKAALLLLLLLLLLLLLLLLLLLLLLLLLLLLLIDDLLLLLLLLLLLLLLLLKLLFFLKLLLLLLLLDDDDLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLFFLLLLLLLLLLLLLFDLLLLLLLLLLDDDDDDIDILLLLLLLLLLLLLLLLLLLFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLSSSSSSSSDDDDSDDSSSSSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDILLLLLLLLLLLLLLLLLLKLKLKLLKLLLLLLLLLLLLLLLLLKLLKLKLLLLLLLLLLLLL","n":["Callsite","Dispatch","Event","Field","Interest","Kind","Level","LevelFilter","Metadata","Once","Subscriber","as_ref","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","call_once","call_once_force","callsite","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_span","cmp","cmp","current_span","default","dispatcher","downcast_raw","drop_span","enabled","enter","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","event","event","event_enabled","exit","field","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from_str","from_str","ge","ge","ge","ge","gt","gt","gt","gt","hash","hash","hash","identify_callsite","into","into","into","into","into","into","into","is_completed","le","le","le","le","lt","lt","lt","lt","max_level_hint","metadata","metadata","metadata","new","new_span","on_register_dispatch","partial_cmp","partial_cmp","partial_cmp","partial_cmp","record","record_follows_from","register_callsite","set_interest","span","subscriber","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","try_close","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","Callsite","DefaultCallsite","Identifier","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","eq","equivalent","fmt","fmt","from","from","hash","interest","into","into","metadata","metadata","new","rebuild_interest_cache","register","register","set_interest","set_interest","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","DefaultGuard","Dispatch","SetGlobalDefaultError","WeakDispatch","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","clone_span","current_span","downcast_ref","downgrade","drop","drop_span","enabled","enter","event","exit","fmt","fmt","fmt","fmt","from","from","from","get_default","into","into","into","is","new","new_span","none","provide","record","record_follows_from","register_callsite","set_default","set_global_default","to_owned","to_string","try_close","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","upgrade","with_default","Event","child_of","dispatch","fields","is_contextual","is_root","metadata","new","new_child_of","parent","record","DebugValue","DisplayValue","Empty","Field","FieldSet","Iter","Value","ValueSet","Visit","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","callsite","callsite","clone","clone","clone_into","clone_into","contains","debug","display","eq","eq","equivalent","equivalent","field","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","into","into","into","into","into","into","into_iter","into_iter","is_empty","is_empty","iter","len","len","name","new","next","record","record","record","record","record","record_bool","record_debug","record_error","record_f64","record_i128","record_i64","record_str","record_u128","record_u64","to_owned","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","DEBUG","DEBUG","ERROR","ERROR","EVENT","HINT","INFO","INFO","Kind","Level","LevelFilter","Metadata","OFF","ParseLevelError","ParseLevelFilterError","SPAN","TRACE","TRACE","WARN","WARN","as_str","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","callsite","clone","clone","clone_into","clone_into","current","eq","equivalent","fields","file","fmt","fmt","fmt","fmt","fmt","from","from","from","from_level","hint","into","into","into","into_level","is_event","is_event","is_hint","is_span","is_span","level","line","module_path","name","new","provide","provide","target","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","Attributes","Current","Id","Record","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","child_of","clone","clone_into","contains","contains","eq","equivalent","fields","fmt","fmt","fmt","fmt","from","from","from","from","from_non_zero_u64","from_u64","hash","id","into","into","into","into","into_inner","into_non_zero_u64","into_u64","is_contextual","is_empty","is_empty","is_known","is_root","len","metadata","metadata","new","new","new","new_root","none","parent","record","record","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","values","Interest","NoSubscriber","Subscriber","always","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","clone_span","current_span","default","downcast_raw","downcast_ref","downcast_ref","downcast_ref","downcast_ref","drop_span","enabled","enabled","enter","enter","event","event","event_enabled","exit","exit","fmt","fmt","from","from","into","into","is","is","is","is","is_always","is_never","is_sometimes","max_level_hint","never","new","new_span","new_span","on_register_dispatch","record","record","record_follows_from","record_follows_from","register_callsite","register_callsite","sometimes","to_owned","to_owned","try_close","try_from","try_from","try_into","try_into","type_id","type_id"],"q":[[0,"tracing_core"],[158,"tracing_core::callsite"],[192,"tracing_core::dispatcher"],[249,"tracing_core::event"],[260,"tracing_core::field"],[365,"tracing_core::metadata"],[442,"tracing_core::span"],[511,"tracing_core::subscriber"]],"d":["Trait implemented by callsites.","<code>Dispatch</code> trace data to a <code>Subscriber</code>.","<code>Event</code>s represent single points in time where something …","An opaque key allowing <em>O</em>(1) access to a field in a <code>Span</code>’…","","","Describes the level of verbosity of a span or event.","A filter comparable to a verbosity <code>Level</code>.","Metadata describing a span or event.","A synchronization primitive which can be used to run a …","Trait representing the functions required to collect trace …","","","","","","","","","","","","","","","","Performs an initialization routine once and only once. The …","Performs the same function as <code>call_once()</code> except ignores …","Callsites represent the source locations from which spans …","","","","","","","","","Notifies the subscriber that a span ID has been cloned.","","","Returns a type representing this subscriber’s view of …","Returns the current default dispatcher","Dispatches trace events to <code>Subscriber</code>s.","If <code>self</code> is the same type as the provided <code>TypeId</code>, returns …","<strong>This method is deprecated.</strong>","Returns true if a span or event with the specified metadata…","Records that a span has been entered.","","","","","","","","","","","Events represent single points in time during the …","Records that an <code>Event</code> has occurred.","Determine if an <code>Event</code> should be recorded.","Records that a span has been exited.","<code>Span</code> and <code>Event</code> key-value data.","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","Statically constructs an <code>Identifier</code> for the provided …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if some <code>call_once()</code> call has completed …","","","","","","","","","Returns the highest verbosity level that this <code>Subscriber</code> …","Metadata describing trace data.","Returns the metadata associated with the callsite.","Statically constructs new span metadata.","Creates a new <code>Once</code> value.","Visit the construction of a new span, returning a new span …","Invoked when this subscriber becomes a <code>Dispatch</code>.","","","","","Record a set of values on a span.","Adds an indication that <code>span</code> follows from the span with …","Registers a new callsite with this subscriber, returning …","Sets the <code>Interest</code> for this callsite.","Spans represent periods of time in the execution of a …","Collectors collect and record trace data.","","","","","","","","Notifies the subscriber that a span ID has been dropped, …","","","","","","","","","","","","","","","","","","","","","","Trait implemented by callsites.","A default <code>Callsite</code> implementation.","Uniquely identifies a <code>Callsite</code>","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the callsite’s cached <code>Interest</code>, or registers it …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns the metadata associated with the callsite.","","Returns a new <code>DefaultCallsite</code> with the specified <code>Metadata</code>.","Clear and reregister interest on every <code>Callsite</code>","Register a new <code>Callsite</code> with the global registry.","Registers this callsite with the global callsite registry.","Sets the <code>Interest</code> for this callsite.","","","","","","","","","A guard that resets the current default dispatcher to the …","<code>Dispatch</code> trace data to a <code>Subscriber</code>.","Returned if setting the global dispatcher fails.","<code>WeakDispatch</code> is a version of <code>Dispatch</code> that holds a …","","","","","","","","","Notifies the subscriber that a span ID has been cloned.","Returns a type representing this subscriber’s view of …","Returns some reference to the <code>Subscriber</code> this <code>Dispatch</code> …","Creates a <code>WeakDispatch</code> from this <code>Dispatch</code>.","","Notifies the subscriber that a span ID has been dropped.","Returns true if a span with the specified metadata would be","Records that a span has been can_enter.","Records that an <code>Event</code> has occurred.","Records that a span has been exited.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Executes a closure with a reference to this thread’s …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if this <code>Dispatch</code> forwards to a <code>Subscriber</code> of …","Returns a <code>Dispatch</code> that forwards to the given <code>Subscriber</code>.","Record the construction of a new span, returning a new ID …","Returns a new <code>Dispatch</code> that discards events and spans.","","Record a set of values on a span.","Adds an indication that <code>span</code> follows from the span with …","Registers a new callsite with this collector, returning …","Sets the dispatch as the default dispatch for the duration …","Sets this dispatch as the global default for the duration …","","","Notifies the subscriber that a span ID has been dropped, …","","","","","","","","","","Attempts to upgrade this <code>WeakDispatch</code> to a <code>Dispatch</code>.","Sets this dispatch as the default for the duration of a …","<code>Event</code>s represent single points in time where something …","Constructs a new <code>Event</code> with the specified metadata and set …","Constructs a new <code>Event</code> with the specified metadata and set …","Returns an iterator over the set of values on this <code>Event</code>.","Returns true if the new event’s parent should be …","Returns true if the new event should be a root.","Returns metadata describing this <code>Event</code>.","Returns a new <code>Event</code> in the current span, with the …","Returns a new <code>Event</code> as a child of the specified span, with …","Returns the new event’s explicitly-specified parent, if …","Visits all the fields on this <code>Event</code> with the specified …","A <code>Value</code> which serializes as a string using <code>fmt::Debug</code>.","A <code>Value</code> which serializes using <code>fmt::Display</code>.","An empty field.","An opaque key allowing <em>O</em>(1) access to a field in a <code>Span</code>’…","Describes the fields present on a span.","An iterator over a set of fields.","A field value of an erased type.","A set of fields and values for a span.","Visits typed values.","","","","","","","","","","","","","Returns an <code>Identifier</code> that uniquely identifies the <code>Callsite</code>","Returns an <code>Identifier</code> that uniquely identifies the <code>Callsite</code>","","","","","Returns <code>true</code> if <code>self</code> contains the given <code>field</code>.","Wraps a type implementing <code>fmt::Debug</code> as a <code>Value</code> that can be","Wraps a type implementing <code>fmt::Display</code> as a <code>Value</code> that can …","","","","","Returns the <code>Field</code> named <code>name</code>, or <code>None</code> if no such field …","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Returns whether or not this <code>FieldSet</code> has fields.","Returns true if this <code>ValueSet</code> contains <em>no</em> values.","Returns an iterator over the <code>Field</code>s in this <code>FieldSet</code>.","Returns the number of fields in this <code>FieldSet</code>.","Returns the number of fields in this <code>ValueSet</code> that would …","Returns a string representing the name of the field.","Constructs a new <code>FieldSet</code> with the given array of field …","","Visits this value with the given <code>Visitor</code>.","Visits all the fields in this <code>ValueSet</code> with the provided …","","","","Visit a boolean value.","Visit a value implementing <code>fmt::Debug</code>.","Records a type implementing <code>Error</code>.","Visit a double-precision floating point value.","Visit a signed 128-bit integer value.","Visit a signed 64-bit integer value.","Visit a string value.","Visit an unsigned 128-bit integer value.","Visit an unsigned 64-bit integer value.","","","","","","","","","","","","","","","","","","","","","","","","The “debug” level.","The “debug” level.","The “error” level.","The “error” level.","<code>Event</code> callsite","<code>enabled!</code> callsite. <code>Subscriber</code>s can assume this <code>Kind</code> means …","The “info” level.","The “info” level.","Indicates whether the callsite is a span or event.","Describes the level of verbosity of a span or event.","A filter comparable to a verbosity <code>Level</code>.","Metadata describing a span or event.","The “off” level.","Returned if parsing a <code>Level</code> fails.","Indicates that a string could not be parsed to a valid …","<code>Span</code> callsite","The “trace” level.","The “trace” level.","The “warn” level.","The “warn” level.","Returns the string representation of the <code>Level</code>.","","","","","","","Returns an opaque <code>Identifier</code> that uniquely identifies the …","","","","","Returns a <code>LevelFilter</code> that matches the most verbose <code>Level</code> …","","","Returns the names of the fields on the described span or …","Returns the name of the source code file where the span …","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns a <code>LevelFilter</code> that enables spans and events with …","Sets that this <code>Kind</code> is a hint.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns the most verbose <code>Level</code> that this filter accepts, …","Returns true if the callsite kind is <code>Event</code>.","Return true if the callsite kind is <code>Event</code>","Return true if the callsite kind is <code>Hint</code>","Return true if the callsite kind is <code>Span</code>.","Return true if the callsite kind is <code>Span</code>","Returns the level of verbosity of the described span or …","Returns the line number in the source code file where the …","Returns the path to the Rust module where the span …","Returns the name of the span.","Construct new metadata for a span or event, with a name, …","","","Returns a string describing the part of the system where …","","","","","","","","","","","","","","Attributes provided to a <code>Subscriber</code> describing a new span …","Indicates what the <code>Subscriber</code> considers the “current” …","Identifies a span within the context of a subscriber.","A set of fields recorded by a span.","","","","","","","","","Returns <code>Attributes</code> describing a new child span of the …","","","Returns <code>true</code> if this set of <code>Attributes</code> contains a value …","Returns <code>true</code> if this <code>Record</code> contains a value for the given …","","","Returns the set of all fields defined by this span’s …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Constructs a new span ID from the given <code>NonZeroU64</code>.","Constructs a new span ID from the given <code>u64</code>.","","Borrows the <code>Id</code> of the current span, if one exists and is …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consumes <code>self</code> and returns the span <code>Id</code> and <code>Metadata</code> of the …","Returns the span’s ID as a <code>NonZeroU64</code>.","Returns the span’s ID as a <code>u64</code>.","Returns true if the new span’s parent should be …","Returns true if this set of <code>Attributes</code> contains <em>no</em> values.","Returns true if this <code>Record</code> contains <em>no</em> values.","Returns <code>true</code> if the <code>Subscriber</code> that constructed this …","Returns true if the new span should be a root.","Returns the number of fields that would be visited from …","Returns a reference to the new span’s metadata.","Borrows the <code>Metadata</code> of the current span, if one exists …","Returns <code>Attributes</code> describing a new child span of the …","Constructs a new <code>Record</code> from a <code>ValueSet</code>.","Constructs a new <code>Current</code> that indicates the current …","Returns <code>Attributes</code> describing a new span at the root of …","Constructs a new <code>Current</code> that indicates the current …","Returns the new span’s explicitly-specified parent, if …","Records all the fields in this set of <code>Attributes</code> with the …","Records all the fields in this <code>Record</code> with the provided …","","","","","","","","","","","","","","Returns a reference to a <code>ValueSet</code> containing any values …","Indicates a <code>Subscriber</code>’s interest in a particular …","A no-op <code>Subscriber</code>.","Trait representing the functions required to collect trace …","Returns an <code>Interest</code> indicating the subscriber is always …","","","","","","","","","Notifies the subscriber that a span ID has been cloned.","Returns a type representing this subscriber’s view of …","","If <code>self</code> is the same type as the provided <code>TypeId</code>, returns …","Returns some reference to this <code>Subscriber</code> value if it is …","Returns some reference to this <code>[</code>Subscriber…","Returns some reference to this <code>Subscriber</code> value if it is …","Returns some reference to this <code>Subscriber</code> value if it is …","<strong>This method is deprecated.</strong>","Returns true if a span or event with the specified metadata…","","Records that a span has been entered.","","Records that an <code>Event</code> has occurred.","","Determine if an <code>Event</code> should be recorded.","Records that a span has been exited.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if this <code>Subscriber</code> is the same type as <code>T</code>.","Returns <code>true</code> if this <code>Subscriber</code> is the same type as <code>T</code>.","Returns <code>true</code> if this <code>Subscriber</code> is the same type as <code>T</code>.","Returns <code>true</code> if this <code>Subscriber</code> is the same type as <code>T</code>.","Returns <code>true</code> if the subscriber is always interested in …","Returns <code>true</code> if the subscriber is never interested in …","Returns <code>true</code> if the subscriber is sometimes interested in …","Returns the highest verbosity level that this <code>Subscriber</code> …","Returns an <code>Interest</code> indicating that the subscriber is …","Returns a new <code>NoSubscriber</code>.","Visit the construction of a new span, returning a new span …","","Invoked when this subscriber becomes a <code>Dispatch</code>.","Record a set of values on a span.","","Adds an indication that <code>span</code> follows from the span with …","","Registers a new callsite with this subscriber, returning …","","Returns an <code>Interest</code> indicating the subscriber is sometimes …","","","Notifies the subscriber that a span ID has been dropped, …","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,1,13,5,15,1,6,7,3,13,5,15,1,6,7,3,3,3,0,5,1,6,7,5,1,6,7,20,6,7,20,5,0,20,20,20,20,13,1,6,6,7,7,13,1,6,7,0,20,20,20,0,13,5,15,1,1,6,6,7,7,3,13,5,5,15,1,6,7,7,7,3,6,7,6,6,7,7,6,6,7,7,1,6,7,0,13,5,15,1,6,7,3,3,6,6,7,7,6,6,7,7,20,0,31,0,3,20,20,6,6,7,7,20,20,20,31,0,0,5,1,6,7,1,6,7,20,13,5,15,1,6,7,3,13,5,15,1,6,7,3,13,5,15,1,6,7,3,0,0,0,29,30,29,30,29,29,29,29,29,30,29,30,29,30,29,30,31,30,30,0,0,30,31,30,29,29,30,29,30,29,30,0,0,0,0,35,32,34,35,32,34,32,32,5,5,5,5,34,5,5,5,5,5,35,35,32,34,35,32,34,0,35,32,34,5,5,5,5,35,5,5,5,0,0,32,35,5,35,32,34,35,32,34,35,32,34,32,0,0,15,15,15,15,15,15,15,15,15,15,0,0,0,0,0,0,0,0,0,47,39,48,40,44,46,47,39,48,40,44,46,39,1,44,46,44,46,47,0,0,47,48,47,48,47,47,47,39,39,51,51,48,40,44,44,46,47,39,48,40,44,46,47,39,48,40,44,46,47,40,47,39,47,47,39,1,47,40,51,39,48,44,46,41,41,41,41,41,41,41,41,41,44,46,47,39,44,47,39,48,40,44,46,47,39,48,40,44,46,47,39,48,40,44,46,6,7,6,7,60,60,6,7,0,0,0,0,7,0,0,60,6,7,6,7,6,60,61,23,60,61,23,13,60,61,60,61,7,60,60,13,13,60,61,61,23,23,60,61,23,7,60,60,61,23,7,13,60,60,13,60,13,13,13,13,13,61,23,13,60,61,61,23,60,61,23,60,61,23,60,61,23,0,0,0,0,8,25,26,10,8,25,26,10,25,8,8,25,26,8,8,25,8,25,26,10,8,25,26,10,8,8,8,10,8,25,26,10,10,8,8,25,25,26,10,25,26,25,10,25,26,10,25,10,25,25,26,8,8,25,26,10,8,25,26,10,8,25,26,10,25,0,0,0,27,27,64,27,64,27,64,27,64,20,20,64,20,20,20,20,20,20,20,64,20,64,20,64,20,20,64,27,64,27,64,27,64,20,20,20,20,27,27,27,20,27,64,20,64,20,20,64,20,64,20,64,27,27,64,20,27,64,27,64,27,64],"f":[0,0,0,0,0,0,0,0,0,0,0,[1,2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[3,4]],[[3,4]],0,[5,5],[1,1],[6,6],[7,7],[[]],[[]],[[]],[[]],[8,8],[[6,6],9],[[7,7],9],[[],10],[[],5],0,[11,12],[8],[13,14],[8],[[13,13],14],[[1,1],14],[[6,6],14],[[6,7],14],[[7,7],14],[[7,6],14],[[],14],[[],14],[[],14],[[],14],0,[15],[15,14],[8],0,[[13,16],17],[[5,16],17],[[15,16],17],[[1,16],17],[[1,16],17],[[6,16],17],[[6,16],17],[[7,16],17],[[7,16],17],[[3,16],[[19,[18]]]],[[]],[[[0,[20,21,22]]],5],[[]],[[]],[[]],[[]],[[[12,[6]]],7],[6,7],[[]],[[]],[2,[[19,[6,23]]]],[2,[[19,[7]]]],[[6,6],14],[[6,7],14],[[7,7],14],[[7,6],14],[[6,7],14],[[6,6],14],[[7,6],14],[[7,7],14],[[1,24]],[[6,24]],[[7,24]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[3,14],[[6,7],14],[[6,6],14],[[7,7],14],[[7,6],14],[[6,7],14],[[6,6],14],[[7,7],14],[[7,6],14],[[],[[12,[7]]]],0,[[],13],0,[[],3],[25,8],[5],[[6,6],[[12,[9]]]],[[6,7],[[12,[9]]]],[[7,7],[[12,[9]]]],[[7,6],[[12,[9]]]],[[8,26]],[[8,8]],[13,27],[27],0,0,[[]],[[]],[[]],[[]],[[],28],[[],28],[[],28],[8,14],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],0,0,0,[[]],[[]],[[]],[[]],[29,29],[[]],[[29,29],14],[[],14],[[29,16],17],[[30,16],17],[[]],[[]],[[29,24]],[30,27],[[]],[[]],[[],13],[30,13],[13,30],[[]],[31],[30,27],[27],[[30,27]],[[]],[[],19],[[],19],[[],19],[[],19],[[],11],[[],11],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[32,32],[[]],[[5,8],8],[5,10],[5,[[12,[33]]]],[5,32],[34],[[5,8]],[[5,13],14],[[5,8]],[[5,15]],[[5,8]],[[35,16],17],[[35,16],17],[[32,16],17],[[34,16],17],[[]],[[]],[[]],[36],[[]],[[]],[[]],[5,14],[[[0,[20,21,22]]],5],[[5,25],8],[[],5],[37],[[5,8,26]],[[5,8,8]],[[5,13],27],[5,34],[5,[[19,[35]]]],[[]],[[],28],[[5,8],14],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],11],[[],11],[[],11],[32,[[12,[5]]]],[[5,4]],0,[[[38,[[12,[8]]]],13,39]],[[13,39]],[15,40],[15,14],[15,14],[15,13],[[13,39],15],[[[38,[[12,[8]]]],13,39],15],[15,[[12,[8]]]],[[15,41]],0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[39,29],[1,29],[[[44,[[0,[42,43]]]]],[[44,[[0,[42,43]]]]]],[[[46,[[0,[42,45]]]]],[[46,[[0,[42,45]]]]]],[[]],[[]],[[47,1],14],[45,[[46,[45]]]],[43,[[44,[43]]]],[[47,47],14],[[48,48],14],[[],14],[[],14],[[47,[0,[[49,[2]],50]]],[[12,[1]]]],[[47,16],17],[[47,16],17],[[39,16],17],[[39,16],17],[[51,16],17],[[51,16],17],[[48,16],17],[[40,16],17],[[[44,[43]],16],17],[[[44,[43]],16],17],[[[46,[45]],16],17],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[47],[[]],[47,14],[39,14],[47,40],[47,52],[39,52],[1,2],[[[53,[2]],29],47],[40,[[12,[1]]]],[[1,41]],[[39,41]],[[48,1,41]],[[[44,[43]],1,41]],[[[46,[45]],1,41]],[[1,14]],[[1,45]],[[1,54]],[[1,55]],[[1,56]],[[1,57]],[[1,2]],[[1,58]],[[1,59]],[[]],[[]],[[],28],[[],28],[[],28],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[6,2],[[]],[[]],[[]],[[]],[[]],[[]],[13,29],[60,60],[61,61],[[]],[[]],[[],7],[[60,60],14],[[],14],[13,47],[13,[[12,[2]]]],[[60,16],17],[[61,16],17],[[61,16],17],[[23,16],17],[[23,16],17],[[]],[[]],[[]],[6,7],[60,60],[[]],[[]],[[]],[7,[[12,[6]]]],[13,14],[60,14],[60,14],[13,14],[60,14],[13,6],[13,[[12,[62]]]],[13,[[12,[2]]]],[13,2],[[2,2,6,[12,[2]],[12,[62]],[12,[2]],47,60],13],[37],[37],[13,2],[[]],[[]],[[],28],[[],28],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],11],[[],11],[[],11],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[8,13,39],25],[8,8],[[]],[[25,1],14],[[26,1],14],[[8,8],14],[[],14],[25,47],[[8,16],17],[[25,16],17],[[26,16],17],[[10,16],17],[[]],[[]],[[]],[[]],[63,8],[59,8],[[8,24]],[10,[[12,[8]]]],[[]],[[]],[[]],[[]],[10,12],[8,63],[8,59],[25,14],[25,14],[26,14],[10,14],[25,14],[26,52],[25,13],[10,[[12,[13]]]],[[13,39],25],[39,26],[[8,13],10],[[13,39],25],[[],10],[25,[[12,[8]]]],[[25,41]],[[26,41]],[[]],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],11],[[],11],[[],11],[[],11],[25,39],0,0,0,[[],27],[[]],[[]],[[]],[[]],[27,27],[64,64],[[]],[[]],[8,8],[[],10],[[],64],[11,12],[20,[[12,[33]]]],[20,[[12,[33]]]],[20,[[12,[33]]]],[20,[[12,[33]]]],[8],[13,14],[[64,13],14],[8],[[64,8]],[15],[[64,15]],[15,14],[8],[[64,8]],[[27,16],17],[[64,16],17],[[]],[[]],[[]],[[]],[20,14],[20,14],[20,14],[20,14],[27,14],[27,14],[27,14],[[],[[12,[7]]]],[[],27],[[],64],[25,8],[[64,25],8],[5],[[8,26]],[[64,8,26]],[[8,8]],[[64,8,8]],[13,27],[[64,13],27],[[],27],[[]],[[]],[8,14],[[],19],[[],19],[[],19],[[],19],[[],11],[[],11]],"c":[44,209,531],"p":[[3,"Field"],[15,"str"],[3,"Once"],[8,"FnOnce"],[3,"Dispatch"],[3,"Level"],[3,"LevelFilter"],[3,"Id"],[4,"Ordering"],[3,"Current"],[3,"TypeId"],[4,"Option"],[3,"Metadata"],[15,"bool"],[3,"Event"],[3,"Formatter"],[6,"Result"],[3,"Error"],[4,"Result"],[8,"Subscriber"],[8,"Send"],[8,"Sync"],[3,"ParseLevelError"],[8,"Hasher"],[3,"Attributes"],[3,"Record"],[3,"Interest"],[3,"String"],[3,"Identifier"],[3,"DefaultCallsite"],[8,"Callsite"],[3,"WeakDispatch"],[8,"Any"],[3,"DefaultGuard"],[3,"SetGlobalDefaultError"],[8,"FnMut"],[3,"Demand"],[8,"Into"],[3,"ValueSet"],[3,"Iter"],[8,"Visit"],[8,"Clone"],[8,"Display"],[3,"DisplayValue"],[8,"Debug"],[3,"DebugValue"],[3,"FieldSet"],[3,"Empty"],[8,"Borrow"],[8,"Sized"],[8,"Value"],[15,"usize"],[15,"slice"],[8,"Error"],[15,"f64"],[15,"i128"],[15,"i64"],[15,"u128"],[15,"u64"],[3,"Kind"],[3,"ParseLevelFilterError"],[15,"u32"],[3,"NonZeroU64"],[3,"NoSubscriber"]]},\
"uni_app":{"doc":"","t":"DENNNNNNNNNLLLLLLALLLAMMMLLLMMMAMLLLLLLLMDDDMMLLLLLLMLLLLLLMMMMLLLLLLLLLMMMMLLLLLLLLLLLLDDGGLLLLLLLLLLLLLLLLLLDLLLMLLLLLLLLFLLLLLL","n":["AppConfig","AppEvent","CharEvent","CloseRequested","FileDropped","KeyDown","KeyUp","MouseDown","MousePos","MouseUp","Resized","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","events","fmt","from","from","fs","fullscreen","headless","intercept_close_request","into","into","new","resizable","show_cursor","size","sys","title","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vsync","KeyDownEvent","KeyUpEvent","MouseButtonEvent","alt","alt","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","button","clone","clone","clone","clone_into","clone_into","clone_into","code","code","ctrl","ctrl","fmt","fmt","fmt","from","from","from","into","into","into","key","key","shift","shift","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","File","FileSystem","IoError","IoErrorKind","borrow","borrow","borrow_mut","borrow_mut","from","from","into","into","is_ready","open","read_binary","read_text","try_from","try_from","try_into","try_into","type_id","type_id","App","borrow","borrow_mut","canvas","events","exit","from","get_dropped_file","get_params","get_screen_resolution","hidpi_factor","into","new","now","print","run","set_fullscreen","try_from","try_into","type_id"],"q":[[0,"uni_app"],[41,"uni_app::events"],[88,"uni_app::fs"],[110,"uni_app::sys"]],"d":["game window configuration","window event types","text input events","window close button was pressed and […","a file has been dropped on the game window. Get it with …","keyboard press","keyboard release","mouse button press","mouse cursor position in pixels from the window top-left","mouse button release","window resize","","","","","","","keyboard and mouse events","","Returns the argument unchanged.","Returns the argument unchanged.","filesystem api","start in full screen (native target only)","start the program without actually creating a window, for …","whether clicking on the window close button exits the …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","whether user can resize the window (native target only)","whether the mouse cursor is visible while in the window","the window/canvas size in pixels","main application struct","the window title (only visible on native target)","","","","","","","","sync frames with screen frequency (can only be disabled on …","data associated with a key press event Possible values for …","data associated with a key release event Possible values …","data associated with a mouse button press/release event","whether an alt key is pressed","whether an alt key is pressed","","","","","","","the button number (0=left, 1=middle, 2=right, …)","","","","","","","scancode : top left letter is “KeyQ” even on an azerty …","scancode : top left letter is “KeyQ” even on an azerty …","whether a control key is pressed","whether a control key is pressed","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","virtual key code : top left letter is “KeyQ” on …","virtual key code : top left letter is “KeyQ” on …","whether a shift key is pressed","whether a shift key is pressed","","","","","","","","","","","","","synchronous (native) / asynchronous (web) file API","the root filesystem API","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","return true if the file has been loaded On native target, …","open a file. For a file to be accessible from both native …","Once the file has been loaded (see <code>File::is_ready</code>), …","Once the file has been loaded (see <code>File::is_ready</code>), …","","","","","","","the main application struct","","","return the opengl context for this window","","exit current process (close the game window). On web …","Returns the argument unchanged.","","return the command line / URL parameters","return the screen resolution in physical pixels","returns the HiDPI factor for current screen","Calls <code>U::from(self)</code>.","create a new game window","return the time since the start of the program in seconds","print a message on standard output (native) or js console …","start the game loop, calling provided callback every frame","activate or deactivate fullscreen. only works on native …","","",""],"i":[0,0,1,1,1,1,1,1,1,1,1,6,1,6,1,1,1,0,1,6,1,0,6,6,6,6,1,6,6,6,6,0,6,1,6,1,6,1,6,1,6,0,0,0,10,11,9,10,11,9,10,11,9,9,10,11,9,10,11,10,11,10,11,9,10,11,9,10,11,9,10,11,10,11,10,11,9,10,11,9,10,11,9,10,11,9,10,11,0,0,0,0,24,12,24,12,24,12,24,12,12,24,12,12,24,12,24,12,24,12,0,18,18,18,18,18,18,18,18,18,18,18,18,0,18,18,18,18,18,18],"f":[0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[1,1],[[]],0,[[1,2],3],[[]],[[]],0,0,0,0,[[]],[[]],[[[5,[4]]],6],0,0,0,0,0,[[]],[[],7],[[],7],[[],7],[[],7],[[],8],[[],8],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,[9,9],[10,10],[11,11],[[]],[[]],[[]],0,0,0,0,[[9,2],3],[[10,2],3],[[11,2],3],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[]],[[]],[[]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],8],[[],8],[[],8],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[12,13],[14,[[7,[12,15]]]],[12,[[7,[[17,[16]],15]]]],[12,[[7,[4,15]]]],[[],7],[[],7],[[],7],[[],7],[[],8],[[],8],0,[[]],[[]],[18,[[20,[19]]]],0,[[]],[[]],[18,[[21,[12]]]],[[],[[17,[4]]]],[18],[18,22],[[]],[6,18],[[],23],[[[5,[4]]]],[[18,19]],[[18,13]],[[],7],[[],7],[[],8]],"c":[],"p":[[4,"AppEvent"],[3,"Formatter"],[6,"Result"],[3,"String"],[8,"Into"],[3,"AppConfig"],[4,"Result"],[3,"TypeId"],[3,"MouseButtonEvent"],[3,"KeyDownEvent"],[3,"KeyUpEvent"],[3,"File"],[15,"bool"],[15,"str"],[6,"IoError"],[15,"u8"],[3,"Vec"],[3,"App"],[8,"FnMut"],[3,"Box"],[4,"Option"],[15,"f32"],[15,"f64"],[3,"FileSystem"]]},\
"uni_gl":{"doc":"","t":"NNNNNNNNNNNNNNNNNNENNNNNNENNENNNNNNNNNEEEENNNNNNNNNNNNNNENNNNNNNNNENNENNNNNNNNNNNNNENNNNENNNNNNNENENNNNNNNNNNNNNNNNNNNNNNNNENNNDNNNNNNNNENNNRNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNEEEENNNNENNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNEEENNNNNNNNENNNNNNNNNNNNNNNNNENNNNNNNENNENNNNNNNEENENEENNNNNNNNNNNENNNNNNNNNNNNNNNNNENGNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDDDDDLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLFMLLLLLLLLLLLLLLLLLLLLLLLLL","n":["ActiveAttributes","ActiveUniforms","AliasedLineWidthRange","AliasedPointSizeRange","Alpha","AlphaBits","Always","Always","Array","ArrayBufferBinding","ArrayBufferBinding","ArrayEnabled","ArrayNormalized","ArrayPointer","ArraySize","ArrayStride","ArrayType","AttachedShaders","AttributeSize","Back","Back","Blend","BlendColor","BlendDstAlpha","BlendDstRgb","BlendEquation","BlendEquation","BlendEquationAlpha","BlendMode","BlendSrcAlpha","BlendSrcRgb","BlueBits","Bool","BoolVec2","BoolVec3","BoolVec4","BorderColor","BrowserDefaultWebgl","BufferBit","BufferKind","BufferParameter","Buffers","CCW","CW","ClampToEdge","Color","ColorAttachment0","ColorAttachment0","ColorAttachment1","ColorAttachment2","ColorAttachment3","ColorAttachment4","ColorAttachment5","ColorAttachment6","ColorAttachment7","ColorAttachment8","ColorBuffer","ColorClearValue","ColorWritemask","CompileStatus","CompressedTextureFormats","ConstantAlpha","ConstantColor","ContextLostWebgl","CullFace","CullFaceMode","Culling","Current","CurrentProgram","DataType","Decr","DecrWrap","DeleteStatus","Depth","DepthAttachment","DepthBits","DepthClearValue","DepthComponent","DepthComponent16","DepthFunc","DepthRange","DepthStencil","DepthStencilAttachment","DepthTest","DepthTest","DepthWritemask","Dither","DontCare","DrawMode","DstAlpha","DstColor","Dynamic","ElementArray","ElementArrayBufferBinding","Equal","Equal","Error","Fastest","Flag","Float","Float","FloatMat2","FloatMat3","FloatMat4","FloatVec2","FloatVec3","FloatVec4","Four","Fragment","Framebuffer","FramebufferAttachmentObjectName","FramebufferAttachmentObjectType","FramebufferAttachmentTextureCubeMapFace","FramebufferAttachmentTextureLevel","FramebufferBinding","FramebufferComplete","FramebufferIncompleteAttachment","FramebufferIncompleteDimensions","FramebufferIncompleteMissingAttachment","FramebufferUnsupported","Front","FrontAndBack","FrontFace","FrontFaceDirection","FuncAdd","FuncReverseSubtract","FuncSubstract","GLContext","GenerateMipmapHint","Gequal","Gequal","Greater","Greater","GreenBits","HighFloat","HighInt","Hint","I16","I32","I8","IS_GL_ES","ImplementationColorReadFormat","ImplementationColorReadType","Incr","IncrWrap","IntVec2","IntVec3","IntVec4","InvalidEnum","InvalidFramebufferOperation","InvalidOperation","InvalidValue","Invert","Keep","Lequal","Lequal","Less","Less","LineLoop","LineStrip","LineWidth","Linear","Linear","LinearMipmapLinear","LinearMipmapNearest","Lines","LinkStatus","LowFloat","LowInt","Luminance","LuminanceAlpha","MaxCombinedTextureImageUnits","MaxCubeMapTextureSize","MaxFragmentUniformVectors","MaxRenderbufferSize","MaxTextureImageUnits","MaxTextureSize","MaxVaryingVectors","MaxVertexAttribs","MaxVertexTextureImageUnits","MaxVertexUniformVectors","MaxViewportDims","MediumFloat","MediumInt","MirroredRepeat","Nearest","Nearest","NearestMipmapLinear","NearestMipmapNearest","Never","Never","Nicest","NoError","None","None","Notequal","Notequal","One","One","OneMinusConstantAlpha","OneMinusConstantColor","OneMinusDstAlpha","OneMinusDstColor","OneMinusSrcAlpha","OneMinusSrcColor","OutOfMemory","PackAlignment","PackAlignment","Parameter","PixelFormat","PixelStorageMode","PixelType","Points","PolygonOffsetFactor","PolygonOffsetFill","PolygonOffsetUnits","Primitives","RedBits","Renderbuffer","RenderbufferAlphaSize","RenderbufferBinding","RenderbufferBlueSize","RenderbufferDepthSize","RenderbufferGreenSize","RenderbufferHeight","RenderbufferInternalFormat","RenderbufferRedSize","RenderbufferStencilSize","RenderbufferWidth","Renderer","Repeat","Replace","Rgb","Rgb565","Rgb5A1","RgbDxt1","Rgba","Rgba4","RgbaDxt1","RgbaDxt3","RgbaDxt5","SampleAlphaToCoverage","SampleBuffers","SampleCoverage","SampleCoverageInvert","SampleCoverageValue","Sampler2d","SamplerCube","Samples","ScissorBox","ScissorTest","ShaderKind","ShaderParameter","ShaderPrecision","ShaderType","ShadingLanguageVersion","Size","SrcAlpha","SrcAlphaSaturate","SrcColor","Static","Stencil","StencilAction","StencilAttachment","StencilBackFail","StencilBackFunc","StencilBackPassDepthFail","StencilBackPassDepthPass","StencilBackRef","StencilBackValueMask","StencilBackWritemask","StencilBits","StencilClearValue","StencilFail","StencilFunc","StencilIndex","StencilIndex8","StencilPassDepthFail","StencilPassDepthPass","StencilRef","StencilTest","StencilTest","StencilValueMask","StencilWritemask","Stream","SubpixelBits","Texture2d","Texture2d","TextureBindPoint","TextureBinding2d","TextureBindingCubeMap","TextureCompression","TextureCubeMap","TextureCubeMapNegativeX","TextureCubeMapNegativeY","TextureCubeMapNegativeZ","TextureCubeMapPositiveX","TextureCubeMapPositiveY","TextureCubeMapPositiveZ","TextureKind","TextureMagFilter","TextureMagFilter","TextureMinFilter","TextureMinFilter","TextureParameter","TextureWrap","TextureWrapR","TextureWrapS","TextureWrapT","Three","TriangleFan","TriangleStrip","Triangles","Two","U16","U32","U8","UniformType","UnpackAlignment","UnpackAlignment","UnpackColorspaceConversionWebgl","UnpackFlipYWebgl","UnpackPremultiplyAlphaWebgl","UnsignedByte","UnsignedInt","UnsignedInt24","UnsignedShort","UnsignedShort4444","UnsignedShort5551","UnsignedShort565","Usage","ValidateStatus","Vendor","Version","Vertex","VertexAttrib","Viewport","WebGLContext","Zero","active_texture","attach_shader","bind_attrib_location","bind_buffer","bind_framebuffer","bind_texture","bind_texture_cube","bind_vertex_array","blend_color","blend_equation","blend_func","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffer_data","buffer_sub_data","clear","clear_color","clear_depth","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","common","compile_shader","compressed_tex_image2d","create_buffer","create_framebuffer","create_program","create_shader","create_texture","create_vertex_array","cull_face","delete_buffer","delete_framebuffer","delete_texture","delete_vertex_array","depth_func","depth_mask","disable","draw_arrays","draw_buffer","draw_elements","enable","enable_vertex_attrib_array","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","framebuffer_texture2d","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","generate_mipmap","generate_mipmap_cube","get_attrib_location","get_program_parameter","get_uniform_location","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_webgl2","link_program","new","pixel_storei","print","read_pixels","reference","shader_source","tex_image2d","tex_parameterfv","tex_parameteri","tex_sub_image2d","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unbind_buffer","unbind_framebuffer","unbind_texture","unbind_texture_cube","unbind_vertex_array","uniform_1f","uniform_1i","uniform_2f","uniform_3f","uniform_4f","uniform_matrix_2fv","uniform_matrix_3fv","uniform_matrix_4fv","use_program","vertex_attrib_pointer","viewport","WebGLBuffer","WebGLFrameBuffer","WebGLProgram","WebGLRenderingContext","WebGLShader","WebGLTexture","WebGLUniformLocation","WebGLVertexArray","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","common","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","name","new","print","reference","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id"],"q":[[0,"uni_gl"],[809,"uni_gl::common"]],"d":["Passed to getProgramParameter to get the number of …","Passed to getProgramParamter to get the number of uniforms …","Passed to getParameter to get the range of available …","Passed to getParameter to get the current size of a point …","","","Passed to depthFunction or stencilFunction to specify …","Passed to depthFunction or stencilFunction to specify …","to store vertex attributes","Passed to getParameter to get the array buffer binding.","","","","","","","","Passed to getProgramParameter after calling attachShader …","Constants passed to …","Passed to cullFace to specify that only back faces should …","","Passed to enable/disable to turn on/off blending. Can also …","Passed to getParameter to return a the current blend color.","Passed to getParameter to get the current destination …","Passed to getParameter to get the current destination RGB …","Constants passed to WebGLRenderingContext.blendEquation() …","Passed to getParameter to get the current RGB blend …","Passed to getParameter to get the current alpha blend …","Constants passed to WebGLRenderingContext.blendFunc() or …","Passed to getParameter to get the current source alpha …","Passed to getParameter to get the current destination RGB …","","","","","","","","","Passed to bindBuffer or bufferData to specify the type of …","","Constants passed to WebGLRenderingContext.hint()","Passed to frontFace to specify the front face of a polygon …","Passed to frontFace to specify the front face of a polygon …","","Passed to clear to clear the current color buffer.","","","","","","","","","","","","","","Passed to getShaderParamter to get the status of the …","","Passed to blendFunc or blendFuncSeparate to specify a …","Passed to blendFunc or blendFuncSeparate to specify a …","Returned from getError.","Passed to enable/disable to turn on/off culling. Can also …","Passed to getParameter to get the current value of …","Constants passed to WebGLRenderingContext.cullFace().","Passed to getVertexAttrib to read back the current vertex …","","","","","Passed to getShaderParamter to determine if a shader was …","Passed to clear to clear the current depth buffer.","","","Passed to getParameter to determine the current depth …","","","Passed to getParameter to get the current depth function. …","Passed to getParameter to return a length-2 array of …","","","Constants passed to WebGLRenderingContext.depthFunc().","Passed to enable/disable to turn on/off the depth test. …","Passed to getParameter to determine if the depth write …","Passed to enable/disable to turn on/off dithering. Can …","There is no preference for this behavior.","","Passed to blendFunc or blendFuncSeparate to multiply a …","Passed to blendFunc or blendFuncSeparate to multiply a …","Passed to bufferData as a hint about whether the contents …","to store vertex array indices","Passed to getParameter to get the current element array …","Passed to depthFunction or stencilFunction to specify …","Passed to depthFunction or stencilFunction to specify …","Constants returned from WebGLRenderingContext.getError().","The most efficient behavior should be used.","","","","","","","","","","","Passed to createShader to define a fragment shader.","","","","","","","","","","","","Passed to cullFace to specify that only front faces should …","Passed to cullFace to specify that front and back faces …","Passed to getParameter to determine the current value of …","Constants passed to WebGLRenderingContext.frontFace().","Passed to blendEquation or blendEquationSeparate to set an …","Passed to blendEquation or blendEquationSeparate to …","Passed to blendEquation or blendEquationSeparate to …","uni-gl internal OpenGL context.","Hint for the quality of filtering when generating mipmap …","Passed to depthFunction or stencilFunction to specify …","Passed to depthFunction or stencilFunction to specify …","Passed to depthFunction or stencilFunction to specify …","Passed to depthFunction or stencilFunction to specify …","","","","Constants passed to WebGLRenderingContext.hint()","","","","whether current OpenGL context is OpenGL ES (Embedded …","","","","","","","","Returned from getError.","","Returned from getError.","Returned from getError.","","","Passed to depthFunction or stencilFunction to specify …","Passed to depthFunction or stencilFunction to specify …","Passed to depthFunction or stencilFunction to specify …","Passed to depthFunction or stencilFunction to specify …","Passed to drawElements or drawArrays to draw lines. Each …","Passed to drawElements or drawArrays to draw a connected …","Passed to getParameter to get the current lineWidth (set …","","","","","Passed to drawElements or drawArrays to draw lines. Each …","Passed to getProgramParameter after calling linkProgram to …","","","","","","","","","Implementation dependent number of maximum texture units. …","","","The maximum number of entries possible in the vertex …","","","","","","","","","","","Passed to depthFunction or stencilFunction to specify …","Passed to depthFunction or stencilFunction to specify …","The most correct or the highest quality option should be …","Returned from getError.","","","Passed to depthFunction or stencilFunction to specify …","Passed to depthFunction or stencilFunction to specify …","","Passed to blendFunc or blendFuncSeparate to turn on a …","Passed to blendFunc or blendFuncSeparate to specify one …","Passed to blendFunc or blendFuncSeparate to specify one …","Passed to blendFunc or blendFuncSeparate to multiply a …","Passed to blendFunc or blendFuncSeparate to multiply a …","Passed to blendFunc or blendFuncSeparate to multiply a …","Passed to blendFunc or blendFuncSeparate to multiply a …","Returned from getError.","","Packing of pixel data into memory. Can be 1, 2, 4, 8 …","Constants passed to WebGLRenderingContext.getParameter() …","","Constants passed to WebGLRenderingContext.hint()","","Passed to drawElements or drawArrays to draw single points.","","Passed to enable/disable to turn on/off the polygon …","","Passed to drawElements or drawArrays to draw primitives.","","","","","","","","","","","","","","","","","","","A DXT1-compressed image in an RGB image format.","","","A DXT1-compressed image in an RGB image format with a …","A DXT3-compressed image in an RGBA image format. Compared …","A DXT5-compressed image in an RGBA image format. It also …","Passed to enable/disable to turn on/off the alpha to …","","Passed to enable/disable to turn on/off the sample …","","","","","","Returns an Int32Array with four elements for the current …","Passed to enable/disable to turn on/off the scissor test. …","Constants passed to WebGLRenderingContext.createShader()","Constants passed to WebGLRenderingContext.createShader()","","","","Passed to getBufferParameter to get a buffer’s size.","Passed to blendFunc or blendFuncSeparate to multiply a …","Passed to blendFunc or blendFuncSeparate to multiply a …","Passed to blendFunc or blendFuncSeparate to multiply a …","Passed to bufferData as a hint about whether the contents …","Passed to clear to clear the current stencil buffer.","Constants passed to WebGLRenderingContext.stencilOp().","","","","","","","","","","Passed to getParameter to get the value the stencil will …","Passed to getParameter to get the current stencil fail …","Passed to getParameter to get the current stencil …","","","Passed to getParameter to get the current stencil fail …","Passed to getParameter to get the current stencil fail …","Passed to getParameter to get the reference value used for …","Constants passed to WebGLRenderingContext.stencilFunc().","Passed to enable/disable to turn on/off the stencil test. …","","","Passed to bufferData as a hint about whether the contents …","","","","WebGLRenderingContext.texImage2D() “target” parameter","","","","","","","","","","","WebGLRenderingContext.texParameterfi or …","WebGLRenderingContext.texParameterfi “param” parameter","","WebGLRenderingContext.texParameterfi “param” parameter","","WebGLRenderingContext.texParameterfi “pname” parameter","WebGLRenderingContext.texParameterfi “param” parameter","WebGL 2.0 only","","","","Passed to drawElements or drawArrays to draw a connected …","Passed to drawElements or drawArrays to draw a connected …","Passed to drawElements or drawArrays to draw triangles. …","","","","","Constants passed to WebGLRenderingContext.hint()","","Unpacking of pixel data from memory Can be 1, 2, 4, 8 …","","","","","","","","","","","Passed to getBufferParameter to get the hint for the …","Passed to getProgramParameter after calling …","","","Passed to createShader to define a vertex shader","Constants passed to …","Returns an Int32Array with four elements for the current …","","Passed to blendFunc or blendFuncSeparate to turn off a …","select active texture unit","attach a shader to a program. A program must have two …","associate a generic vertex attribute index with a named …","bind a buffer to current state.","bind a framebuffer to the current state","bind a named 2D texture to a texturing target","bind a named cube map texture to a texturing target","bind a vertex array object to current state","set the blend color","set the RGB alpha blend equation","specify pixel arithmetic for RGB and alpha components …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fills a buffer with data.","update a subset of a buffer","clear buffers to preset values","specify clear values for the color buffers","specify the clear value for the depth buffer","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","compile a shader","specify a two-dimensional texture image in a compressed …","create a new OpenGL buffer","create a new framebuffer","create a program","create a new shader.","create a new texture object","create a vertex array object","specify whether front- or back-facing polygons can be …","delete an existing buffer","destroy a framebuffer","destroy a texture object","destroy a vertex array object","specify the value used for depth buffer comparisons","enable or disable writing into the depth buffer","disable GL capabilities.","render primitives from array data","specify which color buffers are to be drawn into","render primitives from indexed array data","enable GL capabilities.","enable a generic vertex attribute array","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","attach a texture to a framebuffer","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","generate mipmaps for current 2D texture","generate mipmaps for current cube map texture","return the location of an attribute variable","return informations about current program","return the location of a uniform variable","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","whether this context is a WebGL 2.0 context","link a program","","set pixel storage modes","","read a block of pixels from the frame buffer","openGL internal reference","set or replace the source code in a shader","specify a two-dimensional texture image","set texture float parameters","set texture integer parameters","update a part of a two-dimensional texture subimage","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","this buffer is not bound to the current state anymore.","unbind a framebuffer","current 2D texture is not bound to current state anymore","current cube map texture is not bound to current state …","current vertex array object is not bound to the current …","specify the value of a float uniform variable for the …","specify the value of an int uniform variable for the …","specify the value of a vec2 uniform variable for the …","specify the value of a vec3 uniform variable for the …","specify the value of a vec4 uniform variable for the …","specify the value of a mat2 uniform variable for the …","specify the value of a mat3 uniform variable for the …","specify the value of a mat4 uniform variable for the …","bind a program to the current state.","define an array of generic vertex attribute data","set the viewport","an OpenGL buffer created with <code>GLContext::create_buffer</code>.","an OpenGL Framebuffer created with …","an OpenGL shader created with <code>GLContext::create_shader</code>.","The OpenGL rendering context. This is the struct providing …","an OpenGL shader created with <code>GLContext::create_shader</code>","an OpenGL program created with <code>GLContext::create_program</code>.","the reference to a uniform (global GLSL variable) inside a …","an OpenGL vertex array object created with …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","create an OpenGL context.","Utility function to print messages to stdout (native) or …","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[21,21,26,26,35,26,31,32,6,26,27,27,27,27,27,27,27,21,0,28,47,24,26,26,26,0,26,26,0,26,26,26,45,45,45,45,38,26,0,0,0,0,30,30,42,18,8,47,47,47,47,47,47,47,47,47,0,26,26,21,26,14,14,29,28,26,0,27,21,0,33,33,21,18,8,26,26,35,8,26,26,8,8,0,24,26,24,36,0,14,14,17,6,26,31,32,0,36,0,23,34,45,45,45,45,45,45,19,20,8,8,8,8,8,8,8,8,8,8,8,28,28,26,0,13,13,13,0,36,31,32,31,32,26,44,44,0,23,23,23,0,26,26,33,33,45,45,45,29,8,29,29,33,33,31,32,31,32,25,25,26,40,41,41,41,25,21,44,44,35,35,21,26,21,8,21,26,21,21,21,21,26,44,44,42,40,41,41,41,31,32,36,29,8,47,31,32,19,14,14,14,14,14,14,14,29,26,43,0,0,0,0,25,26,24,26,0,26,8,8,8,8,8,8,8,8,8,8,8,26,42,33,35,8,8,46,35,8,46,46,46,24,26,24,26,26,45,45,26,26,24,0,0,0,21,21,22,14,14,14,17,18,0,8,26,26,26,26,26,26,26,26,26,26,26,8,8,26,26,26,0,24,26,26,17,26,37,39,0,26,26,0,37,39,39,39,39,39,39,0,0,38,0,38,0,0,38,38,38,19,25,25,25,19,23,23,23,0,26,43,43,43,43,34,34,34,34,34,34,34,22,21,26,26,20,0,26,0,14,1,1,1,1,1,1,1,1,1,1,1,1,19,20,21,6,17,22,23,24,18,25,14,13,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,8,43,44,45,46,47,1,19,20,21,6,17,22,23,24,18,25,14,13,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,8,43,44,45,46,47,1,1,1,1,1,1,19,20,21,6,17,22,23,24,18,25,14,13,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,8,43,44,45,46,47,1,19,20,21,6,17,22,23,24,18,25,14,13,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,8,43,44,45,46,47,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,42,1,19,20,21,6,17,22,23,24,18,25,14,13,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,8,43,44,45,46,47,1,1,19,20,21,6,17,22,23,24,18,25,14,13,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,8,43,44,45,46,47,1,1,1,1,1,1,19,20,21,6,17,22,23,24,18,25,14,13,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,8,43,44,45,46,47,1,1,1,1,1,1,1,1,1,1,1,1,1,19,20,21,6,17,22,23,24,18,25,14,13,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,8,43,44,45,46,47,1,19,20,21,6,17,22,23,24,18,25,14,13,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,8,43,44,45,46,47,1,19,20,21,6,17,22,23,24,18,25,14,13,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,8,43,44,45,46,47,1,19,20,21,6,17,22,23,24,18,25,14,13,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,8,43,44,45,46,47,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,61,7,4,3,10,11,55,9,61,7,4,3,10,11,55,9,61,61,61,61,7,4,3,10,11,55,9,61,3,10,55,61,7,4,3,10,11,55,9,61,7,4,3,10,11,55,9,61,7,4,3,10,11,55,9,55,61,0,55,61,61,7,4,3,10,11,55,9,61,7,4,3,10,11,55,9,61,7,4,3,10,11,55,9],"fc":[],"p":[[3,"GLContext"],[15,"u32"],[3,"WebGLProgram"],[3,"WebGLShader"],[15,"str"],[4,"BufferKind"],[3,"WebGLBuffer"],[4,"Buffers"],[3,"WebGLFrameBuffer"],[3,"WebGLTexture"],[3,"WebGLVertexArray"],[15,"f32"],[4,"BlendEquation"],[4,"BlendMode"],[15,"u8"],[15,"slice"],[4,"DrawMode"],[4,"BufferBit"],[4,"AttributeSize"],[4,"ShaderKind"],[4,"ShaderParameter"],[4,"BufferParameter"],[4,"DataType"],[4,"Flag"],[4,"Primitives"],[4,"Parameter"],[4,"VertexAttrib"],[4,"Culling"],[4,"Error"],[4,"FrontFaceDirection"],[4,"DepthTest"],[4,"StencilTest"],[4,"StencilAction"],[4,"PixelType"],[4,"PixelFormat"],[4,"Hint"],[4,"TextureKind"],[4,"TextureParameter"],[4,"TextureBindPoint"],[4,"TextureMagFilter"],[4,"TextureMinFilter"],[4,"TextureWrap"],[4,"PixelStorageMode"],[4,"ShaderPrecision"],[4,"UniformType"],[4,"TextureCompression"],[4,"ColorBuffer"],[15,"u16"],[15,"bool"],[15,"i32"],[15,"usize"],[3,"Formatter"],[6,"Result"],[4,"Option"],[3,"WebGLUniformLocation"],[3,"String"],[8,"Into"],[4,"Result"],[3,"TypeId"],[15,"array"],[3,"WebGLRenderingContext"],[6,"WebGLContext"]]},\
"unicode_ident":{"doc":"github crates-io docs-rs","t":"FF","n":["is_xid_continue","is_xid_start"],"q":[[0,"unicode_ident"]],"d":["",""],"i":[0,0],"f":[[1,2],[1,2]],"c":[],"p":[[15,"char"],[15,"bool"]]},\
"uuid":{"doc":"Generate and parse universally unique identifiers (UUIDs).","t":"DGCNDNNNNSSSSNNCNNNCDEELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLOLLDDSSSSDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLAFFIQDRLLLLALLLLLLKLLLLLLLLLDLLLLLLLLLLLLL","n":["Builder","Bytes","ClockSequence","Dce","Error","Future","Mac","Md5","Microsoft","NAMESPACE_DNS","NAMESPACE_OID","NAMESPACE_URL","NAMESPACE_X500","NCS","Nil","NoContext","RFC4122","Random","Sha1","Timestamp","Uuid","Variant","Version","as_braced","as_bytes","as_fields","as_hyphenated","as_ref","as_simple","as_u128","as_u64_pair","as_urn","as_uuid","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","braced","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","default","deserialize","encode_buffer","eq","eq","eq","eq","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes_le","from_bytes_le","from_bytes_ref","from_fields","from_fields","from_fields_le","from_fields_le","from_md5_bytes","from_random_bytes","from_rfc4122_timestamp","from_sha1_bytes","from_slice","from_slice","from_slice_le","from_slice_le","from_str","from_u128","from_u128","from_u128_le","from_u128_le","from_u64_pair","get_timestamp","get_variant","get_version","get_version_num","hash","hash","hyphenated","into","into","into","into","into","into_bytes","into_uuid","is_nil","new_v4","nil","nil","parse_str","partial_cmp","provide","serde","serialize","set_variant","set_version","simple","timestamp","to_bytes_le","to_fields_le","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_u128_le","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_parse","try_parse_ascii","type_id","type_id","type_id","type_id","type_id","urn","uuid","with_variant","with_version","Braced","Hyphenated","LENGTH","LENGTH","LENGTH","LENGTH","Simple","Urn","as_ref","as_ref","as_ref","as_ref","as_uuid","as_uuid","as_uuid","as_uuid","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","default","default","default","default","encode_lower","encode_lower","encode_lower","encode_lower","encode_upper","encode_upper","encode_upper","encode_upper","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_uuid","from_uuid","from_uuid","from_uuid","hash","hash","hash","hash","into","into","into","into","into_uuid","into_uuid","into_uuid","into_uuid","partial_cmp","partial_cmp","partial_cmp","partial_cmp","serialize","serialize","serialize","serialize","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","compact","deserialize","serialize","ClockSequence","Output","Timestamp","UUID_TICKS_BETWEEN_EPOCHS","borrow","borrow_mut","clone","clone_into","context","eq","equivalent","fmt","from","from_rfc4122","from_unix","generate_sequence","hash","into","now","to_owned","to_unix","to_unix_nanos","try_from","try_into","type_id","NoContext","borrow","borrow_mut","clone","clone_into","default","fmt","from","generate_sequence","into","to_owned","try_from","try_into","type_id"],"q":[[0,"uuid"],[164,"uuid::fmt"],[292,"uuid::serde"],[293,"uuid::serde::compact"],[295,"uuid::timestamp"],[320,"uuid::timestamp::context"]],"d":["A builder for creating a UUID.","A 128-bit (16 byte) buffer containing the UUID.","","Version 2: DCE Security.","A general error that can occur when working with UUIDs.","Reserved for future expansion.","Version 1: Timestamp and node ID.","Version 3: MD5 hash.","Reserved by Microsoft for backward compatibility.","UUID namespace for Domain Name System (DNS).","UUID namespace for ISO Object Identifiers (OIDs).","UUID namespace for Uniform Resource Locators (URLs).","UUID namespace for X.500 Distinguished Names (DNs).","Reserved by the NCS for backward compatibility.","The “nil” (all zeros) UUID.","","As described in the RFC4122 Specification (default).","Version 4: Random.","Version 5: SHA-1 hash.","","A Universally Unique Identifier (UUID).","The reserved variants of UUIDs.","The version of the UUID, denoting the generating algorithm.","Get a borrowed <code>Braced</code> formatter.","Returns a slice of 16 octets containing the value.","Returns the four field values of the UUID.","Get a borrowed <code>Hyphenated</code> formatter.","","Get a borrowed <code>Simple</code> formatter.","Returns a 128bit value containing the value.","Returns two 64bit values containing the value.","Get a borrowed <code>Urn</code> formatter.","Get a reference to the underlying <code>Uuid</code>.","","","","","","","","","","","Get a <code>Braced</code> formatter.","","","","","","","","","","","","A buffer that can be used for <code>encode_...</code> calls, that is …","","","","","","","Adapters for alternative string formats.","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Creates a <code>Builder</code> using the supplied bytes.","Creates a UUID using the supplied bytes.","Creates a <code>Builder</code> using the supplied bytes in little …","Creates a UUID using the supplied bytes in little endian …","Creates a reference to a UUID from a reference to the …","Creates a <code>Builder</code> from four field values.","Creates a UUID from four field values.","Creates a <code>Builder</code> from four field values.","Creates a UUID from four field values in little-endian …","Creates a <code>Builder</code> for a version 3 UUID using the supplied …","Creates a <code>Builder</code> for a version 4 UUID using the supplied …","Creates a <code>Builder</code> for a version 1 UUID using the supplied …","Creates a <code>Builder</code> for a version 5 UUID using the supplied …","Creates a <code>Builder</code> using the supplied bytes.","Creates a UUID using the supplied bytes.","Creates a <code>Builder</code> using the supplied bytes in little …","Creates a UUID using the supplied bytes in little endian …","","Creates a <code>Builder</code> from a 128bit value.","Creates a UUID from a 128bit value.","Creates a UUID from a 128bit value in little-endian order.","Creates a UUID from a 128bit value in little-endian order.","Creates a UUID from two 64bit values.","If the UUID is the correct version (v1, v6, or v7) this …","Returns the variant of the UUID structure.","Returns the version of the UUID.","Returns the version number of the UUID.","","","Get a <code>Hyphenated</code> formatter.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consumes self and returns the underlying byte value of the …","Convert the builder into a <code>Uuid</code>.","Tests if the UUID is nil (all zeros).","Creates a random UUID.","Creates a <code>Builder</code> with an initial <code>Uuid::nil</code>.","The ‘nil UUID’ (all zeros).","Parses a <code>Uuid</code> from a string of hexadecimal digits with …","","","Adapters for alternative <code>serde</code> formats.","","Specifies the variant of the UUID.","Specifies the version number of the UUID.","Get a <code>Simple</code> formatter.","Generating UUIDs from timestamps.","Returns the bytes of the UUID in little-endian order.","Returns the four field values of the UUID in little-endian …","","","","","","","","Returns a 128bit little-endian value containing the value.","","","","","","","","","","","","Parses a <code>Uuid</code> from a string of hexadecimal digits with …","Parses a <code>Uuid</code> from a string of hexadecimal digits with …","","","","","","Get a <code>Urn</code> formatter.","Parse <code>Uuid</code>s from string literals at compile time.","Specifies the variant of the UUID.","Specifies the version number of the UUID.","Format a <code>Uuid</code> as a braced hyphenated string, like …","Format a <code>Uuid</code> as a hyphenated string, like …","The length of a hyphenated <code>Uuid</code> string.","The length of a simple <code>Uuid</code> string.","The length of a URN <code>Uuid</code> string.","The length of a braced <code>Uuid</code> string.","Format a <code>Uuid</code> as a simple string, like …","Format a <code>Uuid</code> as a URN string, like …","","","","","Get a reference to the underlying <code>Uuid</code>.","Get a reference to the underlying <code>Uuid</code>.","Get a reference to the underlying <code>Uuid</code>.","Get a reference to the underlying <code>Uuid</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Writes the <code>Uuid</code> as a lower-case hyphenated string to <code>buffer</code>…","Writes the <code>Uuid</code> as a lower-case simple string to <code>buffer</code>, …","Writes the <code>Uuid</code> as a lower-case URN string to <code>buffer</code>, and …","Writes the <code>Uuid</code> as a lower-case hyphenated string …","Writes the <code>Uuid</code> as an upper-case hyphenated string to …","Writes the <code>Uuid</code> as an upper-case simple string to <code>buffer</code>, …","Writes the <code>Uuid</code> as an upper-case URN string to <code>buffer</code>, and …","Writes the <code>Uuid</code> as an upper-case hyphenated string …","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","Creates a <code>Hyphenated</code> from a <code>Uuid</code>.","Creates a <code>Simple</code> from a <code>Uuid</code>.","Creates a <code>Urn</code> from a <code>Uuid</code>.","Creates a <code>Braced</code> from a <code>Uuid</code>.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consumes the <code>Hyphenated</code>, returning the underlying <code>Uuid</code>.","Consumes the <code>Simple</code>, returning the underlying <code>Uuid</code>.","Consumes the <code>Urn</code>, returning the underlying <code>Uuid</code>.","Consumes the <code>Braced</code>, returning the underlying <code>Uuid</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Serialize a <code>Uuid</code> as a <code>[u8; 16]</code>.","Deserialize a <code>[u8; 16]</code> as a <code>Uuid</code>","Serialize from a <code>Uuid</code> as a <code>[u8; 16]</code>","A counter that can be used by version 1 and version 6 …","The type of sequence returned by this counter.","A timestamp that can be encoded into a UUID.","The number of 100 nanosecond ticks between the RFC4122 …","","","","","Default implementations for the <code>ClockSequence</code> trait.","","","","Returns the argument unchanged.","Construct a <code>Timestamp</code> from an RFC4122 timestamp and …","Construct a <code>Timestamp</code> from a Unix timestamp, as used in …","Get the next value in the sequence to feed into a …","","Calls <code>U::from(self)</code>.","Get a timestamp representing the current system time.","","Get the value of the timestamp as a Unix timestamp, as …","Get the number of fractional nanoseconds in the Unix …","","","","An empty counter that will always return the value <code>0</code>.","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","",""],"i":[0,0,0,12,0,13,12,12,13,1,1,1,1,13,12,0,13,12,12,0,0,0,0,1,1,1,1,1,1,1,1,1,10,10,11,12,13,1,10,11,12,13,1,1,11,12,13,1,11,12,13,1,1,1,1,1,11,12,13,1,11,1,0,10,11,11,12,13,13,1,1,1,1,10,11,12,13,1,1,1,1,1,10,1,10,1,1,10,1,10,1,10,10,10,10,10,1,10,1,1,10,1,10,1,1,1,1,1,1,11,1,1,10,11,12,13,1,1,10,1,1,10,1,1,1,11,0,1,10,10,1,0,1,1,11,12,13,1,11,13,1,1,10,11,12,13,1,1,10,11,12,13,1,1,1,10,11,12,13,1,1,0,10,10,0,0,4,7,9,2,0,0,4,7,9,2,4,7,9,2,4,4,7,7,9,9,2,2,4,7,9,2,4,7,9,2,4,7,9,2,4,7,9,2,4,7,9,2,4,7,9,2,4,7,9,2,4,7,9,2,4,7,9,2,4,4,4,4,7,7,7,7,9,9,9,9,2,2,2,2,4,4,7,7,9,9,2,2,4,7,9,2,4,7,9,2,4,7,9,2,4,7,9,2,4,7,9,2,4,7,9,2,4,7,9,2,4,7,9,2,4,7,9,2,4,7,9,2,4,7,9,2,0,0,0,0,33,0,0,25,25,25,25,0,25,25,25,25,25,25,33,25,25,25,25,25,25,25,25,25,0,34,34,34,34,34,34,34,34,34,34,34,34,34],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],[1,3],[1],[1,4],[1,[[6,[5]]]],[1,7],[1,8],[1],[1,9],[10,1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,2],[11,11],[12,12],[13,13],[1,1],[[]],[[]],[[]],[[]],[[1,1],14],[[],1],[15,[[16,[1]]]],[[],[[17,[5]]]],[[11,11],18],[[12,12],18],[[13,13],18],[[1,1],18],[[],18],[[],18],0,[[10,19],20],[[11,19],20],[[11,19],20],[[12,19],20],[[13,19],20],[[13,19],20],[[1,19],20],[[1,19],20],[[1,19],20],[[1,19],20],[[]],[[]],[[]],[[]],[9,1],[4,1],[2,1],[7,1],[[]],[3,10],[3,1],[3,10],[3,1],[3,1],[[21,22,22,[17,[5]]],10],[[21,22,22,[17,[5]]],1],[[21,22,22,[17,[5]]],10],[[21,22,22,[17,[5]]],1],[3,10],[3,10],[[23,22,[17,[5]]],10],[3,10],[[[6,[5]]],[[16,[10,11]]]],[[[6,[5]]],[[16,[1,11]]]],[[[6,[5]]],[[16,[10,11]]]],[[[6,[5]]],[[16,[1,11]]]],[24,[[16,[1]]]],[8,10],[8,1],[8,10],[8,1],[[23,23],1],[1,[[26,[25]]]],[1,13],[1,[[26,[12]]]],[1,27],[[11,28]],[[1,28]],[1,4],[[]],[[]],[[]],[[]],[[]],[1,3],[10,1],[1,18],[[],1],[[],10],[[],1],[24,[[16,[1,11]]]],[[1,1],[[26,[14]]]],[29],0,[[1,30],16],[[10,13],10],[[10,12],10],[1,7],0,[1,3],[1],[[]],[[]],[[]],[[]],[[],31],[[],31],[[],31],[1,8],[[],16],[[],16],[[],16],[[],16],[24,[[16,[1]]]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[24,[[16,[1,11]]]],[[[6,[5]]],[[16,[1,11]]]],[[],32],[[],32],[[],32],[[],32],[[],32],[1,9],0,[[10,13],10],[[10,12],10],0,0,0,0,0,0,0,0,[4,1],[7,1],[9,1],[2,1],[4,1],[7,1],[9,1],[2,1],[4,1],[[]],[[]],[7,1],[[]],[9,1],[[]],[2,1],[[]],[[]],[[]],[[]],[4,4],[7,7],[9,9],[2,2],[[]],[[]],[[]],[[]],[[4,4],14],[[7,7],14],[[9,9],14],[[2,2],14],[[],4],[[],7],[[],9],[[],2],[[4,[6,[5]]],24],[[7,[6,[5]]],24],[[9,[6,[5]]],24],[[2,[6,[5]]],24],[[4,[6,[5]]],24],[[7,[6,[5]]],24],[[9,[6,[5]]],24],[[2,[6,[5]]],24],[[4,4],18],[[7,7],18],[[9,9],18],[[2,2],18],[[],18],[[],18],[[],18],[[],18],[[4,19],20],[[4,19],20],[[4,19],20],[[4,19],20],[[7,19],20],[[7,19],20],[[7,19],20],[[7,19],20],[[9,19],20],[[9,19],20],[[9,19],20],[[9,19],20],[[2,19],20],[[2,19],20],[[2,19],20],[[2,19],20],[[]],[1,4],[[]],[1,7],[[]],[1,9],[[]],[1,2],[1,4],[1,7],[1,9],[1,2],[[4,28]],[[7,28]],[[9,28]],[[2,28]],[[]],[[]],[[]],[[]],[4,1],[7,1],[9,1],[2,1],[[4,4],[[26,[14]]]],[[7,7],[[26,[14]]]],[[9,9],[[26,[14]]]],[[2,2],[[26,[14]]]],[[4,30],16],[[7,30],16],[[9,30],16],[[2,30],16],[[]],[[]],[[]],[[]],[[],31],[[],31],[[],31],[[],31],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],32],[[],32],[[],32],[[],32],0,[15,[[16,[1]]]],[[1,30],16],0,0,0,0,[[]],[[]],[25,25],[[]],0,[[25,25],18],[[],18],[[25,19],20],[[]],[[23,22],25],[[33,23,21],25],[[23,21]],[[25,28]],[[]],[33,25],[[]],[25],[25,21],[[],16],[[],16],[[],32],0,[[]],[[]],[34,34],[[]],[[],34],[[34,19],20],[[]],[[34,23,21]],[[]],[[]],[[],16],[[],16],[[],32]],"c":[316],"p":[[3,"Uuid"],[3,"Braced"],[6,"Bytes"],[3,"Hyphenated"],[15,"u8"],[15,"slice"],[3,"Simple"],[15,"u128"],[3,"Urn"],[3,"Builder"],[3,"Error"],[4,"Version"],[4,"Variant"],[4,"Ordering"],[8,"Deserializer"],[4,"Result"],[15,"array"],[15,"bool"],[3,"Formatter"],[6,"Result"],[15,"u32"],[15,"u16"],[15,"u64"],[15,"str"],[3,"Timestamp"],[4,"Option"],[15,"usize"],[8,"Hasher"],[3,"Demand"],[8,"Serializer"],[3,"String"],[3,"TypeId"],[8,"ClockSequence"],[3,"NoContext"]]},\
"vec_map":{"doc":"A simple map based on a vector for small integer keys. …","t":"DEDDDDNDNDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["Drain","Entry","IntoIter","Iter","IterMut","Keys","Occupied","OccupiedEntry","Vacant","VacantEntry","Values","ValuesMut","VecMap","append","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capacity","clear","clone","clone","clone","clone","clone_from","clone_into","clone_into","clone_into","clone_into","cmp","contains_key","default","drain","entry","eq","equivalent","extend","extend","fmt","from","from","from","from","from","from","from","from","from","from","from","from_iter","get","get","get_mut","get_mut","hash","index","index","index_mut","index_mut","insert","insert","insert","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_mut","is_empty","iter","iter_mut","keys","len","new","next","next","next","next","next","next","next","next_back","next_back","next_back","next_back","next_back","next_back","next_back","or_insert","or_insert_with","partial_cmp","remove","remove","reserve_len","reserve_len_exact","retain","shrink_to_fit","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","split_off","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","values","values_mut","with_capacity"],"q":[[0,"vec_map"]],"d":["A draining iterator over the key-value pairs of a map.","A view into a single entry in a map, which may either be …","A consuming iterator over the key-value pairs of a map.","An iterator over the key-value pairs of a map.","An iterator over the key-value pairs of a map, with the …","An iterator over the keys of a map.","An occupied Entry","An occupied Entry.","A vacant Entry","A vacant Entry.","An iterator over the values of a map.","An iterator over the values of a map.","A map optimized for small integer keys.","Moves all elements from <code>other</code> into the map while …","","","","","","","","","","","","","","","","","","","","","","","Returns the number of elements the <code>VecMap</code> can hold without …","Clears the map, removing all key-value pairs.","","","","","","","","","","","Returns true if the map contains a value for the specified …","","Returns an iterator visiting all key-value pairs in …","Gets the given key’s corresponding entry in the map for …","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns a reference to the value corresponding to the key.","Gets a reference to the value in the entry.","Returns a mutable reference to the value corresponding to …","Gets a mutable reference to the value in the entry.","","","","","","Inserts a key-value pair into the map. If the key already …","Sets the value of the entry with the VacantEntry’s key, …","Sets the value of the entry with the OccupiedEntry’s key,","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns an iterator visiting all key-value pairs in …","","","","","","","","","","Converts the entry into a mutable reference to its value.","Returns true if the map contains no elements.","Returns an iterator visiting all key-value pairs in …","Returns an iterator visiting all key-value pairs in …","Returns an iterator visiting all keys in ascending order …","Returns the number of elements in the map.","Creates an empty <code>VecMap</code>.","","","","","","","","","","","","","","","Ensures a value is in the entry by inserting the default …","Ensures a value is in the entry by inserting the result of …","","Removes a key from the map, returning the value at the key …","Takes the value of the entry out of the map, and returns …","Reserves capacity for the given <code>VecMap</code> to contain <code>len</code> …","Reserves the minimum capacity for the given <code>VecMap</code> to …","Retains only the elements specified by the predicate.","Trims the <code>VecMap</code> of any excess capacity.","","","","","","","","Splits the collection into two at the given key.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns an iterator visiting all values in ascending order …","Returns an iterator visiting all values in ascending order …","Creates an empty <code>VecMap</code> with space for at least <code>capacity</code> …"],"i":[0,0,0,0,0,0,11,0,11,0,0,0,0,1,1,11,22,19,4,24,5,6,25,23,10,1,11,22,19,4,24,5,6,25,23,10,1,1,1,4,5,6,1,1,4,5,6,1,1,1,1,1,1,1,1,1,1,1,11,22,19,4,24,5,6,25,23,10,1,1,19,1,19,1,1,1,1,1,1,22,19,1,11,22,19,4,24,5,6,25,23,10,1,1,1,4,24,5,6,25,23,10,19,1,1,1,1,1,1,4,24,5,6,25,23,10,4,24,5,6,25,23,10,11,11,1,1,19,1,1,1,1,4,24,5,6,25,23,10,1,1,4,5,6,1,11,22,19,4,24,5,6,25,23,10,1,11,22,19,4,24,5,6,25,23,10,1,11,22,19,4,24,5,6,25,23,10,1,1,1],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,1]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,2],[1],[[[1,[3]]],[[1,[3]]]],[4,4],[5,5],[6,6],[[[1,[3]],[1,[3]]]],[[]],[[]],[[]],[[]],[[[1,[7]],[1,[7]]],8],[[1,2],9],[[],1],[1,10],[[1,2],11],[[[1,[12]],[1,[12]]],9],[[],9],[[1,13]],[[[1,[14]],13]],[[[1,[15]],16],17],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[13,1],[[1,2],18],[19],[[1,2],18],[19],[[[1,[20]],21]],[[1,2]],[[1,2]],[[1,2]],[[1,2]],[[1,2],18],[22],[19],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,23],[1,4],[1,24],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[19],[1,9],[1,4],[1,24],[1,5],[1,2],[[],1],[4,18],[24,18],[5,[[18,[2]]]],[6,18],[25,18],[23,18],[10,18],[4,18],[24,18],[5,[[18,[2]]]],[6,18],[25,18],[23,18],[10,18],[11],[[11,26]],[[[1,[27]],[1,[27]]],[[18,[8]]]],[[1,2],18],[19],[[1,2]],[[1,2]],[[1,28]],[1],[4],[24],[5],[6],[25],[23],[10],[[1,2],1],[[]],[[]],[[]],[[]],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[1,6],[1,25],[2,1]],"c":[],"p":[[3,"VecMap"],[15,"usize"],[8,"Clone"],[3,"Iter"],[3,"Keys"],[3,"Values"],[8,"Ord"],[4,"Ordering"],[15,"bool"],[3,"Drain"],[4,"Entry"],[8,"PartialEq"],[8,"IntoIterator"],[8,"Copy"],[8,"Debug"],[3,"Formatter"],[6,"Result"],[4,"Option"],[3,"OccupiedEntry"],[8,"Hash"],[8,"Hasher"],[3,"VacantEntry"],[3,"IntoIter"],[3,"IterMut"],[3,"ValuesMut"],[8,"FnOnce"],[8,"PartialOrd"],[8,"FnMut"],[4,"Result"],[3,"TypeId"]]},\
"waker_fn":{"doc":"Convert closures into wakers.","t":"F","n":["waker_fn"],"q":[[0,"waker_fn"]],"d":["Converts a closure into a <code>Waker</code>."],"i":[0],"f":[[[[0,[1,2,3]]],4]],"c":[],"p":[[8,"Fn"],[8,"Send"],[8,"Sync"],[3,"Waker"]]},\
"wayland_client":{"doc":"Client-side Wayland connector","t":"DENDEDDQDNDNEEIDNINNSDQINSNNNENNDDEDDDNQNNDSNNLMKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLKLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLOLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLKLLLLLLLLOLLLMLLLLLLLLLLLLLLLLLLLLKLLKLLLMMLLLKLMMKLMLALLLLLLLLLLLKLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMAAAAAAAAAAAAAAAAAAAAAANRERNEDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLHHHNREEDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLHHMNNERREDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLHHNNRRRRRRNEENNRRRNENNNNDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLHHHMMMMMMMMMMMMMMMMSSNDENSSRREDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLHHMNNNRRREENNNNNNRRRRRNENNDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLHHHMMMMMMMMMNNNNNRRRRRREENNNRRRENNNDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLHHHMMMMMMNRRENENNNNNRRENDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLHHHMMMMRRRRRRNENENENNNNRNNNEDNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLHHHMMMMMMMMMMMMMMMMMMMSNNRRRRRRENNNNNNNDNNNNSRNENEENNNDNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLHHHMMMMMMMMMMMMMMMENNENNNENRRRRRRRRRNEENNNNNNRRNNENNNNNDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLHHHMMMMMMMMMMMMMMMMMMMMMMMMMNNERRRENDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLHHMMMMMMMMNRRENNREDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLHHHMMMMMMNDRREENNNSNNSRRRRNESDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLHHHMMEENRENDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLHHMSSSNNNRRRENESSNSNNNRRRRRRRRRREDNSNNNNNNNNSSSDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLHHHMMMMMMMMMMMMMMMMMMMMMMMMMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNREEENNNNNNNNNNNNNNNNNNNNNRENNNNNNNNNNNNNNNNNNNNDNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLHHHMMMNNERRRENDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLHHMMMMMMNNEENRREDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLHHMMNNEENNRRRRRRENNNDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLHHMMMMNNNNNRRNEENNNNNNNRRRRRRRRRRRENNNNDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLHHHMMMMMMMMMMMMMMMMMMMNNRRRRRRRENNNRNENNDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLHHHMMMMMMMMMMMMMMMMMMAADDDLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLMMMMEMMMMMMMMMMMMMMMMMMEMMMMMMMMEMMMMMMMMMMMMMMMMMMMMMLLLLLLLLLLMMMMLLLLLMMLLLLLMMMMMMMMMMMLLLLLLLLLLLLLLLMMMTDGFFGFFDDGD","n":["AnonymousObject","Argument","Array","Attached","ConnectError","DispatchData","Display","Event","EventQueue","Fd","Filter","Float","GlobalError","GlobalEvent","GlobalImplementor","GlobalManager","Int","Interface","InvalidFd","InvalidName","MESSAGES","Main","Map","MessageGroup","Missing","NAME","New","NewId","NoCompositorListening","NoMessage","NoWaylandLib","Object","ProtocolError","Proxy","ProxyMap","QueueToken","RawEvent","ReadEventsGuard","Removed","Request","Str","Uint","UserData","VERSION","VersionTooLow","XdgRuntimeDirNotSet","anonymize","args","as_raw_c_in","as_raw_c_in","as_ref","assign","attach","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_interface","c_interface","c_ptr","cancel","child","child","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","code","connect_to_env","connect_to_name","create_event_queue","deanonymize","deanonymize","deref","deref","deref","description","detach","dispatch","dispatch_pending","display","drop","drop","eq","eq","eq","eq","eq","equals","equivalent","equivalent","error","error","event_enum","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_c_ptr","from_c_ptr","from_external_display","from_fd","from_raw","from_raw","from_raw_c","from_raw_c","get","get","get","get_connection_fd","get_display_ptr","get_new","get_or_dead","global_filter","id","instantiate_exact","instantiate_range","interface","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_raw","into_raw","is_alive","is_destructor","is_destructor","is_external","list","message","name","new","new","new","new_global","new_with_cb","object_id","object_interface","opcode","opcode","opcode","prepare_read","protocol","protocol_error","provide","provide","provide","quick_assign","read_events","reborrow","send","send","set","set_threadsafe","since","since","sync_roundtrip","sys","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","token","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","user_data","version","wrap","id","id","interface","interface","version","wl_buffer","wl_callback","wl_compositor","wl_data_device","wl_data_device_manager","wl_data_offer","wl_data_source","wl_display","wl_keyboard","wl_output","wl_pointer","wl_region","wl_registry","wl_seat","wl_shell","wl_shell_surface","wl_shm","wl_shm_pool","wl_subcompositor","wl_subsurface","wl_surface","wl_touch","Destroy","EVT_RELEASE_SINCE","Event","REQ_DESTROY_SINCE","Release","Request","WlBuffer","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone_into","destroy","eq","equivalent","fmt","fmt","fmt","from","from","from","from","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","since","since","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","wl_buffer_events","wl_buffer_interface","wl_buffer_requests","Done","EVT_DONE_SINCE","Event","Request","WlCallback","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone_into","eq","equivalent","fmt","fmt","fmt","from","from","from","from","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","since","since","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","wl_callback_events","wl_callback_interface","callback_data","CreateRegion","CreateSurface","Event","REQ_CREATE_REGION_SINCE","REQ_CREATE_SURFACE_SINCE","Request","WlCompositor","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone_into","create_region","create_surface","eq","equivalent","fmt","fmt","fmt","from","from","from","from","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","since","since","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","wl_compositor_interface","wl_compositor_requests","DataOffer","Drop","EVT_DATA_OFFER_SINCE","EVT_DROP_SINCE","EVT_ENTER_SINCE","EVT_LEAVE_SINCE","EVT_MOTION_SINCE","EVT_SELECTION_SINCE","Enter","Error","Event","Leave","Motion","REQ_RELEASE_SINCE","REQ_SET_SELECTION_SINCE","REQ_START_DRAG_SINCE","Release","Request","Role","Selection","SetSelection","StartDrag","WlDataDevice","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone","clone_into","clone_into","eq","eq","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from_raw","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","release","set_selection","since","since","start_drag","to_owned","to_owned","to_raw","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","wl_data_device_events","wl_data_device_interface","wl_data_device_requests","id","id","id","serial","surface","time","x","x","y","y","icon","origin","serial","serial","source","source","Ask","Copy","CreateDataSource","DndAction","Event","GetDataDevice","Move","None","REQ_CREATE_DATA_SOURCE_SINCE","REQ_GET_DATA_DEVICE_SINCE","Request","WlDataDeviceManager","all","as_raw_c_in","as_raw_c_in","as_ref","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone","clone_into","clone_into","cmp","complement","contains","create_data_source","difference","empty","eq","eq","equivalent","equivalent","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","from_raw","from_raw","from_raw","from_raw_c","from_raw_c","get_data_device","hash","insert","intersection","intersects","into","into","into","into","into_raw","into_raw","is_all","is_destructor","is_destructor","is_empty","not","opcode","opcode","partial_cmp","remove","set","since","since","sub","sub_assign","symmetric_difference","to_owned","to_owned","to_raw","toggle","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","union","wl_data_device_manager_interface","wl_data_device_manager_requests","seat","Accept","Action","Destroy","EVT_ACTION_SINCE","EVT_OFFER_SINCE","EVT_SOURCE_ACTIONS_SINCE","Error","Event","Finish","InvalidAction","InvalidActionMask","InvalidFinish","InvalidOffer","Offer","REQ_ACCEPT_SINCE","REQ_DESTROY_SINCE","REQ_FINISH_SINCE","REQ_RECEIVE_SINCE","REQ_SET_ACTIONS_SINCE","Receive","Request","SetActions","SourceActions","WlDataOffer","accept","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone","clone_into","clone_into","destroy","eq","eq","equivalent","finish","fmt","fmt","fmt","fmt","from","from","from","from","from","from_raw","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","receive","set_actions","since","since","to_owned","to_owned","to_raw","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","wl_data_offer_events","wl_data_offer_interface","wl_data_offer_requests","dnd_action","mime_type","source_actions","dnd_actions","fd","mime_type","mime_type","preferred_action","serial","Action","Cancelled","Destroy","DndDropPerformed","DndFinished","EVT_ACTION_SINCE","EVT_CANCELLED_SINCE","EVT_DND_DROP_PERFORMED_SINCE","EVT_DND_FINISHED_SINCE","EVT_SEND_SINCE","EVT_TARGET_SINCE","Error","Event","InvalidActionMask","InvalidSource","Offer","REQ_DESTROY_SINCE","REQ_OFFER_SINCE","REQ_SET_ACTIONS_SINCE","Request","Send","SetActions","Target","WlDataSource","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone","clone_into","clone_into","destroy","eq","eq","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from_raw","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into","into_raw","into_raw","is_destructor","is_destructor","offer","opcode","opcode","set_actions","since","since","to_owned","to_owned","to_raw","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","wl_data_source_events","wl_data_source_interface","wl_data_source_requests","dnd_action","fd","mime_type","mime_type","dnd_actions","mime_type","DeleteId","EVT_DELETE_ID_SINCE","EVT_ERROR_SINCE","Error","Error","Event","GetRegistry","Implementation","InvalidMethod","InvalidObject","NoMemory","REQ_GET_REGISTRY_SINCE","REQ_SYNC_SINCE","Request","Sync","WlDisplay","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone","clone_into","clone_into","eq","eq","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from_raw","from_raw","from_raw","from_raw_c","from_raw_c","get_registry","into","into","into","into","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","since","since","sync","to_owned","to_owned","to_raw","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","wl_display_events","wl_display_interface","wl_display_requests","code","id","message","object_id","EVT_ENTER_SINCE","EVT_KEYMAP_SINCE","EVT_KEY_SINCE","EVT_LEAVE_SINCE","EVT_MODIFIERS_SINCE","EVT_REPEAT_INFO_SINCE","Enter","Event","Key","KeyState","Keymap","KeymapFormat","Leave","Modifiers","NoKeymap","Pressed","REQ_RELEASE_SINCE","Release","Released","RepeatInfo","Request","WlKeyboard","XkbV1","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone","clone","clone_into","clone_into","clone_into","eq","eq","eq","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_raw","from_raw","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into","into","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","release","since","since","to_owned","to_owned","to_owned","to_raw","to_raw","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","wl_keyboard_events","wl_keyboard_interface","wl_keyboard_requests","delay","fd","format","group","key","keys","mods_depressed","mods_latched","mods_locked","rate","serial","serial","serial","serial","size","state","surface","surface","time","Current","Description","Done","EVT_DESCRIPTION_SINCE","EVT_DONE_SINCE","EVT_GEOMETRY_SINCE","EVT_MODE_SINCE","EVT_NAME_SINCE","EVT_SCALE_SINCE","Event","Flipped","Flipped180","Flipped270","Flipped90","Geometry","HorizontalBgr","HorizontalRgb","Mode","Mode","Name","None","Normal","Preferred","REQ_RELEASE_SINCE","Release","Request","Scale","Subpixel","Transform","Unknown","VerticalBgr","VerticalRgb","WlOutput","_180","_270","_90","all","as_raw_c_in","as_raw_c_in","as_ref","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","complement","contains","difference","empty","eq","eq","eq","eq","equivalent","equivalent","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","from_raw","from_raw","from_raw","from_raw","from_raw","from_raw_c","from_raw_c","hash","insert","intersection","intersects","into","into","into","into","into","into","into_raw","into_raw","is_all","is_destructor","is_destructor","is_empty","not","opcode","opcode","partial_cmp","release","remove","set","since","since","sub","sub_assign","symmetric_difference","to_owned","to_owned","to_owned","to_owned","to_raw","to_raw","to_raw","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","union","wl_output_events","wl_output_interface","wl_output_requests","description","factor","flags","height","make","model","name","physical_height","physical_width","refresh","subpixel","transform","width","x","y","Axis","Axis","AxisDiscrete","AxisSource","AxisSource","AxisStop","Button","ButtonState","Continuous","EVT_AXIS_DISCRETE_SINCE","EVT_AXIS_SINCE","EVT_AXIS_SOURCE_SINCE","EVT_AXIS_STOP_SINCE","EVT_BUTTON_SINCE","EVT_ENTER_SINCE","EVT_FRAME_SINCE","EVT_LEAVE_SINCE","EVT_MOTION_SINCE","Enter","Error","Event","Finger","Frame","HorizontalScroll","Leave","Motion","Pressed","REQ_RELEASE_SINCE","REQ_SET_CURSOR_SINCE","Release","Released","Request","Role","SetCursor","VerticalScroll","Wheel","WheelTilt","WlPointer","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","eq","eq","eq","eq","eq","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_raw","from_raw","from_raw","from_raw","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into","into","into","into","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","release","set_cursor","since","since","to_owned","to_owned","to_owned","to_owned","to_owned","to_raw","to_raw","to_raw","to_raw","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","wl_pointer_events","wl_pointer_interface","wl_pointer_requests","axis","axis","axis","axis_source","button","discrete","serial","serial","serial","state","surface","surface","surface_x","surface_x","surface_y","surface_y","time","time","time","time","value","hotspot_x","hotspot_y","serial","surface","Add","Destroy","Event","REQ_ADD_SINCE","REQ_DESTROY_SINCE","REQ_SUBTRACT_SINCE","Request","Subtract","WlRegion","add","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone_into","destroy","eq","equivalent","fmt","fmt","fmt","from","from","from","from","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","since","since","subtract","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","wl_region_interface","wl_region_requests","height","height","width","width","x","x","y","y","Bind","EVT_GLOBAL_REMOVE_SINCE","EVT_GLOBAL_SINCE","Event","Global","GlobalRemove","REQ_BIND_SINCE","Request","WlRegistry","as_raw_c_in","as_raw_c_in","as_ref","bind","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone_into","eq","equivalent","fmt","fmt","fmt","from","from","from","from","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","since","since","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","wl_registry_events","wl_registry_interface","wl_registry_requests","interface","name","name","version","id","name","Capabilities","Capability","EVT_CAPABILITIES_SINCE","EVT_NAME_SINCE","Error","Event","GetKeyboard","GetPointer","GetTouch","Keyboard","MissingCapability","Name","Pointer","REQ_GET_KEYBOARD_SINCE","REQ_GET_POINTER_SINCE","REQ_GET_TOUCH_SINCE","REQ_RELEASE_SINCE","Release","Request","Touch","WlSeat","all","as_raw_c_in","as_raw_c_in","as_ref","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone","clone","clone_into","clone_into","clone_into","cmp","complement","contains","difference","empty","eq","eq","eq","equivalent","equivalent","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","from_raw","from_raw","from_raw","from_raw","from_raw_c","from_raw_c","get_keyboard","get_pointer","get_touch","hash","insert","intersection","intersects","into","into","into","into","into","into_raw","into_raw","is_all","is_destructor","is_destructor","is_empty","not","opcode","opcode","partial_cmp","release","remove","set","since","since","sub","sub_assign","symmetric_difference","to_owned","to_owned","to_owned","to_raw","to_raw","toggle","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","union","wl_seat_events","wl_seat_interface","wl_seat_requests","capabilities","name","Error","Event","GetShellSurface","REQ_GET_SHELL_SURFACE_SINCE","Request","Role","WlShell","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone","clone_into","clone_into","eq","eq","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from_raw","from_raw","from_raw","from_raw_c","from_raw_c","get_shell_surface","into","into","into","into","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","since","since","to_owned","to_owned","to_raw","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","wl_shell_interface","wl_shell_requests","surface","Bottom","BottomLeft","BottomRight","Configure","Default","Driver","EVT_CONFIGURE_SINCE","EVT_PING_SINCE","EVT_POPUP_DONE_SINCE","Event","Fill","FullscreenMethod","Inactive","Left","Move","None","Ping","Pong","PopupDone","REQ_MOVE_SINCE","REQ_PONG_SINCE","REQ_RESIZE_SINCE","REQ_SET_CLASS_SINCE","REQ_SET_FULLSCREEN_SINCE","REQ_SET_MAXIMIZED_SINCE","REQ_SET_POPUP_SINCE","REQ_SET_TITLE_SINCE","REQ_SET_TOPLEVEL_SINCE","REQ_SET_TRANSIENT_SINCE","Request","Resize","Resize","Right","Scale","SetClass","SetFullscreen","SetMaximized","SetPopup","SetTitle","SetToplevel","SetTransient","Top","TopLeft","TopRight","Transient","WlShellSurface","_move","all","all","as_raw_c_in","as_raw_c_in","as_ref","bitand","bitand","bitand_assign","bitand_assign","bitor","bitor","bitor_assign","bitor_assign","bits","bits","bitxor","bitxor","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","cmp","complement","complement","contains","contains","difference","difference","empty","empty","eq","eq","eq","eq","equivalent","equivalent","equivalent","extend","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_bits","from_bits","from_bits_truncate","from_bits_truncate","from_bits_unchecked","from_bits_unchecked","from_iter","from_iter","from_raw","from_raw","from_raw","from_raw","from_raw","from_raw_c","from_raw_c","hash","hash","insert","insert","intersection","intersection","intersects","intersects","into","into","into","into","into","into","into_raw","into_raw","is_all","is_all","is_destructor","is_destructor","is_empty","is_empty","not","not","opcode","opcode","partial_cmp","partial_cmp","pong","remove","remove","resize","set","set","set_class","set_fullscreen","set_maximized","set_popup","set_title","set_toplevel","set_transient","since","since","sub","sub","sub_assign","sub_assign","symmetric_difference","symmetric_difference","to_owned","to_owned","to_owned","to_owned","to_raw","to_raw","to_raw","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","union","union","wl_shell_surface_events","wl_shell_surface_interface","wl_shell_surface_requests","edges","height","serial","width","class_","edges","flags","flags","framerate","method","output","output","parent","parent","seat","seat","seat","serial","serial","serial","serial","title","x","x","y","y","Abgr1555","Abgr16161616","Abgr16161616f","Abgr2101010","Abgr4444","Abgr8888","Argb1555","Argb16161616","Argb16161616f","Argb2101010","Argb4444","Argb8888","Axbxgxrx106106106106","Ayuv","Bgr233","Bgr565","Bgr565A8","Bgr888","Bgr888A8","Bgra1010102","Bgra4444","Bgra5551","Bgra8888","Bgrx1010102","Bgrx4444","Bgrx5551","Bgrx8888","Bgrx8888A8","C8","CreatePool","EVT_FORMAT_SINCE","Error","Event","Format","Format","Gr1616","Gr88","InvalidFd","InvalidFormat","InvalidStride","Nv12","Nv15","Nv16","Nv21","Nv24","Nv42","Nv61","P010","P012","P016","P210","Q401","Q410","R16","R8","REQ_CREATE_POOL_SINCE","Request","Rg1616","Rg88","Rgb332","Rgb565","Rgb565A8","Rgb888","Rgb888A8","Rgba1010102","Rgba4444","Rgba5551","Rgba8888","Rgbx1010102","Rgbx4444","Rgbx5551","Rgbx8888","Rgbx8888A8","Uyvy","Vuy101010","Vuy888","Vyuy","WlShm","X0l0","X0l2","Xbgr1555","Xbgr16161616","Xbgr16161616f","Xbgr2101010","Xbgr4444","Xbgr8888","Xbgr8888A8","Xrgb1555","Xrgb16161616","Xrgb16161616f","Xrgb2101010","Xrgb4444","Xrgb8888","Xrgb8888A8","Xvyu1216161616","Xvyu16161616","Xvyu2101010","Xyuv8888","Y0l0","Y0l2","Y210","Y212","Y216","Y410","Y412","Y416","Yuv410","Yuv411","Yuv420","Yuv42010bit","Yuv4208bit","Yuv422","Yuv444","Yuyv","Yvu410","Yvu411","Yvu420","Yvu422","Yvu444","Yvyu","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone","clone","clone_into","clone_into","clone_into","create_pool","eq","eq","eq","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_raw","from_raw","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into","into","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","since","since","to_owned","to_owned","to_owned","to_raw","to_raw","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","wl_shm_events","wl_shm_interface","wl_shm_requests","format","fd","size","CreateBuffer","Destroy","Event","REQ_CREATE_BUFFER_SINCE","REQ_DESTROY_SINCE","REQ_RESIZE_SINCE","Request","Resize","WlShmPool","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone_into","create_buffer","destroy","eq","equivalent","fmt","fmt","fmt","from","from","from","from","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","resize","since","since","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","wl_shm_pool_interface","wl_shm_pool_requests","format","height","offset","size","stride","width","BadSurface","Destroy","Error","Event","GetSubsurface","REQ_DESTROY_SINCE","REQ_GET_SUBSURFACE_SINCE","Request","WlSubcompositor","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone","clone_into","clone_into","destroy","eq","eq","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from_raw","from_raw","from_raw","from_raw_c","from_raw_c","get_subsurface","into","into","into","into","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","since","since","to_owned","to_owned","to_raw","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","wl_subcompositor_interface","wl_subcompositor_requests","parent","surface","BadSurface","Destroy","Error","Event","PlaceAbove","PlaceBelow","REQ_DESTROY_SINCE","REQ_PLACE_ABOVE_SINCE","REQ_PLACE_BELOW_SINCE","REQ_SET_DESYNC_SINCE","REQ_SET_POSITION_SINCE","REQ_SET_SYNC_SINCE","Request","SetDesync","SetPosition","SetSync","WlSubsurface","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone","clone_into","clone_into","destroy","eq","eq","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from_raw","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","place_above","place_below","set_desync","set_position","set_sync","since","since","to_owned","to_owned","to_raw","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","wl_subsurface_interface","wl_subsurface_requests","sibling","sibling","x","y","Attach","Commit","Damage","DamageBuffer","Destroy","EVT_ENTER_SINCE","EVT_LEAVE_SINCE","Enter","Error","Event","Frame","InvalidOffset","InvalidScale","InvalidSize","InvalidTransform","Leave","Offset","REQ_ATTACH_SINCE","REQ_COMMIT_SINCE","REQ_DAMAGE_BUFFER_SINCE","REQ_DAMAGE_SINCE","REQ_DESTROY_SINCE","REQ_FRAME_SINCE","REQ_OFFSET_SINCE","REQ_SET_BUFFER_SCALE_SINCE","REQ_SET_BUFFER_TRANSFORM_SINCE","REQ_SET_INPUT_REGION_SINCE","REQ_SET_OPAQUE_REGION_SINCE","Request","SetBufferScale","SetBufferTransform","SetInputRegion","SetOpaqueRegion","WlSurface","as_raw_c_in","as_raw_c_in","as_ref","attach","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone","clone_into","clone_into","commit","damage","damage_buffer","destroy","eq","eq","equivalent","fmt","fmt","fmt","fmt","frame","from","from","from","from","from","from_raw","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into","into_raw","into_raw","is_destructor","is_destructor","offset","opcode","opcode","set_buffer_scale","set_buffer_transform","set_input_region","set_opaque_region","since","since","to_owned","to_owned","to_raw","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","wl_surface_events","wl_surface_interface","wl_surface_requests","output","output","buffer","height","height","region","region","scale","transform","width","width","x","x","x","x","y","y","y","y","Cancel","Down","EVT_CANCEL_SINCE","EVT_DOWN_SINCE","EVT_FRAME_SINCE","EVT_MOTION_SINCE","EVT_ORIENTATION_SINCE","EVT_SHAPE_SINCE","EVT_UP_SINCE","Event","Frame","Motion","Orientation","REQ_RELEASE_SINCE","Release","Request","Shape","Up","WlTouch","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone_into","eq","equivalent","fmt","fmt","fmt","from","from","from","from","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","release","since","since","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","wl_touch_events","wl_touch_interface","wl_touch_requests","id","id","id","id","id","major","minor","orientation","serial","serial","surface","time","time","time","x","x","y","y","client","common","WAYLAND_CLIENT_HANDLE","WAYLAND_CLIENT_OPTION","WaylandClient","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deref","deref","from","from","from","from","from","from","into","into","into","into","into","into","is_lib_available","open","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","wl_array_add","wl_array_copy","wl_array_init","wl_array_release","wl_display","wl_display_cancel_read","wl_display_connect","wl_display_connect_to_fd","wl_display_create_queue","wl_display_disconnect","wl_display_dispatch","wl_display_dispatch_pending","wl_display_dispatch_queue","wl_display_dispatch_queue_pending","wl_display_flush","wl_display_get_error","wl_display_get_fd","wl_display_get_protocol_error","wl_display_prepare_read","wl_display_prepare_read_queue","wl_display_read_events","wl_display_roundtrip","wl_display_roundtrip_queue","wl_event_queue","wl_event_queue_destroy","wl_list_empty","wl_list_init","wl_list_insert","wl_list_insert_list","wl_list_length","wl_list_remove","wl_log_set_handler_client","wl_proxy","wl_proxy_add_dispatcher","wl_proxy_add_listener","wl_proxy_create","wl_proxy_create_wrapper","wl_proxy_destroy","wl_proxy_get_class","wl_proxy_get_id","wl_proxy_get_listener","wl_proxy_get_user_data","wl_proxy_get_version","wl_proxy_marshal","wl_proxy_marshal_array","wl_proxy_marshal_array_constructor","wl_proxy_marshal_array_constructor_versioned","wl_proxy_marshal_constructor","wl_proxy_marshal_constructor_versioned","wl_proxy_set_queue","wl_proxy_set_user_data","wl_proxy_wrapper_destroy","a","alloc","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","data","event_count","events","f","from","from","from","from","from","h","i","into","into","into","into","into","n","name","name","next","o","prev","request_count","requests","s","signature","size","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","types","u","version","wl_argument","wl_array","wl_dispatcher_func_t","wl_fixed_from_double","wl_fixed_from_int","wl_fixed_t","wl_fixed_to_double","wl_fixed_to_int","wl_interface","wl_list","wl_log_func_t","wl_message"],"q":[[0,"wayland_client"],[365,"wayland_client::GlobalEvent"],[370,"wayland_client::protocol"],[392,"wayland_client::protocol::wl_buffer"],[451,"wayland_client::protocol::wl_callback"],[506,"wayland_client::protocol::wl_callback::Event"],[507,"wayland_client::protocol::wl_compositor"],[566,"wayland_client::protocol::wl_data_device"],[657,"wayland_client::protocol::wl_data_device::Event"],[667,"wayland_client::protocol::wl_data_device::Request"],[673,"wayland_client::protocol::wl_data_device_manager"],[789,"wayland_client::protocol::wl_data_device_manager::Request"],[790,"wayland_client::protocol::wl_data_offer"],[884,"wayland_client::protocol::wl_data_offer::Event"],[887,"wayland_client::protocol::wl_data_offer::Request"],[893,"wayland_client::protocol::wl_data_source"],[985,"wayland_client::protocol::wl_data_source::Event"],[989,"wayland_client::protocol::wl_data_source::Request"],[991,"wayland_client::protocol::wl_display"],[1074,"wayland_client::protocol::wl_display::Event"],[1078,"wayland_client::protocol::wl_keyboard"],[1181,"wayland_client::protocol::wl_keyboard::Event"],[1200,"wayland_client::protocol::wl_output"],[1368,"wayland_client::protocol::wl_output::Event"],[1383,"wayland_client::protocol::wl_pointer"],[1530,"wayland_client::protocol::wl_pointer::Event"],[1551,"wayland_client::protocol::wl_pointer::Request"],[1555,"wayland_client::protocol::wl_region"],[1617,"wayland_client::protocol::wl_region::Request"],[1625,"wayland_client::protocol::wl_registry"],[1686,"wayland_client::protocol::wl_registry::Event"],[1690,"wayland_client::protocol::wl_registry::Request"],[1692,"wayland_client::protocol::wl_seat"],[1834,"wayland_client::protocol::wl_seat::Event"],[1836,"wayland_client::protocol::wl_shell"],[1908,"wayland_client::protocol::wl_shell::Request"],[1909,"wayland_client::protocol::wl_shell_surface"],[2134,"wayland_client::protocol::wl_shell_surface::Event"],[2138,"wayland_client::protocol::wl_shell_surface::Request"],[2160,"wayland_client::protocol::wl_shm"],[2360,"wayland_client::protocol::wl_shm::Event"],[2361,"wayland_client::protocol::wl_shm::Request"],[2363,"wayland_client::protocol::wl_shm_pool"],[2425,"wayland_client::protocol::wl_shm_pool::Request"],[2431,"wayland_client::protocol::wl_subcompositor"],[2506,"wayland_client::protocol::wl_subcompositor::Request"],[2508,"wayland_client::protocol::wl_subsurface"],[2595,"wayland_client::protocol::wl_subsurface::Request"],[2599,"wayland_client::protocol::wl_surface"],[2709,"wayland_client::protocol::wl_surface::Event"],[2711,"wayland_client::protocol::wl_surface::Request"],[2728,"wayland_client::protocol::wl_touch"],[2799,"wayland_client::protocol::wl_touch::Event"],[2817,"wayland_client::sys"],[2819,"wayland_client::sys::client"],[2920,"wayland_client::sys::common"]],"d":["Anonymous interface","Enum of possible argument in an event","Vec","A handle to a proxy that has been attached to an event …","Enum representing the possible reasons why connecting to …","Holder of global dispatch-related data","A connection to a wayland server","Set of events associated to this interface","An event queue for protocol messages","RawFd","An event filter","float","An error that occurred trying to bind a global","Event provided to the user callback of GlobalManager","A trait for implementation of the global advertisement","An utility to manage global objects","i32","The description of a wayland interface","The FD provided in <code>WAYLAND_SOCKET</code> was invalid","The provided socket name is invalid","Wire representation of this MessageGroup","A main handle to a proxy","The wrapper type for ObjectMap allowing the mapping of …","A group of messages","The requested global was missing","Name of this interface","A new global was created","id of a newly created wayland object","Any needed library was found, but the listening socket of …","An empty enum representing a MessageGroup with no messages","The library was compiled with the <code>dlopen</code> feature, and the …","id of a wayland object","A protocol error","An handle to a wayland proxy","This type only exists for type-level compatibility with …","A token representing this event queue","An generic event","A guard over a read intention.","A global was removed","Set of requests associated to this interface","CString","u32","A wrapper for user data, able to store any type, and …","Maximum supported version of this interface","The global advertised by the server has a lower version …","The <code>XDG_RUNTIME_DIR</code> variable is not set while it should be","Erase the actual type of this proxy","Arguments of the message","Build a C representation of this message","","","Assign this object to given filter","Attach this proxy to the event queue represented by this …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Pointer to the C representation of this interface","","Get a raw pointer to the underlying wayland object","Cancel the read","Retrieve the child <code>Object</code> associated with this message if …","","","","","","","","","","","","","","","","","","","","The error code associated with the error","Attempt to connect to a wayland server using the contents …","Attempt to connect to a wayland server socket with given …","Create a new event queue associated with this wayland …","Attempt to recover the typed variant of an anonymous proxy","Attempt to recover the typed variant of an anonymous proxy","","","","","Create a non-attached handle from this one","Dispatches events from the internal buffer.","Dispatches pending events from the internal buffer.","Access the <code>Display</code> of the connection","","","","","","","","Check if the other proxy refers to the same underlying …","","","A global was advertised but its version was lower than the …","A global was advertised but its version was lower than the …","Generate an enum joining several objects events","Non-blocking write to the server","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Create a <code>Proxy</code> instance from a C pointer","Create a <code>Main</code> instance from a C pointer","Create a Display and from an external display","Attempt to use an already connected unix socket on given …","Construct a message from its raw representation","","Construct a message of this group from its C representation","","Access the dispatch data knowing its type","Attempt to access the wrapped user data","Unusable method only existing for type-level compatibility","Retrieve the file descriptor associated with the wayland …","Retrieve the <code>wl_display</code> pointer","Unusable method only existing for type-level compatibility","Unusable method only existing for type-level compatibility","Convenience macro to create a <code>GlobalManager</code> callback","Retrieve the object id of this wayland object","Instantiate a global with a specific version","Instantiate a global from a version range","Interface of the associated object","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Turn this message into its raw representation","","Check if the object associated with this proxy is still …","Whether this message is a destructor","","Check whether this proxy is managed by the library or not","Retrieve the list of currently known globals","The message sent by the server describing the error","Name of the event","Create a new filter from given closure","Create a new UserData instance","Create a global manager handling a registry","A new global of given interface has been instantiated and …","Create a global manager handling a registry with a callback","The id of the object that caused the error","The interface of the object that caused the error","The opcode of this message","","Opcode of the event","Prepare an concurrent read","","Retrieve the last protocol error if any occured","","","","Shorthand for assigning a closure to an object","Read events","Reborrows this <code>DispatchData</code> to create a new one with the …","Send a message to this filter","Send a request creating an object through this object","Sets the UserData to a given value","Sets the UserData to a given threadsafe value","The minimal object version for which this message exists","","Synchronous roundtrip","C-associated types","","","","","","","","","","","","","Create a new token associated with this event queue","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Access the UserData associated to this object","Retrieve the interface version of this wayland object …","Wrap a mutable reference","Id of the new global","Id of the removed global","Interface of the new global","Interface of the removed global","Maximum supported version of the new global","content for a wl_surface","callback object","the compositor singleton","data transfer device","data transfer interface","offer to transfer data","offer to transfer data","core global object","keyboard input device","compositor output region","pointer input device","region interface","global registry object","group of input devices","create desktop-style surfaces","desktop-style metadata interface","shared memory support","a shared memory pool","sub-surface compositing","sub-surface interface to a wl_surface","an onscreen surface","touchscreen input device","destroy a buffer","The minimal object version supporting this event","","The minimal object version supporting this request","compositor releases buffer","","","","","","","","","","","","","","","","","destroy a buffer","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","done event","The minimal object version supporting this event","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","C-representation of the messages of this interface, for …","C representation of this interface, for interop","","create new region","create new surface","","The minimal object version supporting this request","The minimal object version supporting this request","","","","","","","","","","","","","","","","","create new region","create new surface","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","C representation of this interface, for interop","C-representation of the messages of this interface, for …","introduce a new wl_data_offer","end drag-and-drop session successfully","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","initiate drag-and-drop session","","","end drag-and-drop session","drag-and-drop session motion","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","destroy data device","","given wl_surface has another role","advertise new selection","copy data to the selection","start drag-and-drop operation","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","destroy data device","copy data to the selection","","","start drag-and-drop operation","","","","","","","","","","","","","","","","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","","","","","","","","","","","","","","","ask action","copy action","create a new data source","drag and drop actions","","create a new data device","move action","no action","The minimal object version supporting this request","The minimal object version supporting this request","","","Returns the set containing all flags.","","","","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","create a new data source","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","","","","","create a new data device","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Returns <code>true</code> if all flags are currently set.","","","Returns <code>true</code> if no flags are currently stored.","Returns the complement of this set of flags.","","","","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","","","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","","","","Toggles the specified flags in-place.","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","accept one of the offered mime types","notify the selected action","destroy data offer","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","","","the offer will no longer be used","action argument has an invalid value","action mask contains invalid values","finish request was called untimely","offer doesn’t accept this request","advertise offered mime type","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","request that the data is transferred","","set the available/preferred drag-and-drop actions","notify the source-side available actions","","accept one of the offered mime types","","","","","","","","","","","","","","","","","","","destroy data offer","","","","the offer will no longer be used","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","request that the data is transferred","set the available/preferred drag-and-drop actions","","","","","","","","","","","","","","","","","","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","","","","","","","","notify the selected action","selection was cancelled","destroy the data source","the drag-and-drop operation physically finished","the drag-and-drop operation concluded","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","","","action mask contains invalid values","source doesn’t accept this request","add an offered mime type","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","","send the data","set the available drag-and-drop actions","a target accepts an offered mime type","","","","","","","","","","","","","","","","","","","","destroy the data source","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","add an offered mime type","","","set the available drag-and-drop actions","","","","","","","","","","","","","","","","","","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","","","","","acknowledge object ID deletion","The minimal object version supporting this event","The minimal object version supporting this event","global error values","fatal error event","","get global registry object","implementation error in compositor","method doesn’t exist on the specified interface or …","server couldn’t find object","server is out of memory","The minimal object version supporting this request","The minimal object version supporting this request","","asynchronous roundtrip","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","get global registry object","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","asynchronous roundtrip","","","","","","","","","","","","","","","","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","","","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","enter event","","key event","physical key state","keyboard mapping","keyboard mapping format","leave event","modifier and group state","no keymap; client must understand how to interpret the raw …","key is pressed","The minimal object version supporting this request","release the keyboard object","key is not pressed","repeat rate and delay","","","libxkbcommon compatible; to determine the xkb keycode, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","release the keyboard object","","","","","","","","","","","","","","","","","","","","","","","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","","","","","","","","","","","","","","","","","","indicates this is the current mode","human-readable description of this output","sent all information about output","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","","180 degree flip around a vertical axis","flip and rotate 180 degrees counter-clockwise","flip and rotate 270 degrees counter-clockwise","flip and rotate 90 degrees counter-clockwise","properties of the output","horizontal BGR","horizontal RGB","mode information","advertise available modes for the output","name of this output","no geometry","no transform","indicates this is the preferred mode","The minimal object version supporting this request","release the output object","","output scaling properties","subpixel geometry information","transform from framebuffer to output","unknown geometry","vertical BGR","vertical RGB","","180 degrees counter-clockwise","270 degrees counter-clockwise","90 degrees counter-clockwise","Returns the set containing all flags.","","","","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","","","","","","","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Returns <code>true</code> if all flags are currently set.","","","Returns <code>true</code> if no flags are currently stored.","Returns the complement of this set of flags.","","","","release the output object","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","","","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","","","","","","","","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","","","","","","","","","","","","","","axis types","axis event","axis click event","axis source types","axis source event","axis stop event","pointer button event","physical button state","continuous coordinate space","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","enter event","","","finger on a touch surface","end of a pointer event sequence","horizontal axis","leave event","pointer motion event","the button is pressed","The minimal object version supporting this request","The minimal object version supporting this request","release the pointer object","the button is not pressed","","given wl_surface has another role","set the pointer surface","vertical axis","a physical wheel rotation","a physical wheel tilt","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","release the pointer object","set the pointer surface","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","","","","","","","","","","","","","","","","","","","","","","","","add rectangle to region","destroy region","","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","","subtract rectangle from region","","add rectangle to region","","","","","","","","","","","","","","","destroy region","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","subtract rectangle from region","","","","","","","","","","","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","","","","","","","bind an object to the display","The minimal object version supporting this event","The minimal object version supporting this event","","announce global object","announce removal of global object","The minimal object version supporting this request","","","","","","bind an object to the display","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","","","","","seat capabilities changed","seat capability bitmask","The minimal object version supporting this event","The minimal object version supporting this event","wl_seat error values","","return keyboard object","return pointer object","return touch object","the seat has one or more keyboards","get_pointer, get_keyboard or get_touch called on seat …","unique identifier for this seat","the seat has pointer devices","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","release the seat object","","the seat has touch devices","","Returns the set containing all flags.","","","","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","","","","","","return keyboard object","return pointer object","return touch object","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Returns <code>true</code> if all flags are currently set.","","","Returns <code>true</code> if no flags are currently stored.","Returns the complement of this set of flags.","","","","release the seat object","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","","","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","","","","","","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","","","create a shell surface from a surface","The minimal object version supporting this request","","given wl_surface has another role","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","create a shell surface from a surface","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","bottom edge","bottom and left edges","bottom and right edges","suggest resize","no preference, apply default policy","switch output mode to the smallest mode that can fit the …","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","","no upscaling, center on output and add black borders to …","different method to set the surface fullscreen","do not set keyboard focus","left edge","start an interactive move","no edge","ping client","respond to a ping event","popup interaction is done","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","","edge values for resizing","start an interactive resize","right edge","scale, preserve the surface’s aspect ratio and center on …","set surface class","make the surface a fullscreen surface","make the surface a maximized surface","make the surface a popup surface","set surface title","make the surface a toplevel surface","make the surface a transient surface","top edge","top and left edges","top and right edges","details of transient behaviour","","start an interactive move","Returns the set containing all flags.","Returns the set containing all flags.","","","","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Adds the set of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Toggles the set of flags.","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","Returns an empty set of flags.","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","","","","","","","","","","","","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","","","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","","","","","respond to a ping event","Removes the specified flags in-place.","Removes the specified flags in-place.","start an interactive resize","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","set surface class","make the surface a fullscreen surface","make the surface a maximized surface","make the surface a popup surface","set surface title","make the surface a toplevel surface","make the surface a transient surface","","","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","","","","","","","","Toggles the specified flags in-place.","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","","","","","","","","","","","","","","","","","","","","","","","","","16-bit ABGR 1555 format, [15:0] A:B:G:R 1:5:5:5 little …","[63:0] A:B:G:R 16:16:16:16 little endian","[63:0] A:B:G:R 16:16:16:16 little endian","32-bit ABGR format, [31:0] A:B:G:R 2:10:10:10 little endian","16-bit ABGR format, [15:0] A:B:G:R 4:4:4:4 little endian","32-bit ABGR format, [31:0] A:B:G:R 8:8:8:8 little endian","16-bit ARGB 1555 format, [15:0] A:R:G:B 1:5:5:5 little …","[63:0] A:R:G:B 16:16:16:16 little endian","[63:0] A:R:G:B 16:16:16:16 little endian","32-bit ARGB format, [31:0] A:R:G:B 2:10:10:10 little endian","16-bit ARGB format, [15:0] A:R:G:B 4:4:4:4 little endian","32-bit ARGB format, [31:0] A:R:G:B 8:8:8:8 little endian","[63:0] A:x:B:x:G:x:R:x 10:6:10:6:10:6:10:6 little endian","packed AYCbCr format, [31:0] A:Y:Cb:Cr 8:8:8:8 little …","8-bit BGR format, [7:0] B:G:R 2:3:3","16-bit BGR 565 format, [15:0] B:G:R 5:6:5 little endian","","24-bit BGR format, [23:0] B:G:R little endian","","32-bit BGRA format, [31:0] B:G:R:A 10:10:10:2 little endian","16-bit BGRA format, [15:0] B:G:R:A 4:4:4:4 little endian","16-bit BGRA 5551 format, [15:0] B:G:R:A 5:5:5:1 little …","32-bit BGRA format, [31:0] B:G:R:A 8:8:8:8 little endian","32-bit BGRx format, [31:0] B:G:R:x 10:10:10:2 little endian","16-bit BGRx format, [15:0] B:G:R:x 4:4:4:4 little endian","16-bit BGRx 5551 format, [15:0] B:G:R:x 5:5:5:1 little …","32-bit BGRx format, [31:0] B:G:R:x 8:8:8:8 little endian","","8-bit color index format, [7:0] C","create a shm pool","The minimal object version supporting this event","wl_shm error values","","pixel formats","pixel format description","[31:0] G:R 16:16 little endian","[15:0] G:R 8:8 little endian","mmapping the file descriptor failed","buffer format is not known","invalid size or stride during pool or buffer creation","2 plane YCbCr Cr:Cb format, 2x2 subsampled Cr:Cb plane","2x2 subsampled Cr:Cb plane","2 plane YCbCr Cr:Cb format, 2x1 subsampled Cr:Cb plane","2 plane YCbCr Cb:Cr format, 2x2 subsampled Cb:Cr plane","non-subsampled Cr:Cb plane","non-subsampled Cb:Cr plane","2 plane YCbCr Cb:Cr format, 2x1 subsampled Cb:Cr plane","2x2 subsampled Cr:Cb plane 10 bits per channel","2x2 subsampled Cr:Cb plane 12 bits per channel","2x2 subsampled Cr:Cb plane 16 bits per channel","2x1 subsampled Cr:Cb plane, 10 bit per channel","","","[15:0] R little endian","[7:0] R","The minimal object version supporting this request","","[31:0] R:G 16:16 little endian","[15:0] R:G 8:8 little endian","8-bit RGB format, [7:0] R:G:B 3:3:2","16-bit RGB 565 format, [15:0] R:G:B 5:6:5 little endian","","24-bit RGB format, [23:0] R:G:B little endian","","32-bit RGBA format, [31:0] R:G:B:A 10:10:10:2 little endian","16-bit RBGA format, [15:0] R:G:B:A 4:4:4:4 little endian","16-bit RGBA 5551 format, [15:0] R:G:B:A 5:5:5:1 little …","32-bit RGBA format, [31:0] R:G:B:A 8:8:8:8 little endian","32-bit RGBx format, [31:0] R:G:B:x 10:10:10:2 little endian","16-bit RGBx format, [15:0] R:G:B:x 4:4:4:4 little endian","16-bit RGBx 5551 format, [15:0] R:G:B:x 5:5:5:1 little …","32-bit RGBx format, [31:0] R:G:B:x 8:8:8:8 little endian","","packed YCbCr format, [31:0] Y1:Cr0:Y0:Cb0 8:8:8:8 little …","Y followed by U then V, 10:10:10. Non-linear modifier only","[23:0] Cr:Cb:Y 8:8:8 little endian","packed YCbCr format, [31:0] Y1:Cb0:Y0:Cr0 8:8:8:8 little …","","[63:0] X3:X2:Y3:0:Cr0:0:Y2:0:X1:X0:Y1:0:Cb0:0:Y0:0 …","[63:0] X3:X2:Y3:Cr0:Y2:X1:X0:Y1:Cb0:Y0 …","16-bit xBGR 1555 format, [15:0] x:B:G:R 1:5:5:5 little …","[63:0] x:B:G:R 16:16:16:16 little endian","[63:0] x:B:G:R 16:16:16:16 little endian","32-bit xBGR format, [31:0] x:B:G:R 2:10:10:10 little endian","16-bit xBGR format, [15:0] x:B:G:R 4:4:4:4 little endian","32-bit xBGR format, [31:0] x:B:G:R 8:8:8:8 little endian","","16-bit xRGB format, [15:0] x:R:G:B 1:5:5:5 little endian","[63:0] x:R:G:B 16:16:16:16 little endian","[63:0] x:R:G:B 16:16:16:16 little endian","32-bit xRGB format, [31:0] x:R:G:B 2:10:10:10 little endian","16-bit xRGB format, [15:0] x:R:G:B 4:4:4:4 little endian","32-bit RGB format, [31:0] x:R:G:B 8:8:8:8 little endian","","[63:0] X:0:Cr:0:Y:0:Cb:0 12:4:12:4:12:4:12:4 little endian","[63:0] X:Cr:Y:Cb 16:16:16:16 little endian","[31:0] X:Cr:Y:Cb 2:10:10:10 little endian","[31:0] X:Y:Cb:Cr 8:8:8:8 little endian","[63:0] A3:A2:Y3:0:Cr0:0:Y2:0:A1:A0:Y1:0:Cb0:0:Y0:0 …","[63:0] A3:A2:Y3:Cr0:Y2:A1:A0:Y1:Cb0:Y0 …","[63:0] Cr0:0:Y1:0:Cb0:0:Y0:0 10:6:10:6:10:6:10:6 little …","[63:0] Cr0:0:Y1:0:Cb0:0:Y0:0 12:4:12:4:12:4:12:4 little …","[63:0] Cr0:Y1:Cb0:Y0 16:16:16:16 little endian per 2 Y …","[31:0] A:Cr:Y:Cb 2:10:10:10 little endian","[63:0] A:0:Cr:0:Y:0:Cb:0 12:4:12:4:12:4:12:4 little endian","[63:0] A:Cr:Y:Cb 16:16:16:16 little endian","3 plane YCbCr format, 4x4 subsampled Cb (1) and Cr (2) …","3 plane YCbCr format, 4x1 subsampled Cb (1) and Cr (2) …","3 plane YCbCr format, 2x2 subsampled Cb (1) and Cr (2) …","","","3 plane YCbCr format, 2x1 subsampled Cb (1) and Cr (2) …","3 plane YCbCr format, non-subsampled Cb (1) and Cr (2) …","packed YCbCr format, [31:0] Cr0:Y1:Cb0:Y0 8:8:8:8 little …","3 plane YCbCr format, 4x4 subsampled Cr (1) and Cb (2) …","3 plane YCbCr format, 4x1 subsampled Cr (1) and Cb (2) …","3 plane YCbCr format, 2x2 subsampled Cr (1) and Cb (2) …","3 plane YCbCr format, 2x1 subsampled Cr (1) and Cb (2) …","3 plane YCbCr format, non-subsampled Cr (1) and Cb (2) …","packed YCbCr format, [31:0] Cb0:Y1:Cr0:Y0 8:8:8:8 little …","","","","","","","","","","","","","","","","","","","","","","","create a shm pool","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","","create a buffer from the pool","destroy the pool","","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","","change the size of the pool mapping","","","","","","","","","","","","","","","","create a buffer from the pool","destroy the pool","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","change the size of the pool mapping","","","","","","","","","","","","","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","","","","","the to-be sub-surface is invalid","unbind from the subcompositor interface","","","give a surface the role sub-surface","The minimal object version supporting this request","The minimal object version supporting this request","","","","","","","","","","","","","","","","","","","","","unbind from the subcompositor interface","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","give a surface the role sub-surface","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","wl_surface is not a sibling or the parent","remove sub-surface interface","","","restack the sub-surface","restack the sub-surface","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","","set sub-surface to desynchronized mode","reposition the sub-surface","set sub-surface to synchronized mode","","","","","","","","","","","","","","","","","","","","remove sub-surface interface","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","restack the sub-surface","restack the sub-surface","set sub-surface to desynchronized mode","reposition the sub-surface","set sub-surface to synchronized mode","","","","","","","","","","","","","","","","","","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","","","set the surface contents","commit pending surface state","mark part of the surface damaged","mark part of the surface damaged using buffer coordinates","delete surface","The minimal object version supporting this event","The minimal object version supporting this event","surface enters an output","wl_surface error values","","request a frame throttling hint","buffer offset is invalid","buffer scale value is invalid","buffer size is invalid","buffer transform value is invalid","surface leaves an output","set the surface contents offset","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","","sets the buffer scaling factor","sets the buffer transformation","set input region","set opaque region","","","","","set the surface contents","","","","","","","","","","","","","","","","commit pending surface state","mark part of the surface damaged","mark part of the surface damaged using buffer coordinates","delete surface","","","","","","","","request a frame throttling hint","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","set the surface contents offset","","","sets the buffer scaling factor","sets the buffer transformation","set input region","set opaque region","","","","","","","","","","","","","","","","","","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","","","","","","","","","","","","","","","","","","touch session cancelled","touch down event and beginning of a touch sequence","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","","end of touch frame event","update of touch point coordinates","update orientation of touch point","The minimal object version supporting this request","release the touch object","","update shape of touch point","end of a touch event sequence","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","release the touch object","","","","","","","","","","","","","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","","","","","","","","","","","","","","","","","Bindings to the client library <code>libwayland-client.so</code>","Various types and functions that are used by both the …","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,46,0,0,0,0,4,0,46,0,46,0,0,0,0,46,0,25,25,157,0,157,0,37,4,44,46,25,0,25,46,0,0,0,0,0,0,44,4,46,46,0,4,37,25,1,47,157,7,5,9,1,39,10,29,15,1,35,25,21,22,11,23,37,44,12,7,9,45,5,46,47,39,10,29,15,1,35,25,21,22,11,23,37,44,12,7,9,45,5,46,47,4,5,1,15,157,7,10,1,21,22,11,23,12,9,5,10,1,21,22,11,23,12,9,5,21,22,22,22,1,9,22,12,9,21,12,29,29,29,15,35,1,37,12,9,5,1,1,5,158,158,0,22,39,10,29,15,1,35,25,25,21,21,22,11,23,37,37,44,12,7,9,45,5,46,47,39,10,29,15,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,35,25,21,22,11,23,37,44,12,12,7,9,45,5,5,46,47,1,9,22,22,157,7,157,7,39,35,45,22,22,45,45,0,1,23,23,47,39,10,29,15,1,35,25,21,22,11,23,37,44,12,7,9,45,5,46,47,157,7,1,157,7,1,23,21,47,10,35,23,158,23,21,21,157,7,47,29,0,22,25,21,37,9,15,39,10,1,35,35,157,7,29,0,10,1,21,22,11,23,12,9,5,25,21,37,29,39,10,29,15,1,35,25,21,22,11,23,37,44,12,7,9,45,5,46,47,39,10,29,15,1,35,25,21,22,11,23,37,44,12,7,9,45,5,46,47,39,10,29,15,1,35,25,21,22,11,23,37,44,12,7,9,45,5,46,47,1,1,39,159,160,159,160,159,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,78,0,0,0,79,0,0,78,79,64,78,79,64,78,79,64,64,78,79,64,64,64,64,64,78,79,64,78,79,64,64,78,79,78,79,78,79,64,78,79,78,79,78,79,78,79,64,78,79,64,78,79,64,78,79,64,0,0,0,82,0,0,0,0,81,82,49,81,82,49,81,82,49,49,81,82,49,49,49,49,81,82,49,81,82,49,49,81,82,81,82,81,82,49,81,82,81,82,81,82,81,82,49,81,82,49,81,82,49,81,82,49,0,0,161,83,83,0,0,0,0,0,83,84,53,83,84,53,83,84,53,53,83,84,53,53,53,53,53,53,83,84,53,83,84,53,53,83,84,83,84,83,84,53,83,84,83,84,83,84,83,84,53,83,84,53,83,84,53,83,84,53,0,0,86,86,0,0,0,0,0,0,86,0,0,86,86,0,0,0,85,0,87,86,85,85,0,85,86,51,87,85,86,51,87,85,86,51,51,85,86,87,51,87,51,87,51,51,87,85,86,51,87,85,86,51,51,87,85,86,85,86,87,85,86,51,85,86,85,86,85,86,51,51,85,86,51,87,51,87,87,85,86,51,87,85,86,51,87,85,86,51,0,0,0,162,163,164,163,163,165,163,165,163,165,166,166,166,167,166,167,88,88,89,0,0,89,88,88,0,0,0,0,88,89,90,58,88,88,88,88,88,88,88,88,89,90,58,88,89,90,58,58,89,90,88,58,88,58,88,88,88,58,88,88,88,58,88,58,88,88,88,88,88,88,89,90,58,88,89,90,58,58,88,88,88,88,88,89,90,89,90,58,88,88,88,88,88,89,90,58,89,90,88,89,90,88,88,89,90,88,88,88,89,90,88,88,88,88,58,88,88,88,89,90,58,88,89,90,58,88,89,90,58,88,0,0,168,94,95,94,0,0,0,0,0,94,96,96,96,96,95,0,0,0,0,0,94,0,94,95,0,60,94,95,60,96,94,95,60,96,94,95,60,60,94,95,96,60,96,60,60,96,60,60,60,96,94,95,60,96,94,95,60,60,96,94,95,94,95,96,94,95,60,94,95,94,95,94,95,60,60,94,95,96,60,96,96,94,95,60,96,94,95,60,96,94,95,60,0,0,0,169,170,171,172,173,174,173,172,174,98,98,97,98,98,0,0,0,0,0,0,0,0,99,99,97,0,0,0,0,98,97,98,0,97,98,66,99,97,98,66,99,97,98,66,66,97,98,99,66,99,66,66,99,66,66,99,97,98,66,99,97,98,66,66,99,97,98,97,98,99,97,98,66,97,98,97,98,66,97,98,66,97,98,99,66,99,99,97,98,66,99,97,98,66,99,97,98,66,0,0,0,175,176,177,176,178,179,101,0,0,0,101,0,100,102,102,102,102,0,0,0,100,0,100,101,30,102,100,101,30,102,100,101,30,30,100,101,102,30,102,30,102,30,30,102,100,101,30,102,100,101,30,30,102,100,101,100,101,30,102,100,101,30,100,101,100,101,100,101,100,101,30,102,30,102,102,100,101,30,102,100,101,30,102,100,101,30,0,0,0,180,181,180,180,0,0,0,0,0,0,104,0,104,0,104,0,104,104,105,106,0,103,106,104,0,0,105,103,104,68,105,106,103,104,68,105,106,103,104,68,68,103,104,105,106,68,105,106,68,105,106,68,68,105,106,103,104,68,105,106,103,104,68,68,105,106,103,104,103,104,105,106,103,104,68,103,104,103,104,103,104,68,103,104,105,106,68,105,106,105,106,103,104,68,105,106,103,104,68,105,106,103,104,68,0,0,0,182,183,183,184,185,186,184,184,184,182,186,187,185,184,183,185,186,187,185,107,109,109,0,0,0,0,0,0,0,111,111,111,111,109,110,110,0,109,109,110,111,107,0,108,0,109,0,0,110,110,110,0,111,111,111,107,108,109,59,107,107,107,107,107,107,107,110,111,107,108,109,59,110,111,107,108,109,59,59,108,109,110,111,107,59,110,111,107,59,107,107,107,107,107,110,111,107,59,107,59,107,110,111,107,107,107,107,107,108,109,59,110,111,107,108,109,59,59,107,107,107,107,110,111,107,108,109,108,109,107,107,107,107,110,111,107,108,109,59,108,109,107,108,109,107,107,108,109,107,59,107,107,108,109,107,107,107,110,111,107,59,110,111,107,107,110,111,107,108,109,59,110,111,107,108,109,59,110,111,107,108,109,59,107,0,0,0,188,189,190,190,191,191,192,191,191,190,191,191,190,191,191,0,113,113,0,113,113,113,0,117,0,0,0,0,0,0,0,0,0,113,0,0,117,113,116,113,113,115,0,0,112,115,0,114,112,116,117,117,0,112,113,63,114,115,116,117,112,113,63,114,115,116,117,112,113,63,63,112,113,114,115,116,117,63,114,115,116,117,63,114,115,116,117,63,63,114,115,116,117,112,113,63,114,115,116,117,112,113,63,63,114,115,116,117,112,113,112,113,114,115,116,117,112,113,63,112,113,112,113,112,113,63,63,112,113,114,115,116,117,63,114,115,116,117,114,115,116,117,112,113,63,114,115,116,117,112,113,63,114,115,116,117,112,113,63,0,0,0,193,194,195,196,197,195,198,199,197,197,198,199,198,200,198,200,200,197,193,194,193,201,201,201,201,119,119,0,0,0,0,0,119,0,62,119,120,62,119,120,62,119,120,62,62,119,120,62,62,62,62,62,119,120,62,119,120,62,62,119,120,119,120,119,120,62,119,120,119,120,119,120,119,120,62,62,119,120,62,119,120,62,119,120,62,0,0,202,203,202,203,202,203,202,203,121,0,0,0,122,122,0,0,0,121,122,48,48,121,122,48,121,122,48,48,121,122,48,48,48,48,121,122,48,121,122,48,48,121,122,121,122,121,122,48,121,122,121,122,121,122,121,122,48,121,122,48,121,122,48,121,122,48,0,0,0,204,204,205,204,206,206,125,0,0,0,0,0,124,124,124,123,126,125,123,0,0,0,0,124,0,123,0,123,124,125,65,123,123,123,123,123,123,123,123,126,124,125,65,123,126,124,125,65,65,124,125,123,126,65,123,126,65,123,123,123,123,123,123,126,65,123,65,123,123,123,123,123,123,126,124,125,65,123,126,124,125,65,65,123,123,123,123,123,126,124,125,124,125,65,65,65,123,123,123,123,123,126,124,125,65,124,125,123,124,125,123,123,124,125,123,65,123,123,124,125,123,123,123,123,126,65,123,126,123,123,126,124,125,65,123,126,124,125,65,123,126,124,125,65,123,0,0,0,207,208,0,0,127,0,0,129,0,127,128,52,129,127,128,52,129,127,128,52,52,127,128,129,52,129,52,129,52,52,129,127,128,52,129,127,128,52,52,129,127,128,127,128,52,129,127,128,52,127,128,127,128,127,128,127,128,129,52,129,129,127,128,52,129,127,128,52,129,127,128,52,0,0,209,130,130,130,133,134,134,0,0,0,0,134,0,131,130,132,130,133,132,133,0,0,0,0,0,0,0,0,0,0,0,0,132,130,134,132,132,132,132,132,132,132,130,130,130,0,0,50,130,131,132,133,50,130,131,130,131,130,131,130,131,130,131,130,131,130,131,130,131,134,132,133,50,130,131,134,132,133,50,50,132,133,130,131,134,50,130,131,134,50,130,131,130,131,130,131,130,131,130,131,130,131,134,50,130,131,50,130,131,130,130,130,130,130,131,131,131,131,131,134,132,133,50,130,131,134,132,133,50,50,130,131,130,131,130,131,130,131,130,131,134,132,133,132,133,130,131,130,131,130,131,130,131,130,131,134,132,133,50,132,133,130,131,132,133,130,131,130,131,132,133,130,131,50,130,131,50,130,131,50,50,50,50,50,50,50,132,133,130,131,130,131,130,131,130,131,134,50,130,131,134,130,131,130,131,134,132,133,50,130,131,134,132,133,50,130,131,134,132,133,50,130,131,0,0,0,210,210,211,210,212,213,214,215,216,216,216,217,214,215,218,213,215,219,218,213,215,220,214,215,214,215,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,135,0,0,0,0,136,138,138,137,137,137,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,0,0,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,0,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,135,136,56,137,138,135,136,56,137,138,135,136,56,56,135,136,137,138,56,137,138,56,56,137,138,56,56,137,138,135,136,56,137,138,135,136,56,56,137,138,135,136,135,136,137,138,135,136,56,135,136,135,136,135,136,135,136,137,138,56,137,138,137,138,135,136,56,137,138,135,136,56,137,138,135,136,56,0,0,0,221,222,222,139,139,0,0,0,0,0,139,0,139,140,55,139,140,55,139,140,55,55,139,140,55,55,55,55,55,55,139,140,55,139,140,55,55,139,140,139,140,139,140,55,139,140,139,140,139,140,55,139,140,55,139,140,55,139,140,55,139,140,55,0,0,223,223,223,224,223,223,143,141,0,0,141,0,0,0,0,141,142,67,143,141,142,67,143,141,142,67,67,141,142,143,67,143,67,67,143,67,67,143,141,142,67,143,141,142,67,67,143,141,142,141,142,67,143,141,142,67,141,142,141,142,141,142,141,142,143,67,143,143,141,142,67,143,141,142,67,143,141,142,67,0,0,225,225,146,144,0,0,144,144,0,0,0,0,0,0,0,144,144,144,0,144,145,61,146,144,145,61,146,144,145,61,61,144,145,146,61,146,61,61,146,61,61,146,144,145,61,146,144,145,61,61,146,144,145,144,145,146,144,145,61,144,145,144,145,144,145,61,61,61,61,61,144,145,146,61,146,146,144,145,61,146,144,145,61,146,144,145,61,0,0,226,227,228,228,147,147,147,147,147,0,0,148,0,0,147,149,149,149,149,148,147,0,0,0,0,0,0,0,0,0,0,0,0,147,147,147,147,0,147,148,57,57,149,147,148,57,149,147,148,57,57,147,148,149,57,149,57,57,57,57,57,149,57,57,149,147,148,57,57,149,147,148,57,57,149,147,148,147,148,149,147,148,57,147,148,147,148,57,147,148,57,57,57,57,147,148,149,57,149,149,147,148,57,149,147,148,57,149,147,148,57,0,0,0,229,230,231,232,233,234,235,236,237,232,233,231,232,233,238,231,232,233,238,151,151,0,0,0,0,0,0,0,0,151,151,151,0,150,0,151,151,0,150,151,54,150,151,54,150,151,54,54,150,151,54,54,54,54,150,151,54,150,151,54,54,150,151,150,151,150,151,54,150,151,150,151,150,151,54,150,151,54,150,151,54,150,151,54,150,151,54,0,0,0,239,240,241,242,243,242,242,243,239,240,239,239,240,241,239,241,239,241,0,0,0,0,0,14,69,244,153,152,154,14,69,244,153,152,154,152,154,14,69,244,153,152,154,14,69,244,153,152,154,0,153,14,69,244,153,152,154,14,69,244,153,152,154,14,69,244,153,152,154,153,153,153,153,0,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,0,153,153,153,153,153,153,153,153,0,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,73,245,246,13,247,245,73,246,13,247,245,73,245,13,13,73,246,13,247,245,73,73,73,246,13,247,245,73,73,246,13,247,73,247,13,13,73,246,245,246,13,247,245,73,246,13,247,245,73,246,13,247,245,73,246,73,13,0,0,0,0,0,0,0,0,0,0,0,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[1,[[0,[[2,[[1,[[0,[[2,[[1,[[0,[[2,[1]],[3,[1]],4]]]]]],[3,[[1,[[0,[[2,[1]],[3,[1]],4]]]]]],4]]]]]],[3,[[1,[[0,[[2,[[1,[[0,[[2,[1]],[3,[1]],4]]]]]],[3,[[1,[[0,[[2,[1]],[3,[1]],4]]]]]],4]]]]]],4]]]]],[[1,[5]]]],0,[6],[[7,6]],[5,[[1,[5]]]],[[[9,[8,[0,[[2,[[1,[8,[0,[[2,[[1,[8,[0,[[2,[1]],[3,[1]],4]]]]]],[3,[[1,[8,[0,[[2,[1]],[3,[1]],4]]]]]],4]]]]]],[3,[[1,[8,[0,[[2,[[1,[8,[0,[[2,[1]],[3,[1]],4]]]]]],[3,[[1,[8,[0,[[2,[1]],[3,[1]],4]]]]]],4]]]]]],4]]]],[10,[3]]]],[[[1,[[0,[[2,[[1,[[0,[[2,[[1,[[0,[[2,[1]],[3,[1]],4]]]]]],[3,[[1,[[0,[[2,[1]],[3,[1]],4]]]]]],4]]]]]],[3,[[1,[[0,[[2,[[1,[[0,[[2,[1]],[3,[1]],4]]]]]],[3,[[1,[[0,[[2,[1]],[3,[1]],4]]]]]],4]]]]]],4]]]],11],[[12,[[0,[[2,[[1,[[0,[[2,[[1,[[0,[[2,[1]],[3,[1]],4]]]]]],[3,[[1,[[0,[[2,[1]],[3,[1]],4]]]]]],4]]]]]],[3,[[1,[[0,[[2,[[1,[[0,[[2,[1]],[3,[1]],4]]]]]],[3,[[1,[[0,[[2,[1]],[3,[1]],4]]]]]],4]]]]]],4]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],13],[[],13],[[[1,[[0,[4,[2,[[1,[[0,[4,[2,[[1,[[0,[4,[2,[1]],[3,[1]]]]]]]],[3,[[1,[[0,[4,[2,[1]],[3,[1]]]]]]]]]]]]]],[3,[[1,[[0,[4,[2,[[1,[[0,[4,[2,[1]],[3,[1]]]]]]]],[3,[[1,[[0,[4,[2,[1]],[3,[1]]]]]]]]]]]]]]]]]]],14],[15],[[16,17,18],[[20,[[19,[18]]]]]],[[16,17,18],[[20,[[19,[18]]]]]],[10,10],[[[1,[4]]],[[1,[4]]]],[21,21],[22,22],[11,11],[23,23],[[[12,[[0,[[2,[[1,[[0,[[2,[[1,[[0,[[2,[1]],[3,[1]],4]]]]]],[3,[[1,[[0,[[2,[1]],[3,[1]],4]]]]]],4]]]]]],[3,[[1,[[0,[[2,[[1,[[0,[[2,[1]],[3,[1]],4]]]]]],[3,[[1,[[0,[[2,[1]],[3,[1]],4]]]]]],4]]]]]],4]]]]],[[12,[[0,[[2,[[1,[[0,[[2,[[1,[[0,[[2,[1]],[3,[1]],4]]]]]],[3,[[1,[[0,[[2,[1]],[3,[1]],4]]]]]],4]]]]]],[3,[[1,[[0,[[2,[[1,[[0,[[2,[1]],[3,[1]],4]]]]]],[3,[[1,[[0,[[2,[1]],[3,[1]],4]]]]]],4]]]]]],4]]]]]],[[[9,[[0,[24,4,[2,[[1,[[0,[24,4,[2,[[1,[[0,[24,4,[2,[1]],[3,[1]]]]]]]],[3,[[1,[[0,[24,4,[2,[1]],[3,[1]]]]]]]]]]]]]],[3,[[1,[[0,[24,4,[2,[[1,[[0,[24,4,[2,[1]],[3,[1]]]]]]]],[3,[[1,[[0,[24,4,[2,[1]],[3,[1]]]]]]]]]]]]]]]]]]],[[9,[[0,[24,4,[2,[[1,[[0,[24,4,[2,[[1,[[0,[24,4,[2,[1]],[3,[1]]]]]]]],[3,[[1,[[0,[24,4,[2,[1]],[3,[1]]]]]]]]]]]]]],[3,[[1,[[0,[24,4,[2,[[1,[[0,[24,4,[2,[1]],[3,[1]]]]]]]],[3,[[1,[[0,[24,4,[2,[1]],[3,[1]]]]]]]]]]]]]]]]]]]],[5,5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],[[26,[22,25]]]],[[[28,[27]]],[[26,[22,25]]]],[22,29],[[[1,[5]]],[[26,[[1,[4]],[1,[5]]]]]],[[[9,[5]]],[[26,[[9,[[0,[4,[2,[[1,[[0,[4,[2,[[1,[[0,[4,2,3]]]]]],[3,[[1,[[0,[4,2,3]]]]]]]]]]]],[3,[[1,[[0,[4,[2,[[1,[[0,[4,2,3]]]]]],[3,[[1,[[0,[4,2,3]]]]]]]]]]]]]]]],[9,[5]]]]]],[22,[[1,[30]]]],[[[12,[4]]],4],[[[9,[[0,[[2,[[1,[[0,[[2,[[1,[[0,[[2,[1]],[3,[1]],4]]]]]],[3,[[1,[[0,[[2,[1]],[3,[1]],4]]]]]],4]]]]]],[3,[[1,[[0,[[2,[[1,[[0,[[2,[1]],[3,[1]],4]]]]]],[3,[[1,[[0,[[2,[1]],[3,[1]],4]]]]]],4]]]]]],4]]]]],[[12,[[0,[[2,[[1,[[0,[[2,[[1,[[0,[[2,[1]],[3,[1]],4]]]]]],[3,[[1,[[0,[[2,[1]],[3,[1]],4]]]]]],4]]]]]],[3,[[1,[[0,[[2,[[1,[[0,[[2,[1]],[3,[1]],4]]]]]],[3,[[1,[[0,[[2,[1]],[3,[1]],4]]]]]],4]]]]]],4]]]]]],[21,31],[[[12,[[0,[[28,[[1,[[0,[[28,[[1,[[0,[[28,[1]],[3,[1]],[2,[1]],4]]]]]],[3,[[1,[[0,[[28,[1]],[3,[1]],[2,[1]],4]]]]]],[2,[[1,[[0,[[28,[1]],[3,[1]],[2,[1]],4]]]]]],4]]]]]],[3,[[1,[[0,[[28,[[1,[[0,[[28,[1]],[3,[1]],[2,[1]],4]]]]]],[3,[[1,[[0,[[28,[1]],[3,[1]],[2,[1]],4]]]]]],[2,[[1,[[0,[[28,[1]],[3,[1]],[2,[1]],4]]]]]],4]]]]]],[2,[[1,[[0,[[28,[[1,[[0,[[28,[1]],[3,[1]],[2,[1]],4]]]]]],[3,[[1,[[0,[[28,[1]],[3,[1]],[2,[1]],4]]]]]],[2,[[1,[[0,[[28,[1]],[3,[1]],[2,[1]],4]]]]]],4]]]]]],4]]]]],[[0,[[28,[[1,[[0,[[28,[[1,[[0,[[28,[1]],[3,[1]],[2,[1]],4]]]]]],[3,[[1,[[0,[[28,[1]],[3,[1]],[2,[1]],4]]]]]],[2,[[1,[[0,[[28,[1]],[3,[1]],[2,[1]],4]]]]]],4]]]]]],[3,[[1,[[0,[[28,[[1,[[0,[[28,[1]],[3,[1]],[2,[1]],4]]]]]],[3,[[1,[[0,[[28,[1]],[3,[1]],[2,[1]],4]]]]]],[2,[[1,[[0,[[28,[1]],[3,[1]],[2,[1]],4]]]]]],4]]]]]],[2,[[1,[[0,[[28,[[1,[[0,[[28,[1]],[3,[1]],[2,[1]],4]]]]]],[3,[[1,[[0,[[28,[1]],[3,[1]],[2,[1]],4]]]]]],[2,[[1,[[0,[[28,[1]],[3,[1]],[2,[1]],4]]]]]],4]]]]]],4]]]],[[29,32,33],[[34,[17]]]],[[29,32,33],[[34,[17]]]],[29,22],[15],[35],[[[1,[[0,[[2,[[1,[[0,[[2,[[1,[[0,[[2,[1]],[3,[1]],4]]]]]],[3,[[1,[[0,[[2,[1]],[3,[1]],4]]]]]],4]]]]]],[3,[[1,[[0,[[2,[[1,[[0,[[2,[1]],[3,[1]],4]]]]]],[3,[[1,[[0,[[2,[1]],[3,[1]],4]]]]]],4]]]]]],4]]]],[1,[[0,[[2,[[1,[[0,[[2,[[1,[[0,[[2,[1]],[3,[1]],4]]]]]],[3,[[1,[[0,[[2,[1]],[3,[1]],4]]]]]],4]]]]]],[3,[[1,[[0,[[2,[[1,[[0,[[2,[1]],[3,[1]],4]]]]]],[3,[[1,[[0,[[2,[1]],[3,[1]],4]]]]]],4]]]]]],4]]]]],36],[[37,37],36],[[[12,[[0,[38,4]]]],[12,[[0,[38,4]]]]],36],[[[9,[[0,[38,4,[2,[[1,[[0,[38,4,[2,[[1,[[0,[38,4,[2,[1]],[3,[1]]]]]]]],[3,[[1,[[0,[38,4,[2,[1]],[3,[1]]]]]]]]]]]]]],[3,[[1,[[0,[38,4,[2,[[1,[[0,[38,4,[2,[1]],[3,[1]]]]]]]],[3,[[1,[[0,[38,4,[2,[1]],[3,[1]]]]]]]]]]]]]]]]]],[9,[[0,[38,4,[2,[[1,[[0,[38,4,[2,[[1,[[0,[38,4,[2,[1]],[3,[1]]]]]]]],[3,[[1,[[0,[38,4,[2,[1]],[3,[1]]]]]]]]]]]]]],[3,[[1,[[0,[38,4,[2,[[1,[[0,[38,4,[2,[1]],[3,[1]]]]]]]],[3,[[1,[[0,[38,4,[2,[1]],[3,[1]]]]]]]]]]]]]]]]]]],36],[[5,5],36],[[[1,[[0,[[2,[[1,[[0,[[2,[[1,[[0,[[2,[1]],[3,[1]],4]]]]]],[3,[[1,[[0,[[2,[1]],[3,[1]],4]]]]]],4]]]]]],[3,[[1,[[0,[[2,[[1,[[0,[[2,[1]],[3,[1]],4]]]]]],[3,[[1,[[0,[[2,[1]],[3,[1]],4]]]]]],4]]]]]],4]]]],[1,[[0,[[2,[[1,[[0,[[2,[[1,[[0,[[2,[1]],[3,[1]],4]]]]]],[3,[[1,[[0,[[2,[1]],[3,[1]],4]]]]]],4]]]]]],[3,[[1,[[0,[[2,[[1,[[0,[[2,[1]],[3,[1]],4]]]]]],[3,[[1,[[0,[[2,[1]],[3,[1]],4]]]]]],4]]]]]],4]]]]],36],[[],36],[[],36],[[17,39]],[[17,39]],0,[22,34],[[39,40],[[26,[41]]]],[[[10,[42]],40],[[26,[41]]]],[[29,40],43],[[15,40],43],[[[1,[4]],40],43],[[35,40],[[26,[41]]]],[[25,40],[[26,[41]]]],[[25,40],43],[[21,40],43],[[21,40],[[26,[41]]]],[[22,40],43],[[11,40],43],[[23,40],43],[[37,40],43],[[37,40],[[26,[41]]]],[[44,40],43],[[[12,[[0,[4,42]]]],40],43],[[7,40],[[26,[41]]]],[[[9,[[0,[42,[2,[[1,[[0,[42,[2,[[1,[[0,[42,[2,[1]],[3,[1]],4]]]]]],[3,[[1,[[0,[42,[2,[1]],[3,[1]],4]]]]]],4]]]]]],[3,[[1,[[0,[42,[2,[[1,[[0,[42,[2,[1]],[3,[1]],4]]]]]],[3,[[1,[[0,[42,[2,[1]],[3,[1]],4]]]]]],4]]]]]],4]]]],40],43],[[45,40],43],[[5,40],43],[[46,40],43],[[47,40],43],[[]],[[]],[[]],[[]],[48,[[1,[48]]]],[49,[[1,[49]]]],[5,[[1,[5]]]],[50,[[1,[50]]]],[51,[[1,[51]]]],[52,[[1,[52]]]],[53,[[1,[53]]]],[54,[[1,[54]]]],[55,[[1,[55]]]],[56,[[1,[56]]]],[57,[[1,[57]]]],[58,[[1,[58]]]],[59,[[1,[59]]]],[[]],[60,[[1,[60]]]],[61,[[1,[61]]]],[62,[[1,[62]]]],[30,[[1,[30]]]],[63,[[1,[63]]]],[64,[[1,[64]]]],[65,[[1,[65]]]],[66,[[1,[66]]]],[67,[[1,[67]]]],[68,[[1,[68]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[9,[[0,[[2,[[1,[[0,[[2,[[1,[[0,[[2,[1]],[3,[1]],4]]]]]],[3,[[1,[[0,[[2,[1]],[3,[1]],4]]]]]],4]]]]]],[3,[[1,[[0,[[2,[[1,[[0,[[2,[1]],[3,[1]],4]]]]]],[3,[[1,[[0,[[2,[1]],[3,[1]],4]]]]]],4]]]]]],4]]]]],[[12,[[0,[[2,[[1,[[0,[[2,[[1,[[0,[[2,[1]],[3,[1]],4]]]]]],[3,[[1,[[0,[[2,[1]],[3,[1]],4]]]]]],4]]]]]],[3,[[1,[[0,[[2,[[1,[[0,[[2,[1]],[3,[1]],4]]]]]],[3,[[1,[[0,[[2,[1]],[3,[1]],4]]]]]],4]]]]]],4]]]]]],[[]],[[]],[[]],[[]],[[]],[[[1,[5]]],5],[[]],[[]],[14,[[1,[[3,[[1,[[3,[[1,[[3,[1]],[0,[4,[2,[1]],[3,[1]]]]]]]],[0,[4,[2,[[1,[[3,[1]],[0,[4,[2,[1]],[3,[1]]]]]]]],[3,[[1,[[3,[1]],[0,[4,[2,[1]],[3,[1]]]]]]]]]]]]]],[0,[4,[2,[[1,[[3,[[1,[[3,[1]],[0,[4,[2,[1]],[3,[1]]]]]]]],[0,[4,[2,[[1,[[3,[1]],[0,[4,[2,[1]],[3,[1]]]]]]]],[3,[[1,[[3,[1]],[0,[4,[2,[1]],[3,[1]]]]]]]]]]]]]],[3,[[1,[[3,[[1,[[3,[1]],[0,[4,[2,[1]],[3,[1]]]]]]]],[0,[4,[2,[[1,[[3,[1]],[0,[4,[2,[1]],[3,[1]]]]]]]],[3,[[1,[[3,[1]],[0,[4,[2,[1]],[3,[1]]]]]]]]]]]]]]]]]]]],[14,[[9,[[0,[[2,[[1,[[0,[[2,[[1,[[0,[[2,[1]],[3,[1]],4]]]]]],[3,[[1,[[0,[[2,[1]],[3,[1]],4]]]]]],4]]]]]],[3,[[1,[[0,[[2,[[1,[[0,[[2,[1]],[3,[1]],4]]]]]],[3,[[1,[[0,[[2,[1]],[3,[1]],4]]]]]],4]]]]]],4]]]]]],[69,22],[70,[[26,[22,25]]]],[71,26],[71,[[26,[7]]]],[[72,17,73],26],[[72,17,73],[[26,[7]]]],[39,[[20,[32]]]],[35,20],[[45,17],[[20,[[1,[4]]]]]],[22,70],[22,69],[[45,17],[[20,[[9,[[0,[4,[2,[[1,[[0,[4,[2,[[1,[[0,[4,2,3]]]]]],[3,[[1,[[0,[4,2,3]]]]]]]]]]]],[3,[[1,[[0,[4,[2,[[1,[[0,[4,2,3]]]]]],[3,[[1,[[0,[4,2,3]]]]]]]]]]]]]]]]]]]],[[45,17],[[1,[4]]]],0,[[[1,[[0,[[2,[[1,[[0,[[2,[[1,[[0,[[2,[1]],[3,[1]],4]]]]]],[3,[[1,[[0,[[2,[1]],[3,[1]],4]]]]]],4]]]]]],[3,[[1,[[0,[[2,[[1,[[0,[[2,[1]],[3,[1]],4]]]]]],[3,[[1,[[0,[[2,[1]],[3,[1]],4]]]]]],4]]]]]],4]]]]],17],[[23,17],[[26,[[9,[[0,[4,[2,[[1,[[0,[4,[2,[[1,[[0,[4,2,3]]]]]],[3,[[1,[[0,[4,2,3]]]]]]]]]]]],[3,[[1,[[0,[4,[2,[[1,[[0,[4,2,3]]]]]],[3,[[1,[[0,[4,2,3]]]]]]]]]]]]]]]],37]]]],[[23,17,17],[[26,[[9,[[0,[4,[2,[[1,[[0,[4,[2,[[1,[[0,[4,2,3]]]]]],[3,[[1,[[0,[4,2,3]]]]]]]]]]]],[3,[[1,[[0,[4,[2,[[1,[[0,[4,2,3]]]]]],[3,[[1,[[0,[4,2,3]]]]]]]]]]]]]]]],37]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[17,71],[[7,17],71],[[[1,[[0,[[2,[[1,[[0,[[2,[[1,[[0,[[2,[1]],[3,[1]],4]]]]]],[3,[[1,[[0,[[2,[1]],[3,[1]],4]]]]]],4]]]]]],[3,[[1,[[0,[[2,[[1,[[0,[[2,[1]],[3,[1]],4]]]]]],[3,[[1,[[0,[[2,[1]],[3,[1]],4]]]]]],4]]]]]],4]]]]],36],[[],36],[7,36],[[[1,[[0,[4,[2,[[1,[[0,[4,[2,[[1,[[0,[4,[2,[1]],[3,[1]]]]]]]],[3,[[1,[[0,[4,[2,[1]],[3,[1]]]]]]]]]]]]]],[3,[[1,[[0,[4,[2,[[1,[[0,[4,[2,[1]],[3,[1]]]]]]]],[3,[[1,[[0,[4,[2,[1]],[3,[1]]]]]]]]]]]]]]]]]]],36],[23,74],0,0,[33,10],[[],35],[[[12,[30]]],23],[[9,39]],[[[12,[30]],33],23],0,0,[[],16],[7,16],0,[29,[[20,[15]]]],0,[22,[[20,[21]]]],[75],[75],[75],[[[9,[[0,[4,[2,[[1,[[0,[4,[2,[[1,[[0,[4,[2,[1]],[3,[1]],8]],[0,[[2,[1]],[3,[1]],4]]]]]],[3,[[1,[[0,[4,[2,[1]],[3,[1]],8]],[0,[[2,[1]],[3,[1]],4]]]]]],8]],[0,[[2,[[1,[[0,[4,[2,[1]],[3,[1]],8]],[0,[[2,[1]],[3,[1]],4]]]]]],[3,[[1,[[0,[4,[2,[1]],[3,[1]],8]],[0,[[2,[1]],[3,[1]],4]]]]]],4]]]]]],[3,[[1,[[0,[4,[2,[[1,[[0,[4,[2,[1]],[3,[1]],8]],[0,[[2,[1]],[3,[1]],4]]]]]],[3,[[1,[[0,[4,[2,[1]],[3,[1]],8]],[0,[[2,[1]],[3,[1]],4]]]]]],8]],[0,[[2,[[1,[[0,[4,[2,[1]],[3,[1]],8]],[0,[[2,[1]],[3,[1]],4]]]]]],[3,[[1,[[0,[4,[2,[1]],[3,[1]],8]],[0,[[2,[1]],[3,[1]],4]]]]]],4]]]]]],8]],[0,[[2,[[1,[[0,[4,[2,[[1,[[0,[4,[2,[1]],[3,[1]],8]],[0,[[2,[1]],[3,[1]],4]]]]]],[3,[[1,[[0,[4,[2,[1]],[3,[1]],8]],[0,[[2,[1]],[3,[1]],4]]]]]],8]],[0,[[2,[[1,[[0,[4,[2,[1]],[3,[1]],8]],[0,[[2,[1]],[3,[1]],4]]]]]],[3,[[1,[[0,[4,[2,[1]],[3,[1]],8]],[0,[[2,[1]],[3,[1]],4]]]]]],4]]]]]],[3,[[1,[[0,[4,[2,[[1,[[0,[4,[2,[1]],[3,[1]],8]],[0,[[2,[1]],[3,[1]],4]]]]]],[3,[[1,[[0,[4,[2,[1]],[3,[1]],8]],[0,[[2,[1]],[3,[1]],4]]]]]],8]],[0,[[2,[[1,[[0,[4,[2,[1]],[3,[1]],8]],[0,[[2,[1]],[3,[1]],4]]]]]],[3,[[1,[[0,[4,[2,[1]],[3,[1]],8]],[0,[[2,[1]],[3,[1]],4]]]]]],4]]]]]],4]]]],33]],[15,34],[39,39],[[10,39]],[[[1,[[0,[[2,[[1,[[0,[[2,[[1,[[0,[[2,[1]],[3,[1]],4]]]]]],[3,[[1,[[0,[[2,[1]],[3,[1]],4]]]]]],4]]]]]],[3,[[1,[[0,[[2,[[1,[[0,[[2,[1]],[3,[1]],4]]]]]],[3,[[1,[[0,[[2,[1]],[3,[1]],4]]]]]],4]]]]]],4]]]],[20,[17]]],[[20,[[9,[[0,[4,[2,[[1,[[0,[4,[2,[[1,[[0,[4,2,3]]]]]],[3,[[1,[[0,[4,2,3]]]]]]]]]]]],[3,[[1,[[0,[4,[2,[[1,[[0,[4,2,3]]]]]],[3,[[1,[[0,[4,2,3]]]]]]]]]]]]]]]]]]]],[[35,6]],[[35,6]],[[],17],[7,17],[[29,32,33],[[34,[17]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],76],[[],76],[[],76],[29,11],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],77],[[],77],[[],77],[[],77],[[],77],[[],77],[[],77],[[],77],[[],77],[[],77],[[],77],[[],77],[[],77],[[],77],[[],77],[[],77],[[],77],[[],77],[[],77],[[],77],[[[1,[[0,[[2,[[1,[[0,[[2,[[1,[[0,[[2,[1]],[3,[1]],4]]]]]],[3,[[1,[[0,[[2,[1]],[3,[1]],4]]]]]],4]]]]]],[3,[[1,[[0,[[2,[[1,[[0,[[2,[1]],[3,[1]],4]]]]]],[3,[[1,[[0,[[2,[1]],[3,[1]],4]]]]]],4]]]]]],4]]]]],35],[[[1,[[0,[[2,[[1,[[0,[[2,[[1,[[0,[[2,[1]],[3,[1]],4]]]]]],[3,[[1,[[0,[[2,[1]],[3,[1]],4]]]]]],4]]]]]],[3,[[1,[[0,[[2,[[1,[[0,[[2,[1]],[3,[1]],4]]]]]],[3,[[1,[[0,[[2,[1]],[3,[1]],4]]]]]],4]]]]]],4]]]]],17],[32,39],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[78,6]],[[79,6]],[64,[[1,[64]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],13],[[16,17,18],[[20,[[19,[18]]]]]],[[16,17,18],[[20,[[19,[18]]]]]],[64,64],[[]],[64],[[64,64],36],[[],36],[[78,40],43],[[79,40],43],[[64,40],43],[[]],[[]],[[[1,[64]]],64],[[]],[71,[[26,[78]]]],[71,[[26,[79]]]],[[80,17,73],[[26,[78]]]],[[80,17,73],[[26,[79]]]],[[]],[[]],[[]],[[78,17],71],[[79,17],71],[78,36],[79,36],[78,16],[79,16],[78,17],[79,17],[[]],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],77],[[],77],[[],77],0,0,0,0,0,0,0,0,[[81,6]],[[82,6]],[49,[[1,[49]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],13],[[16,17,18],[[20,[[19,[18]]]]]],[[16,17,18],[[20,[[19,[18]]]]]],[49,49],[[]],[[49,49],36],[[],36],[[81,40],43],[[82,40],43],[[49,40],43],[[]],[[]],[[]],[[[1,[49]]],49],[71,[[26,[81]]]],[71,[[26,[82]]]],[[80,17,73],[[26,[81]]]],[[80,17,73],[[26,[82]]]],[[]],[[]],[[]],[[81,17],71],[[82,17],71],[81,36],[82,36],[81,16],[82,16],[81,17],[82,17],[[]],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],77],[[],77],[[],77],0,0,0,0,0,0,0,0,0,0,[[83,6]],[[84,6]],[53,[[1,[53]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],13],[[16,17,18],[[20,[[19,[18]]]]]],[[16,17,18],[[20,[[19,[18]]]]]],[53,53],[[]],[53,[[9,[62]]]],[53,[[9,[57]]]],[[53,53],36],[[],36],[[83,40],43],[[84,40],43],[[53,40],43],[[]],[[]],[[[1,[53]]],53],[[]],[71,[[26,[83]]]],[71,[[26,[84]]]],[[80,17,73],[[26,[83]]]],[[80,17,73],[[26,[84]]]],[[]],[[]],[[]],[[83,17],71],[[84,17],71],[83,36],[84,36],[83,16],[84,16],[83,17],[84,17],[[]],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],77],[[],77],[[],77],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[85,6]],[[86,6]],[51,[[1,[51]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],13],[[16,17,18],[[20,[[19,[18]]]]]],[[16,17,18],[[20,[[19,[18]]]]]],[87,87],[51,51],[[]],[[]],[[87,87],36],[[51,51],36],[[],36],[[87,40],43],[[85,40],43],[[86,40],43],[[51,40],43],[[]],[[]],[[]],[[[1,[51]]],51],[[]],[17,[[20,[87]]]],[71,[[26,[85]]]],[71,[[26,[86]]]],[[80,17,73],[[26,[85]]]],[[80,17,73],[[26,[86]]]],[[]],[[]],[[]],[[]],[[85,17],71],[[86,17],71],[85,36],[86,36],[85,16],[86,16],[51],[[51,[20,[66]],17]],[85,17],[86,17],[[51,[20,[66]],57,[20,[57]],17]],[[]],[[]],[87,17],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],77],[[],77],[[],77],[[],77],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],88],[[89,6]],[[90,6]],[58,[[1,[58]]]],[[88,88],88],[[88,88]],[[88,88],88],[[88,88]],[88,17],[[88,88],88],[[88,88]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],13],[[16,17,18],[[20,[[19,[18]]]]]],[[16,17,18],[[20,[[19,[18]]]]]],[88,88],[58,58],[[]],[[]],[[88,88],91],[88,88],[[88,88],36],[58,[[9,[66]]]],[[88,88],88],[[],88],[[88,88],36],[[58,58],36],[[],36],[[],36],[[88,92]],[[88,40],43],[[88,40],43],[[88,40],43],[[88,40],43],[[88,40],43],[[89,40],43],[[90,40],43],[[58,40],43],[[]],[[]],[[]],[[[1,[58]]],58],[[]],[17,[[20,[88]]]],[17,88],[17,88],[92,88],[17,[[20,[88]]]],[71,[[26,[89]]]],[71,[[26,[90]]]],[[80,17,73],[[26,[89]]]],[[80,17,73],[[26,[90]]]],[[58,65],[[9,[51]]]],[[88,93]],[[88,88]],[[88,88],88],[[88,88],36],[[]],[[]],[[]],[[]],[[89,17],71],[[90,17],71],[88,36],[89,36],[90,36],[88,36],[88,88],[89,16],[90,16],[[88,88],[[20,[91]]]],[[88,88]],[[88,88,36]],[89,17],[90,17],[[88,88],88],[[88,88]],[[88,88],88],[[]],[[]],[88,17],[[88,88]],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],77],[[],77],[[],77],[[],77],[[88,88],88],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[60,17,[20,[76]]]],[[94,6]],[[95,6]],[60,[[1,[60]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],13],[[16,17,18],[[20,[[19,[18]]]]]],[[16,17,18],[[20,[[19,[18]]]]]],[96,96],[60,60],[[]],[[]],[60],[[96,96],36],[[60,60],36],[[],36],[60],[[96,40],43],[[94,40],43],[[95,40],43],[[60,40],43],[[]],[[]],[[]],[[]],[[[1,[60]]],60],[17,[[20,[96]]]],[71,[[26,[94]]]],[71,[[26,[95]]]],[[80,17,73],[[26,[94]]]],[[80,17,73],[[26,[95]]]],[[]],[[]],[[]],[[]],[[94,17],71],[[95,17],71],[94,36],[95,36],[94,16],[95,16],[[60,76,70]],[[60,88,88]],[94,17],[95,17],[[]],[[]],[96,17],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],77],[[],77],[[],77],[[],77],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[97,6]],[[98,6]],[66,[[1,[66]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],13],[[16,17,18],[[20,[[19,[18]]]]]],[[16,17,18],[[20,[[19,[18]]]]]],[99,99],[66,66],[[]],[[]],[66],[[99,99],36],[[66,66],36],[[],36],[[99,40],43],[[97,40],43],[[98,40],43],[[66,40],43],[[]],[[]],[[]],[[]],[[[1,[66]]],66],[17,[[20,[99]]]],[71,[[26,[97]]]],[71,[[26,[98]]]],[[80,17,73],[[26,[97]]]],[[80,17,73],[[26,[98]]]],[[]],[[]],[[]],[[]],[[97,17],71],[[98,17],71],[97,36],[98,36],[[66,76]],[97,16],[98,16],[[66,88]],[97,17],[98,17],[[]],[[]],[99,17],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],77],[[],77],[[],77],[[],77],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[100,6]],[[101,6]],[30,[[1,[30]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],13],[[16,17,18],[[20,[[19,[18]]]]]],[[16,17,18],[[20,[[19,[18]]]]]],[102,102],[30,30],[[]],[[]],[[102,102],36],[[30,30],36],[[],36],[[102,40],43],[[100,40],43],[[101,40],43],[[30,40],43],[[]],[[]],[[]],[[[1,[30]]],30],[[]],[17,[[20,[102]]]],[71,[[26,[100]]]],[71,[[26,[101]]]],[[80,17,73],[[26,[100]]]],[[80,17,73],[[26,[101]]]],[30,[[9,[48]]]],[[]],[[]],[[]],[[]],[[100,17],71],[[101,17],71],[100,36],[101,36],[100,16],[101,16],[100,17],[101,17],[30,[[9,[49]]]],[[]],[[]],[102,17],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],77],[[],77],[[],77],[[],77],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[103,6]],[[104,6]],[68,[[1,[68]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],13],[[16,17,18],[[20,[[19,[18]]]]]],[[16,17,18],[[20,[[19,[18]]]]]],[105,105],[106,106],[68,68],[[]],[[]],[[]],[[105,105],36],[[106,106],36],[[68,68],36],[[],36],[[105,40],43],[[106,40],43],[[103,40],43],[[104,40],43],[[68,40],43],[[]],[[]],[[]],[[]],[[]],[[[1,[68]]],68],[17,[[20,[105]]]],[17,[[20,[106]]]],[71,[[26,[103]]]],[71,[[26,[104]]]],[[80,17,73],[[26,[103]]]],[[80,17,73],[[26,[104]]]],[[]],[[]],[[]],[[]],[[]],[[103,17],71],[[104,17],71],[103,36],[104,36],[103,16],[104,16],[68],[103,17],[104,17],[[]],[[]],[[]],[105,17],[106,17],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],77],[[],77],[[],77],[[],77],[[],77],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],107],[[108,6]],[[109,6]],[59,[[1,[59]]]],[[107,107],107],[[107,107]],[[107,107],107],[[107,107]],[107,17],[[107,107],107],[[107,107]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],13],[[16,17,18],[[20,[[19,[18]]]]]],[[16,17,18],[[20,[[19,[18]]]]]],[110,110],[111,111],[107,107],[59,59],[[]],[[]],[[]],[[]],[[107,107],91],[107,107],[[107,107],36],[[107,107],107],[[],107],[[110,110],36],[[111,111],36],[[107,107],36],[[59,59],36],[[],36],[[],36],[[107,92]],[[110,40],43],[[111,40],43],[[107,40],43],[[107,40],43],[[107,40],43],[[107,40],43],[[107,40],43],[[108,40],43],[[109,40],43],[[59,40],43],[[]],[[]],[[]],[[]],[[]],[[]],[[[1,[59]]],59],[17,[[20,[107]]]],[17,107],[17,107],[92,107],[17,[[20,[110]]]],[17,[[20,[111]]]],[17,[[20,[107]]]],[71,[[26,[108]]]],[71,[[26,[109]]]],[[80,17,73],[[26,[108]]]],[[80,17,73],[[26,[109]]]],[[107,93]],[[107,107]],[[107,107],107],[[107,107],36],[[]],[[]],[[]],[[]],[[]],[[]],[[108,17],71],[[109,17],71],[107,36],[108,36],[109,36],[107,36],[107,107],[108,16],[109,16],[[107,107],[[20,[91]]]],[59],[[107,107]],[[107,107,36]],[108,17],[109,17],[[107,107],107],[[107,107]],[[107,107],107],[[]],[[]],[[]],[[]],[110,17],[111,17],[107,17],[[107,107]],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],77],[[],77],[[],77],[[],77],[[],77],[[],77],[[107,107],107],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[112,6]],[[113,6]],[63,[[1,[63]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],13],[[16,17,18],[[20,[[19,[18]]]]]],[[16,17,18],[[20,[[19,[18]]]]]],[114,114],[115,115],[116,116],[117,117],[63,63],[[]],[[]],[[]],[[]],[[]],[[114,114],36],[[115,115],36],[[116,116],36],[[117,117],36],[[63,63],36],[[],36],[[114,40],43],[[115,40],43],[[116,40],43],[[117,40],43],[[112,40],43],[[113,40],43],[[63,40],43],[[]],[[]],[[]],[[]],[[]],[[]],[[[1,[63]]],63],[[]],[17,[[20,[114]]]],[17,[[20,[115]]]],[17,[[20,[116]]]],[17,[[20,[117]]]],[71,[[26,[112]]]],[71,[[26,[113]]]],[[80,17,73],[[26,[112]]]],[[80,17,73],[[26,[113]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[112,17],71],[[113,17],71],[112,36],[113,36],[112,16],[113,16],[63],[[63,17,[20,[57]],118,118]],[112,17],[113,17],[[]],[[]],[[]],[[]],[[]],[114,17],[115,17],[116,17],[117,17],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],77],[[],77],[[],77],[[],77],[[],77],[[],77],[[],77],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[62,118,118,118,118]],[[119,6]],[[120,6]],[62,[[1,[62]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],13],[[16,17,18],[[20,[[19,[18]]]]]],[[16,17,18],[[20,[[19,[18]]]]]],[62,62],[[]],[62],[[62,62],36],[[],36],[[119,40],43],[[120,40],43],[[62,40],43],[[]],[[]],[[[1,[62]]],62],[[]],[71,[[26,[119]]]],[71,[[26,[120]]]],[[80,17,73],[[26,[119]]]],[[80,17,73],[[26,[120]]]],[[]],[[]],[[]],[[119,17],71],[[120,17],71],[119,36],[120,36],[119,16],[120,16],[119,17],[120,17],[[62,118,118,118,118]],[[]],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],77],[[],77],[[],77],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[121,6]],[[122,6]],[48,[[1,[48]]]],[[48,17,17],[[9,[[0,[4,[3,[[1,[[0,[4,[3,[[1,[[0,[4,[3,[1]],[2,[1]]]]]]]],[2,[[1,[[0,[4,[3,[1]],[2,[1]]]]]]]]]]]]]],[2,[[1,[[0,[4,[3,[[1,[[0,[4,[3,[1]],[2,[1]]]]]]]],[2,[[1,[[0,[4,[3,[1]],[2,[1]]]]]]]]]]]]]]]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],13],[[16,17,18],[[20,[[19,[18]]]]]],[[16,17,18],[[20,[[19,[18]]]]]],[48,48],[[]],[[48,48],36],[[],36],[[121,40],43],[[122,40],43],[[48,40],43],[[]],[[]],[[[1,[48]]],48],[[]],[71,[[26,[121]]]],[71,[[26,[122]]]],[[80,17,73],[[26,[121]]]],[[80,17,73],[[26,[122]]]],[[]],[[]],[[]],[[121,17],71],[[122,17],71],[121,36],[122,36],[121,16],[122,16],[121,17],[122,17],[[]],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],77],[[],77],[[],77],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],123],[[124,6]],[[125,6]],[65,[[1,[65]]]],[[123,123],123],[[123,123]],[[123,123],123],[[123,123]],[123,17],[[123,123],123],[[123,123]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],13],[[16,17,18],[[20,[[19,[18]]]]]],[[16,17,18],[[20,[[19,[18]]]]]],[123,123],[126,126],[65,65],[[]],[[]],[[]],[[123,123],91],[123,123],[[123,123],36],[[123,123],123],[[],123],[[123,123],36],[[126,126],36],[[65,65],36],[[],36],[[],36],[[123,92]],[[123,40],43],[[123,40],43],[[123,40],43],[[123,40],43],[[123,40],43],[[126,40],43],[[124,40],43],[[125,40],43],[[65,40],43],[[]],[[]],[[]],[[]],[[[1,[65]]],65],[[]],[17,[[20,[123]]]],[17,123],[17,123],[92,123],[17,[[20,[123]]]],[17,[[20,[126]]]],[71,[[26,[124]]]],[71,[[26,[125]]]],[[80,17,73],[[26,[124]]]],[[80,17,73],[[26,[125]]]],[65,[[9,[68]]]],[65,[[9,[63]]]],[65,[[9,[54]]]],[[123,93]],[[123,123]],[[123,123],123],[[123,123],36],[[]],[[]],[[]],[[]],[[]],[[124,17],71],[[125,17],71],[123,36],[124,36],[125,36],[123,36],[123,123],[124,16],[125,16],[[123,123],[[20,[91]]]],[65],[[123,123]],[[123,123,36]],[124,17],[125,17],[[123,123],123],[[123,123]],[[123,123],123],[[]],[[]],[[]],[123,17],[126,17],[[123,123]],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],77],[[],77],[[],77],[[],77],[[],77],[[123,123],123],0,0,0,0,0,0,0,0,0,0,0,0,[[127,6]],[[128,6]],[52,[[1,[52]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],13],[[16,17,18],[[20,[[19,[18]]]]]],[[16,17,18],[[20,[[19,[18]]]]]],[129,129],[52,52],[[]],[[]],[[129,129],36],[[52,52],36],[[],36],[[129,40],43],[[127,40],43],[[128,40],43],[[52,40],43],[[]],[[]],[[]],[[]],[[[1,[52]]],52],[17,[[20,[129]]]],[71,[[26,[127]]]],[71,[[26,[128]]]],[[80,17,73],[[26,[127]]]],[[80,17,73],[[26,[128]]]],[[52,57],[[9,[50]]]],[[]],[[]],[[]],[[]],[[127,17],71],[[128,17],71],[127,36],[128,36],[127,16],[128,16],[127,17],[128,17],[[]],[[]],[129,17],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],77],[[],77],[[],77],[[],77],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[50,65,17]],[[],130],[[],131],[[132,6]],[[133,6]],[50,[[1,[50]]]],[[130,130],130],[[131,131],131],[[130,130]],[[131,131]],[[130,130],130],[[131,131],131],[[130,130]],[[131,131]],[130,17],[131,17],[[130,130],130],[[131,131],131],[[130,130]],[[131,131]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],13],[[16,17,18],[[20,[[19,[18]]]]]],[[16,17,18],[[20,[[19,[18]]]]]],[130,130],[131,131],[134,134],[50,50],[[]],[[]],[[]],[[]],[[130,130],91],[[131,131],91],[130,130],[131,131],[[130,130],36],[[131,131],36],[[130,130],130],[[131,131],131],[[],130],[[],131],[[130,130],36],[[131,131],36],[[134,134],36],[[50,50],36],[[],36],[[],36],[[],36],[[130,92]],[[131,92]],[[130,40],43],[[130,40],43],[[130,40],43],[[130,40],43],[[130,40],43],[[131,40],43],[[131,40],43],[[131,40],43],[[131,40],43],[[131,40],43],[[134,40],43],[[132,40],43],[[133,40],43],[[50,40],43],[[]],[[]],[[]],[[]],[[]],[[[1,[50]]],50],[[]],[17,[[20,[130]]]],[17,[[20,[131]]]],[17,130],[17,131],[17,130],[17,131],[92,130],[92,131],[17,[[20,[130]]]],[17,[[20,[131]]]],[17,[[20,[134]]]],[71,[[26,[132]]]],[71,[[26,[133]]]],[[80,17,73],[[26,[132]]]],[[80,17,73],[[26,[133]]]],[[130,93]],[[131,93]],[[130,130]],[[131,131]],[[130,130],130],[[131,131],131],[[130,130],36],[[131,131],36],[[]],[[]],[[]],[[]],[[]],[[]],[[132,17],71],[[133,17],71],[130,36],[131,36],[132,36],[133,36],[130,36],[131,36],[130,130],[131,131],[132,16],[133,16],[[130,130],[[20,[91]]]],[[131,131],[[20,[91]]]],[[50,17]],[[130,130]],[[131,131]],[[50,65,17,130]],[[130,130,36]],[[131,131,36]],[[50,76]],[[50,134,17,[20,[59]]]],[[50,[20,[59]]]],[[50,65,17,57,118,118,131]],[[50,76]],[50],[[50,57,118,118,131]],[132,17],[133,17],[[130,130],130],[[131,131],131],[[130,130]],[[131,131]],[[130,130],130],[[131,131],131],[[]],[[]],[[]],[[]],[130,17],[131,17],[134,17],[[130,130]],[[131,131]],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],77],[[],77],[[],77],[[],77],[[],77],[[],77],[[130,130],130],[[131,131],131],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[135,6]],[[136,6]],[56,[[1,[56]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],13],[[16,17,18],[[20,[[19,[18]]]]]],[[16,17,18],[[20,[[19,[18]]]]]],[137,137],[138,138],[56,56],[[]],[[]],[[]],[[56,70,118],[[9,[55]]]],[[137,137],36],[[138,138],36],[[56,56],36],[[],36],[[137,40],43],[[138,40],43],[[135,40],43],[[136,40],43],[[56,40],43],[[]],[[]],[[]],[[]],[[[1,[56]]],56],[[]],[17,[[20,[137]]]],[17,[[20,[138]]]],[71,[[26,[135]]]],[71,[[26,[136]]]],[[80,17,73],[[26,[135]]]],[[80,17,73],[[26,[136]]]],[[]],[[]],[[]],[[]],[[]],[[135,17],71],[[136,17],71],[135,36],[136,36],[135,16],[136,16],[135,17],[136,17],[[]],[[]],[[]],[137,17],[138,17],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],77],[[],77],[[],77],[[],77],[[],77],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[139,6]],[[140,6]],[55,[[1,[55]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],13],[[16,17,18],[[20,[[19,[18]]]]]],[[16,17,18],[[20,[[19,[18]]]]]],[55,55],[[]],[[55,118,118,118,118,138],[[9,[64]]]],[55],[[55,55],36],[[],36],[[139,40],43],[[140,40],43],[[55,40],43],[[]],[[]],[[]],[[[1,[55]]],55],[71,[[26,[139]]]],[71,[[26,[140]]]],[[80,17,73],[[26,[139]]]],[[80,17,73],[[26,[140]]]],[[]],[[]],[[]],[[139,17],71],[[140,17],71],[139,36],[140,36],[139,16],[140,16],[[55,118]],[139,17],[140,17],[[]],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],77],[[],77],[[],77],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[141,6]],[[142,6]],[67,[[1,[67]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],13],[[16,17,18],[[20,[[19,[18]]]]]],[[16,17,18],[[20,[[19,[18]]]]]],[143,143],[67,67],[[]],[[]],[67],[[143,143],36],[[67,67],36],[[],36],[[143,40],43],[[141,40],43],[[142,40],43],[[67,40],43],[[]],[[]],[[]],[[[1,[67]]],67],[[]],[17,[[20,[143]]]],[71,[[26,[141]]]],[71,[[26,[142]]]],[[80,17,73],[[26,[141]]]],[[80,17,73],[[26,[142]]]],[[67,57,57],[[9,[61]]]],[[]],[[]],[[]],[[]],[[141,17],71],[[142,17],71],[141,36],[142,36],[141,16],[142,16],[141,17],[142,17],[[]],[[]],[143,17],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],77],[[],77],[[],77],[[],77],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[144,6]],[[145,6]],[61,[[1,[61]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],13],[[16,17,18],[[20,[[19,[18]]]]]],[[16,17,18],[[20,[[19,[18]]]]]],[146,146],[61,61],[[]],[[]],[61],[[146,146],36],[[61,61],36],[[],36],[[146,40],43],[[144,40],43],[[145,40],43],[[61,40],43],[[]],[[]],[[]],[[]],[[[1,[61]]],61],[17,[[20,[146]]]],[71,[[26,[144]]]],[71,[[26,[145]]]],[[80,17,73],[[26,[144]]]],[[80,17,73],[[26,[145]]]],[[]],[[]],[[]],[[]],[[144,17],71],[[145,17],71],[144,36],[145,36],[144,16],[145,16],[[61,57]],[[61,57]],[61],[[61,118,118]],[61],[144,17],[145,17],[[]],[[]],[146,17],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],77],[[],77],[[],77],[[],77],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[147,6]],[[148,6]],[57,[[1,[57]]]],[[57,[20,[64]],118,118]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],13],[[16,17,18],[[20,[[19,[18]]]]]],[[16,17,18],[[20,[[19,[18]]]]]],[149,149],[57,57],[[]],[[]],[57],[[57,118,118,118,118]],[[57,118,118,118,118]],[57],[[149,149],36],[[57,57],36],[[],36],[[149,40],43],[[147,40],43],[[148,40],43],[[57,40],43],[57,[[9,[49]]]],[[]],[[]],[[]],[[]],[[[1,[57]]],57],[17,[[20,[149]]]],[71,[[26,[147]]]],[71,[[26,[148]]]],[[80,17,73],[[26,[147]]]],[[80,17,73],[[26,[148]]]],[[]],[[]],[[]],[[]],[[147,17],71],[[148,17],71],[147,36],[148,36],[[57,118,118]],[147,16],[148,16],[[57,118]],[[57,111]],[[57,[20,[62]]]],[[57,[20,[62]]]],[147,17],[148,17],[[]],[[]],[149,17],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],77],[[],77],[[],77],[[],77],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[150,6]],[[151,6]],[54,[[1,[54]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],13],[[16,17,18],[[20,[[19,[18]]]]]],[[16,17,18],[[20,[[19,[18]]]]]],[54,54],[[]],[[54,54],36],[[],36],[[150,40],43],[[151,40],43],[[54,40],43],[[]],[[]],[[]],[[[1,[54]]],54],[71,[[26,[150]]]],[71,[[26,[151]]]],[[80,17,73],[[26,[150]]]],[[80,17,73],[[26,[151]]]],[[]],[[]],[[]],[[150,17],71],[[151,17],71],[150,36],[151,36],[150,16],[151,16],[54],[150,17],[151,17],[[]],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],77],[[],77],[[],77],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[152,[[20,[153]]]],[154,153],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],36],[31,[[26,[153,155]]]],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],77],[[],77],[[],77],[[],77],[[],77],[[],77],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[]],[[]],[[]],[[]],[[]],0,0,[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],77],[[],77],[[],77],[[],77],[[],77],0,0,0,0,0,0,[156,118],[118,118],0,[118,156],[118,118],0,0,0,0],"c":[],"p":[[3,"Proxy"],[8,"AsRef"],[8,"From"],[8,"Interface"],[3,"AnonymousObject"],[8,"FnOnce"],[4,"NoMessage"],[8,"Sync"],[3,"Main"],[3,"Filter"],[3,"QueueToken"],[3,"Attached"],[3,"wl_interface"],[4,"wl_proxy"],[3,"ReadEventsGuard"],[15,"u16"],[15,"u32"],[8,"ObjectMetadata"],[3,"Object"],[4,"Option"],[3,"ProtocolError"],[3,"Display"],[3,"GlobalManager"],[8,"Clone"],[4,"ConnectError"],[4,"Result"],[3,"OsString"],[8,"Into"],[3,"EventQueue"],[3,"WlDisplay"],[15,"str"],[8,"Any"],[8,"FnMut"],[6,"Result"],[3,"UserData"],[15,"bool"],[4,"GlobalError"],[8,"PartialEq"],[3,"DispatchData"],[3,"Formatter"],[3,"Error"],[8,"Debug"],[6,"Result"],[4,"GlobalEvent"],[4,"ProxyMap"],[4,"Argument"],[3,"RawEvent"],[3,"WlRegistry"],[3,"WlCallback"],[3,"WlShellSurface"],[3,"WlDataDevice"],[3,"WlShell"],[3,"WlCompositor"],[3,"WlTouch"],[3,"WlShmPool"],[3,"WlShm"],[3,"WlSurface"],[3,"WlDataDeviceManager"],[3,"WlOutput"],[3,"WlDataOffer"],[3,"WlSubsurface"],[3,"WlRegion"],[3,"WlPointer"],[3,"WlBuffer"],[3,"WlSeat"],[3,"WlDataSource"],[3,"WlSubcompositor"],[3,"WlKeyboard"],[4,"wl_display"],[6,"RawFd"],[3,"Message"],[4,"c_void"],[19,"wl_argument"],[3,"Vec"],[3,"Demand"],[3,"String"],[3,"TypeId"],[4,"Request"],[4,"Event"],[6,"c_void"],[4,"Request"],[4,"Event"],[4,"Request"],[4,"Event"],[4,"Request"],[4,"Event"],[4,"Error"],[3,"DndAction"],[4,"Request"],[4,"Event"],[4,"Ordering"],[8,"IntoIterator"],[8,"Hasher"],[4,"Request"],[4,"Event"],[4,"Error"],[4,"Request"],[4,"Event"],[4,"Error"],[4,"Request"],[4,"Event"],[4,"Error"],[4,"Request"],[4,"Event"],[4,"KeymapFormat"],[4,"KeyState"],[3,"Mode"],[4,"Request"],[4,"Event"],[4,"Subpixel"],[4,"Transform"],[4,"Request"],[4,"Event"],[4,"Error"],[4,"ButtonState"],[4,"Axis"],[4,"AxisSource"],[15,"i32"],[4,"Request"],[4,"Event"],[4,"Request"],[4,"Event"],[3,"Capability"],[4,"Request"],[4,"Event"],[4,"Error"],[4,"Request"],[4,"Event"],[4,"Error"],[3,"Resize"],[3,"Transient"],[4,"Request"],[4,"Event"],[4,"FullscreenMethod"],[4,"Request"],[4,"Event"],[4,"Error"],[4,"Format"],[4,"Request"],[4,"Event"],[4,"Request"],[4,"Event"],[4,"Error"],[4,"Request"],[4,"Event"],[4,"Error"],[4,"Request"],[4,"Event"],[4,"Error"],[4,"Request"],[4,"Event"],[3,"WAYLAND_CLIENT_OPTION"],[3,"WaylandClient"],[3,"WAYLAND_CLIENT_HANDLE"],[4,"DlError"],[15,"f64"],[8,"MessageGroup"],[8,"GlobalImplementor"],[13,"New"],[13,"Removed"],[13,"Done"],[13,"DataOffer"],[13,"Enter"],[13,"Selection"],[13,"Motion"],[13,"StartDrag"],[13,"SetSelection"],[13,"GetDataDevice"],[13,"Action"],[13,"Offer"],[13,"SourceActions"],[13,"SetActions"],[13,"Receive"],[13,"Accept"],[13,"Action"],[13,"Send"],[13,"Target"],[13,"SetActions"],[13,"Offer"],[13,"Error"],[13,"DeleteId"],[13,"RepeatInfo"],[13,"Keymap"],[13,"Modifiers"],[13,"Key"],[13,"Enter"],[13,"Leave"],[13,"Description"],[13,"Scale"],[13,"Mode"],[13,"Geometry"],[13,"Name"],[13,"Axis"],[13,"AxisStop"],[13,"AxisDiscrete"],[13,"AxisSource"],[13,"Button"],[13,"Enter"],[13,"Leave"],[13,"Motion"],[13,"SetCursor"],[13,"Add"],[13,"Subtract"],[13,"Global"],[13,"GlobalRemove"],[13,"Bind"],[13,"Capabilities"],[13,"Name"],[13,"GetShellSurface"],[13,"Configure"],[13,"Ping"],[13,"SetClass"],[13,"Resize"],[13,"SetTransient"],[13,"SetPopup"],[13,"SetFullscreen"],[13,"SetMaximized"],[13,"Move"],[13,"Pong"],[13,"SetTitle"],[13,"Format"],[13,"CreatePool"],[13,"CreateBuffer"],[13,"Resize"],[13,"GetSubsurface"],[13,"PlaceAbove"],[13,"PlaceBelow"],[13,"SetPosition"],[13,"Enter"],[13,"Leave"],[13,"Attach"],[13,"Damage"],[13,"DamageBuffer"],[13,"SetOpaqueRegion"],[13,"SetInputRegion"],[13,"SetBufferScale"],[13,"SetBufferTransform"],[13,"Offset"],[13,"Down"],[13,"Up"],[13,"Motion"],[13,"Shape"],[13,"Orientation"],[4,"wl_event_queue"],[3,"wl_array"],[3,"wl_message"],[3,"wl_list"]]},\
"wayland_commons":{"doc":"Common definitions for wayland","t":"QISQISEQDSKLLLLLKKLALALLLLKLKLLLLLKLKLALKLKLOALLLLLLLLAAFFDDLLLLLLLLLLLLLLLLLLLLLLLLDDIRLLLLKMMLLLLLMLLLLLLLMLLLMLLLLMLLLLLLLLMLLDRRDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLLLEENNNNNNNNNNNDDEENNNNNNNNNNMLLLLLLLLLLLLLLLLLLLLLLLLMFLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["Event","Interface","MESSAGES","Map","MessageGroup","NAME","NoMessage","Request","ThreadGuard","VERSION","as_raw_c_in","as_raw_c_in","borrow","borrow","borrow_mut","borrow_mut","c_interface","child","child","debug","drop","filter","fmt","fmt","from","from","from_raw","from_raw","from_raw_c","from_raw_c","get","get_mut","into","into","into_raw","into_raw","is_destructor","is_destructor","map","new","opcode","opcode","since","since","smallvec","socket","try_from","try_from","try_get","try_get_mut","try_into","try_into","type_id","type_id","user_data","wire","print_dispatched_message","print_send_message","DispatchData","Filter","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","fmt","fmt","from","from","get","into","into","new","reborrow","send","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","wrap","Object","ObjectMap","ObjectMetadata","SERVER_ID_LIMIT","borrow","borrow","borrow_mut","borrow_mut","child","childs_from_events","childs_from_requests","client_insert_new","clone","clone_into","default","event_child","events","find","fmt","fmt","from","from","from_interface","insert_at","interface","into","into","is_interface","meta","new","placeholder","remove","request_child","requests","server_insert_new","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","version","with","with_all","BufferedSocket","MAX_BYTES_OUT","MAX_FDS_OUT","Socket","as_raw_fd","borrow","borrow","borrow_mut","borrow_mut","drop","fill_incoming_buffers","flush","fmt","fmt","from","from","from_raw_fd","get_socket","into","into","into_raw_fd","into_socket","new","opt","rcv_msg","read_messages","read_one_message","send_msg","try_from","try_from","try_into","try_into","type_id","type_id","write_message","UserData","UserDataMap","borrow","borrow","borrow_mut","borrow_mut","default","drop","fmt","fmt","from","from","get","get","insert_if_missing","insert_if_missing_threadsafe","into","into","new","new","set","set_threadsafe","try_from","try_from","try_into","try_into","type_id","type_id","Argument","ArgumentType","Array","Array","BufferTooSmall","DupFdFailed","Fd","Fd","Fixed","Fixed","Int","Int","Malformed","Message","MessageDesc","MessageParseError","MessageWriteError","MissingData","MissingFD","NewId","NewId","Object","Object","Str","Str","Uint","Uint","args","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","destructor","dup_fd_cloexec","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_raw","get_type","into","into","into","into","into","into","name","opcode","provide","provide","sender_id","signature","since","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","write_to_buffers"],"q":[[0,"wayland_commons"],[56,"wayland_commons::debug"],[58,"wayland_commons::filter"],[84,"wayland_commons::map"],[129,"wayland_commons::socket"],[164,"wayland_commons::user_data"],[192,"wayland_commons::wire"]],"d":["Set of events associated to this interface","The description of a wayland interface","Wire representation of this MessageGroup","The wrapper type for ObjectMap allowing the mapping of …","A group of messages","Name of this interface","An empty enum representing a MessageGroup with no messages","Set of requests associated to this interface","Stores a value in a threadafe container that only lets you …","Maximum supported version of this interface","Build a C representation of this message","","","","","","Pointer to the C representation of this interface","Retrieve the child <code>Object</code> associated with this message if …","","Debugging helpers to handle <code>WAYLAND_DEBUG</code> env variable.","","Filter","","","Returns the argument unchanged.","Returns the argument unchanged.","Construct a message from its raw representation","","Construct a message of this group from its C representation","","Access the underlying value","Mutably access the underlying value","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Turn this message into its raw representation","","Whether this message is a destructor","","Wayland objects map","Create a new ThreadGuard wrapper","The opcode of this message","","The minimal object version for which this message exists","","Creates a <code>SmallVec</code> containing the arguments.","Wayland socket manipulation","","","Try to access the underlying value","Try to mutably access the underlying value","","","","","Various utilities used for other implementations","Types and routines used to manipulate arguments from the …","Print the dispatched message to stderr in a following …","Print the send message to stderr in a following format:","Holder of global dispatch-related data","An event filter","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Access the dispatch data knowing its type","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Create a new filter from given closure","Reborrows this <code>DispatchData</code> to create a new one with the …","Send a message to this filter","","","","","","","","Wrap a mutable reference","The representation of a protocol object","A holder for the object store of a connection","A trait representing the metadata a wayland implementation …","Limit separating server-created from client-created …","","","","","Create the metadata for a child object","A function which, from an opcode, a version, and the Meta, …","A function which, from an opcode, a version, and the Meta, …","Allocate a new id for an object in the client namespace","","","","Create an optional <code>Object</code> corresponding to the possible …","Description of the events of this object","Find an object in the store","","","Returns the argument unchanged.","Returns the argument unchanged.","Create an Object corresponding to given interface and …","Insert given object for given id","Interface name of this object","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Check whether this object is of given interface","Metadata associated to this object (ex: its event queue …","Create a new empty object map","Create a placeholder object that will be filled-in by the …","Remove an object from the store","Create an optional <code>Object</code> corresponding to the possible …","Description of the requests of this object","Allocate a new id for an object in the server namespace","","","","","","","","Version of this object","Mutably access an object of the map","Mutably access all objects of the map in sequence","An adapter around a raw Socket that directly handles …","Maximum number of bytes that can be sent in a single …","Maximum number of FD that can be sent in a single socket …","A wayland socket","","","","","","","Try to fill the incoming buffers of this socket, to prepare","Flush the contents of the outgoing buffer into the socket","","","Returns the argument unchanged.","Returns the argument unchanged.","","Get direct access to the underlying socket","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Retrieve ownership of the underlying Socket","Wrap a Socket into a Buffered Socket","Retrieve the current value of the requested …","Receive a single message from the socket","Read and deserialize messages from the socket","Read and deserialize a single message from the incoming …","Send a single message to the socket","","","","","","","Write a message to the outgoing buffer","A wrapper for user data, able to store any type, and …","A storage able to store several values of <code>UserData</code> of …","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Attempt to access the wrapped user data","Attempt to access the wrapped user data of a given type","Insert a value in the map if it is not already there","Insert a value in the map if it is not already there","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Create a new UserData instance","Create a new map","Sets the UserData to a given value","Sets the UserData to a given threadsafe value","","","","","","","Enum of possible argument as recognized by the wire, …","Enum of possible argument types as recognized by the wire","Vec","Vec","The buffer is too small to hold the message contents","The message contains a FD that could not be dup-ed","RawFd","RawFd","fixed point, 1/256 precision","fixed point, 1/256 precision","i32","i32","The message is malformed and cannot be parsed","A wire message","Wire metadata of a given message","Error generated when trying to deserialize a message from …","Error generated when trying to serialize a message into …","More data is needed to deserialize the message","The message references a FD but the buffer FD is empty","id of a newly created wayland object","id of a newly created wayland object","id of a wayland object","id of a wayland object","CString","CString","u32","u32","Arguments of the message","","","","","","","","","","","","","","","","","","","","","","","","","Whether this message is a destructor","Duplicate a <code>RawFd</code> and set the CLOEXEC flag on the copy","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Attempts to parse a single wayland message with the given …","Retrieve the type of a given argument instance","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Name of this message","Opcode of the message","","","ID of the object sending this message","Signature of the message","Minimum required version of the interface","","","","","","","","","","","","","","","","","","","","","","","","","","","","Serialize the contents of this message into provided …"],"i":[46,0,47,47,0,46,0,46,0,46,47,2,2,10,2,10,46,47,2,0,10,0,2,10,2,10,47,2,47,2,10,10,2,10,47,2,47,2,0,10,47,2,47,2,0,0,2,10,10,10,2,10,2,10,0,0,0,0,0,0,24,23,24,23,23,23,24,23,24,23,24,24,23,23,24,23,23,24,23,24,23,24,23,24,0,0,0,0,7,27,7,27,6,7,7,27,7,7,27,7,7,27,7,27,7,27,7,27,7,7,27,7,7,27,7,27,7,7,27,7,7,27,7,27,7,27,7,27,27,0,0,0,0,30,30,32,30,32,30,32,32,30,32,30,32,30,32,30,32,30,32,32,30,30,32,32,30,30,32,30,32,30,32,32,0,0,39,38,39,38,38,39,39,38,39,38,39,38,38,38,39,38,39,38,39,39,39,38,39,38,39,38,0,0,41,21,42,42,41,21,41,21,41,21,37,0,0,0,0,37,37,41,21,41,21,41,21,41,21,14,40,41,21,14,42,37,40,41,21,14,42,37,40,41,21,14,42,37,40,41,21,14,42,37,40,0,41,21,14,40,41,21,21,14,42,42,37,37,40,41,21,14,42,37,14,21,40,41,21,14,42,37,40,14,42,37,14,40,40,40,41,21,14,42,37,21,42,37,40,41,21,14,42,37,40,41,21,14,42,37,40,41,21,14,42,37,14],"f":[0,0,0,0,0,0,0,0,0,0,[1],[[2,1]],[[]],[[]],[[]],[[]],[[],3],[[4,5,6],[[8,[[7,[6]]]]]],[[4,5,6],[[8,[[7,[6]]]]]],0,[[[10,[9]]]],0,[[2,11],12],[[[10,[[0,[13,9]]]],11],12],[[]],[[]],[14,15],[14,[[15,[2]]]],[[16,5,17],15],[[16,5,17],[[15,[2]]]],[[[10,[9]]],9],[[[10,[9]]],9],[[]],[[]],[5,14],[[2,5],14],[[],18],[2,18],0,[[],10],[[],4],[2,4],[[],5],[2,5],0,0,[[],15],[[],15],[[[10,[9]]],[[8,[9]]]],[[[10,[9]]],[[8,[9]]]],[[],15],[[],15],[[],19],[[],19],0,0,[[20,5,20,[22,[21]]]],[[20,5,18,20,[22,[21]]]],0,0,[[]],[[]],[[]],[[]],[23,23],[[]],[[24,11],12],[[[23,[13]],11],12],[[]],[[]],[24,[[8,[25]]]],[[]],[[]],[26,23],[24,24],[[23,24]],[[]],[[],15],[[],15],[[],15],[[],15],[[],19],[[],19],[25,24],0,0,0,0,[[]],[[]],[[]],[[]],[[]],0,0,[[[27,[6]],[7,[6]]],5],[[[7,[[0,[28,6]]]]],[[7,[[0,[28,6]]]]]],[[]],[[],[[27,[[0,[29,6]]]]]],[[[7,[6]],4],[[8,[[7,[6]]]]]],0,[[[27,[6]],5],[[8,[[7,[6]]]]]],[[[7,[[0,[6,13]]]],11],12],[[[27,[[0,[13,6]]]],11],12],[[]],[[]],[[5,6],[[7,[6]]]],[[[27,[6]],5,[7,[6]]],15],0,[[]],[[]],[[[7,[6]]],18],0,[[],[[27,[6]]]],[6,[[7,[6]]]],[[[27,[6]],5]],[[[7,[6]],4],[[8,[[7,[6]]]]]],0,[[[27,[6]],[7,[6]]],5],[[]],[[],15],[[],15],[[],15],[[],15],[[],19],[[],19],0,[[[27,[6]],5,1],15],[[[27,[6]],26]],0,0,0,0,[30,31],[[]],[[]],[[]],[[]],[30],[32,33],[32,33],[[30,11],12],[[32,11],12],[[]],[[]],[31,30],[32,30],[[]],[[]],[30,31],[32,30],[30,32],[[30,34],33],[[30,[22,[35]],[22,[31]]],33],[[32,26,26],[[33,[[15,[36,37]]]]]],[[32,26],[[15,[14,37]]]],[[30,[22,[35]],[22,[31]]],33],[[],15],[[],15],[[],15],[[],15],[[],19],[[],19],[[32,14],33],0,0,[[]],[[]],[[]],[[]],[[],38],[39],[[39,11],12],[[38,11],12],[[]],[[]],[39,8],[38,8],[[38,1],18],[[38,1],18],[[]],[[]],[[],39],[[],38],[[39,1]],[[39,1]],[[],15],[[],15],[[],15],[[],15],[[],19],[[],19],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[40,40],[41,41],[21,21],[14,14],[42,42],[37,37],[[]],[[]],[[]],[[]],[[]],[[]],0,[31,[[33,[31]]]],[[41,41],18],[[21,21],18],[[14,14],18],[[40,11],12],[[41,11],12],[[21,11],12],[[21,11],12],[[14,11],12],[[42,11],12],[[42,11],[[15,[43]]]],[[37,11],[[15,[43]]]],[[37,11],12],[[]],[[]],[[]],[[]],[[]],[[]],[[[22,[5]],[22,[41]],[22,[31]]],[[15,[37]]]],[21,41],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[44],[44],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[],45],[[],45],[[],45],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[14,[22,[5]],[22,[31]]],[[15,[42]]]]],"c":[],"p":[[8,"FnOnce"],[4,"NoMessage"],[3,"wl_interface"],[15,"u16"],[15,"u32"],[8,"ObjectMetadata"],[3,"Object"],[4,"Option"],[8,"Sized"],[3,"ThreadGuard"],[3,"Formatter"],[6,"Result"],[8,"Debug"],[3,"Message"],[4,"Result"],[6,"c_void"],[19,"wl_argument"],[15,"bool"],[3,"TypeId"],[15,"str"],[4,"Argument"],[15,"slice"],[3,"Filter"],[3,"DispatchData"],[8,"Any"],[8,"FnMut"],[3,"ObjectMap"],[8,"Clone"],[8,"Default"],[3,"Socket"],[6,"RawFd"],[3,"BufferedSocket"],[6,"Result"],[8,"GetSockOpt"],[15,"u8"],[15,"usize"],[4,"MessageParseError"],[3,"UserDataMap"],[3,"UserData"],[3,"MessageDesc"],[4,"ArgumentType"],[4,"MessageWriteError"],[3,"Error"],[3,"Demand"],[3,"String"],[8,"Interface"],[8,"MessageGroup"]]},\
"wayland_cursor":{"doc":"Wayland cursor utilities","t":"DDDDLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["Cursor","CursorImageBuffer","CursorTheme","FrameAndDuration","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","delay","deref","dimensions","eq","equivalent","fmt","fmt","fmt","fmt","frame_and_duration","frame_duration","frame_index","from","from","from","from","get_cursor","hotspot","image_count","index","into","into","into","into","load","load_from_name","load_or","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id"],"q":[[0,"wayland_cursor"]],"d":["A cursor from a theme. Can contain several images if …","A buffer containing a cursor image.","Represents a cursor theme loaded from the system.","Which frame to show, and for how long.","","","","","","","","","","","","","","","Time (in milliseconds) for which this image should be …","","Dimensions of this image","","","","","","","Given a time, calculate which frame to show, and how much …","The duration that the frame should be shown for (in …","The index of the frame which should be shown.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Retrieve a cursor from the theme.","Location of the pointer hotspot in this image","Total number of images forming this cursor animation","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Load a cursor theme from system defaults.","Create a new cursor theme, ignoring the system defaults.","Load a cursor theme, using <code>name</code> as fallback.","","","","","","","","","","","","","","",""],"i":[0,0,0,0,7,1,2,3,7,1,2,3,1,2,3,1,2,3,2,2,2,3,3,7,1,2,3,1,3,3,7,1,2,3,7,2,1,1,7,1,2,3,7,7,7,1,2,3,7,1,2,3,7,1,2,3,7,1,2,3],"f":[0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,1],[2,2],[3,3],[[]],[[]],[[]],[2,4],[2,5],[2],[[3,3],6],[[],6],[[7,8],9],[[1,8],9],[[2,8],9],[[3,8],9],[[1,4],3],0,0,[[]],[[]],[[]],[[]],[[7,10],[[11,[1]]]],[2],[1,12],[[1,12]],[[]],[[]],[[]],[[]],[[4,[14,[13]]],7],[[10,4,[14,[13]]],7],[[10,4,[14,[13]]],7],[[]],[[]],[[]],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],16],[[],16],[[],16],[[],16]],"c":[],"p":[[3,"Cursor"],[3,"CursorImageBuffer"],[3,"FrameAndDuration"],[15,"u32"],[3,"WlBuffer"],[15,"bool"],[3,"CursorTheme"],[3,"Formatter"],[6,"Result"],[15,"str"],[4,"Option"],[15,"usize"],[3,"WlShm"],[3,"Attached"],[4,"Result"],[3,"TypeId"]]},\
"wayland_egl":{"doc":"EGL utilities","t":"DLLLLLLLFLLLLLLL","n":["WlEglSurface","borrow","borrow_mut","drop","fmt","from","get_size","into","is_available","new","new_from_raw","ptr","resize","try_from","try_into","type_id"],"q":[[0,"wayland_egl"]],"d":["EGL surface","","","","","Returns the argument unchanged.","Fetch current size of the EGL surface","Calls <code>U::from(self)</code>.","Checks if the wayland-egl lib is available and can be used","Create an EGL surface from a wayland surface","Create an EGL surface from a raw pointer to a wayland …","Raw pointer to the EGL surface","Resize the EGL surface","","",""],"i":[0,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1],"f":[0,[[]],[[]],[1],[[1,2],3],[[]],[1],[[]],[[],4],[[5,6,6],1],[[7,6,6],1],[1,8],[[1,6,6,6,6]],[[],9],[[],9],[[],10]],"c":[],"p":[[3,"WlEglSurface"],[3,"Formatter"],[6,"Result"],[15,"bool"],[3,"WlSurface"],[15,"i32"],[4,"wl_proxy"],[6,"c_void"],[4,"Result"],[3,"TypeId"]]},\
"wayland_protocols":{"doc":"This crate provides bindings to the official wayland …","t":"","n":["misc","presentation_time","staging","unstable","viewporter","wlr","xdg_shell","gtk_primary_selection","server_decoration","zwp_input_method_v2","client","gtk_primary_selection_device","gtk_primary_selection_device_manager","gtk_primary_selection_offer","gtk_primary_selection_source","DataOffer","Destroy","EVT_DATA_OFFER_SINCE","EVT_SELECTION_SINCE","Event","GtkPrimarySelectionDevice","REQ_DESTROY_SINCE","REQ_SET_SELECTION_SINCE","Request","Selection","SetSelection","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone_into","destroy","eq","equivalent","fmt","fmt","fmt","from","from","from","from","from_raw","from_raw","from_raw_c","from_raw_c","gtk_primary_selection_device_events","gtk_primary_selection_device_interface","gtk_primary_selection_device_requests","into","into","into","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","set_selection","since","since","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","id","offer","serial","source","CreateSource","Destroy","Event","GetDevice","GtkPrimarySelectionDeviceManager","REQ_CREATE_SOURCE_SINCE","REQ_DESTROY_SINCE","REQ_GET_DEVICE_SINCE","Request","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone_into","create_source","destroy","eq","equivalent","fmt","fmt","fmt","from","from","from","from","from_raw","from_raw","from_raw_c","from_raw_c","get_device","gtk_primary_selection_device_manager_interface","gtk_primary_selection_device_manager_requests","into","into","into","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","since","since","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","seat","Destroy","EVT_OFFER_SINCE","Event","GtkPrimarySelectionOffer","Offer","REQ_DESTROY_SINCE","REQ_RECEIVE_SINCE","Receive","Request","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone_into","destroy","eq","equivalent","fmt","fmt","fmt","from","from","from","from","from_raw","from_raw","from_raw_c","from_raw_c","gtk_primary_selection_offer_events","gtk_primary_selection_offer_interface","gtk_primary_selection_offer_requests","into","into","into","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","receive","since","since","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","mime_type","fd","mime_type","Cancelled","Destroy","EVT_CANCELLED_SINCE","EVT_SEND_SINCE","Event","GtkPrimarySelectionSource","Offer","REQ_DESTROY_SINCE","REQ_OFFER_SINCE","Request","Send","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone_into","destroy","eq","equivalent","fmt","fmt","fmt","from","from","from","from","from_raw","from_raw","from_raw_c","from_raw_c","gtk_primary_selection_source_events","gtk_primary_selection_source_interface","gtk_primary_selection_source_requests","into","into","into","into_raw","into_raw","is_destructor","is_destructor","offer","opcode","opcode","since","since","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","fd","mime_type","mime_type","client","org_kde_kwin_server_decoration","org_kde_kwin_server_decoration_manager","Client","EVT_MODE_SINCE","Event","Mode","Mode","None","OrgKdeKwinServerDecoration","REQ_RELEASE_SINCE","REQ_REQUEST_MODE_SINCE","Release","Request","RequestMode","Server","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone","clone_into","clone_into","eq","eq","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from_raw","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","org_kde_kwin_server_decoration_events","org_kde_kwin_server_decoration_interface","org_kde_kwin_server_decoration_requests","release","request_mode","since","since","to_owned","to_owned","to_raw","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","mode","mode","Client","Create","DefaultMode","EVT_DEFAULT_MODE_SINCE","Event","Mode","None","OrgKdeKwinServerDecorationManager","REQ_CREATE_SINCE","Request","Server","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone","clone_into","clone_into","create","eq","eq","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from_raw","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","org_kde_kwin_server_decoration_manager_events","org_kde_kwin_server_decoration_manager_interface","org_kde_kwin_server_decoration_manager_requests","since","since","to_owned","to_owned","to_raw","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","mode","surface","client","zwp_input_method_keyboard_grab_v2","zwp_input_method_manager_v2","zwp_input_method_v2","zwp_input_popup_surface_v2","EVT_KEYMAP_SINCE","EVT_KEY_SINCE","EVT_MODIFIERS_SINCE","EVT_REPEAT_INFO_SINCE","Event","Key","Keymap","Modifiers","REQ_RELEASE_SINCE","Release","RepeatInfo","Request","ZwpInputMethodKeyboardGrabV2","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone_into","eq","equivalent","fmt","fmt","fmt","from","from","from","from","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","release","since","since","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","zwp_input_method_keyboard_grab_v2_events","zwp_input_method_keyboard_grab_v2_interface","zwp_input_method_keyboard_grab_v2_requests","delay","fd","format","group","key","mods_depressed","mods_latched","mods_locked","rate","serial","serial","size","state","time","Destroy","Event","GetInputMethod","REQ_DESTROY_SINCE","REQ_GET_INPUT_METHOD_SINCE","Request","ZwpInputMethodManagerV2","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone_into","destroy","eq","equivalent","fmt","fmt","fmt","from","from","from","from","from_raw","from_raw","from_raw_c","from_raw_c","get_input_method","into","into","into","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","since","since","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","zwp_input_method_manager_v2_interface","zwp_input_method_manager_v2_requests","seat","Activate","Commit","CommitString","ContentType","Deactivate","DeleteSurroundingText","Destroy","Done","EVT_ACTIVATE_SINCE","EVT_CONTENT_TYPE_SINCE","EVT_DEACTIVATE_SINCE","EVT_DONE_SINCE","EVT_SURROUNDING_TEXT_SINCE","EVT_TEXT_CHANGE_CAUSE_SINCE","EVT_UNAVAILABLE_SINCE","Event","GetInputPopupSurface","GrabKeyboard","REQ_COMMIT_SINCE","REQ_COMMIT_STRING_SINCE","REQ_DELETE_SURROUNDING_TEXT_SINCE","REQ_DESTROY_SINCE","REQ_GET_INPUT_POPUP_SURFACE_SINCE","REQ_GRAB_KEYBOARD_SINCE","REQ_SET_PREEDIT_STRING_SINCE","Request","SetPreeditString","SurroundingText","TextChangeCause","Unavailable","ZwpInputMethodV2","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone_into","commit","commit_string","delete_surrounding_text","destroy","eq","equivalent","fmt","fmt","fmt","from","from","from","from","from_raw","from_raw","from_raw_c","from_raw_c","get_input_popup_surface","grab_keyboard","into","into","into","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","set_preedit_string","since","since","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","zwp_input_method_v2_events","zwp_input_method_v2_interface","zwp_input_method_v2_requests","anchor","cause","cursor","hint","purpose","text","after_length","before_length","cursor_begin","cursor_end","serial","surface","text","text","Destroy","EVT_TEXT_INPUT_RECTANGLE_SINCE","Event","REQ_DESTROY_SINCE","Request","TextInputRectangle","ZwpInputPopupSurfaceV2","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone_into","destroy","eq","equivalent","fmt","fmt","fmt","from","from","from","from","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","since","since","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","zwp_input_popup_surface_v2_events","zwp_input_popup_surface_v2_interface","zwp_input_popup_surface_v2_requests","height","width","x","y","client","wp_presentation","wp_presentation_feedback","ClockId","Destroy","EVT_CLOCK_ID_SINCE","Error","Event","Feedback","InvalidFlag","InvalidTimestamp","REQ_DESTROY_SINCE","REQ_FEEDBACK_SINCE","Request","WpPresentation","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone","clone_into","clone_into","destroy","eq","eq","equivalent","feedback","fmt","fmt","fmt","fmt","from","from","from","from","from","from_raw","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","since","since","to_owned","to_owned","to_raw","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","wp_presentation_events","wp_presentation_interface","wp_presentation_requests","clk_id","surface","Discarded","EVT_DISCARDED_SINCE","EVT_PRESENTED_SINCE","EVT_SYNC_OUTPUT_SINCE","Event","HwClock","HwCompletion","Kind","Presented","Request","SyncOutput","Vsync","WpPresentationFeedback","ZeroCopy","all","as_raw_c_in","as_raw_c_in","as_ref","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone","clone_into","clone_into","cmp","complement","contains","difference","empty","eq","eq","equivalent","equivalent","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","from_raw","from_raw","from_raw","from_raw_c","from_raw_c","hash","insert","intersection","intersects","into","into","into","into","into_raw","into_raw","is_all","is_destructor","is_destructor","is_empty","not","opcode","opcode","partial_cmp","remove","set","since","since","sub","sub_assign","symmetric_difference","to_owned","to_owned","to_raw","toggle","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","union","wp_presentation_feedback_events","wp_presentation_feedback_interface","flags","output","refresh","seq_hi","seq_lo","tv_nsec","tv_sec_hi","tv_sec_lo","xdg_activation","v1","client","xdg_activation_token_v1","xdg_activation_v1","AlreadyUsed","Commit","Destroy","Done","EVT_DONE_SINCE","Error","Event","REQ_COMMIT_SINCE","REQ_DESTROY_SINCE","REQ_SET_APP_ID_SINCE","REQ_SET_SERIAL_SINCE","REQ_SET_SURFACE_SINCE","Request","SetAppId","SetSerial","SetSurface","XdgActivationTokenV1","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone","clone_into","clone_into","commit","destroy","eq","eq","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from_raw","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","set_app_id","set_serial","set_surface","since","since","to_owned","to_owned","to_raw","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","xdg_activation_token_v1_events","xdg_activation_token_v1_interface","xdg_activation_token_v1_requests","token","app_id","seat","serial","surface","Activate","Destroy","Event","GetActivationToken","REQ_ACTIVATE_SINCE","REQ_DESTROY_SINCE","REQ_GET_ACTIVATION_TOKEN_SINCE","Request","XdgActivationV1","activate","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone_into","destroy","eq","equivalent","fmt","fmt","fmt","from","from","from","from","from_raw","from_raw","from_raw_c","from_raw_c","get_activation_token","into","into","into","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","since","since","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","xdg_activation_v1_interface","xdg_activation_v1_requests","surface","token","fullscreen_shell","idle_inhibit","input_method","input_timestamps","keyboard_shortcuts_inhibit","linux_dmabuf","linux_explicit_synchronization","pointer_constraints","pointer_gestures","primary_selection","relative_pointer","tablet","text_input","xdg_decoration","xdg_foreign","xdg_output","xdg_shell","xwayland_keyboard_grab","v1","client","zwp_fullscreen_shell_mode_feedback_v1","zwp_fullscreen_shell_v1","EVT_MODE_FAILED_SINCE","EVT_MODE_SUCCESSFUL_SINCE","EVT_PRESENT_CANCELLED_SINCE","Event","ModeFailed","ModeSuccessful","PresentCancelled","Request","ZwpFullscreenShellModeFeedbackV1","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone_into","eq","equivalent","fmt","fmt","fmt","from","from","from","from","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","since","since","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","zwp_fullscreen_shell_mode_feedback_v1_events","zwp_fullscreen_shell_mode_feedback_v1_interface","ArbitraryModes","Capability","Capability","Center","CursorPlane","Default","EVT_CAPABILITY_SINCE","Error","Event","InvalidMethod","PresentMethod","PresentSurface","PresentSurfaceForMode","REQ_PRESENT_SURFACE_FOR_MODE_SINCE","REQ_PRESENT_SURFACE_SINCE","REQ_RELEASE_SINCE","Release","Request","Role","Stretch","Zoom","ZoomCrop","ZwpFullscreenShellV1","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","eq","eq","eq","eq","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_raw","from_raw","from_raw","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into","into","into","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","present_surface","present_surface_for_mode","release","since","since","to_owned","to_owned","to_owned","to_owned","to_raw","to_raw","to_raw","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","zwp_fullscreen_shell_v1_events","zwp_fullscreen_shell_v1_interface","zwp_fullscreen_shell_v1_requests","capability","framerate","method","output","output","surface","surface","v1","client","zwp_idle_inhibit_manager_v1","zwp_idle_inhibitor_v1","CreateInhibitor","Destroy","Event","REQ_CREATE_INHIBITOR_SINCE","REQ_DESTROY_SINCE","Request","ZwpIdleInhibitManagerV1","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone_into","create_inhibitor","destroy","eq","equivalent","fmt","fmt","fmt","from","from","from","from","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","since","since","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","zwp_idle_inhibit_manager_v1_interface","zwp_idle_inhibit_manager_v1_requests","surface","Destroy","Event","REQ_DESTROY_SINCE","Request","ZwpIdleInhibitorV1","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone_into","destroy","eq","equivalent","fmt","fmt","fmt","from","from","from","from","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","since","since","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","zwp_idle_inhibitor_v1_interface","zwp_idle_inhibitor_v1_requests","v1","client","zwp_input_method_context_v1","zwp_input_method_v1","zwp_input_panel_surface_v1","zwp_input_panel_v1","CommitState","CommitString","ContentType","CursorPosition","DeleteSurroundingText","Destroy","EVT_COMMIT_STATE_SINCE","EVT_CONTENT_TYPE_SINCE","EVT_INVOKE_ACTION_SINCE","EVT_PREFERRED_LANGUAGE_SINCE","EVT_RESET_SINCE","EVT_SURROUNDING_TEXT_SINCE","Event","GrabKeyboard","InvokeAction","Key","Keysym","Language","Modifiers","ModifiersMap","PreeditCursor","PreeditString","PreeditStyling","PreferredLanguage","REQ_COMMIT_STRING_SINCE","REQ_CURSOR_POSITION_SINCE","REQ_DELETE_SURROUNDING_TEXT_SINCE","REQ_DESTROY_SINCE","REQ_GRAB_KEYBOARD_SINCE","REQ_KEYSYM_SINCE","REQ_KEY_SINCE","REQ_LANGUAGE_SINCE","REQ_MODIFIERS_MAP_SINCE","REQ_MODIFIERS_SINCE","REQ_PREEDIT_CURSOR_SINCE","REQ_PREEDIT_STRING_SINCE","REQ_PREEDIT_STYLING_SINCE","REQ_TEXT_DIRECTION_SINCE","Request","Reset","SurroundingText","TextDirection","ZwpInputMethodContextV1","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone_into","commit_string","cursor_position","delete_surrounding_text","destroy","eq","equivalent","fmt","fmt","fmt","from","from","from","from","from_raw","from_raw","from_raw_c","from_raw_c","grab_keyboard","into","into","into","into_raw","into_raw","is_destructor","is_destructor","key","keysym","language","modifiers","modifiers_map","opcode","opcode","preedit_cursor","preedit_string","preedit_styling","since","since","text_direction","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","zwp_input_method_context_v1_events","zwp_input_method_context_v1_interface","zwp_input_method_context_v1_requests","anchor","button","cursor","hint","index","language","purpose","serial","text","anchor","commit","direction","group","index","index","index","index","key","language","length","length","map","modifiers","mods_depressed","mods_latched","mods_locked","serial","serial","serial","serial","serial","serial","serial","state","state","style","sym","text","text","time","time","Activate","Deactivate","EVT_ACTIVATE_SINCE","EVT_DEACTIVATE_SINCE","Event","Request","ZwpInputMethodV1","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone_into","eq","equivalent","fmt","fmt","fmt","from","from","from","from","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","since","since","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","zwp_input_method_v1_events","zwp_input_method_v1_interface","context","id","CenterBottom","Event","Position","REQ_SET_OVERLAY_PANEL_SINCE","REQ_SET_TOPLEVEL_SINCE","Request","SetOverlayPanel","SetToplevel","ZwpInputPanelSurfaceV1","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone","clone_into","clone_into","eq","eq","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from_raw","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","set_overlay_panel","set_toplevel","since","since","to_owned","to_owned","to_raw","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","zwp_input_panel_surface_v1_interface","zwp_input_panel_surface_v1_requests","output","position","Event","GetInputPanelSurface","REQ_GET_INPUT_PANEL_SURFACE_SINCE","Request","ZwpInputPanelV1","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone_into","eq","equivalent","fmt","fmt","fmt","from","from","from","from","from_raw","from_raw","from_raw_c","from_raw_c","get_input_panel_surface","into","into","into","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","since","since","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","zwp_input_panel_v1_interface","zwp_input_panel_v1_requests","surface","v1","client","zwp_input_timestamps_manager_v1","zwp_input_timestamps_v1","Destroy","Event","GetKeyboardTimestamps","GetPointerTimestamps","GetTouchTimestamps","REQ_DESTROY_SINCE","REQ_GET_KEYBOARD_TIMESTAMPS_SINCE","REQ_GET_POINTER_TIMESTAMPS_SINCE","REQ_GET_TOUCH_TIMESTAMPS_SINCE","Request","ZwpInputTimestampsManagerV1","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone_into","destroy","eq","equivalent","fmt","fmt","fmt","from","from","from","from","from_raw","from_raw","from_raw_c","from_raw_c","get_keyboard_timestamps","get_pointer_timestamps","get_touch_timestamps","into","into","into","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","since","since","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","zwp_input_timestamps_manager_v1_interface","zwp_input_timestamps_manager_v1_requests","keyboard","pointer","touch","Destroy","EVT_TIMESTAMP_SINCE","Event","REQ_DESTROY_SINCE","Request","Timestamp","ZwpInputTimestampsV1","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone_into","destroy","eq","equivalent","fmt","fmt","fmt","from","from","from","from","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","since","since","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","zwp_input_timestamps_v1_events","zwp_input_timestamps_v1_interface","zwp_input_timestamps_v1_requests","tv_nsec","tv_sec_hi","tv_sec_lo","v1","client","zwp_keyboard_shortcuts_inhibit_manager_v1","zwp_keyboard_shortcuts_inhibitor_v1","AlreadyInhibited","Destroy","Error","Event","InhibitShortcuts","REQ_DESTROY_SINCE","REQ_INHIBIT_SHORTCUTS_SINCE","Request","ZwpKeyboardShortcutsInhibitManagerV1","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone","clone_into","clone_into","destroy","eq","eq","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from_raw","from_raw","from_raw","from_raw_c","from_raw_c","inhibit_shortcuts","into","into","into","into","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","since","since","to_owned","to_owned","to_raw","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","zwp_keyboard_shortcuts_inhibit_manager_v1_interface","zwp_keyboard_shortcuts_inhibit_manager_v1_requests","seat","surface","Active","Destroy","EVT_ACTIVE_SINCE","EVT_INACTIVE_SINCE","Event","Inactive","REQ_DESTROY_SINCE","Request","ZwpKeyboardShortcutsInhibitorV1","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone_into","destroy","eq","equivalent","fmt","fmt","fmt","from","from","from","from","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","since","since","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","zwp_keyboard_shortcuts_inhibitor_v1_events","zwp_keyboard_shortcuts_inhibitor_v1_interface","zwp_keyboard_shortcuts_inhibitor_v1_requests","v1","client","zwp_linux_buffer_params_v1","zwp_linux_dmabuf_v1","Add","AlreadyUsed","BottomFirst","Create","CreateImmed","Created","Destroy","EVT_CREATED_SINCE","EVT_FAILED_SINCE","Error","Event","Failed","Flags","Incomplete","Interlaced","InvalidDimensions","InvalidFormat","InvalidWlBuffer","OutOfBounds","PlaneIdx","PlaneSet","REQ_ADD_SINCE","REQ_CREATE_IMMED_SINCE","REQ_CREATE_SINCE","REQ_DESTROY_SINCE","Request","YInvert","ZwpLinuxBufferParamsV1","add","all","as_raw_c_in","as_raw_c_in","as_ref","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone","clone","clone_into","clone_into","clone_into","cmp","complement","contains","create","create_immed","destroy","difference","empty","eq","eq","eq","equivalent","equivalent","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","from_raw","from_raw","from_raw","from_raw","from_raw_c","from_raw_c","hash","insert","intersection","intersects","into","into","into","into","into","into_raw","into_raw","is_all","is_destructor","is_destructor","is_empty","not","opcode","opcode","partial_cmp","remove","set","since","since","sub","sub_assign","symmetric_difference","to_owned","to_owned","to_owned","to_raw","to_raw","toggle","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","union","zwp_linux_buffer_params_v1_events","zwp_linux_buffer_params_v1_interface","zwp_linux_buffer_params_v1_requests","buffer","fd","flags","flags","format","format","height","height","modifier_hi","modifier_lo","offset","plane_idx","stride","width","width","CreateParams","Destroy","EVT_FORMAT_SINCE","EVT_MODIFIER_SINCE","Event","Format","Modifier","REQ_CREATE_PARAMS_SINCE","REQ_DESTROY_SINCE","Request","ZwpLinuxDmabufV1","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone_into","create_params","destroy","eq","equivalent","fmt","fmt","fmt","from","from","from","from","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","since","since","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","zwp_linux_dmabuf_v1_events","zwp_linux_dmabuf_v1_interface","zwp_linux_dmabuf_v1_requests","format","format","modifier_hi","modifier_lo","v1","client","zwp_linux_buffer_release_v1","zwp_linux_explicit_synchronization_v1","zwp_linux_surface_synchronization_v1","EVT_FENCED_RELEASE_SINCE","EVT_IMMEDIATE_RELEASE_SINCE","Event","FencedRelease","ImmediateRelease","Request","ZwpLinuxBufferReleaseV1","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone_into","eq","equivalent","fmt","fmt","fmt","from","from","from","from","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","since","since","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","zwp_linux_buffer_release_v1_events","zwp_linux_buffer_release_v1_interface","fence","Destroy","Error","Event","GetSynchronization","REQ_DESTROY_SINCE","REQ_GET_SYNCHRONIZATION_SINCE","Request","SynchronizationExists","ZwpLinuxExplicitSynchronizationV1","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone","clone_into","clone_into","destroy","eq","eq","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from_raw","from_raw","from_raw","from_raw_c","from_raw_c","get_synchronization","into","into","into","into","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","since","since","to_owned","to_owned","to_raw","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","zwp_linux_explicit_synchronization_v1_interface","zwp_linux_explicit_synchronization_v1_requests","surface","Destroy","DuplicateFence","DuplicateRelease","Error","Event","GetRelease","InvalidFence","NoBuffer","NoSurface","REQ_DESTROY_SINCE","REQ_GET_RELEASE_SINCE","REQ_SET_ACQUIRE_FENCE_SINCE","Request","SetAcquireFence","UnsupportedBuffer","ZwpLinuxSurfaceSynchronizationV1","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone","clone_into","clone_into","destroy","eq","eq","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from_raw","from_raw","from_raw","from_raw_c","from_raw_c","get_release","into","into","into","into","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","set_acquire_fence","since","since","to_owned","to_owned","to_raw","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","zwp_linux_surface_synchronization_v1_interface","zwp_linux_surface_synchronization_v1_requests","fd","v1","client","zwp_confined_pointer_v1","zwp_locked_pointer_v1","zwp_pointer_constraints_v1","Confined","Destroy","EVT_CONFINED_SINCE","EVT_UNCONFINED_SINCE","Event","REQ_DESTROY_SINCE","REQ_SET_REGION_SINCE","Request","SetRegion","Unconfined","ZwpConfinedPointerV1","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone_into","destroy","eq","equivalent","fmt","fmt","fmt","from","from","from","from","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","set_region","since","since","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","zwp_confined_pointer_v1_events","zwp_confined_pointer_v1_interface","zwp_confined_pointer_v1_requests","region","Destroy","EVT_LOCKED_SINCE","EVT_UNLOCKED_SINCE","Event","Locked","REQ_DESTROY_SINCE","REQ_SET_CURSOR_POSITION_HINT_SINCE","REQ_SET_REGION_SINCE","Request","SetCursorPositionHint","SetRegion","Unlocked","ZwpLockedPointerV1","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone_into","destroy","eq","equivalent","fmt","fmt","fmt","from","from","from","from","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","set_cursor_position_hint","set_region","since","since","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","zwp_locked_pointer_v1_events","zwp_locked_pointer_v1_interface","zwp_locked_pointer_v1_requests","region","surface_x","surface_y","AlreadyConstrained","ConfinePointer","Destroy","Error","Event","Lifetime","LockPointer","Oneshot","Persistent","REQ_CONFINE_POINTER_SINCE","REQ_DESTROY_SINCE","REQ_LOCK_POINTER_SINCE","Request","ZwpPointerConstraintsV1","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone","clone","clone_into","clone_into","clone_into","confine_pointer","destroy","eq","eq","eq","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_raw","from_raw","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into","into","into_raw","into_raw","is_destructor","is_destructor","lock_pointer","opcode","opcode","since","since","to_owned","to_owned","to_owned","to_raw","to_raw","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","zwp_pointer_constraints_v1_interface","zwp_pointer_constraints_v1_requests","lifetime","lifetime","pointer","pointer","region","region","surface","surface","v1","client","zwp_pointer_gesture_pinch_v1","zwp_pointer_gesture_swipe_v1","zwp_pointer_gestures_v1","Begin","Destroy","EVT_BEGIN_SINCE","EVT_END_SINCE","EVT_UPDATE_SINCE","End","Event","REQ_DESTROY_SINCE","Request","Update","ZwpPointerGesturePinchV1","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone_into","destroy","eq","equivalent","fmt","fmt","fmt","from","from","from","from","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","since","since","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","zwp_pointer_gesture_pinch_v1_events","zwp_pointer_gesture_pinch_v1_interface","zwp_pointer_gesture_pinch_v1_requests","cancelled","dx","dy","fingers","rotation","scale","serial","serial","surface","time","time","time","Begin","Destroy","EVT_BEGIN_SINCE","EVT_END_SINCE","EVT_UPDATE_SINCE","End","Event","REQ_DESTROY_SINCE","Request","Update","ZwpPointerGestureSwipeV1","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone_into","destroy","eq","equivalent","fmt","fmt","fmt","from","from","from","from","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","since","since","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","zwp_pointer_gesture_swipe_v1_events","zwp_pointer_gesture_swipe_v1_interface","zwp_pointer_gesture_swipe_v1_requests","cancelled","dx","dy","fingers","serial","serial","surface","time","time","time","Event","GetPinchGesture","GetSwipeGesture","REQ_GET_PINCH_GESTURE_SINCE","REQ_GET_SWIPE_GESTURE_SINCE","REQ_RELEASE_SINCE","Release","Request","ZwpPointerGesturesV1","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone_into","eq","equivalent","fmt","fmt","fmt","from","from","from","from","from_raw","from_raw","from_raw_c","from_raw_c","get_pinch_gesture","get_swipe_gesture","into","into","into","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","release","since","since","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","zwp_pointer_gestures_v1_interface","zwp_pointer_gestures_v1_requests","pointer","pointer","v1","client","zwp_primary_selection_device_manager_v1","zwp_primary_selection_device_v1","zwp_primary_selection_offer_v1","zwp_primary_selection_source_v1","CreateSource","Destroy","Event","GetDevice","REQ_CREATE_SOURCE_SINCE","REQ_DESTROY_SINCE","REQ_GET_DEVICE_SINCE","Request","ZwpPrimarySelectionDeviceManagerV1","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone_into","create_source","destroy","eq","equivalent","fmt","fmt","fmt","from","from","from","from","from_raw","from_raw","from_raw_c","from_raw_c","get_device","into","into","into","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","since","since","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","zwp_primary_selection_device_manager_v1_interface","zwp_primary_selection_device_manager_v1_requests","seat","DataOffer","Destroy","EVT_DATA_OFFER_SINCE","EVT_SELECTION_SINCE","Event","REQ_DESTROY_SINCE","REQ_SET_SELECTION_SINCE","Request","Selection","SetSelection","ZwpPrimarySelectionDeviceV1","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone_into","destroy","eq","equivalent","fmt","fmt","fmt","from","from","from","from","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","set_selection","since","since","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","zwp_primary_selection_device_v1_events","zwp_primary_selection_device_v1_interface","zwp_primary_selection_device_v1_requests","id","offer","serial","source","Destroy","EVT_OFFER_SINCE","Event","Offer","REQ_DESTROY_SINCE","REQ_RECEIVE_SINCE","Receive","Request","ZwpPrimarySelectionOfferV1","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone_into","destroy","eq","equivalent","fmt","fmt","fmt","from","from","from","from","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","receive","since","since","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","zwp_primary_selection_offer_v1_events","zwp_primary_selection_offer_v1_interface","zwp_primary_selection_offer_v1_requests","mime_type","fd","mime_type","Cancelled","Destroy","EVT_CANCELLED_SINCE","EVT_SEND_SINCE","Event","Offer","REQ_DESTROY_SINCE","REQ_OFFER_SINCE","Request","Send","ZwpPrimarySelectionSourceV1","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone_into","destroy","eq","equivalent","fmt","fmt","fmt","from","from","from","from","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into_raw","into_raw","is_destructor","is_destructor","offer","opcode","opcode","since","since","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","zwp_primary_selection_source_v1_events","zwp_primary_selection_source_v1_interface","zwp_primary_selection_source_v1_requests","fd","mime_type","mime_type","v1","client","zwp_relative_pointer_manager_v1","zwp_relative_pointer_v1","Destroy","Event","GetRelativePointer","REQ_DESTROY_SINCE","REQ_GET_RELATIVE_POINTER_SINCE","Request","ZwpRelativePointerManagerV1","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone_into","destroy","eq","equivalent","fmt","fmt","fmt","from","from","from","from","from_raw","from_raw","from_raw_c","from_raw_c","get_relative_pointer","into","into","into","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","since","since","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","zwp_relative_pointer_manager_v1_interface","zwp_relative_pointer_manager_v1_requests","pointer","Destroy","EVT_RELATIVE_MOTION_SINCE","Event","REQ_DESTROY_SINCE","RelativeMotion","Request","ZwpRelativePointerV1","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone_into","destroy","eq","equivalent","fmt","fmt","fmt","from","from","from","from","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","since","since","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","zwp_relative_pointer_v1_events","zwp_relative_pointer_v1_interface","zwp_relative_pointer_v1_requests","dx","dx_unaccel","dy","dy_unaccel","utime_hi","utime_lo","v1","v2","client","zwp_tablet_manager_v1","zwp_tablet_seat_v1","zwp_tablet_tool_v1","zwp_tablet_v1","Destroy","Event","GetTabletSeat","REQ_DESTROY_SINCE","REQ_GET_TABLET_SEAT_SINCE","Request","ZwpTabletManagerV1","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone_into","destroy","eq","equivalent","fmt","fmt","fmt","from","from","from","from","from_raw","from_raw","from_raw_c","from_raw_c","get_tablet_seat","into","into","into","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","since","since","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","zwp_tablet_manager_v1_interface","zwp_tablet_manager_v1_requests","seat","Destroy","EVT_TABLET_ADDED_SINCE","EVT_TOOL_ADDED_SINCE","Event","REQ_DESTROY_SINCE","Request","TabletAdded","ToolAdded","ZwpTabletSeatV1","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone_into","destroy","eq","equivalent","fmt","fmt","fmt","from","from","from","from","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","since","since","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","zwp_tablet_seat_v1_events","zwp_tablet_seat_v1_interface","zwp_tablet_seat_v1_requests","id","id","Airbrush","Brush","Button","ButtonState","Capability","Capability","Destroy","Distance","Distance","Done","Down","EVT_BUTTON_SINCE","EVT_CAPABILITY_SINCE","EVT_DISTANCE_SINCE","EVT_DONE_SINCE","EVT_DOWN_SINCE","EVT_FRAME_SINCE","EVT_HARDWARE_ID_WACOM_SINCE","EVT_HARDWARE_SERIAL_SINCE","EVT_MOTION_SINCE","EVT_PRESSURE_SINCE","EVT_PROXIMITY_IN_SINCE","EVT_PROXIMITY_OUT_SINCE","EVT_REMOVED_SINCE","EVT_ROTATION_SINCE","EVT_SLIDER_SINCE","EVT_TILT_SINCE","EVT_TYPE_SINCE","EVT_UP_SINCE","EVT_WHEEL_SINCE","Eraser","Error","Event","Finger","Frame","HardwareIdWacom","HardwareSerial","Lens","Motion","Mouse","Pen","Pencil","Pressed","Pressure","Pressure","ProximityIn","ProximityOut","REQ_DESTROY_SINCE","REQ_SET_CURSOR_SINCE","Released","Removed","Request","Role","Rotation","Rotation","SetCursor","Slider","Slider","Tilt","Tilt","Type","Type","Up","Wheel","Wheel","ZwpTabletToolV1","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","destroy","eq","eq","eq","eq","eq","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_raw","from_raw","from_raw","from_raw","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into","into","into","into","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","set_cursor","since","since","to_owned","to_owned","to_owned","to_owned","to_owned","to_raw","to_raw","to_raw","to_raw","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","zwp_tablet_tool_v1_events","zwp_tablet_tool_v1_interface","zwp_tablet_tool_v1_requests","button","capability","clicks","degrees","degrees","distance","hardware_id_hi","hardware_id_lo","hardware_serial_hi","hardware_serial_lo","position","pressure","serial","serial","serial","state","surface","tablet","tilt_x","tilt_y","time","tool_type","x","y","hotspot_x","hotspot_y","serial","surface","Destroy","Done","EVT_DONE_SINCE","EVT_ID_SINCE","EVT_NAME_SINCE","EVT_PATH_SINCE","EVT_REMOVED_SINCE","Event","Id","Name","Path","REQ_DESTROY_SINCE","Removed","Request","ZwpTabletV1","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone_into","destroy","eq","equivalent","fmt","fmt","fmt","from","from","from","from","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","since","since","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","zwp_tablet_v1_events","zwp_tablet_v1_interface","zwp_tablet_v1_requests","name","path","pid","vid","client","zwp_tablet_manager_v2","zwp_tablet_pad_group_v2","zwp_tablet_pad_ring_v2","zwp_tablet_pad_strip_v2","zwp_tablet_pad_v2","zwp_tablet_seat_v2","zwp_tablet_tool_v2","zwp_tablet_v2","Destroy","Event","GetTabletSeat","REQ_DESTROY_SINCE","REQ_GET_TABLET_SEAT_SINCE","Request","ZwpTabletManagerV2","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone_into","destroy","eq","equivalent","fmt","fmt","fmt","from","from","from","from","from_raw","from_raw","from_raw_c","from_raw_c","get_tablet_seat","into","into","into","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","since","since","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","zwp_tablet_manager_v2_interface","zwp_tablet_manager_v2_requests","seat","Buttons","Destroy","Done","EVT_BUTTONS_SINCE","EVT_DONE_SINCE","EVT_MODES_SINCE","EVT_MODE_SWITCH_SINCE","EVT_RING_SINCE","EVT_STRIP_SINCE","Event","ModeSwitch","Modes","REQ_DESTROY_SINCE","Request","Ring","Strip","ZwpTabletPadGroupV2","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone_into","destroy","eq","equivalent","fmt","fmt","fmt","from","from","from","from","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","since","since","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","zwp_tablet_pad_group_v2_events","zwp_tablet_pad_group_v2_interface","zwp_tablet_pad_group_v2_requests","buttons","mode","modes","ring","serial","strip","time","Angle","Destroy","EVT_ANGLE_SINCE","EVT_FRAME_SINCE","EVT_SOURCE_SINCE","EVT_STOP_SINCE","Event","Finger","Frame","REQ_DESTROY_SINCE","REQ_SET_FEEDBACK_SINCE","Request","SetFeedback","Source","Source","Stop","ZwpTabletPadRingV2","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone","clone_into","clone_into","destroy","eq","eq","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from_raw","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","set_feedback","since","since","to_owned","to_owned","to_raw","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","zwp_tablet_pad_ring_v2_events","zwp_tablet_pad_ring_v2_interface","zwp_tablet_pad_ring_v2_requests","degrees","source","time","description","serial","Destroy","EVT_FRAME_SINCE","EVT_POSITION_SINCE","EVT_SOURCE_SINCE","EVT_STOP_SINCE","Event","Finger","Frame","Position","REQ_DESTROY_SINCE","REQ_SET_FEEDBACK_SINCE","Request","SetFeedback","Source","Source","Stop","ZwpTabletPadStripV2","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone","clone_into","clone_into","destroy","eq","eq","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from_raw","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","set_feedback","since","since","to_owned","to_owned","to_raw","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","zwp_tablet_pad_strip_v2_events","zwp_tablet_pad_strip_v2_interface","zwp_tablet_pad_strip_v2_requests","position","source","time","description","serial","Button","ButtonState","Buttons","Destroy","Done","EVT_BUTTONS_SINCE","EVT_BUTTON_SINCE","EVT_DONE_SINCE","EVT_ENTER_SINCE","EVT_GROUP_SINCE","EVT_LEAVE_SINCE","EVT_PATH_SINCE","EVT_REMOVED_SINCE","Enter","Event","Group","Leave","Path","Pressed","REQ_DESTROY_SINCE","REQ_SET_FEEDBACK_SINCE","Released","Removed","Request","SetFeedback","ZwpTabletPadV2","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone","clone_into","clone_into","destroy","eq","eq","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from_raw","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","set_feedback","since","since","to_owned","to_owned","to_raw","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","zwp_tablet_pad_v2_events","zwp_tablet_pad_v2_interface","zwp_tablet_pad_v2_requests","button","buttons","pad_group","path","serial","serial","state","surface","surface","tablet","time","button","description","serial","Destroy","EVT_PAD_ADDED_SINCE","EVT_TABLET_ADDED_SINCE","EVT_TOOL_ADDED_SINCE","Event","PadAdded","REQ_DESTROY_SINCE","Request","TabletAdded","ToolAdded","ZwpTabletSeatV2","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone_into","destroy","eq","equivalent","fmt","fmt","fmt","from","from","from","from","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","since","since","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","zwp_tablet_seat_v2_events","zwp_tablet_seat_v2_interface","zwp_tablet_seat_v2_requests","id","id","id","Airbrush","Brush","Button","ButtonState","Capability","Capability","Destroy","Distance","Distance","Done","Down","EVT_BUTTON_SINCE","EVT_CAPABILITY_SINCE","EVT_DISTANCE_SINCE","EVT_DONE_SINCE","EVT_DOWN_SINCE","EVT_FRAME_SINCE","EVT_HARDWARE_ID_WACOM_SINCE","EVT_HARDWARE_SERIAL_SINCE","EVT_MOTION_SINCE","EVT_PRESSURE_SINCE","EVT_PROXIMITY_IN_SINCE","EVT_PROXIMITY_OUT_SINCE","EVT_REMOVED_SINCE","EVT_ROTATION_SINCE","EVT_SLIDER_SINCE","EVT_TILT_SINCE","EVT_TYPE_SINCE","EVT_UP_SINCE","EVT_WHEEL_SINCE","Eraser","Error","Event","Finger","Frame","HardwareIdWacom","HardwareSerial","Lens","Motion","Mouse","Pen","Pencil","Pressed","Pressure","Pressure","ProximityIn","ProximityOut","REQ_DESTROY_SINCE","REQ_SET_CURSOR_SINCE","Released","Removed","Request","Role","Rotation","Rotation","SetCursor","Slider","Slider","Tilt","Tilt","Type","Type","Up","Wheel","Wheel","ZwpTabletToolV2","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","destroy","eq","eq","eq","eq","eq","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_raw","from_raw","from_raw","from_raw","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into","into","into","into","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","set_cursor","since","since","to_owned","to_owned","to_owned","to_owned","to_owned","to_raw","to_raw","to_raw","to_raw","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","zwp_tablet_tool_v2_events","zwp_tablet_tool_v2_interface","zwp_tablet_tool_v2_requests","button","capability","clicks","degrees","degrees","distance","hardware_id_hi","hardware_id_lo","hardware_serial_hi","hardware_serial_lo","position","pressure","serial","serial","serial","state","surface","tablet","tilt_x","tilt_y","time","tool_type","x","y","hotspot_x","hotspot_y","serial","surface","Destroy","Done","EVT_DONE_SINCE","EVT_ID_SINCE","EVT_NAME_SINCE","EVT_PATH_SINCE","EVT_REMOVED_SINCE","Event","Id","Name","Path","REQ_DESTROY_SINCE","Removed","Request","ZwpTabletV2","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone_into","destroy","eq","equivalent","fmt","fmt","fmt","from","from","from","from","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","since","since","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","zwp_tablet_v2_events","zwp_tablet_v2_interface","zwp_tablet_v2_requests","name","path","pid","vid","v1","v3","client","zwp_text_input_manager_v1","zwp_text_input_v1","CreateTextInput","Event","REQ_CREATE_TEXT_INPUT_SINCE","Request","ZwpTextInputManagerV1","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone_into","create_text_input","eq","equivalent","fmt","fmt","fmt","from","from","from","from","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","since","since","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","zwp_text_input_manager_v1_interface","zwp_text_input_manager_v1_requests","Activate","Active","Alpha","Auto","AutoCapitalization","AutoCompletion","AutoCorrection","CommitState","CommitString","ContentHint","ContentPurpose","CursorPosition","Date","Datetime","Deactivate","Default","Default","DeleteSurroundingText","Digits","EVT_COMMIT_STRING_SINCE","EVT_CURSOR_POSITION_SINCE","EVT_DELETE_SURROUNDING_TEXT_SINCE","EVT_ENTER_SINCE","EVT_INPUT_PANEL_STATE_SINCE","EVT_KEYSYM_SINCE","EVT_LANGUAGE_SINCE","EVT_LEAVE_SINCE","EVT_MODIFIERS_MAP_SINCE","EVT_PREEDIT_CURSOR_SINCE","EVT_PREEDIT_STRING_SINCE","EVT_PREEDIT_STYLING_SINCE","EVT_TEXT_DIRECTION_SINCE","Email","Enter","Event","HiddenText","HideInputPanel","Highlight","Inactive","Incorrect","InputPanelState","InvokeAction","Keysym","Language","Latin","Leave","Lowercase","Ltr","ModifiersMap","Multiline","Name","None","None","Normal","Number","Password","Password","Phone","PreeditCursor","PreeditString","PreeditStyle","PreeditStyling","REQ_ACTIVATE_SINCE","REQ_COMMIT_STATE_SINCE","REQ_DEACTIVATE_SINCE","REQ_HIDE_INPUT_PANEL_SINCE","REQ_INVOKE_ACTION_SINCE","REQ_RESET_SINCE","REQ_SET_CONTENT_TYPE_SINCE","REQ_SET_CURSOR_RECTANGLE_SINCE","REQ_SET_PREFERRED_LANGUAGE_SINCE","REQ_SET_SURROUNDING_TEXT_SINCE","REQ_SHOW_INPUT_PANEL_SINCE","Request","Reset","Rtl","Selection","SensitiveData","SetContentType","SetCursorRectangle","SetPreferredLanguage","SetSurroundingText","ShowInputPanel","Terminal","TextDirection","TextDirection","Time","Titlecase","Underline","Uppercase","Url","ZwpTextInputV1","activate","all","as_raw_c_in","as_raw_c_in","as_ref","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","commit_state","complement","contains","deactivate","difference","empty","eq","eq","eq","eq","eq","equivalent","equivalent","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","from_raw","from_raw","from_raw","from_raw","from_raw","from_raw","from_raw_c","from_raw_c","hash","hide_input_panel","insert","intersection","intersects","into","into","into","into","into","into","into","into_raw","into_raw","invoke_action","is_all","is_destructor","is_destructor","is_empty","not","opcode","opcode","partial_cmp","remove","reset","set","set_content_type","set_cursor_rectangle","set_preferred_language","set_surrounding_text","show_input_panel","since","since","sub","sub_assign","symmetric_difference","to_owned","to_owned","to_owned","to_owned","to_owned","to_raw","to_raw","to_raw","to_raw","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","zwp_text_input_v1_events","zwp_text_input_v1_interface","zwp_text_input_v1_requests","anchor","commit","direction","index","index","index","index","language","length","length","map","modifiers","serial","serial","serial","serial","serial","state","state","style","surface","sym","text","text","time","anchor","button","cursor","height","hint","index","language","purpose","seat","seat","serial","surface","text","width","x","y","client","zwp_text_input_manager_v3","zwp_text_input_v3","Destroy","Event","GetTextInput","REQ_DESTROY_SINCE","REQ_GET_TEXT_INPUT_SINCE","Request","ZwpTextInputManagerV3","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone_into","destroy","eq","equivalent","fmt","fmt","fmt","from","from","from","from","from_raw","from_raw","from_raw_c","from_raw_c","get_text_input","into","into","into","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","since","since","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","zwp_text_input_manager_v3_interface","zwp_text_input_manager_v3_requests","seat","Alpha","AutoCapitalization","ChangeCause","Commit","CommitString","Completion","ContentHint","ContentPurpose","Date","Datetime","DeleteSurroundingText","Destroy","Digits","Disable","Done","EVT_COMMIT_STRING_SINCE","EVT_DELETE_SURROUNDING_TEXT_SINCE","EVT_DONE_SINCE","EVT_ENTER_SINCE","EVT_LEAVE_SINCE","EVT_PREEDIT_STRING_SINCE","Email","Enable","Enter","Event","HiddenText","InputMethod","Latin","Leave","Lowercase","Multiline","Name","None","Normal","Number","Other","Password","Phone","Pin","PreeditString","REQ_COMMIT_SINCE","REQ_DESTROY_SINCE","REQ_DISABLE_SINCE","REQ_ENABLE_SINCE","REQ_SET_CONTENT_TYPE_SINCE","REQ_SET_CURSOR_RECTANGLE_SINCE","REQ_SET_SURROUNDING_TEXT_SINCE","REQ_SET_TEXT_CHANGE_CAUSE_SINCE","Request","SensitiveData","SetContentType","SetCursorRectangle","SetSurroundingText","SetTextChangeCause","Spellcheck","Terminal","Time","Titlecase","Uppercase","Url","ZwpTextInputV3","all","as_raw_c_in","as_raw_c_in","as_ref","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","commit","complement","contains","destroy","difference","disable","empty","enable","eq","eq","eq","eq","equivalent","equivalent","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","from_raw","from_raw","from_raw","from_raw","from_raw","from_raw_c","from_raw_c","hash","insert","intersection","intersects","into","into","into","into","into","into","into_raw","into_raw","is_all","is_destructor","is_destructor","is_empty","not","opcode","opcode","partial_cmp","remove","set","set_content_type","set_cursor_rectangle","set_surrounding_text","set_text_change_cause","since","since","sub","sub_assign","symmetric_difference","to_owned","to_owned","to_owned","to_owned","to_raw","to_raw","to_raw","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","union","zwp_text_input_v3_events","zwp_text_input_v3_interface","zwp_text_input_v3_requests","after_length","before_length","cursor_begin","cursor_end","serial","surface","surface","text","text","anchor","cause","cursor","height","hint","purpose","text","width","x","y","v1","client","zxdg_decoration_manager_v1","zxdg_toplevel_decoration_v1","Destroy","Event","GetToplevelDecoration","REQ_DESTROY_SINCE","REQ_GET_TOPLEVEL_DECORATION_SINCE","Request","ZxdgDecorationManagerV1","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone_into","destroy","eq","equivalent","fmt","fmt","fmt","from","from","from","from","from_raw","from_raw","from_raw_c","from_raw_c","get_toplevel_decoration","into","into","into","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","since","since","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","zxdg_decoration_manager_v1_interface","zxdg_decoration_manager_v1_requests","toplevel","AlreadyConstructed","ClientSide","Configure","Destroy","EVT_CONFIGURE_SINCE","Error","Event","Mode","Orphaned","REQ_DESTROY_SINCE","REQ_SET_MODE_SINCE","REQ_UNSET_MODE_SINCE","Request","ServerSide","SetMode","UnconfiguredBuffer","UnsetMode","ZxdgToplevelDecorationV1","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone","clone","clone_into","clone_into","clone_into","destroy","eq","eq","eq","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_raw","from_raw","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into","into","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","set_mode","since","since","to_owned","to_owned","to_owned","to_raw","to_raw","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","unset_mode","zxdg_toplevel_decoration_v1_events","zxdg_toplevel_decoration_v1_interface","zxdg_toplevel_decoration_v1_requests","mode","mode","v1","v2","client","zxdg_exported_v1","zxdg_exporter_v1","zxdg_imported_v1","zxdg_importer_v1","Destroy","EVT_HANDLE_SINCE","Event","Handle","REQ_DESTROY_SINCE","Request","ZxdgExportedV1","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone_into","destroy","eq","equivalent","fmt","fmt","fmt","from","from","from","from","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","since","since","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","zxdg_exported_v1_events","zxdg_exported_v1_interface","zxdg_exported_v1_requests","handle","Destroy","Event","Export","REQ_DESTROY_SINCE","REQ_EXPORT_SINCE","Request","ZxdgExporterV1","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone_into","destroy","eq","equivalent","export","fmt","fmt","fmt","from","from","from","from","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","since","since","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","zxdg_exporter_v1_interface","zxdg_exporter_v1_requests","surface","Destroy","Destroyed","EVT_DESTROYED_SINCE","Event","REQ_DESTROY_SINCE","REQ_SET_PARENT_OF_SINCE","Request","SetParentOf","ZxdgImportedV1","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone_into","destroy","eq","equivalent","fmt","fmt","fmt","from","from","from","from","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","set_parent_of","since","since","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","zxdg_imported_v1_events","zxdg_imported_v1_interface","zxdg_imported_v1_requests","surface","Destroy","Event","Import","REQ_DESTROY_SINCE","REQ_IMPORT_SINCE","Request","ZxdgImporterV1","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone_into","destroy","eq","equivalent","fmt","fmt","fmt","from","from","from","from","from_raw","from_raw","from_raw_c","from_raw_c","import","into","into","into","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","since","since","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","zxdg_importer_v1_interface","zxdg_importer_v1_requests","handle","client","zxdg_exported_v2","zxdg_exporter_v2","zxdg_imported_v2","zxdg_importer_v2","Destroy","EVT_HANDLE_SINCE","Event","Handle","REQ_DESTROY_SINCE","Request","ZxdgExportedV2","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone_into","destroy","eq","equivalent","fmt","fmt","fmt","from","from","from","from","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","since","since","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","zxdg_exported_v2_events","zxdg_exported_v2_interface","zxdg_exported_v2_requests","handle","Destroy","Error","Event","ExportToplevel","InvalidSurface","REQ_DESTROY_SINCE","REQ_EXPORT_TOPLEVEL_SINCE","Request","ZxdgExporterV2","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone","clone_into","clone_into","destroy","eq","eq","equivalent","export_toplevel","fmt","fmt","fmt","fmt","from","from","from","from","from","from_raw","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","since","since","to_owned","to_owned","to_raw","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","zxdg_exporter_v2_interface","zxdg_exporter_v2_requests","surface","Destroy","Destroyed","EVT_DESTROYED_SINCE","Error","Event","InvalidSurface","REQ_DESTROY_SINCE","REQ_SET_PARENT_OF_SINCE","Request","SetParentOf","ZxdgImportedV2","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone","clone_into","clone_into","destroy","eq","eq","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from_raw","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","set_parent_of","since","since","to_owned","to_owned","to_raw","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","zxdg_imported_v2_events","zxdg_imported_v2_interface","zxdg_imported_v2_requests","surface","Destroy","Event","ImportToplevel","REQ_DESTROY_SINCE","REQ_IMPORT_TOPLEVEL_SINCE","Request","ZxdgImporterV2","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone_into","destroy","eq","equivalent","fmt","fmt","fmt","from","from","from","from","from_raw","from_raw","from_raw_c","from_raw_c","import_toplevel","into","into","into","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","since","since","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","zxdg_importer_v2_interface","zxdg_importer_v2_requests","handle","v1","client","zxdg_output_manager_v1","zxdg_output_v1","Destroy","Event","GetXdgOutput","REQ_DESTROY_SINCE","REQ_GET_XDG_OUTPUT_SINCE","Request","ZxdgOutputManagerV1","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone_into","destroy","eq","equivalent","fmt","fmt","fmt","from","from","from","from","from_raw","from_raw","from_raw_c","from_raw_c","get_xdg_output","into","into","into","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","since","since","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","zxdg_output_manager_v1_interface","zxdg_output_manager_v1_requests","output","Description","Destroy","Done","EVT_DESCRIPTION_SINCE","EVT_DONE_SINCE","EVT_LOGICAL_POSITION_SINCE","EVT_LOGICAL_SIZE_SINCE","EVT_NAME_SINCE","Event","LogicalPosition","LogicalSize","Name","REQ_DESTROY_SINCE","Request","ZxdgOutputV1","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone_into","destroy","eq","equivalent","fmt","fmt","fmt","from","from","from","from","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","since","since","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","zxdg_output_v1_events","zxdg_output_v1_interface","zxdg_output_v1_requests","description","height","name","width","x","y","v5","v6","client","xdg_popup","xdg_shell","xdg_surface","Destroy","EVT_POPUP_DONE_SINCE","Event","PopupDone","REQ_DESTROY_SINCE","Request","XdgPopup","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone_into","destroy","eq","equivalent","fmt","fmt","fmt","from","from","from","from","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","since","since","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","xdg_popup_events","xdg_popup_interface","xdg_popup_requests","Current","DefunctSurfaces","Destroy","EVT_PING_SINCE","Error","Event","GetXdgPopup","GetXdgSurface","InvalidPopupParent","NotTheTopmostPopup","Ping","Pong","REQ_DESTROY_SINCE","REQ_GET_XDG_POPUP_SINCE","REQ_GET_XDG_SURFACE_SINCE","REQ_PONG_SINCE","REQ_USE_UNSTABLE_VERSION_SINCE","Request","Role","UseUnstableVersion","Version","XdgShell","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone","clone","clone_into","clone_into","clone_into","destroy","eq","eq","eq","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_raw","from_raw","from_raw","from_raw","from_raw_c","from_raw_c","get_xdg_popup","get_xdg_surface","into","into","into","into","into","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","pong","since","since","to_owned","to_owned","to_owned","to_raw","to_raw","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","use_unstable_version","xdg_shell_events","xdg_shell_interface","xdg_shell_requests","serial","parent","seat","serial","serial","surface","surface","version","x","y","AckConfigure","Activated","Bottom","BottomLeft","BottomRight","Close","Configure","Destroy","EVT_CLOSE_SINCE","EVT_CONFIGURE_SINCE","Event","Fullscreen","Left","Maximized","Move","None","REQ_ACK_CONFIGURE_SINCE","REQ_DESTROY_SINCE","REQ_MOVE_SINCE","REQ_RESIZE_SINCE","REQ_SET_APP_ID_SINCE","REQ_SET_FULLSCREEN_SINCE","REQ_SET_MAXIMIZED_SINCE","REQ_SET_MINIMIZED_SINCE","REQ_SET_PARENT_SINCE","REQ_SET_TITLE_SINCE","REQ_SET_WINDOW_GEOMETRY_SINCE","REQ_SHOW_WINDOW_MENU_SINCE","REQ_UNSET_FULLSCREEN_SINCE","REQ_UNSET_MAXIMIZED_SINCE","Request","Resize","ResizeEdge","Resizing","Right","SetAppId","SetFullscreen","SetMaximized","SetMinimized","SetParent","SetTitle","SetWindowGeometry","ShowWindowMenu","State","Top","TopLeft","TopRight","UnsetFullscreen","UnsetMaximized","XdgSurface","_move","ack_configure","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone","clone","clone_into","clone_into","clone_into","destroy","eq","eq","eq","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_raw","from_raw","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into","into","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","resize","set_app_id","set_fullscreen","set_maximized","set_minimized","set_parent","set_title","set_window_geometry","show_window_menu","since","since","to_owned","to_owned","to_owned","to_raw","to_raw","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","unset_fullscreen","unset_maximized","xdg_surface_events","xdg_surface_interface","xdg_surface_requests","height","serial","states","width","app_id","edges","height","output","parent","seat","seat","seat","serial","serial","serial","serial","title","width","x","x","y","y","client","zxdg_popup_v6","zxdg_positioner_v6","zxdg_shell_v6","zxdg_surface_v6","zxdg_toplevel_v6","Configure","Destroy","EVT_CONFIGURE_SINCE","EVT_POPUP_DONE_SINCE","Error","Event","Grab","InvalidGrab","PopupDone","REQ_DESTROY_SINCE","REQ_GRAB_SINCE","Request","ZxdgPopupV6","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone","clone_into","clone_into","destroy","eq","eq","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from_raw","from_raw","from_raw","from_raw_c","from_raw_c","grab","into","into","into","into","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","since","since","to_owned","to_owned","to_raw","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","zxdg_popup_v6_events","zxdg_popup_v6_interface","zxdg_popup_v6_requests","height","width","x","y","seat","serial","Anchor","Bottom","Bottom","ConstraintAdjustment","Destroy","Error","Event","FlipX","FlipY","Gravity","InvalidInput","Left","Left","None","None","None","REQ_DESTROY_SINCE","REQ_SET_ANCHOR_RECT_SINCE","REQ_SET_ANCHOR_SINCE","REQ_SET_CONSTRAINT_ADJUSTMENT_SINCE","REQ_SET_GRAVITY_SINCE","REQ_SET_OFFSET_SINCE","REQ_SET_SIZE_SINCE","Request","ResizeX","ResizeY","Right","Right","SetAnchor","SetAnchorRect","SetConstraintAdjustment","SetGravity","SetOffset","SetSize","SlideX","SlideY","Top","Top","ZxdgPositionerV6","all","all","all","as_raw_c_in","as_raw_c_in","as_ref","bitand","bitand","bitand","bitand_assign","bitand_assign","bitand_assign","bitor","bitor","bitor","bitor_assign","bitor_assign","bitor_assign","bits","bits","bits","bitxor","bitxor","bitxor","bitxor_assign","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","complement","complement","complement","contains","contains","contains","destroy","difference","difference","difference","empty","empty","empty","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","extend","extend","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_bits","from_bits","from_bits","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_iter","from_iter","from_iter","from_raw","from_raw","from_raw","from_raw","from_raw","from_raw","from_raw_c","from_raw_c","hash","hash","hash","insert","insert","insert","intersection","intersection","intersection","intersects","intersects","intersects","into","into","into","into","into","into","into","into_raw","into_raw","is_all","is_all","is_all","is_destructor","is_destructor","is_empty","is_empty","is_empty","not","not","not","opcode","opcode","partial_cmp","partial_cmp","partial_cmp","remove","remove","remove","set","set","set","set_anchor","set_anchor_rect","set_constraint_adjustment","set_gravity","set_offset","set_size","since","since","sub","sub","sub","sub_assign","sub_assign","sub_assign","symmetric_difference","symmetric_difference","symmetric_difference","to_owned","to_owned","to_owned","to_owned","to_owned","to_raw","to_raw","to_raw","to_raw","toggle","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","union","union","zxdg_positioner_v6_interface","zxdg_positioner_v6_requests","anchor","constraint_adjustment","gravity","height","height","width","width","x","x","y","y","CreatePositioner","DefunctSurfaces","Destroy","EVT_PING_SINCE","Error","Event","GetXdgSurface","InvalidPopupParent","InvalidPositioner","InvalidSurfaceState","NotTheTopmostPopup","Ping","Pong","REQ_CREATE_POSITIONER_SINCE","REQ_DESTROY_SINCE","REQ_GET_XDG_SURFACE_SINCE","REQ_PONG_SINCE","Request","Role","ZxdgShellV6","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone","clone_into","clone_into","create_positioner","destroy","eq","eq","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from_raw","from_raw","from_raw","from_raw_c","from_raw_c","get_xdg_surface","into","into","into","into","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","pong","since","since","to_owned","to_owned","to_raw","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","zxdg_shell_v6_events","zxdg_shell_v6_interface","zxdg_shell_v6_requests","serial","serial","surface","AckConfigure","AlreadyConstructed","Configure","Destroy","EVT_CONFIGURE_SINCE","Error","Event","GetPopup","GetToplevel","NotConstructed","REQ_ACK_CONFIGURE_SINCE","REQ_DESTROY_SINCE","REQ_GET_POPUP_SINCE","REQ_GET_TOPLEVEL_SINCE","REQ_SET_WINDOW_GEOMETRY_SINCE","Request","SetWindowGeometry","UnconfiguredBuffer","ZxdgSurfaceV6","ack_configure","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone","clone_into","clone_into","destroy","eq","eq","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from_raw","from_raw","from_raw","from_raw_c","from_raw_c","get_popup","get_toplevel","into","into","into","into","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","set_window_geometry","since","since","to_owned","to_owned","to_raw","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","zxdg_surface_v6_events","zxdg_surface_v6_interface","zxdg_surface_v6_requests","serial","height","parent","positioner","serial","width","x","y","Activated","Bottom","BottomLeft","BottomRight","Close","Configure","Destroy","EVT_CLOSE_SINCE","EVT_CONFIGURE_SINCE","Event","Fullscreen","Left","Maximized","Move","None","REQ_DESTROY_SINCE","REQ_MOVE_SINCE","REQ_RESIZE_SINCE","REQ_SET_APP_ID_SINCE","REQ_SET_FULLSCREEN_SINCE","REQ_SET_MAXIMIZED_SINCE","REQ_SET_MAX_SIZE_SINCE","REQ_SET_MINIMIZED_SINCE","REQ_SET_MIN_SIZE_SINCE","REQ_SET_PARENT_SINCE","REQ_SET_TITLE_SINCE","REQ_SHOW_WINDOW_MENU_SINCE","REQ_UNSET_FULLSCREEN_SINCE","REQ_UNSET_MAXIMIZED_SINCE","Request","Resize","ResizeEdge","Resizing","Right","SetAppId","SetFullscreen","SetMaxSize","SetMaximized","SetMinSize","SetMinimized","SetParent","SetTitle","ShowWindowMenu","State","Top","TopLeft","TopRight","UnsetFullscreen","UnsetMaximized","ZxdgToplevelV6","_move","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone","clone","clone_into","clone_into","clone_into","destroy","eq","eq","eq","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_raw","from_raw","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into","into","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","resize","set_app_id","set_fullscreen","set_max_size","set_maximized","set_min_size","set_minimized","set_parent","set_title","show_window_menu","since","since","to_owned","to_owned","to_owned","to_raw","to_raw","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","unset_fullscreen","unset_maximized","zxdg_toplevel_v6_events","zxdg_toplevel_v6_interface","zxdg_toplevel_v6_requests","height","states","width","app_id","edges","height","height","output","parent","seat","seat","seat","serial","serial","serial","title","width","width","x","y","v1","client","zwp_xwayland_keyboard_grab_manager_v1","zwp_xwayland_keyboard_grab_v1","Destroy","Event","GrabKeyboard","REQ_DESTROY_SINCE","REQ_GRAB_KEYBOARD_SINCE","Request","ZwpXwaylandKeyboardGrabManagerV1","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone_into","destroy","eq","equivalent","fmt","fmt","fmt","from","from","from","from","from_raw","from_raw","from_raw_c","from_raw_c","grab_keyboard","into","into","into","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","since","since","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","zwp_xwayland_keyboard_grab_manager_v1_interface","zwp_xwayland_keyboard_grab_manager_v1_requests","seat","surface","Destroy","Event","REQ_DESTROY_SINCE","Request","ZwpXwaylandKeyboardGrabV1","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone_into","destroy","eq","equivalent","fmt","fmt","fmt","from","from","from","from","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","since","since","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","zwp_xwayland_keyboard_grab_v1_interface","zwp_xwayland_keyboard_grab_v1_requests","client","wp_viewport","wp_viewporter","BadSize","BadValue","Destroy","Error","Event","NoSurface","OutOfBuffer","REQ_DESTROY_SINCE","REQ_SET_DESTINATION_SINCE","REQ_SET_SOURCE_SINCE","Request","SetDestination","SetSource","WpViewport","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone","clone_into","clone_into","destroy","eq","eq","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from_raw","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","set_destination","set_source","since","since","to_owned","to_owned","to_raw","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","wp_viewport_interface","wp_viewport_requests","height","height","width","width","x","y","Destroy","Error","Event","GetViewport","REQ_DESTROY_SINCE","REQ_GET_VIEWPORT_SINCE","Request","ViewportExists","WpViewporter","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone","clone_into","clone_into","destroy","eq","eq","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from_raw","from_raw","from_raw","from_raw_c","from_raw_c","get_viewport","into","into","into","into","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","since","since","to_owned","to_owned","to_raw","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","wp_viewporter_interface","wp_viewporter_requests","surface","unstable","data_control","export_dmabuf","foreign_toplevel","gamma_control","input_inhibitor","layer_shell","output_management","output_power_management","screencopy","virtual_pointer","v1","client","zwlr_data_control_device_v1","zwlr_data_control_manager_v1","zwlr_data_control_offer_v1","zwlr_data_control_source_v1","DataOffer","Destroy","EVT_DATA_OFFER_SINCE","EVT_FINISHED_SINCE","EVT_PRIMARY_SELECTION_SINCE","EVT_SELECTION_SINCE","Error","Event","Finished","PrimarySelection","REQ_DESTROY_SINCE","REQ_SET_PRIMARY_SELECTION_SINCE","REQ_SET_SELECTION_SINCE","Request","Selection","SetPrimarySelection","SetSelection","UsedSource","ZwlrDataControlDeviceV1","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone","clone_into","clone_into","destroy","eq","eq","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from_raw","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","set_primary_selection","set_selection","since","since","to_owned","to_owned","to_raw","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","zwlr_data_control_device_v1_events","zwlr_data_control_device_v1_interface","zwlr_data_control_device_v1_requests","id","id","id","source","source","CreateDataSource","Destroy","Event","GetDataDevice","REQ_CREATE_DATA_SOURCE_SINCE","REQ_DESTROY_SINCE","REQ_GET_DATA_DEVICE_SINCE","Request","ZwlrDataControlManagerV1","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone_into","create_data_source","destroy","eq","equivalent","fmt","fmt","fmt","from","from","from","from","from_raw","from_raw","from_raw_c","from_raw_c","get_data_device","into","into","into","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","since","since","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","zwlr_data_control_manager_v1_interface","zwlr_data_control_manager_v1_requests","seat","Destroy","EVT_OFFER_SINCE","Event","Offer","REQ_DESTROY_SINCE","REQ_RECEIVE_SINCE","Receive","Request","ZwlrDataControlOfferV1","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone_into","destroy","eq","equivalent","fmt","fmt","fmt","from","from","from","from","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","receive","since","since","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","zwlr_data_control_offer_v1_events","zwlr_data_control_offer_v1_interface","zwlr_data_control_offer_v1_requests","mime_type","fd","mime_type","Cancelled","Destroy","EVT_CANCELLED_SINCE","EVT_SEND_SINCE","Error","Event","InvalidOffer","Offer","REQ_DESTROY_SINCE","REQ_OFFER_SINCE","Request","Send","ZwlrDataControlSourceV1","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone","clone_into","clone_into","destroy","eq","eq","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from_raw","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into","into_raw","into_raw","is_destructor","is_destructor","offer","opcode","opcode","since","since","to_owned","to_owned","to_raw","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","zwlr_data_control_source_v1_events","zwlr_data_control_source_v1_interface","zwlr_data_control_source_v1_requests","fd","mime_type","mime_type","v1","client","zwlr_export_dmabuf_frame_v1","zwlr_export_dmabuf_manager_v1","Cancel","CancelReason","Destroy","EVT_CANCEL_SINCE","EVT_FRAME_SINCE","EVT_OBJECT_SINCE","EVT_READY_SINCE","Event","Flags","Frame","Object","Permanent","REQ_DESTROY_SINCE","Ready","Request","Resizing","Temporary","Transient","ZwlrExportDmabufFrameV1","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone","clone","clone_into","clone_into","clone_into","destroy","eq","eq","eq","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_raw","from_raw","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into","into","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","since","since","to_owned","to_owned","to_owned","to_raw","to_raw","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","zwlr_export_dmabuf_frame_v1_events","zwlr_export_dmabuf_frame_v1_interface","zwlr_export_dmabuf_frame_v1_requests","buffer_flags","fd","flags","format","height","index","mod_high","mod_low","num_objects","offset","offset_x","offset_y","plane_index","reason","size","stride","tv_nsec","tv_sec_hi","tv_sec_lo","width","CaptureOutput","Destroy","Event","REQ_CAPTURE_OUTPUT_SINCE","REQ_DESTROY_SINCE","Request","ZwlrExportDmabufManagerV1","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","c_interface","capture_output","child","child","clone","clone_into","destroy","eq","equivalent","fmt","fmt","fmt","from","from","from","from","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","since","since","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","zwlr_export_dmabuf_manager_v1_interface","zwlr_export_dmabuf_manager_v1_requests","output","overlay_cursor","v1","client","zwlr_foreign_toplevel_handle_v1","zwlr_foreign_toplevel_manager_v1","Activate","Activated","AppId","Close","Closed","Destroy","Done","EVT_APP_ID_SINCE","EVT_CLOSED_SINCE","EVT_DONE_SINCE","EVT_OUTPUT_ENTER_SINCE","EVT_OUTPUT_LEAVE_SINCE","EVT_PARENT_SINCE","EVT_STATE_SINCE","EVT_TITLE_SINCE","Error","Event","Fullscreen","InvalidRectangle","Maximized","Minimized","OutputEnter","OutputLeave","Parent","REQ_ACTIVATE_SINCE","REQ_CLOSE_SINCE","REQ_DESTROY_SINCE","REQ_SET_FULLSCREEN_SINCE","REQ_SET_MAXIMIZED_SINCE","REQ_SET_MINIMIZED_SINCE","REQ_SET_RECTANGLE_SINCE","REQ_UNSET_FULLSCREEN_SINCE","REQ_UNSET_MAXIMIZED_SINCE","REQ_UNSET_MINIMIZED_SINCE","Request","SetFullscreen","SetMaximized","SetMinimized","SetRectangle","State","State","Title","UnsetFullscreen","UnsetMaximized","UnsetMinimized","ZwlrForeignToplevelHandleV1","activate","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone","clone","clone_into","clone_into","clone_into","close","destroy","eq","eq","eq","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_raw","from_raw","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into","into","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","set_fullscreen","set_maximized","set_minimized","set_rectangle","since","since","to_owned","to_owned","to_owned","to_raw","to_raw","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","unset_fullscreen","unset_maximized","unset_minimized","zwlr_foreign_toplevel_handle_v1_events","zwlr_foreign_toplevel_handle_v1_interface","zwlr_foreign_toplevel_handle_v1_requests","app_id","output","output","parent","state","title","height","output","seat","surface","width","x","y","EVT_FINISHED_SINCE","EVT_TOPLEVEL_SINCE","Event","Finished","REQ_STOP_SINCE","Request","Stop","Toplevel","ZwlrForeignToplevelManagerV1","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone_into","eq","equivalent","fmt","fmt","fmt","from","from","from","from","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","since","since","stop","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","zwlr_foreign_toplevel_manager_v1_events","zwlr_foreign_toplevel_manager_v1_interface","zwlr_foreign_toplevel_manager_v1_requests","toplevel","v1","client","zwlr_gamma_control_manager_v1","zwlr_gamma_control_v1","Destroy","Event","GetGammaControl","REQ_DESTROY_SINCE","REQ_GET_GAMMA_CONTROL_SINCE","Request","ZwlrGammaControlManagerV1","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone_into","destroy","eq","equivalent","fmt","fmt","fmt","from","from","from","from","from_raw","from_raw","from_raw_c","from_raw_c","get_gamma_control","into","into","into","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","since","since","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","zwlr_gamma_control_manager_v1_interface","zwlr_gamma_control_manager_v1_requests","output","Destroy","EVT_FAILED_SINCE","EVT_GAMMA_SIZE_SINCE","Error","Event","Failed","GammaSize","InvalidGamma","REQ_DESTROY_SINCE","REQ_SET_GAMMA_SINCE","Request","SetGamma","ZwlrGammaControlV1","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone","clone_into","clone_into","destroy","eq","eq","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from_raw","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","set_gamma","since","since","to_owned","to_owned","to_raw","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","zwlr_gamma_control_v1_events","zwlr_gamma_control_v1_interface","zwlr_gamma_control_v1_requests","size","fd","v1","client","zwlr_input_inhibit_manager_v1","zwlr_input_inhibitor_v1","AlreadyInhibited","Error","Event","GetInhibitor","REQ_GET_INHIBITOR_SINCE","Request","ZwlrInputInhibitManagerV1","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone","clone_into","clone_into","eq","eq","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from_raw","from_raw","from_raw","from_raw_c","from_raw_c","get_inhibitor","into","into","into","into","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","since","since","to_owned","to_owned","to_raw","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","zwlr_input_inhibit_manager_v1_interface","zwlr_input_inhibit_manager_v1_requests","Destroy","Event","REQ_DESTROY_SINCE","Request","ZwlrInputInhibitorV1","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone_into","destroy","eq","equivalent","fmt","fmt","fmt","from","from","from","from","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","since","since","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","zwlr_input_inhibitor_v1_interface","zwlr_input_inhibitor_v1_requests","v1","client","zwlr_layer_shell_v1","zwlr_layer_surface_v1","AlreadyConstructed","Background","Bottom","Destroy","Error","Event","GetLayerSurface","InvalidLayer","Layer","Overlay","REQ_DESTROY_SINCE","REQ_GET_LAYER_SURFACE_SINCE","Request","Role","Top","ZwlrLayerShellV1","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone","clone","clone_into","clone_into","clone_into","destroy","eq","eq","eq","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_raw","from_raw","from_raw","from_raw","from_raw_c","from_raw_c","get_layer_surface","into","into","into","into","into","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","since","since","to_owned","to_owned","to_owned","to_raw","to_raw","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","zwlr_layer_shell_v1_interface","zwlr_layer_shell_v1_requests","layer","namespace","output","surface","AckConfigure","Anchor","Bottom","Closed","Configure","Destroy","EVT_CLOSED_SINCE","EVT_CONFIGURE_SINCE","Error","Event","Exclusive","GetPopup","InvalidAnchor","InvalidKeyboardInteractivity","InvalidSize","InvalidSurfaceState","KeyboardInteractivity","Left","None","OnDemand","REQ_ACK_CONFIGURE_SINCE","REQ_DESTROY_SINCE","REQ_GET_POPUP_SINCE","REQ_SET_ANCHOR_SINCE","REQ_SET_EXCLUSIVE_ZONE_SINCE","REQ_SET_KEYBOARD_INTERACTIVITY_SINCE","REQ_SET_LAYER_SINCE","REQ_SET_MARGIN_SINCE","REQ_SET_SIZE_SINCE","Request","Right","SetAnchor","SetExclusiveZone","SetKeyboardInteractivity","SetLayer","SetMargin","SetSize","Top","ZwlrLayerSurfaceV1","ack_configure","all","as_raw_c_in","as_raw_c_in","as_ref","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","complement","contains","destroy","difference","empty","eq","eq","eq","eq","equivalent","equivalent","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","from_raw","from_raw","from_raw","from_raw","from_raw","from_raw_c","from_raw_c","get_popup","hash","insert","intersection","intersects","into","into","into","into","into","into","into_raw","into_raw","is_all","is_destructor","is_destructor","is_empty","not","opcode","opcode","partial_cmp","remove","set","set_anchor","set_exclusive_zone","set_keyboard_interactivity","set_layer","set_margin","set_size","since","since","sub","sub_assign","symmetric_difference","to_owned","to_owned","to_owned","to_owned","to_raw","to_raw","to_raw","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","union","zwlr_layer_surface_v1_events","zwlr_layer_surface_v1_interface","zwlr_layer_surface_v1_requests","height","serial","width","anchor","bottom","height","keyboard_interactivity","layer","left","popup","right","serial","top","width","zone","v1","client","zwlr_output_configuration_head_v1","zwlr_output_configuration_v1","zwlr_output_head_v1","zwlr_output_manager_v1","zwlr_output_mode_v1","AlreadySet","Error","Event","InvalidCustomMode","InvalidMode","InvalidScale","InvalidTransform","REQ_SET_CUSTOM_MODE_SINCE","REQ_SET_MODE_SINCE","REQ_SET_POSITION_SINCE","REQ_SET_SCALE_SINCE","REQ_SET_TRANSFORM_SINCE","Request","SetCustomMode","SetMode","SetPosition","SetScale","SetTransform","ZwlrOutputConfigurationHeadV1","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone","clone_into","clone_into","eq","eq","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from_raw","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","set_custom_mode","set_mode","set_position","set_scale","set_transform","since","since","to_owned","to_owned","to_raw","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","zwlr_output_configuration_head_v1_interface","zwlr_output_configuration_head_v1_requests","height","mode","refresh","scale","transform","width","x","y","AlreadyConfiguredHead","AlreadyUsed","Apply","Cancelled","Destroy","DisableHead","EVT_CANCELLED_SINCE","EVT_FAILED_SINCE","EVT_SUCCEEDED_SINCE","EnableHead","Error","Event","Failed","REQ_APPLY_SINCE","REQ_DESTROY_SINCE","REQ_DISABLE_HEAD_SINCE","REQ_ENABLE_HEAD_SINCE","REQ_TEST_SINCE","Request","Succeeded","Test","UnconfiguredHead","ZwlrOutputConfigurationV1","apply","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone","clone_into","clone_into","destroy","disable_head","enable_head","eq","eq","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from_raw","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","since","since","test","to_owned","to_owned","to_raw","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","zwlr_output_configuration_v1_events","zwlr_output_configuration_v1_interface","zwlr_output_configuration_v1_requests","head","head","CurrentMode","Description","EVT_CURRENT_MODE_SINCE","EVT_DESCRIPTION_SINCE","EVT_ENABLED_SINCE","EVT_FINISHED_SINCE","EVT_MAKE_SINCE","EVT_MODEL_SINCE","EVT_MODE_SINCE","EVT_NAME_SINCE","EVT_PHYSICAL_SIZE_SINCE","EVT_POSITION_SINCE","EVT_SCALE_SINCE","EVT_SERIAL_NUMBER_SINCE","EVT_TRANSFORM_SINCE","Enabled","Event","Finished","Make","Mode","Model","Name","PhysicalSize","Position","Request","Scale","SerialNumber","Transform","ZwlrOutputHeadV1","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone_into","eq","equivalent","fmt","fmt","fmt","from","from","from","from","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","since","since","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","zwlr_output_head_v1_events","zwlr_output_head_v1_interface","description","enabled","height","make","mode","mode","model","name","scale","serial_number","transform","width","x","y","CreateConfiguration","Done","EVT_DONE_SINCE","EVT_FINISHED_SINCE","EVT_HEAD_SINCE","Event","Finished","Head","REQ_CREATE_CONFIGURATION_SINCE","REQ_STOP_SINCE","Request","Stop","ZwlrOutputManagerV1","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone_into","create_configuration","eq","equivalent","fmt","fmt","fmt","from","from","from","from","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","since","since","stop","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","zwlr_output_manager_v1_events","zwlr_output_manager_v1_interface","zwlr_output_manager_v1_requests","head","serial","serial","EVT_FINISHED_SINCE","EVT_PREFERRED_SINCE","EVT_REFRESH_SINCE","EVT_SIZE_SINCE","Event","Finished","Preferred","Refresh","Request","Size","ZwlrOutputModeV1","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone_into","eq","equivalent","fmt","fmt","fmt","from","from","from","from","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","since","since","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","zwlr_output_mode_v1_events","zwlr_output_mode_v1_interface","height","refresh","width","v1","client","zwlr_output_power_manager_v1","zwlr_output_power_v1","Destroy","Event","GetOutputPower","REQ_DESTROY_SINCE","REQ_GET_OUTPUT_POWER_SINCE","Request","ZwlrOutputPowerManagerV1","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone_into","destroy","eq","equivalent","fmt","fmt","fmt","from","from","from","from","from_raw","from_raw","from_raw_c","from_raw_c","get_output_power","into","into","into","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","since","since","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","zwlr_output_power_manager_v1_interface","zwlr_output_power_manager_v1_requests","output","Destroy","EVT_FAILED_SINCE","EVT_MODE_SINCE","Error","Event","Failed","InvalidMode","Mode","Mode","Off","On","REQ_DESTROY_SINCE","REQ_SET_MODE_SINCE","Request","SetMode","ZwlrOutputPowerV1","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone","clone","clone_into","clone_into","clone_into","destroy","eq","eq","eq","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_raw","from_raw","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into","into","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","set_mode","since","since","to_owned","to_owned","to_owned","to_raw","to_raw","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","zwlr_output_power_v1_events","zwlr_output_power_v1_interface","zwlr_output_power_v1_requests","mode","mode","v1","client","zwlr_screencopy_frame_v1","zwlr_screencopy_manager_v1","AlreadyUsed","Buffer","BufferDone","Copy","CopyWithDamage","Damage","Destroy","EVT_BUFFER_DONE_SINCE","EVT_BUFFER_SINCE","EVT_DAMAGE_SINCE","EVT_FAILED_SINCE","EVT_FLAGS_SINCE","EVT_LINUX_DMABUF_SINCE","EVT_READY_SINCE","Error","Event","Failed","Flags","Flags","InvalidBuffer","LinuxDmabuf","REQ_COPY_SINCE","REQ_COPY_WITH_DAMAGE_SINCE","REQ_DESTROY_SINCE","Ready","Request","YInvert","ZwlrScreencopyFrameV1","all","as_raw_c_in","as_raw_c_in","as_ref","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone","clone","clone_into","clone_into","clone_into","cmp","complement","contains","copy","copy_with_damage","destroy","difference","empty","eq","eq","eq","equivalent","equivalent","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","from_raw","from_raw","from_raw","from_raw","from_raw_c","from_raw_c","hash","insert","intersection","intersects","into","into","into","into","into","into_raw","into_raw","is_all","is_destructor","is_destructor","is_empty","not","opcode","opcode","partial_cmp","remove","set","since","since","sub","sub_assign","symmetric_difference","to_owned","to_owned","to_owned","to_raw","to_raw","toggle","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","union","zwlr_screencopy_frame_v1_events","zwlr_screencopy_frame_v1_interface","zwlr_screencopy_frame_v1_requests","flags","format","format","height","height","height","stride","tv_nsec","tv_sec_hi","tv_sec_lo","width","width","width","x","y","buffer","buffer","CaptureOutput","CaptureOutputRegion","Destroy","Event","REQ_CAPTURE_OUTPUT_REGION_SINCE","REQ_CAPTURE_OUTPUT_SINCE","REQ_DESTROY_SINCE","Request","ZwlrScreencopyManagerV1","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","c_interface","capture_output","capture_output_region","child","child","clone","clone_into","destroy","eq","equivalent","fmt","fmt","fmt","from","from","from","from","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","since","since","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","zwlr_screencopy_manager_v1_interface","zwlr_screencopy_manager_v1_requests","height","output","output","overlay_cursor","overlay_cursor","width","x","y","v1","client","zwlr_virtual_pointer_manager_v1","zwlr_virtual_pointer_v1","CreateVirtualPointer","CreateVirtualPointerWithOutput","Destroy","Event","REQ_CREATE_VIRTUAL_POINTER_SINCE","REQ_CREATE_VIRTUAL_POINTER_WITH_OUTPUT_SINCE","REQ_DESTROY_SINCE","Request","ZwlrVirtualPointerManagerV1","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone_into","create_virtual_pointer","create_virtual_pointer_with_output","destroy","eq","equivalent","fmt","fmt","fmt","from","from","from","from","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","since","since","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","zwlr_virtual_pointer_manager_v1_interface","zwlr_virtual_pointer_manager_v1_requests","output","seat","seat","Axis","AxisDiscrete","AxisSource","AxisStop","Button","Destroy","Error","Event","Frame","InvalidAxis","InvalidAxisSource","Motion","MotionAbsolute","REQ_AXIS_DISCRETE_SINCE","REQ_AXIS_SINCE","REQ_AXIS_SOURCE_SINCE","REQ_AXIS_STOP_SINCE","REQ_BUTTON_SINCE","REQ_DESTROY_SINCE","REQ_FRAME_SINCE","REQ_MOTION_ABSOLUTE_SINCE","REQ_MOTION_SINCE","Request","ZwlrVirtualPointerV1","as_raw_c_in","as_raw_c_in","as_ref","axis","axis_discrete","axis_source","axis_stop","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","button","c_interface","child","child","clone","clone","clone_into","clone_into","destroy","eq","eq","equivalent","fmt","fmt","fmt","fmt","frame","from","from","from","from","from","from_raw","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into","into_raw","into_raw","is_destructor","is_destructor","motion","motion_absolute","opcode","opcode","since","since","to_owned","to_owned","to_raw","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","zwlr_virtual_pointer_v1_interface","zwlr_virtual_pointer_v1_requests","axis","axis","axis","axis_source","button","discrete","dx","dy","state","time","time","time","time","time","time","value","value","x","x_extent","y","y_extent","client","xdg_popup","xdg_positioner","xdg_surface","xdg_toplevel","xdg_wm_base","Configure","Destroy","EVT_CONFIGURE_SINCE","EVT_POPUP_DONE_SINCE","EVT_REPOSITIONED_SINCE","Error","Event","Grab","InvalidGrab","PopupDone","REQ_DESTROY_SINCE","REQ_GRAB_SINCE","REQ_REPOSITION_SINCE","Reposition","Repositioned","Request","XdgPopup","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone","clone_into","clone_into","destroy","eq","eq","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from_raw","from_raw","from_raw","from_raw_c","from_raw_c","grab","into","into","into","into","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","reposition","since","since","to_owned","to_owned","to_raw","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","xdg_popup_events","xdg_popup_interface","xdg_popup_requests","height","token","width","x","y","positioner","seat","serial","token","Anchor","Bottom","Bottom","BottomLeft","BottomLeft","BottomRight","BottomRight","ConstraintAdjustment","Destroy","Error","Event","FlipX","FlipY","Gravity","InvalidInput","Left","Left","None","None","None","REQ_DESTROY_SINCE","REQ_SET_ANCHOR_RECT_SINCE","REQ_SET_ANCHOR_SINCE","REQ_SET_CONSTRAINT_ADJUSTMENT_SINCE","REQ_SET_GRAVITY_SINCE","REQ_SET_OFFSET_SINCE","REQ_SET_PARENT_CONFIGURE_SINCE","REQ_SET_PARENT_SIZE_SINCE","REQ_SET_REACTIVE_SINCE","REQ_SET_SIZE_SINCE","Request","ResizeX","ResizeY","Right","Right","SetAnchor","SetAnchorRect","SetConstraintAdjustment","SetGravity","SetOffset","SetParentConfigure","SetParentSize","SetReactive","SetSize","SlideX","SlideY","Top","Top","TopLeft","TopLeft","TopRight","TopRight","XdgPositioner","all","as_raw_c_in","as_raw_c_in","as_ref","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","complement","contains","destroy","difference","empty","eq","eq","eq","eq","eq","equivalent","equivalent","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","from_raw","from_raw","from_raw","from_raw","from_raw","from_raw","from_raw_c","from_raw_c","hash","insert","intersection","intersects","into","into","into","into","into","into","into","into_raw","into_raw","is_all","is_destructor","is_destructor","is_empty","not","opcode","opcode","partial_cmp","remove","set","set_anchor","set_anchor_rect","set_constraint_adjustment","set_gravity","set_offset","set_parent_configure","set_parent_size","set_reactive","set_size","since","since","sub","sub_assign","symmetric_difference","to_owned","to_owned","to_owned","to_owned","to_owned","to_raw","to_raw","to_raw","to_raw","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","xdg_positioner_interface","xdg_positioner_requests","anchor","constraint_adjustment","gravity","height","height","parent_height","parent_width","serial","width","width","x","x","y","y","AckConfigure","AlreadyConstructed","Configure","Destroy","EVT_CONFIGURE_SINCE","Error","Event","GetPopup","GetToplevel","NotConstructed","REQ_ACK_CONFIGURE_SINCE","REQ_DESTROY_SINCE","REQ_GET_POPUP_SINCE","REQ_GET_TOPLEVEL_SINCE","REQ_SET_WINDOW_GEOMETRY_SINCE","Request","SetWindowGeometry","UnconfiguredBuffer","XdgSurface","ack_configure","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone","clone_into","clone_into","destroy","eq","eq","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from_raw","from_raw","from_raw","from_raw_c","from_raw_c","get_popup","get_toplevel","into","into","into","into","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","set_window_geometry","since","since","to_owned","to_owned","to_raw","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","xdg_surface_events","xdg_surface_interface","xdg_surface_requests","serial","height","parent","positioner","serial","width","x","y","Activated","Bottom","BottomLeft","BottomRight","Close","Configure","Destroy","EVT_CLOSE_SINCE","EVT_CONFIGURE_SINCE","Event","Fullscreen","Left","Maximized","Move","None","REQ_DESTROY_SINCE","REQ_MOVE_SINCE","REQ_RESIZE_SINCE","REQ_SET_APP_ID_SINCE","REQ_SET_FULLSCREEN_SINCE","REQ_SET_MAXIMIZED_SINCE","REQ_SET_MAX_SIZE_SINCE","REQ_SET_MINIMIZED_SINCE","REQ_SET_MIN_SIZE_SINCE","REQ_SET_PARENT_SINCE","REQ_SET_TITLE_SINCE","REQ_SHOW_WINDOW_MENU_SINCE","REQ_UNSET_FULLSCREEN_SINCE","REQ_UNSET_MAXIMIZED_SINCE","Request","Resize","ResizeEdge","Resizing","Right","SetAppId","SetFullscreen","SetMaxSize","SetMaximized","SetMinSize","SetMinimized","SetParent","SetTitle","ShowWindowMenu","State","TiledBottom","TiledLeft","TiledRight","TiledTop","Top","TopLeft","TopRight","UnsetFullscreen","UnsetMaximized","XdgToplevel","_move","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone","clone","clone_into","clone_into","clone_into","destroy","eq","eq","eq","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_raw","from_raw","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into","into","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","resize","set_app_id","set_fullscreen","set_max_size","set_maximized","set_min_size","set_minimized","set_parent","set_title","show_window_menu","since","since","to_owned","to_owned","to_owned","to_raw","to_raw","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","unset_fullscreen","unset_maximized","xdg_toplevel_events","xdg_toplevel_interface","xdg_toplevel_requests","height","states","width","app_id","edges","height","height","output","parent","seat","seat","seat","serial","serial","serial","title","width","width","x","y","CreatePositioner","DefunctSurfaces","Destroy","EVT_PING_SINCE","Error","Event","GetXdgSurface","InvalidPopupParent","InvalidPositioner","InvalidSurfaceState","NotTheTopmostPopup","Ping","Pong","REQ_CREATE_POSITIONER_SINCE","REQ_DESTROY_SINCE","REQ_GET_XDG_SURFACE_SINCE","REQ_PONG_SINCE","Request","Role","XdgWmBase","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone","clone_into","clone_into","create_positioner","destroy","eq","eq","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from_raw","from_raw","from_raw","from_raw_c","from_raw_c","get_xdg_surface","into","into","into","into","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","pong","since","since","to_owned","to_owned","to_raw","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","xdg_wm_base_events","xdg_wm_base_interface","xdg_wm_base_requests","serial","serial","surface"],"q":[[0,"wayland_protocols"],[7,"wayland_protocols::misc"],[10,"wayland_protocols::misc::gtk_primary_selection"],[11,"wayland_protocols::misc::gtk_primary_selection::client"],[15,"wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_device"],[79,"wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_device::Event"],[81,"wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_device::Request"],[83,"wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_device_manager"],[145,"wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_device_manager::Request"],[146,"wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_offer"],[208,"wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_offer::Event"],[209,"wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_offer::Request"],[211,"wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_source"],[275,"wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_source::Event"],[277,"wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_source::Request"],[278,"wayland_protocols::misc::server_decoration"],[279,"wayland_protocols::misc::server_decoration::client"],[281,"wayland_protocols::misc::server_decoration::client::org_kde_kwin_server_decoration"],[361,"wayland_protocols::misc::server_decoration::client::org_kde_kwin_server_decoration::Event"],[362,"wayland_protocols::misc::server_decoration::client::org_kde_kwin_server_decoration::Request"],[363,"wayland_protocols::misc::server_decoration::client::org_kde_kwin_server_decoration_manager"],[440,"wayland_protocols::misc::server_decoration::client::org_kde_kwin_server_decoration_manager::Event"],[441,"wayland_protocols::misc::server_decoration::client::org_kde_kwin_server_decoration_manager::Request"],[442,"wayland_protocols::misc::zwp_input_method_v2"],[443,"wayland_protocols::misc::zwp_input_method_v2::client"],[447,"wayland_protocols::misc::zwp_input_method_v2::client::zwp_input_method_keyboard_grab_v2"],[512,"wayland_protocols::misc::zwp_input_method_v2::client::zwp_input_method_keyboard_grab_v2::Event"],[526,"wayland_protocols::misc::zwp_input_method_v2::client::zwp_input_method_manager_v2"],[585,"wayland_protocols::misc::zwp_input_method_v2::client::zwp_input_method_manager_v2::Request"],[586,"wayland_protocols::misc::zwp_input_method_v2::client::zwp_input_method_v2"],[675,"wayland_protocols::misc::zwp_input_method_v2::client::zwp_input_method_v2::Event"],[681,"wayland_protocols::misc::zwp_input_method_v2::client::zwp_input_method_v2::Request"],[689,"wayland_protocols::misc::zwp_input_method_v2::client::zwp_input_popup_surface_v2"],[748,"wayland_protocols::misc::zwp_input_method_v2::client::zwp_input_popup_surface_v2::Event"],[752,"wayland_protocols::presentation_time"],[753,"wayland_protocols::presentation_time::client"],[755,"wayland_protocols::presentation_time::client::wp_presentation"],[834,"wayland_protocols::presentation_time::client::wp_presentation::Event"],[835,"wayland_protocols::presentation_time::client::wp_presentation::Request"],[836,"wayland_protocols::presentation_time::client::wp_presentation_feedback"],[952,"wayland_protocols::presentation_time::client::wp_presentation_feedback::Event"],[960,"wayland_protocols::staging"],[961,"wayland_protocols::staging::xdg_activation"],[962,"wayland_protocols::staging::xdg_activation::v1"],[963,"wayland_protocols::staging::xdg_activation::v1::client"],[965,"wayland_protocols::staging::xdg_activation::v1::client::xdg_activation_token_v1"],[1052,"wayland_protocols::staging::xdg_activation::v1::client::xdg_activation_token_v1::Event"],[1053,"wayland_protocols::staging::xdg_activation::v1::client::xdg_activation_token_v1::Request"],[1057,"wayland_protocols::staging::xdg_activation::v1::client::xdg_activation_v1"],[1119,"wayland_protocols::staging::xdg_activation::v1::client::xdg_activation_v1::Request"],[1121,"wayland_protocols::unstable"],[1139,"wayland_protocols::unstable::fullscreen_shell"],[1140,"wayland_protocols::unstable::fullscreen_shell::v1"],[1141,"wayland_protocols::unstable::fullscreen_shell::v1::client"],[1143,"wayland_protocols::unstable::fullscreen_shell::v1::client::zwp_fullscreen_shell_mode_feedback_v1"],[1202,"wayland_protocols::unstable::fullscreen_shell::v1::client::zwp_fullscreen_shell_v1"],[1321,"wayland_protocols::unstable::fullscreen_shell::v1::client::zwp_fullscreen_shell_v1::Event"],[1322,"wayland_protocols::unstable::fullscreen_shell::v1::client::zwp_fullscreen_shell_v1::Request"],[1328,"wayland_protocols::unstable::idle_inhibit"],[1329,"wayland_protocols::unstable::idle_inhibit::v1"],[1330,"wayland_protocols::unstable::idle_inhibit::v1::client"],[1332,"wayland_protocols::unstable::idle_inhibit::v1::client::zwp_idle_inhibit_manager_v1"],[1391,"wayland_protocols::unstable::idle_inhibit::v1::client::zwp_idle_inhibit_manager_v1::Request"],[1392,"wayland_protocols::unstable::idle_inhibit::v1::client::zwp_idle_inhibitor_v1"],[1448,"wayland_protocols::unstable::input_method"],[1449,"wayland_protocols::unstable::input_method::v1"],[1450,"wayland_protocols::unstable::input_method::v1::client"],[1454,"wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1"],[1562,"wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1::Event"],[1571,"wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1::Request"],[1603,"wayland_protocols::unstable::input_method::v1::client::zwp_input_method_v1"],[1660,"wayland_protocols::unstable::input_method::v1::client::zwp_input_method_v1::Event"],[1662,"wayland_protocols::unstable::input_method::v1::client::zwp_input_panel_surface_v1"],[1737,"wayland_protocols::unstable::input_method::v1::client::zwp_input_panel_surface_v1::Request"],[1739,"wayland_protocols::unstable::input_method::v1::client::zwp_input_panel_v1"],[1795,"wayland_protocols::unstable::input_method::v1::client::zwp_input_panel_v1::Request"],[1796,"wayland_protocols::unstable::input_timestamps"],[1797,"wayland_protocols::unstable::input_timestamps::v1"],[1798,"wayland_protocols::unstable::input_timestamps::v1::client"],[1800,"wayland_protocols::unstable::input_timestamps::v1::client::zwp_input_timestamps_manager_v1"],[1865,"wayland_protocols::unstable::input_timestamps::v1::client::zwp_input_timestamps_manager_v1::Request"],[1868,"wayland_protocols::unstable::input_timestamps::v1::client::zwp_input_timestamps_v1"],[1927,"wayland_protocols::unstable::input_timestamps::v1::client::zwp_input_timestamps_v1::Event"],[1930,"wayland_protocols::unstable::keyboard_shortcuts_inhibit"],[1931,"wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1"],[1932,"wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::client"],[1934,"wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::client::zwp_keyboard_shortcuts_inhibit_manager_v1"],[2009,"wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::client::zwp_keyboard_shortcuts_inhibit_manager_v1::Request"],[2011,"wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::client::zwp_keyboard_shortcuts_inhibitor_v1"],[2072,"wayland_protocols::unstable::linux_dmabuf"],[2073,"wayland_protocols::unstable::linux_dmabuf::v1"],[2074,"wayland_protocols::unstable::linux_dmabuf::v1::client"],[2076,"wayland_protocols::unstable::linux_dmabuf::v1::client::zwp_linux_buffer_params_v1"],[2225,"wayland_protocols::unstable::linux_dmabuf::v1::client::zwp_linux_buffer_params_v1::Event"],[2226,"wayland_protocols::unstable::linux_dmabuf::v1::client::zwp_linux_buffer_params_v1::Request"],[2240,"wayland_protocols::unstable::linux_dmabuf::v1::client::zwp_linux_dmabuf_v1"],[2304,"wayland_protocols::unstable::linux_dmabuf::v1::client::zwp_linux_dmabuf_v1::Event"],[2308,"wayland_protocols::unstable::linux_explicit_synchronization"],[2309,"wayland_protocols::unstable::linux_explicit_synchronization::v1"],[2310,"wayland_protocols::unstable::linux_explicit_synchronization::v1::client"],[2313,"wayland_protocols::unstable::linux_explicit_synchronization::v1::client::zwp_linux_buffer_release_v1"],[2370,"wayland_protocols::unstable::linux_explicit_synchronization::v1::client::zwp_linux_buffer_release_v1::Event"],[2371,"wayland_protocols::unstable::linux_explicit_synchronization::v1::client::zwp_linux_explicit_synchronization_v1"],[2446,"wayland_protocols::unstable::linux_explicit_synchronization::v1::client::zwp_linux_explicit_synchronization_v1::Request"],[2447,"wayland_protocols::unstable::linux_explicit_synchronization::v1::client::zwp_linux_surface_synchronization_v1"],[2530,"wayland_protocols::unstable::linux_explicit_synchronization::v1::client::zwp_linux_surface_synchronization_v1::Request"],[2531,"wayland_protocols::unstable::pointer_constraints"],[2532,"wayland_protocols::unstable::pointer_constraints::v1"],[2533,"wayland_protocols::unstable::pointer_constraints::v1::client"],[2536,"wayland_protocols::unstable::pointer_constraints::v1::client::zwp_confined_pointer_v1"],[2600,"wayland_protocols::unstable::pointer_constraints::v1::client::zwp_confined_pointer_v1::Request"],[2601,"wayland_protocols::unstable::pointer_constraints::v1::client::zwp_locked_pointer_v1"],[2668,"wayland_protocols::unstable::pointer_constraints::v1::client::zwp_locked_pointer_v1::Request"],[2671,"wayland_protocols::unstable::pointer_constraints::v1::client::zwp_pointer_constraints_v1"],[2766,"wayland_protocols::unstable::pointer_constraints::v1::client::zwp_pointer_constraints_v1::Request"],[2774,"wayland_protocols::unstable::pointer_gestures"],[2775,"wayland_protocols::unstable::pointer_gestures::v1"],[2776,"wayland_protocols::unstable::pointer_gestures::v1::client"],[2779,"wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gesture_pinch_v1"],[2842,"wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gesture_pinch_v1::Event"],[2854,"wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gesture_swipe_v1"],[2917,"wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gesture_swipe_v1::Event"],[2927,"wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gestures_v1"],[2989,"wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gestures_v1::Request"],[2991,"wayland_protocols::unstable::primary_selection"],[2992,"wayland_protocols::unstable::primary_selection::v1"],[2993,"wayland_protocols::unstable::primary_selection::v1::client"],[2997,"wayland_protocols::unstable::primary_selection::v1::client::zwp_primary_selection_device_manager_v1"],[3059,"wayland_protocols::unstable::primary_selection::v1::client::zwp_primary_selection_device_manager_v1::Request"],[3060,"wayland_protocols::unstable::primary_selection::v1::client::zwp_primary_selection_device_v1"],[3124,"wayland_protocols::unstable::primary_selection::v1::client::zwp_primary_selection_device_v1::Event"],[3126,"wayland_protocols::unstable::primary_selection::v1::client::zwp_primary_selection_device_v1::Request"],[3128,"wayland_protocols::unstable::primary_selection::v1::client::zwp_primary_selection_offer_v1"],[3190,"wayland_protocols::unstable::primary_selection::v1::client::zwp_primary_selection_offer_v1::Event"],[3191,"wayland_protocols::unstable::primary_selection::v1::client::zwp_primary_selection_offer_v1::Request"],[3193,"wayland_protocols::unstable::primary_selection::v1::client::zwp_primary_selection_source_v1"],[3257,"wayland_protocols::unstable::primary_selection::v1::client::zwp_primary_selection_source_v1::Event"],[3259,"wayland_protocols::unstable::primary_selection::v1::client::zwp_primary_selection_source_v1::Request"],[3260,"wayland_protocols::unstable::relative_pointer"],[3261,"wayland_protocols::unstable::relative_pointer::v1"],[3262,"wayland_protocols::unstable::relative_pointer::v1::client"],[3264,"wayland_protocols::unstable::relative_pointer::v1::client::zwp_relative_pointer_manager_v1"],[3323,"wayland_protocols::unstable::relative_pointer::v1::client::zwp_relative_pointer_manager_v1::Request"],[3324,"wayland_protocols::unstable::relative_pointer::v1::client::zwp_relative_pointer_v1"],[3383,"wayland_protocols::unstable::relative_pointer::v1::client::zwp_relative_pointer_v1::Event"],[3389,"wayland_protocols::unstable::tablet"],[3391,"wayland_protocols::unstable::tablet::v1"],[3392,"wayland_protocols::unstable::tablet::v1::client"],[3396,"wayland_protocols::unstable::tablet::v1::client::zwp_tablet_manager_v1"],[3455,"wayland_protocols::unstable::tablet::v1::client::zwp_tablet_manager_v1::Request"],[3456,"wayland_protocols::unstable::tablet::v1::client::zwp_tablet_seat_v1"],[3517,"wayland_protocols::unstable::tablet::v1::client::zwp_tablet_seat_v1::Event"],[3519,"wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1"],[3694,"wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1::Event"],[3718,"wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1::Request"],[3722,"wayland_protocols::unstable::tablet::v1::client::zwp_tablet_v1"],[3789,"wayland_protocols::unstable::tablet::v1::client::zwp_tablet_v1::Event"],[3793,"wayland_protocols::unstable::tablet::v2"],[3794,"wayland_protocols::unstable::tablet::v2::client"],[3802,"wayland_protocols::unstable::tablet::v2::client::zwp_tablet_manager_v2"],[3861,"wayland_protocols::unstable::tablet::v2::client::zwp_tablet_manager_v2::Request"],[3862,"wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_group_v2"],[3931,"wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_group_v2::Event"],[3938,"wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_ring_v2"],[4022,"wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_ring_v2::Event"],[4025,"wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_ring_v2::Request"],[4027,"wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_strip_v2"],[4111,"wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_strip_v2::Event"],[4114,"wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_strip_v2::Request"],[4116,"wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_v2"],[4209,"wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_v2::Event"],[4220,"wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_v2::Request"],[4223,"wayland_protocols::unstable::tablet::v2::client::zwp_tablet_seat_v2"],[4286,"wayland_protocols::unstable::tablet::v2::client::zwp_tablet_seat_v2::Event"],[4289,"wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2"],[4464,"wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2::Event"],[4488,"wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2::Request"],[4492,"wayland_protocols::unstable::tablet::v2::client::zwp_tablet_v2"],[4559,"wayland_protocols::unstable::tablet::v2::client::zwp_tablet_v2::Event"],[4563,"wayland_protocols::unstable::text_input"],[4565,"wayland_protocols::unstable::text_input::v1"],[4566,"wayland_protocols::unstable::text_input::v1::client"],[4568,"wayland_protocols::unstable::text_input::v1::client::zwp_text_input_manager_v1"],[4624,"wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1"],[4872,"wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1::Event"],[4897,"wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1::Request"],[4913,"wayland_protocols::unstable::text_input::v3"],[4914,"wayland_protocols::unstable::text_input::v3::client"],[4916,"wayland_protocols::unstable::text_input::v3::client::zwp_text_input_manager_v3"],[4975,"wayland_protocols::unstable::text_input::v3::client::zwp_text_input_manager_v3::Request"],[4976,"wayland_protocols::unstable::text_input::v3::client::zwp_text_input_v3"],[5176,"wayland_protocols::unstable::text_input::v3::client::zwp_text_input_v3::Event"],[5185,"wayland_protocols::unstable::text_input::v3::client::zwp_text_input_v3::Request"],[5195,"wayland_protocols::unstable::xdg_decoration"],[5196,"wayland_protocols::unstable::xdg_decoration::v1"],[5197,"wayland_protocols::unstable::xdg_decoration::v1::client"],[5199,"wayland_protocols::unstable::xdg_decoration::v1::client::zxdg_decoration_manager_v1"],[5258,"wayland_protocols::unstable::xdg_decoration::v1::client::zxdg_decoration_manager_v1::Request"],[5259,"wayland_protocols::unstable::xdg_decoration::v1::client::zxdg_toplevel_decoration_v1"],[5359,"wayland_protocols::unstable::xdg_decoration::v1::client::zxdg_toplevel_decoration_v1::Event"],[5360,"wayland_protocols::unstable::xdg_decoration::v1::client::zxdg_toplevel_decoration_v1::Request"],[5361,"wayland_protocols::unstable::xdg_foreign"],[5363,"wayland_protocols::unstable::xdg_foreign::v1"],[5364,"wayland_protocols::unstable::xdg_foreign::v1::client"],[5368,"wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_exported_v1"],[5427,"wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_exported_v1::Event"],[5428,"wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_exporter_v1"],[5487,"wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_exporter_v1::Request"],[5488,"wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_imported_v1"],[5550,"wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_imported_v1::Request"],[5551,"wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_importer_v1"],[5610,"wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_importer_v1::Request"],[5611,"wayland_protocols::unstable::xdg_foreign::v2"],[5612,"wayland_protocols::unstable::xdg_foreign::v2::client"],[5616,"wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_exported_v2"],[5675,"wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_exported_v2::Event"],[5676,"wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_exporter_v2"],[5751,"wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_exporter_v2::Request"],[5752,"wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_imported_v2"],[5830,"wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_imported_v2::Request"],[5831,"wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_importer_v2"],[5890,"wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_importer_v2::Request"],[5891,"wayland_protocols::unstable::xdg_output"],[5892,"wayland_protocols::unstable::xdg_output::v1"],[5893,"wayland_protocols::unstable::xdg_output::v1::client"],[5895,"wayland_protocols::unstable::xdg_output::v1::client::zxdg_output_manager_v1"],[5954,"wayland_protocols::unstable::xdg_output::v1::client::zxdg_output_manager_v1::Request"],[5955,"wayland_protocols::unstable::xdg_output::v1::client::zxdg_output_v1"],[6022,"wayland_protocols::unstable::xdg_output::v1::client::zxdg_output_v1::Event"],[6028,"wayland_protocols::unstable::xdg_shell"],[6030,"wayland_protocols::unstable::xdg_shell::v5"],[6031,"wayland_protocols::unstable::xdg_shell::v5::client"],[6034,"wayland_protocols::unstable::xdg_shell::v5::client::xdg_popup"],[6093,"wayland_protocols::unstable::xdg_shell::v5::client::xdg_shell"],[6199,"wayland_protocols::unstable::xdg_shell::v5::client::xdg_shell::Event"],[6200,"wayland_protocols::unstable::xdg_shell::v5::client::xdg_shell::Request"],[6209,"wayland_protocols::unstable::xdg_shell::v5::client::xdg_surface"],[6352,"wayland_protocols::unstable::xdg_shell::v5::client::xdg_surface::Event"],[6356,"wayland_protocols::unstable::xdg_shell::v5::client::xdg_surface::Request"],[6374,"wayland_protocols::unstable::xdg_shell::v6"],[6375,"wayland_protocols::unstable::xdg_shell::v6::client"],[6380,"wayland_protocols::unstable::xdg_shell::v6::client::zxdg_popup_v6"],[6460,"wayland_protocols::unstable::xdg_shell::v6::client::zxdg_popup_v6::Event"],[6464,"wayland_protocols::unstable::xdg_shell::v6::client::zxdg_popup_v6::Request"],[6466,"wayland_protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6"],[6732,"wayland_protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6::Request"],[6743,"wayland_protocols::unstable::xdg_shell::v6::client::zxdg_shell_v6"],[6832,"wayland_protocols::unstable::xdg_shell::v6::client::zxdg_shell_v6::Event"],[6833,"wayland_protocols::unstable::xdg_shell::v6::client::zxdg_shell_v6::Request"],[6835,"wayland_protocols::unstable::xdg_shell::v6::client::zxdg_surface_v6"],[6924,"wayland_protocols::unstable::xdg_shell::v6::client::zxdg_surface_v6::Event"],[6925,"wayland_protocols::unstable::xdg_shell::v6::client::zxdg_surface_v6::Request"],[6932,"wayland_protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6"],[7075,"wayland_protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6::Event"],[7078,"wayland_protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6::Request"],[7095,"wayland_protocols::unstable::xwayland_keyboard_grab"],[7096,"wayland_protocols::unstable::xwayland_keyboard_grab::v1"],[7097,"wayland_protocols::unstable::xwayland_keyboard_grab::v1::client"],[7099,"wayland_protocols::unstable::xwayland_keyboard_grab::v1::client::zwp_xwayland_keyboard_grab_manager_v1"],[7158,"wayland_protocols::unstable::xwayland_keyboard_grab::v1::client::zwp_xwayland_keyboard_grab_manager_v1::Request"],[7160,"wayland_protocols::unstable::xwayland_keyboard_grab::v1::client::zwp_xwayland_keyboard_grab_v1"],[7216,"wayland_protocols::viewporter"],[7217,"wayland_protocols::viewporter::client"],[7219,"wayland_protocols::viewporter::client::wp_viewport"],[7300,"wayland_protocols::viewporter::client::wp_viewport::Request"],[7306,"wayland_protocols::viewporter::client::wp_viewporter"],[7381,"wayland_protocols::viewporter::client::wp_viewporter::Request"],[7382,"wayland_protocols::wlr"],[7383,"wayland_protocols::wlr::unstable"],[7393,"wayland_protocols::wlr::unstable::data_control"],[7394,"wayland_protocols::wlr::unstable::data_control::v1"],[7395,"wayland_protocols::wlr::unstable::data_control::v1::client"],[7399,"wayland_protocols::wlr::unstable::data_control::v1::client::zwlr_data_control_device_v1"],[7486,"wayland_protocols::wlr::unstable::data_control::v1::client::zwlr_data_control_device_v1::Event"],[7489,"wayland_protocols::wlr::unstable::data_control::v1::client::zwlr_data_control_device_v1::Request"],[7491,"wayland_protocols::wlr::unstable::data_control::v1::client::zwlr_data_control_manager_v1"],[7553,"wayland_protocols::wlr::unstable::data_control::v1::client::zwlr_data_control_manager_v1::Request"],[7554,"wayland_protocols::wlr::unstable::data_control::v1::client::zwlr_data_control_offer_v1"],[7616,"wayland_protocols::wlr::unstable::data_control::v1::client::zwlr_data_control_offer_v1::Event"],[7617,"wayland_protocols::wlr::unstable::data_control::v1::client::zwlr_data_control_offer_v1::Request"],[7619,"wayland_protocols::wlr::unstable::data_control::v1::client::zwlr_data_control_source_v1"],[7699,"wayland_protocols::wlr::unstable::data_control::v1::client::zwlr_data_control_source_v1::Event"],[7701,"wayland_protocols::wlr::unstable::data_control::v1::client::zwlr_data_control_source_v1::Request"],[7702,"wayland_protocols::wlr::unstable::export_dmabuf"],[7703,"wayland_protocols::wlr::unstable::export_dmabuf::v1"],[7704,"wayland_protocols::wlr::unstable::export_dmabuf::v1::client"],[7706,"wayland_protocols::wlr::unstable::export_dmabuf::v1::client::zwlr_export_dmabuf_frame_v1"],[7805,"wayland_protocols::wlr::unstable::export_dmabuf::v1::client::zwlr_export_dmabuf_frame_v1::Event"],[7825,"wayland_protocols::wlr::unstable::export_dmabuf::v1::client::zwlr_export_dmabuf_manager_v1"],[7884,"wayland_protocols::wlr::unstable::export_dmabuf::v1::client::zwlr_export_dmabuf_manager_v1::Request"],[7886,"wayland_protocols::wlr::unstable::foreign_toplevel"],[7887,"wayland_protocols::wlr::unstable::foreign_toplevel::v1"],[7888,"wayland_protocols::wlr::unstable::foreign_toplevel::v1::client"],[7890,"wayland_protocols::wlr::unstable::foreign_toplevel::v1::client::zwlr_foreign_toplevel_handle_v1"],[8025,"wayland_protocols::wlr::unstable::foreign_toplevel::v1::client::zwlr_foreign_toplevel_handle_v1::Event"],[8031,"wayland_protocols::wlr::unstable::foreign_toplevel::v1::client::zwlr_foreign_toplevel_handle_v1::Request"],[8038,"wayland_protocols::wlr::unstable::foreign_toplevel::v1::client::zwlr_foreign_toplevel_manager_v1"],[8099,"wayland_protocols::wlr::unstable::foreign_toplevel::v1::client::zwlr_foreign_toplevel_manager_v1::Event"],[8100,"wayland_protocols::wlr::unstable::gamma_control"],[8101,"wayland_protocols::wlr::unstable::gamma_control::v1"],[8102,"wayland_protocols::wlr::unstable::gamma_control::v1::client"],[8104,"wayland_protocols::wlr::unstable::gamma_control::v1::client::zwlr_gamma_control_manager_v1"],[8163,"wayland_protocols::wlr::unstable::gamma_control::v1::client::zwlr_gamma_control_manager_v1::Request"],[8164,"wayland_protocols::wlr::unstable::gamma_control::v1::client::zwlr_gamma_control_v1"],[8244,"wayland_protocols::wlr::unstable::gamma_control::v1::client::zwlr_gamma_control_v1::Event"],[8245,"wayland_protocols::wlr::unstable::gamma_control::v1::client::zwlr_gamma_control_v1::Request"],[8246,"wayland_protocols::wlr::unstable::input_inhibitor"],[8247,"wayland_protocols::wlr::unstable::input_inhibitor::v1"],[8248,"wayland_protocols::wlr::unstable::input_inhibitor::v1::client"],[8250,"wayland_protocols::wlr::unstable::input_inhibitor::v1::client::zwlr_input_inhibit_manager_v1"],[8322,"wayland_protocols::wlr::unstable::input_inhibitor::v1::client::zwlr_input_inhibitor_v1"],[8378,"wayland_protocols::wlr::unstable::layer_shell"],[8379,"wayland_protocols::wlr::unstable::layer_shell::v1"],[8380,"wayland_protocols::wlr::unstable::layer_shell::v1::client"],[8382,"wayland_protocols::wlr::unstable::layer_shell::v1::client::zwlr_layer_shell_v1"],[8478,"wayland_protocols::wlr::unstable::layer_shell::v1::client::zwlr_layer_shell_v1::Request"],[8482,"wayland_protocols::wlr::unstable::layer_shell::v1::client::zwlr_layer_surface_v1"],[8661,"wayland_protocols::wlr::unstable::layer_shell::v1::client::zwlr_layer_surface_v1::Event"],[8664,"wayland_protocols::wlr::unstable::layer_shell::v1::client::zwlr_layer_surface_v1::Request"],[8676,"wayland_protocols::wlr::unstable::output_management"],[8677,"wayland_protocols::wlr::unstable::output_management::v1"],[8678,"wayland_protocols::wlr::unstable::output_management::v1::client"],[8683,"wayland_protocols::wlr::unstable::output_management::v1::client::zwlr_output_configuration_head_v1"],[8771,"wayland_protocols::wlr::unstable::output_management::v1::client::zwlr_output_configuration_head_v1::Request"],[8779,"wayland_protocols::wlr::unstable::output_management::v1::client::zwlr_output_configuration_v1"],[8872,"wayland_protocols::wlr::unstable::output_management::v1::client::zwlr_output_configuration_v1::Request"],[8874,"wayland_protocols::wlr::unstable::output_management::v1::client::zwlr_output_head_v1"],[8953,"wayland_protocols::wlr::unstable::output_management::v1::client::zwlr_output_head_v1::Event"],[8967,"wayland_protocols::wlr::unstable::output_management::v1::client::zwlr_output_manager_v1"],[9033,"wayland_protocols::wlr::unstable::output_management::v1::client::zwlr_output_manager_v1::Event"],[9035,"wayland_protocols::wlr::unstable::output_management::v1::client::zwlr_output_manager_v1::Request"],[9036,"wayland_protocols::wlr::unstable::output_management::v1::client::zwlr_output_mode_v1"],[9097,"wayland_protocols::wlr::unstable::output_management::v1::client::zwlr_output_mode_v1::Event"],[9100,"wayland_protocols::wlr::unstable::output_power_management"],[9101,"wayland_protocols::wlr::unstable::output_power_management::v1"],[9102,"wayland_protocols::wlr::unstable::output_power_management::v1::client"],[9104,"wayland_protocols::wlr::unstable::output_power_management::v1::client::zwlr_output_power_manager_v1"],[9163,"wayland_protocols::wlr::unstable::output_power_management::v1::client::zwlr_output_power_manager_v1::Request"],[9164,"wayland_protocols::wlr::unstable::output_power_management::v1::client::zwlr_output_power_v1"],[9261,"wayland_protocols::wlr::unstable::output_power_management::v1::client::zwlr_output_power_v1::Event"],[9262,"wayland_protocols::wlr::unstable::output_power_management::v1::client::zwlr_output_power_v1::Request"],[9263,"wayland_protocols::wlr::unstable::screencopy"],[9264,"wayland_protocols::wlr::unstable::screencopy::v1"],[9265,"wayland_protocols::wlr::unstable::screencopy::v1::client"],[9267,"wayland_protocols::wlr::unstable::screencopy::v1::client::zwlr_screencopy_frame_v1"],[9415,"wayland_protocols::wlr::unstable::screencopy::v1::client::zwlr_screencopy_frame_v1::Event"],[9430,"wayland_protocols::wlr::unstable::screencopy::v1::client::zwlr_screencopy_frame_v1::Request"],[9432,"wayland_protocols::wlr::unstable::screencopy::v1::client::zwlr_screencopy_manager_v1"],[9494,"wayland_protocols::wlr::unstable::screencopy::v1::client::zwlr_screencopy_manager_v1::Request"],[9502,"wayland_protocols::wlr::unstable::virtual_pointer"],[9503,"wayland_protocols::wlr::unstable::virtual_pointer::v1"],[9504,"wayland_protocols::wlr::unstable::virtual_pointer::v1::client"],[9506,"wayland_protocols::wlr::unstable::virtual_pointer::v1::client::zwlr_virtual_pointer_manager_v1"],[9568,"wayland_protocols::wlr::unstable::virtual_pointer::v1::client::zwlr_virtual_pointer_manager_v1::Request"],[9571,"wayland_protocols::wlr::unstable::virtual_pointer::v1::client::zwlr_virtual_pointer_v1"],[9668,"wayland_protocols::wlr::unstable::virtual_pointer::v1::client::zwlr_virtual_pointer_v1::Request"],[9689,"wayland_protocols::xdg_shell"],[9690,"wayland_protocols::xdg_shell::client"],[9695,"wayland_protocols::xdg_shell::client::xdg_popup"],[9780,"wayland_protocols::xdg_shell::client::xdg_popup::Event"],[9785,"wayland_protocols::xdg_shell::client::xdg_popup::Request"],[9789,"wayland_protocols::xdg_shell::client::xdg_positioner"],[9996,"wayland_protocols::xdg_shell::client::xdg_positioner::Request"],[10010,"wayland_protocols::xdg_shell::client::xdg_surface"],[10099,"wayland_protocols::xdg_shell::client::xdg_surface::Event"],[10100,"wayland_protocols::xdg_shell::client::xdg_surface::Request"],[10107,"wayland_protocols::xdg_shell::client::xdg_toplevel"],[10254,"wayland_protocols::xdg_shell::client::xdg_toplevel::Event"],[10257,"wayland_protocols::xdg_shell::client::xdg_toplevel::Request"],[10274,"wayland_protocols::xdg_shell::client::xdg_wm_base"],[10363,"wayland_protocols::xdg_shell::client::xdg_wm_base::Event"],[10364,"wayland_protocols::xdg_shell::client::xdg_wm_base::Request"]],"d":["Misc protocols","Presentation time protocol","Staging protocols from wayland-protocols","Unstable protocols from wayland-protocols","Viewporter protocol","wlr-procotols extension family","XDG Shell protocol","Gtk primary selection protocol","KDE server decoration protocol","Input method v2 unstable","Client-side API of this protocol","","X primary selection emulation","offer to transfer primary selection contents","offer to replace the contents of the primary selection","introduce a new wp_primary_selection_offer","destroy the primary selection device","The minimal object version supporting this event","The minimal object version supporting this event","","","The minimal object version supporting this request","The minimal object version supporting this request","","advertise a new primary selection","set the primary selection","","","","","","","","","","","","","","","destroy the primary selection device","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","set the primary selection","","","","","","","","","","","","","","","","","create a new primary selection source","destroy the primary selection device manager","","create a new primary selection device","","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","","","","","","","","","","","","","","","","create a new primary selection source","destroy the primary selection device manager","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","create a new primary selection device","C representation of this interface, for interop","C-representation of the messages of this interface, for …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","destroy the primary selection offer","The minimal object version supporting this event","","","advertise offered mime type","The minimal object version supporting this request","The minimal object version supporting this request","request that the data is transferred","","","","","","","","","","","","","","","","destroy the primary selection offer","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","request that the data is transferred","","","","","","","","","","","","","","","","request for primary selection contents was canceled","destroy the primary selection source","The minimal object version supporting this event","The minimal object version supporting this event","","","add an offered mime type","The minimal object version supporting this request","The minimal object version supporting this request","","send the primary selection contents","","","","","","","","","","","","","","","destroy the primary selection source","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","add an offered mime type","","","","","","","","","","","","","","","","","","Client-side API of this protocol","","Server side window decoration manager","Client-side decoration: The decoration is part of the …","The minimal object version supporting this event","","Possible values to use in request_mode and the event mode.","The new decoration mode applied by the server","Undecorated: The surface is not decorated at all, neither …","","The minimal object version supporting this request","The minimal object version supporting this request","release the server decoration object","","The decoration mode the surface wants to use.","Server-side decoration: The server embeds the surface into …","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","release the server decoration object","The decoration mode the surface wants to use.","","","","","","","","","","","","","","","","","","","","Client-side decoration: The decoration is part of the …","Create a server-side decoration object for a given surface","The default mode used on the server","The minimal object version supporting this event","","Possible values to use in request_mode and the event mode.","Undecorated: The surface is not decorated at all, neither …","","The minimal object version supporting this request","","Server-side decoration: The server embeds the surface into …","","","","","","","","","","","","","","","","","","","Create a server-side decoration object for a given surface","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","","","","","","","","","","","","","","","","","","Client-side API of this protocol","keyboard grab","input method manager","input method","popup surface","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","","key event","keyboard mapping","modifier and group state","The minimal object version supporting this request","release the grab object","repeat rate and delay","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","release the grab object","","","","","","","","","","","","","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","","","","","","","","","","","","","destroy the input method manager","","request an input method object","The minimal object version supporting this request","The minimal object version supporting this request","","","","","","","","","","","","","","","","","destroy the input method manager","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","request an input method object","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","input method has been requested","apply state","commit string","content purpose and hint","deactivate event","delete text","destroy the text input","apply state","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","","create popup surface","grab hardware keyboard","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","","pre-edit string","surrounding text event","indicates the cause of surrounding text change","input method unavailable","","","","","","","","","","","","","","","","apply state","commit string","delete text","destroy the text input","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","create popup surface","grab hardware keyboard","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","pre-edit string","","","","","","","","","","","","","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","","","","","","","","","","","","","This is a destructor, once sent this object cannot be used …","The minimal object version supporting this event","","The minimal object version supporting this request","","set text input area position","","","","","","","","","","","","","","","","This is a destructor, you cannot send requests to this …","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","","","Client-side API of this protocol","timed presentation related wl_surface requests","presentation time feedback event","clock ID for timestamps","unbind from the presentation interface","The minimal object version supporting this event","fatal presentation errors","","request presentation feedback information","invalid flag","invalid value in tv_nsec","The minimal object version supporting this request","The minimal object version supporting this request","","","","","","","","","","","","","","","","","","","","","unbind from the presentation interface","","","","request presentation feedback information","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","the content update was not displayed","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","","hardware provided the presentation timestamp","hardware signalled the start of the presentation","bitmask of flags in presented event","the content update was displayed","","presentation synchronized to this output","presentation was vsync’d","","presentation was done zero-copy","Returns the set containing all flags.","","","","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","","","","","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Returns <code>true</code> if all flags are currently set.","","","Returns <code>true</code> if no flags are currently stored.","Returns the complement of this set of flags.","","","","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","","","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","","","","Toggles the specified flags in-place.","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","C-representation of the messages of this interface, for …","C representation of this interface, for interop","","","","","","","","","The way for a client to pass focus to another toplevel is …","","Client-side API of this protocol","an exported activation handle","interface for activating surfaces","The token has already been used previously","issues the token request","destroy the xdg_activation_token_v1 object","the exported activation token","The minimal object version supporting this event","","","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","","specifies the application being activated","specifies the seat and serial of the activating event","specifies the application being activated","","","","","","","","","","","","","","","","","","","","issues the token request","destroy the xdg_activation_token_v1 object","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","specifies the application being activated","specifies the seat and serial of the activating event","specifies the application being activated","","","","","","","","","","","","","","","","","","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","","","","notify new interaction being available","destroy the xdg_activation object","","requests a token","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","","","notify new interaction being available","","","","","","","","","","","","","","","destroy the xdg_activation object","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","requests a token","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","Fullscreen shell protocol","Screensaver inhibition protocol","Input method protocol","Input timestamps protocol","Protocol for inhibiting the compositor keyboard shortcuts","Linux DMA-BUF protocol","Linux explicit synchronization protocol","protocol for constraining pointer motions","Pointer gestures protocol","Primary selection protocol","protocol for relative pointer motion events","Wayland protocol for graphics tablets","Text input protocol","This interface allows a compositor to announce support for …","Protocol for exporting xdg surface handles","Protocol to describe output regions","XDG Shell protocol","Protocol for grabbing the keyboard from Xwayland","","Client-side API of this protocol","","displays a single surface per output","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","","mode switch failed","mode switch succeeded","mode switch cancelled","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","C-representation of the messages of this interface, for …","C representation of this interface, for interop","compositor is capable of almost any output mode","capabilities advertised by the compositor","advertises a capability of the compositor","center the surface on the output","compositor has a separate cursor plane","no preference, apply default policy","The minimal object version supporting this event","wl_fullscreen_shell error values","","present_method is not known","different method to set the surface fullscreen","present surface for display","present surface for display at a particular mode","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","release the wl_fullscreen_shell interface","","given wl_surface has another role","scale the surface to the size of the output ignoring …","scale the surface, preserving aspect ratio, to the largest …","scale the surface, preserving aspect ratio, to fully fill …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","present surface for display","present surface for display at a particular mode","release the wl_fullscreen_shell interface","","","","","","","","","","","","","","","","","","","","","","","","","","","","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","","","","","","","Client-side API of this protocol","control behavior when display idles","context object for inhibiting idle behavior","create a new inhibitor object","destroy the idle inhibitor object","","The minimal object version supporting this request","The minimal object version supporting this request","","","","","","","","","","","","","","","","","create a new inhibitor object","destroy the idle inhibitor object","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","destroy the idle inhibitor object","","The minimal object version supporting this request","","","","","","","","","","","","","","","","","destroy the idle inhibitor object","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","Client-side API of this protocol","input method context","input method","","interface for implementing keyboards","","commit string","","set cursor to a new position","delete text","This is a destructor, once sent this object cannot be used …","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","","grab hardware keyboard","","forward key event","keysym","","forward modifiers event","","pre-edit cursor","pre-edit string","pre-edit styling","","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","","","surrounding text event","","","","","","","","","","","","","","","","","commit string","set cursor to a new position","delete text","This is a destructor, you cannot send requests to this …","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","grab hardware keyboard","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","forward key event","keysym","","forward modifiers event","","","","pre-edit cursor","pre-edit string","pre-edit styling","","","","","","","","","","","","","","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","activate event","deactivate event","The minimal object version supporting this event","The minimal object version supporting this event","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","C-representation of the messages of this interface, for …","C representation of this interface, for interop","","","","","","The minimal object version supporting this request","The minimal object version supporting this request","","set the surface type as an overlay panel","set the surface type as a keyboard","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","set the surface type as an overlay panel","set the surface type as a keyboard","","","","","","","","","","","","","","","","","","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","","","The minimal object version supporting this request","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","Client-side API of this protocol","context object for high-resolution input timestamps","context object for input timestamps","destroy the input timestamps manager object","","subscribe to high-resolution keyboard timestamp events","subscribe to high-resolution pointer timestamp events","subscribe to high-resolution touch timestamp events","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","","","","","","","","","","","","","","","","","destroy the input timestamps manager object","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","subscribe to high-resolution keyboard timestamp events","subscribe to high-resolution pointer timestamp events","subscribe to high-resolution touch timestamp events","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","","destroy the input timestamps object","The minimal object version supporting this event","","The minimal object version supporting this request","","high-resolution timestamp event","","","","","","","","","","","","","","","","destroy the input timestamps object","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","","","Client-side API of this protocol","context object for keyboard grab_manager","context object for keyboard shortcuts inhibitor","the shortcuts are already inhibited for this surface","destroy the keyboard shortcuts inhibitor object","","","create a new keyboard shortcuts inhibitor object","The minimal object version supporting this request","The minimal object version supporting this request","","","","","","","","","","","","","","","","","","","","","destroy the keyboard shortcuts inhibitor object","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","create a new keyboard shortcuts inhibitor object","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","shortcuts are inhibited","destroy the keyboard shortcuts inhibitor object","The minimal object version supporting this event","The minimal object version supporting this event","","shortcuts are restored","The minimal object version supporting this request","","","","","","","","","","","","","","","","","destroy the keyboard shortcuts inhibitor object","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","Client-side API of this protocol","parameters for creating a dmabuf-based wl_buffer","factory for creating dmabuf-based wl_buffers","add a dmabuf to the temporary set","the dmabuf_batch object has already been used to create a …","bottom field first","create a wl_buffer from the given dmabufs","immediately create a wl_buffer from the given dmabufs","buffer creation succeeded","delete this object, used or not","The minimal object version supporting this event","The minimal object version supporting this event","","","buffer creation failed","","missing or too many planes to create a buffer","content is interlaced","invalid width or height","format not supported","invalid wl_buffer resulted from importing dmabufs via the …","offset + stride * height goes out of dmabuf bounds","plane index out of bounds","the plane index was already set","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","","contents are y-inverted","","add a dmabuf to the temporary set","Returns the set containing all flags.","","","","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","create a wl_buffer from the given dmabufs","immediately create a wl_buffer from the given dmabufs","delete this object, used or not","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","","","","","","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Returns <code>true</code> if all flags are currently set.","","","Returns <code>true</code> if no flags are currently stored.","Returns the complement of this set of flags.","","","","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","","","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","","","","","","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","","","","","","","","","","","","","","create a temporary object for buffer parameters","unbind the factory","The minimal object version supporting this event","The minimal object version supporting this event","","supported buffer format","supported buffer format modifier","The minimal object version supporting this request","The minimal object version supporting this request","","","","","","","","","","","","","","","","","create a temporary object for buffer parameters","unbind the factory","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","","","","Client-side API of this protocol","buffer release explicit synchronization","protocol for providing explicit synchronization","per-surface explicit synchronization support","The minimal object version supporting this event","The minimal object version supporting this event","","release buffer with fence","release buffer immediately","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","C-representation of the messages of this interface, for …","C representation of this interface, for interop","","destroy explicit synchronization factory object","","","extend surface interface for explicit synchronization","The minimal object version supporting this request","The minimal object version supporting this request","","the surface already has a synchronization object associated","","","","","","","","","","","","","","","","","","","","destroy explicit synchronization factory object","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","extend surface interface for explicit synchronization","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","destroy synchronization object","multiple fences added for a single surface commit","multiple releases added for a single surface commit","","","release fence for last-attached buffer","the fence specified by the client could not be imported","no buffer was attached","the associated wl_surface was destroyed","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","","set the acquire fence","the buffer does not support explicit synchronization","","","","","","","","","","","","","","","","","","","","destroy synchronization object","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","release fence for last-attached buffer","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","set the acquire fence","","","","","","","","","","","","","","","","","","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","Client-side API of this protocol","confined pointer object","receive relative pointer motion events","constrain the movement of a pointer","pointer confined","destroy the confined pointer object","The minimal object version supporting this event","The minimal object version supporting this event","","The minimal object version supporting this request","The minimal object version supporting this request","","set a new confine region","pointer unconfined","","","","","","","","","","","","","","","","destroy the confined pointer object","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","set a new confine region","","","","","","","","","","","","","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","destroy the locked pointer object","The minimal object version supporting this event","The minimal object version supporting this event","","lock activation event","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","","set the pointer cursor position hint","set a new lock region","lock deactivation event","","","","","","","","","","","","","","","","destroy the locked pointer object","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","set the pointer cursor position hint","set a new lock region","","","","","","","","","","","","","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","","pointer constraint already requested on that surface","confine pointer to a region","destroy the pointer constraints manager object","wp_pointer_constraints error values","","constraint lifetime","lock pointer to a position","the pointer constraint is defunct once deactivated","the pointer constraint may reactivate","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","","","","","","","","","","","","","","","","","","","","","","","","","confine pointer to a region","destroy the pointer constraints manager object","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","lock pointer to a position","","","","","","","","","","","","","","","","","","","","","","","","","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","","","","","","","","Client-side API of this protocol","a pinch gesture object","a swipe gesture object","touchpad gestures","multi-finger pinch begin","destroy the pinch gesture object","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","multi-finger pinch end","","The minimal object version supporting this request","","multi-finger pinch motion","","","","","","","","","","","","","","","","destroy the pinch gesture object","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","","","","","","","","","","","multi-finger swipe begin","destroy the pointer swipe gesture object","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","multi-finger swipe end","","The minimal object version supporting this request","","multi-finger swipe motion","","","","","","","","","","","","","","","","destroy the pointer swipe gesture object","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","","","","","","","","","","get pinch gesture","get swipe gesture","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","destroy the pointer gesture object","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","get pinch gesture","get swipe gesture","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","destroy the pointer gesture object","","","","","","","","","","","","","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","","Client-side API of this protocol","X primary selection emulation","","offer to transfer primary selection contents","offer to replace the contents of the primary selection","create a new primary selection source","destroy the primary selection device manager","","create a new primary selection device","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","","","","","","","","","","","","","","","","","create a new primary selection source","destroy the primary selection device manager","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","create a new primary selection device","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","introduce a new wp_primary_selection_offer","destroy the primary selection device","The minimal object version supporting this event","The minimal object version supporting this event","","The minimal object version supporting this request","The minimal object version supporting this request","","advertise a new primary selection","set the primary selection","","","","","","","","","","","","","","","","destroy the primary selection device","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","set the primary selection","","","","","","","","","","","","","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","","","destroy the primary selection offer","The minimal object version supporting this event","","advertise offered mime type","The minimal object version supporting this request","The minimal object version supporting this request","request that the data is transferred","","","","","","","","","","","","","","","","","destroy the primary selection offer","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","request that the data is transferred","","","","","","","","","","","","","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","","request for primary selection contents was canceled","destroy the primary selection source","The minimal object version supporting this event","The minimal object version supporting this event","","add an offered mime type","The minimal object version supporting this request","The minimal object version supporting this request","","send the primary selection contents","","","","","","","","","","","","","","","","destroy the primary selection source","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","add an offered mime type","","","","","","","","","","","","","","","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","","","Client-side API of this protocol","get relative pointer objects","relative pointer object","destroy the relative pointer manager object","","get a relative pointer object","The minimal object version supporting this request","The minimal object version supporting this request","","","","","","","","","","","","","","","","","destroy the relative pointer manager object","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","get a relative pointer object","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","release the relative pointer object","The minimal object version supporting this event","","The minimal object version supporting this request","relative pointer motion","","","","","","","","","","","","","","","","","release the relative pointer object","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","","","","","","","Client-side API of this protocol","controller object for graphic tablet devices","controller object for graphic tablet devices of a seat","a physical tablet tool","graphics tablet device","release the memory for the tablet manager object","","get the tablet seat","The minimal object version supporting this request","The minimal object version supporting this request","","","","","","","","","","","","","","","","","release the memory for the tablet manager object","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","get the tablet seat","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","release the memory for the tablet seat object","The minimal object version supporting this event","The minimal object version supporting this event","","The minimal object version supporting this request","","new device notification","a new tool has been used with a tablet","","","","","","","","","","","","","","","","release the memory for the tablet seat object","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","Airbrush","Brush","button event","physical button state","capability flags for a tool","tool capability notification","destroy the tool object","Distance axis","distance change event","tool description events sequence complete","tablet tool is making contact","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","Eraser","","","Finger","frame event","hardware id notification in Wacom’s format","unique hardware serial number of the tool","Lens","motion event","Mouse","Pen","Pencil","button is pressed","Pressure axis","pressure change event","proximity in event","proximity out event","The minimal object version supporting this request","The minimal object version supporting this request","button is not pressed","tool removed","","given wl_surface has another role","Z-rotation axis","z-rotation change event","set the tablet tool’s surface","Slider axis","Slider position change event","Tilt axes","tilt change event","a physical tool type","tool type","tablet tool is no longer making contact","Wheel axis","Wheel delta event","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","destroy the tool object","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","set the tablet tool’s surface","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","destroy the tablet object","tablet description events sequence complete","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","","tablet device USB vendor/product id","tablet device name","path to the device","The minimal object version supporting this request","tablet removed event","","","","","","","","","","","","","","","","","destroy the tablet object","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","","","Client-side API of this protocol","controller object for graphic tablet devices","a set of buttons, rings and strips","pad ring","pad strip","a set of buttons, rings and strips","controller object for graphic tablet devices of a seat","a physical tablet tool","graphics tablet device","release the memory for the tablet manager object","","get the tablet seat","The minimal object version supporting this request","The minimal object version supporting this request","","","","","","","","","","","","","","","","","release the memory for the tablet manager object","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","get the tablet seat","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","buttons announced","destroy the pad object","tablet group description events sequence complete","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","","mode switch event","mode-switch ability announced","The minimal object version supporting this request","","ring announced","strip announced","","","","","","","","","","","","","","","","destroy the pad object","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","","","","","","angle changed","destroy the ring object","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","","finger","end of a ring event sequence","The minimal object version supporting this request","The minimal object version supporting this request","","set compositor feedback","ring axis source","ring event source","interaction stopped","","","","","","","","","","","","","","","","","","","","destroy the ring object","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","set compositor feedback","","","","","","","","","","","","","","","","","","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","","","","destroy the strip object","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","","finger","end of a strip event sequence","position changed","The minimal object version supporting this request","The minimal object version supporting this request","","set compositor feedback","strip axis source","strip event source","interaction stopped","","","","","","","","","","","","","","","","","","","","destroy the strip object","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","set compositor feedback","","","","","","","","","","","","","","","","","","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","","","","physical button state","physical button state","buttons announced","destroy the pad object","pad description event sequence complete","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","enter event","","group announced","enter event","path to the device","the button is pressed","The minimal object version supporting this request","The minimal object version supporting this request","the button is not pressed","pad removed event","","set compositor feedback","","","","","","","","","","","","","","","","","","","","destroy the pad object","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","set compositor feedback","","","","","","","","","","","","","","","","","","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","","","","","","","","","","","","","release the memory for the tablet seat object","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","","new pad notification","The minimal object version supporting this request","","new device notification","a new tool has been used with a tablet","","","","","","","","","","","","","","","","release the memory for the tablet seat object","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","","Airbrush","Brush","button event","physical button state","capability flags for a tool","tool capability notification","destroy the tool object","Distance axis","distance change event","tool description events sequence complete","tablet tool is making contact","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","Eraser","","","Finger","frame event","hardware id notification in Wacom’s format","unique hardware serial number of the tool","Lens","motion event","Mouse","Pen","Pencil","button is pressed","Pressure axis","pressure change event","proximity in event","proximity out event","The minimal object version supporting this request","The minimal object version supporting this request","button is not pressed","tool removed","","given wl_surface has another role","Z-rotation axis","z-rotation change event","set the tablet tool’s surface","Slider axis","Slider position change event","Tilt axes","tilt change event","a physical tool type","tool type","tablet tool is no longer making contact","Wheel axis","Wheel delta event","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","destroy the tool object","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","set the tablet tool’s surface","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","destroy the tablet object","tablet description events sequence complete","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","","tablet device USB vendor/product id","tablet device name","path to the device","The minimal object version supporting this request","tablet removed event","","","","","","","","","","","","","","","","","destroy the tablet object","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","","","","","Client-side API of this protocol","text input manager","text input","create text input","","The minimal object version supporting this request","","","","","","","","","","","","","","","","","create text input","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","C representation of this interface, for interop","C-representation of the messages of this interface, for …","request activation","","allow only alphabetic characters","automatic text direction based on text and language","switch to uppercase letters at the start of a sentence","suggest word completions","suggest word corrections","","commit","content hint","content purpose","set cursor to new position","input a date","input a date and time","request deactivation","default style for composing text","auto completion, correction and capitalization","delete surrounding text","allow only digits","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","input an email address","enter event","","characters should be hidden","hide input panels","","","","state of the input panel","","keysym","language","just latin characters should be entered","leave event","prefer lowercase letters","left-to-right","modifiers map","the text input is multiline","input a name of a person","style should be the same as in non-composing text","no special behaviour","default input, allowing all characters","input a number (including decimal separator and sign)","input a password (combine with password or sensitive_data …","hidden and sensitive text","input a phone number","pre-edit cursor","pre-edit","","pre-edit styling","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","","reset","right-to-left","","typed text should not be stored","set content purpose and hint","","sets preferred language","sets the surrounding text","show input panels","input for a terminal","","text direction","input a time","prefer casing for titles and headings (can be language …","","prefer uppercase letters","input an URL","","request activation","Returns the set containing all flags.","","","","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","request deactivation","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","","","","","","","","","hide input panels","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Returns <code>true</code> if all flags are currently set.","","","Returns <code>true</code> if no flags are currently stored.","Returns the complement of this set of flags.","","","","Removes the specified flags in-place.","reset","Inserts or removes the specified flags depending on the …","set content purpose and hint","","sets preferred language","sets the surrounding text","show input panels","","","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","","","","","","","","","","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Client-side API of this protocol","text input manager","text input","Destroy the wp_text_input_manager","","create a new text input object","The minimal object version supporting this request","The minimal object version supporting this request","","","","","","","","","","","","","","","","","Destroy the wp_text_input_manager","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","create a new text input object","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","allow only alphabetic characters","switch to uppercase letters at the start of a sentence","text change reason","commit state","text commit","suggest word completions","content hint","content purpose","input a date","input a date and time","delete surrounding text","Destroy the wp_text_input","allow only digits","Disable text input on a surface","apply changes","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","input an email address","Request text input to be enabled","enter event","","characters should be hidden","input method caused the change","just Latin characters should be entered","leave event","prefer lowercase letters","the text input is multiline","input a name of a person","no special behavior","default input, allowing all characters","input a number (including decimal separator and sign)","something else than the input method caused the change","input a password (combine with sensitive_data hint)","input a phone number","input is a numeric password (combine with sensitive_data …","pre-edit","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","","typed text should not be stored","set content purpose and hint","set cursor position","sets the surrounding text","indicates the cause of surrounding text change","suggest word corrections","input for a terminal","input a time","prefer casing for titles and headings (can be language …","prefer uppercase letters","input an URL","","Returns the set containing all flags.","","","","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","commit state","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Destroy the wp_text_input","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Disable text input on a surface","Returns an empty set of flags.","Request text input to be enabled","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","","","","","","","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Returns <code>true</code> if all flags are currently set.","","","Returns <code>true</code> if no flags are currently stored.","Returns the complement of this set of flags.","","","","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","set content purpose and hint","set cursor position","sets the surrounding text","indicates the cause of surrounding text change","","","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","","","","","","","","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","","","","","","","","","","","","","","","","","","","Client-side API of this protocol","window decoration manager","decoration object for a toplevel surface","destroy the decoration manager object","","create a new toplevel decoration object","The minimal object version supporting this request","The minimal object version supporting this request","","","","","","","","","","","","","","","","","destroy the decoration manager object","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","create a new toplevel decoration object","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","xdg_toplevel already has a decoration object","no server-side window decoration","suggest a surface change","destroy the decoration object","The minimal object version supporting this event","","","window decoration modes","xdg_toplevel destroyed before the decoration object","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","","server-side window decoration","set the decoration mode","xdg_toplevel has a buffer attached before configure","unset the decoration mode","","","","","","","","","","","","","","","","","","","","","","","","destroy the decoration object","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","set the decoration mode","","","","","","","","","","","","","","","","","","","","","","","unset the decoration mode","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","","","Client-side API of this protocol","an exported surface handle","interface for exporting surfaces","an imported surface handle","interface for importing surfaces","unexport the exported surface","The minimal object version supporting this event","","the exported surface handle","The minimal object version supporting this request","","","","","","","","","","","","","","","","","unexport the exported surface","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","destroy the xdg_exporter object","","export a surface","The minimal object version supporting this request","The minimal object version supporting this request","","","","","","","","","","","","","","","","","destroy the xdg_exporter object","","","export a surface","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","destroy the xdg_imported object","the imported surface handle has been destroyed","The minimal object version supporting this event","","The minimal object version supporting this request","The minimal object version supporting this request","","set as the parent of some surface","","","","","","","","","","","","","","","","destroy the xdg_imported object","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","set as the parent of some surface","","","","","","","","","","","","","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","destroy the xdg_importer object","","import a surface","The minimal object version supporting this request","The minimal object version supporting this request","","","","","","","","","","","","","","","","","destroy the xdg_importer object","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","import a surface","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","Client-side API of this protocol","an exported surface handle","interface for exporting surfaces","an imported surface handle","interface for importing surfaces","unexport the exported surface","The minimal object version supporting this event","","the exported surface handle","The minimal object version supporting this request","","","","","","","","","","","","","","","","","unexport the exported surface","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","destroy the xdg_exporter object","error values","","export a toplevel surface","surface is not an xdg_toplevel","The minimal object version supporting this request","The minimal object version supporting this request","","","","","","","","","","","","","","","","","","","","","destroy the xdg_exporter object","","","","export a toplevel surface","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","destroy the xdg_imported object","the imported surface handle has been destroyed","The minimal object version supporting this event","error values","","surface is not an xdg_toplevel","The minimal object version supporting this request","The minimal object version supporting this request","","set as the parent of some surface","","","","","","","","","","","","","","","","","","","","destroy the xdg_imported object","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","set as the parent of some surface","","","","","","","","","","","","","","","","","","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","destroy the xdg_importer object","","import a toplevel surface","The minimal object version supporting this request","The minimal object version supporting this request","","","","","","","","","","","","","","","","","destroy the xdg_importer object","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","import a toplevel surface","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","Client-side API of this protocol","manage xdg_output objects","compositor logical output region","destroy the xdg_output_manager object","","create an xdg output from a wl_output","The minimal object version supporting this request","The minimal object version supporting this request","","","","","","","","","","","","","","","","","destroy the xdg_output_manager object","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","create an xdg output from a wl_output","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","human-readable description of this output","destroy the xdg_output object","all information about the output have been sent","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","","position of the output within the global compositor space","size of the output in the global compositor space","name of this output","The minimal object version supporting this request","","","","","","","","","","","","","","","","","destroy the xdg_output object","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","","","","","","","Client-side API of this protocol","short-lived, popup surfaces for menus","create desktop-style surfaces","A desktop window","remove xdg_popup interface","The minimal object version supporting this event","","popup interaction is done","The minimal object version supporting this request","","","","","","","","","","","","","","","","","remove xdg_popup interface","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","Always the latest version","xdg_shell was destroyed before children","destroy xdg_shell","The minimal object version supporting this event","","","create a popup for a surface","create a shell surface from a surface","the client specified an invalid popup parent surface","the client tried to map or destroy a non-topmost popup","check if the client is alive","respond to a ping event","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","","given wl_surface has another role","enable use of this unstable version","latest protocol version","","","","","","","","","","","","","","","","","","","","","","","","destroy xdg_shell","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","create a popup for a surface","create a shell surface from a surface","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","respond to a ping event","","","","","","","","","","","","","","","","","","","","","","","enable use of this unstable version","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","","","","","","","","","ack a configure event","the surface is now activated","","","","surface wants to be closed","suggest a surface change","Destroy the xdg_surface","The minimal object version supporting this event","The minimal object version supporting this event","","the surface is fullscreen","","the surface is maximized","start an interactive move","","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","","start an interactive resize","edge values for resizing","the surface is being resized","","set application ID","set the window as fullscreen on a monitor","maximize the window","set the window as minimized","set the parent of this surface","set surface title","set the new window geometry","show the window menu","types of state on the surface","","","","","unmaximize the window","","start an interactive move","ack a configure event","","","","","","","","","","","","","","","","","","","","","","","Destroy the xdg_surface","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","start an interactive resize","set application ID","set the window as fullscreen on a monitor","maximize the window","set the window as minimized","set the parent of this surface","set surface title","set the new window geometry","show the window menu","","","","","","","","","","","","","","","","","","","","","","","","unmaximize the window","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","","","","","","","","","","","","","","","","","","","","","Client-side API of this protocol","short-lived, popup surfaces for menus","child surface positioner","create desktop-style surfaces","desktop user interface surface base interface","toplevel surface","configure the popup surface","remove xdg_popup interface","The minimal object version supporting this event","The minimal object version supporting this event","","","make the popup take an explicit grab","tried to grab after being mapped","popup interaction is done","The minimal object version supporting this request","The minimal object version supporting this request","","","","","","","","","","","","","","","","","","","","","remove xdg_popup interface","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","make the popup take an explicit grab","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","","","","","","the bottom edge of the anchor rectangle","position below the anchor edge","constraint adjustments","destroy the xdg_positioner object","","","invert the anchor and gravity on the x axis","invert the anchor and gravity on the y axis","","invalid input provided","the left edge of the anchor rectangle","position to the left of the anchor edge","the center of the anchor rectangle","center over the anchor edge","don’t move the child surface when constrained","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","","horizontally resize the surface","vertically resize the surface","the right edge of the anchor rectangle","position to the right of the anchor edge","set anchor rectangle anchor edges","set the anchor rectangle within the parent surface","set the adjustment to be done when constrained","set child surface gravity","set surface position offset","set the size of the to-be positioned rectangle","move along the x axis until unconstrained","move along the y axis until unconstrained","the top edge of the anchor rectangle","position above the anchor edge","","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","","","","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","destroy the xdg_positioner object","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","","","","","","","","","","","","","","","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","","","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","","","","","","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","set anchor rectangle anchor edges","set the anchor rectangle within the parent surface","set the adjustment to be done when constrained","set child surface gravity","set surface position offset","set the size of the to-be positioned rectangle","","","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","","","","","","","","","","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","","","","","","","","","","create a positioner object","xdg_shell was destroyed before children","destroy xdg_shell","The minimal object version supporting this event","","","create a shell surface from a surface","the client specified an invalid popup parent surface","the client provided an invalid positioner","the client provided an invalid surface state","the client tried to map or destroy a non-topmost popup","check if the client is alive","respond to a ping event","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","","given wl_surface has another role","","","","","","","","","","","","","","","","","","","","create a positioner object","destroy xdg_shell","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","create a shell surface from a surface","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","respond to a ping event","","","","","","","","","","","","","","","","","","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","","ack a configure event","","suggest a surface change","destroy the xdg_surface","The minimal object version supporting this event","","","assign the xdg_popup surface role","assign the xdg_toplevel surface role","","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","","set the new window geometry","","","ack a configure event","","","","","","","","","","","","","","","","","","","destroy the xdg_surface","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","assign the xdg_popup surface role","assign the xdg_toplevel surface role","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","set the new window geometry","","","","","","","","","","","","","","","","","","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","","","","","","","the surface is now activated","","","","surface wants to be closed","suggest a surface change","destroy the xdg_toplevel","The minimal object version supporting this event","The minimal object version supporting this event","","the surface is fullscreen","","the surface is maximized","start an interactive move","","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","","start an interactive resize","edge values for resizing","the surface is being resized","","set application ID","set the window as fullscreen on a monitor","set the maximum size","maximize the window","set the minimum size","set the window as minimized","set the parent of this surface","set surface title","show the window menu","types of state on the surface","","","","","unmaximize the window","","start an interactive move","","","","","","","","","","","","","","","","","","","","","","","destroy the xdg_toplevel","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","start an interactive resize","set application ID","set the window as fullscreen on a monitor","set the maximum size","maximize the window","set the minimum size","set the window as minimized","set the parent of this surface","set surface title","show the window menu","","","","","","","","","","","","","","","","","","","","","","","","unmaximize the window","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","","","","","","","","","","","","","","","","","","","","Client-side API of this protocol","context object for keyboard grab manager","interface for grabbing the keyboard","destroy the keyboard grab manager","","grab the keyboard to a surface","The minimal object version supporting this request","The minimal object version supporting this request","","","","","","","","","","","","","","","","","destroy the keyboard grab manager","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","grab the keyboard to a surface","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","destroy the grabbed keyboard object","","The minimal object version supporting this request","","","","","","","","","","","","","","","","","destroy the grabbed keyboard object","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","C representation of this interface, for interop","C-representation of the messages of this interface, for …","Client-side API of this protocol","crop and scale interface to a wl_surface","surface cropping and scaling","destination size is not integer","negative or zero values in width or height","remove scaling and cropping from the surface","","","the wl_surface was destroyed","source rectangle extends outside of the content area","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","","set the surface size for scaling","set the source rectangle for cropping","","","","","","","","","","","","","","","","","","","","remove scaling and cropping from the surface","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","set the surface size for scaling","set the source rectangle for cropping","","","","","","","","","","","","","","","","","","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","","","","","unbind from the cropping and scaling interface","","","extend surface interface for crop and scale","The minimal object version supporting this request","The minimal object version supporting this request","","the surface already has a viewport object associated","","","","","","","","","","","","","","","","","","","","unbind from the cropping and scaling interface","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","extend surface interface for crop and scale","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","Unstable protocols from wlr-protocols","Control data devices, particularly the clipboard.","A protocol for low overhead screen content capturing","List and control opened apps","Manage gamma tables of outputs.","Inhibits input events to other clients","Layered shell protocol","Output management protocol","Output power management protocol","Screen content capturing on client buffers","Virtual pointer protocol","","Client-side API of this protocol","manage a data device for a seat","manager to control data devices","offer to transfer data","offer to transfer data","introduce a new wlr_data_control_offer","destroy this data device","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","","","this data control is no longer valid","advertise new primary selection","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","","advertise new selection","copy data to the primary selection","copy data to the selection","source given to set_selection or set_primary_selection was …","","","","","","","","","","","","","","","","","","","","destroy this data device","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","copy data to the primary selection","copy data to the selection","","","","","","","","","","","","","","","","","","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","","","","create a new data source","destroy the manager","","get a data device for a seat","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","","","","","","","","","","","","","","","","","create a new data source","destroy the manager","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","get a data device for a seat","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","destroy this offer","The minimal object version supporting this event","","advertise offered MIME type","The minimal object version supporting this request","The minimal object version supporting this request","request that the data is transferred","","","","","","","","","","","","","","","","","destroy this offer","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","request that the data is transferred","","","","","","","","","","","","","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","","selection was cancelled","destroy this source","The minimal object version supporting this event","The minimal object version supporting this event","","","offer sent after wlr_data_control_device.set_selection","add an offered MIME type","The minimal object version supporting this request","The minimal object version supporting this request","","send the data","","","","","","","","","","","","","","","","","","","","destroy this source","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","add an offered MIME type","","","","","","","","","","","","","","","","","","","","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","","","Client-side API of this protocol","a DMA-BUF frame","manager to inform clients and begin capturing","indicates the frame is no longer valid","cancel reason","delete this object, used or not","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","","frame flags","a frame description","an object description","fatal error, source will not produce frames","The minimal object version supporting this request","indicates frame is available for reading","","temporary error, source will produce more frames","temporary error, source will produce more frames","clients should copy frame before processing","","","","","","","","","","","","","","","","","","","","","","","","delete this object, used or not","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","","","","","","","","","","","","","","","","","","","capture a frame from an output","destroy the manager","","The minimal object version supporting this request","The minimal object version supporting this request","","","","","","","","","","","","","capture a frame from an output","","","","","destroy the manager","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","","Client-side API of this protocol","an opened toplevel","list and control opened apps","activate the toplevel","the toplevel is active","app-id change","request that the toplevel be closed","this toplevel has been destroyed","destroy the zwlr_foreign_toplevel_handle_v1 object","all information about the toplevel has been sent","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","","","the toplevel is fullscreen","the provided rectangle is invalid","the toplevel is maximized","the toplevel is minimized","toplevel entered an output","toplevel left an output","parent change","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","","request that the toplevel be fullscreened","requests that the toplevel be maximized","requests that the toplevel be minimized","the rectangle which represents the toplevel","types of states on the toplevel","the toplevel state changed","title change","request that the toplevel be unfullscreened","requests that the toplevel be unmaximized","requests that the toplevel be unminimized","","activate the toplevel","","","","","","","","","","","","","","","","","","","","","","","request that the toplevel be closed","destroy the zwlr_foreign_toplevel_handle_v1 object","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","request that the toplevel be fullscreened","requests that the toplevel be maximized","requests that the toplevel be minimized","the rectangle which represents the toplevel","","","","","","","","","","","","","","","","","","","","","","","request that the toplevel be unfullscreened","requests that the toplevel be unmaximized","requests that the toplevel be unminimized","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","","","","","","","","","","","","The minimal object version supporting this event","The minimal object version supporting this event","","the compositor has finished with the toplevel manager","The minimal object version supporting this request","","stop sending events","a toplevel has been created","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","stop sending events","","","","","","","","","","","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","Client-side API of this protocol","manager to create per-output gamma controls","adjust gamma tables for an output","destroy the manager","","get a gamma control for an output","The minimal object version supporting this request","The minimal object version supporting this request","","","","","","","","","","","","","","","","","destroy the manager","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","get a gamma control for an output","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","destroy this control","The minimal object version supporting this event","The minimal object version supporting this event","","","object no longer valid","size of gamma ramps","invalid gamma tables","The minimal object version supporting this request","The minimal object version supporting this request","","set the gamma table","","","","","","","","","","","","","","","","","","","","destroy this control","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","set the gamma table","","","","","","","","","","","","","","","","","","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","","Client-side API of this protocol","inhibits input events to other clients","inhibits input to other clients","an input inhibitor is already in use on the compositor","","","inhibit input to other clients","The minimal object version supporting this request","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","inhibit input to other clients","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","C representation of this interface, for interop","C-representation of the messages of this interface, for …","destroy the input inhibitor object","","The minimal object version supporting this request","","","","","","","","","","","","","","","","","destroy the input inhibitor object","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","Client-side API of this protocol","create surfaces that are layers of the desktop","layer metadata interface","wl_surface has a buffer attached or committed","","","destroy the layer_shell object","","","create a layer_surface from a surface","layer value is invalid","available layers for surfaces","","The minimal object version supporting this request","The minimal object version supporting this request","","wl_surface has another role","","","","","","","","","","","","","","","","","","","","","","","","","destroy the layer_shell object","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","create a layer_surface from a surface","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","","","ack a configure event","","the bottom edge of the anchor rectangle","surface should be closed","suggest a surface change","destroy the layer_surface","The minimal object version supporting this event","The minimal object version supporting this event","","","request exclusive keyboard focus","assign this layer_surface as an xdg_popup parent","anchor bitfield is invalid","keyboard interactivity is invalid","size is invalid","provided surface state is invalid","types of keyboard interaction possible for a layer shell …","the left edge of the anchor rectangle","no keyboard focus is possible","request regular keyboard focus semantics","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","","the right edge of the anchor rectangle","configures the anchor point of the surface","configures the exclusive geometry of this surface","requests keyboard events","change the layer of the surface","sets a margin from the anchor point","sets the size of the surface","the top edge of the anchor rectangle","","ack a configure event","Returns the set containing all flags.","","","","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","destroy the layer_surface","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","","","","","","","assign this layer_surface as an xdg_popup parent","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Returns <code>true</code> if all flags are currently set.","","","Returns <code>true</code> if no flags are currently stored.","Returns the complement of this set of flags.","","","","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","configures the anchor point of the surface","configures the exclusive geometry of this surface","requests keyboard events","change the layer of the surface","sets a margin from the anchor point","sets the size of the surface","","","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","","","","","","","","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","","","","","","","","","","","","","","","Client-side API of this protocol","head configuration","output configuration","output device","output device configuration manager","output mode","property has already been set","","","mode is invalid","mode doesn’t belong to head","scale negative or zero","transform value outside enum","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","","set a custom mode","set the mode","set the position","set the scale","set the transform","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","set a custom mode","set the mode","set the position","set the scale","set the transform","","","","","","","","","","","","","","","","","","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","","","","","","","head has been configured twice","request sent after configuration has been applied or tested","apply the configuration","configuration has been cancelled","destroy the output configuration","disable a head","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","enable and configure a head","","","configuration changes failed","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","","configuration changes succeeded","test the configuration","head has not been configured","","apply the configuration","","","","","","","","","","","","","","","","","","","destroy the output configuration","disable a head","enable and configure a head","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","test the configuration","","","","","","","","","","","","","","","","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","current mode","head description","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","head is enabled or disabled","","the head has been destroyed","head manufacturer","introduce a mode","head model","head name","head physical size","current position","","current scale","head serial number","current transformation","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","C-representation of the messages of this interface, for …","C representation of this interface, for interop","","","","","","","","","","","","","","","create a new output configuration object","sent all information about current configuration","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","","the compositor has finished with the manager","introduce a new head","The minimal object version supporting this request","The minimal object version supporting this request","","stop sending events","","","","","","","","","","","","","","","","create a new output configuration object","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","stop sending events","","","","","","","","","","","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","","the mode has been destroyed","mode is preferred","mode refresh rate","","mode size","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","C-representation of the messages of this interface, for …","C representation of this interface, for interop","","","","","Client-side API of this protocol","manager to create per-output power management","adjust power management mode for an output","destroy the manager","","get a power management for an output","The minimal object version supporting this request","The minimal object version supporting this request","","","","","","","","","","","","","","","","","destroy the manager","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","get a power management for an output","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","destroy this power management","The minimal object version supporting this event","The minimal object version supporting this event","","","object no longer valid","nonexistent power save mode","","Report a power management mode change","Output is turned off.","Output is turned on, no power saving","The minimal object version supporting this request","The minimal object version supporting this request","","Set an outputs power save mode","","","","","","","","","","","","","","","","","","","","","","","","destroy this power management","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Set an outputs power save mode","","","","","","","","","","","","","","","","","","","","","","","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","","Client-side API of this protocol","a frame ready for copy","manager to inform clients and begin capturing","the object has already been used to copy a wl_buffer","wl_shm buffer information","all buffer types reported","copy the frame","copy the frame when it’s damaged","carries the coordinates of the damaged region","delete this object, used or not","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","","","frame copy failed","","frame flags","buffer attributes are invalid","linux-dmabuf buffer information","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","indicates frame is available for reading","","contents are y-inverted","","Returns the set containing all flags.","","","","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","copy the frame","copy the frame when it’s damaged","delete this object, used or not","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","","","","","","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Returns <code>true</code> if all flags are currently set.","","","Returns <code>true</code> if no flags are currently stored.","Returns the complement of this set of flags.","","","","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","","","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","","","","","","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","","","","","","","","","","","","","","","","capture an output","capture an output’s region","destroy the manager","","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","","","","","","","","","","","","","capture an output","capture an output’s region","","","","","destroy the manager","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","","","","","","","","Client-side API of this protocol","virtual pointer manager","virtual pointer","Create a new virtual pointer","Create a new virtual pointer","destroy the virtual pointer manager","","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","","","","","","","","","","","","","","","","","Create a new virtual pointer","Create a new virtual pointer","destroy the virtual pointer manager","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","","axis event","axis click event","axis source event","axis stop event","button event","destroy the virtual pointer object","","","end of a pointer event sequence","client sent invalid axis enumeration value","client sent invalid axis source enumeration value","pointer relative motion event","pointer absolute motion event","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","","","","","","axis event","axis click event","axis source event","axis stop event","","","","","","","","","button event","","","","","","","","destroy the virtual pointer object","","","","","","","","end of a pointer event sequence","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","pointer relative motion event","pointer absolute motion event","","","","","","","","","","","","","","","","","","","","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","","","","","","","","","","","","","","","","","","","","Client-side API of this protocol","short-lived, popup surfaces for menus","child surface positioner","desktop user interface surface base interface","toplevel surface","create desktop-style surfaces","configure the popup surface","remove xdg_popup interface","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","","","make the popup take an explicit grab","tried to grab after being mapped","popup interaction is done","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","recalculate the popup’s location","signal the completion of a repositioned request","","","","","","","","","","","","","","","","","","","","","remove xdg_popup interface","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","make the popup take an explicit grab","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","recalculate the popup’s location","","","","","","","","","","","","","","","","","","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","","","","","","","","","","","","","","","constraint adjustments","destroy the xdg_positioner object","","","invert the anchor and gravity on the x axis","invert the anchor and gravity on the y axis","","invalid input provided","","","","","don’t move the child surface when constrained","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","","horizontally resize the surface","vertically resize the surface","","","set anchor rectangle anchor","set the anchor rectangle within the parent surface","set the adjustment to be done when constrained","set child surface gravity","set surface position offset","set parent configure this is a response to","Set the parent window geometry the compositor should use …","continuously reconstrain the surface","set the size of the to-be positioned rectangle","move along the x axis until unconstrained","move along the y axis until unconstrained","","","","","","","","Returns the set containing all flags.","","","","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","destroy the xdg_positioner object","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","","","","","","","","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Returns <code>true</code> if all flags are currently set.","","","Returns <code>true</code> if no flags are currently stored.","Returns the complement of this set of flags.","","","","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","set anchor rectangle anchor","set the anchor rectangle within the parent surface","set the adjustment to be done when constrained","set child surface gravity","set surface position offset","set parent configure this is a response to","Set the parent window geometry the compositor should use …","continuously reconstrain the surface","set the size of the to-be positioned rectangle","","","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","","","","","","","","","","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","","","","","","","","","","","","","ack a configure event","","suggest a surface change","destroy the xdg_surface","The minimal object version supporting this event","","","assign the xdg_popup surface role","assign the xdg_toplevel surface role","","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","","set the new window geometry","","","ack a configure event","","","","","","","","","","","","","","","","","","","destroy the xdg_surface","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","assign the xdg_popup surface role","assign the xdg_toplevel surface role","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","set the new window geometry","","","","","","","","","","","","","","","","","","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","","","","","","","the surface is now activated","","","","surface wants to be closed","suggest a surface change","destroy the xdg_toplevel","The minimal object version supporting this event","The minimal object version supporting this event","","the surface is fullscreen","","the surface is maximized","start an interactive move","","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","","start an interactive resize","edge values for resizing","the surface is being resized","","set application ID","set the window as fullscreen on an output","set the maximum size","maximize the window","set the minimum size","set the window as minimized","set the parent of this surface","set surface title","show the window menu","types of state on the surface","the surface is tiled","the surface is tiled","the surface is tiled","the surface is tiled","","","","unset the window as fullscreen","unmaximize the window","","start an interactive move","","","","","","","","","","","","","","","","","","","","","","","destroy the xdg_toplevel","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","start an interactive resize","set application ID","set the window as fullscreen on an output","set the maximum size","maximize the window","set the minimum size","set the window as minimized","set the parent of this surface","set surface title","show the window menu","","","","","","","","","","","","","","","","","","","","","","","unset the window as fullscreen","unmaximize the window","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","","","","","","","","","","","","","","","","","","","create a positioner object","xdg_wm_base was destroyed before children","destroy xdg_wm_base","The minimal object version supporting this event","","","create a shell surface from a surface","the client specified an invalid popup parent surface","the client provided an invalid positioner","the client provided an invalid surface state","the client tried to map or destroy a non-topmost popup","check if the client is alive","respond to a ping event","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","","given wl_surface has another role","","","","","","","","","","","","","","","","","","","","create a positioner object","destroy xdg_wm_base","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","create a shell surface from a surface","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","respond to a ping event","","","","","","","","","","","","","","","","","","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,0,0,0,0,0,0,3,1,1,3,4,1,3,4,1,3,4,4,1,3,4,4,4,4,4,1,3,4,1,3,4,4,1,3,1,3,0,0,0,1,3,4,1,3,1,3,1,3,4,1,3,4,1,3,4,1,3,4,1,3,4,460,461,462,462,21,21,0,21,0,0,0,0,0,21,22,23,21,22,23,21,22,23,23,21,22,23,23,23,23,23,23,21,22,23,21,22,23,23,21,22,21,22,23,0,0,21,22,23,21,22,21,22,21,22,21,22,23,21,22,23,21,22,23,21,22,23,463,26,0,0,0,27,0,0,26,0,26,27,28,26,27,28,26,27,28,28,26,27,28,28,28,28,28,26,27,28,26,27,28,28,26,27,26,27,0,0,0,26,27,28,26,27,26,27,26,27,28,26,27,28,26,27,28,26,27,28,26,27,28,464,465,465,32,31,0,0,0,0,31,0,0,0,32,31,32,19,31,32,19,31,32,19,19,31,32,19,19,19,19,19,31,32,19,31,32,19,19,31,32,31,32,0,0,0,31,32,19,31,32,31,32,19,31,32,31,32,19,31,32,19,31,32,19,31,32,19,466,466,467,0,0,0,36,0,0,0,34,36,0,0,0,33,0,33,36,33,34,35,36,33,34,35,36,33,34,35,35,33,34,36,35,36,35,36,35,35,36,33,34,35,36,33,34,35,35,36,33,34,33,34,36,33,34,35,33,34,33,34,33,34,0,0,0,35,35,33,34,36,35,36,36,33,34,35,36,33,34,35,36,33,34,35,468,469,40,37,38,0,0,0,40,0,0,0,40,37,38,39,40,37,38,39,40,37,38,39,39,37,38,40,39,40,39,39,40,39,39,40,37,38,39,40,37,38,39,39,40,37,38,37,38,40,37,38,39,37,38,37,38,37,38,0,0,0,37,38,40,39,40,40,37,38,39,40,37,38,39,40,37,38,39,470,471,0,0,0,0,0,0,0,0,0,0,43,43,43,0,42,43,0,0,42,43,44,42,43,44,42,43,44,44,42,43,44,44,44,44,42,43,44,42,43,44,44,42,43,42,43,42,43,44,42,43,42,43,42,43,44,42,43,44,42,43,44,42,43,44,42,43,44,0,0,0,472,473,473,474,475,474,474,474,472,475,474,473,475,475,45,0,45,0,0,0,0,45,46,47,45,46,47,45,46,47,47,45,46,47,47,47,47,47,45,46,47,45,46,47,47,45,46,45,46,47,45,46,47,45,46,45,46,45,46,45,46,47,45,46,47,45,46,47,45,46,47,0,0,476,50,49,49,50,50,49,49,50,0,0,0,0,0,0,0,0,49,49,0,0,0,0,0,0,0,0,49,50,50,50,0,49,50,48,49,50,48,49,50,48,48,49,50,48,48,48,48,48,48,48,48,49,50,48,49,50,48,48,49,50,49,50,48,48,49,50,48,49,50,49,50,49,50,48,49,50,48,49,50,48,49,50,48,49,50,48,0,0,0,477,478,477,479,479,477,480,480,481,481,482,483,484,481,53,0,0,0,0,54,0,53,54,51,53,54,51,53,54,51,51,53,54,51,51,51,51,51,53,54,51,53,54,51,51,53,54,53,54,53,54,51,53,54,53,54,53,54,53,54,51,53,54,51,53,54,51,53,54,51,0,0,0,485,485,485,485,0,0,0,56,55,0,0,0,55,58,58,0,0,0,0,55,56,57,58,55,56,57,58,55,56,57,57,55,56,58,57,58,57,57,58,57,57,57,58,55,56,57,58,55,56,57,57,58,55,56,55,56,58,55,56,57,55,56,55,56,55,56,55,56,58,57,58,58,55,56,57,58,55,56,57,58,55,56,57,0,0,0,486,487,62,0,0,0,0,60,60,0,62,0,62,60,0,60,60,61,62,59,60,60,60,60,60,60,60,60,61,62,59,60,61,62,59,59,61,62,60,59,60,59,60,60,60,60,60,60,59,60,59,60,60,60,60,60,60,61,62,59,60,61,62,59,59,60,60,60,60,60,61,62,61,62,60,60,60,60,60,61,62,59,61,62,60,61,62,60,60,61,62,60,60,60,61,62,60,60,60,60,59,60,60,60,61,62,59,60,61,62,59,60,61,62,59,60,0,0,488,489,488,488,488,488,488,488,0,0,0,0,0,69,66,66,67,0,0,0,0,0,0,0,0,0,66,66,66,0,66,67,68,69,66,67,68,69,66,67,68,68,66,67,69,68,69,68,68,68,69,68,68,69,66,67,68,69,66,67,68,68,69,66,67,66,67,69,66,67,68,66,67,66,67,66,67,68,68,68,66,67,69,68,69,69,66,67,68,69,66,67,68,69,66,67,68,0,0,0,490,491,492,492,493,71,71,0,71,0,0,0,0,0,70,71,72,70,71,72,70,71,72,70,70,71,72,70,70,70,70,70,71,72,70,71,72,70,70,71,72,71,72,70,71,72,70,71,72,71,72,71,72,71,72,70,71,72,70,71,72,70,71,72,70,0,0,494,494,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,74,74,74,0,0,73,74,75,73,74,75,73,74,75,75,73,74,75,75,75,75,73,74,75,73,74,75,75,73,74,73,74,73,74,75,73,74,73,74,73,74,73,74,75,73,74,75,73,74,75,73,74,75,0,0,79,0,77,80,79,80,0,0,0,81,0,76,76,0,0,0,76,0,81,80,80,80,0,76,77,78,79,80,81,76,77,78,79,80,81,76,77,78,78,76,77,79,80,81,78,79,80,81,78,79,80,81,78,78,79,80,81,76,77,78,79,80,81,76,77,78,78,79,80,81,76,77,76,77,79,80,81,76,77,78,76,77,76,77,76,77,78,78,78,76,77,79,80,81,78,79,80,81,79,80,81,76,77,78,79,80,81,76,77,78,79,80,81,76,77,78,0,0,0,495,496,497,497,496,497,496,0,0,0,0,83,83,0,0,0,0,0,83,84,85,83,84,85,83,84,85,85,83,84,85,85,85,85,85,85,83,84,85,83,84,85,85,83,84,83,84,83,84,85,83,84,83,84,83,84,83,84,85,83,84,85,83,84,85,83,84,85,0,0,498,87,0,0,0,0,87,88,86,87,88,86,87,88,86,86,87,88,86,86,86,86,86,87,88,86,87,88,86,86,87,88,87,88,87,88,86,87,88,87,88,87,88,87,88,86,87,88,86,87,88,86,87,88,86,0,0,0,0,0,0,0,0,90,89,90,89,89,89,0,0,0,0,0,0,0,89,90,89,89,89,89,89,89,89,89,90,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,90,90,89,0,89,90,91,89,90,91,89,90,91,91,89,90,91,91,91,91,91,91,91,91,89,90,91,89,90,91,91,89,90,89,90,91,89,90,91,89,90,89,90,91,91,91,91,91,89,90,91,91,91,89,90,91,91,89,90,91,89,90,91,89,90,91,0,0,0,499,500,499,501,500,502,501,503,499,504,505,506,507,508,509,510,504,511,512,508,510,513,514,507,507,507,515,505,514,511,507,512,506,514,511,508,514,515,505,514,511,96,96,0,0,0,0,0,95,96,97,95,96,97,95,96,97,97,95,96,97,97,97,97,95,96,97,95,96,97,97,95,96,95,96,95,96,97,95,96,95,96,95,96,95,96,97,95,96,97,95,96,97,95,96,97,0,0,516,517,101,0,0,0,0,0,98,98,0,98,99,100,101,98,99,100,101,98,99,100,100,98,99,101,100,101,100,101,100,100,101,98,99,100,101,98,99,100,100,101,98,99,98,99,101,98,99,100,98,99,98,99,98,99,100,100,98,99,101,100,101,101,98,99,100,101,98,99,100,101,98,99,100,0,0,518,518,0,102,0,0,0,102,103,104,102,103,104,102,103,104,104,102,103,104,104,104,104,102,103,104,102,103,104,104,102,103,102,103,104,102,103,104,102,103,102,103,102,103,102,103,104,102,103,104,102,103,104,102,103,104,0,0,519,0,0,0,0,105,0,105,105,105,0,0,0,0,0,0,105,106,107,105,106,107,105,106,107,107,105,106,107,107,107,107,107,105,106,107,105,106,107,107,105,106,105,106,107,107,107,105,106,107,105,106,105,106,105,106,105,106,107,105,106,107,105,106,107,105,106,107,0,0,520,521,522,111,0,0,0,0,112,0,111,112,108,111,112,108,111,112,108,108,111,112,108,108,108,108,108,111,112,108,111,112,108,108,111,112,111,112,111,112,108,111,112,111,112,111,112,111,112,108,111,112,108,111,112,108,111,112,108,0,0,0,523,523,523,0,0,0,0,116,113,0,0,113,0,0,0,0,113,114,115,116,113,114,115,116,113,114,115,115,113,114,116,115,116,115,115,116,115,115,116,113,114,115,116,113,114,115,115,116,113,114,113,114,115,116,113,114,115,113,114,113,114,113,114,113,114,116,115,116,116,113,114,115,116,113,114,115,116,113,114,115,0,0,524,524,119,118,0,0,0,119,0,0,0,118,119,117,118,119,117,118,119,117,117,118,119,117,117,117,117,117,118,119,117,118,119,117,117,118,119,118,119,118,119,117,118,119,118,119,118,119,118,119,117,118,119,117,118,119,117,118,119,117,0,0,0,0,0,0,0,122,124,121,122,122,123,122,0,0,0,0,123,0,124,121,124,124,124,124,124,124,0,0,0,0,0,121,0,120,121,122,123,120,121,121,121,121,121,121,121,124,121,122,123,120,124,121,122,123,120,120,122,123,124,121,120,124,121,120,121,121,121,120,120,120,121,121,124,121,120,121,120,121,124,121,121,121,121,121,122,123,120,124,121,122,123,120,120,121,121,121,121,124,121,122,123,122,123,121,121,121,121,124,121,122,123,120,122,123,121,122,123,121,121,122,123,121,121,121,122,123,121,121,121,124,121,120,124,121,121,124,121,122,123,120,124,121,122,123,120,124,121,122,123,120,121,0,0,0,525,526,527,528,527,528,527,528,526,526,526,526,526,527,528,126,126,0,0,0,127,127,0,0,0,0,126,127,128,126,127,128,126,127,128,128,126,127,128,128,128,128,128,128,126,127,128,126,127,128,128,126,127,126,127,126,127,128,126,127,126,127,126,127,126,127,128,126,127,128,126,127,128,126,127,128,0,0,0,529,530,530,530,0,0,0,0,0,0,0,0,130,130,0,0,129,130,131,129,130,131,129,130,131,131,129,130,131,131,131,131,129,130,131,129,130,131,131,129,130,129,130,129,130,131,129,130,129,130,129,130,129,130,131,129,130,131,129,130,131,129,130,131,0,0,531,132,0,0,132,0,0,0,135,0,132,133,134,135,132,133,134,135,132,133,134,134,132,133,135,134,135,134,134,135,134,134,135,132,133,134,135,132,133,134,134,135,132,133,132,133,134,135,132,133,134,132,133,132,133,132,133,132,133,135,134,135,135,132,133,134,135,132,133,134,135,132,133,134,0,0,532,137,139,139,0,0,137,139,139,139,0,0,0,0,137,139,0,137,138,136,139,137,138,136,139,137,138,136,136,137,138,139,136,139,136,136,139,136,136,139,137,138,136,139,137,138,136,136,139,137,138,137,138,136,139,137,138,136,137,138,137,138,137,138,136,137,138,139,136,139,139,137,138,136,139,137,138,136,139,137,138,136,0,0,533,0,0,0,0,0,141,140,0,0,0,0,0,0,140,141,0,140,141,142,140,141,142,140,141,142,142,140,141,142,142,142,142,142,140,141,142,140,141,142,142,140,141,140,141,140,141,142,140,141,140,141,140,141,142,140,141,142,140,141,142,140,141,142,140,141,142,0,0,0,534,144,0,0,0,145,0,0,0,0,144,144,145,0,144,145,146,144,145,146,144,145,146,146,144,145,146,146,146,146,146,144,145,146,144,145,146,146,144,145,144,145,144,145,146,144,145,144,145,144,145,146,146,144,145,146,144,145,146,144,145,146,144,145,146,0,0,0,535,536,536,151,148,148,0,0,0,148,152,152,0,0,0,0,0,148,149,150,151,152,148,149,150,151,152,148,149,150,150,148,149,151,152,150,151,152,150,150,150,151,152,150,150,151,152,148,149,150,151,152,148,149,150,150,151,152,148,149,148,149,151,152,148,149,150,148,149,148,149,150,148,149,148,149,151,152,150,151,152,151,152,148,149,150,151,152,148,149,150,151,152,148,149,150,0,0,537,538,537,538,537,538,537,538,0,0,0,0,0,154,153,0,0,0,154,0,0,0,154,0,153,154,155,153,154,155,153,154,155,155,153,154,155,155,155,155,155,153,154,155,153,154,155,155,153,154,153,154,153,154,155,153,154,153,154,153,154,153,154,155,153,154,155,153,154,155,153,154,155,0,0,0,539,540,540,541,540,540,541,539,541,541,540,539,157,156,0,0,0,157,0,0,0,157,0,156,157,158,156,157,158,156,157,158,158,156,157,158,158,158,158,158,156,157,158,156,157,158,158,156,157,156,157,156,157,158,156,157,156,157,156,157,156,157,158,156,157,158,156,157,158,156,157,158,0,0,0,542,543,543,544,544,542,544,544,543,542,0,159,159,0,0,0,159,0,0,159,160,161,159,160,161,159,160,161,161,159,160,161,161,161,161,159,160,161,159,160,161,161,159,160,159,160,161,161,159,160,161,159,160,159,160,159,160,161,159,160,161,159,160,161,159,160,161,159,160,161,0,0,545,546,0,0,0,0,0,0,162,162,0,162,0,0,0,0,0,162,163,164,162,163,164,162,163,164,164,162,163,164,164,164,164,164,164,162,163,164,162,163,164,164,162,163,162,163,164,162,163,164,162,163,162,163,162,163,162,163,164,162,163,164,162,163,164,162,163,164,0,0,547,168,167,0,0,0,0,0,0,168,167,0,167,168,166,167,168,166,167,168,166,166,167,168,166,166,166,166,166,167,168,166,167,168,166,166,167,168,167,168,167,168,166,167,168,167,168,167,168,166,167,168,166,167,168,166,167,168,166,167,168,166,0,0,0,548,549,550,550,169,0,0,170,0,0,169,0,0,169,170,171,169,170,171,169,170,171,171,169,170,171,171,171,171,171,169,170,171,169,170,171,171,169,170,169,170,169,170,171,169,170,169,170,169,170,171,169,170,171,169,170,171,169,170,171,169,170,171,0,0,0,551,552,552,173,172,0,0,0,172,0,0,0,173,0,172,173,165,172,173,165,172,173,165,165,172,173,165,165,165,165,165,172,173,165,172,173,165,165,172,173,172,173,172,173,165,172,173,172,173,165,172,173,172,173,165,172,173,165,172,173,165,172,173,165,0,0,0,553,553,554,0,0,0,0,174,0,174,0,0,0,0,174,175,176,174,175,176,174,175,176,176,174,175,176,176,176,176,176,174,175,176,174,175,176,176,174,175,174,175,176,174,175,176,174,175,174,175,174,175,174,175,176,174,175,176,174,175,176,174,175,176,0,0,555,178,0,0,0,179,0,0,178,179,177,178,179,177,178,179,177,177,178,179,177,177,177,177,177,178,179,177,178,179,177,177,178,179,178,179,178,179,177,178,179,178,179,178,179,178,179,177,178,179,177,178,179,177,178,179,177,0,0,0,556,556,556,556,556,556,0,0,0,0,0,0,0,180,0,180,0,0,0,0,180,181,182,180,181,182,180,181,182,182,180,181,182,182,182,182,182,180,181,182,180,181,182,182,180,181,180,181,182,180,181,182,180,181,180,181,180,181,180,181,182,180,181,182,180,181,182,180,181,182,0,0,557,184,0,0,0,0,0,185,185,0,184,185,183,184,185,183,184,185,183,183,184,185,183,183,183,183,183,184,185,183,184,185,183,183,184,185,184,185,184,185,183,184,185,184,185,184,185,184,185,183,184,185,183,184,185,183,184,185,183,0,0,0,558,559,189,189,187,0,0,187,186,190,187,187,187,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,189,0,0,189,187,187,187,189,187,189,189,189,191,190,187,187,187,0,0,191,187,0,192,190,187,186,190,187,190,187,0,187,187,190,187,0,186,187,188,189,190,191,192,186,187,188,189,190,191,192,186,187,188,188,186,187,189,190,191,192,188,189,190,191,192,188,188,189,190,191,192,188,188,189,190,191,192,186,187,188,189,190,191,192,186,187,188,188,189,190,191,192,186,187,186,187,189,190,191,192,186,187,188,186,187,186,187,186,187,188,186,187,189,190,191,192,188,189,190,191,192,189,190,191,192,186,187,188,189,190,191,192,186,187,188,189,190,191,192,186,187,188,0,0,0,560,561,562,563,562,564,565,565,566,566,567,568,569,570,560,560,569,569,571,571,572,573,574,574,575,575,575,575,193,194,0,0,0,0,0,0,194,194,194,0,194,0,0,193,194,195,193,194,195,193,194,195,195,193,194,195,195,195,195,195,193,194,195,193,194,195,195,193,194,193,194,193,194,195,193,194,193,194,193,194,193,194,195,193,194,195,193,194,195,193,194,195,0,0,0,576,577,578,578,0,0,0,0,0,0,0,0,0,196,0,196,0,0,0,0,196,197,198,196,197,198,196,197,198,198,196,197,198,198,198,198,198,196,197,198,196,197,198,198,196,197,196,197,198,196,197,198,196,197,196,197,196,197,196,197,198,196,197,198,196,197,198,196,197,198,0,0,579,201,200,201,0,0,0,0,0,0,0,201,201,0,0,201,201,0,200,201,202,200,201,202,200,201,202,202,200,201,202,202,202,202,202,200,201,202,200,201,202,202,200,201,200,201,200,201,202,200,201,200,201,200,201,200,201,202,200,201,202,200,201,202,200,201,202,0,0,0,580,581,582,583,581,584,581,204,203,0,0,0,0,0,206,204,0,0,0,203,0,204,204,0,203,204,205,206,203,204,205,206,203,204,205,205,203,204,206,205,206,205,205,206,205,205,206,203,204,205,206,203,204,205,205,206,203,204,203,204,206,203,204,205,203,204,203,204,203,204,205,203,204,206,205,206,206,203,204,205,206,203,204,205,206,203,204,205,0,0,0,585,586,587,588,588,207,0,0,0,0,0,210,208,208,0,0,0,207,0,208,208,0,207,208,209,210,207,208,209,210,207,208,209,209,207,208,210,209,210,209,209,210,209,209,210,207,208,209,210,207,208,209,209,210,207,208,207,208,210,207,208,209,207,208,207,208,207,208,209,207,208,210,209,210,210,207,208,209,210,207,208,209,210,207,208,209,0,0,0,589,590,591,592,592,212,0,212,211,212,0,0,0,0,0,0,0,0,212,0,212,212,212,214,0,0,214,212,0,211,0,211,212,213,214,211,212,213,214,211,212,213,213,211,212,214,213,214,213,213,214,213,213,214,211,212,213,214,211,212,213,213,214,211,212,211,212,214,211,212,213,211,212,211,212,211,212,213,211,212,214,213,214,214,211,212,213,214,211,212,213,214,211,212,213,0,0,0,593,594,595,596,597,598,593,597,598,597,593,599,599,599,215,0,0,0,0,216,0,0,216,216,0,215,216,199,215,216,199,215,216,199,199,215,216,199,199,199,199,199,215,216,199,215,216,199,199,215,216,215,216,215,216,199,215,216,215,216,215,216,215,216,199,215,216,199,215,216,199,215,216,199,0,0,0,600,601,602,220,220,218,0,0,218,217,221,218,218,218,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,220,0,0,220,218,218,218,220,218,220,220,220,222,221,218,218,218,0,0,222,218,0,223,221,218,217,221,218,221,218,0,218,218,221,218,0,217,218,219,220,221,222,223,217,218,219,220,221,222,223,217,218,219,219,217,218,220,221,222,223,219,220,221,222,223,219,219,220,221,222,223,219,219,220,221,222,223,217,218,219,220,221,222,223,217,218,219,219,220,221,222,223,217,218,217,218,220,221,222,223,217,218,219,217,218,217,218,217,218,219,217,218,220,221,222,223,219,220,221,222,223,220,221,222,223,217,218,219,220,221,222,223,217,218,219,220,221,222,223,217,218,219,0,0,0,603,604,605,606,605,607,608,608,609,609,610,611,612,613,603,603,612,612,614,614,615,616,617,617,618,618,618,618,224,225,0,0,0,0,0,0,225,225,225,0,225,0,0,224,225,226,224,225,226,224,225,226,226,224,225,226,226,226,226,226,224,225,226,224,225,226,226,224,225,224,225,224,225,226,224,225,224,225,224,225,224,225,226,224,225,226,224,225,226,224,225,226,0,0,0,619,620,621,621,0,0,0,0,0,227,0,0,0,0,227,228,229,227,228,229,227,228,229,229,227,228,229,229,229,229,229,227,228,229,227,228,229,229,227,228,227,228,227,228,229,227,228,227,228,227,228,227,228,229,227,228,229,227,228,229,227,228,229,0,0,232,235,234,236,231,231,231,232,233,0,0,233,234,234,232,235,231,233,234,0,0,0,0,0,0,0,0,0,0,0,0,0,234,233,0,231,232,235,235,235,233,232,233,233,231,233,231,236,233,231,234,235,231,234,234,234,231,234,233,233,0,233,0,0,0,0,0,0,0,0,0,0,0,0,232,236,235,231,232,232,232,232,232,234,0,233,234,231,235,231,234,0,230,231,232,233,230,231,231,231,231,231,231,231,231,234,235,236,232,233,230,231,234,235,236,232,233,230,230,232,233,231,234,235,236,230,231,234,235,236,230,231,230,231,231,230,231,231,231,234,235,236,230,231,230,231,231,231,231,231,231,234,235,236,232,233,230,231,234,235,236,232,233,230,230,231,231,231,231,231,234,235,236,232,233,232,233,231,230,231,231,231,231,234,235,236,232,233,230,232,233,230,231,232,233,231,231,232,233,231,231,230,231,230,230,230,230,230,232,233,231,231,231,231,234,235,236,230,231,234,235,236,231,231,234,235,236,232,233,230,231,234,235,236,232,233,230,231,234,235,236,232,233,230,231,0,0,0,622,623,624,625,626,622,627,628,625,627,629,630,623,631,630,628,624,632,630,625,633,630,623,631,630,634,635,634,636,637,635,638,637,639,640,641,639,634,636,636,636,0,0,0,237,0,237,0,0,0,0,237,238,239,237,238,239,237,238,239,239,237,238,239,239,239,239,239,237,238,239,237,238,239,239,237,238,237,238,239,237,238,239,237,238,237,238,237,238,237,238,239,237,238,239,237,238,239,237,238,239,0,0,642,245,241,0,242,243,241,0,0,245,245,243,242,245,242,243,0,0,0,0,0,0,245,242,243,0,241,244,241,243,241,241,245,241,245,245,244,245,245,245,243,0,0,0,0,0,0,0,0,0,241,242,242,242,242,241,245,245,241,241,245,0,241,242,243,240,241,241,241,241,241,241,241,244,241,245,242,243,240,244,241,245,242,243,240,240,242,243,244,241,245,240,244,241,245,240,241,240,241,241,240,241,240,241,240,244,241,245,240,241,240,241,244,241,241,241,241,241,245,242,243,240,244,241,245,242,243,240,240,241,241,241,241,244,241,245,242,243,242,243,241,241,241,241,244,241,245,242,243,240,242,243,241,242,243,241,241,242,243,241,241,241,240,240,240,240,242,243,241,241,241,244,241,245,240,244,241,245,241,244,241,245,242,243,240,244,241,245,242,243,240,244,241,245,242,243,240,241,0,0,0,643,643,644,644,645,646,647,644,648,649,650,649,651,652,652,649,651,651,651,0,0,0,0,246,0,246,0,0,0,0,246,247,248,246,247,248,246,247,248,248,246,247,248,248,248,248,248,246,247,248,246,247,248,248,246,247,246,247,248,246,247,248,246,247,246,247,246,247,246,247,248,246,247,248,246,247,248,246,247,248,0,0,653,253,254,252,251,0,0,0,0,253,0,0,0,0,254,251,253,251,0,251,252,250,253,254,251,252,250,253,254,251,252,250,250,251,252,253,254,250,253,254,250,250,253,254,250,250,253,254,251,252,250,253,254,251,252,250,250,253,254,251,252,251,252,253,254,251,252,250,251,252,251,252,251,252,250,251,252,253,254,250,253,254,253,254,251,252,250,253,254,251,252,250,253,254,251,252,250,250,0,0,0,654,655,0,0,0,0,0,0,0,255,0,0,256,0,0,0,255,256,257,255,256,257,255,256,257,257,255,256,257,257,257,257,257,255,256,257,255,256,257,257,255,256,255,256,255,256,257,255,256,255,256,255,256,255,256,257,255,256,257,255,256,257,255,256,257,0,0,0,656,258,0,258,0,0,0,0,258,259,260,258,259,260,258,259,260,260,258,259,260,260,260,260,260,260,258,259,260,258,259,260,260,258,259,258,259,258,259,260,258,259,258,259,258,259,258,259,260,258,259,260,258,259,260,258,259,260,0,0,657,261,262,0,0,0,0,0,261,0,261,262,263,261,262,263,261,262,263,263,261,262,263,263,263,263,263,261,262,263,261,262,263,263,261,262,261,262,261,262,263,261,262,261,262,261,262,263,261,262,263,261,262,263,261,262,263,261,262,263,0,0,0,658,264,0,264,0,0,0,0,264,265,266,264,265,266,264,265,266,266,264,265,266,266,266,266,266,264,265,266,264,265,266,266,264,265,264,265,266,264,265,266,264,265,264,265,264,265,264,265,266,264,265,266,264,265,266,264,265,266,0,0,659,0,0,0,0,0,267,0,0,268,0,0,0,267,268,269,267,268,269,267,268,269,269,267,268,269,269,269,269,269,267,268,269,267,268,269,269,267,268,267,268,267,268,269,267,268,267,268,267,268,267,268,269,267,268,269,267,268,269,267,268,269,0,0,0,660,270,0,0,270,273,0,0,0,0,270,271,272,273,270,271,272,273,270,271,272,272,270,271,273,272,273,272,272,273,272,272,272,273,270,271,272,273,270,271,272,272,273,270,271,270,271,273,270,271,272,270,271,270,271,270,271,270,271,273,272,273,273,270,271,272,273,270,271,272,273,270,271,272,0,0,661,274,275,0,0,0,277,0,0,0,274,0,274,275,276,277,274,275,276,277,274,275,276,276,274,275,277,276,277,276,276,277,276,276,277,274,275,276,277,274,275,276,276,277,274,275,274,275,277,274,275,276,274,275,274,275,274,275,276,274,275,277,276,277,277,274,275,276,277,274,275,276,277,274,275,276,0,0,0,662,278,0,278,0,0,0,0,278,279,280,278,279,280,278,279,280,280,278,279,280,280,280,280,280,278,279,280,278,279,280,280,278,279,278,279,280,278,279,280,278,279,278,279,278,279,278,279,280,278,279,280,278,279,280,278,279,280,0,0,663,0,0,0,0,281,0,281,0,0,0,0,281,282,283,281,282,283,281,282,283,283,281,282,283,283,283,283,283,281,282,283,281,282,283,283,281,282,281,282,283,281,282,283,281,282,281,282,281,282,281,282,283,281,282,283,281,282,283,281,282,283,0,0,664,286,285,286,0,0,0,0,0,0,286,286,286,0,0,0,285,286,284,285,286,284,285,286,284,284,285,286,284,284,284,284,284,285,286,284,285,286,284,284,285,286,285,286,285,286,284,285,286,285,286,285,286,285,286,284,285,286,284,285,286,284,285,286,284,0,0,0,665,666,667,666,668,668,0,0,0,0,0,0,287,0,0,288,0,0,0,287,288,289,287,288,289,287,288,289,289,287,288,289,289,289,289,289,287,288,289,287,288,289,289,287,288,287,288,287,288,289,287,288,287,288,287,288,287,288,289,287,288,289,287,288,289,287,288,289,0,0,0,293,294,290,0,0,0,290,290,294,294,291,290,0,0,0,0,0,0,294,290,0,0,290,291,292,293,294,290,291,292,293,294,290,291,292,292,290,291,293,294,292,293,294,292,292,293,294,292,292,293,294,290,291,292,293,294,290,291,292,292,293,294,290,291,290,291,292,292,293,294,290,291,292,290,291,290,291,290,291,292,290,291,293,294,292,293,294,293,294,290,291,292,293,294,290,291,292,293,294,290,291,292,292,0,0,0,669,670,670,670,671,672,670,673,670,670,296,299,298,298,298,297,297,296,0,0,0,299,298,299,296,298,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,296,0,299,298,296,296,296,296,296,296,296,296,0,298,298,298,296,296,0,295,295,296,297,295,298,299,296,297,295,298,299,296,297,295,295,296,297,298,299,295,298,299,295,295,298,299,295,295,298,299,296,297,295,298,299,296,297,295,295,298,299,296,297,296,297,298,299,296,297,295,296,297,296,297,296,297,295,295,295,295,295,295,295,295,295,296,297,298,299,295,298,299,298,299,296,297,295,298,299,296,297,295,298,299,296,297,295,295,295,0,0,0,674,674,674,674,675,676,677,678,679,680,681,676,680,681,676,682,683,677,680,677,680,677,0,0,0,0,0,0,301,300,0,0,0,0,300,303,301,0,0,0,0,300,301,302,303,300,301,302,303,300,301,302,302,300,301,303,302,303,302,302,303,302,302,303,300,301,302,303,300,301,302,302,303,300,301,300,301,302,303,300,301,302,300,301,300,301,300,301,300,301,303,302,303,303,300,301,302,303,300,301,302,303,300,301,302,0,0,0,684,684,684,684,685,685,0,304,305,0,307,0,0,306,306,0,310,304,305,304,305,306,0,0,0,0,0,0,0,0,306,306,304,305,307,307,307,307,307,307,306,306,304,305,0,304,305,306,307,308,309,304,305,306,304,305,306,304,305,306,304,305,306,304,305,306,304,305,306,304,305,306,310,304,305,306,307,308,309,310,304,305,306,307,308,309,309,307,308,310,304,305,306,309,310,304,305,306,309,304,305,306,304,305,306,304,305,306,309,304,305,306,304,305,306,310,304,305,306,309,304,305,306,309,304,305,306,310,304,304,304,304,304,305,305,305,305,305,306,306,306,306,306,307,308,309,310,304,305,306,307,308,309,309,304,305,306,304,305,306,304,305,306,304,305,306,310,304,305,306,307,308,307,308,304,305,306,304,305,306,304,305,306,304,305,306,310,304,305,306,307,308,309,307,308,304,305,306,307,308,304,305,306,304,305,306,307,308,304,305,306,304,305,306,304,305,306,309,309,309,309,309,309,307,308,304,305,306,304,305,306,304,305,306,310,304,305,306,309,310,304,305,306,304,305,306,310,304,305,306,307,308,309,310,304,305,306,307,308,309,310,304,305,306,307,308,309,304,305,306,0,0,686,687,688,689,690,689,690,690,691,690,691,311,314,311,0,0,0,311,314,314,314,314,312,311,0,0,0,0,0,314,0,311,312,313,314,311,312,313,314,311,312,313,313,311,312,314,313,314,313,313,313,314,313,313,314,311,312,313,314,311,312,313,313,314,311,312,311,312,313,314,311,312,313,311,312,311,312,311,312,313,311,312,314,313,314,314,311,312,313,314,311,312,313,314,311,312,313,0,0,0,692,693,694,316,318,317,316,0,0,0,316,316,318,0,0,0,0,0,0,316,318,0,315,316,317,315,318,316,317,315,318,316,317,315,315,316,317,318,315,318,315,315,318,315,315,318,316,317,315,318,316,317,315,315,318,316,317,316,317,315,315,318,316,317,315,316,317,316,317,316,317,315,316,317,318,315,318,318,316,317,315,318,316,317,315,318,316,317,315,0,0,0,695,696,697,697,698,696,696,696,323,322,322,322,321,321,320,0,0,0,323,322,323,320,322,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,320,0,323,322,320,320,320,320,320,320,320,320,320,0,322,322,322,320,320,0,319,320,321,319,322,323,320,321,319,322,323,320,321,319,319,320,321,322,323,319,322,323,319,319,322,323,319,319,322,323,320,321,319,322,323,320,321,319,319,322,323,320,321,320,321,322,323,320,321,319,320,321,320,321,320,321,319,319,319,319,319,319,319,319,319,319,320,321,322,323,319,322,323,322,323,320,321,319,322,323,320,321,319,322,323,320,321,319,319,319,0,0,0,699,699,699,700,701,702,703,704,705,706,707,701,706,707,701,708,702,703,706,706,0,0,0,0,324,0,324,0,0,0,0,324,325,326,324,325,326,324,325,326,326,324,325,326,326,326,326,326,324,325,326,324,325,326,326,324,325,324,325,326,324,325,326,324,325,324,325,324,325,324,325,326,324,325,326,324,325,326,324,325,326,0,0,709,709,328,0,0,0,0,328,329,327,328,329,327,328,329,327,327,328,329,327,327,327,327,327,328,329,327,328,329,327,327,328,329,328,329,328,329,327,328,329,328,329,328,329,328,329,327,328,329,327,328,329,327,328,329,327,0,0,0,0,0,333,333,330,0,0,333,333,0,0,0,0,330,330,0,330,331,332,333,330,331,332,333,330,331,332,332,330,331,333,332,333,332,332,333,332,332,333,330,331,332,333,330,331,332,332,333,330,331,330,331,333,330,331,332,330,331,330,331,330,331,332,332,330,331,333,332,333,333,330,331,332,333,330,331,332,333,330,331,332,0,0,710,711,710,711,710,710,334,0,0,334,0,0,0,337,0,334,335,336,337,334,335,336,337,334,335,336,336,334,335,337,336,337,336,336,337,336,336,337,334,335,336,337,334,335,336,336,337,334,335,334,335,336,337,334,335,336,334,335,334,335,334,335,334,335,337,336,337,337,334,335,336,337,334,335,336,337,334,335,336,0,0,712,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,339,338,0,0,0,0,0,0,339,339,0,0,0,0,339,338,338,341,0,338,339,340,341,338,339,340,341,338,339,340,340,338,339,341,340,341,340,340,341,340,340,341,338,339,340,341,338,339,340,340,341,338,339,338,339,341,338,339,340,338,339,338,339,338,339,340,340,338,339,341,340,341,341,338,339,340,341,338,339,340,341,338,339,340,0,0,0,713,714,715,716,717,343,343,0,343,0,0,0,0,0,343,344,345,343,344,345,343,344,345,345,343,344,345,345,345,345,345,345,343,344,345,343,344,345,345,343,344,343,344,345,343,344,345,343,344,343,344,343,344,343,344,345,343,344,345,343,344,345,343,344,345,0,0,718,346,0,0,347,0,0,346,0,0,346,347,348,346,347,348,346,347,348,348,346,347,348,348,348,348,348,346,347,348,346,347,348,348,346,347,346,347,346,347,348,346,347,346,347,346,347,348,346,347,348,346,347,348,346,347,348,346,347,348,0,0,0,719,720,720,350,349,0,0,0,0,351,349,0,0,0,350,0,349,350,342,351,349,350,342,351,349,350,342,342,349,350,351,342,351,342,342,351,342,342,351,349,350,342,351,349,350,342,342,351,349,350,349,350,351,349,350,342,349,350,349,350,342,349,350,349,350,351,342,351,351,349,350,342,351,349,350,342,351,349,350,342,0,0,0,721,721,722,0,0,0,0,353,0,352,0,0,0,0,0,0,353,353,356,0,353,0,356,356,355,0,352,353,354,355,356,352,353,354,355,356,352,353,354,354,352,353,355,356,354,355,356,354,354,355,356,354,354,355,356,352,353,354,355,356,352,353,354,354,355,356,352,353,352,353,355,356,352,353,354,352,353,352,353,352,353,352,353,355,356,354,355,356,355,356,352,353,354,355,356,352,353,354,355,356,352,353,354,0,0,0,723,724,723,723,723,724,723,723,723,724,723,723,724,725,724,724,726,726,726,723,357,357,0,0,0,0,0,357,358,359,357,358,359,357,358,359,359,359,357,358,359,359,359,359,359,357,358,359,357,358,359,359,357,358,357,358,357,358,359,357,358,357,358,357,358,357,358,359,357,358,359,357,358,359,357,358,359,0,0,727,727,0,0,0,0,361,363,362,361,362,361,362,0,0,0,0,0,0,0,0,0,0,363,364,363,363,362,362,362,0,0,0,0,0,0,0,0,0,0,0,361,361,361,361,0,362,362,361,361,361,0,360,361,362,360,363,364,361,362,360,363,364,361,362,360,360,361,362,363,364,360,363,364,360,360,360,363,364,360,360,363,364,361,362,360,363,364,361,362,360,360,363,364,361,362,361,362,363,364,361,362,360,361,362,361,362,361,362,360,360,360,360,361,362,363,364,360,363,364,363,364,361,362,360,363,364,361,362,360,363,364,361,362,360,360,360,360,0,0,0,728,729,730,731,732,733,734,735,736,734,734,734,734,0,0,0,366,0,0,365,366,0,365,366,367,365,366,367,365,366,367,367,365,366,367,367,367,367,365,366,367,365,366,367,367,365,366,365,366,365,366,367,365,366,365,366,365,366,365,366,367,367,365,366,367,365,366,367,365,366,367,0,0,0,737,0,0,0,0,368,0,368,0,0,0,0,368,369,370,368,369,370,368,369,370,370,368,369,370,370,370,370,370,368,369,370,368,369,370,370,368,369,368,369,370,368,369,370,368,369,368,369,368,369,368,369,370,368,369,370,368,369,370,368,369,370,0,0,738,372,0,0,0,0,373,373,374,0,0,0,372,0,372,373,371,374,372,373,371,374,372,373,371,371,372,373,374,371,374,371,371,374,371,371,374,372,373,371,374,372,373,371,371,374,372,373,372,373,374,372,373,371,372,373,372,373,372,373,371,372,373,374,371,374,374,372,373,371,374,372,373,371,374,372,373,371,0,0,0,739,740,0,0,0,0,378,0,0,375,0,0,0,375,376,377,378,375,376,377,378,375,376,377,377,375,376,378,377,378,377,378,377,377,378,375,376,377,378,375,376,377,377,378,375,376,375,376,377,378,375,376,377,375,376,375,376,375,376,375,376,378,377,378,378,375,376,377,378,375,376,377,378,375,376,377,0,0,380,0,0,0,0,380,381,379,380,381,379,380,381,379,379,380,381,379,379,379,379,379,380,381,379,380,381,379,379,380,381,380,381,380,381,379,380,381,380,381,380,381,380,381,379,380,381,379,380,381,379,380,381,379,0,0,0,0,0,0,385,386,386,382,0,0,382,385,0,386,0,0,0,385,386,0,382,383,384,385,386,382,383,384,385,386,382,383,384,384,382,383,385,386,384,385,386,384,384,385,386,384,384,385,386,382,383,384,385,386,382,383,384,384,385,386,382,383,382,383,384,385,386,382,383,384,382,383,382,383,382,383,382,383,385,386,384,385,386,385,386,382,383,384,385,386,382,383,384,385,386,382,383,384,0,0,741,741,741,741,389,0,388,390,390,389,0,0,0,0,391,389,392,392,392,392,0,388,391,391,0,0,0,0,0,0,0,0,0,0,388,389,389,389,389,389,389,388,0,387,388,389,390,387,388,388,388,388,388,388,388,391,392,388,389,390,387,391,392,388,389,390,387,387,389,390,391,392,388,387,391,392,388,387,388,388,388,387,388,388,391,392,388,387,388,387,388,391,392,388,388,388,388,388,389,390,387,391,392,388,389,390,387,387,388,388,388,388,391,392,388,389,390,389,390,387,388,388,388,388,391,392,388,389,390,387,389,390,388,389,390,388,388,389,390,388,388,388,387,387,387,387,387,387,389,390,388,388,388,391,392,388,387,391,392,388,388,391,392,388,389,390,387,391,392,388,389,390,387,391,392,388,389,390,387,388,0,0,0,742,742,742,743,744,745,746,747,744,748,744,749,744,745,750,0,0,0,0,0,0,0,397,0,0,397,397,397,397,0,0,0,0,0,0,394,394,394,394,394,0,394,395,396,397,394,395,396,397,394,395,396,396,394,395,397,396,397,396,397,396,396,397,394,395,396,397,394,395,396,396,397,394,395,394,395,397,394,395,396,394,395,394,395,394,395,396,396,396,396,396,394,395,397,396,397,397,394,395,396,397,394,395,396,397,394,395,396,0,0,751,752,751,753,754,751,755,755,403,403,401,402,401,401,0,0,0,401,0,0,402,0,0,0,0,0,0,402,401,403,0,400,401,402,400,403,401,402,400,403,401,402,400,400,401,402,403,400,403,400,400,400,400,403,400,400,403,401,402,400,403,401,402,400,400,403,401,402,401,402,403,401,402,400,401,402,401,402,401,402,401,402,400,403,400,403,403,401,402,400,403,401,402,400,403,401,402,400,0,0,0,756,757,406,406,0,0,0,0,0,0,0,0,0,0,0,0,0,406,0,406,406,406,406,406,406,406,0,406,406,406,0,405,406,404,405,406,404,405,406,404,404,405,406,404,404,404,404,405,406,404,405,406,404,404,405,406,405,406,405,406,404,405,406,405,406,405,406,405,406,404,405,406,404,405,406,404,405,406,404,0,0,758,759,760,761,762,763,764,765,766,767,768,760,769,769,407,408,0,0,0,0,408,408,0,0,0,407,0,407,408,409,407,408,409,407,408,409,409,407,408,409,409,409,409,409,407,408,409,407,408,409,409,407,408,407,408,407,408,409,407,408,407,408,407,408,407,408,409,409,407,408,409,407,408,409,407,408,409,0,0,0,770,771,772,0,0,0,0,0,411,411,411,0,411,0,410,411,398,410,411,398,410,411,398,398,410,411,398,398,398,398,410,411,398,410,411,398,398,410,411,410,411,410,411,398,410,411,410,411,410,411,410,411,398,410,411,398,410,411,398,410,411,398,0,0,773,774,773,0,0,0,0,412,0,412,0,0,0,0,412,413,414,412,413,414,412,413,414,414,412,413,414,414,414,414,414,412,413,414,412,413,414,414,412,413,412,413,414,412,413,414,412,413,412,413,412,413,412,413,414,412,413,414,412,413,414,412,413,414,0,0,775,416,0,0,0,0,417,419,0,417,418,418,0,0,0,416,0,416,417,415,418,419,416,417,415,418,419,416,417,415,415,416,417,418,419,415,418,419,415,415,418,419,415,415,418,419,416,417,415,418,419,416,417,415,415,418,419,416,417,416,417,418,419,416,417,415,416,417,416,417,416,417,415,416,417,418,419,415,418,419,418,419,416,417,415,418,419,416,417,415,418,419,416,417,415,0,0,0,776,777,0,0,0,0,424,422,422,421,421,422,421,0,0,0,0,0,0,0,0,0,422,0,422,424,422,0,0,0,422,0,420,0,420,421,422,423,420,420,420,420,420,420,420,424,420,421,422,423,424,420,421,422,423,423,421,422,424,420,423,424,420,423,420,420,420,423,423,423,420,420,424,420,423,420,423,420,424,420,420,420,420,420,421,422,423,424,420,421,422,423,423,420,420,420,420,424,420,421,422,421,422,420,420,420,420,424,420,421,422,423,421,422,420,421,422,420,420,421,422,420,420,420,421,422,420,420,420,424,420,423,424,420,420,424,420,421,422,423,424,420,421,422,423,424,420,421,422,423,420,0,0,0,778,779,780,779,781,780,779,782,782,782,779,781,780,781,781,783,784,425,425,425,0,0,0,0,0,0,425,426,427,425,426,427,425,426,427,427,427,427,425,426,427,427,427,427,427,425,426,427,425,426,427,427,425,426,425,426,425,426,427,425,426,425,426,425,426,425,426,427,425,426,427,425,426,427,425,426,427,0,0,785,786,785,786,785,785,785,785,0,0,0,0,428,428,428,0,0,0,0,0,0,428,429,430,428,429,430,428,429,430,430,428,429,430,430,430,430,430,430,430,428,429,430,428,429,430,430,428,429,428,429,428,429,430,428,429,428,429,428,429,428,429,430,428,429,430,428,429,430,428,429,430,0,0,787,788,787,432,432,432,432,432,432,0,0,432,437,437,432,432,0,0,0,0,0,0,0,0,0,0,0,432,433,431,431,431,431,431,437,432,433,431,437,432,433,431,431,431,432,433,437,431,437,431,431,437,431,431,437,432,433,431,431,437,432,433,431,431,437,432,433,432,433,437,432,433,431,432,433,432,433,431,431,432,433,432,433,437,431,437,437,432,433,431,437,432,433,431,437,432,433,431,0,0,789,790,791,792,793,791,794,794,793,794,795,793,789,790,791,789,791,795,795,795,795,0,0,0,0,0,0,439,438,0,0,0,0,0,438,440,439,0,0,0,438,439,0,0,438,439,393,440,438,439,393,440,438,439,393,393,438,439,440,393,440,393,393,440,393,393,440,438,439,393,440,438,439,393,393,440,438,439,438,439,393,440,438,439,393,438,439,438,439,438,439,393,438,439,440,393,440,440,438,439,393,440,438,439,393,440,438,439,393,0,0,0,796,797,796,796,796,798,799,799,798,0,446,447,446,447,446,447,0,443,0,0,442,442,0,445,446,447,446,447,442,0,0,0,0,0,0,0,0,0,0,0,442,442,446,447,443,443,443,443,443,443,443,443,443,442,442,446,447,446,447,446,447,0,442,443,444,441,442,442,442,442,442,442,442,445,446,447,442,443,444,441,445,446,447,442,443,444,441,441,443,444,445,446,447,442,441,445,446,447,442,441,442,442,442,441,442,442,445,446,447,442,441,442,441,442,445,446,447,442,442,442,442,442,443,444,441,445,446,447,442,443,444,441,441,442,442,442,442,445,446,447,442,443,444,443,444,442,442,442,442,445,446,447,442,443,444,441,443,444,442,443,444,442,442,443,444,442,442,442,441,441,441,441,441,441,441,441,441,443,444,442,442,442,445,446,447,442,441,445,446,447,442,442,445,446,447,442,443,444,441,445,446,447,442,443,444,441,445,446,447,442,443,444,441,442,0,0,800,801,802,803,804,805,805,806,803,804,804,807,804,807,449,451,450,449,0,0,0,449,449,451,0,0,0,0,0,0,449,451,0,448,449,450,448,451,449,450,448,451,449,450,448,448,449,450,451,448,451,448,448,451,448,448,451,449,450,448,451,449,450,448,448,451,449,450,449,450,448,448,451,449,450,448,449,450,449,450,449,450,448,449,450,451,448,451,451,449,450,448,451,449,450,448,451,449,450,448,0,0,0,808,809,810,810,811,809,809,809,455,454,454,454,453,453,452,0,0,0,455,454,455,452,454,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,452,0,455,454,452,452,452,452,452,452,452,452,452,0,455,455,455,455,454,454,454,452,452,0,249,452,453,249,454,455,452,453,249,454,455,452,453,249,249,452,453,454,455,249,454,455,249,249,454,455,249,249,454,455,452,453,249,454,455,452,453,249,249,454,455,452,453,452,453,454,455,452,453,249,452,453,452,453,452,453,249,249,249,249,249,249,249,249,249,249,452,453,454,455,249,454,455,454,455,452,453,249,454,455,452,453,249,454,455,452,453,249,249,249,0,0,0,812,812,812,813,814,815,816,817,818,819,820,814,819,820,814,821,815,816,819,819,456,459,456,0,0,0,456,459,459,459,459,457,456,0,0,0,0,0,459,0,456,457,458,459,456,457,458,459,456,457,458,458,456,457,459,458,459,458,458,458,459,458,458,459,456,457,458,459,456,457,458,458,459,456,457,456,457,458,459,456,457,458,456,457,456,457,456,457,458,456,457,459,458,459,459,456,457,458,459,456,457,458,459,456,457,458,0,0,0,822,823,824],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,2]],[[3,2]],[4,[[5,[4]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[7,8,9],[[11,[[10,[9]]]]]],[[7,8,9],[[11,[[10,[9]]]]]],[4,4],[[]],[4],[[4,4],12],[[],12],[[1,13],14],[[3,13],14],[[4,13],14],[[]],[[]],[[[5,[4]]],4],[[]],[15,[[16,[1]]]],[15,[[16,[3]]]],[[17,8,18],[[16,[1]]]],[[17,8,18],[[16,[3]]]],0,0,0,[[]],[[]],[[]],[[1,8],15],[[3,8],15],[1,12],[3,12],[1,7],[3,7],[[4,[11,[19]],8]],[1,8],[3,8],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],20],[[],20],[[],20],0,0,0,0,0,0,0,0,0,0,0,0,0,[[21,2]],[[22,2]],[23,[[5,[23]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[7,8,9],[[11,[[10,[9]]]]]],[[7,8,9],[[11,[[10,[9]]]]]],[23,23],[[]],[23,[[24,[19]]]],[23],[[23,23],12],[[],12],[[21,13],14],[[22,13],14],[[23,13],14],[[]],[[]],[[[5,[23]]],23],[[]],[15,[[16,[21]]]],[15,[[16,[22]]]],[[17,8,18],[[16,[21]]]],[[17,8,18],[[16,[22]]]],[[23,25],[[24,[4]]]],0,0,[[]],[[]],[[]],[[21,8],15],[[22,8],15],[21,12],[22,12],[21,7],[22,7],[21,8],[22,8],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],20],[[],20],[[],20],0,0,0,0,0,0,0,0,0,0,[[26,2]],[[27,2]],[28,[[5,[28]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[7,8,9],[[11,[[10,[9]]]]]],[[7,8,9],[[11,[[10,[9]]]]]],[28,28],[[]],[28],[[28,28],12],[[],12],[[26,13],14],[[27,13],14],[[28,13],14],[[]],[[]],[[[5,[28]]],28],[[]],[15,[[16,[26]]]],[15,[[16,[27]]]],[[17,8,18],[[16,[26]]]],[[17,8,18],[[16,[27]]]],0,0,0,[[]],[[]],[[]],[[26,8],15],[[27,8],15],[26,12],[27,12],[26,7],[27,7],[[28,29,30]],[26,8],[27,8],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],20],[[],20],[[],20],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[31,2]],[[32,2]],[19,[[5,[19]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[7,8,9],[[11,[[10,[9]]]]]],[[7,8,9],[[11,[[10,[9]]]]]],[19,19],[[]],[19],[[19,19],12],[[],12],[[31,13],14],[[32,13],14],[[19,13],14],[[]],[[]],[[]],[[[5,[19]]],19],[15,[[16,[31]]]],[15,[[16,[32]]]],[[17,8,18],[[16,[31]]]],[[17,8,18],[[16,[32]]]],0,0,0,[[]],[[]],[[]],[[31,8],15],[[32,8],15],[31,12],[32,12],[[19,29]],[31,7],[32,7],[31,8],[32,8],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],20],[[],20],[[],20],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[33,2]],[[34,2]],[35,[[5,[35]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[7,8,9],[[11,[[10,[9]]]]]],[[7,8,9],[[11,[[10,[9]]]]]],[36,36],[35,35],[[]],[[]],[[36,36],12],[[35,35],12],[[],12],[[36,13],14],[[33,13],14],[[34,13],14],[[35,13],14],[[]],[[]],[[]],[[[5,[35]]],35],[[]],[8,[[11,[36]]]],[15,[[16,[33]]]],[15,[[16,[34]]]],[[17,8,18],[[16,[33]]]],[[17,8,18],[[16,[34]]]],[[]],[[]],[[]],[[]],[[33,8],15],[[34,8],15],[33,12],[34,12],[33,7],[34,7],0,0,0,[35],[[35,36]],[33,8],[34,8],[[]],[[]],[36,8],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],20],[[],20],[[],20],[[],20],0,0,0,0,0,0,0,0,0,0,0,0,0,[[37,2]],[[38,2]],[39,[[5,[39]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[7,8,9],[[11,[[10,[9]]]]]],[[7,8,9],[[11,[[10,[9]]]]]],[40,40],[39,39],[[]],[[]],[[39,41],[[24,[35]]]],[[40,40],12],[[39,39],12],[[],12],[[40,13],14],[[37,13],14],[[38,13],14],[[39,13],14],[[]],[[]],[[]],[[[5,[39]]],39],[[]],[8,[[11,[40]]]],[15,[[16,[37]]]],[15,[[16,[38]]]],[[17,8,18],[[16,[37]]]],[[17,8,18],[[16,[38]]]],[[]],[[]],[[]],[[]],[[37,8],15],[[38,8],15],[37,12],[38,12],[37,7],[38,7],0,0,0,[37,8],[38,8],[[]],[[]],[40,8],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],20],[[],20],[[],20],[[],20],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[42,2]],[[43,2]],[44,[[5,[44]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[7,8,9],[[11,[[10,[9]]]]]],[[7,8,9],[[11,[[10,[9]]]]]],[44,44],[[]],[[44,44],12],[[],12],[[42,13],14],[[43,13],14],[[44,13],14],[[]],[[]],[[]],[[[5,[44]]],44],[15,[[16,[42]]]],[15,[[16,[43]]]],[[17,8,18],[[16,[42]]]],[[17,8,18],[[16,[43]]]],[[]],[[]],[[]],[[42,8],15],[[43,8],15],[42,12],[43,12],[42,7],[43,7],[44],[42,8],[43,8],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],20],[[],20],[[],20],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[45,2]],[[46,2]],[47,[[5,[47]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[7,8,9],[[11,[[10,[9]]]]]],[[7,8,9],[[11,[[10,[9]]]]]],[47,47],[[]],[47],[[47,47],12],[[],12],[[45,13],14],[[46,13],14],[[47,13],14],[[]],[[]],[[[5,[47]]],47],[[]],[15,[[16,[45]]]],[15,[[16,[46]]]],[[17,8,18],[[16,[45]]]],[[17,8,18],[[16,[46]]]],[[47,25],[[24,[48]]]],[[]],[[]],[[]],[[45,8],15],[[46,8],15],[45,12],[46,12],[45,7],[46,7],[45,8],[46,8],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],20],[[],20],[[],20],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[49,2]],[[50,2]],[48,[[5,[48]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[7,8,9],[[11,[[10,[9]]]]]],[[7,8,9],[[11,[[10,[9]]]]]],[48,48],[[]],[[48,8]],[[48,29]],[[48,8,8]],[48],[[48,48],12],[[],12],[[49,13],14],[[50,13],14],[[48,13],14],[[]],[[]],[[[5,[48]]],48],[[]],[15,[[16,[49]]]],[15,[[16,[50]]]],[[17,8,18],[[16,[49]]]],[[17,8,18],[[16,[50]]]],[[48,41],[[24,[51]]]],[48,[[24,[44]]]],[[]],[[]],[[]],[[49,8],15],[[50,8],15],[49,12],[50,12],[49,7],[50,7],[[48,29,52,52]],[49,8],[50,8],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],20],[[],20],[[],20],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[53,2]],[[54,2]],[51,[[5,[51]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[7,8,9],[[11,[[10,[9]]]]]],[[7,8,9],[[11,[[10,[9]]]]]],[51,51],[[]],[51],[[51,51],12],[[],12],[[53,13],14],[[54,13],14],[[51,13],14],[[]],[[]],[[]],[[[5,[51]]],51],[15,[[16,[53]]]],[15,[[16,[54]]]],[[17,8,18],[[16,[53]]]],[[17,8,18],[[16,[54]]]],[[]],[[]],[[]],[[53,8],15],[[54,8],15],[53,12],[54,12],[53,7],[54,7],[53,8],[54,8],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],20],[[],20],[[],20],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[55,2]],[[56,2]],[57,[[5,[57]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[7,8,9],[[11,[[10,[9]]]]]],[[7,8,9],[[11,[[10,[9]]]]]],[58,58],[57,57],[[]],[[]],[57],[[58,58],12],[[57,57],12],[[],12],[[57,41],[[24,[59]]]],[[58,13],14],[[55,13],14],[[56,13],14],[[57,13],14],[[]],[[]],[[]],[[[5,[57]]],57],[[]],[8,[[11,[58]]]],[15,[[16,[55]]]],[15,[[16,[56]]]],[[17,8,18],[[16,[55]]]],[[17,8,18],[[16,[56]]]],[[]],[[]],[[]],[[]],[[55,8],15],[[56,8],15],[55,12],[56,12],[55,7],[56,7],[55,8],[56,8],[[]],[[]],[58,8],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],20],[[],20],[[],20],[[],20],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],60],[[61,2]],[[62,2]],[59,[[5,[59]]]],[[60,60],60],[[60,60]],[[60,60],60],[[60,60]],[60,8],[[60,60],60],[[60,60]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[7,8,9],[[11,[[10,[9]]]]]],[[7,8,9],[[11,[[10,[9]]]]]],[60,60],[59,59],[[]],[[]],[[60,60],63],[60,60],[[60,60],12],[[60,60],60],[[],60],[[60,60],12],[[59,59],12],[[],12],[[],12],[[60,64]],[[60,13],14],[[60,13],14],[[60,13],14],[[60,13],14],[[60,13],14],[[61,13],14],[[62,13],14],[[59,13],14],[[]],[[]],[[]],[[[5,[59]]],59],[[]],[8,[[11,[60]]]],[8,60],[8,60],[64,60],[8,[[11,[60]]]],[15,[[16,[61]]]],[15,[[16,[62]]]],[[17,8,18],[[16,[61]]]],[[17,8,18],[[16,[62]]]],[[60,65]],[[60,60]],[[60,60],60],[[60,60],12],[[]],[[]],[[]],[[]],[[61,8],15],[[62,8],15],[60,12],[61,12],[62,12],[60,12],[60,60],[61,7],[62,7],[[60,60],[[11,[63]]]],[[60,60]],[[60,60,12]],[61,8],[62,8],[[60,60],60],[[60,60]],[[60,60],60],[[]],[[]],[60,8],[[60,60]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],20],[[],20],[[],20],[[],20],[[60,60],60],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[66,2]],[[67,2]],[68,[[5,[68]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[7,8,9],[[11,[[10,[9]]]]]],[[7,8,9],[[11,[[10,[9]]]]]],[69,69],[68,68],[[]],[[]],[68],[68],[[69,69],12],[[68,68],12],[[],12],[[69,13],14],[[66,13],14],[[67,13],14],[[68,13],14],[[]],[[]],[[]],[[]],[[[5,[68]]],68],[8,[[11,[69]]]],[15,[[16,[66]]]],[15,[[16,[67]]]],[[17,8,18],[[16,[66]]]],[[17,8,18],[[16,[67]]]],[[]],[[]],[[]],[[]],[[66,8],15],[[67,8],15],[66,12],[67,12],[66,7],[67,7],[[68,29]],[[68,8,25]],[[68,41]],[66,8],[67,8],[[]],[[]],[69,8],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],20],[[],20],[[],20],[[],20],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[70,29,41]],[[71,2]],[[72,2]],[70,[[5,[70]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[7,8,9],[[11,[[10,[9]]]]]],[[7,8,9],[[11,[[10,[9]]]]]],[70,70],[[]],[70],[[70,70],12],[[],12],[[71,13],14],[[72,13],14],[[70,13],14],[[]],[[]],[[]],[[[5,[70]]],70],[15,[[16,[71]]]],[15,[[16,[72]]]],[[17,8,18],[[16,[71]]]],[[17,8,18],[[16,[72]]]],[70,[[24,[68]]]],[[]],[[]],[[]],[[71,8],15],[[72,8],15],[71,12],[72,12],[71,7],[72,7],[71,8],[72,8],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],20],[[],20],[[],20],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[73,2]],[[74,2]],[75,[[5,[75]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[7,8,9],[[11,[[10,[9]]]]]],[[7,8,9],[[11,[[10,[9]]]]]],[75,75],[[]],[[75,75],12],[[],12],[[73,13],14],[[74,13],14],[[75,13],14],[[]],[[]],[[[5,[75]]],75],[[]],[15,[[16,[73]]]],[15,[[16,[74]]]],[[17,8,18],[[16,[73]]]],[[17,8,18],[[16,[74]]]],[[]],[[]],[[]],[[73,8],15],[[74,8],15],[73,12],[74,12],[73,7],[74,7],[73,8],[74,8],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],20],[[],20],[[],20],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[76,2]],[[77,2]],[78,[[5,[78]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[7,8,9],[[11,[[10,[9]]]]]],[[7,8,9],[[11,[[10,[9]]]]]],[79,79],[80,80],[81,81],[78,78],[[]],[[]],[[]],[[]],[[79,79],12],[[80,80],12],[[81,81],12],[[78,78],12],[[],12],[[79,13],14],[[80,13],14],[[81,13],14],[[76,13],14],[[77,13],14],[[78,13],14],[[]],[[]],[[]],[[]],[[]],[[]],[[[5,[78]]],78],[8,[[11,[79]]]],[8,[[11,[80]]]],[8,[[11,[81]]]],[15,[[16,[76]]]],[15,[[16,[77]]]],[[17,8,18],[[16,[76]]]],[[17,8,18],[[16,[77]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[76,8],15],[[77,8],15],[76,12],[77,12],[76,7],[77,7],[[78,[11,[41]],80,[11,[82]]]],[[78,41,82,52],[[24,[75]]]],[78],[76,8],[77,8],[[]],[[]],[[]],[[]],[79,8],[80,8],[81,8],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[83,2]],[[84,2]],[85,[[5,[85]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[7,8,9],[[11,[[10,[9]]]]]],[[7,8,9],[[11,[[10,[9]]]]]],[85,85],[[]],[[85,41],[[24,[86]]]],[85],[[85,85],12],[[],12],[[83,13],14],[[84,13],14],[[85,13],14],[[]],[[]],[[[5,[85]]],85],[[]],[15,[[16,[83]]]],[15,[[16,[84]]]],[[17,8,18],[[16,[83]]]],[[17,8,18],[[16,[84]]]],[[]],[[]],[[]],[[83,8],15],[[84,8],15],[83,12],[84,12],[83,7],[84,7],[83,8],[84,8],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],20],[[],20],[[],20],0,0,0,0,0,0,0,0,[[87,2]],[[88,2]],[86,[[5,[86]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[7,8,9],[[11,[[10,[9]]]]]],[[7,8,9],[[11,[[10,[9]]]]]],[86,86],[[]],[86],[[86,86],12],[[],12],[[87,13],14],[[88,13],14],[[86,13],14],[[]],[[]],[[[5,[86]]],86],[[]],[15,[[16,[87]]]],[15,[[16,[88]]]],[[17,8,18],[[16,[87]]]],[[17,8,18],[[16,[88]]]],[[]],[[]],[[]],[[87,8],15],[[88,8],15],[87,12],[88,12],[87,7],[88,7],[87,8],[88,8],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],20],[[],20],[[],20],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[89,2]],[[90,2]],[91,[[5,[91]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[7,8,9],[[11,[[10,[9]]]]]],[[7,8,9],[[11,[[10,[9]]]]]],[91,91],[[]],[[91,8,29]],[[91,52,52]],[[91,52,8]],[91],[[91,91],12],[[],12],[[89,13],14],[[90,13],14],[[91,13],14],[[]],[[]],[[[5,[91]]],91],[[]],[15,[[16,[89]]]],[15,[[16,[90]]]],[[17,8,18],[[16,[89]]]],[[17,8,18],[[16,[90]]]],[91,[[24,[92]]]],[[]],[[]],[[]],[[89,8],15],[[90,8],15],[89,12],[90,12],[[91,8,8,8,8]],[[91,8,8,8,8,8]],[[91,8,29]],[[91,8,8,8,8,8]],[[91,[94,[93]]]],[89,7],[90,7],[[91,52]],[[91,8,29,29]],[[91,8,8,8]],[89,8],[90,8],[[91,8,8]],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],20],[[],20],[[],20],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[95,2]],[[96,2]],[97,[[5,[97]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[7,8,9],[[11,[[10,[9]]]]]],[[7,8,9],[[11,[[10,[9]]]]]],[97,97],[[]],[[97,97],12],[[],12],[[95,13],14],[[96,13],14],[[97,13],14],[[]],[[]],[[[5,[97]]],97],[[]],[15,[[16,[95]]]],[15,[[16,[96]]]],[[17,8,18],[[16,[95]]]],[[17,8,18],[[16,[96]]]],[[]],[[]],[[]],[[95,8],15],[[96,8],15],[95,12],[96,12],[95,7],[96,7],[95,8],[96,8],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],20],[[],20],[[],20],0,0,0,0,0,0,0,0,0,0,0,0,0,[[98,2]],[[99,2]],[100,[[5,[100]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[7,8,9],[[11,[[10,[9]]]]]],[[7,8,9],[[11,[[10,[9]]]]]],[101,101],[100,100],[[]],[[]],[[101,101],12],[[100,100],12],[[],12],[[101,13],14],[[98,13],14],[[99,13],14],[[100,13],14],[[]],[[]],[[]],[[]],[[[5,[100]]],100],[8,[[11,[101]]]],[15,[[16,[98]]]],[15,[[16,[99]]]],[[17,8,18],[[16,[98]]]],[[17,8,18],[[16,[99]]]],[[]],[[]],[[]],[[]],[[98,8],15],[[99,8],15],[98,12],[99,12],[98,7],[99,7],[100],[[100,82,8]],[98,8],[99,8],[[]],[[]],[101,8],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],20],[[],20],[[],20],[[],20],0,0,0,0,0,0,0,0,0,[[102,2]],[[103,2]],[104,[[5,[104]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[7,8,9],[[11,[[10,[9]]]]]],[[7,8,9],[[11,[[10,[9]]]]]],[104,104],[[]],[[104,104],12],[[],12],[[102,13],14],[[103,13],14],[[104,13],14],[[]],[[]],[[]],[[[5,[104]]],104],[15,[[16,[102]]]],[15,[[16,[103]]]],[[17,8,18],[[16,[102]]]],[[17,8,18],[[16,[103]]]],[[104,41],[[24,[100]]]],[[]],[[]],[[]],[[102,8],15],[[103,8],15],[102,12],[103,12],[102,7],[103,7],[102,8],[103,8],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],20],[[],20],[[],20],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[105,2]],[[106,2]],[107,[[5,[107]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[7,8,9],[[11,[[10,[9]]]]]],[[7,8,9],[[11,[[10,[9]]]]]],[107,107],[[]],[107],[[107,107],12],[[],12],[[105,13],14],[[106,13],14],[[107,13],14],[[]],[[]],[[[5,[107]]],107],[[]],[15,[[16,[105]]]],[15,[[16,[106]]]],[[17,8,18],[[16,[105]]]],[[17,8,18],[[16,[106]]]],[[107,92],[[24,[108]]]],[[107,109],[[24,[108]]]],[[107,110],[[24,[108]]]],[[]],[[]],[[]],[[105,8],15],[[106,8],15],[105,12],[106,12],[105,7],[106,7],[105,8],[106,8],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],20],[[],20],[[],20],0,0,0,0,0,0,0,0,0,0,0,0,[[111,2]],[[112,2]],[108,[[5,[108]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[7,8,9],[[11,[[10,[9]]]]]],[[7,8,9],[[11,[[10,[9]]]]]],[108,108],[[]],[108],[[108,108],12],[[],12],[[111,13],14],[[112,13],14],[[108,13],14],[[]],[[]],[[[5,[108]]],108],[[]],[15,[[16,[111]]]],[15,[[16,[112]]]],[[17,8,18],[[16,[111]]]],[[17,8,18],[[16,[112]]]],[[]],[[]],[[]],[[111,8],15],[[112,8],15],[111,12],[112,12],[111,7],[112,7],[111,8],[112,8],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],20],[[],20],[[],20],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[113,2]],[[114,2]],[115,[[5,[115]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[7,8,9],[[11,[[10,[9]]]]]],[[7,8,9],[[11,[[10,[9]]]]]],[116,116],[115,115],[[]],[[]],[115],[[116,116],12],[[115,115],12],[[],12],[[116,13],14],[[113,13],14],[[114,13],14],[[115,13],14],[[]],[[]],[[]],[[[5,[115]]],115],[[]],[8,[[11,[116]]]],[15,[[16,[113]]]],[15,[[16,[114]]]],[[17,8,18],[[16,[113]]]],[[17,8,18],[[16,[114]]]],[[115,41,25],[[24,[117]]]],[[]],[[]],[[]],[[]],[[113,8],15],[[114,8],15],[113,12],[114,12],[113,7],[114,7],[113,8],[114,8],[[]],[[]],[116,8],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],20],[[],20],[[],20],[[],20],0,0,0,0,0,0,0,0,0,0,0,0,0,[[118,2]],[[119,2]],[117,[[5,[117]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[7,8,9],[[11,[[10,[9]]]]]],[[7,8,9],[[11,[[10,[9]]]]]],[117,117],[[]],[117],[[117,117],12],[[],12],[[118,13],14],[[119,13],14],[[117,13],14],[[]],[[]],[[]],[[[5,[117]]],117],[15,[[16,[118]]]],[15,[[16,[119]]]],[[17,8,18],[[16,[118]]]],[[17,8,18],[[16,[119]]]],[[]],[[]],[[]],[[118,8],15],[[119,8],15],[118,12],[119,12],[118,7],[119,7],[118,8],[119,8],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],20],[[],20],[[],20],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[120,30,8,8,8,8,8]],[[],121],[[122,2]],[[123,2]],[120,[[5,[120]]]],[[121,121],121],[[121,121]],[[121,121],121],[[121,121]],[121,8],[[121,121],121],[[121,121]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[7,8,9],[[11,[[10,[9]]]]]],[[7,8,9],[[11,[[10,[9]]]]]],[124,124],[121,121],[120,120],[[]],[[]],[[]],[[121,121],63],[121,121],[[121,121],12],[[120,52,52,8,121]],[[120,52,52,8,121],[[24,[125]]]],[120],[[121,121],121],[[],121],[[124,124],12],[[121,121],12],[[120,120],12],[[],12],[[],12],[[121,64]],[[124,13],14],[[121,13],14],[[121,13],14],[[121,13],14],[[121,13],14],[[121,13],14],[[122,13],14],[[123,13],14],[[120,13],14],[[]],[[]],[[]],[[]],[[]],[[[5,[120]]],120],[8,[[11,[121]]]],[8,121],[8,121],[64,121],[8,[[11,[124]]]],[8,[[11,[121]]]],[15,[[16,[122]]]],[15,[[16,[123]]]],[[17,8,18],[[16,[122]]]],[[17,8,18],[[16,[123]]]],[[121,65]],[[121,121]],[[121,121],121],[[121,121],12],[[]],[[]],[[]],[[]],[[]],[[122,8],15],[[123,8],15],[121,12],[122,12],[123,12],[121,12],[121,121],[122,7],[123,7],[[121,121],[[11,[63]]]],[[121,121]],[[121,121,12]],[122,8],[123,8],[[121,121],121],[[121,121]],[[121,121],121],[[]],[[]],[[]],[124,8],[121,8],[[121,121]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],20],[[],20],[[],20],[[],20],[[],20],[[121,121],121],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[126,2]],[[127,2]],[128,[[5,[128]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[7,8,9],[[11,[[10,[9]]]]]],[[7,8,9],[[11,[[10,[9]]]]]],[128,128],[[]],[128,[[24,[120]]]],[128],[[128,128],12],[[],12],[[126,13],14],[[127,13],14],[[128,13],14],[[]],[[]],[[]],[[[5,[128]]],128],[15,[[16,[126]]]],[15,[[16,[127]]]],[[17,8,18],[[16,[126]]]],[[17,8,18],[[16,[127]]]],[[]],[[]],[[]],[[126,8],15],[[127,8],15],[126,12],[127,12],[126,7],[127,7],[126,8],[127,8],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],20],[[],20],[[],20],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[129,2]],[[130,2]],[131,[[5,[131]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[7,8,9],[[11,[[10,[9]]]]]],[[7,8,9],[[11,[[10,[9]]]]]],[131,131],[[]],[[131,131],12],[[],12],[[129,13],14],[[130,13],14],[[131,13],14],[[]],[[]],[[]],[[[5,[131]]],131],[15,[[16,[129]]]],[15,[[16,[130]]]],[[17,8,18],[[16,[129]]]],[[17,8,18],[[16,[130]]]],[[]],[[]],[[]],[[129,8],15],[[130,8],15],[129,12],[130,12],[129,7],[130,7],[129,8],[130,8],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],20],[[],20],[[],20],0,0,0,0,0,0,0,0,0,0,0,0,[[132,2]],[[133,2]],[134,[[5,[134]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[7,8,9],[[11,[[10,[9]]]]]],[[7,8,9],[[11,[[10,[9]]]]]],[135,135],[134,134],[[]],[[]],[134],[[135,135],12],[[134,134],12],[[],12],[[135,13],14],[[132,13],14],[[133,13],14],[[134,13],14],[[]],[[]],[[]],[[]],[[[5,[134]]],134],[8,[[11,[135]]]],[15,[[16,[132]]]],[15,[[16,[133]]]],[[17,8,18],[[16,[132]]]],[[17,8,18],[[16,[133]]]],[[134,41],[[24,[136]]]],[[]],[[]],[[]],[[]],[[132,8],15],[[133,8],15],[132,12],[133,12],[132,7],[133,7],[132,8],[133,8],[[]],[[]],[135,8],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],20],[[],20],[[],20],[[],20],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[137,2]],[[138,2]],[136,[[5,[136]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[7,8,9],[[11,[[10,[9]]]]]],[[7,8,9],[[11,[[10,[9]]]]]],[139,139],[136,136],[[]],[[]],[136],[[139,139],12],[[136,136],12],[[],12],[[139,13],14],[[137,13],14],[[138,13],14],[[136,13],14],[[]],[[]],[[]],[[[5,[136]]],136],[[]],[8,[[11,[139]]]],[15,[[16,[137]]]],[15,[[16,[138]]]],[[17,8,18],[[16,[137]]]],[[17,8,18],[[16,[138]]]],[136,[[24,[131]]]],[[]],[[]],[[]],[[]],[[137,8],15],[[138,8],15],[137,12],[138,12],[137,7],[138,7],[[136,30]],[137,8],[138,8],[[]],[[]],[139,8],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],20],[[],20],[[],20],[[],20],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[140,2]],[[141,2]],[142,[[5,[142]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[7,8,9],[[11,[[10,[9]]]]]],[[7,8,9],[[11,[[10,[9]]]]]],[142,142],[[]],[142],[[142,142],12],[[],12],[[140,13],14],[[141,13],14],[[142,13],14],[[]],[[]],[[]],[[[5,[142]]],142],[15,[[16,[140]]]],[15,[[16,[141]]]],[[17,8,18],[[16,[140]]]],[[17,8,18],[[16,[141]]]],[[]],[[]],[[]],[[140,8],15],[[141,8],15],[140,12],[141,12],[140,7],[141,7],[[142,[11,[143]]]],[140,8],[141,8],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],20],[[],20],[[],20],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[144,2]],[[145,2]],[146,[[5,[146]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[7,8,9],[[11,[[10,[9]]]]]],[[7,8,9],[[11,[[10,[9]]]]]],[146,146],[[]],[146],[[146,146],12],[[],12],[[144,13],14],[[145,13],14],[[146,13],14],[[]],[[]],[[[5,[146]]],146],[[]],[15,[[16,[144]]]],[15,[[16,[145]]]],[[17,8,18],[[16,[144]]]],[[17,8,18],[[16,[145]]]],[[]],[[]],[[]],[[144,8],15],[[145,8],15],[144,12],[145,12],[144,7],[145,7],[[146,147,147]],[[146,[11,[143]]]],[144,8],[145,8],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],20],[[],20],[[],20],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[148,2]],[[149,2]],[150,[[5,[150]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[7,8,9],[[11,[[10,[9]]]]]],[[7,8,9],[[11,[[10,[9]]]]]],[151,151],[152,152],[150,150],[[]],[[]],[[]],[[150,41,109,[11,[143]],152],[[24,[142]]]],[150],[[151,151],12],[[152,152],12],[[150,150],12],[[],12],[[151,13],14],[[152,13],14],[[148,13],14],[[149,13],14],[[150,13],14],[[]],[[]],[[]],[[]],[[]],[[[5,[150]]],150],[8,[[11,[151]]]],[8,[[11,[152]]]],[15,[[16,[148]]]],[15,[[16,[149]]]],[[17,8,18],[[16,[148]]]],[[17,8,18],[[16,[149]]]],[[]],[[]],[[]],[[]],[[]],[[148,8],15],[[149,8],15],[148,12],[149,12],[[150,41,109,[11,[143]],152],[[24,[146]]]],[148,7],[149,7],[148,8],[149,8],[[]],[[]],[[]],[151,8],[152,8],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],20],[[],20],[[],20],[[],20],[[],20],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[153,2]],[[154,2]],[155,[[5,[155]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[7,8,9],[[11,[[10,[9]]]]]],[[7,8,9],[[11,[[10,[9]]]]]],[155,155],[[]],[155],[[155,155],12],[[],12],[[153,13],14],[[154,13],14],[[155,13],14],[[]],[[]],[[]],[[[5,[155]]],155],[15,[[16,[153]]]],[15,[[16,[154]]]],[[17,8,18],[[16,[153]]]],[[17,8,18],[[16,[154]]]],[[]],[[]],[[]],[[153,8],15],[[154,8],15],[153,12],[154,12],[153,7],[154,7],[153,8],[154,8],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],20],[[],20],[[],20],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[156,2]],[[157,2]],[158,[[5,[158]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[7,8,9],[[11,[[10,[9]]]]]],[[7,8,9],[[11,[[10,[9]]]]]],[158,158],[[]],[158],[[158,158],12],[[],12],[[156,13],14],[[157,13],14],[[158,13],14],[[]],[[]],[[]],[[[5,[158]]],158],[15,[[16,[156]]]],[15,[[16,[157]]]],[[17,8,18],[[16,[156]]]],[[17,8,18],[[16,[157]]]],[[]],[[]],[[]],[[156,8],15],[[157,8],15],[156,12],[157,12],[156,7],[157,7],[156,8],[157,8],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],20],[[],20],[[],20],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[159,2]],[[160,2]],[161,[[5,[161]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[7,8,9],[[11,[[10,[9]]]]]],[[7,8,9],[[11,[[10,[9]]]]]],[161,161],[[]],[[161,161],12],[[],12],[[159,13],14],[[160,13],14],[[161,13],14],[[]],[[]],[[[5,[161]]],161],[[]],[15,[[16,[159]]]],[15,[[16,[160]]]],[[17,8,18],[[16,[159]]]],[[17,8,18],[[16,[160]]]],[[161,109],[[24,[155]]]],[[161,109],[[24,[158]]]],[[]],[[]],[[]],[[159,8],15],[[160,8],15],[159,12],[160,12],[159,7],[160,7],[161],[159,8],[160,8],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],20],[[],20],[[],20],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[162,2]],[[163,2]],[164,[[5,[164]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[7,8,9],[[11,[[10,[9]]]]]],[[7,8,9],[[11,[[10,[9]]]]]],[164,164],[[]],[164,[[24,[165]]]],[164],[[164,164],12],[[],12],[[162,13],14],[[163,13],14],[[164,13],14],[[]],[[]],[[]],[[[5,[164]]],164],[15,[[16,[162]]]],[15,[[16,[163]]]],[[17,8,18],[[16,[162]]]],[[17,8,18],[[16,[163]]]],[[164,25],[[24,[166]]]],[[]],[[]],[[]],[[162,8],15],[[163,8],15],[162,12],[163,12],[162,7],[163,7],[162,8],[163,8],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],20],[[],20],[[],20],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[167,2]],[[168,2]],[166,[[5,[166]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[7,8,9],[[11,[[10,[9]]]]]],[[7,8,9],[[11,[[10,[9]]]]]],[166,166],[[]],[166],[[166,166],12],[[],12],[[167,13],14],[[168,13],14],[[166,13],14],[[]],[[]],[[]],[[[5,[166]]],166],[15,[[16,[167]]]],[15,[[16,[168]]]],[[17,8,18],[[16,[167]]]],[[17,8,18],[[16,[168]]]],[[]],[[]],[[]],[[167,8],15],[[168,8],15],[167,12],[168,12],[167,7],[168,7],[[166,[11,[165]],8]],[167,8],[168,8],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],20],[[],20],[[],20],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[169,2]],[[170,2]],[171,[[5,[171]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[7,8,9],[[11,[[10,[9]]]]]],[[7,8,9],[[11,[[10,[9]]]]]],[171,171],[[]],[171],[[171,171],12],[[],12],[[169,13],14],[[170,13],14],[[171,13],14],[[]],[[]],[[]],[[[5,[171]]],171],[15,[[16,[169]]]],[15,[[16,[170]]]],[[17,8,18],[[16,[169]]]],[[17,8,18],[[16,[170]]]],[[]],[[]],[[]],[[169,8],15],[[170,8],15],[169,12],[170,12],[169,7],[170,7],[[171,29,30]],[169,8],[170,8],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],20],[[],20],[[],20],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[172,2]],[[173,2]],[165,[[5,[165]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[7,8,9],[[11,[[10,[9]]]]]],[[7,8,9],[[11,[[10,[9]]]]]],[165,165],[[]],[165],[[165,165],12],[[],12],[[172,13],14],[[173,13],14],[[165,13],14],[[]],[[]],[[[5,[165]]],165],[[]],[15,[[16,[172]]]],[15,[[16,[173]]]],[[17,8,18],[[16,[172]]]],[[17,8,18],[[16,[173]]]],[[]],[[]],[[]],[[172,8],15],[[173,8],15],[172,12],[173,12],[[165,29]],[172,7],[173,7],[172,8],[173,8],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],20],[[],20],[[],20],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[174,2]],[[175,2]],[176,[[5,[176]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[7,8,9],[[11,[[10,[9]]]]]],[[7,8,9],[[11,[[10,[9]]]]]],[176,176],[[]],[176],[[176,176],12],[[],12],[[174,13],14],[[175,13],14],[[176,13],14],[[]],[[]],[[[5,[176]]],176],[[]],[15,[[16,[174]]]],[15,[[16,[175]]]],[[17,8,18],[[16,[174]]]],[[17,8,18],[[16,[175]]]],[[176,109],[[24,[177]]]],[[]],[[]],[[]],[[174,8],15],[[175,8],15],[174,12],[175,12],[174,7],[175,7],[174,8],[175,8],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],20],[[],20],[[],20],0,0,0,0,0,0,0,0,0,0,[[178,2]],[[179,2]],[177,[[5,[177]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[7,8,9],[[11,[[10,[9]]]]]],[[7,8,9],[[11,[[10,[9]]]]]],[177,177],[[]],[177],[[177,177],12],[[],12],[[178,13],14],[[179,13],14],[[177,13],14],[[]],[[]],[[[5,[177]]],177],[[]],[15,[[16,[178]]]],[15,[[16,[179]]]],[[17,8,18],[[16,[178]]]],[[17,8,18],[[16,[179]]]],[[]],[[]],[[]],[[178,8],15],[[179,8],15],[178,12],[179,12],[178,7],[179,7],[178,8],[179,8],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],20],[[],20],[[],20],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[180,2]],[[181,2]],[182,[[5,[182]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[7,8,9],[[11,[[10,[9]]]]]],[[7,8,9],[[11,[[10,[9]]]]]],[182,182],[[]],[182],[[182,182],12],[[],12],[[180,13],14],[[181,13],14],[[182,13],14],[[]],[[]],[[]],[[[5,[182]]],182],[15,[[16,[180]]]],[15,[[16,[181]]]],[[17,8,18],[[16,[180]]]],[[17,8,18],[[16,[181]]]],[[182,25],[[24,[183]]]],[[]],[[]],[[]],[[180,8],15],[[181,8],15],[180,12],[181,12],[180,7],[181,7],[180,8],[181,8],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],20],[[],20],[[],20],0,0,0,0,0,0,0,0,0,0,0,0,[[184,2]],[[185,2]],[183,[[5,[183]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[7,8,9],[[11,[[10,[9]]]]]],[[7,8,9],[[11,[[10,[9]]]]]],[183,183],[[]],[183],[[183,183],12],[[],12],[[184,13],14],[[185,13],14],[[183,13],14],[[]],[[]],[[[5,[183]]],183],[[]],[15,[[16,[184]]]],[15,[[16,[185]]]],[[17,8,18],[[16,[184]]]],[[17,8,18],[[16,[185]]]],[[]],[[]],[[]],[[184,8],15],[[185,8],15],[184,12],[185,12],[184,7],[185,7],[184,8],[185,8],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],20],[[],20],[[],20],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[186,2]],[[187,2]],[188,[[5,[188]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[7,8,9],[[11,[[10,[9]]]]]],[[7,8,9],[[11,[[10,[9]]]]]],[189,189],[190,190],[191,191],[192,192],[188,188],[[]],[[]],[[]],[[]],[[]],[188],[[189,189],12],[[190,190],12],[[191,191],12],[[192,192],12],[[188,188],12],[[],12],[[189,13],14],[[190,13],14],[[191,13],14],[[192,13],14],[[186,13],14],[[187,13],14],[[188,13],14],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[5,[188]]],188],[8,[[11,[189]]]],[8,[[11,[190]]]],[8,[[11,[191]]]],[8,[[11,[192]]]],[15,[[16,[186]]]],[15,[[16,[187]]]],[[17,8,18],[[16,[186]]]],[[17,8,18],[[16,[187]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[186,8],15],[[187,8],15],[186,12],[187,12],[186,7],[187,7],[[188,8,[11,[41]],52,52]],[186,8],[187,8],[[]],[[]],[[]],[[]],[[]],[189,8],[190,8],[191,8],[192,8],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[193,2]],[[194,2]],[195,[[5,[195]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[7,8,9],[[11,[[10,[9]]]]]],[[7,8,9],[[11,[[10,[9]]]]]],[195,195],[[]],[195],[[195,195],12],[[],12],[[193,13],14],[[194,13],14],[[195,13],14],[[]],[[]],[[]],[[[5,[195]]],195],[15,[[16,[193]]]],[15,[[16,[194]]]],[[17,8,18],[[16,[193]]]],[[17,8,18],[[16,[194]]]],[[]],[[]],[[]],[[193,8],15],[[194,8],15],[193,12],[194,12],[193,7],[194,7],[193,8],[194,8],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],20],[[],20],[[],20],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[196,2]],[[197,2]],[198,[[5,[198]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[7,8,9],[[11,[[10,[9]]]]]],[[7,8,9],[[11,[[10,[9]]]]]],[198,198],[[]],[198],[[198,198],12],[[],12],[[196,13],14],[[197,13],14],[[198,13],14],[[]],[[]],[[[5,[198]]],198],[[]],[15,[[16,[196]]]],[15,[[16,[197]]]],[[17,8,18],[[16,[196]]]],[[17,8,18],[[16,[197]]]],[[198,25],[[24,[199]]]],[[]],[[]],[[]],[[196,8],15],[[197,8],15],[196,12],[197,12],[196,7],[197,7],[196,8],[197,8],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],20],[[],20],[[],20],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[200,2]],[[201,2]],[202,[[5,[202]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[7,8,9],[[11,[[10,[9]]]]]],[[7,8,9],[[11,[[10,[9]]]]]],[202,202],[[]],[202],[[202,202],12],[[],12],[[200,13],14],[[201,13],14],[[202,13],14],[[]],[[]],[[]],[[[5,[202]]],202],[15,[[16,[200]]]],[15,[[16,[201]]]],[[17,8,18],[[16,[200]]]],[[17,8,18],[[16,[201]]]],[[]],[[]],[[]],[[200,8],15],[[201,8],15],[200,12],[201,12],[200,7],[201,7],[200,8],[201,8],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],20],[[],20],[[],20],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[203,2]],[[204,2]],[205,[[5,[205]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[7,8,9],[[11,[[10,[9]]]]]],[[7,8,9],[[11,[[10,[9]]]]]],[206,206],[205,205],[[]],[[]],[205],[[206,206],12],[[205,205],12],[[],12],[[206,13],14],[[203,13],14],[[204,13],14],[[205,13],14],[[]],[[]],[[]],[[]],[[[5,[205]]],205],[8,[[11,[206]]]],[15,[[16,[203]]]],[15,[[16,[204]]]],[[17,8,18],[[16,[203]]]],[[17,8,18],[[16,[204]]]],[[]],[[]],[[]],[[]],[[203,8],15],[[204,8],15],[203,12],[204,12],[203,7],[204,7],[[205,29,8]],[203,8],[204,8],[[]],[[]],[206,8],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],20],[[],20],[[],20],[[],20],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[207,2]],[[208,2]],[209,[[5,[209]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[7,8,9],[[11,[[10,[9]]]]]],[[7,8,9],[[11,[[10,[9]]]]]],[210,210],[209,209],[[]],[[]],[209],[[210,210],12],[[209,209],12],[[],12],[[210,13],14],[[207,13],14],[[208,13],14],[[209,13],14],[[]],[[]],[[]],[[]],[[[5,[209]]],209],[8,[[11,[210]]]],[15,[[16,[207]]]],[15,[[16,[208]]]],[[17,8,18],[[16,[207]]]],[[17,8,18],[[16,[208]]]],[[]],[[]],[[]],[[]],[[207,8],15],[[208,8],15],[207,12],[208,12],[207,7],[208,7],[[209,29,8]],[207,8],[208,8],[[]],[[]],[210,8],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],20],[[],20],[[],20],[[],20],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[211,2]],[[212,2]],[213,[[5,[213]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[7,8,9],[[11,[[10,[9]]]]]],[[7,8,9],[[11,[[10,[9]]]]]],[214,214],[213,213],[[]],[[]],[213],[[214,214],12],[[213,213],12],[[],12],[[214,13],14],[[211,13],14],[[212,13],14],[[213,13],14],[[]],[[]],[[]],[[[5,[213]]],213],[[]],[8,[[11,[214]]]],[15,[[16,[211]]]],[15,[[16,[212]]]],[[17,8,18],[[16,[211]]]],[[17,8,18],[[16,[212]]]],[[]],[[]],[[]],[[]],[[211,8],15],[[212,8],15],[211,12],[212,12],[211,7],[212,7],[[213,8,29,8]],[211,8],[212,8],[[]],[[]],[214,8],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],20],[[],20],[[],20],[[],20],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[215,2]],[[216,2]],[199,[[5,[199]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[7,8,9],[[11,[[10,[9]]]]]],[[7,8,9],[[11,[[10,[9]]]]]],[199,199],[[]],[199],[[199,199],12],[[],12],[[215,13],14],[[216,13],14],[[199,13],14],[[]],[[]],[[]],[[[5,[199]]],199],[15,[[16,[215]]]],[15,[[16,[216]]]],[[17,8,18],[[16,[215]]]],[[17,8,18],[[16,[216]]]],[[]],[[]],[[]],[[215,8],15],[[216,8],15],[215,12],[216,12],[215,7],[216,7],[215,8],[216,8],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],20],[[],20],[[],20],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[217,2]],[[218,2]],[219,[[5,[219]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[7,8,9],[[11,[[10,[9]]]]]],[[7,8,9],[[11,[[10,[9]]]]]],[220,220],[221,221],[222,222],[223,223],[219,219],[[]],[[]],[[]],[[]],[[]],[219],[[220,220],12],[[221,221],12],[[222,222],12],[[223,223],12],[[219,219],12],[[],12],[[220,13],14],[[221,13],14],[[222,13],14],[[223,13],14],[[217,13],14],[[218,13],14],[[219,13],14],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[5,[219]]],219],[8,[[11,[220]]]],[8,[[11,[221]]]],[8,[[11,[222]]]],[8,[[11,[223]]]],[15,[[16,[217]]]],[15,[[16,[218]]]],[[17,8,18],[[16,[217]]]],[[17,8,18],[[16,[218]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[217,8],15],[[218,8],15],[217,12],[218,12],[217,7],[218,7],[[219,8,[11,[41]],52,52]],[217,8],[218,8],[[]],[[]],[[]],[[]],[[]],[220,8],[221,8],[222,8],[223,8],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[224,2]],[[225,2]],[226,[[5,[226]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[7,8,9],[[11,[[10,[9]]]]]],[[7,8,9],[[11,[[10,[9]]]]]],[226,226],[[]],[226],[[226,226],12],[[],12],[[224,13],14],[[225,13],14],[[226,13],14],[[]],[[]],[[[5,[226]]],226],[[]],[15,[[16,[224]]]],[15,[[16,[225]]]],[[17,8,18],[[16,[224]]]],[[17,8,18],[[16,[225]]]],[[]],[[]],[[]],[[224,8],15],[[225,8],15],[224,12],[225,12],[224,7],[225,7],[224,8],[225,8],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],20],[[],20],[[],20],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[227,2]],[[228,2]],[229,[[5,[229]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[7,8,9],[[11,[[10,[9]]]]]],[[7,8,9],[[11,[[10,[9]]]]]],[229,229],[[]],[229,[[24,[230]]]],[[229,229],12],[[],12],[[227,13],14],[[228,13],14],[[229,13],14],[[]],[[]],[[[5,[229]]],229],[[]],[15,[[16,[227]]]],[15,[[16,[228]]]],[[17,8,18],[[16,[227]]]],[[17,8,18],[[16,[228]]]],[[]],[[]],[[]],[[227,8],15],[[228,8],15],[227,12],[228,12],[227,7],[228,7],[227,8],[228,8],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],20],[[],20],[[],20],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[230,25,41]],[[],231],[[232,2]],[[233,2]],[230,[[5,[230]]]],[[231,231],231],[[231,231]],[[231,231],231],[[231,231]],[231,8],[[231,231],231],[[231,231]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[7,8,9],[[11,[[10,[9]]]]]],[[7,8,9],[[11,[[10,[9]]]]]],[231,231],[234,234],[235,235],[236,236],[230,230],[[]],[[]],[[]],[[]],[[]],[[231,231],63],[[230,8]],[231,231],[[231,231],12],[[230,25]],[[231,231],231],[[],231],[[231,231],12],[[234,234],12],[[235,235],12],[[236,236],12],[[230,230],12],[[],12],[[],12],[[231,64]],[[231,13],14],[[231,13],14],[[231,13],14],[[231,13],14],[[231,13],14],[[234,13],14],[[235,13],14],[[236,13],14],[[232,13],14],[[233,13],14],[[230,13],14],[[]],[[]],[[]],[[]],[[]],[[]],[[[5,[230]]],230],[[]],[8,[[11,[231]]]],[8,231],[8,231],[64,231],[8,[[11,[231]]]],[8,[[11,[234]]]],[8,[[11,[235]]]],[8,[[11,[236]]]],[15,[[16,[232]]]],[15,[[16,[233]]]],[[17,8,18],[[16,[232]]]],[[17,8,18],[[16,[233]]]],[[231,65]],[230],[[231,231]],[[231,231],231],[[231,231],12],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[232,8],15],[[233,8],15],[[230,8,8]],[231,12],[232,12],[233,12],[231,12],[231,231],[232,7],[233,7],[[231,231],[[11,[63]]]],[[231,231]],[230],[[231,231,12]],[[230,231,234]],[[230,52,52,52,52]],[[230,29]],[[230,29,8,8]],[230],[232,8],[233,8],[[231,231],231],[[231,231]],[[231,231],231],[[]],[[]],[[]],[[]],[[]],[231,8],[234,8],[235,8],[236,8],[[231,231]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[231,231],231],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[237,2]],[[238,2]],[239,[[5,[239]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[7,8,9],[[11,[[10,[9]]]]]],[[7,8,9],[[11,[[10,[9]]]]]],[239,239],[[]],[239],[[239,239],12],[[],12],[[237,13],14],[[238,13],14],[[239,13],14],[[]],[[]],[[[5,[239]]],239],[[]],[15,[[16,[237]]]],[15,[[16,[238]]]],[[17,8,18],[[16,[237]]]],[[17,8,18],[[16,[238]]]],[[239,25],[[24,[240]]]],[[]],[[]],[[]],[[237,8],15],[[238,8],15],[237,12],[238,12],[237,7],[238,7],[237,8],[238,8],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],20],[[],20],[[],20],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],241],[[242,2]],[[243,2]],[240,[[5,[240]]]],[[241,241],241],[[241,241]],[[241,241],241],[[241,241]],[241,8],[[241,241],241],[[241,241]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[7,8,9],[[11,[[10,[9]]]]]],[[7,8,9],[[11,[[10,[9]]]]]],[244,244],[241,241],[245,245],[240,240],[[]],[[]],[[]],[[]],[[241,241],63],[240],[241,241],[[241,241],12],[240],[[241,241],241],[240],[[],241],[240],[[244,244],12],[[241,241],12],[[245,245],12],[[240,240],12],[[],12],[[],12],[[241,64]],[[244,13],14],[[241,13],14],[[241,13],14],[[241,13],14],[[241,13],14],[[241,13],14],[[245,13],14],[[242,13],14],[[243,13],14],[[240,13],14],[[]],[[]],[[]],[[]],[[]],[[[5,[240]]],240],[[]],[8,[[11,[241]]]],[8,241],[8,241],[64,241],[8,[[11,[244]]]],[8,[[11,[241]]]],[8,[[11,[245]]]],[15,[[16,[242]]]],[15,[[16,[243]]]],[[17,8,18],[[16,[242]]]],[[17,8,18],[[16,[243]]]],[[241,65]],[[241,241]],[[241,241],241],[[241,241],12],[[]],[[]],[[]],[[]],[[]],[[]],[[242,8],15],[[243,8],15],[241,12],[242,12],[243,12],[241,12],[241,241],[242,7],[243,7],[[241,241],[[11,[63]]]],[[241,241]],[[241,241,12]],[[240,241,245]],[[240,52,52,52,52]],[[240,29,52,52]],[[240,244]],[242,8],[243,8],[[241,241],241],[[241,241]],[[241,241],241],[[]],[[]],[[]],[[]],[244,8],[241,8],[245,8],[[241,241]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[241,241],241],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[246,2]],[[247,2]],[248,[[5,[248]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[7,8,9],[[11,[[10,[9]]]]]],[[7,8,9],[[11,[[10,[9]]]]]],[248,248],[[]],[248],[[248,248],12],[[],12],[[246,13],14],[[247,13],14],[[248,13],14],[[]],[[]],[[[5,[248]]],248],[[]],[15,[[16,[246]]]],[15,[[16,[247]]]],[[17,8,18],[[16,[246]]]],[[17,8,18],[[16,[247]]]],[[248,249],[[24,[250]]]],[[]],[[]],[[]],[[246,8],15],[[247,8],15],[246,12],[247,12],[246,7],[247,7],[246,8],[247,8],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],20],[[],20],[[],20],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[251,2]],[[252,2]],[250,[[5,[250]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[7,8,9],[[11,[[10,[9]]]]]],[[7,8,9],[[11,[[10,[9]]]]]],[253,253],[254,254],[250,250],[[]],[[]],[[]],[250],[[253,253],12],[[254,254],12],[[250,250],12],[[],12],[[253,13],14],[[254,13],14],[[251,13],14],[[252,13],14],[[250,13],14],[[]],[[]],[[]],[[]],[[]],[[[5,[250]]],250],[8,[[11,[253]]]],[8,[[11,[254]]]],[15,[[16,[251]]]],[15,[[16,[252]]]],[[17,8,18],[[16,[251]]]],[[17,8,18],[[16,[252]]]],[[]],[[]],[[]],[[]],[[]],[[251,8],15],[[252,8],15],[251,12],[252,12],[251,7],[252,7],[[250,254]],[251,8],[252,8],[[]],[[]],[[]],[253,8],[254,8],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],20],[[],20],[[],20],[[],20],[[],20],[250],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[255,2]],[[256,2]],[257,[[5,[257]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[7,8,9],[[11,[[10,[9]]]]]],[[7,8,9],[[11,[[10,[9]]]]]],[257,257],[[]],[257],[[257,257],12],[[],12],[[255,13],14],[[256,13],14],[[257,13],14],[[]],[[]],[[]],[[[5,[257]]],257],[15,[[16,[255]]]],[15,[[16,[256]]]],[[17,8,18],[[16,[255]]]],[[17,8,18],[[16,[256]]]],[[]],[[]],[[]],[[255,8],15],[[256,8],15],[255,12],[256,12],[255,7],[256,7],[255,8],[256,8],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],20],[[],20],[[],20],0,0,0,0,0,0,0,0,0,0,0,[[258,2]],[[259,2]],[260,[[5,[260]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[7,8,9],[[11,[[10,[9]]]]]],[[7,8,9],[[11,[[10,[9]]]]]],[260,260],[[]],[260],[[260,260],12],[[],12],[[260,41],[[24,[257]]]],[[258,13],14],[[259,13],14],[[260,13],14],[[]],[[]],[[[5,[260]]],260],[[]],[15,[[16,[258]]]],[15,[[16,[259]]]],[[17,8,18],[[16,[258]]]],[[17,8,18],[[16,[259]]]],[[]],[[]],[[]],[[258,8],15],[[259,8],15],[258,12],[259,12],[258,7],[259,7],[258,8],[259,8],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],20],[[],20],[[],20],0,0,0,0,0,0,0,0,0,0,0,0,[[261,2]],[[262,2]],[263,[[5,[263]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[7,8,9],[[11,[[10,[9]]]]]],[[7,8,9],[[11,[[10,[9]]]]]],[263,263],[[]],[263],[[263,263],12],[[],12],[[261,13],14],[[262,13],14],[[263,13],14],[[]],[[]],[[]],[[[5,[263]]],263],[15,[[16,[261]]]],[15,[[16,[262]]]],[[17,8,18],[[16,[261]]]],[[17,8,18],[[16,[262]]]],[[]],[[]],[[]],[[261,8],15],[[262,8],15],[261,12],[262,12],[261,7],[262,7],[[263,41]],[261,8],[262,8],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],20],[[],20],[[],20],0,0,0,0,0,0,0,0,0,0,0,[[264,2]],[[265,2]],[266,[[5,[266]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[7,8,9],[[11,[[10,[9]]]]]],[[7,8,9],[[11,[[10,[9]]]]]],[266,266],[[]],[266],[[266,266],12],[[],12],[[264,13],14],[[265,13],14],[[266,13],14],[[]],[[]],[[]],[[[5,[266]]],266],[15,[[16,[264]]]],[15,[[16,[265]]]],[[17,8,18],[[16,[264]]]],[[17,8,18],[[16,[265]]]],[[266,29],[[24,[263]]]],[[]],[[]],[[]],[[264,8],15],[[265,8],15],[264,12],[265,12],[264,7],[265,7],[264,8],[265,8],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],20],[[],20],[[],20],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[267,2]],[[268,2]],[269,[[5,[269]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[7,8,9],[[11,[[10,[9]]]]]],[[7,8,9],[[11,[[10,[9]]]]]],[269,269],[[]],[269],[[269,269],12],[[],12],[[267,13],14],[[268,13],14],[[269,13],14],[[]],[[]],[[[5,[269]]],269],[[]],[15,[[16,[267]]]],[15,[[16,[268]]]],[[17,8,18],[[16,[267]]]],[[17,8,18],[[16,[268]]]],[[]],[[]],[[]],[[267,8],15],[[268,8],15],[267,12],[268,12],[267,7],[268,7],[267,8],[268,8],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],20],[[],20],[[],20],0,0,0,0,0,0,0,0,0,0,0,0,0,[[270,2]],[[271,2]],[272,[[5,[272]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[7,8,9],[[11,[[10,[9]]]]]],[[7,8,9],[[11,[[10,[9]]]]]],[273,273],[272,272],[[]],[[]],[272],[[273,273],12],[[272,272],12],[[],12],[[272,41],[[24,[269]]]],[[273,13],14],[[270,13],14],[[271,13],14],[[272,13],14],[[]],[[]],[[]],[[]],[[[5,[272]]],272],[8,[[11,[273]]]],[15,[[16,[270]]]],[15,[[16,[271]]]],[[17,8,18],[[16,[270]]]],[[17,8,18],[[16,[271]]]],[[]],[[]],[[]],[[]],[[270,8],15],[[271,8],15],[270,12],[271,12],[270,7],[271,7],[270,8],[271,8],[[]],[[]],[273,8],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],20],[[],20],[[],20],[[],20],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[274,2]],[[275,2]],[276,[[5,[276]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[7,8,9],[[11,[[10,[9]]]]]],[[7,8,9],[[11,[[10,[9]]]]]],[277,277],[276,276],[[]],[[]],[276],[[277,277],12],[[276,276],12],[[],12],[[277,13],14],[[274,13],14],[[275,13],14],[[276,13],14],[[]],[[]],[[]],[[]],[[[5,[276]]],276],[8,[[11,[277]]]],[15,[[16,[274]]]],[15,[[16,[275]]]],[[17,8,18],[[16,[274]]]],[[17,8,18],[[16,[275]]]],[[]],[[]],[[]],[[]],[[274,8],15],[[275,8],15],[274,12],[275,12],[274,7],[275,7],[[276,41]],[274,8],[275,8],[[]],[[]],[277,8],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],20],[[],20],[[],20],[[],20],0,0,0,0,0,0,0,0,0,0,0,[[278,2]],[[279,2]],[280,[[5,[280]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[7,8,9],[[11,[[10,[9]]]]]],[[7,8,9],[[11,[[10,[9]]]]]],[280,280],[[]],[280],[[280,280],12],[[],12],[[278,13],14],[[279,13],14],[[280,13],14],[[]],[[]],[[]],[[[5,[280]]],280],[15,[[16,[278]]]],[15,[[16,[279]]]],[[17,8,18],[[16,[278]]]],[[17,8,18],[[16,[279]]]],[[280,29],[[24,[276]]]],[[]],[[]],[[]],[[278,8],15],[[279,8],15],[278,12],[279,12],[278,7],[279,7],[278,8],[279,8],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],20],[[],20],[[],20],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[281,2]],[[282,2]],[283,[[5,[283]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[7,8,9],[[11,[[10,[9]]]]]],[[7,8,9],[[11,[[10,[9]]]]]],[283,283],[[]],[283],[[283,283],12],[[],12],[[281,13],14],[[282,13],14],[[283,13],14],[[]],[[]],[[]],[[[5,[283]]],283],[15,[[16,[281]]]],[15,[[16,[282]]]],[[17,8,18],[[16,[281]]]],[[17,8,18],[[16,[282]]]],[[283,82],[[24,[284]]]],[[]],[[]],[[]],[[281,8],15],[[282,8],15],[281,12],[282,12],[281,7],[282,7],[281,8],[282,8],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],20],[[],20],[[],20],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[285,2]],[[286,2]],[284,[[5,[284]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[7,8,9],[[11,[[10,[9]]]]]],[[7,8,9],[[11,[[10,[9]]]]]],[284,284],[[]],[284],[[284,284],12],[[],12],[[285,13],14],[[286,13],14],[[284,13],14],[[]],[[]],[[]],[[[5,[284]]],284],[15,[[16,[285]]]],[15,[[16,[286]]]],[[17,8,18],[[16,[285]]]],[[17,8,18],[[16,[286]]]],[[]],[[]],[[]],[[285,8],15],[[286,8],15],[285,12],[286,12],[285,7],[286,7],[285,8],[286,8],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],20],[[],20],[[],20],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[287,2]],[[288,2]],[289,[[5,[289]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[7,8,9],[[11,[[10,[9]]]]]],[[7,8,9],[[11,[[10,[9]]]]]],[289,289],[[]],[289],[[289,289],12],[[],12],[[287,13],14],[[288,13],14],[[289,13],14],[[]],[[]],[[[5,[289]]],289],[[]],[15,[[16,[287]]]],[15,[[16,[288]]]],[[17,8,18],[[16,[287]]]],[[17,8,18],[[16,[288]]]],[[]],[[]],[[]],[[287,8],15],[[288,8],15],[287,12],[288,12],[287,7],[288,7],[287,8],[288,8],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],20],[[],20],[[],20],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[290,2]],[[291,2]],[292,[[5,[292]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[7,8,9],[[11,[[10,[9]]]]]],[[7,8,9],[[11,[[10,[9]]]]]],[293,293],[294,294],[292,292],[[]],[[]],[[]],[292],[[293,293],12],[[294,294],12],[[292,292],12],[[],12],[[293,13],14],[[294,13],14],[[290,13],14],[[291,13],14],[[292,13],14],[[]],[[]],[[]],[[]],[[]],[[[5,[292]]],292],[8,[[11,[293]]]],[8,[[11,[294]]]],[15,[[16,[290]]]],[15,[[16,[291]]]],[[17,8,18],[[16,[290]]]],[[17,8,18],[[16,[291]]]],[[292,41,41,25,8,52,52],[[24,[289]]]],[[292,41],[[24,[295]]]],[[]],[[]],[[]],[[]],[[]],[[290,8],15],[[291,8],15],[290,12],[291,12],[290,7],[291,7],[[292,8]],[290,8],[291,8],[[]],[[]],[[]],[293,8],[294,8],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],20],[[],20],[[],20],[[],20],[[],20],[[292,52]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[295,25,8]],[[295,8]],[[296,2]],[[297,2]],[295,[[5,[295]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[7,8,9],[[11,[[10,[9]]]]]],[[7,8,9],[[11,[[10,[9]]]]]],[298,298],[299,299],[295,295],[[]],[[]],[[]],[295],[[298,298],12],[[299,299],12],[[295,295],12],[[],12],[[298,13],14],[[299,13],14],[[296,13],14],[[297,13],14],[[295,13],14],[[]],[[]],[[]],[[]],[[]],[[[5,[295]]],295],[8,[[11,[298]]]],[8,[[11,[299]]]],[15,[[16,[296]]]],[15,[[16,[297]]]],[[17,8,18],[[16,[296]]]],[[17,8,18],[[16,[297]]]],[[]],[[]],[[]],[[]],[[]],[[296,8],15],[[297,8],15],[296,12],[297,12],[296,7],[297,7],[[295,25,8,8]],[[295,29]],[[295,[11,[82]]]],[295],[295],[[295,[11,[295]]]],[[295,29]],[[295,52,52,52,52]],[[295,25,8,52,52]],[296,8],[297,8],[[]],[[]],[[]],[298,8],[299,8],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],20],[[],20],[[],20],[[],20],[[],20],[295],[295],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[300,2]],[[301,2]],[302,[[5,[302]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[7,8,9],[[11,[[10,[9]]]]]],[[7,8,9],[[11,[[10,[9]]]]]],[303,303],[302,302],[[]],[[]],[302],[[303,303],12],[[302,302],12],[[],12],[[303,13],14],[[300,13],14],[[301,13],14],[[302,13],14],[[]],[[]],[[]],[[]],[[[5,[302]]],302],[8,[[11,[303]]]],[15,[[16,[300]]]],[15,[[16,[301]]]],[[17,8,18],[[16,[300]]]],[[17,8,18],[[16,[301]]]],[[302,25,8]],[[]],[[]],[[]],[[]],[[300,8],15],[[301,8],15],[300,12],[301,12],[300,7],[301,7],[300,8],[301,8],[[]],[[]],[303,8],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],20],[[],20],[[],20],[[],20],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],304],[[],305],[[],306],[[307,2]],[[308,2]],[309,[[5,[309]]]],[[304,304],304],[[305,305],305],[[306,306],306],[[304,304]],[[305,305]],[[306,306]],[[304,304],304],[[305,305],305],[[306,306],306],[[304,304]],[[305,305]],[[306,306]],[304,8],[305,8],[306,8],[[304,304],304],[[305,305],305],[[306,306],306],[[304,304]],[[305,305]],[[306,306]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[7,8,9],[[11,[[10,[9]]]]]],[[7,8,9],[[11,[[10,[9]]]]]],[310,310],[304,304],[305,305],[306,306],[309,309],[[]],[[]],[[]],[[]],[[]],[[304,304],63],[[305,305],63],[[306,306],63],[304,304],[305,305],[306,306],[[304,304],12],[[305,305],12],[[306,306],12],[309],[[304,304],304],[[305,305],305],[[306,306],306],[[],304],[[],305],[[],306],[[310,310],12],[[304,304],12],[[305,305],12],[[306,306],12],[[309,309],12],[[],12],[[],12],[[],12],[[],12],[[304,64]],[[305,64]],[[306,64]],[[310,13],14],[[304,13],14],[[304,13],14],[[304,13],14],[[304,13],14],[[304,13],14],[[305,13],14],[[305,13],14],[[305,13],14],[[305,13],14],[[305,13],14],[[306,13],14],[[306,13],14],[[306,13],14],[[306,13],14],[[306,13],14],[[307,13],14],[[308,13],14],[[309,13],14],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[5,[309]]],309],[8,[[11,[304]]]],[8,[[11,[305]]]],[8,[[11,[306]]]],[8,304],[8,305],[8,306],[8,304],[8,305],[8,306],[64,304],[64,305],[64,306],[8,[[11,[310]]]],[8,[[11,[304]]]],[8,[[11,[305]]]],[8,[[11,[306]]]],[15,[[16,[307]]]],[15,[[16,[308]]]],[[17,8,18],[[16,[307]]]],[[17,8,18],[[16,[308]]]],[[304,65]],[[305,65]],[[306,65]],[[304,304]],[[305,305]],[[306,306]],[[304,304],304],[[305,305],305],[[306,306],306],[[304,304],12],[[305,305],12],[[306,306],12],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[307,8],15],[[308,8],15],[304,12],[305,12],[306,12],[307,12],[308,12],[304,12],[305,12],[306,12],[304,304],[305,305],[306,306],[307,7],[308,7],[[304,304],[[11,[63]]]],[[305,305],[[11,[63]]]],[[306,306],[[11,[63]]]],[[304,304]],[[305,305]],[[306,306]],[[304,304,12]],[[305,305,12]],[[306,306,12]],[[309,304]],[[309,52,52,52,52]],[[309,8]],[[309,305]],[[309,52,52]],[[309,52,52]],[307,8],[308,8],[[304,304],304],[[305,305],305],[[306,306],306],[[304,304]],[[305,305]],[[306,306]],[[304,304],304],[[305,305],305],[[306,306],306],[[]],[[]],[[]],[[]],[[]],[310,8],[304,8],[305,8],[306,8],[[304,304]],[[305,305]],[[306,306]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[304,304],304],[[305,305],305],[[306,306],306],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[311,2]],[[312,2]],[313,[[5,[313]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[7,8,9],[[11,[[10,[9]]]]]],[[7,8,9],[[11,[[10,[9]]]]]],[314,314],[313,313],[[]],[[]],[313,[[24,[309]]]],[313],[[314,314],12],[[313,313],12],[[],12],[[314,13],14],[[311,13],14],[[312,13],14],[[313,13],14],[[]],[[]],[[]],[[]],[[[5,[313]]],313],[8,[[11,[314]]]],[15,[[16,[311]]]],[15,[[16,[312]]]],[[17,8,18],[[16,[311]]]],[[17,8,18],[[16,[312]]]],[[313,41],[[24,[315]]]],[[]],[[]],[[]],[[]],[[311,8],15],[[312,8],15],[311,12],[312,12],[311,7],[312,7],[[313,8]],[311,8],[312,8],[[]],[[]],[314,8],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],20],[[],20],[[],20],[[],20],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[315,8]],[[316,2]],[[317,2]],[315,[[5,[315]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[7,8,9],[[11,[[10,[9]]]]]],[[7,8,9],[[11,[[10,[9]]]]]],[318,318],[315,315],[[]],[[]],[315],[[318,318],12],[[315,315],12],[[],12],[[318,13],14],[[316,13],14],[[317,13],14],[[315,13],14],[[]],[[]],[[]],[[]],[[[5,[315]]],315],[8,[[11,[318]]]],[15,[[16,[316]]]],[15,[[16,[317]]]],[[17,8,18],[[16,[316]]]],[[17,8,18],[[16,[317]]]],[[315,315,309],[[24,[302]]]],[315,[[24,[319]]]],[[]],[[]],[[]],[[]],[[316,8],15],[[317,8],15],[316,12],[317,12],[316,7],[317,7],[[315,52,52,52,52]],[316,8],[317,8],[[]],[[]],[318,8],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],20],[[],20],[[],20],[[],20],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[319,25,8]],[[320,2]],[[321,2]],[319,[[5,[319]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[7,8,9],[[11,[[10,[9]]]]]],[[7,8,9],[[11,[[10,[9]]]]]],[322,322],[323,323],[319,319],[[]],[[]],[[]],[319],[[322,322],12],[[323,323],12],[[319,319],12],[[],12],[[322,13],14],[[323,13],14],[[320,13],14],[[321,13],14],[[319,13],14],[[]],[[]],[[]],[[]],[[[5,[319]]],319],[[]],[8,[[11,[322]]]],[8,[[11,[323]]]],[15,[[16,[320]]]],[15,[[16,[321]]]],[[17,8,18],[[16,[320]]]],[[17,8,18],[[16,[321]]]],[[]],[[]],[[]],[[]],[[]],[[320,8],15],[[321,8],15],[320,12],[321,12],[320,7],[321,7],[[319,25,8,8]],[[319,29]],[[319,[11,[82]]]],[[319,52,52]],[319],[[319,52,52]],[319],[[319,[11,[319]]]],[[319,29]],[[319,25,8,52,52]],[320,8],[321,8],[[]],[[]],[[]],[322,8],[323,8],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],20],[[],20],[[],20],[[],20],[[],20],[319],[319],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[324,2]],[[325,2]],[326,[[5,[326]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[7,8,9],[[11,[[10,[9]]]]]],[[7,8,9],[[11,[[10,[9]]]]]],[326,326],[[]],[326],[[326,326],12],[[],12],[[324,13],14],[[325,13],14],[[326,13],14],[[]],[[]],[[]],[[[5,[326]]],326],[15,[[16,[324]]]],[15,[[16,[325]]]],[[17,8,18],[[16,[324]]]],[[17,8,18],[[16,[325]]]],[[326,41,25],[[24,[327]]]],[[]],[[]],[[]],[[324,8],15],[[325,8],15],[324,12],[325,12],[324,7],[325,7],[324,8],[325,8],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],20],[[],20],[[],20],0,0,0,0,0,0,0,0,0,[[328,2]],[[329,2]],[327,[[5,[327]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[7,8,9],[[11,[[10,[9]]]]]],[[7,8,9],[[11,[[10,[9]]]]]],[327,327],[[]],[327],[[327,327],12],[[],12],[[328,13],14],[[329,13],14],[[327,13],14],[[]],[[]],[[]],[[[5,[327]]],327],[15,[[16,[328]]]],[15,[[16,[329]]]],[[17,8,18],[[16,[328]]]],[[17,8,18],[[16,[329]]]],[[]],[[]],[[]],[[328,8],15],[[329,8],15],[328,12],[329,12],[328,7],[329,7],[328,8],[329,8],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],20],[[],20],[[],20],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[330,2]],[[331,2]],[332,[[5,[332]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[7,8,9],[[11,[[10,[9]]]]]],[[7,8,9],[[11,[[10,[9]]]]]],[333,333],[332,332],[[]],[[]],[332],[[333,333],12],[[332,332],12],[[],12],[[333,13],14],[[330,13],14],[[331,13],14],[[332,13],14],[[]],[[]],[[]],[[]],[[[5,[332]]],332],[8,[[11,[333]]]],[15,[[16,[330]]]],[15,[[16,[331]]]],[[17,8,18],[[16,[330]]]],[[17,8,18],[[16,[331]]]],[[]],[[]],[[]],[[]],[[330,8],15],[[331,8],15],[330,12],[331,12],[330,7],[331,7],[[332,52,52]],[[332,147,147,147,147]],[330,8],[331,8],[[]],[[]],[333,8],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],20],[[],20],[[],20],[[],20],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[334,2]],[[335,2]],[336,[[5,[336]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[7,8,9],[[11,[[10,[9]]]]]],[[7,8,9],[[11,[[10,[9]]]]]],[337,337],[336,336],[[]],[[]],[336],[[337,337],12],[[336,336],12],[[],12],[[337,13],14],[[334,13],14],[[335,13],14],[[336,13],14],[[]],[[]],[[]],[[[5,[336]]],336],[[]],[8,[[11,[337]]]],[15,[[16,[334]]]],[15,[[16,[335]]]],[[17,8,18],[[16,[334]]]],[[17,8,18],[[16,[335]]]],[[336,41],[[24,[332]]]],[[]],[[]],[[]],[[]],[[334,8],15],[[335,8],15],[334,12],[335,12],[334,7],[335,7],[334,8],[335,8],[[]],[[]],[337,8],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],20],[[],20],[[],20],[[],20],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[338,2]],[[339,2]],[340,[[5,[340]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[7,8,9],[[11,[[10,[9]]]]]],[[7,8,9],[[11,[[10,[9]]]]]],[341,341],[340,340],[[]],[[]],[340],[[341,341],12],[[340,340],12],[[],12],[[341,13],14],[[338,13],14],[[339,13],14],[[340,13],14],[[]],[[]],[[]],[[]],[[[5,[340]]],340],[8,[[11,[341]]]],[15,[[16,[338]]]],[15,[[16,[339]]]],[[17,8,18],[[16,[338]]]],[[17,8,18],[[16,[339]]]],[[]],[[]],[[]],[[]],[[338,8],15],[[339,8],15],[338,12],[339,12],[338,7],[339,7],[[340,[11,[342]]]],[[340,[11,[342]]]],[338,8],[339,8],[[]],[[]],[341,8],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],20],[[],20],[[],20],[[],20],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[343,2]],[[344,2]],[345,[[5,[345]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[7,8,9],[[11,[[10,[9]]]]]],[[7,8,9],[[11,[[10,[9]]]]]],[345,345],[[]],[345,[[24,[342]]]],[345],[[345,345],12],[[],12],[[343,13],14],[[344,13],14],[[345,13],14],[[]],[[]],[[[5,[345]]],345],[[]],[15,[[16,[343]]]],[15,[[16,[344]]]],[[17,8,18],[[16,[343]]]],[[17,8,18],[[16,[344]]]],[[345,25],[[24,[340]]]],[[]],[[]],[[]],[[343,8],15],[[344,8],15],[343,12],[344,12],[343,7],[344,7],[343,8],[344,8],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],20],[[],20],[[],20],0,0,0,0,0,0,0,0,0,0,0,0,[[346,2]],[[347,2]],[348,[[5,[348]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[7,8,9],[[11,[[10,[9]]]]]],[[7,8,9],[[11,[[10,[9]]]]]],[348,348],[[]],[348],[[348,348],12],[[],12],[[346,13],14],[[347,13],14],[[348,13],14],[[]],[[]],[[[5,[348]]],348],[[]],[15,[[16,[346]]]],[15,[[16,[347]]]],[[17,8,18],[[16,[346]]]],[[17,8,18],[[16,[347]]]],[[]],[[]],[[]],[[346,8],15],[[347,8],15],[346,12],[347,12],[346,7],[347,7],[[348,29,30]],[346,8],[347,8],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],20],[[],20],[[],20],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[349,2]],[[350,2]],[342,[[5,[342]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[7,8,9],[[11,[[10,[9]]]]]],[[7,8,9],[[11,[[10,[9]]]]]],[351,351],[342,342],[[]],[[]],[342],[[351,351],12],[[342,342],12],[[],12],[[351,13],14],[[349,13],14],[[350,13],14],[[342,13],14],[[]],[[]],[[]],[[]],[[[5,[342]]],342],[8,[[11,[351]]]],[15,[[16,[349]]]],[15,[[16,[350]]]],[[17,8,18],[[16,[349]]]],[[17,8,18],[[16,[350]]]],[[]],[[]],[[]],[[]],[[349,8],15],[[350,8],15],[349,12],[350,12],[[342,29]],[349,7],[350,7],[349,8],[350,8],[[]],[[]],[351,8],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],20],[[],20],[[],20],[[],20],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[352,2]],[[353,2]],[354,[[5,[354]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[7,8,9],[[11,[[10,[9]]]]]],[[7,8,9],[[11,[[10,[9]]]]]],[355,355],[356,356],[354,354],[[]],[[]],[[]],[354],[[355,355],12],[[356,356],12],[[354,354],12],[[],12],[[355,13],14],[[356,13],14],[[352,13],14],[[353,13],14],[[354,13],14],[[]],[[]],[[]],[[]],[[[5,[354]]],354],[[]],[8,[[11,[355]]]],[8,[[11,[356]]]],[15,[[16,[352]]]],[15,[[16,[353]]]],[[17,8,18],[[16,[352]]]],[[17,8,18],[[16,[353]]]],[[]],[[]],[[]],[[]],[[]],[[352,8],15],[[353,8],15],[352,12],[353,12],[352,7],[353,7],[352,8],[353,8],[[]],[[]],[[]],[355,8],[356,8],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],20],[[],20],[[],20],[[],20],[[],20],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[357,2]],[[358,2]],[359,[[5,[359]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[359,52,82],[[24,[354]]]],[[7,8,9],[[11,[[10,[9]]]]]],[[7,8,9],[[11,[[10,[9]]]]]],[359,359],[[]],[359],[[359,359],12],[[],12],[[357,13],14],[[358,13],14],[[359,13],14],[[]],[[]],[[[5,[359]]],359],[[]],[15,[[16,[357]]]],[15,[[16,[358]]]],[[17,8,18],[[16,[357]]]],[[17,8,18],[[16,[358]]]],[[]],[[]],[[]],[[357,8],15],[[358,8],15],[357,12],[358,12],[357,7],[358,7],[357,8],[358,8],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],20],[[],20],[[],20],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[360,25]],[[361,2]],[[362,2]],[360,[[5,[360]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[7,8,9],[[11,[[10,[9]]]]]],[[7,8,9],[[11,[[10,[9]]]]]],[363,363],[364,364],[360,360],[[]],[[]],[[]],[360],[360],[[363,363],12],[[364,364],12],[[360,360],12],[[],12],[[363,13],14],[[364,13],14],[[361,13],14],[[362,13],14],[[360,13],14],[[]],[[]],[[]],[[]],[[[5,[360]]],360],[[]],[8,[[11,[363]]]],[8,[[11,[364]]]],[15,[[16,[361]]]],[15,[[16,[362]]]],[[17,8,18],[[16,[361]]]],[[17,8,18],[[16,[362]]]],[[]],[[]],[[]],[[]],[[]],[[361,8],15],[[362,8],15],[361,12],[362,12],[361,7],[362,7],[[360,[11,[82]]]],[360],[360],[[360,41,52,52,52,52]],[361,8],[362,8],[[]],[[]],[[]],[363,8],[364,8],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],20],[[],20],[[],20],[[],20],[[],20],[360],[360],[360],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[365,2]],[[366,2]],[367,[[5,[367]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[7,8,9],[[11,[[10,[9]]]]]],[[7,8,9],[[11,[[10,[9]]]]]],[367,367],[[]],[[367,367],12],[[],12],[[365,13],14],[[366,13],14],[[367,13],14],[[]],[[]],[[]],[[[5,[367]]],367],[15,[[16,[365]]]],[15,[[16,[366]]]],[[17,8,18],[[16,[365]]]],[[17,8,18],[[16,[366]]]],[[]],[[]],[[]],[[365,8],15],[[366,8],15],[365,12],[366,12],[365,7],[366,7],[365,8],[366,8],[367],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],20],[[],20],[[],20],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[368,2]],[[369,2]],[370,[[5,[370]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[7,8,9],[[11,[[10,[9]]]]]],[[7,8,9],[[11,[[10,[9]]]]]],[370,370],[[]],[370],[[370,370],12],[[],12],[[368,13],14],[[369,13],14],[[370,13],14],[[]],[[]],[[[5,[370]]],370],[[]],[15,[[16,[368]]]],[15,[[16,[369]]]],[[17,8,18],[[16,[368]]]],[[17,8,18],[[16,[369]]]],[[370,82],[[24,[371]]]],[[]],[[]],[[]],[[368,8],15],[[369,8],15],[368,12],[369,12],[368,7],[369,7],[368,8],[369,8],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],20],[[],20],[[],20],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[372,2]],[[373,2]],[371,[[5,[371]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[7,8,9],[[11,[[10,[9]]]]]],[[7,8,9],[[11,[[10,[9]]]]]],[374,374],[371,371],[[]],[[]],[371],[[374,374],12],[[371,371],12],[[],12],[[374,13],14],[[372,13],14],[[373,13],14],[[371,13],14],[[]],[[]],[[]],[[[5,[371]]],371],[[]],[8,[[11,[374]]]],[15,[[16,[372]]]],[15,[[16,[373]]]],[[17,8,18],[[16,[372]]]],[[17,8,18],[[16,[373]]]],[[]],[[]],[[]],[[]],[[372,8],15],[[373,8],15],[372,12],[373,12],[372,7],[373,7],[[371,30]],[372,8],[373,8],[[]],[[]],[374,8],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],20],[[],20],[[],20],[[],20],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[375,2]],[[376,2]],[377,[[5,[377]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[7,8,9],[[11,[[10,[9]]]]]],[[7,8,9],[[11,[[10,[9]]]]]],[378,378],[377,377],[[]],[[]],[[378,378],12],[[377,377],12],[[],12],[[378,13],14],[[375,13],14],[[376,13],14],[[377,13],14],[[]],[[]],[[]],[[[5,[377]]],377],[[]],[8,[[11,[378]]]],[15,[[16,[375]]]],[15,[[16,[376]]]],[[17,8,18],[[16,[375]]]],[[17,8,18],[[16,[376]]]],[377,[[24,[379]]]],[[]],[[]],[[]],[[]],[[375,8],15],[[376,8],15],[375,12],[376,12],[375,7],[376,7],[375,8],[376,8],[[]],[[]],[378,8],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],20],[[],20],[[],20],[[],20],0,0,0,0,0,0,0,[[380,2]],[[381,2]],[379,[[5,[379]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[7,8,9],[[11,[[10,[9]]]]]],[[7,8,9],[[11,[[10,[9]]]]]],[379,379],[[]],[379],[[379,379],12],[[],12],[[380,13],14],[[381,13],14],[[379,13],14],[[]],[[]],[[[5,[379]]],379],[[]],[15,[[16,[380]]]],[15,[[16,[381]]]],[[17,8,18],[[16,[380]]]],[[17,8,18],[[16,[381]]]],[[]],[[]],[[]],[[380,8],15],[[381,8],15],[380,12],[381,12],[380,7],[381,7],[380,8],[381,8],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],20],[[],20],[[],20],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[382,2]],[[383,2]],[384,[[5,[384]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[7,8,9],[[11,[[10,[9]]]]]],[[7,8,9],[[11,[[10,[9]]]]]],[385,385],[386,386],[384,384],[[]],[[]],[[]],[384],[[385,385],12],[[386,386],12],[[384,384],12],[[],12],[[385,13],14],[[386,13],14],[[382,13],14],[[383,13],14],[[384,13],14],[[]],[[]],[[]],[[]],[[]],[[[5,[384]]],384],[8,[[11,[385]]]],[8,[[11,[386]]]],[15,[[16,[382]]]],[15,[[16,[383]]]],[[17,8,18],[[16,[382]]]],[[17,8,18],[[16,[383]]]],[[384,41,[11,[82]],386,29],[[24,[387]]]],[[]],[[]],[[]],[[]],[[]],[[382,8],15],[[383,8],15],[382,12],[383,12],[382,7],[383,7],[382,8],[383,8],[[]],[[]],[[]],[385,8],[386,8],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],20],[[],20],[[],20],[[],20],[[],20],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[387,8]],[[],388],[[389,2]],[[390,2]],[387,[[5,[387]]]],[[388,388],388],[[388,388]],[[388,388],388],[[388,388]],[388,8],[[388,388],388],[[388,388]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[7,8,9],[[11,[[10,[9]]]]]],[[7,8,9],[[11,[[10,[9]]]]]],[391,391],[392,392],[388,388],[387,387],[[]],[[]],[[]],[[]],[[388,388],63],[388,388],[[388,388],12],[387],[[388,388],388],[[],388],[[391,391],12],[[392,392],12],[[388,388],12],[[387,387],12],[[],12],[[],12],[[388,64]],[[391,13],14],[[392,13],14],[[388,13],14],[[388,13],14],[[388,13],14],[[388,13],14],[[388,13],14],[[389,13],14],[[390,13],14],[[387,13],14],[[]],[[]],[[]],[[]],[[]],[[]],[[[5,[387]]],387],[8,[[11,[388]]]],[8,388],[8,388],[64,388],[8,[[11,[391]]]],[8,[[11,[392]]]],[8,[[11,[388]]]],[15,[[16,[389]]]],[15,[[16,[390]]]],[[17,8,18],[[16,[389]]]],[[17,8,18],[[16,[390]]]],[[387,393]],[[388,65]],[[388,388]],[[388,388],388],[[388,388],12],[[]],[[]],[[]],[[]],[[]],[[]],[[389,8],15],[[390,8],15],[388,12],[389,12],[390,12],[388,12],[388,388],[389,7],[390,7],[[388,388],[[11,[63]]]],[[388,388]],[[388,388,12]],[[387,388]],[[387,52]],[[387,391]],[[387,386]],[[387,52,52,52,52]],[[387,8,8]],[389,8],[390,8],[[388,388],388],[[388,388]],[[388,388],388],[[]],[[]],[[]],[[]],[391,8],[392,8],[388,8],[[388,388]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[388,388],388],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[394,2]],[[395,2]],[396,[[5,[396]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[7,8,9],[[11,[[10,[9]]]]]],[[7,8,9],[[11,[[10,[9]]]]]],[397,397],[396,396],[[]],[[]],[[397,397],12],[[396,396],12],[[],12],[[397,13],14],[[394,13],14],[[395,13],14],[[396,13],14],[[]],[[]],[[]],[[[5,[396]]],396],[[]],[8,[[11,[397]]]],[15,[[16,[394]]]],[15,[[16,[395]]]],[[17,8,18],[[16,[394]]]],[[17,8,18],[[16,[395]]]],[[]],[[]],[[]],[[]],[[394,8],15],[[395,8],15],[394,12],[395,12],[394,7],[395,7],[[396,52,52,52]],[[396,398]],[[396,52,52]],[[396,147]],[[396,399]],[394,8],[395,8],[[]],[[]],[397,8],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],20],[[],20],[[],20],[[],20],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[400],[[401,2]],[[402,2]],[400,[[5,[400]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[7,8,9],[[11,[[10,[9]]]]]],[[7,8,9],[[11,[[10,[9]]]]]],[403,403],[400,400],[[]],[[]],[400],[[400,404]],[[400,404],[[24,[396]]]],[[403,403],12],[[400,400],12],[[],12],[[403,13],14],[[401,13],14],[[402,13],14],[[400,13],14],[[]],[[]],[[]],[[[5,[400]]],400],[[]],[8,[[11,[403]]]],[15,[[16,[401]]]],[15,[[16,[402]]]],[[17,8,18],[[16,[401]]]],[[17,8,18],[[16,[402]]]],[[]],[[]],[[]],[[]],[[401,8],15],[[402,8],15],[401,12],[402,12],[401,7],[402,7],[401,8],[402,8],[400],[[]],[[]],[403,8],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],20],[[],20],[[],20],[[],20],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[405,2]],[[406,2]],[404,[[5,[404]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[7,8,9],[[11,[[10,[9]]]]]],[[7,8,9],[[11,[[10,[9]]]]]],[404,404],[[]],[[404,404],12],[[],12],[[405,13],14],[[406,13],14],[[404,13],14],[[]],[[]],[[[5,[404]]],404],[[]],[15,[[16,[405]]]],[15,[[16,[406]]]],[[17,8,18],[[16,[405]]]],[[17,8,18],[[16,[406]]]],[[]],[[]],[[]],[[405,8],15],[[406,8],15],[405,12],[406,12],[405,7],[406,7],[405,8],[406,8],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],20],[[],20],[[],20],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[407,2]],[[408,2]],[409,[[5,[409]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[7,8,9],[[11,[[10,[9]]]]]],[[7,8,9],[[11,[[10,[9]]]]]],[409,409],[[]],[[409,8],[[24,[400]]]],[[409,409],12],[[],12],[[407,13],14],[[408,13],14],[[409,13],14],[[]],[[]],[[[5,[409]]],409],[[]],[15,[[16,[407]]]],[15,[[16,[408]]]],[[17,8,18],[[16,[407]]]],[[17,8,18],[[16,[408]]]],[[]],[[]],[[]],[[407,8],15],[[408,8],15],[407,12],[408,12],[407,7],[408,7],[407,8],[408,8],[409],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],20],[[],20],[[],20],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[410,2]],[[411,2]],[398,[[5,[398]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[7,8,9],[[11,[[10,[9]]]]]],[[7,8,9],[[11,[[10,[9]]]]]],[398,398],[[]],[[398,398],12],[[],12],[[410,13],14],[[411,13],14],[[398,13],14],[[]],[[]],[[]],[[[5,[398]]],398],[15,[[16,[410]]]],[15,[[16,[411]]]],[[17,8,18],[[16,[410]]]],[[17,8,18],[[16,[411]]]],[[]],[[]],[[]],[[410,8],15],[[411,8],15],[410,12],[411,12],[410,7],[411,7],[410,8],[411,8],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],20],[[],20],[[],20],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[412,2]],[[413,2]],[414,[[5,[414]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[7,8,9],[[11,[[10,[9]]]]]],[[7,8,9],[[11,[[10,[9]]]]]],[414,414],[[]],[414],[[414,414],12],[[],12],[[412,13],14],[[413,13],14],[[414,13],14],[[]],[[]],[[]],[[[5,[414]]],414],[15,[[16,[412]]]],[15,[[16,[413]]]],[[17,8,18],[[16,[412]]]],[[17,8,18],[[16,[413]]]],[[414,82],[[24,[415]]]],[[]],[[]],[[]],[[412,8],15],[[413,8],15],[412,12],[413,12],[412,7],[413,7],[412,8],[413,8],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],20],[[],20],[[],20],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[416,2]],[[417,2]],[415,[[5,[415]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[7,8,9],[[11,[[10,[9]]]]]],[[7,8,9],[[11,[[10,[9]]]]]],[418,418],[419,419],[415,415],[[]],[[]],[[]],[415],[[418,418],12],[[419,419],12],[[415,415],12],[[],12],[[418,13],14],[[419,13],14],[[416,13],14],[[417,13],14],[[415,13],14],[[]],[[]],[[]],[[]],[[[5,[415]]],415],[[]],[8,[[11,[418]]]],[8,[[11,[419]]]],[15,[[16,[416]]]],[15,[[16,[417]]]],[[17,8,18],[[16,[416]]]],[[17,8,18],[[16,[417]]]],[[]],[[]],[[]],[[]],[[]],[[416,8],15],[[417,8],15],[416,12],[417,12],[416,7],[417,7],[[415,418]],[416,8],[417,8],[[]],[[]],[[]],[418,8],[419,8],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],20],[[],20],[[],20],[[],20],[[],20],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],420],[[421,2]],[[422,2]],[423,[[5,[423]]]],[[420,420],420],[[420,420]],[[420,420],420],[[420,420]],[420,8],[[420,420],420],[[420,420]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[7,8,9],[[11,[[10,[9]]]]]],[[7,8,9],[[11,[[10,[9]]]]]],[424,424],[420,420],[423,423],[[]],[[]],[[]],[[420,420],63],[420,420],[[420,420],12],[[423,125]],[[423,125]],[423],[[420,420],420],[[],420],[[424,424],12],[[420,420],12],[[423,423],12],[[],12],[[],12],[[420,64]],[[424,13],14],[[420,13],14],[[420,13],14],[[420,13],14],[[420,13],14],[[420,13],14],[[421,13],14],[[422,13],14],[[423,13],14],[[]],[[]],[[]],[[]],[[[5,[423]]],423],[[]],[8,[[11,[420]]]],[8,420],[8,420],[64,420],[8,[[11,[424]]]],[8,[[11,[420]]]],[15,[[16,[421]]]],[15,[[16,[422]]]],[[17,8,18],[[16,[421]]]],[[17,8,18],[[16,[422]]]],[[420,65]],[[420,420]],[[420,420],420],[[420,420],12],[[]],[[]],[[]],[[]],[[]],[[421,8],15],[[422,8],15],[420,12],[421,12],[422,12],[420,12],[420,420],[421,7],[422,7],[[420,420],[[11,[63]]]],[[420,420]],[[420,420,12]],[421,8],[422,8],[[420,420],420],[[420,420]],[[420,420],420],[[]],[[]],[[]],[424,8],[420,8],[[420,420]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],20],[[],20],[[],20],[[],20],[[],20],[[420,420],420],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[425,2]],[[426,2]],[427,[[5,[427]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[427,52,82],[[24,[423]]]],[[427,52,82,52,52,52,52],[[24,[423]]]],[[7,8,9],[[11,[[10,[9]]]]]],[[7,8,9],[[11,[[10,[9]]]]]],[427,427],[[]],[427],[[427,427],12],[[],12],[[425,13],14],[[426,13],14],[[427,13],14],[[]],[[]],[[[5,[427]]],427],[[]],[15,[[16,[425]]]],[15,[[16,[426]]]],[[17,8,18],[[16,[425]]]],[[17,8,18],[[16,[426]]]],[[]],[[]],[[]],[[425,8],15],[[426,8],15],[425,12],[426,12],[425,7],[426,7],[425,8],[426,8],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],20],[[],20],[[],20],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[428,2]],[[429,2]],[430,[[5,[430]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[7,8,9],[[11,[[10,[9]]]]]],[[7,8,9],[[11,[[10,[9]]]]]],[430,430],[[]],[[430,[11,[25]]],[[24,[431]]]],[[430,[11,[25]],[11,[82]]],[[24,[431]]]],[430],[[430,430],12],[[],12],[[428,13],14],[[429,13],14],[[430,13],14],[[]],[[]],[[[5,[430]]],430],[[]],[15,[[16,[428]]]],[15,[[16,[429]]]],[[17,8,18],[[16,[428]]]],[[17,8,18],[[16,[429]]]],[[]],[[]],[[]],[[428,8],15],[[429,8],15],[428,12],[429,12],[428,7],[429,7],[428,8],[429,8],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],20],[[],20],[[],20],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[432,2]],[[433,2]],[431,[[5,[431]]]],[[431,8,434,147]],[[431,8,434,147,52]],[[431,435]],[[431,8,434]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[431,8,8,436]],[[],6],[[7,8,9],[[11,[[10,[9]]]]]],[[7,8,9],[[11,[[10,[9]]]]]],[437,437],[431,431],[[]],[[]],[431],[[437,437],12],[[431,431],12],[[],12],[[437,13],14],[[432,13],14],[[433,13],14],[[431,13],14],[431],[[]],[[]],[[]],[[]],[[[5,[431]]],431],[8,[[11,[437]]]],[15,[[16,[432]]]],[15,[[16,[433]]]],[[17,8,18],[[16,[432]]]],[[17,8,18],[[16,[433]]]],[[]],[[]],[[]],[[]],[[432,8],15],[[433,8],15],[432,12],[433,12],[[431,8,147,147]],[[431,8,8,8,8,8]],[432,7],[433,7],[432,8],[433,8],[[]],[[]],[437,8],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],20],[[],20],[[],20],[[],20],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[438,2]],[[439,2]],[393,[[5,[393]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[7,8,9],[[11,[[10,[9]]]]]],[[7,8,9],[[11,[[10,[9]]]]]],[440,440],[393,393],[[]],[[]],[393],[[440,440],12],[[393,393],12],[[],12],[[440,13],14],[[438,13],14],[[439,13],14],[[393,13],14],[[]],[[]],[[]],[[]],[[[5,[393]]],393],[8,[[11,[440]]]],[15,[[16,[438]]]],[15,[[16,[439]]]],[[17,8,18],[[16,[438]]]],[[17,8,18],[[16,[439]]]],[[393,25,8]],[[]],[[]],[[]],[[]],[[438,8],15],[[439,8],15],[438,12],[439,12],[438,7],[439,7],[[393,441,8]],[438,8],[439,8],[[]],[[]],[440,8],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],20],[[],20],[[],20],[[],20],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],442],[[443,2]],[[444,2]],[441,[[5,[441]]]],[[442,442],442],[[442,442]],[[442,442],442],[[442,442]],[442,8],[[442,442],442],[[442,442]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[7,8,9],[[11,[[10,[9]]]]]],[[7,8,9],[[11,[[10,[9]]]]]],[445,445],[446,446],[447,447],[442,442],[441,441],[[]],[[]],[[]],[[]],[[]],[[442,442],63],[442,442],[[442,442],12],[441],[[442,442],442],[[],442],[[445,445],12],[[446,446],12],[[447,447],12],[[442,442],12],[[441,441],12],[[],12],[[],12],[[442,64]],[[445,13],14],[[446,13],14],[[447,13],14],[[442,13],14],[[442,13],14],[[442,13],14],[[442,13],14],[[442,13],14],[[443,13],14],[[444,13],14],[[441,13],14],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[5,[441]]],441],[8,[[11,[442]]]],[8,442],[8,442],[64,442],[8,[[11,[445]]]],[8,[[11,[446]]]],[8,[[11,[447]]]],[8,[[11,[442]]]],[15,[[16,[443]]]],[15,[[16,[444]]]],[[17,8,18],[[16,[443]]]],[[17,8,18],[[16,[444]]]],[[442,65]],[[442,442]],[[442,442],442],[[442,442],12],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[443,8],15],[[444,8],15],[442,12],[443,12],[444,12],[442,12],[442,442],[443,7],[444,7],[[442,442],[[11,[63]]]],[[442,442]],[[442,442,12]],[[441,446]],[[441,52,52,52,52]],[[441,8]],[[441,447]],[[441,52,52]],[[441,8]],[[441,52,52]],[441],[[441,52,52]],[443,8],[444,8],[[442,442],442],[[442,442]],[[442,442],442],[[]],[[]],[[]],[[]],[[]],[445,8],[446,8],[447,8],[442,8],[[442,442]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[442,442],442],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[448,8]],[[449,2]],[[450,2]],[448,[[5,[448]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[7,8,9],[[11,[[10,[9]]]]]],[[7,8,9],[[11,[[10,[9]]]]]],[451,451],[448,448],[[]],[[]],[448],[[451,451],12],[[448,448],12],[[],12],[[451,13],14],[[449,13],14],[[450,13],14],[[448,13],14],[[]],[[]],[[]],[[]],[[[5,[448]]],448],[8,[[11,[451]]]],[15,[[16,[449]]]],[15,[[16,[450]]]],[[17,8,18],[[16,[449]]]],[[17,8,18],[[16,[450]]]],[[448,[11,[448]],441],[[24,[393]]]],[448,[[24,[249]]]],[[]],[[]],[[]],[[]],[[449,8],15],[[450,8],15],[449,12],[450,12],[449,7],[450,7],[[448,52,52,52,52]],[449,8],[450,8],[[]],[[]],[451,8],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],20],[[],20],[[],20],[[],20],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[249,25,8]],[[452,2]],[[453,2]],[249,[[5,[249]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[7,8,9],[[11,[[10,[9]]]]]],[[7,8,9],[[11,[[10,[9]]]]]],[454,454],[455,455],[249,249],[[]],[[]],[[]],[249],[[454,454],12],[[455,455],12],[[249,249],12],[[],12],[[454,13],14],[[455,13],14],[[452,13],14],[[453,13],14],[[249,13],14],[[]],[[]],[[]],[[]],[[[5,[249]]],249],[[]],[8,[[11,[454]]]],[8,[[11,[455]]]],[15,[[16,[452]]]],[15,[[16,[453]]]],[[17,8,18],[[16,[452]]]],[[17,8,18],[[16,[453]]]],[[]],[[]],[[]],[[]],[[]],[[452,8],15],[[453,8],15],[452,12],[453,12],[452,7],[453,7],[[249,25,8,454]],[[249,29]],[[249,[11,[82]]]],[[249,52,52]],[249],[[249,52,52]],[249],[[249,[11,[249]]]],[[249,29]],[[249,25,8,52,52]],[452,8],[453,8],[[]],[[]],[[]],[454,8],[455,8],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],20],[[],20],[[],20],[[],20],[[],20],[249],[249],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[456,2]],[[457,2]],[458,[[5,[458]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[7,8,9],[[11,[[10,[9]]]]]],[[7,8,9],[[11,[[10,[9]]]]]],[459,459],[458,458],[[]],[[]],[458,[[24,[441]]]],[458],[[459,459],12],[[458,458],12],[[],12],[[459,13],14],[[456,13],14],[[457,13],14],[[458,13],14],[[]],[[]],[[]],[[]],[[[5,[458]]],458],[8,[[11,[459]]]],[15,[[16,[456]]]],[15,[[16,[457]]]],[[17,8,18],[[16,[456]]]],[[17,8,18],[[16,[457]]]],[[458,41],[[24,[448]]]],[[]],[[]],[[]],[[]],[[456,8],15],[[457,8],15],[456,12],[457,12],[456,7],[457,7],[[458,8]],[456,8],[457,8],[[]],[[]],[459,8],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],20],[[],20],[[],20],[[],20],0,0,0,0,0,0],"c":[],"p":[[4,"Request"],[8,"FnOnce"],[4,"Event"],[3,"GtkPrimarySelectionDevice"],[3,"Proxy"],[3,"wl_interface"],[15,"u16"],[15,"u32"],[8,"ObjectMetadata"],[3,"Object"],[4,"Option"],[15,"bool"],[3,"Formatter"],[6,"Result"],[3,"Message"],[4,"Result"],[6,"c_void"],[19,"wl_argument"],[3,"GtkPrimarySelectionSource"],[3,"TypeId"],[4,"Request"],[4,"Event"],[3,"GtkPrimarySelectionDeviceManager"],[3,"Main"],[3,"WlSeat"],[4,"Request"],[4,"Event"],[3,"GtkPrimarySelectionOffer"],[3,"String"],[6,"RawFd"],[4,"Request"],[4,"Event"],[4,"Request"],[4,"Event"],[3,"OrgKdeKwinServerDecoration"],[4,"Mode"],[4,"Request"],[4,"Event"],[3,"OrgKdeKwinServerDecorationManager"],[4,"Mode"],[3,"WlSurface"],[4,"Request"],[4,"Event"],[3,"ZwpInputMethodKeyboardGrabV2"],[4,"Request"],[4,"Event"],[3,"ZwpInputMethodManagerV2"],[3,"ZwpInputMethodV2"],[4,"Request"],[4,"Event"],[3,"ZwpInputPopupSurfaceV2"],[15,"i32"],[4,"Request"],[4,"Event"],[4,"Request"],[4,"Event"],[3,"WpPresentation"],[4,"Error"],[3,"WpPresentationFeedback"],[3,"Kind"],[4,"Request"],[4,"Event"],[4,"Ordering"],[8,"IntoIterator"],[8,"Hasher"],[4,"Request"],[4,"Event"],[3,"XdgActivationTokenV1"],[4,"Error"],[3,"XdgActivationV1"],[4,"Request"],[4,"Event"],[4,"Request"],[4,"Event"],[3,"ZwpFullscreenShellModeFeedbackV1"],[4,"Request"],[4,"Event"],[3,"ZwpFullscreenShellV1"],[4,"Capability"],[4,"PresentMethod"],[4,"Error"],[3,"WlOutput"],[4,"Request"],[4,"Event"],[3,"ZwpIdleInhibitManagerV1"],[3,"ZwpIdleInhibitorV1"],[4,"Request"],[4,"Event"],[4,"Request"],[4,"Event"],[3,"ZwpInputMethodContextV1"],[3,"WlKeyboard"],[15,"u8"],[3,"Vec"],[4,"Request"],[4,"Event"],[3,"ZwpInputMethodV1"],[4,"Request"],[4,"Event"],[3,"ZwpInputPanelSurfaceV1"],[4,"Position"],[4,"Request"],[4,"Event"],[3,"ZwpInputPanelV1"],[4,"Request"],[4,"Event"],[3,"ZwpInputTimestampsManagerV1"],[3,"ZwpInputTimestampsV1"],[3,"WlPointer"],[3,"WlTouch"],[4,"Request"],[4,"Event"],[4,"Request"],[4,"Event"],[3,"ZwpKeyboardShortcutsInhibitManagerV1"],[4,"Error"],[3,"ZwpKeyboardShortcutsInhibitorV1"],[4,"Request"],[4,"Event"],[3,"ZwpLinuxBufferParamsV1"],[3,"Flags"],[4,"Request"],[4,"Event"],[4,"Error"],[3,"WlBuffer"],[4,"Request"],[4,"Event"],[3,"ZwpLinuxDmabufV1"],[4,"Request"],[4,"Event"],[3,"ZwpLinuxBufferReleaseV1"],[4,"Request"],[4,"Event"],[3,"ZwpLinuxExplicitSynchronizationV1"],[4,"Error"],[3,"ZwpLinuxSurfaceSynchronizationV1"],[4,"Request"],[4,"Event"],[4,"Error"],[4,"Request"],[4,"Event"],[3,"ZwpConfinedPointerV1"],[3,"WlRegion"],[4,"Request"],[4,"Event"],[3,"ZwpLockedPointerV1"],[15,"f64"],[4,"Request"],[4,"Event"],[3,"ZwpPointerConstraintsV1"],[4,"Error"],[4,"Lifetime"],[4,"Request"],[4,"Event"],[3,"ZwpPointerGesturePinchV1"],[4,"Request"],[4,"Event"],[3,"ZwpPointerGestureSwipeV1"],[4,"Request"],[4,"Event"],[3,"ZwpPointerGesturesV1"],[4,"Request"],[4,"Event"],[3,"ZwpPrimarySelectionDeviceManagerV1"],[3,"ZwpPrimarySelectionSourceV1"],[3,"ZwpPrimarySelectionDeviceV1"],[4,"Request"],[4,"Event"],[4,"Request"],[4,"Event"],[3,"ZwpPrimarySelectionOfferV1"],[4,"Request"],[4,"Event"],[4,"Request"],[4,"Event"],[3,"ZwpRelativePointerManagerV1"],[3,"ZwpRelativePointerV1"],[4,"Request"],[4,"Event"],[4,"Request"],[4,"Event"],[3,"ZwpTabletManagerV1"],[3,"ZwpTabletSeatV1"],[4,"Request"],[4,"Event"],[4,"Request"],[4,"Event"],[3,"ZwpTabletToolV1"],[4,"Type"],[4,"Capability"],[4,"ButtonState"],[4,"Error"],[4,"Request"],[4,"Event"],[3,"ZwpTabletV1"],[4,"Request"],[4,"Event"],[3,"ZwpTabletManagerV2"],[3,"ZwpTabletSeatV2"],[4,"Request"],[4,"Event"],[3,"ZwpTabletPadGroupV2"],[4,"Request"],[4,"Event"],[3,"ZwpTabletPadRingV2"],[4,"Source"],[4,"Request"],[4,"Event"],[3,"ZwpTabletPadStripV2"],[4,"Source"],[4,"Request"],[4,"Event"],[3,"ZwpTabletPadV2"],[4,"ButtonState"],[4,"Request"],[4,"Event"],[4,"Request"],[4,"Event"],[3,"ZwpTabletToolV2"],[4,"Type"],[4,"Capability"],[4,"ButtonState"],[4,"Error"],[4,"Request"],[4,"Event"],[3,"ZwpTabletV2"],[4,"Request"],[4,"Event"],[3,"ZwpTextInputManagerV1"],[3,"ZwpTextInputV1"],[3,"ContentHint"],[4,"Request"],[4,"Event"],[4,"ContentPurpose"],[4,"PreeditStyle"],[4,"TextDirection"],[4,"Request"],[4,"Event"],[3,"ZwpTextInputManagerV3"],[3,"ZwpTextInputV3"],[3,"ContentHint"],[4,"Request"],[4,"Event"],[4,"ChangeCause"],[4,"ContentPurpose"],[4,"Request"],[4,"Event"],[3,"ZxdgDecorationManagerV1"],[3,"XdgToplevel"],[3,"ZxdgToplevelDecorationV1"],[4,"Request"],[4,"Event"],[4,"Error"],[4,"Mode"],[4,"Request"],[4,"Event"],[3,"ZxdgExportedV1"],[4,"Request"],[4,"Event"],[3,"ZxdgExporterV1"],[4,"Request"],[4,"Event"],[3,"ZxdgImportedV1"],[4,"Request"],[4,"Event"],[3,"ZxdgImporterV1"],[4,"Request"],[4,"Event"],[3,"ZxdgExportedV2"],[4,"Request"],[4,"Event"],[3,"ZxdgExporterV2"],[4,"Error"],[4,"Request"],[4,"Event"],[3,"ZxdgImportedV2"],[4,"Error"],[4,"Request"],[4,"Event"],[3,"ZxdgImporterV2"],[4,"Request"],[4,"Event"],[3,"ZxdgOutputManagerV1"],[3,"ZxdgOutputV1"],[4,"Request"],[4,"Event"],[4,"Request"],[4,"Event"],[3,"XdgPopup"],[4,"Request"],[4,"Event"],[3,"XdgShell"],[4,"Version"],[4,"Error"],[3,"XdgSurface"],[4,"Request"],[4,"Event"],[4,"ResizeEdge"],[4,"State"],[4,"Request"],[4,"Event"],[3,"ZxdgPopupV6"],[4,"Error"],[3,"Anchor"],[3,"Gravity"],[3,"ConstraintAdjustment"],[4,"Request"],[4,"Event"],[3,"ZxdgPositionerV6"],[4,"Error"],[4,"Request"],[4,"Event"],[3,"ZxdgShellV6"],[4,"Error"],[3,"ZxdgSurfaceV6"],[4,"Request"],[4,"Event"],[4,"Error"],[3,"ZxdgToplevelV6"],[4,"Request"],[4,"Event"],[4,"ResizeEdge"],[4,"State"],[4,"Request"],[4,"Event"],[3,"ZwpXwaylandKeyboardGrabManagerV1"],[3,"ZwpXwaylandKeyboardGrabV1"],[4,"Request"],[4,"Event"],[4,"Request"],[4,"Event"],[3,"WpViewport"],[4,"Error"],[4,"Request"],[4,"Event"],[3,"WpViewporter"],[4,"Error"],[4,"Request"],[4,"Event"],[3,"ZwlrDataControlDeviceV1"],[4,"Error"],[3,"ZwlrDataControlSourceV1"],[4,"Request"],[4,"Event"],[3,"ZwlrDataControlManagerV1"],[4,"Request"],[4,"Event"],[3,"ZwlrDataControlOfferV1"],[4,"Request"],[4,"Event"],[4,"Error"],[4,"Request"],[4,"Event"],[3,"ZwlrExportDmabufFrameV1"],[4,"Flags"],[4,"CancelReason"],[4,"Request"],[4,"Event"],[3,"ZwlrExportDmabufManagerV1"],[3,"ZwlrForeignToplevelHandleV1"],[4,"Request"],[4,"Event"],[4,"State"],[4,"Error"],[4,"Request"],[4,"Event"],[3,"ZwlrForeignToplevelManagerV1"],[4,"Request"],[4,"Event"],[3,"ZwlrGammaControlManagerV1"],[3,"ZwlrGammaControlV1"],[4,"Request"],[4,"Event"],[4,"Error"],[4,"Request"],[4,"Event"],[3,"ZwlrInputInhibitManagerV1"],[4,"Error"],[3,"ZwlrInputInhibitorV1"],[4,"Request"],[4,"Event"],[4,"Request"],[4,"Event"],[3,"ZwlrLayerShellV1"],[4,"Error"],[4,"Layer"],[3,"ZwlrLayerSurfaceV1"],[3,"Anchor"],[4,"Request"],[4,"Event"],[4,"KeyboardInteractivity"],[4,"Error"],[3,"XdgPopup"],[4,"Request"],[4,"Event"],[3,"ZwlrOutputConfigurationHeadV1"],[4,"Error"],[3,"ZwlrOutputModeV1"],[4,"Transform"],[3,"ZwlrOutputConfigurationV1"],[4,"Request"],[4,"Event"],[4,"Error"],[3,"ZwlrOutputHeadV1"],[4,"Request"],[4,"Event"],[4,"Request"],[4,"Event"],[3,"ZwlrOutputManagerV1"],[4,"Request"],[4,"Event"],[4,"Request"],[4,"Event"],[3,"ZwlrOutputPowerManagerV1"],[3,"ZwlrOutputPowerV1"],[4,"Request"],[4,"Event"],[4,"Mode"],[4,"Error"],[3,"Flags"],[4,"Request"],[4,"Event"],[3,"ZwlrScreencopyFrameV1"],[4,"Error"],[4,"Request"],[4,"Event"],[3,"ZwlrScreencopyManagerV1"],[4,"Request"],[4,"Event"],[3,"ZwlrVirtualPointerManagerV1"],[3,"ZwlrVirtualPointerV1"],[4,"Request"],[4,"Event"],[4,"Axis"],[4,"AxisSource"],[4,"ButtonState"],[4,"Error"],[4,"Request"],[4,"Event"],[4,"Error"],[3,"XdgPositioner"],[3,"ConstraintAdjustment"],[4,"Request"],[4,"Event"],[4,"Error"],[4,"Anchor"],[4,"Gravity"],[3,"XdgSurface"],[4,"Request"],[4,"Event"],[4,"Error"],[4,"Request"],[4,"Event"],[4,"ResizeEdge"],[4,"State"],[4,"Request"],[4,"Event"],[3,"XdgWmBase"],[4,"Error"],[13,"Selection"],[13,"DataOffer"],[13,"SetSelection"],[13,"GetDevice"],[13,"Offer"],[13,"Receive"],[13,"Send"],[13,"Offer"],[13,"Mode"],[13,"RequestMode"],[13,"DefaultMode"],[13,"Create"],[13,"RepeatInfo"],[13,"Keymap"],[13,"Modifiers"],[13,"Key"],[13,"GetInputMethod"],[13,"SurroundingText"],[13,"TextChangeCause"],[13,"ContentType"],[13,"DeleteSurroundingText"],[13,"SetPreeditString"],[13,"Commit"],[13,"GetInputPopupSurface"],[13,"CommitString"],[13,"TextInputRectangle"],[13,"ClockId"],[13,"Feedback"],[13,"Presented"],[13,"SyncOutput"],[13,"Done"],[13,"SetAppId"],[13,"SetSerial"],[13,"SetSurface"],[13,"Activate"],[13,"Capability"],[13,"PresentSurfaceForMode"],[13,"PresentSurface"],[13,"CreateInhibitor"],[13,"SurroundingText"],[13,"InvokeAction"],[13,"ContentType"],[13,"PreferredLanguage"],[13,"CommitState"],[13,"CursorPosition"],[13,"PreeditString"],[13,"TextDirection"],[13,"Modifiers"],[13,"PreeditStyling"],[13,"PreeditCursor"],[13,"DeleteSurroundingText"],[13,"Key"],[13,"Language"],[13,"ModifiersMap"],[13,"Keysym"],[13,"CommitString"],[13,"Deactivate"],[13,"Activate"],[13,"SetToplevel"],[13,"GetInputPanelSurface"],[13,"GetKeyboardTimestamps"],[13,"GetPointerTimestamps"],[13,"GetTouchTimestamps"],[13,"Timestamp"],[13,"InhibitShortcuts"],[13,"Created"],[13,"Add"],[13,"Create"],[13,"CreateImmed"],[13,"Format"],[13,"Modifier"],[13,"FencedRelease"],[13,"GetSynchronization"],[13,"SetAcquireFence"],[13,"SetRegion"],[13,"SetRegion"],[13,"SetCursorPositionHint"],[13,"LockPointer"],[13,"ConfinePointer"],[13,"End"],[13,"Update"],[13,"Begin"],[13,"End"],[13,"Update"],[13,"Begin"],[13,"GetSwipeGesture"],[13,"GetPinchGesture"],[13,"GetDevice"],[13,"Selection"],[13,"DataOffer"],[13,"SetSelection"],[13,"Offer"],[13,"Receive"],[13,"Send"],[13,"Offer"],[13,"GetRelativePointer"],[13,"RelativeMotion"],[13,"GetTabletSeat"],[13,"TabletAdded"],[13,"ToolAdded"],[13,"Button"],[13,"Capability"],[13,"Wheel"],[13,"Rotation"],[13,"Distance"],[13,"HardwareIdWacom"],[13,"HardwareSerial"],[13,"Slider"],[13,"Pressure"],[13,"ProximityIn"],[13,"Down"],[13,"Tilt"],[13,"Frame"],[13,"Type"],[13,"Motion"],[13,"SetCursor"],[13,"Name"],[13,"Path"],[13,"Id"],[13,"GetTabletSeat"],[13,"Buttons"],[13,"ModeSwitch"],[13,"Modes"],[13,"Ring"],[13,"Strip"],[13,"Angle"],[13,"Source"],[13,"Frame"],[13,"SetFeedback"],[13,"Position"],[13,"Source"],[13,"Frame"],[13,"SetFeedback"],[13,"Button"],[13,"Buttons"],[13,"Group"],[13,"Path"],[13,"Enter"],[13,"Leave"],[13,"SetFeedback"],[13,"TabletAdded"],[13,"ToolAdded"],[13,"PadAdded"],[13,"Button"],[13,"Capability"],[13,"Wheel"],[13,"Rotation"],[13,"Distance"],[13,"HardwareIdWacom"],[13,"HardwareSerial"],[13,"Slider"],[13,"Pressure"],[13,"ProximityIn"],[13,"Down"],[13,"Tilt"],[13,"Frame"],[13,"Type"],[13,"Motion"],[13,"SetCursor"],[13,"Name"],[13,"Path"],[13,"Id"],[13,"CursorPosition"],[13,"PreeditString"],[13,"TextDirection"],[13,"PreeditStyling"],[13,"PreeditCursor"],[13,"DeleteSurroundingText"],[13,"Language"],[13,"ModifiersMap"],[13,"Keysym"],[13,"CommitString"],[13,"InputPanelState"],[13,"Enter"],[13,"SetSurroundingText"],[13,"InvokeAction"],[13,"SetCursorRectangle"],[13,"SetContentType"],[13,"SetPreferredLanguage"],[13,"Activate"],[13,"Deactivate"],[13,"CommitState"],[13,"GetTextInput"],[13,"DeleteSurroundingText"],[13,"PreeditString"],[13,"Done"],[13,"Enter"],[13,"Leave"],[13,"CommitString"],[13,"SetSurroundingText"],[13,"SetTextChangeCause"],[13,"SetCursorRectangle"],[13,"SetContentType"],[13,"GetToplevelDecoration"],[13,"Configure"],[13,"SetMode"],[13,"Handle"],[13,"Export"],[13,"SetParentOf"],[13,"Import"],[13,"Handle"],[13,"ExportToplevel"],[13,"SetParentOf"],[13,"ImportToplevel"],[13,"GetXdgOutput"],[13,"Description"],[13,"LogicalSize"],[13,"Name"],[13,"LogicalPosition"],[13,"Ping"],[13,"GetXdgPopup"],[13,"Pong"],[13,"GetXdgSurface"],[13,"UseUnstableVersion"],[13,"Configure"],[13,"SetAppId"],[13,"Resize"],[13,"SetWindowGeometry"],[13,"SetFullscreen"],[13,"SetParent"],[13,"ShowWindowMenu"],[13,"Move"],[13,"AckConfigure"],[13,"SetTitle"],[13,"Configure"],[13,"Grab"],[13,"SetAnchor"],[13,"SetConstraintAdjustment"],[13,"SetGravity"],[13,"SetSize"],[13,"SetAnchorRect"],[13,"SetOffset"],[13,"Ping"],[13,"Pong"],[13,"GetXdgSurface"],[13,"Configure"],[13,"SetWindowGeometry"],[13,"GetPopup"],[13,"AckConfigure"],[13,"Configure"],[13,"SetAppId"],[13,"Resize"],[13,"SetMaxSize"],[13,"SetMinSize"],[13,"SetFullscreen"],[13,"SetParent"],[13,"ShowWindowMenu"],[13,"Move"],[13,"SetTitle"],[13,"GrabKeyboard"],[13,"SetSource"],[13,"SetDestination"],[13,"GetViewport"],[13,"DataOffer"],[13,"Selection"],[13,"PrimarySelection"],[13,"SetSelection"],[13,"SetPrimarySelection"],[13,"GetDataDevice"],[13,"Offer"],[13,"Receive"],[13,"Send"],[13,"Offer"],[13,"Frame"],[13,"Object"],[13,"Cancel"],[13,"Ready"],[13,"CaptureOutput"],[13,"AppId"],[13,"OutputEnter"],[13,"OutputLeave"],[13,"Parent"],[13,"State"],[13,"Title"],[13,"SetRectangle"],[13,"SetFullscreen"],[13,"Activate"],[13,"Toplevel"],[13,"GetGammaControl"],[13,"GammaSize"],[13,"SetGamma"],[13,"GetLayerSurface"],[13,"Configure"],[13,"SetAnchor"],[13,"SetMargin"],[13,"SetSize"],[13,"SetKeyboardInteractivity"],[13,"SetLayer"],[13,"GetPopup"],[13,"AckConfigure"],[13,"SetExclusiveZone"],[13,"SetCustomMode"],[13,"SetMode"],[13,"SetScale"],[13,"SetTransform"],[13,"SetPosition"],[13,"EnableHead"],[13,"DisableHead"],[13,"Description"],[13,"Enabled"],[13,"PhysicalSize"],[13,"Make"],[13,"Mode"],[13,"CurrentMode"],[13,"Model"],[13,"Name"],[13,"Scale"],[13,"SerialNumber"],[13,"Transform"],[13,"Position"],[13,"Head"],[13,"Done"],[13,"CreateConfiguration"],[13,"Size"],[13,"Refresh"],[13,"GetOutputPower"],[13,"Mode"],[13,"SetMode"],[13,"Flags"],[13,"Buffer"],[13,"LinuxDmabuf"],[13,"Damage"],[13,"Ready"],[13,"Copy"],[13,"CopyWithDamage"],[13,"CaptureOutputRegion"],[13,"CaptureOutput"],[13,"CreateVirtualPointerWithOutput"],[13,"CreateVirtualPointer"],[13,"Axis"],[13,"AxisStop"],[13,"AxisDiscrete"],[13,"AxisSource"],[13,"Button"],[13,"Motion"],[13,"MotionAbsolute"],[13,"Configure"],[13,"Repositioned"],[13,"Reposition"],[13,"Grab"],[13,"SetAnchor"],[13,"SetConstraintAdjustment"],[13,"SetGravity"],[13,"SetSize"],[13,"SetAnchorRect"],[13,"SetParentSize"],[13,"SetParentConfigure"],[13,"SetOffset"],[13,"Configure"],[13,"SetWindowGeometry"],[13,"GetPopup"],[13,"AckConfigure"],[13,"Configure"],[13,"SetAppId"],[13,"Resize"],[13,"SetMaxSize"],[13,"SetMinSize"],[13,"SetFullscreen"],[13,"SetParent"],[13,"ShowWindowMenu"],[13,"Move"],[13,"SetTitle"],[13,"Ping"],[13,"Pong"],[13,"GetXdgSurface"]]},\
"wayland_sys":{"doc":"FFI bindings to the wayland system libraries.","t":"HAAAOADDDLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLMMMMEMMMMMMMMMMMMMMMMMMEMMMMMMMMEMMMMMMMMMMMMMMMMMMMMMLLLLLLLLLLMMMMLLLLLMMLLLLLMMMMMMMMMMMLLLLLLLLLLLLLLLMMMTDGFFGFFDDGDDDDLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLEMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLEEGEGGGGEEGDGEGED","n":["RUST_MANAGED","client","common","egl","ffi_dispatch","server","WAYLAND_CLIENT_HANDLE","WAYLAND_CLIENT_OPTION","WaylandClient","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deref","deref","from","from","from","from","from","from","into","into","into","into","into","into","is_lib_available","open","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","wl_array_add","wl_array_copy","wl_array_init","wl_array_release","wl_display","wl_display_cancel_read","wl_display_connect","wl_display_connect_to_fd","wl_display_create_queue","wl_display_disconnect","wl_display_dispatch","wl_display_dispatch_pending","wl_display_dispatch_queue","wl_display_dispatch_queue_pending","wl_display_flush","wl_display_get_error","wl_display_get_fd","wl_display_get_protocol_error","wl_display_prepare_read","wl_display_prepare_read_queue","wl_display_read_events","wl_display_roundtrip","wl_display_roundtrip_queue","wl_event_queue","wl_event_queue_destroy","wl_list_empty","wl_list_init","wl_list_insert","wl_list_insert_list","wl_list_length","wl_list_remove","wl_log_set_handler_client","wl_proxy","wl_proxy_add_dispatcher","wl_proxy_add_listener","wl_proxy_create","wl_proxy_create_wrapper","wl_proxy_destroy","wl_proxy_get_class","wl_proxy_get_id","wl_proxy_get_listener","wl_proxy_get_user_data","wl_proxy_get_version","wl_proxy_marshal","wl_proxy_marshal_array","wl_proxy_marshal_array_constructor","wl_proxy_marshal_array_constructor_versioned","wl_proxy_marshal_constructor","wl_proxy_marshal_constructor_versioned","wl_proxy_set_queue","wl_proxy_set_user_data","wl_proxy_wrapper_destroy","a","alloc","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","data","event_count","events","f","from","from","from","from","from","h","i","into","into","into","into","into","n","name","name","next","o","prev","request_count","requests","s","signature","size","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","types","u","version","wl_argument","wl_array","wl_dispatcher_func_t","wl_fixed_from_double","wl_fixed_from_int","wl_fixed_t","wl_fixed_to_double","wl_fixed_to_int","wl_interface","wl_list","wl_log_func_t","wl_message","WAYLAND_EGL_HANDLE","WAYLAND_EGL_OPTION","WaylandEgl","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deref","deref","from","from","from","from","into","into","into","into","is_lib_available","open","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","wl_egl_window","wl_egl_window_create","wl_egl_window_destroy","wl_egl_window_get_attached_size","wl_egl_window_resize","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","from","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","into","link","listener_list","notify","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","wl_client","wl_display","wl_display_global_filter_func_t","wl_event_loop","wl_event_loop_fd_func_t","wl_event_loop_idle_func_t","wl_event_loop_signal_func_t","wl_event_loop_timer_func_t","wl_event_source","wl_global","wl_global_bind_func_t","wl_listener","wl_notify_func_t","wl_resource","wl_resource_destroy_func_t","wl_shm_buffer","wl_signal"],"q":[[0,"wayland_sys"],[6,"wayland_sys::client"],[107,"wayland_sys::common"],[176,"wayland_sys::egl"],[216,"wayland_sys::server"]],"d":["Magic static for wayland objects managed by wayland-client …","Bindings to the client library <code>libwayland-client.so</code>","Various types and functions that are used by both the …","Bindings to the EGL library <code>libwayland-egl.so</code>","","Bindings to the client library <code>libwayland-server.so</code>","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,16,17,18,2,1,4,16,17,18,2,1,4,1,4,16,17,18,2,1,4,16,17,18,2,1,4,0,2,16,17,18,2,1,4,16,17,18,2,1,4,16,17,18,2,1,4,2,2,2,2,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,2,2,2,2,2,2,2,2,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,19,20,21,22,23,20,19,21,22,23,20,19,20,22,22,19,21,22,23,20,19,19,19,21,22,23,20,19,19,21,22,23,19,23,22,22,19,21,20,21,22,23,20,19,21,22,23,20,19,21,22,23,20,19,21,19,22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,14,13,15,24,14,13,15,13,15,24,14,13,15,24,14,13,15,0,14,24,14,13,15,24,14,13,15,24,14,13,15,0,14,14,14,14,25,26,27,28,29,30,31,32,33,25,26,27,28,29,30,31,32,33,25,26,27,28,29,30,31,32,33,25,26,27,28,29,30,31,32,33,32,33,32,25,26,27,28,29,30,31,32,33,25,26,27,28,29,30,31,32,33,25,26,27,28,29,30,31,32,33,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":[0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,[[3,[2]]]],[4,2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],5],[6,[[8,[2,7]]]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[]],[[]],[[]],[[]],[[]],0,0,[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],9],[[],9],[[],9],[[],9],[[],9],0,0,0,0,0,0,[10,11],[12,11],0,[11,10],[11,12],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[13,[[3,[14]]]],[15,14],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],5],[6,[[8,[14,7]]]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],9],[[],9],[[],9],[[],9],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"c":[],"p":[[3,"WAYLAND_CLIENT_OPTION"],[3,"WaylandClient"],[4,"Option"],[3,"WAYLAND_CLIENT_HANDLE"],[15,"bool"],[15,"str"],[4,"DlError"],[4,"Result"],[3,"TypeId"],[15,"f64"],[6,"wl_fixed_t"],[15,"i32"],[3,"WAYLAND_EGL_OPTION"],[3,"WaylandEgl"],[3,"WAYLAND_EGL_HANDLE"],[4,"wl_proxy"],[4,"wl_display"],[4,"wl_event_queue"],[19,"wl_argument"],[3,"wl_array"],[3,"wl_message"],[3,"wl_interface"],[3,"wl_list"],[4,"wl_egl_window"],[4,"wl_client"],[4,"wl_display"],[4,"wl_event_loop"],[4,"wl_event_source"],[4,"wl_global"],[4,"wl_resource"],[4,"wl_shm_buffer"],[3,"wl_listener"],[3,"wl_signal"]]},\
"winapi":{"doc":"","t":"","n":[],"q":[],"d":[],"i":[],"f":[],"c":[],"p":[]},\
"winit":{"doc":"Winit is a cross-platform window creation and event loop …","t":"AAAAAAANNDDNNDDIEELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFMMMMMMENDNDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNSNNNNNNNNGNNNNNGNSNNNNNNNNNNNNNNNNNNNENDNNNNENNNNNENNNNNNNNNNNNNNNNNNNNNNNNNNENNNNNNNENNNNNNNNNNNNNNNNNNDNNNNNSNNNNNNNNNNNNNNDNENNENNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNSNGNNNNNNENNNNNNNNDNENNNNNNNENNNNNNNNNNNNENNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLMLLMLLLLLMLMLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNEEDDDDDSNNNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLAAIQKNNNNNNIINNINNNNCNNNIIENEGLLLLLLLLLLLLLLLLLLLLKKKKLFLLLLLLLLLLKKKKKKKKKKKKKKKKKKKKNNNENNNNNNNNNEENNNNNNENNNNDNNNNNNNNNNNNNNNNNNNNEENNNDDDNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMM","n":["dpi","error","event","event_loop","monitor","platform","window","Logical","Logical","LogicalPosition","LogicalSize","Physical","Physical","PhysicalPosition","PhysicalSize","Pixel","Position","Size","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast","cast","cast","cast","cast","clamp","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default","default","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_f64","from_logical","from_logical","from_physical","from_physical","hash","hash","hash","hash","height","height","into","into","into","into","into","into","new","new","new","new","new","new","to_logical","to_logical","to_logical","to_logical","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_physical","to_physical","to_physical","to_physical","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","validate_scale_factor","width","width","x","x","y","y","ExternalError","NotSupported","NotSupportedError","Os","OsError","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","into","into","into","provide","provide","provide","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","A","ALT","AbntC1","AbntC2","Added","Apostrophe","Apps","Asterisk","At","Ax","AxisId","AxisMotion","B","Back","Backslash","Button","ButtonId","C","CTRL","Calculator","Calibrated","Cancelled","Capital","Caret","CloseRequested","Colon","Comma","Commit","Compose","Convert","Copy","CursorEntered","CursorLeft","CursorMoved","Cut","D","Delete","Destroyed","DeviceEvent","DeviceEvent","DeviceId","Disabled","Down","DroppedFile","E","ElementState","Enabled","End","Ended","Equals","Escape","Event","F","F1","F10","F11","F12","F13","F14","F15","F16","F17","F18","F19","F2","F20","F21","F22","F23","F24","F3","F4","F5","F6","F7","F8","F9","Focused","Force","G","Grave","H","Home","HoveredFile","HoveredFileCancelled","I","Ime","Ime","Init","Insert","J","K","Kana","Kanji","Key","Key0","Key1","Key2","Key3","Key4","Key5","Key6","Key7","Key8","Key9","KeyboardInput","KeyboardInput","L","LAlt","LBracket","LControl","LOGO","LShift","LWin","Left","Left","LineDelta","LoopDestroyed","M","Mail","MainEventsCleared","MediaSelect","MediaStop","Middle","Minus","ModifiersChanged","ModifiersState","Motion","MouseButton","MouseInput","MouseMotion","MouseScrollDelta","MouseWheel","MouseWheel","Moved","Moved","Mute","MyComputer","N","NavigateBackward","NavigateForward","NewEvents","NextTrack","NoConvert","Normalized","Numlock","Numpad0","Numpad1","Numpad2","Numpad3","Numpad4","Numpad5","Numpad6","Numpad7","Numpad8","Numpad9","NumpadAdd","NumpadComma","NumpadDecimal","NumpadDivide","NumpadEnter","NumpadEquals","NumpadMultiply","NumpadSubtract","O","OEM102","Occluded","Other","P","PageDown","PageUp","Paste","Pause","Period","PixelDelta","PlayPause","Plus","Poll","Power","Preedit","Pressed","PrevTrack","Q","R","RAlt","RBracket","RControl","RShift","RWin","ReceivedCharacter","RedrawEventsCleared","RedrawRequested","Released","Removed","Resized","ResumeTimeReached","Resumed","Return","Right","Right","S","SHIFT","ScaleFactorChanged","ScanCode","Scroll","Semicolon","Slash","Sleep","Snapshot","Space","StartCause","Started","Stop","Suspended","Sysrq","T","Tab","Text","ThemeChanged","Touch","Touch","TouchPhase","TouchpadPressure","U","Underline","Unlabeled","Up","UserEvent","V","VirtualKeyCode","VolumeDown","VolumeUp","W","WaitCancelled","Wake","WebBack","WebFavorites","WebForward","WebHome","WebRefresh","WebSearch","WebStop","WindowEvent","WindowEvent","X","Y","Yen","Z","all","alt","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","complement","contains","ctrl","default","device_id","difference","dummy","empty","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","force","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","hash","hash","hash","hash","hash","hash","hash","hash","id","insert","intersection","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_all","is_empty","location","logo","map_nonuser_event","modifiers","normalized","not","partial_cmp","partial_cmp","partial_cmp","phase","remove","scancode","set","shift","state","sub","sub_assign","symmetric_difference","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_static","to_static","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","virtual_keycode","axis","button","codepoint","delta","delta","state","value","device_id","event","event","window_id","altitude_angle","force","max_possible_force","requested_resume","requested_resume","start","start","axis","button","delta","device_id","device_id","device_id","device_id","device_id","device_id","device_id","device_id","input","is_synthetic","modifiers","modifiers","modifiers","new_inner_size","phase","position","pressure","scale_factor","stage","state","value","Always","ControlFlow","DeviceEventFilter","EventLoop","EventLoopBuilder","EventLoopClosed","EventLoopProxy","EventLoopWindowTarget","Exit","ExitWithCode","Never","Poll","Unfocused","Wait","WaitUntil","available_monitors","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","create_proxy","default","default","default","default","deref","eq","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","hash","hash","into","into","into","into","into","into","into","is_wayland","is_x11","new","new","partial_cmp","primary_monitor","provide","raw_display_handle","run","run_return","send_event","set_device_event_filter","set_exit","set_exit_with_code","set_poll","set_wait","set_wait_until","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","wayland_display","with_any_thread","with_user_event","with_user_event","with_wayland","with_x11","MonitorHandle","VideoMode","bit_depth","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","cmp","eq","eq","equivalent","equivalent","fmt","fmt","fmt","from","from","hash","into","into","monitor","name","native_id","partial_cmp","partial_cmp","position","refresh_rate_millihertz","refresh_rate_millihertz","scale_factor","size","size","to_owned","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","video_modes","run_return","unix","EventLoopExtRunReturn","UserEvent","run_return","Combo","Desktop","Dialog","Dnd","Dock","DropdownMenu","EventLoopBuilderExtUnix","EventLoopWindowTargetExtUnix","LibraryOpenError","Menu","MonitorHandleExtUnix","Normal","Notification","PopupMenu","Splash","Theme","Toolbar","Tooltip","Utility","WindowBuilderExtUnix","WindowExtUnix","XNotSupported","XOpenDisplayFailed","XWindowType","XlibErrorHook","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","eq","equivalent","fmt","fmt","fmt","from","from","from","hash","into","into","is_ready","is_wayland","is_x11","native_id","provide","register_xlib_error_hook","source","to_owned","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","wayland_display","wayland_display","wayland_set_csd_theme","wayland_surface","with_any_thread","with_base_size","with_gtk_theme_variant","with_name","with_override_redirect","with_resize_increments","with_wayland","with_wayland_csd_theme","with_x11","with_x11_screen","with_x11_visual","with_x11_window_type","xcb_connection","xlib_display","xlib_screen_id","xlib_window","Alias","AllScroll","Arrow","BadIcon","Borderless","ByteCountNotDivisibleBy4","Cell","ColResize","Confined","ContextMenu","Copy","Critical","Crosshair","CursorGrabMode","CursorIcon","Dark","Default","DimensionsVsPixelCount","EResize","EwResize","Exclusive","Fullscreen","Grab","Grabbing","Hand","Help","Icon","Informational","Light","Locked","Move","NResize","NeResize","NeswResize","NoDrop","None","NotAllowed","NsResize","NwResize","NwseResize","OsError","Progress","RowResize","SResize","SeResize","SwResize","Text","Theme","UserAttentionType","VerticalText","WResize","Wait","Window","WindowBuilder","WindowId","ZoomIn","ZoomOut","available_monitors","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","current_monitor","default","default","default","drag_window","drop","dummy","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","focus_window","from","from","from","from","from","from","from","from","from","from","from","from_rgba","fullscreen","hash","hash","hash","id","inner_position","inner_size","into","into","into","into","into","into","into","into","into","into","is_decorated","is_maximized","is_ready","is_resizable","is_visible","new","new","outer_position","outer_size","partial_cmp","primary_monitor","provide","raw_display_handle","raw_window_handle","raw_window_handle","request_redraw","request_user_attention","scale_factor","set_always_on_top","set_cursor_grab","set_cursor_hittest","set_cursor_icon","set_cursor_position","set_cursor_visible","set_decorations","set_fullscreen","set_ime_allowed","set_ime_position","set_inner_size","set_max_inner_size","set_maximized","set_min_inner_size","set_minimized","set_outer_position","set_resizable","set_title","set_visible","set_window_icon","source","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","transparent","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","wayland_display","wayland_set_csd_theme","wayland_surface","with_always_on_top","with_base_size","with_decorations","with_fullscreen","with_gtk_theme_variant","with_inner_size","with_max_inner_size","with_maximized","with_min_inner_size","with_name","with_override_redirect","with_position","with_resizable","with_resize_increments","with_title","with_transparent","with_visible","with_wayland_csd_theme","with_window_icon","with_x11_screen","with_x11_visual","with_x11_window_type","xcb_connection","xlib_display","xlib_screen_id","xlib_window","byte_count","height","pixel_count","width","width_x_height"],"q":[[0,"winit"],[7,"winit::dpi"],[148,"winit::error"],[189,"winit::event"],[694,"winit::event::DeviceEvent"],[701,"winit::event::Event"],[705,"winit::event::Force"],[708,"winit::event::StartCause"],[712,"winit::event::WindowEvent"],[736,"winit::event_loop"],[860,"winit::monitor"],[906,"winit::platform"],[908,"winit::platform::run_return"],[911,"winit::platform::unix"],[992,"winit::window"],[1256,"winit::window::BadIcon"]],"d":["UI scaling is important, so read the docs for this module …","","The <code>Event</code> enum and assorted supporting types.","The <code>EventLoop</code> struct and assorted supporting types, …","Types useful for interacting with a user’s monitors.","Contains traits with platform-specific methods in them.","The <code>Window</code> struct and associated types.","","","A position represented in logical pixels.","A size represented in logical pixels.","","","A position represented in physical pixels.","A size represented in physical pixels.","","A position that’s either physical or logical.","A size that’s either physical or logical.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Checks that the scale factor is a normal positive <code>f64</code>.","","","","","","","An error whose cause it outside Winit’s control.","The operation is not supported by the backend.","The error type for when the requested operation is not …","The OS cannot perform the operation.","The error type for when the OS cannot perform the …","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","The “alt” key.","","","","","","","","","Identifier for a specific analog axis on some device.","Motion on some analog axis. May report data redundant to …","","The Backspace key, right over Enter.","","","Identifier for a specific button on some device.","","The “control” key.","","On iOS, the force is calibrated so that the same number …","","","","The window has been requested to close.","","","Notifies when text should be inserted into the editor …","The “Compose” key on Linux.","","","The cursor has entered the window.","The cursor has left the window.","The cursor has moved on the window.","","","","The window has been destroyed.","Represents raw hardware events that are not associated …","Emitted when the OS sends an event to a device.","Identifier of an input device.","Notifies when the IME was disabled.","","A file has been dropped into the window.","","Describes the input state of a key.","Notifies when the IME was enabled.","","","","The Escape key, next to F1.","Describes a generic event.","","","","","","","","","","","","","","","","","","","","","","","","","","The window gained or lost focus.","Describes the force of a touch event","","","","","A file is being hovered over the window.","A file was hovered, but has exited the window.","","Describes input method events.","An event from an input method.","Sent once, immediately after <code>run</code> is called. Indicates that …","<code>Insert</code>, next to Backspace.","","","","","","The ‘0’ key over the ‘O’ and ‘P’ keys.","The ‘1’ key over the letters.","The ‘2’ key over the letters.","The ‘3’ key over the letters.","The ‘4’ key over the letters.","The ‘5’ key over the letters.","The ‘6’ key over the letters.","The ‘7’ key over the letters.","The ‘8’ key over the letters.","The ‘9’ key over the letters.","Describes a keyboard input event.","An event from the keyboard has been received.","","","","","This is the “windows” key on PC and “command” key …","","","","","Amount in lines or rows to scroll in the horizontal and …","Emitted when the event loop is being shut down.","","","Emitted when all of the event loop’s input events have …","","","","","The keyboard modifiers have changed.","Represents the current state of the keyboard modifiers","Motion on some analog axis. This event will be reported …","Describes a button of a mouse controller.","An mouse button press has been received.","Change in physical position of a pointing device.","Describes a difference in the mouse scroll wheel state.","A mouse wheel movement or touchpad scroll occurred.","Physical scroll event","The position of the window has changed. Contains the window…","","","","","","","Emitted when new events arrive from the OS to be processed.","","","If the platform reports the force as normalized, we have …","","","","","","","","","","","","","","","","","","","","","","The window has been occluded (completely hidden from view).","","","","","","Pause/Break key, next to Scroll lock.","","Amount in pixels to scroll in the horizontal and vertical …","","","Sent if the event loop is being resumed after the loop’s …","","Notifies when a new composing text should be set at the …","","","","","","","","","","The window received a unicode character.","Emitted after all <code>RedrawRequested</code> events have been …","Emitted after <code>MainEventsCleared</code> when a window should be …","","","The size of the window has changed. Contains the client …","Sent if the time specified by <code>ControlFlow::WaitUntil</code> has …","Emitted when the application has been resumed.","The Enter key.","","","","The “shift” key.","The window’s scale factor has changed.","Hardware-dependent keyboard scan code.","Scroll Lock.","","","","Print Screen/SysRq.","The space bar.","Describes the reason the event loop is resuming.","","","Emitted when the application has been suspended.","","","","","The system window theme has changed.","Represents a touch event","Touch event has been received","Describes touch-screen input state.","Touchpad pressure event.","","","","","Emitted when an event is sent from …","","Symbolic name for a keyboard key.","","","","Sent if the OS has new events to send to the window, after …","","","","","","","","","Describes an event from a <code>Window</code>.","Emitted when the OS sends an event to a winit window.","","","","","Returns the set containing all flags.","Returns <code>true</code> if the alt key is pressed.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if the control key is pressed.","","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns a dummy id, useful for unit testing.","Returns an empty set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Describes how hard the screen was pressed. May be <code>None</code> if …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","","","","","","","","Unique identifier of a finger.","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","","Returns <code>true</code> if the logo key is pressed.","","Modifier keys active at the time of this input.","Returns the force normalized to the range between 0.0 and …","Returns the complement of this set of flags.","","","","","Removes the specified flags in-place.","Identifies the physical key pressed","Inserts or removes the specified flags depending on the …","Returns <code>true</code> if the shift key is pressed.","","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","","","","","","","","","","","","","","","","If the event doesn’t contain a reference, turn it into …","","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Identifies the semantic meaning of the key","","","","(x, y) change in position in unspecified units.","","","","","","","","The altitude (in radians) of the stylus.","The force of the touch, where a value of 1.0 represents …","The maximum possible force for a touch.","","","","","","","","","","","","","","","","","If <code>true</code>, the event was generated synthetically by winit in …","","","","","","(x,y) coords in pixels relative to the top-left corner of …","","","","","","Always filter out device events.","Set by the user callback given to the <code>EventLoop::run</code> …","Filter controlling the propagation of device events.","Provides a way to retrieve events from the system and from …","Object that allows building the event loop.","The error that is returned when an <code>EventLoopProxy</code> attempts …","Used to send custom events to <code>EventLoop</code>.","Target that associates windows with an <code>EventLoop</code>.","Alias for <code>ExitWithCode</code><code>(0)</code>.","Send a <code>LoopDestroyed</code> event and stop the event loop. This …","Report all device events regardless of window focus.","When the current loop iteration finishes, immediately …","Filter out device events while the window is not focused.","When the current loop iteration finishes, suspend the …","When the current loop iteration finishes, suspend the …","Returns the list of all the monitors available on the …","","","","","","","","","","","","","","","Builds a new event loop.","","","","","","","","","","Creates an <code>EventLoopProxy</code> that can be used to dispatch …","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Alias for <code>EventLoopBuilder::new().build()</code>.","Start building a new event loop.","","Returns the primary monitor of the system.","","Returns a <code>raw_window_handle::RawDisplayHandle</code> for the …","Hijacks the calling thread and initializes the winit event …","","Send an event to the <code>EventLoop</code> from which this proxy was …","Change <code>DeviceEvent</code> filter mode.","Sets this to <code>Exit</code>.","Sets this to <code>ExitWithCode</code><code>(code)</code>.","Sets this to <code>Poll</code>.","Sets this to <code>Wait</code>.","Sets this to <code>WaitUntil</code><code>(instant)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Start building a new event loop, with the given type as …","","","Handle to a monitor.","Describes a fullscreen video mode of a monitor.","Returns the bit depth of this video mode, as in how many …","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns the monitor that this video mode is valid for. …","Returns a human-readable name of the monitor.","","","","Returns the top-left corner position of the monitor …","Returns the refresh rate of this video mode in mHz.","The monitor refresh rate used by the system.","Returns the scale factor that can be used to map logical …","Returns the resolution of this video mode.","Returns the monitor’s resolution.","","","","","","","","","","Returns all fullscreen video modes supported by this …","","","Additional methods on <code>EventLoop</code> to return control flow to …","A type provided by the user that can be passed through …","Initializes the <code>winit</code> event loop.","This should be used on the windows that are popped up by …","A desktop feature. This can include a single window …","This is a dialog window.","This indicates the the window is being dragged. This …","A dock or panel feature. Typically a Window Manager would …","A dropdown menu that usually appears when the user clicks …","Additional methods on <code>EventLoopBuilder</code> that are specific …","Additional methods on <code>EventLoopWindowTarget</code> that are …","Failed to load one or several shared libraries.","Pinnable menu windows. “Torn off” from the main …","Additional methods on <code>MonitorHandle</code> that are specific to …","This is a normal, top-level window.","The window is a notification. This property is typically …","A popup menu that usually appears when the user right …","The window is a splash screen displayed as an application …","","Toolbar windows. “Torn off” from the main application.","A tooltip window. Usually used to show additional …","A small persistent utility window, such as a palette or …","Additional methods on <code>WindowBuilder</code> that are specific to …","Additional methods on <code>Window</code> that are specific to Unix.","Error returned if this system doesn’t have XLib or can’…","Connecting to the X server with <code>XOpenDisplay</code> failed.","X window type. Maps directly to <code>_NET_WM_WINDOW_TYPE</code>.","The first argument in the provided hook will be the …","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Check if the window is ready for drawing","True if the <code>EventLoopWindowTarget</code> uses Wayland.","True if the <code>EventLoopWindowTarget</code> uses X11.","Returns the inner identifier of the monitor.","","Hook to winit’s xlib error handling callback.","","","","","","","","","","","Returns a pointer to the <code>wl_display</code> object of wayland that …","Returns a pointer to the <code>wl_display</code> object of wayland that …","Updates <code>Theme</code> of window decorations.","Returns a pointer to the <code>wl_surface</code> object of wayland that …","Whether to allow the event loop to be created off of the …","Build window with base size hint. Only implemented on X11.","Build window with <code>_GTK_THEME_VARIANT</code> hint set to the …","Build window with the given <code>general</code> and <code>instance</code> names.","Build window with override-redirect flag; defaults to …","Build window with resize increment hint. Only implemented …","Force using Wayland.","Build window with certain decoration <code>Theme</code>","Force using X11.","","","Build window with <code>_NET_WM_WINDOW_TYPE</code> hints; defaults to …","This function returns the underlying <code>xcb_connection_t</code> of …","Returns a pointer to the <code>Display</code> object of xlib that is …","","Returns the ID of the <code>Window</code> xlib object that is used by …","","","Self explanatory.","An error produced when using <code>Icon::from_rgba</code> with invalid …","Providing <code>None</code> to <code>Borderless</code> will fullscreen on the …","Produced when the length of the <code>rgba</code> argument isn’t …","","","The cursor is confined to the window area.","","","Platform-specific","A simple crosshair.","The behavior of cursor grabbing.","Describes the appearance of the mouse cursor.","","The platform-dependent default cursor.","Produced when the number of pixels (<code>rgba.len() / 4</code>) isn’…","Indicate that some edge is to be moved. For example, the …","","","Fullscreen modes.","Indicates something can be grabbed.","Indicates something is grabbed.","A hand (often used to indicate links in web browsers).","Help indicator (often rendered as a “?”)","An icon used for the window titlebar, taskbar, etc.","Platform-specific","","The cursor is locked inside the window area to the certain …","Indicates something is to be moved.","","","","","No grabbing of the cursor is performed.","Cursor showing that something cannot be done.","","","","Produced when underlying OS functionality failed to create …","Progress indicator. Shows that processing is being done. …","","","","","Indicates text that may be selected or edited.","","Platform-specific","","","Program busy indicator.","Represents a window.","Object that allows building windows.","Identifier of a window. Unique for each window.","","","Returns the list of all the monitors available on the …","","","","","","","","","","","","","","","","","","","","","Builds the window.","","","","","","","","","","","","","","","","","","Returns the monitor on which the window currently resides.","","","","Moves the window with the left mouse button until the …","","Returns a dummy id, useful for unit testing.","","","","","","","","","","","","","","","","","","","","","","","","Brings the window to the front and sets input focus. Has …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates an icon from 32bpp RGBA data.","Gets the window’s current fullscreen state.","","","","Returns an identifier unique to the window.","Returns the position of the top-left hand corner of the …","Returns the physical size of the window’s client area.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Gets the window’s current decorations state.","Gets the window’s current maximized state.","","Gets the window’s current resizable state.","Gets the window’s current visibility state.","Creates a new Window for platforms where this is …","Initializes a new builder with default values.","Returns the position of the top-left hand corner of the …","Returns the physical size of the entire window.","","Returns the primary monitor of the system.","","Returns a <code>raw_window_handle::RawDisplayHandle</code> used by the …","Returns a <code>raw_window_handle::RawWindowHandle</code> for the Window","Returns a <code>raw_window_handle_04::RawWindowHandle</code> for the …","Emits a <code>Event::RedrawRequested</code> event in the associated …","Requests user attention to the window, this has no effect …","Returns the scale factor that can be used to map logical …","Change whether or not the window will always be on top of …","Set grabbing mode on the cursor preventing it from leaving …","Modifies whether the window catches cursor events.","Modifies the cursor icon of the window.","Changes the position of the cursor in window coordinates.","Modifies the cursor’s visibility.","Turn window decorations on or off.","Sets the window to fullscreen or back.","Sets whether the window should get IME events","Sets location of IME candidate box in client area …","Modifies the inner size of the window.","Sets a maximum dimension size for the window.","Sets the window to maximized or back.","Sets a minimum dimension size for the window.","Sets the window to minimized or back","Modifies the position of the window.","Sets whether the window is resizable or not.","Modifies the title of the window.","Modifies the window’s visibility.","Sets the window icon.","","","","","","","","","","","Get whether the window will support transparency.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Sets whether or not the window will always be on top of …","","Sets whether the window should have a border, a title bar, …","Sets whether the window should be put into fullscreen upon …","","Requests the window to be of specific dimensions.","Sets the maximum dimensions a window can have.","Request that the window is maximized upon creation.","Sets the minimum dimensions a window can have.","","","Sets a desired initial position for the window.","Sets whether the window is resizable or not.","","Sets the initial title of the window in the title bar.","Sets whether the background of the window should be …","Sets whether the window will be initially visible or …","","Sets the window icon.","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,6,10,0,0,6,10,0,0,0,0,0,2,3,4,5,6,10,2,3,4,5,6,10,1,2,3,4,5,6,2,3,4,5,6,10,2,3,4,5,6,10,2,3,4,5,2,3,4,5,6,10,2,3,4,5,2,3,4,5,6,10,2,2,2,3,3,3,4,4,4,5,5,5,6,6,6,10,10,10,1,3,5,2,4,2,3,4,5,4,5,2,3,4,5,6,10,2,3,4,5,6,10,3,5,6,10,2,3,4,5,6,10,2,4,6,10,2,3,4,5,6,10,2,3,4,5,6,10,2,3,4,5,6,10,0,4,5,2,3,2,3,0,23,0,23,0,23,22,25,23,22,25,22,22,23,23,22,22,25,25,23,22,25,23,22,25,23,22,25,22,23,22,25,23,22,25,23,22,25,23,22,25,43,28,43,43,34,43,43,43,43,43,0,32,43,43,43,34,0,43,28,43,39,37,43,43,32,43,43,36,43,43,43,32,32,32,43,43,43,32,0,30,0,36,43,32,43,0,36,43,37,43,43,0,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,32,0,43,43,43,43,32,32,43,0,32,31,43,43,43,43,43,34,43,43,43,43,43,43,43,43,43,43,0,32,43,43,43,43,28,43,43,41,43,42,30,43,43,30,43,43,41,43,32,0,34,0,32,34,0,32,34,32,37,43,43,43,43,43,30,43,43,39,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,32,41,43,43,43,43,43,43,42,43,43,31,43,36,40,43,43,43,43,43,43,43,43,32,30,30,40,34,32,31,30,43,41,43,43,28,32,0,43,43,43,43,43,43,0,37,43,30,43,43,43,34,32,0,32,0,32,43,43,43,43,30,43,0,43,43,43,31,43,43,43,43,43,43,43,43,0,30,43,43,43,43,28,28,28,28,28,28,28,28,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,28,33,43,28,28,28,28,28,38,28,33,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,28,31,33,35,36,37,40,41,43,28,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,28,28,28,28,28,38,30,31,32,33,34,35,36,37,38,39,40,41,42,43,28,28,28,28,28,28,33,35,36,37,40,41,43,28,38,28,28,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,28,28,28,38,28,30,35,39,28,33,43,28,38,28,35,28,28,35,28,28,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,28,30,32,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,28,28,35,88,89,90,91,92,89,88,93,94,93,94,95,95,95,96,97,96,97,98,99,100,101,102,103,104,100,99,105,98,101,101,102,100,99,106,100,102,105,106,105,99,98,55,0,0,0,0,0,0,0,53,53,55,53,55,53,53,48,51,48,52,50,53,54,55,51,48,52,50,53,54,55,50,52,53,54,55,52,53,54,55,55,51,51,50,53,55,51,53,54,55,53,54,55,51,48,52,53,54,54,55,51,48,52,50,53,54,55,54,55,51,48,52,50,53,54,55,48,48,51,50,55,48,54,48,51,51,52,48,53,53,53,53,53,52,53,54,55,54,51,48,52,50,53,54,55,51,48,52,50,53,54,55,51,48,52,50,53,54,55,48,50,51,50,50,50,0,0,63,63,56,63,56,63,56,63,56,63,56,63,56,63,56,63,63,56,63,56,63,63,56,63,56,56,63,56,56,63,56,56,63,56,63,56,63,63,56,63,56,63,56,56,0,0,0,107,107,65,65,65,65,65,65,0,0,66,65,0,65,65,65,65,0,65,65,65,0,0,0,66,0,0,65,66,65,66,65,66,65,66,65,65,65,65,66,66,65,66,66,65,65,66,108,109,109,110,66,0,66,65,66,66,65,66,65,66,65,66,109,108,108,108,111,112,112,112,112,112,111,112,111,112,112,112,108,108,108,108,79,79,79,0,80,82,79,79,78,79,79,81,79,0,0,70,79,82,79,79,80,0,79,79,79,79,0,81,70,78,79,79,79,79,79,78,79,79,79,79,82,79,79,79,79,79,79,0,0,79,79,79,0,0,0,79,79,74,74,82,76,77,75,78,79,80,70,81,74,82,76,77,75,78,79,80,70,81,75,76,77,75,78,79,80,70,81,76,77,75,78,79,80,70,81,77,74,75,79,81,74,74,77,77,78,79,80,70,81,77,78,79,80,70,81,74,82,82,76,77,75,78,79,80,70,81,74,74,82,76,77,77,75,78,79,80,70,81,76,74,77,78,79,74,74,74,74,82,76,77,75,78,79,80,70,81,74,74,74,74,74,74,75,74,74,77,74,82,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,82,76,77,75,78,79,80,70,81,82,75,74,82,76,77,75,78,79,80,70,81,74,82,76,77,75,78,79,80,70,81,74,82,76,77,75,78,79,80,70,81,74,74,74,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,74,74,74,74,113,114,114,114,114],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],1],[[[2,[1]]],[[2,[1]]]],[[[3,[1]]],[[3,[1]]]],[[[4,[1]]],[[4,[1]]]],[[[5,[1]]],[[5,[1]]]],[[[7,[6]],[7,[6]],[7,[6]],8],6],[[[2,[9]]],[[2,[9]]]],[[[3,[9]]],[[3,[9]]]],[[[4,[9]]],[[4,[9]]]],[[[5,[9]]],[[5,[9]]]],[6,6],[10,10],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[2,[11]]]],[[],[[3,[11]]]],[[],[[4,[11]]]],[[],[[5,[11]]]],[[[2,[12]],[2,[12]]],13],[[[3,[12]],[3,[12]]],13],[[[4,[12]],[4,[12]]],13],[[[5,[12]],[5,[12]]],13],[[6,6],13],[[10,10],13],[[],13],[[],13],[[],13],[[],13],[[[2,[14]],15],16],[[[3,[14]],15],16],[[[4,[14]],15],16],[[[5,[14]],15],16],[[6,15],16],[[10,15],16],[[[17,[1]]],[[2,[1]]]],[[],[[2,[1]]]],[[]],[[]],[[],[[3,[1]]]],[[[17,[1]]],[[3,[1]]]],[[]],[[],[[4,[1]]]],[[[17,[1]]],[[4,[1]]]],[[],[[5,[1]]]],[[]],[[[17,[1]]],[[5,[1]]]],[[[4,[1]]],6],[[[5,[1]]],6],[[]],[[[2,[1]]],10],[[]],[[[3,[1]]],10],[8],[[[7,[[2,[1]]]],8],[[3,[1]]]],[[[7,[[4,[1]]]],8],[[5,[1]]]],[[[7,[[3,[1]]]],8],[[2,[1]]]],[[[7,[[5,[1]]]],8],[[4,[1]]]],[[[2,[18]],19]],[[[3,[18]],19]],[[[4,[18]],19]],[[[5,[18]],19]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[],2],[[],3],[[],4],[[],5],[[[7,[6]]],6],[[[7,[10]]],10],[[[3,[1]],8],[[2,[1]]]],[[[5,[1]],8],[[4,[1]]]],[[6,8],[[4,[1]]]],[[10,8],[[2,[1]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[[2,[1]],8],[[3,[1]]]],[[[4,[1]],8],[[5,[1]]]],[[6,8],[[5,[1]]]],[[10,8],[[3,[1]]]],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[8,13],0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[22,22],[[]],[[23,15],16],[[23,15],[[20,[24]]]],[[22,15],[[20,[24]]]],[[22,15],[[20,[24]]]],[[25,15],16],[[25,15],[[20,[24]]]],[[]],[[]],[[]],[[]],[[]],[[]],[26],[26],[26],[[]],[[],27],[[],27],[[],27],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],21],[[],21],[[],21],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],28],[28,13],[[28,28],28],[[28,28]],[[28,28],28],[[28,28]],[28,29],[[28,28],28],[[28,28]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[30,[9]]],[[30,[9]]]],[31,31],[32,32],[33,33],[34,34],[35,35],[36,36],[37,37],[38,38],[39,39],[40,40],[41,41],[42,42],[43,43],[28,28],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[33,33],44],[[43,43],44],[[28,28],44],[28,28],[[28,28],13],[28,13],[[],28],0,[[28,28],28],[[],33],[[],28],[[[30,[12]],[30,[12]]],13],[[31,31],13],[[32,32],13],[[33,33],13],[[34,34],13],[[35,35],13],[[36,36],13],[[37,37],13],[[38,38],13],[[39,39],13],[[40,40],13],[[41,41],13],[[42,42],13],[[43,43],13],[[28,28],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[28,45]],[[[30,[14]],15],16],[[31,15],16],[[32,15],16],[[33,15],16],[[34,15],16],[[35,15],16],[[36,15],16],[[37,15],16],[[38,15],16],[[39,15],16],[[40,15],16],[[41,15],16],[[42,15],16],[[43,15],16],[[28,15],16],[[28,15],16],[[28,15],16],[[28,15],16],[[28,15],16],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[46,28],[29,[[47,[28]]]],[29,28],[29,28],[45,28],[[33,19]],[[35,19]],[[36,19]],[[37,19]],[[40,19]],[[41,19]],[[43,19]],[[28,19]],0,[[28,28]],[[28,28],28],[[28,28],13],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[28,13],[28,13],0,[28,13],[30,[[20,[30,30]]]],0,[39,8],[28,28],[[33,33],[[47,[44]]]],[[43,43],[[47,[44]]]],[[28,28],[[47,[44]]]],0,[[28,28]],0,[[28,28,13]],[28,13],0,[[28,28],28],[[28,28]],[[28,28],28],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[30,[[47,[30]]]],[32,[[47,[32]]]],[[28,28]],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[28,28],28],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[48,49],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[50,51],[52,52],[53,53],[[[54,[9]]],[[54,[9]]]],[55,55],[[]],[[]],[[]],[[]],[[55,55],44],[51,52],[[],51],[[],[[50,[11]]]],[[],53],[[],55],[51,48],[[53,53],13],[[[54,[12]],[54,[12]]],13],[[55,55],13],[[],13],[[],13],[[],13],[[51,15],16],[[48,15],16],[[52,15],16],[[53,15],16],[[[54,[14]],15],16],[[54,15],16],[[55,15],16],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[54,[18]],19]],[[55,19]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[48,13],[48,13],[[],51],[[],50],[[55,55],[[47,[44]]]],[48,[[47,[56]]]],[26],[48,57],[[51,58],59],[[51,58],60],[52,[[20,[54]]]],[[48,55]],[53],[[53,60]],[53],[53],[[53,61]],[[]],[[]],[[]],[[]],[[],27],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[48,[[47,[62]]]],[[50,13],50],[[],51],[[],50],[50,50],[50,50],0,0,[63,64],[[]],[[]],[[]],[[]],[63,63],[56,56],[[]],[[]],[[63,63],44],[[56,56],44],[[63,63],13],[[56,56],13],[[],13],[[],13],[[63,15],16],[[63,15],16],[[56,15],16],[[]],[[]],[[63,19]],[[]],[[]],[63,56],[56,[[47,[27]]]],[56,29],[[63,63],[[47,[44]]]],[[56,56],[[47,[44]]]],[56,[[3,[60]]]],[63,29],[56,[[47,[29]]]],[56,8],[63,[[5,[29]]]],[56,[[5,[29]]]],[[]],[[]],[[],27],[[],20],[[],20],[[],20],[[],20],[[],21],[[],21],[56,49],0,0,0,0,[58,60],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[65,65],[66,66],[[]],[[]],[[],65],[[65,65],13],[[],13],[[65,15],16],[[66,15],16],[[66,15],[[20,[24]]]],[[]],[67,66],[[]],[[65,19]],[[]],[[]],[[],13],[[],13],[[],13],[[],29],[26],[68],[66,[[47,[69]]]],[[]],[[]],[[],27],[[],20],[[],20],[[],20],[[],20],[[],21],[[],21],[[],[[47,[62]]]],[[],[[47,[62]]]],[70],[[],[[47,[62]]]],[13],[[[7,[6]]]],[27],[[[7,[27]],[7,[27]]]],[13],[[[7,[6]]]],[[]],[70],[[]],[60],[[]],[[[71,[65]]]],[[],[[47,[62]]]],[[],[[47,[62]]]],[[],[[47,[72]]]],[[],[[47,[73]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[74,49],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[75,48],[[20,[74,25]]]],[76,76],[77,77],[75,75],[78,78],[79,79],[80,80],[70,70],[81,81],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[77,77],44],[74,[[47,[56]]]],[[],75],[[],79],[[],81],[74,[[20,[23]]]],[74],[[],77],[[77,77],13],[[78,78],13],[[79,79],13],[[80,80],13],[[70,70],13],[[81,81],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[74,15],16],[[82,15],16],[[82,15],16],[[76,15],[[20,[24]]]],[[77,15],16],[[75,15],16],[[78,15],16],[[79,15],16],[[80,15],16],[[70,15],16],[[81,15],16],[74],[[]],[[]],[[]],[83,77],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[71,[84]],29,29],[[20,[76,82]]]],[74,[[47,[80]]]],[[77,19]],[[78,19]],[[79,19]],[74,77],[74,[[20,[[3,[60]],22]]]],[74,[[5,[29]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[74,13],[74,13],[74,13],[74,13],[74,[[47,[13]]]],[48,[[20,[74,25]]]],[[],75],[74,[[20,[[3,[60]],22]]]],[74,[[5,[29]]]],[[77,77],[[47,[44]]]],[74,[[47,[56]]]],[26],[74,57],[74,85],[74,86],[74],[[74,[47,[81]]]],[74,8],[[74,13]],[[74,78],[[20,[23]]]],[[74,13],[[20,[23]]]],[[74,79]],[[74,[7,[10]]],[[20,[23]]]],[[74,13]],[[74,13]],[[74,[47,[80]]]],[[74,13]],[[74,[7,[10]]]],[[74,[7,[6]]]],[[74,[47,[[7,[6]]]]]],[[74,13]],[[74,[47,[[7,[6]]]]]],[[74,13]],[[74,[7,[10]]]],[[74,13]],[[74,87]],[[74,13]],[[74,[47,[76]]]],[82,[[47,[69]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],27],[75,13],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[74,[[47,[62]]]],[[74,70]],[74,[[47,[62]]]],[[75,13],75],[[75,[7,[6]]],75],[[75,13],75],[[75,[47,[80]]],75],[[75,27],75],[[75,[7,[6]]],75],[[75,[7,[6]]],75],[[75,13],75],[[75,[7,[6]]],75],[[75,[7,[27]],[7,[27]]],75],[[75,13],75],[[75,[7,[10]]],75],[[75,13],75],[[75,[7,[6]]],75],[[75,[7,[27]]],75],[[75,13],75],[[75,13],75],[[75,70],75],[[75,[47,[76]]],75],[[75,60],75],[75,75],[[75,[71,[65]]],75],[74,[[47,[62]]]],[74,[[47,[62]]]],[74,[[47,[72]]]],[74,[[47,[73]]]],0,0,0,0,0],"c":[614,725,726,727,856,956],"p":[[8,"Pixel"],[3,"LogicalPosition"],[3,"PhysicalPosition"],[3,"LogicalSize"],[3,"PhysicalSize"],[4,"Size"],[8,"Into"],[15,"f64"],[8,"Clone"],[4,"Position"],[8,"Default"],[8,"PartialEq"],[15,"bool"],[8,"Debug"],[3,"Formatter"],[6,"Result"],[15,"array"],[8,"Hash"],[8,"Hasher"],[4,"Result"],[3,"TypeId"],[3,"NotSupportedError"],[4,"ExternalError"],[3,"Error"],[3,"OsError"],[3,"Demand"],[3,"String"],[3,"ModifiersState"],[15,"u32"],[4,"Event"],[4,"StartCause"],[4,"WindowEvent"],[3,"DeviceId"],[4,"DeviceEvent"],[3,"KeyboardInput"],[4,"Ime"],[4,"TouchPhase"],[3,"Touch"],[4,"Force"],[4,"ElementState"],[4,"MouseButton"],[4,"MouseScrollDelta"],[4,"VirtualKeyCode"],[4,"Ordering"],[8,"IntoIterator"],[3,"ModifiersState"],[4,"Option"],[3,"EventLoopWindowTarget"],[8,"Iterator"],[3,"EventLoopBuilder"],[3,"EventLoop"],[3,"EventLoopProxy"],[4,"ControlFlow"],[3,"EventLoopClosed"],[4,"DeviceEventFilter"],[3,"MonitorHandle"],[4,"RawDisplayHandle"],[8,"FnMut"],[15,"never"],[15,"i32"],[6,"Instant"],[6,"c_void"],[3,"VideoMode"],[15,"u16"],[4,"XWindowType"],[4,"XNotSupported"],[3,"OpenError"],[6,"XlibErrorHook"],[8,"Error"],[4,"Theme"],[3,"Vec"],[6,"c_int"],[6,"c_ulong"],[3,"Window"],[3,"WindowBuilder"],[3,"Icon"],[3,"WindowId"],[4,"CursorGrabMode"],[4,"CursorIcon"],[4,"Fullscreen"],[4,"UserAttentionType"],[4,"BadIcon"],[15,"u64"],[15,"u8"],[4,"RawWindowHandle"],[4,"RawWindowHandle"],[15,"str"],[13,"Motion"],[13,"Button"],[13,"Text"],[13,"MouseMotion"],[13,"MouseWheel"],[13,"DeviceEvent"],[13,"WindowEvent"],[13,"Calibrated"],[13,"ResumeTimeReached"],[13,"WaitCancelled"],[13,"AxisMotion"],[13,"MouseInput"],[13,"MouseWheel"],[13,"KeyboardInput"],[13,"CursorMoved"],[13,"CursorEntered"],[13,"CursorLeft"],[13,"TouchpadPressure"],[13,"ScaleFactorChanged"],[8,"EventLoopExtRunReturn"],[8,"WindowExtUnix"],[8,"EventLoopWindowTargetExtUnix"],[8,"MonitorHandleExtUnix"],[8,"EventLoopBuilderExtUnix"],[8,"WindowBuilderExtUnix"],[13,"ByteCountNotDivisibleBy4"],[13,"DimensionsVsPixelCount"]]},\
"winnow":{"doc":"winnow, making parsing a breeze","t":"CCCCCICCCLLAALLALLLLOLLALLLLLLLLKLLLLALLLLAAALLFLLLLLLLLLLLLIIIFFFFFFFFFFFFFFFFFFFFFFFFFNENNFFFFFFFFFFFFFFALLLLLLFFLLFFFFFFLFFFFFFFFFFFFFFFFFLLLLFFFFFFFFFFFIDDDDDDDDDDIDDDDDDDDDFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKFFFOFFFLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLFFLLLLLLLLLLLLLLLLLLFFKFFFFFFFFFFFFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLINNNNNDNNNEIENNIGNDNNENGDINNEENNNNNLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLKLLLLLLLMLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLCCCCIIIIDDDDQIEININQDIINIDQDQIDGIIIQIKKLLLLKLLLLKLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLKLLLLLKLLLLLKLLLLLKLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKMLLLLLLLLLKKKKKKLLLLKLLLLLKKLLLLLKKLLLLLLLLKLLLLLKLLLLLKLLLLLKLLLLLKLLLLLLLLLLLKLLLLLLLLLLLLLLLKLLLLLKLLLLLKLLLLLKLLLLLLMLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLKLLLLLFFFFFFFFFFFF","n":["BStr","Bytes","IResult","Located","PResult","Parser","Partial","Stateful","Str","and_then","and_then","ascii","binary","by_ref","by_ref","combinator","complete_err","complete_err","context","context","dispatch","err_into","err_into","error","flat_map","flat_map","map","map","output_into","output_into","parse","parse","parse_next","parse_peek","parse_peek","parse_to","parse_to","prelude","recognize","recognize","span","span","stream","token","trace","try_map","try_map","unpeek","value","value","verify","verify","verify_map","verify_map","void","void","with_recognized","with_recognized","with_span","with_span","HexUint","Int","Uint","alpha0","alpha1","alphanumeric0","alphanumeric1","crlf","dec_int","dec_uint","digit0","digit1","escaped","escaped_transform","float","hex_digit0","hex_digit1","hex_uint","line_ending","multispace0","multispace1","newline","not_line_ending","oct_digit0","oct_digit1","space0","space1","tab","Big","Endianness","Little","Native","be_f32","be_f64","be_i128","be_i16","be_i24","be_i32","be_i64","be_i8","be_u128","be_u16","be_u24","be_u32","be_u64","be_u8","bits","borrow","borrow_mut","clone","clone_into","eq","equivalent","f32","f64","fmt","from","i128","i16","i24","i32","i64","i8","into","le_f32","le_f64","le_i128","le_i16","le_i24","le_i32","le_i64","le_i8","le_u128","le_u16","le_u24","le_u32","le_u64","le_u8","length_count","length_data","length_value","to_owned","try_from","try_into","type_id","u128","u16","u24","u32","u64","u8","bits","bool","bytes","tag","take","Alt","AndThen","ByRef","CompleteErr","Context","ErrInto","FlatMap","Map","OutputInto","ParseTo","ParserIterator","Permutation","Recognize","Span","TryMap","Value","Verify","VerifyMap","Void","WithRecognized","WithSpan","alt","backtrack_err","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","choice","cond","cut_err","delimited","dispatch","eof","fail","fill","finish","fold_repeat","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","iterator","next","not","opt","parse_next","parse_next","parse_next","parse_next","parse_next","parse_next","parse_next","parse_next","parse_next","parse_next","parse_next","parse_next","parse_next","parse_next","parse_next","parse_next","parse_next","parse_next","peek","permutation","permutation","preceded","repeat","repeat_till0","rest","rest_len","separated0","separated1","separated_foldl1","separated_foldr1","separated_pair","success","terminated","todo","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","AddContext","Alt","Assert","Backtrack","CharLiteral","Complete","ContextError","Cut","Description","Eof","ErrMode","ErrorConvert","ErrorKind","Expected","Fail","FromExternalError","IResult","Incomplete","InputError","Label","Many","Needed","Not","PResult","ParseError","ParserError","Size","Slice","StrContext","StrContextValue","StringLiteral","Tag","Token","Unknown","Verify","add_context","add_context","add_context","append","append","append","append","append","assert","assert","backtrack","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cause","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","context","convert","convert","convert","convert","cut","default","description","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from_error_kind","from_error_kind","from_error_kind","from_error_kind","from_error_kind","from_external_error","from_external_error","from_external_error","from_external_error","from_external_error","hash","inner","input","input","into","into","into","into","into","into","into","into","into_inner","into_inner","into_owned","is_incomplete","is_known","kind","map","map","map_input","new","new","new","offset","or","or","or","provide","provide","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","IResult","PResult","Parser","_","Accumulate","AsBStr","AsBytes","AsChar","BStr","BitOffsets","Bytes","Checkpoint","Checkpoint","Compare","CompareResult","ContainsToken","Error","FindSlice","Incomplete","IterOffsets","Located","Location","Offset","Ok","ParseSlice","Partial","PartialState","Range","Slice","SliceLen","Stateful","Str","Stream","StreamIsPartial","ToUsize","Token","UpdateSlice","accumulate","as_bstr","as_bstr","as_bstr","as_bstr","as_bstr","as_bytes","as_bytes","as_bytes","as_bytes","as_bytes","as_char","as_ref","as_ref","as_ref","as_ref","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","checkpoint","checkpoint","checkpoint","checkpoint","checkpoint","checkpoint","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","compare","compare","compare","compare","compare","compare","compare_no_case","compare_no_case","compare_no_case","compare_no_case","compare_no_case","compare_no_case","complete","complete","complete","complete","complete","complete","contains_token","default","default","default","default","deref","deref","deref","deref","deref","end_bound","eof_offset","eof_offset","eof_offset","eof_offset","eof_offset","eof_offset","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","find_slice","find_slice","find_slice","find_slice","find_slice","find_slice","finish","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","hash","hash","index","index","index","index","index","index","index","index","index","index","index","index","index","index","initial","input","into","into","into","into","into","into","into","into_inner","into_iter","is_alpha","is_alphanum","is_dec_digit","is_hex_digit","is_newline","is_oct_digit","is_partial","is_partial","is_partial","is_partial","is_partial_supported","is_partial_supported","is_partial_supported","is_partial_supported","is_partial_supported","is_partial_supported","is_space","iter_offsets","iter_offsets","iter_offsets","iter_offsets","iter_offsets","iter_offsets","len","location","location","location","location","new","new","new","new","next","next_slice","next_slice","next_slice","next_slice","next_slice","next_slice","next_token","next_token","next_token","next_token","next_token","next_token","offset_at","offset_at","offset_at","offset_at","offset_at","offset_at","offset_for","offset_for","offset_for","offset_for","offset_for","offset_for","offset_from","offset_from","offset_from","offset_from","offset_from","offset_from","offset_from","offset_from","offset_from","offset_from","offset_from","offset_from","parse_slice","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","peek_finish","peek_slice","peek_token","raw","raw","raw","raw","raw","raw","reset","reset","reset","reset","reset","reset","restore_partial","restore_partial","restore_partial","restore_partial","restore_partial","restore_partial","slice_len","slice_len","slice_len","slice_len","slice_len","slice_len","start_bound","state","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_usize","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update_slice","update_slice","update_slice","update_slice","update_slice","update_slice","any","none_of","one_of","tag","tag_no_case","take","take_till0","take_till1","take_until0","take_until1","take_while","trace"],"q":[[0,"winnow"],[60,"winnow::ascii"],[88,"winnow::binary"],[151,"winnow::binary::bits"],[156,"winnow::combinator"],[360,"winnow::error"],[561,"winnow::prelude"],[565,"winnow::stream"],[928,"winnow::token"],[939,"winnow::trace"]],"d":["","","","","","Core trait for parsing","","","","Applies a second parser over the output of the first one","Applies a second parser over the output of the first one","Character specific parsers and combinators","Parsers recognizing numbers","Treat <code>&amp;mut Self</code> as a parser","Treat <code>&amp;mut Self</code> as a parser","List of parsers and combinators","Transforms <code>Incomplete</code> into <code>Backtrack</code>","Transforms <code>Incomplete</code> into <code>Backtrack</code>","If parsing fails, add context to the error","If parsing fails, add context to the error","<code>match</code> for parsers","Convert the parser’s error to another type using …","Convert the parser’s error to another type using …","Error management","Creates a parser from the output of this one","Creates a parser from the output of this one","Maps a function over the output of a parser","Maps a function over the output of a parser","Convert the parser’s output to another type using …","Convert the parser’s output to another type using …","Parse all of <code>input</code>, generating <code>O</code> from it","Parse all of <code>input</code>, generating <code>O</code> from it","Take tokens from the <code>Stream</code>, turning it into the output","Take tokens from the <code>Stream</code>, turning it into the output","Take tokens from the <code>Stream</code>, turning it into the output","Apply <code>std::str::FromStr</code> to the output of the parser","Apply <code>std::str::FromStr</code> to the output of the parser","Core concepts available for glob import","Produce the consumed input as produced value.","Produce the consumed input as produced value.","Produce the location of the consumed input as produced …","Produce the location of the consumed input as produced …","Stream capability for combinators to parse","Parsers extracting tokens from the stream","Parser execution tracing","Applies a function returning a <code>Result</code> over the output of a …","Applies a function returning a <code>Result</code> over the output of a …","Convert a <code>Parser::parse_peek</code> style parse function to be a …","Produce the provided value","Produce the provided value","Returns the output of the child parser if it satisfies a …","Returns the output of the child parser if it satisfies a …","Apply both <code>Parser::verify</code> and <code>Parser::map</code>.","Apply both <code>Parser::verify</code> and <code>Parser::map</code>.","Discards the output of the <code>Parser</code>","Discards the output of the <code>Parser</code>","Produce the consumed input with the output","Produce the consumed input with the output","Produce the location of consumed input with the output","Produce the location of consumed input with the output","Metadata for parsing hex numbers, see <code>hex_uint</code>","Metadata for parsing signed integers, see <code>dec_int</code>","Metadata for parsing unsigned integers, see <code>dec_uint</code>","Recognizes zero or more lowercase and uppercase ASCII …","Recognizes one or more lowercase and uppercase ASCII …","Recognizes zero or more ASCII numerical and alphabetic …","Recognizes one or more ASCII numerical and alphabetic …","Recognizes the string <code>&quot;\\\\r\\\\n&quot;</code>.","Decode a decimal signed integer (e.g. <code>i32</code>)","Decode a decimal unsigned integer (e.g. <code>u32</code>)","Recognizes zero or more ASCII numerical characters: …","Recognizes one or more ASCII numerical characters: …","Matches a byte string with escaped characters.","Matches a byte string with escaped characters.","Recognizes floating point number in text format and …","Recognizes zero or more ASCII hexadecimal numerical …","Recognizes one or more ASCII hexadecimal numerical …","Decode a variable-width hexadecimal integer (e.g. <code>u32</code>)","Recognizes an end of line (both <code>&quot;\\\\n&quot;</code> and <code>&quot;\\\\r\\\\n&quot;</code>).","Recognizes zero or more spaces, tabs, carriage returns and …","Recognizes one or more spaces, tabs, carriage returns and …","Matches a newline character <code>&#39;\\\\n&#39;</code>.","Recognizes a string of any char except <code>&quot;\\\\r\\\\n&quot;</code> or <code>&quot;\\\\n&quot;</code>.","Recognizes zero or more octal characters: <code>&#39;0&#39;..=&#39;7&#39;</code>","Recognizes one or more octal characters: <code>&#39;0&#39;..=&#39;7&#39;</code>","Recognizes zero or more spaces and tabs.","Recognizes zero or more spaces and tabs.","Matches a tab character <code>&#39;\\\\t&#39;</code>.","Big endian","Configurable endianness","Little endian","Will match the host’s endianness","Recognizes a big endian 4 bytes floating point number.","Recognizes a big endian 8 bytes floating point number.","Recognizes a big endian signed 16 bytes integer.","Recognizes a big endian signed 2 bytes integer.","Recognizes a big endian signed 3 bytes integer.","Recognizes a big endian signed 4 bytes integer.","Recognizes a big endian signed 8 bytes integer.","Recognizes a signed 1 byte integer.","Recognizes a big endian unsigned 16 bytes integer.","Recognizes a big endian unsigned 2 bytes integer.","Recognizes a big endian unsigned 3 byte integer.","Recognizes a big endian unsigned 4 bytes integer.","Recognizes a big endian unsigned 8 bytes integer.","Recognizes an unsigned 1 byte integer.","Bit level parsers","","","","","","","Recognizes a 4 byte floating point number","Recognizes an 8 byte floating point number","","Returns the argument unchanged.","Recognizes a signed 16 byte integer","Recognizes a signed 2 byte integer","Recognizes a signed 3 byte integer","Recognizes a signed 4 byte integer","Recognizes a signed 8 byte integer","Recognizes a signed 1 byte integer","Calls <code>U::from(self)</code>.","Recognizes a little endian 4 bytes floating point number.","Recognizes a little endian 8 bytes floating point number.","Recognizes a little endian signed 16 bytes integer.","Recognizes a little endian signed 2 bytes integer.","Recognizes a little endian signed 3 bytes integer.","Recognizes a little endian signed 4 bytes integer.","Recognizes a little endian signed 8 bytes integer.","Recognizes a signed 1 byte integer.","Recognizes a little endian unsigned 16 bytes integer.","Recognizes a little endian unsigned 2 bytes integer.","Recognizes a little endian unsigned 3 byte integer.","Recognizes a little endian unsigned 4 bytes integer.","Recognizes a little endian unsigned 8 bytes integer.","Recognizes an unsigned 1 byte integer.","Gets a number from the first parser, then applies the …","Gets a number from the parser and returns a subslice of …","Gets a number from the first parser, takes a subslice of …","","","","","Recognizes an unsigned 16 byte integer","Recognizes an unsigned 2 bytes integer","Recognizes an unsigned 3 byte integer","Recognizes an unsigned 4 byte integer","Recognizes an unsigned 8 byte integer","Recognizes an unsigned 1 byte integer","Converts a byte-level input to a bit-level input","Parses one specific bit as a bool.","Convert a <code>bits</code> stream back into a byte stream","Parse taking <code>count</code> bits and comparing them to <code>pattern</code>","Parse taking <code>count</code> bits","Helper trait for the alt() combinator.","Implementation of <code>Parser::and_then</code>","Implementation of <code>Parser::by_ref</code>","Implementation of <code>Parser::complete_err</code>","Implementation of <code>Parser::context</code>","Implementation of <code>Parser::err_into</code>","Implementation of <code>Parser::flat_map</code>","Implementation of <code>Parser::map</code>","Implementation of <code>Parser::output_into</code>","Implementation of <code>Parser::parse_to</code>","Main structure associated to <code>iterator</code>.","Helper trait for the permutation() combinator.","Implementation of <code>Parser::recognize</code>","Implementation of <code>Parser::span</code>","Implementation of <code>Parser::try_map</code>","Implementation of <code>Parser::value</code>","Implementation of <code>Parser::verify</code>","Implementation of <code>Parser::verify_map</code>","Implementation of <code>Parser::void</code>","Implementation of <code>Parser::with_recognized</code>","Implementation of <code>Parser::with_span</code>","Pick the first successful parser","Transforms an <code>ErrMode::Cut</code> (unrecoverable) to …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Tests each parser in the tuple and returns the result of …","Calls the parser if the condition is met.","Transforms an <code>ErrMode::Backtrack</code> (recoverable) to …","Sequence three parsers, only returning the output of the …","<code>match</code> for parsers","Match the end of the <code>Stream</code>","A parser which always fails.","Repeats the embedded parser, filling the given slice with …","Returns the remaining input if parsing was successful, or …","Repeats the embedded parser <code>m..=n</code> times, calling <code>g</code> to …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Repeats the embedded parser, lazily returning the results","","Succeeds if the child parser returns an error.","Apply a <code>Parser</code>, producing <code>None</code> on <code>ErrMode::Backtrack</code>.","","","","","","","","","","","","","","","","","","","Tries to apply its parser without consuming the input.","Applies a list of parsers in any order.","Tries to apply all parsers in the tuple in various orders …","Sequence two parsers, only returning the output from the …","<code>Accumulate</code> the output of a parser into a container, like …","<code>Accumulate</code> the output of parser <code>f</code> into a container, like …","Return the remaining input.","Return the length of the remaining input.","<code>Accumulate</code> the output of a parser, interleaed with <code>sep</code>","<code>Accumulate</code> the output of a parser, interleaed with <code>sep</code>","Alternates between two parsers, merging the results (left …","Alternates between two parsers, merging the results (right …","Sequence three parsers, only returning the values of the …","Always succeeds with given value without consuming any …","Sequence two parsers, only returning the output of the …","A placeholder for a not-yet-implemented <code>Parser</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Used by <code>Parser::context</code> to add custom data to error while …","","","The parser failed with a recoverable error (the default).","A <code>char</code> token","","Accumulate context while backtracking errors","The parser had an unrecoverable error.","A description of what was being parsed","","The <code>Err</code> enum indicates the parser was not successful","Equivalent of <code>From</code> implementation to avoid orphan rules in …","Provide some minor debug context for errors","Grammar item that was expected","","Create a new error with an external error, from …","Holds the result of <code>Parser</code>","There was not enough data to determine the appropriate …","Capture input on error","Description of what is currently being parsed","","Contains information on needed data if a parser returned …","","Holds the result of <code>Parser</code>","See <code>Parser::parse</code>","The basic <code>Parser</code> trait for errors","Contains the required data size in bytes","","Additional parse context for <code>ContextError</code> added via …","See <code>StrContext</code>","A <code>&amp;str</code> token","","","Needs more data, but we do not know how much","","Append to an existing error custom data","","","Like <code>ParserError::from_error_kind</code> but merges it with the …","","","","","Process a parser assertion","","Enable backtracking support","","","","","","","","","","","","","","","","","Originating <code>std::error::Error</code>","","","","","","","","","","","","","","","Access context from <code>Parser::context</code>","Transform to another error type","Automatically converts between errors if the underlying …","","","Prevent backtracking, bubbling the error up to the top","","Converts an <code>ErrorKind</code> to a text description","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Creates an error from the input position and an <code>ErrorKind</code>","","","","","Like <code>ParserError::from_error_kind</code> but also include an …","","Create a new error from an input position and an external …","","Create a new error from an input position and an external …","","The original <code>ParserError</code>","The <code>Stream</code> at the initial location when parsing started","The input stream, pointing to the location where the error …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Unwrap the mode, returning the underlying error","The original <code>ParserError</code>","Obtaining ownership","Tests if the result is Incomplete","Indicates if we know how many bytes we need","A rudimentary error kind","Maps a <code>Needed</code> to <code>Needed</code> by applying a function to a …","Applies the given function to the inner error","Maps <code>ErrMode&lt;InputError&lt;T&gt;&gt;</code> to <code>ErrMode&lt;InputError&lt;U&gt;&gt;</code> with …","Creates <code>Needed</code> instance, returns <code>Needed::Unknown</code> if the …","Creates a new basic error","Create an empty error","The location in <code>ParseError::input</code> where parsing failed","Combines errors from two different parse branches.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Abstracts something which can extend an <code>Extend</code>. Used to …","Helper trait for types that can be viewed as a byte slice","Helper trait for types that can be viewed as a byte slice","Transforms a token into a char for basic string parsing","Improved <code>Debug</code> experience for <code>&amp;[u8]</code> UTF-8-ish streams","Iterator for bit stream (<code>(I, usize)</code>)","Improved <code>Debug</code> experience for <code>&amp;[u8]</code> byte streams","Ensure checkpoint details are kept privazte","A parse location within the stream","Abstracts comparison operations","Result of <code>Compare::compare</code>","Check if a token in in a set of possible tokens","Comparison failed","Look for a slice in self","We need more data to be sure","Iterate with the offset from the current location","Allow collecting the span of a parsed token","Number of indices input has advanced since start of parsing","Useful functions to calculate the offset between slices …","Comparison was successful","Used to integrate <code>str</code>’s <code>parse()</code> method","Mark the input as a partial buffer for streaming input.","Whether the stream is currently partial or complete","A range bounded inclusively for counting parses performed","Sequence of <code>Token</code>s","Abstract method to calculate the input length","Thread global state through your parsers","UTF-8 Stream","Core definition for parser input state","Marks the input as being the complete buffer or a partial …","Helper trait to convert numbers to usize.","The smallest unit being parsed","Convert a <code>Stream</code> into an appropriate <code>Output</code> type","Accumulate the input into an accumulator","Casts the input type to a byte slice","","","","","Casts the input type to a byte slice","","","","","Makes a char from self","","","","","","","","","","","","","","","","","","","","","","","Save the current parse location within the stream","","","","","","","","","","","","","","","","","","Compares self to another value for equality","","","","","","Compares self to another value for equality independently …","","","","","","Mark the stream is complete","","","","","","Returns true if self contains the token","","","","","","","","","","","Returns the offaet to the end of the input","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the offset of the slice if it is found","","","","","","Advance to the end of the stream","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","Create a new <code>Extend</code> of the correct type","Inner input being wrapped in state","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Extract the original <code>Stream</code>","","Tests that self is an alphabetic character","Tests that self is an alphabetic character or a decimal …","Tests that self is a decimal digit","Tests that self is an hex digit","Tests if byte is ASCII newline: \\\\n","Tests that self is an octal digit","Report whether the <code>Stream</code> is currently incomplete","","","","Report whether the <code>Stream</code> is can ever be incomplete","","","","","","Tests that self is ASCII space or tab","Iterate with the offset from the current location","","","","","","Gets the len in bytes for self","Number of indices input has advanced since start of parsing","","","","Make a stream out of a byte slice-like.","Make a stream out of a byte slice-like.","Wrap another Stream with span tracking","Create a partial input","","Split off a slice of tokens from the input","","","","","","Split off the next token from the input","","","","","","Get the offset for the number of <code>tokens</code> into the stream","","","","","","Finds the offset of the next matching token","","","","","","Offset between the first byte of <code>start</code> and the first byte …","","","","","","","","","","","","Succeeds if <code>parse()</code> succeededThe","","","","","","","","","","","","","Advance to the end of the stream","Split off a slice of tokens from the input","Split off the next token from the input","Return the inner-most stream","","","","","","Revert the stream to a prior <code>Self::Checkpoint</code>","","","","","","Restore the stream back to its previous state","","","","","","Calculates the input length, as indicated by its name, and …","","","","","","","User-provided state","","","","","","","","","","","","","converts self to usize","","","","","","","","","","","","","","","","","","","","","","","","Convert an <code>Output</code> type to be used as <code>Stream</code>","","","","","","Matches one token","Recognize a token that does not match the pattern","Recognize a token that matches the pattern","Recognizes a literal","Recognizes a case insensitive literal.","Recognize an input slice containing the first N input …","Recognize the longest input slice (if any) till a pattern …","Recognize the longest (at least 1) input slice till a …","Recognize the input slice up to the first occurrence of …","Recognize the non empty input slice up to the first …","Recognize the longest (m &lt;= len &lt;= n) input slice that …","Trace the execution of the parser"],"i":[0,0,0,0,0,0,0,0,0,3,3,0,0,3,3,0,3,3,3,3,0,3,3,0,3,3,3,3,3,3,3,3,3,3,3,3,3,0,3,3,3,3,0,0,0,3,3,0,3,3,3,3,3,3,3,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,58,0,58,58,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,58,58,58,58,58,58,0,0,58,58,0,0,0,0,0,0,58,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,58,58,58,58,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,75,6,17,30,34,5,25,15,7,33,31,35,26,36,28,37,18,13,11,75,6,17,30,34,5,25,15,7,33,31,35,26,36,28,37,18,13,11,72,0,0,0,0,0,0,0,75,0,75,6,17,30,34,5,25,15,7,33,31,35,26,36,28,37,18,13,11,75,6,17,30,34,5,25,15,7,33,31,35,26,36,28,37,18,13,11,0,75,0,0,6,17,30,34,5,25,15,7,33,31,35,26,36,28,37,18,13,11,0,0,78,0,0,0,0,0,0,0,0,0,0,0,0,0,75,6,17,30,34,5,25,15,7,33,31,35,26,36,28,37,18,13,11,75,6,17,30,34,5,25,15,7,33,31,35,26,36,28,37,18,13,11,75,6,17,30,34,5,25,15,7,33,31,35,26,36,28,37,18,13,11,0,81,81,79,86,81,0,79,86,81,0,0,0,85,81,0,0,79,0,85,81,0,81,0,0,0,84,81,0,0,86,81,81,84,81,10,79,80,19,79,82,80,81,19,79,79,84,79,82,80,85,86,81,20,84,79,82,80,85,86,81,20,80,84,79,82,85,86,81,20,84,79,82,85,86,81,20,80,65,79,82,82,79,80,81,84,79,82,80,85,86,81,20,84,79,82,85,86,81,20,84,79,79,82,82,80,80,85,86,86,81,81,20,20,84,79,82,80,85,86,86,86,81,20,19,79,82,80,81,29,79,82,80,81,81,20,20,82,84,79,82,80,85,86,81,20,79,20,82,79,84,82,84,79,79,84,82,80,20,19,79,80,82,81,84,79,82,85,86,81,20,79,82,80,86,81,20,84,79,82,80,85,86,81,20,84,79,82,80,85,86,81,20,84,79,82,80,85,86,81,20,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,105,0,105,4,0,0,0,105,0,0,2,0,4,0,0,0,0,0,0,4,0,43,44,96,97,98,99,101,100,97,98,99,120,100,96,97,98,116,100,96,97,98,99,105,102,76,116,100,96,97,98,99,105,102,76,4,100,96,97,98,99,97,98,99,102,97,98,99,102,100,96,97,99,39,100,96,97,98,99,39,100,96,97,98,99,2,100,96,97,98,99,119,100,96,97,99,100,96,97,98,99,76,4,100,96,97,98,99,100,100,100,100,100,96,96,96,96,96,97,98,99,105,76,100,96,97,98,99,105,76,108,100,96,97,98,99,4,100,100,100,100,96,96,97,97,98,98,99,99,105,102,76,76,116,100,100,96,96,97,98,99,105,102,76,76,76,76,76,76,76,76,100,96,100,100,100,100,100,100,100,96,96,96,96,96,96,96,43,98,116,97,98,99,105,102,76,99,116,120,120,120,120,120,120,2,97,98,99,2,100,96,97,98,99,120,4,100,96,97,98,99,120,27,97,98,99,100,96,97,99,116,4,100,96,97,98,99,4,100,96,97,98,99,4,100,96,97,98,99,4,100,96,97,98,99,114,100,100,96,96,97,97,98,98,99,99,102,24,100,100,100,100,100,96,96,96,96,96,97,99,4,4,4,4,100,96,97,98,99,4,100,96,97,98,99,2,100,96,97,98,99,118,100,96,97,98,99,76,98,100,96,97,98,99,102,100,96,97,98,99,76,62,116,97,98,99,105,102,76,116,97,98,99,105,102,76,116,100,96,97,98,99,105,102,76,63,100,96,97,98,99,0,0,0,0,0,0,0,0,0,0,0,0],"f":[0,0,0,0,0,0,0,0,0,[[1,[3,[2]]],[[5,[1,[3,[2]],4,2]]]],[[1,[3,[2]]],[[5,[1,[3,[2]],4,2]]]],0,0,[1,[[6,[1]]]],[1,[[6,[1]]]],0,[1,[[7,[1]]]],[1,[[7,[1]]]],[[1,[0,[8,9]]],[[11,[1,4,[10,[4,[0,[8,9]]]],[0,[8,9]]]]]],[[1,[0,[8,9]]],[[11,[1,4,[10,[4,[0,[8,9]]]],[0,[8,9]]]]]],0,[1,[[13,[1,12]]]],[1,[[13,[1,12]]]],0,[[1,14],[[15,[1,14,3]]]],[[1,14],[[15,[1,14,3]]]],[[1,16],[[17,[1,16]]]],[[1,16],[[17,[1,16]]]],[1,[[18,[1,12]]]],[1,[[18,[1,12]]]],[[1,[0,[4,2,8]]],[[21,[[20,[[0,[4,2,8]],[19,[[0,[4,2,8]]]]]]]]]],[[1,[0,[4,2,8]]],[[21,[[20,[[0,[4,2,8]],[19,[[0,[4,2,8]]]]]]]]]],[[],22],[[],23],[[],23],[1,[[25,[1,4,24,[19,[4]]]]]],[1,[[25,[1,4,24,[19,[4]]]]]],0,[1,[[26,[1,4]]]],[1,[[26,[1,4]]]],[1,[[28,[1,[0,[4,27]]]]]],[1,[[28,[1,[0,[4,27]]]]]],0,0,0,[[1,14],[[30,[1,14,4,[29,[4]]]]]],[[1,14],[[30,[1,14,4,[29,[4]]]]]],[14,14],[[1,8],[[31,[1,8]]]],[[1,8],[[31,[1,8]]]],[[1,16],[[33,[1,16,4,[32,[1]],1,[19,[4]]]]]],[[1,16],[[33,[1,16,4,[32,[1]],1,[19,[4]]]]]],[[1,14],[[34,[1,14,4,[19,[4]]]]]],[[1,14],[[34,[1,14,4,[19,[4]]]]]],[1,[[35,[1]]]],[1,[[35,[1]]]],[1,[[36,[1,4]]]],[1,[[36,[1,4]]]],[1,[[37,[1,[0,[4,27]]]]]],[1,[[37,[1,[0,[4,27]]]]]],0,0,0,[[[0,[2,4]]],[[22,[[19,[[0,[2,4]]]]]]]],[[[0,[2,4]]],[[22,[[19,[[0,[2,4]]]]]]]],[[[0,[2,4]]],[[22,[[19,[[0,[2,4]]]]]]]],[[[0,[2,4]]],[[22,[[19,[[0,[2,4]]]]]]]],[[[0,[2,4,[39,[38]]]]],[[22,[[19,[[0,[2,4,[39,[38]]]]]]]]]],[[[0,[2,4]]],[[22,[40,[19,[[0,[2,4]]]]]]]],[[[0,[2,4]]],[[22,[41,[19,[[0,[2,4]]]]]]]],[[[0,[2,4]]],[[22,[[19,[[0,[2,4]]]]]]]],[[[0,[2,4]]],[[22,[[19,[[0,[2,4]]]]]]]],[[[3,[[0,[2,4]],[19,[[0,[2,4]]]]]],42,[3,[[0,[2,4]],[19,[[0,[2,4]]]]]]],[[3,[[0,[2,4]],[19,[[0,[2,4]]]]]]]],[[[3,[[0,[2,4]],[19,[[0,[2,4]]]]]],42,[3,[[0,[2,4]],[19,[[0,[2,4]]]]]]],[[3,[[0,[2,4]],43,[19,[[0,[2,4]]]]]]]],[[[0,[2,4,[39,[38]],44]]],[[22,[[19,[[0,[2,4,[39,[38]],44]]]]]]]],[[[0,[2,4]]],[[22,[[19,[[0,[2,4]]]]]]]],[[[0,[2,4]]],[[22,[[19,[[0,[2,4]]]]]]]],[[[0,[2,4]]],[[22,[45,[19,[[0,[2,4]]]]]]]],[[[0,[2,4,[39,[38]]]]],[[22,[[19,[[0,[2,4,[39,[38]]]]]]]]]],[[[0,[2,4]]],[[22,[[19,[[0,[2,4]]]]]]]],[[[0,[2,4]]],[[22,[[19,[[0,[2,4]]]]]]]],[[[0,[2,4]]],[[22,[42,[19,[[0,[2,4]]]]]]]],[[[0,[2,4,[39,[38]]]]],[[22,[[19,[[0,[2,4,[39,[38]]]]]]]]]],[[[0,[2,4]]],[[22,[[19,[[0,[2,4]]]]]]]],[[[0,[2,4]]],[[22,[[19,[[0,[2,4]]]]]]]],[[[0,[2,4]]],[[22,[[19,[[0,[2,4]]]]]]]],[[[0,[2,4]]],[[22,[[19,[[0,[2,4]]]]]]]],[[[0,[2,4]]],[[22,[42,[19,[[0,[2,4]]]]]]]],0,0,0,0,[[[0,[2,4]]],[[22,[46,[19,[[0,[2,4]]]]]]]],[[[0,[2,4]]],[[22,[47,[19,[[0,[2,4]]]]]]]],[[[0,[2,4]]],[[22,[48,[19,[[0,[2,4]]]]]]]],[[[0,[2,4]]],[[22,[49,[19,[[0,[2,4]]]]]]]],[[[0,[2,4]]],[[22,[50,[19,[[0,[2,4]]]]]]]],[[[0,[2,4]]],[[22,[50,[19,[[0,[2,4]]]]]]]],[[[0,[2,4]]],[[22,[51,[19,[[0,[2,4]]]]]]]],[[[0,[2,4]]],[[22,[52,[19,[[0,[2,4]]]]]]]],[[[0,[2,4]]],[[22,[53,[19,[[0,[2,4]]]]]]]],[[[0,[2,4]]],[[22,[54,[19,[[0,[2,4]]]]]]]],[[[0,[2,4]]],[[22,[55,[19,[[0,[2,4]]]]]]]],[[[0,[2,4]]],[[22,[55,[19,[[0,[2,4]]]]]]]],[[[0,[2,4]]],[[22,[56,[19,[[0,[2,4]]]]]]]],[[[0,[2,4]]],[[22,[57,[19,[[0,[2,4]]]]]]]],0,[[]],[[]],[58,58],[[]],[[58,58],59],[[],59],[58,[[3,[[0,[2,4]],46,[19,[[0,[2,4]]]]]]]],[58,[[3,[[0,[2,4]],47,[19,[[0,[2,4]]]]]]]],[[58,60],61],[[]],[58,[[3,[[0,[2,4]],48,[19,[[0,[2,4]]]]]]]],[58,[[3,[[0,[2,4]],49,[19,[[0,[2,4]]]]]]]],[58,[[3,[[0,[2,4]],50,[19,[[0,[2,4]]]]]]]],[58,[[3,[[0,[2,4]],50,[19,[[0,[2,4]]]]]]]],[58,[[3,[[0,[2,4]],51,[19,[[0,[2,4]]]]]]]],[[[0,[2,4]]],[[22,[52,[19,[[0,[2,4]]]]]]]],[[]],[[[0,[2,4]]],[[22,[46,[19,[[0,[2,4]]]]]]]],[[[0,[2,4]]],[[22,[47,[19,[[0,[2,4]]]]]]]],[[[0,[2,4]]],[[22,[48,[19,[[0,[2,4]]]]]]]],[[[0,[2,4]]],[[22,[49,[19,[[0,[2,4]]]]]]]],[[[0,[2,4]]],[[22,[50,[19,[[0,[2,4]]]]]]]],[[[0,[2,4]]],[[22,[50,[19,[[0,[2,4]]]]]]]],[[[0,[2,4]]],[[22,[51,[19,[[0,[2,4]]]]]]]],[[[0,[2,4]]],[[22,[52,[19,[[0,[2,4]]]]]]]],[[[0,[2,4]]],[[22,[53,[19,[[0,[2,4]]]]]]]],[[[0,[2,4]]],[[22,[54,[19,[[0,[2,4]]]]]]]],[[[0,[2,4]]],[[22,[55,[19,[[0,[2,4]]]]]]]],[[[0,[2,4]]],[[22,[55,[19,[[0,[2,4]]]]]]]],[[[0,[2,4]]],[[22,[56,[19,[[0,[2,4]]]]]]]],[[[0,[2,4]]],[[22,[57,[19,[[0,[2,4]]]]]]]],[[[3,[4,62,[19,[4]]]],[3,[4,[19,[4]]]]],[[3,[4,43,[19,[4]]]]]],[[[3,[[0,[2,4]],62,[19,[[0,[2,4]]]]]]],[[3,[[0,[2,4]],[19,[[0,[2,4]]]]]]]],[[[3,[[0,[2,4,63,8]],62,[19,[[0,[2,4,63,8]]]]]],[3,[[0,[2,4,63,8]],[19,[[0,[2,4,63,8]]]]]]],[[3,[[0,[2,4,63,8]],[19,[[0,[2,4,63,8]]]]]]]],[[]],[[],21],[[],21],[[],64],[58,[[3,[[0,[2,4]],53,[19,[[0,[2,4]]]]]]]],[58,[[3,[[0,[2,4]],54,[19,[[0,[2,4]]]]]]]],[58,[[3,[[0,[2,4]],55,[19,[[0,[2,4]]]]]]]],[58,[[3,[[0,[2,4]],55,[19,[[0,[2,4]]]]]]]],[58,[[3,[[0,[2,4]],56,[19,[[0,[2,4]]]]]]]],[[[0,[2,4]]],[[22,[57,[19,[[0,[2,4]]]]]]]],[[[3,[[0,[19,[65,[[19,[[0,[4,8]]]]]]]]]]],[[3,[[0,[4,8]],[19,[[0,[4,8]]]]]]]],[[],[[22,[59,19]]]],[[[3,[[0,[4,8]],[0,[[19,[[0,[4,8]]]],[65,[19]]]]]]],[[3,[19]]]],[[[0,[[66,[57]],67,[69,[68]],[70,[68]],71]],62],[[3,[[0,[[66,[57]],67,[69,[68]],[70,[68]],71]],19]]]],[62,[[3,[[0,[[66,[57]],67,[69,[68]],[70,[68]]]],19]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[72,[4,[19,[4]]]]],[[3,[4,[19,[4]]]]]],[[[3,[4,[19,[4]]]]],[[3,[4,[19,[4]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],22],[[59,[3,[4,[19,[4]]]]],[[3,[4,73,[19,[4]]]]]],[[[3,[4,[19,[4]]]]],[[3,[4,[19,[4]]]]]],[[[3,[4,[19,[4]]]],[3,[4,[19,[4]]]],[3,[4,[19,[4]]]]],[[3,[4,[19,[4]]]]]],0,[4,[[22,[[19,[4]]]]]],[4,[[22,[[19,[4]]]]]],[[[3,[4,[19,[4]]]],74],[[3,[4,[19,[4]]]]]],[[[75,[[3,[4]],4]]],22],[[[12,[76]],[3,[4,[19,[4]]]],14,14],[[3,[4,[19,[4]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[4,[3,[4,[19,[4]]]]],[[75,[[3,[4,[19,[4]]]],4,[19,[4]]]]]],[[[75,[[3,[4]],4]]],73],[[[3,[4,[19,[4]]]]],[[3,[4,[19,[4]]]]]],[[[3,[4,[19,[4]]]]],[[3,[4,73,[19,[4]]]]]],[[[6,[3]]],22],[[[17,[3,16]]],22],[[[30,[[3,[4,[29,[4]]]],14,4,[29,[4]]]],4],[[22,[[29,[4]]]]]],[[[34,[[3,[4,[19,[4]]]],14,4,[19,[4]]]],4],[[22,[[19,[4]]]]]],[[[5,[[3,[4,2]],[3,[2]],4,2]],4],22],[[[25,[[3,[4,24,[19,[4]]]],4,24,[19,[4]]]],4],[[22,[[19,[4]]]]]],[[[15,[3,14,3]]],22],[[[7,[[3,[4,[19,[4]]]]]],4],[[22,[[19,[4]]]]]],[[[33,[[3,[4,[32,[1]],[19,[4]]]],16,4,[32,[1]],1,[19,[4]]]],4],[[22,[[32,[1]],[19,[4]]]]]],[[[31,[3,8]]],[[22,[8]]]],[[[35,[3]]],22],[[[26,[[3,[4]],4]],4],22],[[[36,[[3,[4]],4]],4],22],[[[28,[[3,[[0,[4,27]]]],[0,[4,27]]]],[0,[4,27]]],[[22,[[77,[68]]]]]],[[[37,[[3,[[0,[4,27]]]],[0,[4,27]]]],[0,[4,27]]],22],[[[18,[[3,[12]],12]]],22],[[[13,[[3,[12]],12]]],22],[[[11,[[3,[4,[10,[4,[0,[8,9]]]]]],4,[10,[4,[0,[8,9]]]],[0,[8,9]]]],4],[[22,[[10,[4,[0,[8,9]]]]]]]],[[[3,[4,[19,[4]]]]],[[3,[4,[19,[4]]]]]],[[[78,[4,[19,[4]]]]],[[3,[4,[19,[4]]]]]],[[],22],[[[3,[4,[19,[4]]]],[3,[4,[19,[4]]]]],[[3,[4,[19,[4]]]]]],[[[12,[76]],[3,[4,[19,[4]]]]],[[3,[4,43,[19,[4]]]]]],[[[3,[4,[19,[4]]]],[3,[4,[19,[4]]]]],[[3,[4,[19,[4]]]]]],[4,[[22,[[19,[4]]]]]],[4,[[22,[68,[19,[4]]]]]],[[[3,[4,[19,[4]]]],[3,[4,[19,[4]]]]],[[3,[4,43,[19,[4]]]]]],[[[3,[4,[19,[4]]]],[3,[4,[19,[4]]]]],[[3,[4,43,[19,[4]]]]]],[[[3,[4,[19,[4]]]],[3,[4,[19,[4]]]],16],[[3,[4,[19,[4]]]]]],[[[3,[4,[19,[4]]]],[3,[4,[19,[4]]]],16],[[3,[4,[19,[4]]]]]],[[[3,[4,[19,[4]]]],[3,[4,[19,[4]]]],[3,[4,[19,[4]]]]],[[3,[4,[19,[4]]]]]],[8,[[3,[4,8,[19,[4]]]]]],[[[3,[4,[19,[4]]]],[3,[4,[19,[4]]]]],[[3,[4,[19,[4]]]]]],[4,22],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],64],[[],64],[[],64],[[],64],[[],64],[[],64],[[],64],[[],64],[[],64],[[],64],[[],64],[[],64],[[],64],[[],64],[[],64],[[],64],[[],64],[[],64],[[],64],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[[79,[10]]],[[79,[10]]]],[80,80],[81],[[[79,[19]],81],[[79,[19]]]],[[[82,[8]],8,81],[[82,[8]]]],[[80,81],80],[[81,81],81],[[9,38]],[[9,38],[[79,[[19,[9]]]]]],[79,79],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[80,[[73,[83]]]],[84,84],[[[79,[8]]],[[79,[8]]]],[[[82,[[0,[8,8]]]]],[[82,[[0,[8,8]]]]]],[85,85],[86,86],[81,81],[[[20,[8,8]]],[[20,[8,8]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[80,87],[[]],[[[79,[65]]],79],[82,[[82,[8]]]],[[[82,[8]]],82],[79,79],[[],80],[81,38],[[84,84],59],[[[79,[71]],[79,[71]]],59],[[[82,[[0,[71,8]]]],[82,[[0,[71,8]]]]],59],[[[80,[71]],[80,[71]]],59],[[85,85],59],[[86,86],59],[[81,81],59],[[[20,[71,71]],[20,[71,71]]],59],[[],59],[[],59],[[],59],[[],59],[[],59],[[],59],[[],59],[[84,60],61],[[[79,[9]],60],61],[[[79,[9]],60],61],[[[82,[[0,[9,8]]]],60],61],[[[82,[[0,[8,88]]]],60],61],[[[80,[85]],60],61],[[[80,[9]],60],61],[[85,60],61],[[86,60],61],[[86,60],61],[[81,60],61],[[81,60],61],[[[20,[44,88]],60],61],[[[20,[9,9]],60],61],[[]],[[]],[[]],[[]],[[]],[38,86],[[]],[42,86],[[]],[[]],[81],[81,[[79,[19]]]],[[8,81],[[82,[8]]]],[81,80],[81,81],[81],[81,[[79,[29]]]],[[8,81],[[82,[8]]]],[[81,[0,[83,89,90]]],80],[81,81],[[81,91]],[20],[20],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[79,73],[20],[[[82,[[0,[8,92,1]]]]],82],[79,59],[84,59],0,[[84,16],84],[[79,93],79],[[[79,[[82,[8]]]],93],[[79,[[82,[8]]]]]],[68,84],[[8,81],[[82,[8]]]],[[],80],[20,68],[[]],[[[79,[19]],[79,[19]]],[[79,[19]]]],[[80,80],80],[94],[94],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],95],[[],95],[[],95],[[],95],[[],95],[[],95],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],64],[[],64],[[],64],[[],64],[[],64],[[],64],[[],64],[[],64],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[],[[74,[57]]]],[96,[[74,[57]]]],[[[97,[44]]],[[74,[57]]]],[[[98,[44]]],[[74,[57]]]],[[[99,[44]]],[[74,[57]]]],[[],[[74,[57]]]],[100,[[74,[57]]]],[[[97,[101]]],[[74,[57]]]],[[[98,[101]]],[[74,[57]]]],[[[99,[101]]],[[74,[57]]]],[[],42],[100,[[74,[57]]]],[96,[[74,[57]]]],[97],[98],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[100],[96],[[[97,[4]]]],[[[98,[4,[0,[8,9]]]]]],[[[99,[4]]]],[[[97,[8]]],[[97,[8]]]],[[[98,[8,8]]],[[98,[8,8]]]],[[[99,[8]]],[[99,[8]]]],[[[102,[8]]],[[102,[8]]]],[[]],[[]],[[]],[[]],[[100,100],103],[[96,96],103],[[[97,[104]],[97,[104]]],103],[[[99,[104]],[99,[104]]],103],[[],105],[100,105],[96,105],[[[97,[39]]],105],[[[98,[39]]],105],[[[99,[39]]],105],[[],105],[100,105],[96,105],[[[97,[39]]],105],[[[98,[39]]],105],[[[99,[39]]],105],[[]],[100],[96],[[[97,[2]]]],[[[98,[2]]]],[[[99,[2]]]],[[],59],[[],100],[[],96],[[],[[97,[106]]]],[[],[[99,[[0,[106,2]]]]]],[100,[[74,[57]]]],[96,[[74,[57]]]],[97],[98],[99],[76,[[107,[68]]]],[[],68],[100,68],[96,68],[[[97,[4]]],68],[[[98,[4,[0,[8,9]]]]],68],[[[99,[4]]],68],[[100,[74,[57]]],59],[[100,38],59],[[100,38],59],[[100,[74,[57]]],59],[[100,100],59],[[96,96],59],[[96,[74,[57]]],59],[[96,[74,[57]]],59],[[96,38],59],[[96,38],59],[[[97,[71]],[97,[71]]],59],[[[98,[71,71]],[98,[71,71]]],59],[[[99,[71]],[99,[71]]],59],[[105,105],59],[[76,76],59],[[],59],[[],59],[[],59],[[],59],[[],59],[[],59],[[],59],[[],[[73,[68]]]],[100,[[73,[68]]]],[96,[[73,[68]]]],[[[97,[108]]],[[73,[68]]]],[[[98,[108]]],[[73,[68]]]],[[[99,[108]]],[[73,[68]]]],[[]],[[100,60],61],[[100,60],61],[[100,60],61],[[100,60],61],[[96,60],61],[[96,60],61],[[[97,[9]],60],61],[[[97,[88]],60],61],[[[98,[88]],60],61],[[[98,[9,9]],60],61],[[[99,[88]],60],61],[[[99,[9]],60],61],[[105,60],61],[[[102,[9]],60],61],[[76,60],61],[[76,60],61],[[]],[[[74,[57]]],100],[38,100],[38,96],[[[74,[57]]],96],[[]],[[]],[[]],[[]],[[]],[109,76],[[[110,[68]]],76],[68,76],[[]],[[[77,[68]]],76],[[[111,[68]]],76],[[[112,[68]]],76],[[[113,[68]]],76],[[100,91]],[[96,91]],[[100,[112,[68]]],100],[[100,[113,[68]]],100],[[100,[111,[68]]],100],[[100,[77,[68]]],100],[[100,109],100],[[100,[110,[68]]],100],[[100,68],57],[[96,[110,[68]]],96],[[96,[111,[68]]],96],[[96,109],96],[[96,[77,[68]]],96],[[96,[112,[68]]],96],[[96,[113,[68]]],96],[[96,68],57],[[[73,[68]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[99,[2]]],2],[[]],[[],59],[[],59],[[],59],[[],59],[[],59],[[],59],[[],59],[[[97,[2]]],59],[[[98,[2]]],59],[[[99,[2]]],59],[[],59],[[],59],[[],59],[[],59],[[],59],[[],59],[[],59],[[]],[100],[96],[[[97,[4]]]],[[[98,[4,[0,[8,9]]]]]],[[[99,[4]]]],[[],68],[[],68],[[[97,[[0,[8,114]]]]],68],[[[98,[27]]],68],[[[99,[27]]],68],[[[0,[1,[115,[[74,[57]]]]]]],100],[[[0,[1,[115,[[74,[57]]]]]]],96],[[[0,[8,114]]],[[97,[[0,[8,114]]]]]],[2,[[99,[2]]]],[[[116,[[0,[4,8]]]]],73],[68],[[100,68]],[[96,68]],[[[97,[4]],68]],[[[98,[4,[0,[8,9]]]],68]],[[[99,[4]],68]],[[],73],[100,73],[96,73],[[[97,[4]]],73],[[[98,[4,[0,[8,9]]]]],73],[[[99,[4]]],73],[68,[[21,[68,84]]]],[[100,68],[[21,[68,84]]]],[[96,68],[[21,[68,84]]]],[[[97,[4]],68],[[21,[68,84]]]],[[[98,[4,[0,[8,9]]]],68],[[21,[68,84]]]],[[[99,[4]],68],[[21,[68,84]]]],[16,[[73,[68]]]],[[100,16],[[73,[68]]]],[[96,16],[[73,[68]]]],[[[97,[4]],16],[[73,[68]]]],[[[98,[4,[0,[8,9]]]],16],[[73,[68]]]],[[[99,[4]],16],[[73,[68]]]],[[],68],[100,68],[[100,100],68],[96,68],[[96,96],68],[[[97,[4]],[97,[4]]],68],[[[97,[4]]],68],[[[98,[4,[0,[8,9]]]],[98,[4,[0,[8,9]]]]],68],[[[98,[4,[0,[8,9]]]]],68],[[[99,[4]],[99,[4]]],68],[[[99,[4]]],68],[[[102,[114]],[102,[114]]],68],[[],73],[[100,100],[[73,[103]]]],[[100,[74,[57]]],[[73,[103]]]],[[100,38],[[73,[103]]]],[[100,[74,[57]]],[[73,[103]]]],[[100,38],[[73,[103]]]],[[96,[74,[57]]],[[73,[103]]]],[[96,38],[[73,[103]]]],[[96,96],[[73,[103]]]],[[96,[74,[57]]],[[73,[103]]]],[[96,38],[[73,[103]]]],[[[97,[117]],[97,[117]]],[[73,[103]]]],[[[99,[117]],[99,[117]]],[[73,[103]]]],[8],[[8,68]],[8,73],[[],9],[100,9],[96,9],[[[97,[4]]],9],[[[98,[4,[0,[8,9]]]]],9],[[[99,[4]]],9],[[]],[100],[96],[[[97,[4]]]],[[[98,[4,[0,[8,9]]]]]],[[[99,[4]]]],[[]],[100],[96],[[[97,[2]]]],[[[98,[2]]]],[[[99,[2]]]],[[],68],[100,68],[96,68],[[[97,[118]]],68],[[[98,[118]]],68],[[[99,[118]]],68],[76,[[107,[68]]]],0,[100],[96],[[]],[[]],[[]],[[]],[[],95],[[],95],[[],95],[[],95],[[],95],[[],95],[[],68],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],64],[[],64],[[],64],[[],64],[[],64],[[],64],[[],64],[[],64],[[],64],[[]],[100,100],[96,96],[[[97,[63]]],[[97,[63]]]],[[[98,[63,[0,[8,9]]]]],[[98,[63,[0,[8,9]]]]]],[[[99,[63]]],[[99,[63]]]],[[[0,[2,4]]],[[22,[[19,[[0,[2,4]]]]]]]],[119,[[3,[[0,[2,4]],[19,[[0,[2,4]]]]]]]],[119,[[3,[[0,[2,4]],[19,[[0,[2,4]]]]]]]],[[[0,[118,8]]],[[3,[[0,[2,4,[39,[[0,[118,8]]]]]],[19,[[0,[2,4,[39,[[0,[118,8]]]]]]]]]]]],[[[0,[118,8]]],[[3,[[0,[2,4,[39,[[0,[118,8]]]]]],[19,[[0,[2,4,[39,[[0,[118,8]]]]]]]]]]]],[62,[[3,[[0,[2,4]],[19,[[0,[2,4]]]]]]]],[119,[[3,[[0,[2,4]],[19,[[0,[2,4]]]]]]]],[119,[[3,[[0,[2,4]],[19,[[0,[2,4]]]]]]]],[[[0,[118,8]]],[[3,[[0,[2,4,[108,[[0,[118,8]]]]]],[19,[[0,[2,4,[108,[[0,[118,8]]]]]]]]]]]],[[[0,[118,8]]],[[3,[[0,[2,4,[108,[[0,[118,8]]]]]],[19,[[0,[2,4,[108,[[0,[118,8]]]]]]]]]]]],[[[12,[76]],119],[[3,[[0,[2,4]],[19,[[0,[2,4]]]]]]]],[[88,[3,[4]]],[[3,[4]]]]],"c":[],"p":[[8,"Sized"],[8,"StreamIsPartial"],[8,"Parser"],[8,"Stream"],[3,"AndThen"],[3,"ByRef"],[3,"CompleteErr"],[8,"Clone"],[8,"Debug"],[8,"AddContext"],[3,"Context"],[8,"Into"],[3,"ErrInto"],[8,"FnMut"],[3,"FlatMap"],[8,"Fn"],[3,"Map"],[3,"OutputInto"],[8,"ParserError"],[3,"ParseError"],[4,"Result"],[6,"PResult"],[6,"IResult"],[8,"ParseSlice"],[3,"ParseTo"],[3,"Recognize"],[8,"Location"],[3,"Span"],[8,"FromExternalError"],[3,"TryMap"],[3,"Value"],[8,"Borrow"],[3,"Verify"],[3,"VerifyMap"],[3,"Void"],[3,"WithRecognized"],[3,"WithSpan"],[15,"str"],[8,"Compare"],[8,"Int"],[8,"Uint"],[15,"char"],[8,"Accumulate"],[8,"AsBStr"],[8,"HexUint"],[15,"f32"],[15,"f64"],[15,"i128"],[15,"i16"],[15,"i32"],[15,"i64"],[15,"i8"],[15,"u128"],[15,"u16"],[15,"u32"],[15,"u64"],[15,"u8"],[4,"Endianness"],[15,"bool"],[3,"Formatter"],[6,"Result"],[8,"ToUsize"],[8,"UpdateSlice"],[3,"TypeId"],[8,"ErrorConvert"],[8,"From"],[8,"AddAssign"],[15,"usize"],[8,"Shl"],[8,"Shr"],[8,"PartialEq"],[8,"Alt"],[4,"Option"],[15,"slice"],[3,"ParserIterator"],[3,"Range"],[3,"Range"],[8,"Permutation"],[4,"ErrMode"],[3,"ContextError"],[4,"ErrorKind"],[3,"InputError"],[8,"Error"],[4,"Needed"],[4,"StrContext"],[4,"StrContextValue"],[8,"Iterator"],[8,"Display"],[8,"Send"],[8,"Sync"],[8,"Hasher"],[8,"ToOwned"],[8,"FnOnce"],[3,"Demand"],[3,"String"],[3,"BStr"],[3,"Located"],[3,"Stateful"],[3,"Partial"],[3,"Bytes"],[8,"AsBytes"],[3,"Checkpoint"],[4,"Ordering"],[8,"Ord"],[4,"CompareResult"],[8,"Default"],[4,"Bound"],[8,"FindSlice"],[3,"RangeFull"],[3,"RangeToInclusive"],[3,"RangeTo"],[3,"RangeInclusive"],[3,"RangeFrom"],[8,"Offset"],[8,"AsRef"],[3,"BitOffsets"],[8,"PartialOrd"],[8,"SliceLen"],[8,"ContainsToken"],[8,"AsChar"]],"a":{"any":[152],"between":[220],"bytes":[931,932],"char":[930],"choice":[177],"concat":[38,39],"consumed":[56,57],"count":[291],"double":[74],"empty":[300],"end":[222],"eoi":[222],"f32":[74],"filter":[50,51],"filter_map":[52,53],"fold_many0":[226],"fold_many1":[226],"fold_many_m_n":[226],"from_str":[35,36],"i128":[68],"i16":[68],"i32":[68],"i64":[68],"i8":[68],"ignore_then":[290],"is_a":[938],"is_not":[935],"just":[154,931,932],"labelled":[18,19],"literal":[154,931,932],"look_ahead":[287],"many0":[291],"many0_count":[291],"many1":[291],"many1_count":[291],"many_m_n":[291],"many_till0":[292],"map_opt":[52,53],"padded":[220],"repeated":[291],"rewind":[287],"satisfy":[50,51,930],"satisfy_map":[52,53],"sep_by":[295],"sep_by1":[296],"separated_list0":[295],"separated_list1":[296],"skip_many":[291],"skip_many1":[291],"take_while0":[938],"take_while1":[938],"then_ignore":[301],"to":[48,49],"token":[928,930],"u128":[69],"u16":[69],"u32":[69],"u64":[69],"u8":[69],"unexpected":[223],"value":[300]}},\
"x11_dl":{"doc":"","t":"","n":["dpms","error","glx","keysym","sync","xcursor","xf86vmode","xfixes","xft","xinerama","xinput","xinput2","xlib","xlib_xcb","xmd","xmu","xpresent","xrandr","xrecord","xrender","xshm","xss","xt","xtest","DPMSCapable","DPMSDisable","DPMSEnable","DPMSExtensionName","DPMSForceLevel","DPMSGetTimeouts","DPMSGetVersion","DPMSInfo","DPMSMajorVersion","DPMSMinorVersion","DPMSModeOff","DPMSModeOn","DPMSModeStandby","DPMSModeSuspend","DPMSQueryExtension","DPMSSetTimeouts","Xext","borrow","borrow_mut","from","into","open","try_from","try_into","type_id","Library","OpenError","OpenErrorKind","Symbol","as_str","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","description","detail","eq","equivalent","fmt","fmt","fmt","from","from","hash","into","into","kind","new","provide","to_owned","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","GLXContext","GLXContextID","GLXDrawable","GLXFBConfig","GLXFBConfigID","GLXPbuffer","GLXPixmap","GLXWindow","GLX_ACCUM_ALPHA_SIZE","GLX_ACCUM_BLUE_SIZE","GLX_ACCUM_BUFFER_BIT","GLX_ACCUM_GREEN_SIZE","GLX_ACCUM_RED_SIZE","GLX_ALPHA_SIZE","GLX_AUX_BUFFERS","GLX_AUX_BUFFERS_BIT","GLX_BACK_LEFT_BUFFER_BIT","GLX_BACK_RIGHT_BUFFER_BIT","GLX_BAD_ATTRIBUTE","GLX_BAD_CONTEXT","GLX_BAD_ENUM","GLX_BAD_SCREEN","GLX_BAD_VALUE","GLX_BAD_VISUAL","GLX_BLUE_SIZE","GLX_BUFFER_SIZE","GLX_COLOR_INDEX_BIT","GLX_COLOR_INDEX_TYPE","GLX_CONFIG_CAVEAT","GLX_DAMAGED","GLX_DEPTH_BUFFER_BIT","GLX_DEPTH_SIZE","GLX_DIRECT_COLOR","GLX_DONT_CARE","GLX_DOUBLEBUFFER","GLX_DRAWABLE_TYPE","GLX_EVENT_MASK","GLX_EXTENSIONS","GLX_FBCONFIG_ID","GLX_FRONT_LEFT_BUFFER_BIT","GLX_FRONT_RIGHT_BUFFER_BIT","GLX_GRAY_SCALE","GLX_GREEN_SIZE","GLX_HEIGHT","GLX_LARGEST_PBUFFER","GLX_LEVEL","GLX_MAX_PBUFFER_HEIGHT","GLX_MAX_PBUFFER_PIXELS","GLX_MAX_PBUFFER_WIDTH","GLX_NONE","GLX_NON_CONFORMANT_CONFIG","GLX_NO_EXTENSION","GLX_PBUFFER","GLX_PBUFFER_BIT","GLX_PBUFFER_CLOBBER_MASK","GLX_PBUFFER_HEIGHT","GLX_PBUFFER_WIDTH","GLX_PIXMAP_BIT","GLX_PRESERVED_CONTENTS","GLX_PSEUDO_COLOR","GLX_RED_SIZE","GLX_RENDER_TYPE","GLX_RGBA","GLX_RGBA_BIT","GLX_RGBA_TYPE","GLX_SAMPLES","GLX_SAMPLE_BUFFERS","GLX_SAVED","GLX_SCREEN","GLX_SLOW_CONFIG","GLX_STATIC_COLOR","GLX_STATIC_GRAY","GLX_STENCIL_BUFFER_BIT","GLX_STENCIL_SIZE","GLX_STEREO","GLX_TRANSPARENT_ALPHA_VALUE","GLX_TRANSPARENT_BLUE_VALUE","GLX_TRANSPARENT_GREEN_VALUE","GLX_TRANSPARENT_INDEX","GLX_TRANSPARENT_INDEX_VALUE","GLX_TRANSPARENT_RED_VALUE","GLX_TRANSPARENT_RGB","GLX_TRANSPARENT_TYPE","GLX_TRUE_COLOR","GLX_USE_GL","GLX_VENDOR","GLX_VERSION","GLX_VISUAL_ID","GLX_WIDTH","GLX_WINDOW","GLX_WINDOW_BIT","GLX_X_RENDERABLE","GLX_X_VISUAL_TYPE","Glx","__GLXFBConfigRec","__GLXcontextRec","arb","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","ext","from","from","from","glXChooseFBConfig","glXChooseVisual","glXCopyContext","glXCreateContext","glXCreateGLXPixmap","glXCreateNewContext","glXCreatePbuffer","glXCreatePixmap","glXCreateWindow","glXDestroyContext","glXDestroyGLXPixmap","glXDestroyPbuffer","glXDestroyPixmap","glXDestroyWindow","glXGetClientString","glXGetConfig","glXGetCurrentContext","glXGetCurrentDisplay","glXGetCurrentDrawable","glXGetCurrentReadDrawable","glXGetFBConfigAttrib","glXGetFBConfigs","glXGetProcAddress","glXGetProcAddressARB","glXGetSelectedEvent","glXGetVisualFromFBConfig","glXIsDirect","glXMakeContextCurrent","glXMakeCurrent","glXQueryContext","glXQueryDrawable","glXQueryExtension","glXQueryExtensionsString","glXQueryServerString","glXQueryVersion","glXSelectEvent","glXSwapBuffers","glXUseXFont","glXWaitGL","glXWaitX","into","into","into","open","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","GLX_CONTEXT_COMPATIBILITY_PROFILE_BIT_ARB","GLX_CONTEXT_CORE_PROFILE_BIT_ARB","GLX_CONTEXT_DEBUG_BIT_ARB","GLX_CONTEXT_FLAGS_ARB","GLX_CONTEXT_FORWARD_COMPATIBLE_BIT_ARB","GLX_CONTEXT_MAJOR_VERSION_ARB","GLX_CONTEXT_MINOR_VERSION_ARB","GLX_CONTEXT_PROFILE_MASK_ARB","GLX_MAX_SWAP_INTERVAL_EXT","GLX_SWAP_INTERVAL_EXT","XF86XK_AddFavorite","XF86XK_ApplicationLeft","XF86XK_ApplicationRight","XF86XK_AudioCycleTrack","XF86XK_AudioForward","XF86XK_AudioLowerVolume","XF86XK_AudioMedia","XF86XK_AudioMicMute","XF86XK_AudioMute","XF86XK_AudioNext","XF86XK_AudioPause","XF86XK_AudioPlay","XF86XK_AudioPrev","XF86XK_AudioRaiseVolume","XF86XK_AudioRandomPlay","XF86XK_AudioRecord","XF86XK_AudioRepeat","XF86XK_AudioRewind","XF86XK_AudioStop","XF86XK_Away","XF86XK_Back","XF86XK_BackForward","XF86XK_Battery","XF86XK_Blue","XF86XK_Bluetooth","XF86XK_Book","XF86XK_BrightnessAdjust","XF86XK_CD","XF86XK_Calculater","XF86XK_Calculator","XF86XK_Calendar","XF86XK_Clear","XF86XK_ClearGrab","XF86XK_Close","XF86XK_Community","XF86XK_ContrastAdjust","XF86XK_Copy","XF86XK_Cut","XF86XK_CycleAngle","XF86XK_DOS","XF86XK_Display","XF86XK_Documents","XF86XK_Eject","XF86XK_Excel","XF86XK_Explorer","XF86XK_Favorites","XF86XK_Finance","XF86XK_Forward","XF86XK_FrameBack","XF86XK_FrameForward","XF86XK_Game","XF86XK_Go","XF86XK_Green","XF86XK_Hibernate","XF86XK_History","XF86XK_HomePage","XF86XK_HotLinks","XF86XK_KbdBrightnessDown","XF86XK_KbdBrightnessUp","XF86XK_KbdLightOnOff","XF86XK_Launch0","XF86XK_Launch1","XF86XK_Launch2","XF86XK_Launch3","XF86XK_Launch4","XF86XK_Launch5","XF86XK_Launch6","XF86XK_Launch7","XF86XK_Launch8","XF86XK_Launch9","XF86XK_LaunchA","XF86XK_LaunchB","XF86XK_LaunchC","XF86XK_LaunchD","XF86XK_LaunchE","XF86XK_LaunchF","XF86XK_LightBulb","XF86XK_LogGrabInfo","XF86XK_LogOff","XF86XK_LogWindowTree","XF86XK_Mail","XF86XK_MailForward","XF86XK_Market","XF86XK_Meeting","XF86XK_Memo","XF86XK_MenuKB","XF86XK_MenuPB","XF86XK_Messenger","XF86XK_ModeLock","XF86XK_MonBrightnessDown","XF86XK_MonBrightnessUp","XF86XK_Music","XF86XK_MyComputer","XF86XK_MySites","XF86XK_New","XF86XK_News","XF86XK_Next_VMode","XF86XK_OfficeHome","XF86XK_Open","XF86XK_OpenURL","XF86XK_Option","XF86XK_Paste","XF86XK_Phone","XF86XK_Pictures","XF86XK_PowerDown","XF86XK_PowerOff","XF86XK_Prev_VMode","XF86XK_Q","XF86XK_Red","XF86XK_Refresh","XF86XK_Reload","XF86XK_Reply","XF86XK_RockerDown","XF86XK_RockerEnter","XF86XK_RockerUp","XF86XK_RotateWindows","XF86XK_RotationKB","XF86XK_RotationPB","XF86XK_Save","XF86XK_ScreenSaver","XF86XK_ScrollClick","XF86XK_ScrollDown","XF86XK_ScrollUp","XF86XK_Search","XF86XK_Select","XF86XK_Send","XF86XK_Shop","XF86XK_Sleep","XF86XK_Spell","XF86XK_SplitScreen","XF86XK_Standby","XF86XK_Start","XF86XK_Stop","XF86XK_Subtitle","XF86XK_Support","XF86XK_Suspend","XF86XK_Switch_VT_1","XF86XK_Switch_VT_10","XF86XK_Switch_VT_11","XF86XK_Switch_VT_12","XF86XK_Switch_VT_2","XF86XK_Switch_VT_3","XF86XK_Switch_VT_4","XF86XK_Switch_VT_5","XF86XK_Switch_VT_6","XF86XK_Switch_VT_7","XF86XK_Switch_VT_8","XF86XK_Switch_VT_9","XF86XK_TaskPane","XF86XK_Terminal","XF86XK_Time","XF86XK_ToDoList","XF86XK_Tools","XF86XK_TopMenu","XF86XK_TouchpadOff","XF86XK_TouchpadOn","XF86XK_TouchpadToggle","XF86XK_Travel","XF86XK_UWB","XF86XK_Ungrab","XF86XK_User1KB","XF86XK_User2KB","XF86XK_UserPB","XF86XK_VendorHome","XF86XK_Video","XF86XK_View","XF86XK_WLAN","XF86XK_WWW","XF86XK_WakeUp","XF86XK_WebCam","XF86XK_WheelButton","XF86XK_Word","XF86XK_Xfer","XF86XK_Yellow","XF86XK_ZoomIn","XF86XK_ZoomOut","XF86XK_iTouch","XK_0","XK_1","XK_2","XK_3","XK_4","XK_5","XK_6","XK_7","XK_8","XK_9","XK_A","XK_AE","XK_Aacute","XK_Abreve","XK_AccessX_Enable","XK_AccessX_Feedback_Enable","XK_Acircumflex","XK_Adiaeresis","XK_Agrave","XK_Alt_L","XK_Alt_R","XK_Amacron","XK_Aogonek","XK_App","XK_Arabic_ain","XK_Arabic_alef","XK_Arabic_alefmaksura","XK_Arabic_beh","XK_Arabic_comma","XK_Arabic_dad","XK_Arabic_dal","XK_Arabic_damma","XK_Arabic_dammatan","XK_Arabic_fatha","XK_Arabic_fathatan","XK_Arabic_feh","XK_Arabic_ghain","XK_Arabic_ha","XK_Arabic_hah","XK_Arabic_hamza","XK_Arabic_hamzaonalef","XK_Arabic_hamzaonwaw","XK_Arabic_hamzaonyeh","XK_Arabic_hamzaunderalef","XK_Arabic_heh","XK_Arabic_jeem","XK_Arabic_kaf","XK_Arabic_kasra","XK_Arabic_kasratan","XK_Arabic_khah","XK_Arabic_lam","XK_Arabic_maddaonalef","XK_Arabic_meem","XK_Arabic_noon","XK_Arabic_qaf","XK_Arabic_question_mark","XK_Arabic_ra","XK_Arabic_sad","XK_Arabic_seen","XK_Arabic_semicolon","XK_Arabic_shadda","XK_Arabic_sheen","XK_Arabic_sukun","XK_Arabic_switch","XK_Arabic_tah","XK_Arabic_tatweel","XK_Arabic_teh","XK_Arabic_tehmarbuta","XK_Arabic_thal","XK_Arabic_theh","XK_Arabic_waw","XK_Arabic_yeh","XK_Arabic_zah","XK_Arabic_zain","XK_Aring","XK_Atilde","XK_AudibleBell_Enable","XK_B","XK_BackSpace","XK_Begin","XK_BounceKeys_Enable","XK_Break","XK_Byelorussian_SHORTU","XK_Byelorussian_shortu","XK_C","XK_CH","XK_C_H","XK_C_h","XK_Cabovedot","XK_Cacute","XK_Cancel","XK_Caps_Lock","XK_Ccaron","XK_Ccedilla","XK_Ccircumflex","XK_Ch","XK_Clear","XK_Control_L","XK_Control_R","XK_Cyrillic_A","XK_Cyrillic_BE","XK_Cyrillic_CHE","XK_Cyrillic_DE","XK_Cyrillic_DZHE","XK_Cyrillic_E","XK_Cyrillic_EF","XK_Cyrillic_EL","XK_Cyrillic_EM","XK_Cyrillic_EN","XK_Cyrillic_ER","XK_Cyrillic_ES","XK_Cyrillic_GHE","XK_Cyrillic_HA","XK_Cyrillic_HARDSIGN","XK_Cyrillic_I","XK_Cyrillic_IE","XK_Cyrillic_IO","XK_Cyrillic_JE","XK_Cyrillic_KA","XK_Cyrillic_LJE","XK_Cyrillic_NJE","XK_Cyrillic_O","XK_Cyrillic_PE","XK_Cyrillic_SHA","XK_Cyrillic_SHCHA","XK_Cyrillic_SHORTI","XK_Cyrillic_SOFTSIGN","XK_Cyrillic_TE","XK_Cyrillic_TSE","XK_Cyrillic_U","XK_Cyrillic_VE","XK_Cyrillic_YA","XK_Cyrillic_YERU","XK_Cyrillic_YU","XK_Cyrillic_ZE","XK_Cyrillic_ZHE","XK_Cyrillic_a","XK_Cyrillic_be","XK_Cyrillic_che","XK_Cyrillic_de","XK_Cyrillic_dzhe","XK_Cyrillic_e","XK_Cyrillic_ef","XK_Cyrillic_el","XK_Cyrillic_em","XK_Cyrillic_en","XK_Cyrillic_er","XK_Cyrillic_es","XK_Cyrillic_ghe","XK_Cyrillic_ha","XK_Cyrillic_hardsign","XK_Cyrillic_i","XK_Cyrillic_ie","XK_Cyrillic_io","XK_Cyrillic_je","XK_Cyrillic_ka","XK_Cyrillic_lje","XK_Cyrillic_nje","XK_Cyrillic_o","XK_Cyrillic_pe","XK_Cyrillic_sha","XK_Cyrillic_shcha","XK_Cyrillic_shorti","XK_Cyrillic_softsign","XK_Cyrillic_te","XK_Cyrillic_tse","XK_Cyrillic_u","XK_Cyrillic_ve","XK_Cyrillic_ya","XK_Cyrillic_yeru","XK_Cyrillic_yu","XK_Cyrillic_ze","XK_Cyrillic_zhe","XK_D","XK_Dcaron","XK_Delete","XK_Down","XK_Dstroke","XK_E","XK_ENG","XK_ETH","XK_Eabovedot","XK_Eacute","XK_Ecaron","XK_Ecircumflex","XK_Ediaeresis","XK_Egrave","XK_Eisu_Shift","XK_Eisu_toggle","XK_Emacron","XK_End","XK_Eogonek","XK_Escape","XK_Eth","XK_Execute","XK_F","XK_F1","XK_F10","XK_F11","XK_F12","XK_F13","XK_F14","XK_F15","XK_F16","XK_F17","XK_F18","XK_F19","XK_F2","XK_F20","XK_F21","XK_F22","XK_F23","XK_F24","XK_F25","XK_F26","XK_F27","XK_F28","XK_F29","XK_F3","XK_F30","XK_F31","XK_F32","XK_F33","XK_F34","XK_F35","XK_F4","XK_F5","XK_F6","XK_F7","XK_F8","XK_F9","XK_Find","XK_First_Virtual_Screen","XK_G","XK_Gabovedot","XK_Gbreve","XK_Gcedilla","XK_Gcircumflex","XK_Greek_ALPHA","XK_Greek_ALPHAaccent","XK_Greek_BETA","XK_Greek_CHI","XK_Greek_DELTA","XK_Greek_EPSILON","XK_Greek_EPSILONaccent","XK_Greek_ETA","XK_Greek_ETAaccent","XK_Greek_GAMMA","XK_Greek_IOTA","XK_Greek_IOTAaccent","XK_Greek_IOTAdiaeresis","XK_Greek_KAPPA","XK_Greek_LAMBDA","XK_Greek_LAMDA","XK_Greek_MU","XK_Greek_NU","XK_Greek_OMEGA","XK_Greek_OMEGAaccent","XK_Greek_OMICRON","XK_Greek_OMICRONaccent","XK_Greek_PHI","XK_Greek_PI","XK_Greek_PSI","XK_Greek_RHO","XK_Greek_SIGMA","XK_Greek_TAU","XK_Greek_THETA","XK_Greek_UPSILON","XK_Greek_UPSILONaccent","XK_Greek_UPSILONdieresis","XK_Greek_XI","XK_Greek_ZETA","XK_Greek_accentdieresis","XK_Greek_alpha","XK_Greek_alphaaccent","XK_Greek_beta","XK_Greek_chi","XK_Greek_delta","XK_Greek_epsilon","XK_Greek_epsilonaccent","XK_Greek_eta","XK_Greek_etaaccent","XK_Greek_finalsmallsigma","XK_Greek_gamma","XK_Greek_horizbar","XK_Greek_iota","XK_Greek_iotaaccent","XK_Greek_iotaaccentdieresis","XK_Greek_iotadieresis","XK_Greek_kappa","XK_Greek_lambda","XK_Greek_lamda","XK_Greek_mu","XK_Greek_nu","XK_Greek_omega","XK_Greek_omegaaccent","XK_Greek_omicron","XK_Greek_omicronaccent","XK_Greek_phi","XK_Greek_pi","XK_Greek_psi","XK_Greek_rho","XK_Greek_sigma","XK_Greek_switch","XK_Greek_tau","XK_Greek_theta","XK_Greek_upsilon","XK_Greek_upsilonaccent","XK_Greek_upsilonaccentdieresis","XK_Greek_upsilondieresis","XK_Greek_xi","XK_Greek_zeta","XK_H","XK_Hankaku","XK_Hcircumflex","XK_Hebrew_switch","XK_Help","XK_Henkan","XK_Henkan_Mode","XK_Hiragana","XK_Hiragana_Katakana","XK_Home","XK_Hstroke","XK_Hyper_L","XK_Hyper_R","XK_I","XK_ISO_Center_Object","XK_ISO_Continuous_Underline","XK_ISO_Discontinuous_Underline","XK_ISO_Emphasize","XK_ISO_Enter","XK_ISO_Fast_Cursor_Down","XK_ISO_Fast_Cursor_Left","XK_ISO_Fast_Cursor_Right","XK_ISO_Fast_Cursor_Up","XK_ISO_First_Group","XK_ISO_First_Group_Lock","XK_ISO_Group_Latch","XK_ISO_Group_Lock","XK_ISO_Group_Shift","XK_ISO_Last_Group","XK_ISO_Last_Group_Lock","XK_ISO_Left_Tab","XK_ISO_Level2_Latch","XK_ISO_Level3_Latch","XK_ISO_Level3_Lock","XK_ISO_Level3_Shift","XK_ISO_Level5_Latch","XK_ISO_Level5_Lock","XK_ISO_Level5_Shift","XK_ISO_Lock","XK_ISO_Move_Line_Down","XK_ISO_Move_Line_Up","XK_ISO_Next_Group","XK_ISO_Next_Group_Lock","XK_ISO_Partial_Line_Down","XK_ISO_Partial_Line_Up","XK_ISO_Partial_Space_Left","XK_ISO_Partial_Space_Right","XK_ISO_Prev_Group","XK_ISO_Prev_Group_Lock","XK_ISO_Release_Both_Margins","XK_ISO_Release_Margin_Left","XK_ISO_Release_Margin_Right","XK_ISO_Set_Margin_Left","XK_ISO_Set_Margin_Right","XK_Iabovedot","XK_Iacute","XK_Icircumflex","XK_Idiaeresis","XK_Igrave","XK_Imacron","XK_Insert","XK_Iogonek","XK_Itilde","XK_J","XK_Jcircumflex","XK_K","XK_KP_0","XK_KP_1","XK_KP_2","XK_KP_3","XK_KP_4","XK_KP_5","XK_KP_6","XK_KP_7","XK_KP_8","XK_KP_9","XK_KP_Add","XK_KP_Begin","XK_KP_Decimal","XK_KP_Delete","XK_KP_Divide","XK_KP_Down","XK_KP_End","XK_KP_Enter","XK_KP_Equal","XK_KP_F1","XK_KP_F2","XK_KP_F3","XK_KP_F4","XK_KP_Home","XK_KP_Insert","XK_KP_Left","XK_KP_Multiply","XK_KP_Next","XK_KP_Page_Down","XK_KP_Page_Up","XK_KP_Prior","XK_KP_Right","XK_KP_Separator","XK_KP_Space","XK_KP_Subtract","XK_KP_Tab","XK_KP_Up","XK_Kana_Lock","XK_Kana_Shift","XK_Kanji","XK_Katakana","XK_Kcedilla","XK_L","XK_L1","XK_L10","XK_L2","XK_L3","XK_L4","XK_L5","XK_L6","XK_L7","XK_L8","XK_L9","XK_Lacute","XK_Last_Virtual_Screen","XK_Lcaron","XK_Lcedilla","XK_Left","XK_Linefeed","XK_Lstroke","XK_M","XK_Macedonia_DSE","XK_Macedonia_GJE","XK_Macedonia_KJE","XK_Macedonia_dse","XK_Macedonia_gje","XK_Macedonia_kje","XK_Massyo","XK_Menu","XK_Meta_L","XK_Meta_R","XK_Mode_switch","XK_MouseKeys_Accel_Enable","XK_MouseKeys_Enable","XK_Muhenkan","XK_Multi_key","XK_N","XK_Nacute","XK_Ncaron","XK_Ncedilla","XK_Next","XK_Next_Virtual_Screen","XK_Ntilde","XK_Num_Lock","XK_O","XK_Oacute","XK_Ocircumflex","XK_Odiaeresis","XK_Odoubleacute","XK_Ograve","XK_Omacron","XK_Ooblique","XK_Otilde","XK_Overlay1_Enable","XK_Overlay2_Enable","XK_P","XK_Page_Down","XK_Page_Up","XK_Pause","XK_Pointer_Accelerate","XK_Pointer_Button1","XK_Pointer_Button2","XK_Pointer_Button3","XK_Pointer_Button4","XK_Pointer_Button5","XK_Pointer_Button_Dflt","XK_Pointer_DblClick1","XK_Pointer_DblClick2","XK_Pointer_DblClick3","XK_Pointer_DblClick4","XK_Pointer_DblClick5","XK_Pointer_DblClick_Dflt","XK_Pointer_DfltBtnNext","XK_Pointer_DfltBtnPrev","XK_Pointer_Down","XK_Pointer_DownLeft","XK_Pointer_DownRight","XK_Pointer_Drag1","XK_Pointer_Drag2","XK_Pointer_Drag3","XK_Pointer_Drag4","XK_Pointer_Drag5","XK_Pointer_Drag_Dflt","XK_Pointer_EnableKeys","XK_Pointer_Left","XK_Pointer_Right","XK_Pointer_Up","XK_Pointer_UpLeft","XK_Pointer_UpRight","XK_Prev_Virtual_Screen","XK_Print","XK_Prior","XK_Q","XK_R","XK_R1","XK_R10","XK_R11","XK_R12","XK_R13","XK_R14","XK_R15","XK_R2","XK_R3","XK_R4","XK_R5","XK_R6","XK_R7","XK_R8","XK_R9","XK_Racute","XK_Rcaron","XK_Rcedilla","XK_Redo","XK_RepeatKeys_Enable","XK_Return","XK_Right","XK_Romaji","XK_S","XK_Sacute","XK_Scaron","XK_Scedilla","XK_Scircumflex","XK_Scroll_Lock","XK_Select","XK_Serbian_DJE","XK_Serbian_DZE","XK_Serbian_JE","XK_Serbian_LJE","XK_Serbian_NJE","XK_Serbian_TSHE","XK_Serbian_dje","XK_Serbian_dze","XK_Serbian_je","XK_Serbian_lje","XK_Serbian_nje","XK_Serbian_tshe","XK_Shift_L","XK_Shift_Lock","XK_Shift_R","XK_SlowKeys_Enable","XK_StickyKeys_Enable","XK_Super_L","XK_Super_R","XK_Sys_Req","XK_T","XK_THORN","XK_Tab","XK_Tcaron","XK_Tcedilla","XK_Terminate_Server","XK_Thorn","XK_Touroku","XK_Tslash","XK_U","XK_Uacute","XK_Ubreve","XK_Ucircumflex","XK_Udiaeresis","XK_Udoubleacute","XK_Ugrave","XK_Ukrainian_I","XK_Ukrainian_IE","XK_Ukrainian_YI","XK_Ukrainian_i","XK_Ukrainian_ie","XK_Ukrainian_yi","XK_Ukranian_I","XK_Ukranian_JE","XK_Ukranian_YI","XK_Ukranian_i","XK_Ukranian_je","XK_Ukranian_yi","XK_Umacron","XK_Undo","XK_Uogonek","XK_Up","XK_Uring","XK_Utilde","XK_V","XK_W","XK_Win_L","XK_Win_R","XK_X","XK_Y","XK_Yacute","XK_Z","XK_Zabovedot","XK_Zacute","XK_Zcaron","XK_Zenkaku","XK_Zenkaku_Hankaku","XK_a","XK_aacute","XK_abovedot","XK_abreve","XK_acircumflex","XK_acute","XK_adiaeresis","XK_ae","XK_agrave","XK_amacron","XK_ampersand","XK_aogonek","XK_apostrophe","XK_approximate","XK_aring","XK_asciicircum","XK_asciitilde","XK_asterisk","XK_at","XK_atilde","XK_b","XK_backslash","XK_ballotcross","XK_bar","XK_blank","XK_botintegral","XK_botleftparens","XK_botleftsqbracket","XK_botleftsummation","XK_botrightparens","XK_botrightsqbracket","XK_botrightsummation","XK_bott","XK_botvertsummationconnector","XK_braceleft","XK_braceright","XK_bracketleft","XK_bracketright","XK_breve","XK_brokenbar","XK_c","XK_c_h","XK_cabovedot","XK_cacute","XK_careof","XK_caret","XK_caron","XK_ccaron","XK_ccedilla","XK_ccircumflex","XK_cedilla","XK_cent","XK_ch","XK_checkerboard","XK_checkmark","XK_circle","XK_club","XK_colon","XK_comma","XK_copyright","XK_cr","XK_crossinglines","XK_currency","XK_cursor","XK_d","XK_dagger","XK_dcaron","XK_dead_A","XK_dead_E","XK_dead_I","XK_dead_O","XK_dead_U","XK_dead_a","XK_dead_abovecomma","XK_dead_abovedot","XK_dead_abovereversedcomma","XK_dead_abovering","XK_dead_aboveverticalline","XK_dead_acute","XK_dead_belowbreve","XK_dead_belowcircumflex","XK_dead_belowcomma","XK_dead_belowdiaeresis","XK_dead_belowdot","XK_dead_belowmacron","XK_dead_belowring","XK_dead_belowtilde","XK_dead_belowverticalline","XK_dead_breve","XK_dead_capital_schwa","XK_dead_caron","XK_dead_cedilla","XK_dead_circumflex","XK_dead_currency","XK_dead_dasia","XK_dead_diaeresis","XK_dead_doubleacute","XK_dead_doublegrave","XK_dead_e","XK_dead_grave","XK_dead_greek","XK_dead_hook","XK_dead_horn","XK_dead_i","XK_dead_invertedbreve","XK_dead_iota","XK_dead_longsolidusoverlay","XK_dead_lowline","XK_dead_macron","XK_dead_o","XK_dead_ogonek","XK_dead_perispomeni","XK_dead_psili","XK_dead_semivoiced_sound","XK_dead_small_schwa","XK_dead_stroke","XK_dead_tilde","XK_dead_u","XK_dead_voiced_sound","XK_decimalpoint","XK_degree","XK_diaeresis","XK_diamond","XK_digitspace","XK_division","XK_dollar","XK_doubbaselinedot","XK_doubleacute","XK_doubledagger","XK_doublelowquotemark","XK_downarrow","XK_downcaret","XK_downshoe","XK_downstile","XK_downtack","XK_dstroke","XK_e","XK_eabovedot","XK_eacute","XK_ecaron","XK_ecircumflex","XK_ediaeresis","XK_egrave","XK_ellipsis","XK_em3space","XK_em4space","XK_emacron","XK_emdash","XK_emfilledcircle","XK_emfilledrect","XK_emopencircle","XK_emopenrectangle","XK_emspace","XK_endash","XK_enfilledcircbullet","XK_enfilledsqbullet","XK_eng","XK_enopencircbullet","XK_enopensquarebullet","XK_enspace","XK_eogonek","XK_equal","XK_eth","XK_exclam","XK_exclamdown","XK_f","XK_femalesymbol","XK_ff","XK_figdash","XK_filledlefttribullet","XK_filledrectbullet","XK_filledrighttribullet","XK_filledtribulletdown","XK_filledtribulletup","XK_fiveeighths","XK_fivesixths","XK_fourfifths","XK_function","XK_g","XK_gabovedot","XK_gbreve","XK_gcedilla","XK_gcircumflex","XK_grave","XK_greater","XK_greaterthanequal","XK_guillemotleft","XK_guillemotright","XK_h","XK_hairspace","XK_hcircumflex","XK_heart","XK_hebrew_aleph","XK_hebrew_ayin","XK_hebrew_bet","XK_hebrew_beth","XK_hebrew_chet","XK_hebrew_dalet","XK_hebrew_daleth","XK_hebrew_doublelowline","XK_hebrew_finalkaph","XK_hebrew_finalmem","XK_hebrew_finalnun","XK_hebrew_finalpe","XK_hebrew_finalzade","XK_hebrew_finalzadi","XK_hebrew_gimel","XK_hebrew_gimmel","XK_hebrew_he","XK_hebrew_het","XK_hebrew_kaph","XK_hebrew_kuf","XK_hebrew_lamed","XK_hebrew_mem","XK_hebrew_nun","XK_hebrew_pe","XK_hebrew_qoph","XK_hebrew_resh","XK_hebrew_samech","XK_hebrew_samekh","XK_hebrew_shin","XK_hebrew_taf","XK_hebrew_taw","XK_hebrew_tet","XK_hebrew_teth","XK_hebrew_waw","XK_hebrew_yod","XK_hebrew_zade","XK_hebrew_zadi","XK_hebrew_zain","XK_hebrew_zayin","XK_hexagram","XK_horizconnector","XK_horizlinescan1","XK_horizlinescan3","XK_horizlinescan5","XK_horizlinescan7","XK_horizlinescan9","XK_hstroke","XK_ht","XK_hyphen","XK_i","XK_iacute","XK_icircumflex","XK_identical","XK_idiaeresis","XK_idotless","XK_ifonlyif","XK_igrave","XK_imacron","XK_implies","XK_includedin","XK_includes","XK_infinity","XK_integral","XK_intersection","XK_iogonek","XK_itilde","XK_j","XK_jcircumflex","XK_jot","XK_k","XK_kana_A","XK_kana_CHI","XK_kana_E","XK_kana_FU","XK_kana_HA","XK_kana_HE","XK_kana_HI","XK_kana_HO","XK_kana_HU","XK_kana_I","XK_kana_KA","XK_kana_KE","XK_kana_KI","XK_kana_KO","XK_kana_KU","XK_kana_MA","XK_kana_ME","XK_kana_MI","XK_kana_MO","XK_kana_MU","XK_kana_N","XK_kana_NA","XK_kana_NE","XK_kana_NI","XK_kana_NO","XK_kana_NU","XK_kana_O","XK_kana_RA","XK_kana_RE","XK_kana_RI","XK_kana_RO","XK_kana_RU","XK_kana_SA","XK_kana_SE","XK_kana_SHI","XK_kana_SO","XK_kana_SU","XK_kana_TA","XK_kana_TE","XK_kana_TI","XK_kana_TO","XK_kana_TSU","XK_kana_TU","XK_kana_U","XK_kana_WA","XK_kana_WO","XK_kana_YA","XK_kana_YO","XK_kana_YU","XK_kana_a","XK_kana_closingbracket","XK_kana_comma","XK_kana_conjunctive","XK_kana_e","XK_kana_fullstop","XK_kana_i","XK_kana_middledot","XK_kana_o","XK_kana_openingbracket","XK_kana_switch","XK_kana_tsu","XK_kana_tu","XK_kana_u","XK_kana_ya","XK_kana_yo","XK_kana_yu","XK_kappa","XK_kcedilla","XK_kra","XK_l","XK_lacute","XK_latincross","XK_lcaron","XK_lcedilla","XK_leftanglebracket","XK_leftarrow","XK_leftcaret","XK_leftdoublequotemark","XK_leftmiddlecurlybrace","XK_leftopentriangle","XK_leftpointer","XK_leftradical","XK_leftshoe","XK_leftsinglequotemark","XK_leftt","XK_lefttack","XK_less","XK_lessthanequal","XK_lf","XK_logicaland","XK_logicalor","XK_lowleftcorner","XK_lowrightcorner","XK_lstroke","XK_m","XK_macron","XK_malesymbol","XK_maltesecross","XK_marker","XK_masculine","XK_minus","XK_minutes","XK_mu","XK_multiply","XK_musicalflat","XK_musicalsharp","XK_n","XK_nabla","XK_nacute","XK_ncaron","XK_ncedilla","XK_nl","XK_nobreakspace","XK_notequal","XK_notsign","XK_ntilde","XK_numbersign","XK_numerosign","XK_o","XK_oacute","XK_ocircumflex","XK_odiaeresis","XK_odoubleacute","XK_ogonek","XK_ograve","XK_omacron","XK_oneeighth","XK_onefifth","XK_onehalf","XK_onequarter","XK_onesixth","XK_onesuperior","XK_onethird","XK_openrectbullet","XK_openstar","XK_opentribulletdown","XK_opentribulletup","XK_ordfeminine","XK_oslash","XK_otilde","XK_overbar","XK_overline","XK_p","XK_paragraph","XK_parenleft","XK_parenright","XK_partialderivative","XK_percent","XK_period","XK_periodcentered","XK_phonographcopyright","XK_plus","XK_plusminus","XK_prescription","XK_prolongedsound","XK_punctspace","XK_q","XK_quad","XK_question","XK_questiondown","XK_quotedbl","XK_quoteleft","XK_quoteright","XK_r","XK_racute","XK_radical","XK_rcaron","XK_rcedilla","XK_registered","XK_rightanglebracket","XK_rightarrow","XK_rightcaret","XK_rightdoublequotemark","XK_rightmiddlecurlybrace","XK_rightmiddlesummation","XK_rightopentriangle","XK_rightpointer","XK_rightshoe","XK_rightsinglequotemark","XK_rightt","XK_righttack","XK_s","XK_sacute","XK_scaron","XK_scedilla","XK_scircumflex","XK_script_switch","XK_seconds","XK_section","XK_semicolon","XK_semivoicedsound","XK_seveneighths","XK_signaturemark","XK_signifblank","XK_similarequal","XK_singlelowquotemark","XK_slash","XK_soliddiamond","XK_space","XK_ssharp","XK_sterling","XK_t","XK_tcaron","XK_tcedilla","XK_telephone","XK_telephonerecorder","XK_therefore","XK_thinspace","XK_thorn","XK_threeeighths","XK_threefifths","XK_threequarters","XK_threesuperior","XK_topintegral","XK_topleftparens","XK_topleftradical","XK_topleftsqbracket","XK_topleftsummation","XK_toprightparens","XK_toprightsqbracket","XK_toprightsummation","XK_topt","XK_topvertsummationconnector","XK_trademark","XK_trademarkincircle","XK_tslash","XK_twofifths","XK_twosuperior","XK_twothirds","XK_u","XK_uacute","XK_ubreve","XK_ucircumflex","XK_udiaeresis","XK_udoubleacute","XK_ugrave","XK_umacron","XK_underbar","XK_underscore","XK_union","XK_uogonek","XK_uparrow","XK_upcaret","XK_upleftcorner","XK_uprightcorner","XK_upshoe","XK_upstile","XK_uptack","XK_uring","XK_utilde","XK_v","XK_variation","XK_vertbar","XK_vertconnector","XK_voicedsound","XK_vt","XK_w","XK_x","XK_y","XK_yacute","XK_ydiaeresis","XK_yen","XK_z","XK_zabovedot","XK_zacute","XK_zcaron","SYNC_MAJOR_VERSION","SYNC_MINOR_VERSION","SYNC_NAME","XSyncAlarm","XSyncAlarmAttributes","XSyncAlarmError","XSyncAlarmNotify","XSyncAlarmNotifyEvent","XSyncAlarmNotifyMask","XSyncAlarmState","XSyncAlarmState_XSyncAlarmActive","XSyncAlarmState_XSyncAlarmDestroyed","XSyncAlarmState_XSyncAlarmInactive","XSyncAwait","XSyncAwaitFence","XSyncBadAlarm","XSyncBadCounter","XSyncBadFence","XSyncCACounter","XSyncCADelta","XSyncCAEvents","XSyncCATestType","XSyncCAValue","XSyncCAValueType","XSyncChangeAlarm","XSyncChangeCounter","XSyncCounter","XSyncCounterError","XSyncCounterNotify","XSyncCounterNotifyEvent","XSyncCreateAlarm","XSyncCreateCounter","XSyncCreateFence","XSyncDestroyAlarm","XSyncDestroyCounter","XSyncDestroyFence","XSyncFence","XSyncFreeSystemCounterList","XSyncGetPriority","XSyncInitialize","XSyncIntToValue","XSyncIntsToValue","XSyncListSystemCounters","XSyncMaxValue","XSyncMinValue","XSyncNumberErrors","XSyncNumberEvents","XSyncQueryAlarm","XSyncQueryCounter","XSyncQueryExtension","XSyncQueryFence","XSyncResetFence","XSyncSetCounter","XSyncSetPriority","XSyncSystemCounter","XSyncTestType","XSyncTestType_XSyncNegativeComparison","XSyncTestType_XSyncNegativeTransition","XSyncTestType_XSyncPositiveComparison","XSyncTestType_XSyncPositiveTransition","XSyncTrigger","XSyncTriggerFence","XSyncValue","XSyncValueAdd","XSyncValueEqual","XSyncValueGreaterOrEqual","XSyncValueGreaterThan","XSyncValueHigh32","XSyncValueIsNegative","XSyncValueIsPositive","XSyncValueIsZero","XSyncValueLessOrEqual","XSyncValueLessThan","XSyncValueLow32","XSyncValueSubtract","XSyncValueType","XSyncValueType_XSyncAbsolute","XSyncValueType_XSyncRelative","XSyncWaitCondition","Xext","alarm","alarm","alarm_value","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","count","counter","counter","counter","counter","counter_value","counter_value","delta","destroyed","display","display","display","display","error_code","error_code","event_threshold","events","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","hi","into","into","into","into","into","into","into","into","into","into","lo","minor_code","minor_code","name","open","request_code","request_code","resolution","send_event","send_event","serial","serial","serial","serial","state","state","test_type","time","time","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","trigger","trigger","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_","type_","type_","type_","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value_type","wait_value","wait_value","Xcursor","XcursorAnimate","XcursorAnimateCreate","XcursorAnimateDestroy","XcursorAnimateNext","XcursorBool","XcursorChunkHeader","XcursorComment","XcursorCommentCreate","XcursorCommentDestroy","XcursorComments","XcursorCommentsCreate","XcursorCommentsDestroy","XcursorCursors","XcursorCursorsCreate","XcursorCursorsDestroy","XcursorDim","XcursorFile","XcursorFileHeader","XcursorFileLoad","XcursorFileLoadAllImages","XcursorFileLoadImage","XcursorFileLoadImages","XcursorFileSave","XcursorFileSaveImages","XcursorFileToc","XcursorFilenameLoad","XcursorFilenameLoadAllImages","XcursorFilenameLoadCursor","XcursorFilenameLoadCursors","XcursorFilenameLoadImage","XcursorFilenameLoadImages","XcursorFilenameSave","XcursorFilenameSaveImages","XcursorGetDefaultSize","XcursorGetTheme","XcursorGetThemeCore","XcursorImage","XcursorImageCreate","XcursorImageDestroy","XcursorImageHash","XcursorImageLoadCursor","XcursorImages","XcursorImagesCreate","XcursorImagesDestroy","XcursorImagesLoadCursor","XcursorImagesLoadCursors","XcursorImagesSetName","XcursorLibraryLoadCursor","XcursorLibraryLoadCursors","XcursorLibraryLoadImage","XcursorLibraryLoadImages","XcursorLibraryPath","XcursorLibraryShape","XcursorNoticeCreateBitmap","XcursorNoticePutBitmap","XcursorPixel","XcursorSetDefaultSize","XcursorSetTheme","XcursorSetThemeCore","XcursorShapeLoadCursor","XcursorShapeLoadCursors","XcursorShapeLoadImage","XcursorShapeLoadImages","XcursorSupportsARGB","XcursorSupportsAnim","XcursorTryShapeBitmapCursor","XcursorTryShapeCursor","XcursorUInt","XcursorXcFileLoad","XcursorXcFileLoadAllImages","XcursorXcFileLoadImage","XcursorXcFileLoadImages","XcursorXcFileSave","_XcursorAnimate","_XcursorChunkHeader","_XcursorComment","_XcursorComments","_XcursorCursors","_XcursorFile","_XcursorFileHeader","_XcursorFileToc","_XcursorImage","_XcursorImages","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","closure","comment","comment_type","comments","cursors","cursors","delay","dpy","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","header","header","height","images","into","into","into","into","into","into","into","into","into","into","into","magic","name","ncomment","ncursor","nimage","ntoc","open","pixels","position","read","ref_","seek","sequence","size","subtype","subtype","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","tocs","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_","type_","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","version","version","version","version","width","write","xhot","yhot","EMPTY","XF86VidModeAddModeLine","XF86VidModeDeleteModeLine","XF86VidModeGamma","XF86VidModeGetAllModeLines","XF86VidModeGetDotClocks","XF86VidModeGetGamma","XF86VidModeGetGammaRamp","XF86VidModeGetGammaRampSize","XF86VidModeGetModeLine","XF86VidModeGetMonitor","XF86VidModeGetPermissions","XF86VidModeGetViewPort","XF86VidModeLockModeSwitch","XF86VidModeModModeLine","XF86VidModeModeInfo","XF86VidModeModeLine","XF86VidModeMonitor","XF86VidModeNotifyEvent","XF86VidModeQueryExtension","XF86VidModeQueryVersion","XF86VidModeSetClientVersion","XF86VidModeSetGamma","XF86VidModeSetGammaRamp","XF86VidModeSetViewPort","XF86VidModeSwitchMode","XF86VidModeSwitchToMode","XF86VidModeSyncRange","XF86VidModeValidateModeLine","Xf86vmode","blue","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","display","dotclock","eq","flags","flags","fmt","fmt","fmt","fmt","fmt","fmt","forced","from","from","from","from","from","from","from","from","from","green","hdisplay","hdisplay","hi","hskew","hskew","hsync","hsyncend","hsyncend","hsyncstart","hsyncstart","htotal","htotal","into","into","into","into","into","into","into","kind","lo","model","nhsync","nvsync","open","private","private","privsize","privsize","red","root","send_event","serial","state","time","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vdisplay","vdisplay","vendor","vsync","vsyncend","vsyncend","vsyncstart","vsyncstart","vtotal","vtotal","PointerBarrier","XFixesChangeCursor","XFixesChangeCursorByName","XFixesChangeSaveSet","XFixesCopyRegion","XFixesCreatePointerBarrier","XFixesCreateRegion","XFixesCreateRegionFromBitmap","XFixesCreateRegionFromGC","XFixesCreateRegionFromPicture","XFixesCreateRegionFromWindow","XFixesCursorImage","XFixesCursorNotifyEvent","XFixesDestroyPointerBarrier","XFixesDestroyRegion","XFixesExpandRegion","XFixesFetchRegion","XFixesFetchRegionAndBounds","XFixesGetCursorImage","XFixesGetCursorName","XFixesHideCursor","XFixesIntersectRegion","XFixesInvertRegion","XFixesQueryExtension","XFixesQueryVersion","XFixesRegionExtents","XFixesSelectCursorInput","XFixesSelectSelectionInput","XFixesSelectionNotifyEvent","XFixesSetCursorName","XFixesSetGCClipRegion","XFixesSetPictureClipRegion","XFixesSetRegion","XFixesSetWindowShapeRegion","XFixesShowCursor","XFixesSubtractRegion","XFixesTranslateRegion","XFixesUnionRegion","XFixesVersion","Xlib","XserverRegion","_type","_type","atom","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cursor_name","cursor_serial","cursor_serial","display","display","eq","eq","eq","fmt","fmt","fmt","from","from","from","from","height","into","into","into","into","name","open","owner","pixels","selection","selection_timestamp","send_event","send_event","serial","serial","subtype","subtype","timestamp","timestamp","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","width","window","window","x","xhot","y","yhot","Big","FT_FaceRec","FT_UInt","FcChar32","FcCharSet","FcEndian","FcPattern","FcResult","Little","Match","NoId","NoMatch","OutOfMemory","TypeMismatch","XFT_ANTIALIAS","XFT_FAMILY","XFT_FOUNDRY","XFT_PIXEL_SIZE","XFT_SIZE","XFT_SLANT","XFT_SLANT_ITALIC","XFT_SLANT_OBLIQUE","XFT_SLANT_ROMAN","XFT_SPACING","XFT_STYLE","XFT_WEIGHT","Xft","XftCharExists","XftCharFontSpec","XftCharFontSpecRender","XftCharIndex","XftCharSpec","XftCharSpecRender","XftColor","XftColorAllocName","XftColorAllocValue","XftColorFree","XftDefaultHasRender","XftDefaultSet","XftDefaultSubstitute","XftDraw","XftDrawChange","XftDrawCharFontSpec","XftDrawCharSpec","XftDrawColormap","XftDrawCreate","XftDrawCreateAlpha","XftDrawCreateBitmap","XftDrawDestroy","XftDrawDisplay","XftDrawDrawable","XftDrawGlyphFontSpec","XftDrawGlyphSpec","XftDrawGlyphs","XftDrawPicture","XftDrawRect","XftDrawSetClip","XftDrawSetClipRectangles","XftDrawSetSubwindowMode","XftDrawSrcPicture","XftDrawString16","XftDrawString32","XftDrawString8","XftDrawStringUtf16","XftDrawStringUtf8","XftDrawVisual","XftFont","XftFontCheckGlyph","XftFontClose","XftFontCopy","XftFontInfo","XftFontInfoCreate","XftFontInfoDestroy","XftFontInfoEqual","XftFontInfoHash","XftFontLoadGlyphs","XftFontMatch","XftFontOpen","XftFontOpenInfo","XftFontOpenName","XftFontOpenPattern","XftFontOpenXlfd","XftFontSet","XftFontUnloadGlyphs","XftGetVersion","XftGlyphExtents","XftGlyphFontSpec","XftGlyphFontSpecRender","XftGlyphRender","XftGlyphSpec","XftGlyphSpecRender","XftInit","XftInitFtLibrary","XftListFonts","XftLockFace","XftNameParse","XftNameUnparse","XftPattern","XftTextExtents16","XftTextExtents32","XftTextExtents8","XftTextExtentsUtf16","XftTextExtentsUtf8","XftTextRender16","XftTextRender16BE","XftTextRender16LE","XftTextRender32","XftTextRender32BE","XftTextRender32LE","XftTextRender8","XftTextRenderUtf16","XftTextRenderUtf8","XftTypeBool","XftTypeDouble","XftTypeInteger","XftTypeMatrix","XftTypeString","XftTypeVoid","XftUnlockFace","XftXlfdParse","ascent","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","charset","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","color","descent","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","font","font","fonts","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","glyph","glyph","height","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","max_advance_width","nfont","open","pattern","pixel","sfont","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","ucs4","ucs4","x","x","x","x","y","y","y","y","ScreenCount","State","XPanoramiXAllocInfo","XPanoramiXGetScreenCount","XPanoramiXGetScreenSize","XPanoramiXGetState","XPanoramiXInfo","XPanoramiXQueryExtension","XPanoramiXQueryVersion","XineramaIsActive","XineramaQueryExtension","XineramaQueryScreens","XineramaQueryVersion","XineramaScreenInfo","Xlib","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","eq","eq","eventMask","fmt","fmt","from","from","from","height","height","into","into","into","open","screen","screen_number","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","width","width","window","x_org","y_org","XAllowDeviceEvents","XAnyClassPtr","XChangeDeviceControl","XChangeDeviceDontPropagateList","XChangeDeviceKeyMapping","XChangeDeviceProperty","XChangeFeedbackControl","XChangeKeyboardDevice","XChangePointerDevice","XCloseDevice","XDeleteDeviceProperty","XDevice","XDeviceBell","XDeviceControl","XDeviceInfo","XDeviceState","XDeviceTimeCoord","XExtensionVersion","XFeedbackControl","XFeedbackState","XFreeDeviceControl","XFreeDeviceList","XFreeDeviceMotionEvents","XFreeDeviceState","XFreeFeedbackList","XGetDeviceButtonMapping","XGetDeviceControl","XGetDeviceDontPropagateList","XGetDeviceFocus","XGetDeviceKeyMapping","XGetDeviceModifierMapping","XGetDeviceMotionEvents","XGetDeviceProperty","XGetExtensionVersion","XGetFeedbackControl","XGetSelectedExtensionEvents","XGrabDevice","XGrabDeviceButton","XGrabDeviceKey","XInput","XInputClass","XInputClassInfo","XListDeviceProperties","XListInputDevices","XOpenDevice","XQueryDeviceState","XSelectExtensionEvent","XSendExtensionEvent","XSetDeviceButtonMapping","XSetDeviceFocus","XSetDeviceMode","XSetDeviceModifierMapping","XSetDeviceValuators","XUngrabDevice","XUngrabDeviceButton","XUngrabDeviceKey","_XAnyClassinfo","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","class","class","class","classes","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","control","data","data","device_id","device_id","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","event_type_base","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","id","id","id","input_class","inputclassinfo","into","into","into","into","into","into","into","into","into","into","into","into","length","length","length","length","major_version","minor_version","name","num_classes","num_classes","num_classes","open","present","time","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","use_","BarrierEventID","XIAcceptTouch","XIAddMaster","XIAddMasterInfo","XIAllDevices","XIAllMasterDevices","XIAllowEvents","XIAllowTouchEvents","XIAlreadyGrabbed","XIAnyButton","XIAnyClassInfo","XIAnyHierarchyChangeInfo","XIAnyKeycode","XIAsyncDevice","XIAsyncPair","XIAsyncPairedDevice","XIAttachSlave","XIAttachSlaveInfo","XIAttachToMaster","XIBarrierDeviceIsGrabbed","XIBarrierEvent","XIBarrierPointerReleased","XIBarrierReleasePointer","XIBarrierReleasePointerInfo","XIBarrierReleasePointers","XIButtonClass","XIButtonClassInfo","XIButtonState","XIChangeHierarchy","XIChangeProperty","XIClearMask","XIDefineCursor","XIDeleteProperty","XIDependentTouch","XIDetachSlave","XIDetachSlaveInfo","XIDeviceChange","XIDeviceChangedEvent","XIDeviceDisabled","XIDeviceEnabled","XIDeviceEvent","XIDeviceInfo","XIDirectTouch","XIEnterEvent","XIEvent","XIEventMask","XIFloating","XIFloatingSlave","XIFocusInEvent","XIFocusOutEvent","XIFreeDeviceInfo","XIGetClientPointer","XIGetFocus","XIGetProperty","XIGetSelectedEvents","XIGrabButton","XIGrabDevice","XIGrabEnter","XIGrabFocusIn","XIGrabFrozen","XIGrabInvalidTime","XIGrabKeycode","XIGrabModeAsync","XIGrabModeSync","XIGrabModeTouch","XIGrabModifiers","XIGrabNotViewable","XIGrabSuccess","XIGrabTouchBegin","XIGrabtypeButton","XIGrabtypeEnter","XIGrabtypeFocusIn","XIGrabtypeKeycode","XIGrabtypeTouchBegin","XIGroupState","XIHierarchyEvent","XIHierarchyInfo","XIKeyClass","XIKeyClassInfo","XIKeyRepeat","XILeaveEvent","XIListProperties","XIMaskIsSet","XIMasterAdded","XIMasterKeyboard","XIMasterPointer","XIMasterRemoved","XIModeAbsolute","XIModeRelative","XIModifierState","XINotifyAncestor","XINotifyDetailNone","XINotifyGrab","XINotifyInferior","XINotifyNonlinear","XINotifyNonlinearVirtual","XINotifyNormal","XINotifyPassiveGrab","XINotifyPassiveUngrab","XINotifyPointer","XINotifyPointerRoot","XINotifyUngrab","XINotifyVirtual","XINotifyWhileGrabbed","XIPointerEmulated","XIPropModeAppend","XIPropModePrepend","XIPropModeReplace","XIPropertyCreated","XIPropertyDeleted","XIPropertyEvent","XIPropertyModified","XIQueryDevice","XIQueryPointer","XIQueryVersion","XIRawEvent","XIRejectTouch","XIRemoveMaster","XIRemoveMasterInfo","XIReplayDevice","XIScrollClass","XIScrollClassInfo","XIScrollFlagNoEmulation","XIScrollFlagPreferred","XIScrollTypeHorizontal","XIScrollTypeVertical","XISelectEvents","XISetClientPointer","XISetFocus","XISetMask","XISlaveAdded","XISlaveAttached","XISlaveDetached","XISlaveKeyboard","XISlavePointer","XISlaveRemoved","XISlaveSwitch","XISyncDevice","XISyncPair","XITouchClass","XITouchClassInfo","XITouchEmulatingPointer","XITouchOwnershipEvent","XITouchPendingEnd","XIUndefineCursor","XIUngrabButton","XIUngrabDevice","XIUngrabEnter","XIUngrabFocusIn","XIUngrabKeycode","XIUngrabTouchBegin","XIValuatorClass","XIValuatorClassInfo","XIValuatorState","XIWarpPointer","XI_2_Major","XI_2_Minor","XI_BarrierHit","XI_BarrierHitMask","XI_BarrierLeave","XI_BarrierLeaveMask","XI_ButtonPress","XI_ButtonPressMask","XI_ButtonRelease","XI_ButtonReleaseMask","XI_DeviceChanged","XI_DeviceChangedMask","XI_Enter","XI_EnterMask","XI_FocusIn","XI_FocusInMask","XI_FocusOut","XI_FocusOutMask","XI_HierarchyChanged","XI_HierarchyChangedMask","XI_KeyPress","XI_KeyPressMask","XI_KeyRelease","XI_KeyReleaseMask","XI_LASTEVENT","XI_Leave","XI_LeaveMask","XI_Motion","XI_MotionMask","XI_PropertyEvent","XI_PropertyEventMask","XI_RawButtonPress","XI_RawButtonPressMask","XI_RawButtonRelease","XI_RawButtonReleaseMask","XI_RawKeyPress","XI_RawKeyPressMask","XI_RawKeyRelease","XI_RawKeyReleaseMask","XI_RawMotion","XI_RawMotionMask","XI_RawTouchBegin","XI_RawTouchBeginMask","XI_RawTouchEnd","XI_RawTouchEndMask","XI_RawTouchUpdate","XI_RawTouchUpdateMask","XI_TouchBegin","XI_TouchBeginMask","XI_TouchEnd","XI_TouchEndMask","XI_TouchOwnership","XI_TouchOwnershipChangedMask","XI_TouchUpdate","XI_TouchUpdateMask","XInput2","XInput_2_0","_bindgen_data_","_type","_type","_type","_type","_type","_type","_type","_type","_type","_type","_type","_type","_type","_type","_type","_type","_type","_type","_type","_type","_use","_use","add","attach","attachment","attachment","barrier","barrier","base","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buttons","buttons","child","child","child","classes","classes","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","detach","detail","detail","detail","deviceid","deviceid","deviceid","deviceid","deviceid","deviceid","deviceid","deviceid","deviceid","deviceid","deviceid","deviceid","deviceid","deviceid","display","display","display","display","display","display","display","display","display","dtime","dx","dy","effective","enable","enabled","enabled","event","event","event","event","event_x","event_x","event_y","event_y","eventid","eventid","evtype","evtype","evtype","evtype","evtype","evtype","evtype","evtype","evtype","extension","extension","extension","extension","extension","extension","extension","extension","extension","flags","flags","flags","flags","flags","flags","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","focus","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","group","group","increment","info","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","keycodes","label","labels","latched","locked","mask","mask","mask","mask_len","mask_len","mask_len","max","min","mode","mode","mode","modifiers","mods","mods","name","name","new_master","num_buttons","num_classes","num_classes","num_info","num_keycodes","num_touches","number","number","open","property","raw_values","reason","remove","resolution","return_keyboard","return_mode","return_pointer","root","root","root","root","root_x","root_x","root_x","root_y","root_y","root_y","same_screen","scroll_type","send_core","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","serial","serial","serial","serial","serial","serial","serial","serial","serial","sourceid","sourceid","sourceid","sourceid","sourceid","sourceid","sourceid","sourceid","sourceid","sourceid","sourceid","sourceid","state","status","time","time","time","time","time","time","time","time","time","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","touchid","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","valuators","valuators","value","values","what","Above","AllHints","AllTemporary","AllValues","AllocAll","AllocNone","AllowExposures","AlreadyGrabbed","Always","AnyButton","AnyKey","AnyModifier","AnyPropertyType","ArcChord","ArcPieSlice","AspectRatio","AsyncBoth","AsyncKeyboard","AsyncPointer","Atom","AutoRepeatModeDefault","AutoRepeatModeOff","AutoRepeatModeOn","BadAccess","BadAlloc","BadAtom","BadColor","BadCursor","BadDrawable","BadFont","BadGC","BadIDChoice","BadImplementation","BadLength","BadMatch","BadName","BadPixmap","BadRequest","BadValue","BadWindow","Below","Bool","BottomIf","Button1","Button1Mask","Button1MotionMask","Button2","Button2Mask","Button2MotionMask","Button3","Button3Mask","Button3MotionMask","Button4","Button4Mask","Button4MotionMask","Button5","Button5Mask","Button5MotionMask","ButtonMotionMask","ButtonPress","ButtonPressMask","ButtonRelease","ButtonReleaseMask","CWBackPixel","CWBackPixmap","CWBackingPixel","CWBackingPlanes","CWBackingStore","CWBitGravity","CWBorderPixel","CWBorderPixmap","CWBorderWidth","CWColormap","CWCursor","CWDontPropagate","CWEventMask","CWHeight","CWOverrideRedirect","CWSaveUnder","CWSibling","CWStackMode","CWWidth","CWWinGravity","CWX","CWY","CapButt","CapNotLast","CapProjecting","CapRound","CenterGravity","CirculateNotify","CirculateRequest","ClientMessage","ClientMessageData","ClipByChildren","Colormap","ColormapChangeMask","ColormapInstalled","ColormapNotify","ColormapUninstalled","Complex","ConfigureNotify","ConfigureRequest","ControlMapIndex","ControlMask","Convex","CoordModeOrigin","CoordModePrevious","CopyFromParent","CreateNotify","CurrentTime","Cursor","CursorShape","DefaultBlanking","DefaultExposures","Depth","DestroyAll","DestroyNotify","DirectColor","DisableAccess","DisableScreenInterval","DisableScreenSaver","Display","DoBlue","DoGreen","DoRed","DontAllowExposures","DontPreferBlanking","Drawable","EastGravity","EnableAccess","EnterNotify","EnterWindowMask","EvenOddRule","Expose","ExposureMask","False","FamilyChaos","FamilyDECnet","FamilyInternet","FamilyInternet6","FamilyServerInterpreted","FillOpaqueStippled","FillSolid","FillStippled","FillTiled","FirstExtensionError","FocusChangeMask","FocusIn","FocusOut","Font","FontChange","FontLeftToRight","FontRightToLeft","ForgetGravity","GC","GCArcMode","GCBackground","GCCapStyle","GCClipMask","GCClipXOrigin","GCClipYOrigin","GCDashList","GCDashOffset","GCFillRule","GCFillStyle","GCFont","GCForeground","GCFunction","GCGraphicsExposures","GCJoinStyle","GCLastBit","GCLineStyle","GCLineWidth","GCPlaneMask","GCStipple","GCSubwindowMode","GCTile","GCTileStipXOrigin","GCTileStipYOrigin","GContext","GXand","GXandInverted","GXandReverse","GXclear","GXcopy","GXcopyInverted","GXequiv","GXinvert","GXnand","GXnoop","GXnor","GXor","GXorInverted","GXorReverse","GXset","GXxor","GenericEvent","GrabFrozen","GrabInvalidTime","GrabModeAsync","GrabModeSync","GrabNotViewable","GrabSuccess","GraphicsExpose","GravityNotify","GrayScale","HeightValue","HostDelete","HostInsert","IconMaskHint","IconPixmapHint","IconPositionHint","IconWindowHint","ImageFns","IncludeInferiors","InputFocus","InputHint","InputOnly","InputOutput","IsUnmapped","IsUnviewable","IsViewable","JoinBevel","JoinMiter","JoinRound","KBAutoRepeatMode","KBBellDuration","KBBellPercent","KBBellPitch","KBKey","KBKeyClickPercent","KBLed","KBLedMode","KeyCode","KeyPress","KeyPressMask","KeyRelease","KeyReleaseMask","KeySym","KeymapNotify","KeymapStateMask","LASTEvent","LSBFirst","LastExtensionError","LeaveNotify","LeaveWindowMask","LedModeOff","LedModeOn","LineDoubleDash","LineOnOffDash","LineSolid","LockMapIndex","LockMask","LowerHighest","MSBFirst","MapNotify","MapRequest","MappingBusy","MappingFailed","MappingKeyboard","MappingModifier","MappingNotify","MappingPointer","MappingSuccess","Mask","Mod1MapIndex","Mod1Mask","Mod2MapIndex","Mod2Mask","Mod3MapIndex","Mod3Mask","Mod4MapIndex","Mod4Mask","Mod5MapIndex","Mod5Mask","MotionNotify","NoEventMask","NoExpose","NoSymbol","NoValue","Nonconvex","NorthEastGravity","NorthGravity","NorthWestGravity","NotUseful","NotifyAncestor","NotifyDetailNone","NotifyGrab","NotifyHint","NotifyInferior","NotifyNonlinear","NotifyNonlinearVirtual","NotifyNormal","NotifyPointer","NotifyPointerRoot","NotifyUngrab","NotifyVirtual","NotifyWhileGrabbed","Opposite","OwnerGrabButtonMask","PAllHints","PAspect","PBaseSize","PMaxSize","PMinSize","PPosition","PResizeInc","PSize","PWinGravity","ParentRelative","Pixmap","PlaceOnBottom","PlaceOnTop","PointerMotionHintMask","PointerMotionMask","PointerRoot","PointerWindow","PreferBlanking","PropModeAppend","PropModePrepend","PropModeReplace","PropertyChangeMask","PropertyDelete","PropertyNewValue","PropertyNotify","PseudoColor","RaiseLowest","Region","ReparentNotify","ReplayKeyboard","ReplayPointer","ResizeRedirectMask","ResizeRequest","RetainPermanent","RetainTemporary","RevertToNone","RevertToParent","RevertToPointerRoot","Screen","ScreenFormat","ScreenSaverActive","ScreenSaverReset","SelectionClear","SelectionNotify","SelectionRequest","SetModeDelete","SetModeInsert","ShiftMapIndex","ShiftMask","SouthEastGravity","SouthGravity","SouthWestGravity","StateHint","StaticColor","StaticGravity","StaticGray","Status","StippleShape","StructureNotifyMask","SubstructureNotifyMask","SubstructureRedirectMask","Success","SyncBoth","SyncKeyboard","SyncPointer","TileShape","Time","TopIf","True","TrueColor","USPosition","USSize","UnmapGravity","UnmapNotify","Unsorted","VisibilityChangeMask","VisibilityFullyObscured","VisibilityNotify","VisibilityPartiallyObscured","VisibilityUnobscured","Visual","VisualAllMask","VisualBitsPerRGBMask","VisualBlueMaskMask","VisualClassMask","VisualColormapSizeMask","VisualDepthMask","VisualGreenMaskMask","VisualID","VisualIDMask","VisualNoMask","VisualRedMaskMask","VisualScreenMask","WestGravity","WhenMapped","WidthValue","WindingRule","Window","WindowGroupHint","XA_ARC","XA_ATOM","XA_BITMAP","XA_CAP_HEIGHT","XA_CARDINAL","XA_COLORMAP","XA_COPYRIGHT","XA_CURSOR","XA_CUT_BUFFER0","XA_CUT_BUFFER1","XA_CUT_BUFFER2","XA_CUT_BUFFER3","XA_CUT_BUFFER4","XA_CUT_BUFFER5","XA_CUT_BUFFER6","XA_CUT_BUFFER7","XA_DRAWABLE","XA_END_SPACE","XA_FAMILY_NAME","XA_FONT","XA_FONT_NAME","XA_FULL_NAME","XA_INTEGER","XA_ITALIC_ANGLE","XA_MAX_SPACE","XA_MIN_SPACE","XA_NORM_SPACE","XA_NOTICE","XA_PIXMAP","XA_POINT","XA_POINT_SIZE","XA_PRIMARY","XA_QUAD_WIDTH","XA_RECTANGLE","XA_RESOLUTION","XA_RESOURCE_MANAGER","XA_RGB_BEST_MAP","XA_RGB_BLUE_MAP","XA_RGB_COLOR_MAP","XA_RGB_DEFAULT_MAP","XA_RGB_GRAY_MAP","XA_RGB_GREEN_MAP","XA_RGB_RED_MAP","XA_SECONDARY","XA_STRIKEOUT_ASCENT","XA_STRIKEOUT_DESCENT","XA_STRING","XA_SUBSCRIPT_X","XA_SUBSCRIPT_Y","XA_SUPERSCRIPT_X","XA_SUPERSCRIPT_Y","XA_UNDERLINE_POSITION","XA_UNDERLINE_THICKNESS","XA_VISUALID","XA_WEIGHT","XA_WINDOW","XA_WM_CLASS","XA_WM_CLIENT_MACHINE","XA_WM_COMMAND","XA_WM_HINTS","XA_WM_ICON_NAME","XA_WM_ICON_SIZE","XA_WM_NAME","XA_WM_NORMAL_HINTS","XA_WM_SIZE_HINTS","XA_WM_TRANSIENT_FOR","XA_WM_ZOOM_HINTS","XA_X_HEIGHT","XActivateScreenSaver","XAddConnectionWatch","XAddExtension","XAddHost","XAddHosts","XAddPixel","XAddToExtensionList","XAddToSaveSet","XAllPlanes","XAllocClassHint","XAllocColor","XAllocColorCells","XAllocColorPlanes","XAllocIconSize","XAllocNamedColor","XAllocSizeHints","XAllocStandardColormap","XAllocWMHints","XAllowEvents","XAnyEvent","XArc","XAutoRepeatOff","XAutoRepeatOn","XBaseFontNameListOfFontSet","XBell","XBitmapBitOrder","XBitmapPad","XBitmapUnit","XBlackPixel","XBlackPixelOfScreen","XBufferOverflow","XButtonEvent","XButtonPressedEvent","XButtonReleasedEvent","XCellsOfScreen","XChangeActivePointerGrab","XChangeGC","XChangeKeyboardControl","XChangeKeyboardMapping","XChangePointerControl","XChangeProperty","XChangeSaveSet","XChangeWindowAttributes","XChar2b","XCharStruct","XCheckIfEvent","XCheckMaskEvent","XCheckTypedEvent","XCheckTypedWindowEvent","XCheckWindowEvent","XCirculateEvent","XCirculateRequestEvent","XCirculateSubwindows","XCirculateSubwindowsDown","XCirculateSubwindowsUp","XClassHint","XClearArea","XClearWindow","XClientMessageEvent","XClipBox","XCloseDisplay","XCloseIM","XCloseOM","XColor","XColormapEvent","XComposeStatus","XCompoundTextStyle","XConfigureEvent","XConfigureRequestEvent","XConfigureWindow","XConnectionNumber","XConnectionWatchProc","XContext","XContextDependentDrawing","XContextualDrawing","XConvertCase","XConvertSelection","XCopyArea","XCopyColormapAndFree","XCopyGC","XCopyPlane","XCreateBitmapFromData","XCreateColormap","XCreateFontCursor","XCreateFontSet","XCreateGC","XCreateGlyphCursor","XCreateIC","XCreateImage","XCreateOC","XCreatePixmap","XCreatePixmapCursor","XCreatePixmapFromBitmapData","XCreateRegion","XCreateSimpleWindow","XCreateWindow","XCreateWindowEvent","XCrossingEvent","XDefaultColormap","XDefaultColormapOfScreen","XDefaultDepth","XDefaultDepthOfScreen","XDefaultGC","XDefaultGCOfScreen","XDefaultRootWindow","XDefaultScreen","XDefaultScreenOfDisplay","XDefaultString","XDefaultVisual","XDefaultVisualOfScreen","XDefineCursor","XDeleteContext","XDeleteModifiermapEntry","XDeleteProperty","XDestroyIC","XDestroyImage","XDestroyOC","XDestroyRegion","XDestroySubwindows","XDestroyWindow","XDestroyWindowEvent","XDirectionalDependentDrawing","XDisableAccessControl","XDisplayCells","XDisplayHeight","XDisplayHeightMM","XDisplayKeycodes","XDisplayMotionBufferSize","XDisplayName","XDisplayOfIM","XDisplayOfOM","XDisplayOfScreen","XDisplayPlanes","XDisplayString","XDisplayWidth","XDisplayWidthMM","XDoesBackingStore","XDoesSaveUnders","XDrawArc","XDrawArcs","XDrawImageString","XDrawImageString16","XDrawLine","XDrawLines","XDrawPoint","XDrawPoints","XDrawRectangle","XDrawRectangles","XDrawSegments","XDrawString","XDrawString16","XDrawText","XDrawText16","XEDataObject","XEHeadOfExtensionList","XESetBeforeFlush","XESetCloseDisplay","XESetCopyEventCookie","XESetCopyGC","XESetCreateFont","XESetCreateGC","XESetError","XESetErrorString","XESetEventToWire","XESetFlushGC","XESetFreeFont","XESetFreeGC","XESetPrintErrorValues","XESetWireToError","XESetWireToEvent","XESetWireToEventCookie","XEmptyRegion","XEnableAccessControl","XEnterWindowEvent","XEqualRegion","XErrorEvent","XEvent","XEventMaskOfScreen","XEventsQueued","XExposeEvent","XExtCodes","XExtData","XExtendedMaxRequestSize","XExtentsOfFontSet","XFetchBuffer","XFetchBytes","XFetchName","XFillArc","XFillArcs","XFillPolygon","XFillRectangle","XFillRectangles","XFilterEvent","XFindContext","XFindOnExtensionList","XFlush","XFlushGC","XFocusChangeEvent","XFocusInEvent","XFocusOutEvent","XFontProp","XFontSet","XFontSetExtents","XFontStruct","XFontsOfFontSet","XForceScreenSaver","XFree","XFreeColormap","XFreeColors","XFreeCursor","XFreeEventData","XFreeExtensionList","XFreeFont","XFreeFontInfo","XFreeFontNames","XFreeFontPath","XFreeFontSet","XFreeGC","XFreeModifiermap","XFreePixmap","XFreeStringList","XGCValues","XGContextFromGC","XGenericEventCookie","XGeometry","XGetAtomName","XGetAtomNames","XGetClassHint","XGetCommand","XGetDefault","XGetErrorDatabaseText","XGetErrorText","XGetEventData","XGetFontPath","XGetFontProperty","XGetGCValues","XGetGeometry","XGetICValues","XGetIMValues","XGetIconName","XGetIconSizes","XGetImage","XGetInputFocus","XGetKeyboardControl","XGetKeyboardMapping","XGetModifierMapping","XGetMotionEvents","XGetNormalHints","XGetOCValues","XGetOMValues","XGetPixel","XGetPointerControl","XGetPointerMapping","XGetRGBColormaps","XGetScreenSaver","XGetSelectionOwner","XGetSizeHints","XGetStandardColormap","XGetSubImage","XGetTextProperty","XGetTransientForHint","XGetVisualInfo","XGetWMClientMachine","XGetWMColormapWindows","XGetWMHints","XGetWMIconName","XGetWMName","XGetWMNormalHints","XGetWMProtocols","XGetWMSizeHints","XGetWindowAttributes","XGetWindowProperty","XGetZoomHints","XGrabButton","XGrabKey","XGrabKeyboard","XGrabPointer","XGrabServer","XGraphicsExposeEvent","XGravityEvent","XHeightMMOfScreen","XHeightOfScreen","XHostAddress","XIC","XICCEncodingStyle","XICCallback","XICProc","XID","XIM","XIMAbsolutePosition","XIMBackwardChar","XIMBackwardWord","XIMCallback","XIMCaretDirection","XIMCaretDown","XIMCaretStyle","XIMCaretUp","XIMDontChange","XIMFeedback","XIMForwardChar","XIMForwardWord","XIMIsInvisible","XIMIsPrimary","XIMIsSecondary","XIMLineEnd","XIMLineStart","XIMNextLine","XIMOfIC","XIMPreeditArea","XIMPreeditCallbacks","XIMPreeditCaretCallbackStruct","XIMPreeditDrawCallbackStruct","XIMPreeditNone","XIMPreeditNothing","XIMPreeditPosition","XIMPreviousLine","XIMProc","XIMStatusArea","XIMStatusCallbacks","XIMStatusNone","XIMStatusNothing","XIMText","XIMTextString","XIconSize","XIconifyWindow","XIfEvent","XImage","XImageByteOrder","XInitExtension","XInitImage","XInitThreads","XInsertModifiermapEntry","XInstallColormap","XInternAtom","XInternAtoms","XInternalConnectionNumbers","XIntersectRegion","XKeyEvent","XKeyPressedEvent","XKeyReleasedEvent","XKeyboardControl","XKeyboardState","XKeycodeToKeysym","XKeymapEvent","XKeysymToKeycode","XKeysymToString","XKillClient","XLastKnownRequestProcessed","XLeaveWindowEvent","XListDepths","XListExtensions","XListFonts","XListFontsWithInfo","XListHosts","XListInstalledColormaps","XListPixmapFormats","XListProperties","XLoadFont","XLoadQueryFont","XLocaleOfFontSet","XLocaleOfIM","XLocaleOfOM","XLockDisplay","XLookupBoth","XLookupChars","XLookupColor","XLookupKeySym","XLookupKeysym","XLookupNone","XLookupString","XLowerWindow","XMapEvent","XMapRaised","XMapRequestEvent","XMapSubwindows","XMapWindow","XMappingEvent","XMaskEvent","XMatchVisualInfo","XMaxCmapsOfScreen","XMaxRequestSize","XMinCmapsOfScreen","XModifierKeymap","XMotionEvent","XMoveResizeWindow","XMoveWindow","XNArea","XNAreaNeeded","XNAreaNeeded_0","XNArea_0","XNBackground","XNBackgroundPixmap","XNBackgroundPixmap_0","XNBackground_0","XNClientWindow","XNClientWindow_0","XNColormap","XNColormap_0","XNCursor","XNCursor_0","XNDestroyCallback","XNDestroyCallback_0","XNFilterEvents","XNFilterEvents_0","XNFocusWindow","XNFocusWindow_0","XNFontSet","XNFontSet_0","XNForeground","XNForeground_0","XNGeometryCallback","XNGeometryCallback_0","XNHotKey","XNHotKeyState","XNHotKeyState_0","XNHotKey_0","XNInputStyle","XNInputStyle_0","XNLineSpace","XNLineSpace_0","XNPreeditAttributes","XNPreeditAttributes_0","XNPreeditCaretCallback","XNPreeditCaretCallback_0","XNPreeditDoneCallback","XNPreeditDoneCallback_0","XNPreeditDrawCallback","XNPreeditDrawCallback_0","XNPreeditStartCallback","XNPreeditStartCallback_0","XNPreeditState","XNPreeditStateNotifyCallback","XNPreeditStateNotifyCallback_0","XNPreeditState_0","XNQueryICValuesList","XNQueryICValuesList_0","XNQueryIMValuesList","XNQueryIMValuesList_0","XNQueryInputStyle","XNQueryInputStyle_0","XNR6PreeditCallback","XNR6PreeditCallback_0","XNResetState","XNResetState_0","XNResourceClass","XNResourceClass_0","XNResourceName","XNResourceName_0","XNSeparatorofNestedList","XNSeparatorofNestedList_0","XNSpotLocation","XNSpotLocation_0","XNStatusAttributes","XNStatusAttributes_0","XNStatusDoneCallback","XNStatusDoneCallback_0","XNStatusDrawCallback","XNStatusDrawCallback_0","XNStatusStartCallback","XNStatusStartCallback_0","XNStdColormap","XNStdColormap_0","XNStringConversion","XNStringConversionCallback","XNStringConversionCallback_0","XNStringConversion_0","XNVaNestedList","XNVaNestedList_0","XNVisiblePosition","XNVisiblePosition_0","XNegative","XNewModifiermap","XNextEvent","XNextRequest","XNoExposeEvent","XNoOp","XOM","XOMCharSetList","XOMOfOC","XOffsetRegion","XOpenDisplay","XOpenIM","XOpenOM","XOrientation","XParseColor","XParseGeometry","XPeekEvent","XPeekIfEvent","XPending","XPixmapFormatValues","XPlanesOfScreen","XPoint","XPointInRegion","XPointer","XPointerMovedEvent","XPolygonRegion","XProcessInternalConnection","XPropertyEvent","XProtocolRevision","XProtocolVersion","XPutBackEvent","XPutImage","XPutPixel","XQLength","XQueryBestCursor","XQueryBestSize","XQueryBestStipple","XQueryBestTile","XQueryColor","XQueryColors","XQueryExtension","XQueryFont","XQueryKeymap","XQueryPointer","XQueryTextExtents","XQueryTextExtents16","XQueryTree","XRaiseWindow","XReadBitmapFile","XReadBitmapFileData","XRebindKeysym","XRecolorCursor","XReconfigureWMWindow","XRectInRegion","XRectangle","XRefreshKeyboardMapping","XRegisterIMInstantiateCallback","XRemoveConnectionWatch","XRemoveFromSaveSet","XRemoveHost","XRemoveHosts","XReparentEvent","XReparentWindow","XResetScreenSaver","XResizeRequestEvent","XResizeWindow","XResourceManagerString","XRestackWindows","XRootWindow","XRootWindowOfScreen","XRotateBuffers","XRotateWindowProperties","XSaveContext","XScreenCount","XScreenNumberOfScreen","XScreenOfDisplay","XScreenResourceString","XSegment","XSelectInput","XSelectionClearEvent","XSelectionEvent","XSelectionRequestEvent","XSendEvent","XServerInterpretedAddress","XServerVendor","XSetAccessControl","XSetAfterFunction","XSetArcMode","XSetAuthorization","XSetBackground","XSetClassHint","XSetClipMask","XSetClipOrigin","XSetClipRectangles","XSetCloseDownMode","XSetCommand","XSetDashes","XSetErrorHandler","XSetFillRule","XSetFillStyle","XSetFont","XSetFontPath","XSetForeground","XSetFunction","XSetGraphicsExposures","XSetICFocus","XSetICValues","XSetIMValues","XSetIOErrorHandler","XSetIconName","XSetIconSizes","XSetInputFocus","XSetLineAttributes","XSetLocaleModifiers","XSetModifierMapping","XSetNormalHints","XSetOCValues","XSetOMValues","XSetPlaneMask","XSetPointerMapping","XSetRGBColormaps","XSetRegion","XSetScreenSaver","XSetSelectionOwner","XSetSizeHints","XSetStandardColormap","XSetStandardProperties","XSetState","XSetStipple","XSetSubwindowMode","XSetTSOrigin","XSetTextProperty","XSetTile","XSetTransientForHint","XSetWMClientMachine","XSetWMColormapWindows","XSetWMHints","XSetWMIconName","XSetWMName","XSetWMNormalHints","XSetWMProperties","XSetWMProtocols","XSetWMSizeHints","XSetWindowAttributes","XSetWindowBackground","XSetWindowBackgroundPixmap","XSetWindowBorder","XSetWindowBorderPixmap","XSetWindowBorderWidth","XSetWindowColormap","XSetZoomHints","XShrinkRegion","XSizeHints","XStandardColormap","XStdICCTextStyle","XStoreBuffer","XStoreBytes","XStoreColor","XStoreColors","XStoreName","XStoreNamedColor","XStringListToTextProperty","XStringStyle","XStringToKeysym","XSubImage","XSubtractRegion","XSupportsLocale","XSync","XSynchronize","XTextExtents","XTextExtents16","XTextItem","XTextItem16","XTextProperty","XTextPropertyToStringList","XTextStyle","XTextWidth","XTextWidth16","XTimeCoord","XTranslateCoordinates","XUTF8StringStyle","XUndefineCursor","XUngrabButton","XUngrabKey","XUngrabKeyboard","XUngrabPointer","XUngrabServer","XUninstallColormap","XUnionRectWithRegion","XUnionRegion","XUnloadFont","XUnlockDisplay","XUnmapEvent","XUnmapSubwindows","XUnmapWindow","XUnregisterIMInstantiateCallback","XUnsetICFocus","XUrgencyHint","XVaCreateNestedList","XValue","XVendorRelease","XVisibilityEvent","XVisualIDFromVisual","XVisualInfo","XWMGeometry","XWMHints","XWarpPointer","XWhitePixel","XWhitePixelOfScreen","XWidthMMOfScreen","XWidthOfScreen","XWindowAttributes","XWindowChanges","XWindowEvent","XWithdrawWindow","XWriteBitmapFile","XXorRegion","XYBitmap","XYPixmap","X_PROTOCOL","X_PROTOCOL_REVISION","XcmsAddColorSpace","XcmsAddFunctionSet","XcmsAllocColor","XcmsAllocNamedColor","XcmsCCC","XcmsCCCOfColormap","XcmsCIELabClipL","XcmsCIELabClipLab","XcmsCIELabClipab","XcmsCIELabQueryMaxC","XcmsCIELabQueryMaxL","XcmsCIELabQueryMaxLC","XcmsCIELabQueryMinL","XcmsCIELabToCIEXYZ","XcmsCIELabWhiteShiftColors","XcmsCIELuvClipL","XcmsCIELuvClipLuv","XcmsCIELuvClipuv","XcmsCIELuvQueryMaxC","XcmsCIELuvQueryMaxL","XcmsCIELuvQueryMaxLC","XcmsCIELuvQueryMinL","XcmsCIELuvToCIEuvY","XcmsCIELuvWhiteShiftColors","XcmsCIEXYZToCIELab","XcmsCIEXYZToCIEuvY","XcmsCIEXYZToCIExyY","XcmsCIEXYZToRGBi","XcmsCIEuvYToCIELuv","XcmsCIEuvYToCIEXYZ","XcmsCIEuvYToTekHVC","XcmsCIExyYToCIEXYZ","XcmsClientWhitePointOfCCC","XcmsColor","XcmsColorSpace","XcmsConvertColors","XcmsCreateCCC","XcmsDefaultCCC","XcmsDisplayOfCCC","XcmsFormatOfPrefix","XcmsFreeCCC","XcmsFunctionSet","XcmsLookupColor","XcmsPrefixOfFormat","XcmsQueryBlack","XcmsQueryBlue","XcmsQueryColor","XcmsQueryColors","XcmsQueryGreen","XcmsQueryRed","XcmsQueryWhite","XcmsRGBToRGBi","XcmsRGBiToCIEXYZ","XcmsRGBiToRGB","XcmsScreenNumberOfCCC","XcmsScreenWhitePointOfCCC","XcmsSetCCCOfColormap","XcmsSetCompressionProc","XcmsSetWhiteAdjustProc","XcmsSetWhitePoint","XcmsStoreColor","XcmsStoreColors","XcmsTekHVCClipC","XcmsTekHVCClipV","XcmsTekHVCClipVC","XcmsTekHVCQueryMaxC","XcmsTekHVCQueryMaxV","XcmsTekHVCQueryMaxVC","XcmsTekHVCQueryMaxVSamples","XcmsTekHVCQueryMinV","XcmsTekHVCToCIEuvY","XcmsTekHVCWhiteShiftColors","XcmsVisualOfCCC","XkbAccessXNotify","XkbAccessXNotifyEvent","XkbAccessXNotifyMask","XkbAction","XkbActionMessage","XkbActionMessageEvent","XkbActionMessageLength","XkbActionMessageMask","XkbAddDeviceLedInfo","XkbAddGeomColor","XkbAddGeomDoodad","XkbAddGeomKey","XkbAddGeomKeyAlias","XkbAddGeomOutline","XkbAddGeomOverlay","XkbAddGeomOverlayKey","XkbAddGeomOverlayRow","XkbAddGeomProperty","XkbAddGeomRow","XkbAddGeomSection","XkbAddGeomShape","XkbAddKeyType","XkbAllEventsMask","XkbAllStateComponentsMask","XkbAllocClientMap","XkbAllocCompatMap","XkbAllocControls","XkbAllocDeviceInfo","XkbAllocGeomColors","XkbAllocGeomDoodads","XkbAllocGeomKeyAliases","XkbAllocGeomKeys","XkbAllocGeomOutlines","XkbAllocGeomOverlayKeys","XkbAllocGeomOverlayRows","XkbAllocGeomOverlays","XkbAllocGeomPoints","XkbAllocGeomProps","XkbAllocGeomRows","XkbAllocGeomSectionDoodads","XkbAllocGeomSections","XkbAllocGeomShapes","XkbAllocGeometry","XkbAllocIndicatorMaps","XkbAllocKeyboard","XkbAllocNames","XkbAllocServerMap","XkbAnyEvent","XkbApplyCompatMapToKey","XkbApplyVirtualModChanges","XkbBell","XkbBellEvent","XkbBellNotify","XkbBellNotifyEvent","XkbBellNotifyMask","XkbBoundsPtr","XkbChangeDeviceInfo","XkbChangeEnabledControls","XkbChangeKeycodeRange","XkbChangeMap","XkbChangeNames","XkbChangeTypesOfKey","XkbChangesPtr","XkbClientMapPtr","XkbColorPtr","XkbCompatGrabModsMask","XkbCompatLookupModsMask","XkbCompatMapNotify","XkbCompatMapNotifyEvent","XkbCompatMapNotifyMask","XkbCompatMapPtr","XkbCompatStateMask","XkbComponentListPtr","XkbComponentNamesPtr","XkbComputeEffectiveMap","XkbComputeRowBounds","XkbComputeSectionBounds","XkbComputeShapeBounds","XkbComputeShapeTop","XkbControlsChangesPtr","XkbControlsNotify","XkbControlsNotifyEvent","XkbControlsNotifyMask","XkbControlsPtr","XkbCopyKeyType","XkbCopyKeyTypes","XkbDescPtr","XkbDeviceBell","XkbDeviceBellEvent","XkbDeviceChangesPtr","XkbDeviceInfoPtr","XkbDeviceLedInfoPtr","XkbDoodadPtr","XkbEvent","XkbExtensionDeviceNotify","XkbExtensionDeviceNotifyEvent","XkbExtensionDeviceNotifyMask","XkbFindOverlayForKey","XkbForceBell","XkbForceDeviceBell","XkbFreeClientMap","XkbFreeCompatMap","XkbFreeComponentList","XkbFreeControls","XkbFreeDeviceInfo","XkbFreeGeomColors","XkbFreeGeomDoodads","XkbFreeGeomKeyAliases","XkbFreeGeomKeys","XkbFreeGeomOutlines","XkbFreeGeomOverlayKeys","XkbFreeGeomOverlayRows","XkbFreeGeomOverlays","XkbFreeGeomPoints","XkbFreeGeomProperties","XkbFreeGeomRows","XkbFreeGeomSections","XkbFreeGeomShapes","XkbFreeGeometry","XkbFreeIndicatorMaps","XkbFreeKeyboard","XkbFreeNames","XkbFreeServerMap","XkbGeometryPtr","XkbGeometrySizesPtr","XkbGetAutoRepeatRate","XkbGetAutoResetControls","XkbGetCompatMap","XkbGetControls","XkbGetDetectableAutoRepeat","XkbGetDeviceButtonActions","XkbGetDeviceInfo","XkbGetDeviceInfoChanges","XkbGetDeviceLedInfo","XkbGetGeometry","XkbGetIndicatorMap","XkbGetIndicatorState","XkbGetKeyActions","XkbGetKeyBehaviors","XkbGetKeyExplicitComponents","XkbGetKeyModifierMap","XkbGetKeySyms","XkbGetKeyTypes","XkbGetKeyVirtualModMap","XkbGetKeyboard","XkbGetKeyboardByName","XkbGetMap","XkbGetMapChanges","XkbGetNamedDeviceIndicator","XkbGetNamedGeometry","XkbGetNamedIndicator","XkbGetNames","XkbGetPerClientControls","XkbGetState","XkbGetUpdatedMap","XkbGetVirtualMods","XkbGetXlibControls","XkbGrabModsMask","XkbGroupBaseMask","XkbGroupLatchMask","XkbGroupLockMask","XkbGroupStateMask","XkbIgnoreExtension","XkbIndicatorMapNotify","XkbIndicatorMapNotifyMask","XkbIndicatorMapPtr","XkbIndicatorMapRec","XkbIndicatorNotifyEvent","XkbIndicatorPtr","XkbIndicatorStateNotify","XkbIndicatorStateNotifyMask","XkbInitCanonicalKeyTypes","XkbKbdDpyStatePtr","XkbKbdDpyStateRec","XkbKeyAliasPtr","XkbKeyNameLength","XkbKeyNamePtr","XkbKeyPtr","XkbKeyTypePtr","XkbKeyTypesForCoreSymbols","XkbKeycodeToKeysym","XkbKeysymToModifiers","XkbLC_AllComposeControls","XkbLC_AllControls","XkbLC_AlwaysConsumeShiftAndLock","XkbLC_BeepOnComposeFail","XkbLC_ComposeLED","XkbLC_ConsumeKeysOnComposeFail","XkbLC_ConsumeLookupMods","XkbLC_ControlFallback","XkbLC_ForceLatinLookup","XkbLC_IgnoreNewKeyboards","XkbLatchGroup","XkbLatchModifiers","XkbLibraryVersion","XkbListComponents","XkbLockGroup","XkbLockModifiers","XkbLookupKeyBinding","XkbLookupKeySym","XkbLookupModsMask","XkbMapChangesPtr","XkbMapNotify","XkbMapNotifyEvent","XkbMapNotifyMask","XkbModifierBaseMask","XkbModifierLatchMask","XkbModifierLockMask","XkbModifierStateMask","XkbModsPtr","XkbModsRec","XkbNameChangesPtr","XkbNamesNotify","XkbNamesNotifyEvent","XkbNamesNotifyMask","XkbNamesPtr","XkbNewKeyboardNotify","XkbNewKeyboardNotifyEvent","XkbNewKeyboardNotifyMask","XkbNoteControlsChanges","XkbNoteDeviceChanges","XkbNoteMapChanges","XkbNoteNameChanges","XkbNumIndicators","XkbNumKbdGroups","XkbNumVirtualMods","XkbOD_BadLibraryVersion","XkbOD_BadServerVersion","XkbOD_ConnectionRefused","XkbOD_NonXkbServer","XkbOD_Success","XkbOpenDisplay","XkbOutlinePtr","XkbOverlayKeyPtr","XkbOverlayPtr","XkbOverlayRowPtr","XkbPointerButtonMask","XkbPropertyPtr","XkbQueryExtension","XkbRefreshKeyboardMapping","XkbResizeDeviceButtonActions","XkbResizeKeyActions","XkbResizeKeySyms","XkbResizeKeyType","XkbRowPtr","XkbSectionPtr","XkbSelectEventDetails","XkbSelectEvents","XkbServerMapPtr","XkbSetAtomFuncs","XkbSetAutoRepeatRate","XkbSetAutoResetControls","XkbSetCompatMap","XkbSetControls","XkbSetDebuggingFlags","XkbSetDetectableAutoRepeat","XkbSetDeviceButtonActions","XkbSetDeviceInfo","XkbSetDeviceLedInfo","XkbSetGeometry","XkbSetIgnoreLockMods","XkbSetIndicatorMap","XkbSetMap","XkbSetNamedDeviceIndicator","XkbSetNamedIndicator","XkbSetNames","XkbSetPerClientControls","XkbSetServerInternalMods","XkbSetXlibControls","XkbShapePtr","XkbStateNotify","XkbStateNotifyEvent","XkbStateNotifyMask","XkbStatePtr","XkbStateRec","XkbSymInterpretPtr","XkbToControl","XkbTranslateKeyCode","XkbTranslateKeySym","XkbUpdateActionVirtualMods","XkbUpdateKeyTypeVirtualMods","XkbUpdateMapFromCore","XkbUseExtension","XkbVirtualModsToReal","XkbXlibControlsImplemented","Xlib","XmbDrawImageString","XmbDrawString","XmbDrawText","XmbLookupString","XmbResetIC","XmbSetWMProperties","XmbTextEscapement","XmbTextExtents","XmbTextItem","XmbTextListToTextProperty","XmbTextPerCharExtents","XmbTextPropertyToTextList","Xpermalloc","XrmBinding","XrmCombineDatabase","XrmCombineFileDatabase","XrmDatabase","XrmDestroyDatabase","XrmEnumerateDatabase","XrmGetDatabase","XrmGetFileDatabase","XrmGetResource","XrmGetStringDatabase","XrmInitialize","XrmLocaleOfDatabase","XrmMergeDatabases","XrmOptionDescList","XrmOptionDescRec","XrmOptionKind","XrmParseCommand","XrmPermStringToQuark","XrmPutFileDatabase","XrmPutLineResource","XrmPutResource","XrmPutStringResource","XrmQGetResource","XrmQGetSearchList","XrmQGetSearchResource","XrmQPutResource","XrmQPutStringResource","XrmQuarkToString","XrmSetDatabase","XrmStringToBindingQuarkList","XrmStringToQuark","XrmStringToQuarkList","XrmUniqueQuark","XrmValue","Xutf8DrawImageString","Xutf8DrawString","Xutf8DrawText","Xutf8LookupString","Xutf8ResetIC","Xutf8SetWMProperties","Xutf8TextEscapement","Xutf8TextExtents","Xutf8TextListToTextProperty","Xutf8TextPerCharExtents","Xutf8TextPropertyToTextList","XwcDrawImageString","XwcDrawString","XwcDrawText","XwcFreeStringList","XwcLookupString","XwcResetIC","XwcTextEscapement","XwcTextExtents","XwcTextItem","XwcTextListToTextProperty","XwcTextPerCharExtents","XwcTextPropertyToTextList","YNegative","YSorted","YValue","YXBanded","YXSorted","ZPixmap","_XDisplay","_XGC","_XIC","_XIM","_XOC","_XOM","_XRegion","_XcmsCCC","_XcmsColorSpace","_XcmsFunctionSet","_XkbAction","_XkbBounds","_XkbChanges","_XkbClientMapRec","_XkbColor","_XkbCompatMapRec","_XkbComponentList","_XkbComponentNames","_XkbControls","_XkbControlsChanges","_XkbControlsNotify","_XkbControlsNotifyEvent","_XkbDesc","_XkbDeviceChanges","_XkbDeviceInfo","_XkbDeviceLedInfo","_XkbDoodad","_XkbExtensionDeviceNotify","_XkbExtensionDeviceNotifyEvent","_XkbGeometry","_XkbGeometrySizes","_XkbIndicatorMapRec","_XkbIndicatorRec","_XkbKey","_XkbKeyAliasRec","_XkbKeyNameRec","_XkbKeyType","_XkbMapChanges","_XkbMapNotifyEvent","_XkbMods","_XkbNameChanges","_XkbNamesNotify","_XkbNamesNotifyEvent","_XkbNamesRec","_XkbOutline","_XkbOverlay","_XkbOverlayKey","_XkbOverlayRow","_XkbProperty","_XkbRow","_XkbSection","_XkbServerMapRec","_XkbShape","_XkbStateRec","_XkbSymInterpretRec","_XrmHashBucketRec","above","above","add_pixel","addr","address","alias","all_chars_exist","all_event_masks","angle1","angle2","any","arc_mode","argKind","as_bytes","as_bytes_mut","as_longs","as_longs_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_shorts","as_shorts_mut","ascent","ascent","atom","attributes","auto_repeat_mode","auto_repeats","ax_options","ax_timeout","axt_ctrls_mask","axt_ctrls_values","axt_opts_mask","axt_opts_values","background","background_pixel","background_pixmap","backing_pixel","backing_pixel","backing_planes","backing_planes","backing_store","backing_store","backing_store","base_group","base_group","base_height","base_mods","base_mods","base_pixel","base_width","bell_class","bell_duration","bell_duration","bell_id","bell_percent","bell_percent","bell_pitch","bell_pitch","bit_gravity","bit_gravity","bitmap_bit_order","bitmap_pad","bitmap_unit","bits_per_pixel","bits_per_pixel","bits_per_pixel","bits_per_rgb","bits_per_rgb","black_pixel","blue","blue_mask","blue_mask","blue_mask","blue_max","blue_mult","border_pixel","border_pixmap","border_width","border_width","border_width","border_width","border_width","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","button","button","byte1","byte2","byte_order","bytes_per_line","callback","callback","cap_style","card32","caret","changed","changed","changed","changed","changed","changed_ctrls","changed_groups","changed_groups","changed_indicators","changed_vmods","chars","chars","chars","chars","chars_matched","charset_count","charset_list","chg_first","chg_length","circulate","circulate_request","class","class","class","client_data","client_data","client_message","clip_mask","clip_x_origin","clip_y_origin","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmap","colormap","colormap","colormap","colormap","colormap","colormap_size","compat","compat","compat_grab_mods","compat_grab_mods","compat_lookup_mods","compat_lookup_mods","compat_state","compat_state","compose_ptr","configure","configure_request","cookie","count","count","count","create_image","create_window","crossing","ctrls","cursor","dash_offset","dashes","data","data","data","debounce_delay","debounce_delay","default","default_char","default_gc","delta","delta","delta","delta","depth","depth","depth","depth","depth","depth","depths","descent","descent","destroy_image","destroy_window","detail","detail","detail","detail","device","device","device","device","device","device","device","device","device","device","device","device","device_spec","direction","direction","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","do_not_propagate_mask","do_not_propagate_mask","dpy","drawable","drawable","duration","enabled_ctrl_changes","enabled_ctrls","enabled_ctrls","encoding","encoding_is_wchar","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","error","error_code","event","event","event","event","event","event","event","event","event_mask","event_only","event_type","event_type","evtype","expose","ext_data","ext_data","ext_data","ext_data","extension","extension","family","feedback","fid","fill_rule","fill_style","first_btn","first_error","first_event","first_key","first_key_act","first_key_bahavior","first_key_explicit","first_key_sym","first_keycode","first_lvl","first_modmap_key","first_si","first_type","first_type","first_vmodmap_key","flags","flags","flags","flags","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","focus","focus_change","font","font","font","font_set","font_set","foreground","format","format","format","free_private","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_configure","funcs","function","generic_event_cookie","geom","geometry","get_byte","get_long","get_pixel","get_short","get_type","global_auto_repeat","grab_mods","grab_mods","graphics_expose","graphics_exposures","gravity","green","green_mask","green_mask","green_mask","green_max","green_mult","group","group","group","groups","groups","groups_wrap","height","height","height","height","height","height","height","height","height","height","height","height","height","height_inc","height_inc","icon_mask","icon_pixmap","icon_window","icon_x","icon_y","ignore_loc","indicators","indicators","initial_state","input","internal","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_hint","join_style","key","key","key_aliases","key_click_percent","key_click_percent","key_event_follows","key_vector","keycode","keycode","keycode","keycode","keycode","keycodes","keymap","keys","killid","latched_group","latched_group","latched_mods","latched_mods","lbearing","led","led_class","led_id","led_mask","led_mode","led_state","leds_defined","length","length","line_style","line_width","locked_group","locked_group","locked_mods","locked_mods","lookup_mods","lookup_mods","major_code","major_code","major_opcode","map","map","map_entries","map_installed","map_request","map_state","mapping","maps","mask","max_aspect","max_bounds","max_byte1","max_char_or_byte2","max_height","max_height","max_ink_extent","max_key_code","max_key_code","max_key_code","max_keypermod","max_logical_extent","max_maps","max_width","max_width","message","message_type","mheight","min_aspect","min_bounds","min_byte1","min_char_or_byte2","min_height","min_height","min_key_code","min_key_code","min_key_code","min_maps","min_width","min_width","minor_code","minor_code","minor_code","mk_curve","mk_delay","mk_dflt_btn","mk_interval","mk_max_speed","mk_time_to_max","mode","mode","modifiermap","mods","mods","mods","motion","multi_byte","mwidth","n_properties","name","name","name","names","nchars","nchars","nchars","nchars","ndepths","new","new","next","nitems","no_expose","num_aliases","num_btns","num_groups","num_groups","num_key_acts","num_key_aliases","num_key_behaviors","num_key_explicit","num_key_syms","num_keys","num_keys","num_lvls","num_modmap_keys","num_radio_groups","num_rg","num_si","num_si","num_total_si","num_types","num_types","num_vmodmap_keys","number","nvisuals","obdata","old_device","old_max_key_code","old_min_key_code","open","option","override_redirect","override_redirect","override_redirect","override_redirect","override_redirect","override_redirect","owner","pad","pad","parent","parent","parent","parent","parent","per_char","per_key_repeat","percent","phys_indicators","phys_symbols","pitch","pixel","place","place","plane_mask","position","press","private_data","properties","property","property","property","ptr_buttons","ptr_buttons","put_pixel","radio_groups","rbearing","real","real_mods","reason","red","red_mask","red_mask","red_mask","red_max","red_mult","reparent","repeat_delay","repeat_interval","req_major","req_major","req_major","req_minor","req_minor","req_minor","request","request_code","requestor","requestor","res_class","res_name","resize_request","resourceid","root","root","root","root","root","root","root_depth","root_input_mask","root_visual","same_screen","same_screen","same_screen","same_screen","save_under","save_under","save_unders","scanline_pad","scanline_pad","screen","screen","selection","selection","selection","selection","selection_clear","selection_request","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","server","set_byte","set_long","set_short","sibling","size","size_si","sk_delay","slow_keys_delay","specifier","stack_mode","state","state","state","state","state","state","state","state","stipple","string","style","sub_image","subwindow","subwindow","subwindow","subwindow","subwindow_mode","supported","sym_interpret","symbols","target","target","text","tile","time","time","time","time","time","time","time","time","time","time","time","time","time","time","time","time","time","time","time","time","time","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","ts_x_origin","ts_y_origin","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","typelength","types","unmap","unsupported","value","value","value","value_mask","valuelength","visibility","visual","visual","visualid","visualid","visualid","visuals","vmods","vmods","vmods","white_pixel","wide_char","width","width","width","width","width","width","width","width","width","width","width","width","width","width","width_inc","width_inc","win_gravity","win_gravity","win_gravity","window","window","window","window","window","window","window","window","window","window","window","window","window","window","window","window","window","window","window","window","window","window","window","window","window","window","window_group","x","x","x","x","x","x","x","x","x","x","x","x","x","x","x","x","x","x","x","x1","x2","xError","xEvent","x_root","x_root","x_root","x_root","xf86vm_notify","xkb","xkb_type","xkb_type","xkb_type","xkb_type","xkb_type","xkb_type","xkb_type","xkb_type","xkb_type","xkb_type","xkb_type","xkb_type","xoffset","xrr_crtc_change_notify","xrr_notify","xrr_output_change_notify","xrr_output_property_notify","xrr_provider_change_notify","xrr_provider_property_notify","xrr_resource_change_notify","xrr_screen_change_notify","xss_notify","y","y","y","y","y","y","y","y","y","y","y","y","y","y","y","y","y","y","y","y1","y2","y_root","y_root","y_root","y_root","your_event_mask","XCBOwnsEventQueue","XEventQueueOwner","XGetXCBConnection","XSetEventQueueOwner","XlibOwnsEventQueue","Xlib_xcb","borrow","borrow","borrow_mut","borrow_mut","from","from","into","into","open","try_from","try_from","try_into","try_into","type_id","type_id","xcb_connection_t","BOOL","BYTE","CARD16","CARD32","CARD64","CARD8","INT16","INT32","INT64","INT8","AtomPtr","Xmu","XmuAddCloseDisplayHook","XmuAddInitializer","XmuAllStandardColormaps","XmuAppendSegment","XmuArea","XmuAreaAnd","XmuAreaCopy","XmuAreaDup","XmuAreaNot","XmuAreaOrXor","XmuCallInitializers","XmuClientWindow","XmuCompareISOLatin1","XmuConvertStandardSelection","XmuCopyISOLatin1Lowered","XmuCopyISOLatin1Uppered","XmuCreateColormap","XmuCreatePixmapFromBitmap","XmuCreateStippledPixmap","XmuCursorNameToIndex","XmuCvtBackingStoreToString","XmuCvtFunctionToCallback","XmuCvtGravityToString","XmuCvtJustifyToString","XmuCvtLongToString","XmuCvtOrientationToString","XmuCvtShapeStyleToString","XmuCvtStringToBackingStore","XmuCvtStringToBitmap","XmuCvtStringToColorCursor","XmuCvtStringToCursor","XmuCvtStringToGravity","XmuCvtStringToJustify","XmuCvtStringToLong","XmuCvtStringToOrientation","XmuCvtStringToShapeStyle","XmuCvtStringToWidget","XmuCvtWidgetToString","XmuDQAddDisplay","XmuDQCreate","XmuDQDestroy","XmuDQLookupDisplay","XmuDQRemoveDisplay","XmuDeleteStandardColormap","XmuDestroyScanlineList","XmuDestroySegmentList","XmuDisplayQueue","XmuDisplayQueueEntry","XmuDistinguishableColors","XmuDistinguishablePixels","XmuDrawLogo","XmuDrawRoundedRectangle","XmuFillRoundedRectangle","XmuGetAtomName","XmuGetColormapAllocation","XmuGetHostname","XmuInternAtom","XmuInternStrings","XmuLocateBitmapFile","XmuLocatePixmapFile","XmuLookupAPL","XmuLookupArabic","XmuLookupCloseDisplayHook","XmuLookupCyrillic","XmuLookupGreek","XmuLookupHebrew","XmuLookupJISX0201","XmuLookupKana","XmuLookupLatin1","XmuLookupLatin2","XmuLookupLatin3","XmuLookupLatin4","XmuLookupStandardColormap","XmuLookupString","XmuMakeAtom","XmuNCopyISOLatin1Lowered","XmuNCopyISOLatin1Uppered","XmuNameOfAtom","XmuNewArea","XmuNewCvtStringToWidget","XmuNewScanline","XmuNewSegment","XmuOptimizeArea","XmuOptimizeScanline","XmuPrintDefaultErrorMessage","XmuReadBitmapData","XmuReadBitmapDataFromFile","XmuRegisterExternalAgent","XmuReleaseStippledPixmap","XmuRemoveCloseDisplayHook","XmuReshapeWidget","XmuScanline","XmuScanlineAnd","XmuScanlineAndSegment","XmuScanlineCopy","XmuScanlineEqu","XmuScanlineNot","XmuScanlineOr","XmuScanlineOrSegment","XmuScanlineXor","XmuScanlineXorSegment","XmuScreenOfWindow","XmuSegment","XmuSimpleErrorHandler","XmuSnprintf","XmuStandardColormap","XmuUpdateMapHints","XmuValidArea","XmuValidScanline","XmuVisualStandardColormaps","XmuWidgetNode","XmuWnCountOwnedResources","XmuWnFetchResources","XmuWnInitializeNodes","XmuWnNameToNode","_AtomRec","_XA_ATOM_PAIR","_XA_CHARACTER_POSITION","_XA_CLASS","_XA_CLIENT_WINDOW","_XA_CLIPBOARD","_XA_COMPOUND_TEXT","_XA_DECNET_ADDRESS","_XA_DELETE","_XA_FILENAME","_XA_HOSTNAME","_XA_IP_ADDRESS","_XA_LENGTH","_XA_LIST_LENGTH","_XA_NAME","_XA_NET_ADDRESS","_XA_NULL","_XA_OWNER_OS","_XA_SPAN","_XA_TARGETS","_XA_TEXT","_XA_TIMESTAMP","_XA_USER","_XA_UTF8_STRING","_XmuArea","_XmuDisplayQueue","_XmuDisplayQueueEntry","_XmuScanline","_XmuSegment","_XmuWidgetNode","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","open","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","PRESENT_MAJOR","PRESENT_MINOR","PRESENT_NAME","PRESENT_REVISION","PRESENT_VERSION","PresentAllCapabilities","PresentAllEvents","PresentAllOptions","PresentCapabilityAsync","PresentCapabilityFence","PresentCapabilityNone","PresentCapabilityUST","PresentCompleteKindNotifyMSC","PresentCompleteKindPixmap","PresentCompleteModeCopy","PresentCompleteModeFlip","PresentCompleteModeSkip","PresentCompleteModeSuboptimalCopy","PresentCompleteNotify","PresentCompleteNotifyMask","PresentConfigureNotify","PresentConfigureNotifyMask","PresentIdleNotify","PresentIdleNotifyMask","PresentNumberErrors","PresentNumberEvents","PresentNumberRequests","PresentOptionAsync","PresentOptionCopy","PresentOptionNone","PresentOptionSuboptimal","PresentOptionUST","XPresentCompleteNotifyEvent","XPresentConfigureNotifyEvent","XPresentEvent","XPresentFreeInput","XPresentIdleNotifyEvent","XPresentNotify","XPresentNotifyMSC","XPresentPixmap","XPresentQueryCapabilities","XPresentQueryExtension","XPresentQueryVersion","XPresentSelectInput","XPresentVersion","X_PresentNotifyMSC","X_PresentPixmap","X_PresentQueryCapabilities","X_PresentQueryVersion","X_PresentSelectInput","Xpresent","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","display","display","display","display","eid","eid","eid","evtype","evtype","evtype","evtype","extension","extension","extension","extension","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","height","idle_fence","into","into","into","into","into","into","kind","mode","msc","off_x","off_y","open","pixmap","pixmap_flags","pixmap_height","pixmap_width","send_event","send_event","send_event","send_event","serial","serial","serial","serial","serial","serial_number","serial_number","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_","type_","type_","type_","type_id","type_id","type_id","type_id","type_id","type_id","ust","width","window","window","window","window","x","y","BadRRCrtc","BadRRMode","BadRROutput","BadRRProvider","Connection","RANDR_MAJOR","RANDR_MINOR","RANDR_NAME","RRCrtc","RRCrtcChangeNotifyMask","RRMode","RRNotify","RRNotify_CrtcChange","RRNotify_OutputChange","RRNotify_OutputProperty","RRNotify_ProviderChange","RRNotify_ProviderProperty","RRNotify_ResourceChange","RRNumberErrors","RRNumberEvents","RRNumberRequests","RROutput","RROutputChangeNotifyMask","RROutputPropertyNotifyMask","RRProvider","RRProviderChangeNotifyMask","RRProviderPropertyNotifyMask","RRResourceChangeNotifyMask","RRScreenChangeNotify","RRScreenChangeNotifyMask","RRSetConfigFailed","RRSetConfigInvalidConfigTime","RRSetConfigInvalidTime","RRSetConfigSuccess","RRTransformProjective","RRTransformScaleDown","RRTransformScaleUp","RRTransformUnit","RR_BCast","RR_CSync","RR_CSyncNegative","RR_CSyncPositive","RR_Capability_None","RR_Capability_SinkOffload","RR_Capability_SinkOutput","RR_Capability_SourceOffload","RR_Capability_SourceOutput","RR_ClockDivideBy2","RR_Connected","RR_Disconnected","RR_DoubleClock","RR_DoubleScan","RR_HSkewPresent","RR_HSyncNegative","RR_HSyncPositive","RR_Interlace","RR_PROPERTY_BACKLIGHT","RR_PROPERTY_BORDER","RR_PROPERTY_BORDER_DIMENSIONS","RR_PROPERTY_CLONE_LIST","RR_PROPERTY_COMPATIBILITY_LIST","RR_PROPERTY_CONNECTOR_NUMBER","RR_PROPERTY_CONNECTOR_TYPE","RR_PROPERTY_GUID","RR_PROPERTY_RANDR_EDID","RR_PROPERTY_RANDR_TILE","RR_PROPERTY_SIGNAL_FORMAT","RR_PROPERTY_SIGNAL_PROPERTIES","RR_PixelMultiplex","RR_Reflect_X","RR_Reflect_Y","RR_Rotate_0","RR_Rotate_180","RR_Rotate_270","RR_Rotate_90","RR_UnknownConnection","RR_VSyncNegative","RR_VSyncPositive","Rotation","SizeID","SubpixelOrder","XRRAddOutputMode","XRRAddOutputMode","XRRAllocGamma","XRRAllocGamma","XRRAllocModeInfo","XRRAllocModeInfo","XRRAllocateMonitor","XRRChangeOutputProperty","XRRChangeOutputProperty","XRRChangeProviderProperty","XRRChangeProviderProperty","XRRConfigCurrentConfiguration","XRRConfigCurrentConfiguration","XRRConfigCurrentRate","XRRConfigCurrentRate","XRRConfigRates","XRRConfigRates","XRRConfigRotations","XRRConfigRotations","XRRConfigSizes","XRRConfigSizes","XRRConfigTimes","XRRConfigTimes","XRRConfigureOutputProperty","XRRConfigureOutputProperty","XRRConfigureProviderProperty","XRRConfigureProviderProperty","XRRCreateMode","XRRCreateMode","XRRCrtcChangeNotifyEvent","XRRCrtcGamma","XRRCrtcInfo","XRRCrtcTransformAttributes","XRRDeleteMonitor","XRRDeleteOutputMode","XRRDeleteOutputMode","XRRDeleteOutputProperty","XRRDeleteOutputProperty","XRRDeleteProviderProperty","XRRDeleteProviderProperty","XRRDestroyMode","XRRDestroyMode","XRRFreeCrtcInfo","XRRFreeCrtcInfo","XRRFreeGamma","XRRFreeGamma","XRRFreeModeInfo","XRRFreeModeInfo","XRRFreeMonitors","XRRFreeOutputInfo","XRRFreeOutputInfo","XRRFreePanning","XRRFreePanning","XRRFreeProviderInfo","XRRFreeProviderInfo","XRRFreeProviderResources","XRRFreeProviderResources","XRRFreeScreenConfigInfo","XRRFreeScreenConfigInfo","XRRFreeScreenResources","XRRFreeScreenResources","XRRGetCrtcGamma","XRRGetCrtcGamma","XRRGetCrtcGammaSize","XRRGetCrtcGammaSize","XRRGetCrtcInfo","XRRGetCrtcInfo","XRRGetCrtcTransform","XRRGetCrtcTransform","XRRGetMonitors","XRRGetOutputInfo","XRRGetOutputInfo","XRRGetOutputPrimary","XRRGetOutputPrimary","XRRGetOutputProperty","XRRGetOutputProperty","XRRGetPanning","XRRGetPanning","XRRGetProviderInfo","XRRGetProviderInfo","XRRGetProviderProperty","XRRGetProviderProperty","XRRGetProviderResources","XRRGetProviderResources","XRRGetScreenInfo","XRRGetScreenInfo","XRRGetScreenResources","XRRGetScreenResources","XRRGetScreenResourcesCurrent","XRRGetScreenResourcesCurrent","XRRGetScreenSizeRange","XRRGetScreenSizeRange","XRRListOutputProperties","XRRListOutputProperties","XRRListProviderProperties","XRRListProviderProperties","XRRModeFlags","XRRModeInfo","XRRMonitorInfo","XRRNotifyEvent","XRROutputChangeNotifyEvent","XRROutputInfo","XRROutputPropertyNotifyEvent","XRRPanning","XRRPropertyInfo","XRRProviderChangeNotifyEvent","XRRProviderInfo","XRRProviderPropertyNotifyEvent","XRRProviderResources","XRRQueryExtension","XRRQueryExtension","XRRQueryOutputProperty","XRRQueryOutputProperty","XRRQueryProviderProperty","XRRQueryProviderProperty","XRRQueryVersion","XRRQueryVersion","XRRRates","XRRRates","XRRResourceChangeNotifyEvent","XRRRootToScreen","XRRRootToScreen","XRRRotations","XRRRotations","XRRScreenChangeNotifyEvent","XRRScreenConfiguration","XRRScreenResources","XRRScreenSize","XRRSelectInput","XRRSelectInput","XRRSetCrtcConfig","XRRSetCrtcConfig","XRRSetCrtcGamma","XRRSetCrtcGamma","XRRSetCrtcTransform","XRRSetCrtcTransform","XRRSetMonitor","XRRSetOutputPrimary","XRRSetOutputPrimary","XRRSetPanning","XRRSetPanning","XRRSetProviderOffloadSink","XRRSetProviderOffloadSink","XRRSetProviderOutputSource","XRRSetProviderOutputSource","XRRSetScreenConfig","XRRSetScreenConfig","XRRSetScreenConfigAndRate","XRRSetScreenConfigAndRate","XRRSetScreenSize","XRRSetScreenSize","XRRSizes","XRRSizes","XRRTimes","XRRTimes","XRRUpdateConfiguration","XRRUpdateConfiguration","X_RRAddOutputMode","X_RRChangeOutputProperty","X_RRChangeProviderProperty","X_RRConfigureOutputProperty","X_RRConfigureProviderProperty","X_RRCreateMode","X_RRDeleteMonitor","X_RRDeleteOutputMode","X_RRDeleteOutputProperty","X_RRDeleteProviderProperty","X_RRDestroyMode","X_RRGetCrtcGamma","X_RRGetCrtcGammaSize","X_RRGetCrtcInfo","X_RRGetCrtcTransform","X_RRGetMonitors","X_RRGetOutputInfo","X_RRGetOutputPrimary","X_RRGetOutputProperty","X_RRGetPanning","X_RRGetProviderInfo","X_RRGetProviderProperty","X_RRGetProviders","X_RRGetScreenInfo","X_RRGetScreenResources","X_RRGetScreenResourcesCurrent","X_RRGetScreenSizeRange","X_RRListOutputProperties","X_RRListProviderProperties","X_RROldGetScreenInfo","X_RROldScreenChangeSelectInput","X_RRQueryOutputProperty","X_RRQueryProviderProperty","X_RRQueryVersion","X_RRSelectInput","X_RRSetCrtcConfig","X_RRSetCrtcGamma","X_RRSetCrtcTransform","X_RRSetMonitor","X_RRSetOutputPrimary","X_RRSetPanning","X_RRSetProviderOffloadSink","X_RRSetProviderOutputSource","X_RRSetScreenConfig","X_RRSetScreenSize","Xrandr","Xrandr_2_2_0","associated_capability","associated_providers","automatic","blue","border_bottom","border_left","border_right","border_top","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capabilities","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clones","configTimestamp","config_timestamp","connection","connection","crtc","crtc","crtc","crtcs","crtcs","crtcs","currentFilter","currentNparams","currentParams","currentTransform","current_role","display","display","display","display","display","display","display","display","dotClock","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","green","hSkew","hSyncEnd","hSyncStart","hTotal","height","height","height","height","height","height","height","id","immutable","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","left","mheight","mheight","mheight","mm_height","mm_width","mode","mode","mode","modeFlags","modes","modes","mwidth","mwidth","mwidth","name","name","name","name","nameLen","nameLen","nameLength","nassociatedproviders","nclone","ncrtc","ncrtc","ncrtcs","nmode","nmode","noutput","noutput","noutput","noutputs","npossible","npreferred","nproviders","num_values","open","open","output","output","outputs","outputs","outputs","outputs","pending","pendingFilter","pendingNparams","pendingParams","pendingTransform","possible","primary","property","property","provider","provider","providers","range","red","root","rotation","rotation","rotation","rotation","rotations","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","serial","serial","serial","serial","serial","serial","serial","serial","size","size_index","state","state","subpixel_order","subpixel_order","subpixel_order","subtype","subtype","subtype","subtype","subtype","subtype","subtype","timestamp","timestamp","timestamp","timestamp","timestamp","timestamp","timestamp","timestamp","timestamp","timestamp","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","top","track_height","track_left","track_top","track_width","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_","type_","type_","type_","type_","type_","type_","type_","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vSyncEnd","vSyncStart","vTotal","values","width","width","width","width","width","width","width","window","window","window","window","window","window","window","window","x","x","x","y","y","y","XRecordAllClients","XRecordAllocRange","XRecordClientDied","XRecordClientInfo","XRecordClientSpec","XRecordClientStarted","XRecordContext","XRecordCreateContext","XRecordCurrentClients","XRecordDisableContext","XRecordEnableContext","XRecordEnableContextAsync","XRecordEndOfData","XRecordExtRange","XRecordFreeContext","XRecordFreeData","XRecordFreeState","XRecordFromClient","XRecordFromClientSequence","XRecordFromClientTime","XRecordFromServer","XRecordFromServerTime","XRecordFutureClients","XRecordGetContext","XRecordIdBaseMask","XRecordInterceptData","XRecordProcessReplies","XRecordQueryVersion","XRecordRange","XRecordRange16","XRecordRange8","XRecordRegisterClients","XRecordStartOfData","XRecordState","XRecordUnregisterClients","Xf86vmode","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","category","client","client_died","client_info","client_seq","client_started","client_swapped","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","core_replies","core_requests","data","data_len","datum_flags","delivered_events","device_events","enabled","eq","eq","eq","eq","eq","eq","eq","errors","ext_major","ext_minor","ext_replies","ext_requests","first","first","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","id_base","into","into","into","into","into","into","into","into","last","last","nclients","nranges","open","ranges","server_time","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","BadGlyph","BadGlyphSet","BadPictFormat","BadPictOp","BadPicture","CPAlphaMap","CPAlphaXOrigin","CPAlphaYOrigin","CPClipMask","CPClipXOrigin","CPClipYOrigin","CPComponentAlpha","CPDither","CPGraphicsExposure","CPLastBit","CPPolyEdge","CPPolyMode","CPRepeat","CPSubwindowMode","FilterBest","FilterBilinear","FilterConvolution","FilterFast","FilterGood","FilterNearest","Glyph","GlyphSet","PictFormat","PictFormatAlpha","PictFormatAlphaMask","PictFormatBlue","PictFormatBlueMask","PictFormatColormap","PictFormatDepth","PictFormatGreen","PictFormatGreenMask","PictFormatID","PictFormatRed","PictFormatRedMask","PictFormatType","PictOpAdd","PictOpAtop","PictOpAtopReverse","PictOpBlendMaximum","PictOpBlendMinimum","PictOpClear","PictOpColorBurn","PictOpColorDodge","PictOpConjointAtop","PictOpConjointAtopReverse","PictOpConjointClear","PictOpConjointDst","PictOpConjointIn","PictOpConjointInReverse","PictOpConjointMaximum","PictOpConjointMinimum","PictOpConjointOut","PictOpConjointOutReverse","PictOpConjointOver","PictOpConjointOverReverse","PictOpConjointSrc","PictOpConjointXor","PictOpDarken","PictOpDifference","PictOpDisjointAtop","PictOpDisjointAtopReverse","PictOpDisjointClear","PictOpDisjointDst","PictOpDisjointIn","PictOpDisjointInReverse","PictOpDisjointMaximum","PictOpDisjointMinimum","PictOpDisjointOut","PictOpDisjointOutReverse","PictOpDisjointOver","PictOpDisjointOverReverse","PictOpDisjointSrc","PictOpDisjointXor","PictOpDst","PictOpExclusion","PictOpHSLColor","PictOpHSLHue","PictOpHSLLuminosity","PictOpHSLSaturation","PictOpHardLight","PictOpIn","PictOpInReverse","PictOpLighten","PictOpMaximum","PictOpMinimum","PictOpMultiply","PictOpOut","PictOpOutReverse","PictOpOver","PictOpOverReverse","PictOpOverlay","PictOpSaturate","PictOpScreen","PictOpSoftLight","PictOpSrc","PictOpXor","PictStandardA1","PictStandardA4","PictStandardA8","PictStandardARGB32","PictStandardRGB24","PictTypeDirect","PictTypeIndexed","Picture","PolyEdgeSharp","PolyEdgeSmooth","PolyModeImprecise","PolyModePrecise","RenderNumberErrors","RepeatNone","RepeatNormal","RepeatPad","RepeatReflect","SubPixelHorizontalBGR","SubPixelHorizontalRGB","SubPixelNone","SubPixelUnknown","SubPixelVerticalBGR","SubPixelVerticalRGB","XAnimCursor","XCircle","XConicalGradient","XDouble","XFilters","XFixed","XGlyphElt16","XGlyphElt32","XGlyphElt8","XGlyphInfo","XIndexValue","XLineFixed","XLinearGradient","XPointDouble","XPointFixed","XRadialGradient","XRenderAddGlyphs","XRenderAddTraps","XRenderChangePicture","XRenderColor","XRenderComposite","XRenderCompositeDoublePoly","XRenderCompositeString16","XRenderCompositeString32","XRenderCompositeString8","XRenderCompositeText16","XRenderCompositeText32","XRenderCompositeText8","XRenderCompositeTrapezoids","XRenderCompositeTriFan","XRenderCompositeTriStrip","XRenderCompositeTriangles","XRenderCreateAnimCursor","XRenderCreateConicalGradient","XRenderCreateCursor","XRenderCreateGlyphSet","XRenderCreateLinearGradient","XRenderCreatePicture","XRenderCreateRadialGradient","XRenderCreateSolidFill","XRenderDirectFormat","XRenderFillRectangle","XRenderFillRectangles","XRenderFindFormat","XRenderFindStandardFormat","XRenderFindVisualFormat","XRenderFreeGlyphSet","XRenderFreeGlyphs","XRenderFreePicture","XRenderParseColor","XRenderPictFormat","XRenderPictureAttributes","XRenderQueryExtension","XRenderQueryFilters","XRenderQueryFormats","XRenderQueryPictIndexValues","XRenderQuerySubpixelOrder","XRenderQueryVersion","XRenderReferenceGlyphSet","XRenderSetPictureClipRectangles","XRenderSetPictureClipRegion","XRenderSetPictureFilter","XRenderSetPictureTransform","XRenderSetSubpixelOrder","XSpanFix","XTransform","XTrap","XTrapezoid","XTriangle","Xrender","_XAnimCursor","_XCircle","_XConicalGradient","_XFilters","_XGlyphElt16","_XGlyphElt32","_XGlyphElt8","_XGlyphInfo","_XIndexValue","_XLineFixed","_XLinearGradient","_XPointDouble","_XPointFixed","_XRadialGradient","_XRenderPictureAttributes","_XSpanFix","_XTransform","_XTrap","_XTrapezoid","_XTriangle","alias","alpha","alpha","alpha","alphaMask","alpha_map","alpha_x_origin","alpha_y_origin","angle","blue","blue","blue","blueMask","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bottom","bottom","center","chars","chars","chars","clip_mask","clip_x_origin","clip_y_origin","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","colormap","component_alpha","cursor","delay","depth","direct","dither","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","filter","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","glyphset","glyphset","glyphset","graphics_exposures","green","green","green","greenMask","height","id","inner","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","left","left","matrix","nalias","nchars","nchars","nchars","nfilter","open","outer","p1","p1","p1","p2","p2","p2","p3","pixel","poly_edge","poly_mode","radius","red","red","red","redMask","repeat","right","right","subwindow_mode","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","top","top","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","width","x","x","x","x","xOff","xOff","xOff","xOff","y","y","y","y","y","yOff","yOff","yOff","yOff","ShmSeg","XShmAttach","XShmCompletionEvent","XShmCreateImage","XShmCreatePixmap","XShmDetach","XShmGetEventBase","XShmGetImage","XShmPixmapFormat","XShmPutImage","XShmQueryExtension","XShmQueryVersion","XShmSegmentInfo","Xext","_type","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","diplay","drawable","eq","eq","fmt","fmt","from","from","from","into","into","into","major_code","minor_code","offset","open","readOnly","send_event","serial","shmaddr","shmid","shmseg","shmseg","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","ScreenSaverBlanked","ScreenSaverCycle","ScreenSaverCycleMask","ScreenSaverDisabled","ScreenSaverExternal","ScreenSaverInternal","ScreenSaverMajorVersion","ScreenSaverMinorVersion","ScreenSaverName","ScreenSaverNotify","ScreenSaverNotifyMask","ScreenSaverNumberEvents","ScreenSaverOff","ScreenSaverOn","ScreenSaverPropertyName","XScreenSaverAllocInfo","XScreenSaverGetRegistered","XScreenSaverInfo","XScreenSaverNotifyEvent","XScreenSaverQueryExtension","XScreenSaverQueryInfo","XScreenSaverQueryVersion","XScreenSaverRegister","XScreenSaverSelectInput","XScreenSaverSetAttributes","XScreenSaverSuspend","XScreenSaverUnregister","XScreenSaverUnsetAttributes","Xss","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","display","eq","eq","eventMask","fmt","fmt","forced","from","from","from","from","from","idle","into","into","into","kind","kind","open","root","send_event","serial","state","state","til_or_since","time","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_","type_id","type_id","type_id","window","window","Arg","ArgList","Substitution","SubstitutionRec","Widget","WidgetClass","Xt","XtAccelerators","XtActionList","XtActionsRec","XtAddActions","XtAddCallback","XtAddCallbacks","XtAddConverter","XtAddEventHandler","XtAddExposureToRegion","XtAddGrab","XtAddInput","XtAddRawEventHandler","XtAddSignal","XtAddTimeOut","XtAddWorkProc","XtAllocateGC","XtAppAddActionHook","XtAppAddActions","XtAppAddBlockHook","XtAppAddConverter","XtAppAddInput","XtAppAddSignal","XtAppAddTimeOut","XtAppAddWorkProc","XtAppContext","XtAppCreateShell","XtAppError","XtAppErrorMsg","XtAppGetErrorDatabase","XtAppGetErrorDatabaseText","XtAppGetExitFlag","XtAppGetSelectionTimeout","XtAppInitialize","XtAppLock","XtAppMainLoop","XtAppNextEvent","XtAppPeekEvent","XtAppPending","XtAppProcessEvent","XtAppReleaseCacheRefs","XtAppSetErrorHandler","XtAppSetErrorMsgHandler","XtAppSetExitFlag","XtAppSetFallbackResources","XtAppSetSelectionTimeout","XtAppSetTypeConverter","XtAppSetWarningHandler","XtAppSetWarningMsgHandler","XtAppUnlock","XtAppWarning","XtAppWarningMsg","XtAsprintf","XtAugmentTranslations","XtBuildEventMask","XtCallAcceptFocus","XtCallActionProc","XtCallCallbackList","XtCallCallbacks","XtCallConverter","XtCallbackExclusive","XtCallbackList","XtCallbackNone","XtCallbackNonexclusive","XtCallbackPopdown","XtCallbackRec","XtCallbackReleaseCacheRef","XtCallbackReleaseCacheRefList","XtCallbackStatus","XtCalloc","XtCancelSelectionRequest","XtChangeManagedSet","XtCheckpointToken","XtCheckpointTokenRec","XtClass","XtCloseDisplay","XtConfigureWidget","XtConvert","XtConvertAndStore","XtConvertArgList","XtConvertArgRec","XtConvertCase","XtCreateApplicationContext","XtCreateApplicationShell","XtCreateManagedWidget","XtCreatePopupShell","XtCreateSelectionRequest","XtCreateWidget","XtCreateWindow","XtCvtColorToPixel","XtCvtIntToBool","XtCvtIntToBoolean","XtCvtIntToColor","XtCvtIntToFloat","XtCvtIntToFont","XtCvtIntToPixel","XtCvtIntToPixmap","XtCvtIntToShort","XtCvtIntToUnsignedChar","XtCvtStringToAcceleratorTable","XtCvtStringToAtom","XtCvtStringToBool","XtCvtStringToBoolean","XtCvtStringToCommandArgArray","XtCvtStringToCursor","XtCvtStringToDimension","XtCvtStringToDirectoryString","XtCvtStringToDisplay","XtCvtStringToFile","XtCvtStringToFloat","XtCvtStringToFont","XtCvtStringToFontSet","XtCvtStringToFontStruct","XtCvtStringToGravity","XtCvtStringToInitialState","XtCvtStringToInt","XtCvtStringToPixel","XtCvtStringToRestartStyle","XtCvtStringToShort","XtCvtStringToTranslationTable","XtCvtStringToUnsignedChar","XtCvtStringToVisual","XtDatabase","XtDestroyApplicationContext","XtDestroyGC","XtDestroyWidget","XtDirectConvert","XtDisownSelection","XtDispatchEvent","XtDispatchEventToWidget","XtDisplay","XtDisplayInitialize","XtDisplayOfObject","XtDisplayStringConversionWarning","XtDisplayToApplicationContext","XtError","XtErrorMsg","XtFindFile","XtFree","XtGeometryResult","XtGetActionKeysym","XtGetActionList","XtGetApplicationNameAndClass","XtGetApplicationResources","XtGetClassExtension","XtGetConstraintResourceList","XtGetDisplays","XtGetErrorDatabase","XtGetErrorDatabaseText","XtGetGC","XtGetKeyboardFocusWidget","XtGetKeysymTable","XtGetMultiClickTime","XtGetResourceList","XtGetSelectionParameters","XtGetSelectionRequest","XtGetSelectionTimeout","XtGetSelectionValue","XtGetSelectionValueIncremental","XtGetSelectionValues","XtGetSelectionValuesIncremental","XtGetSubresources","XtGetSubvalues","XtGetValues","XtGrabButton","XtGrabKey","XtGrabKeyboard","XtGrabKind","XtGrabPointer","XtHasCallbacks","XtHooksOfDisplay","XtInitialize","XtInitializeWidgetClass","XtInsertEventHandler","XtInsertEventTypeHandler","XtInsertRawEventHandler","XtInstallAccelerators","XtInstallAllAccelerators","XtIsApplicationShell","XtIsComposite","XtIsConstraint","XtIsManaged","XtIsObject","XtIsOverrideShell","XtIsRealized","XtIsRectObj","XtIsSensitive","XtIsSessionShell","XtIsShell","XtIsSubclass","XtIsTopLevelShell","XtIsTransientShell","XtIsVendorShell","XtIsWMShell","XtIsWidget","XtKeysymToKeycodeList","XtLastEventProcessed","XtLastTimestampProcessed","XtListPosition","XtMainLoop","XtMakeGeometryRequest","XtMakeResizeRequest","XtMalloc","XtManageChild","XtManageChildren","XtMapWidget","XtMenuPopupAction","XtMergeArgLists","XtMoveWidget","XtName","XtNameToWidget","XtNewString","XtNextEvent","XtNoticeSignal","XtOpenApplication","XtOpenDisplay","XtOverrideTranslations","XtOwnSelection","XtOwnSelectionIncremental","XtParent","XtParseAcceleratorTable","XtParseTranslationTable","XtPeekEvent","XtPending","XtPopdown","XtPopup","XtPopupSpringLoaded","XtProcessEvent","XtProcessLock","XtProcessUnlock","XtQueryGeometry","XtRealizeWidget","XtRealloc","XtRegisterCaseConverter","XtRegisterDrawable","XtRegisterExtensionSelector","XtRegisterGrabAction","XtReleaseGC","XtReleasePropertyAtom","XtRemoveActionHook","XtRemoveAllCallbacks","XtRemoveBlockHook","XtRemoveCallback","XtRemoveCallbacks","XtRemoveEventHandler","XtRemoveEventTypeHandler","XtRemoveGrab","XtRemoveInput","XtRemoveRawEventHandler","XtRemoveSignal","XtRemoveTimeOut","XtRemoveWorkProc","XtReservePropertyAtom","XtResizeWidget","XtResizeWindow","XtResolvePathname","XtResource","XtResourceList","XtScreen","XtScreenDatabase","XtScreenOfObject","XtSendSelectionRequest","XtSessionGetToken","XtSessionReturnToken","XtSetErrorHandler","XtSetErrorMsgHandler","XtSetEventDispatcher","XtSetKeyTranslator","XtSetKeyboardFocus","XtSetLanguageProc","XtSetMappedWhenManaged","XtSetMultiClickTime","XtSetSelectionParameters","XtSetSelectionTimeout","XtSetSensitive","XtSetSubvalues","XtSetTypeConverter","XtSetValues","XtSetWMColormapWindows","XtSetWarningHandler","XtSetWarningMsgHandler","XtStringConversionWarning","XtSuperclass","XtToolkitInitialize","XtToolkitThreadInitialize","XtTranslateCoords","XtTranslateKey","XtTranslateKeycode","XtTranslations","XtUngrabButton","XtUngrabKey","XtUngrabKeyboard","XtUngrabPointer","XtUninstallTranslations","XtUnmanageChild","XtUnmanageChildren","XtUnmapWidget","XtUnrealizeWidget","XtUnregisterDrawable","XtVaAppCreateShell","XtVaAppInitialize","XtVaCreateArgsList","XtVaCreateManagedWidget","XtVaCreatePopupShell","XtVaCreateWidget","XtVaGetApplicationResources","XtVaGetSubresources","XtVaGetSubvalues","XtVaGetValues","XtVaOpenApplication","XtVaSetSubvalues","XtVaSetValues","XtWarning","XtWarningMsg","XtWidgetGeometry","XtWidgetToApplicationContext","XtWindow","XtWindowOfObject","XtWindowToWidget","_TranslationData","_WidgetClassRec","_WidgetRec","_XtActionsRec","_XtAppStruct","_XtCallbackRec","_XtCheckpointTokenRec","_XtResource","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","from","from","from","from","from","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","into","into","into","into","into","open","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","XTestCompareCurrentCursorWithWindow","XTestCompareCursorWithWindow","XTestDiscard","XTestFakeButtonEvent","XTestFakeDeviceButtonEvent","XTestFakeDeviceKeyEvent","XTestFakeDeviceMotionEvent","XTestFakeKeyEvent","XTestFakeMotionEvent","XTestFakeProximityEvent","XTestFakeRelativeMotionEvent","XTestGrabControl","XTestQueryExtension","XTestSetGContextOfGC","XTestSetVisualIDOfVisual","Xf86vmode","borrow","borrow_mut","from","into","open","try_from","try_into","type_id"],"q":[[0,"x11_dl"],[24,"x11_dl::dpms"],[49,"x11_dl::error"],[86,"x11_dl::glx"],[246,"x11_dl::glx::arb"],[254,"x11_dl::glx::ext"],[256,"x11_dl::keysym"],[1570,"x11_dl::sync"],[1805,"x11_dl::xcursor"],[2045,"x11_dl::xf86vmode"],[2197,"x11_dl::xfixes"],[2311,"x11_dl::xft"],[2604,"x11_dl::xinerama"],[2661,"x11_dl::xinput"],[2882,"x11_dl::xinput2"],[3647,"x11_dl::xlib"],[8080,"x11_dl::xlib_xcb"],[8102,"x11_dl::xmd"],[8112,"x11_dl::xmu"],[8316,"x11_dl::xpresent"],[8479,"x11_dl::xrandr"],[9232,"x11_dl::xrecord"],[9389,"x11_dl::xrender"],[9977,"x11_dl::xshm"],[10036,"x11_dl::xss"],[10115,"x11_dl::xt"],[10540,"x11_dl::xtest"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeeturns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","of event","","","","","","","","","","","Display the event was read from","drawable of request","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","ShmReqCode","X_ShmPutImage","the offset into ShmSeg used in the request","","how the server should attach it","true if this came from a SendEvent request","of last request processed by server","address in client","kernel id","the ShmSeg used in the request","resource id","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","",""],"if":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[],[[3,[1,2]]]],[[],3],[[],3],[[],4],0,0,0,0,[5,6],[[]],[[]],[[]],[[]],[2,2],[5,5],[[]],[[]],[2,6],[2,6],[[5,5],7],[[],7],[[2,8],[[3,[9]]]],[[2,8],10],[[5,8],10],[[]],[[]],[[5,11]],[[]],[[]],[2,5],[[5,12],2],[13],[[]],[[]],[[],12],[[],3],[[],3],[[],3],[[],3],[[],4],[[],4],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[],[[3,[14,2]]]],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],4],[[],4],[[],4],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[15,15],[16,16],[17,17],[18,18],[19,19],[20,20],[21,21],[22,22],[23,23],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[15,8],10],[[16,8],10],[[17,8],10],[[18,8],10],[[19,8],10],[[20,8],10],[[21,8],10],[[22,8],10],[[23,8],10],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[],[[3,[24,2]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],0,0,0,0,[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[25,25],[26,26],[27,27],[28,28],[29,29],[30,30],[31,31],[32,32],[33,33],[34,34],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,[[25,8],10],[[26,8],10],[[27,8],10],[[28,8],10],[[29,8],10],[[30,8],10],[[31,8],10],[[32,8],10],[[33,8],10],[[34,8],10],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,[[],[[3,[35,2]]]],0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],0,0,[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[36,36],[37,37],[38,38],[39,39],[40,40],[41,41],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[37,37],7],0,0,[[36,8],10],[[37,8],10],[[38,8],10],[[39,8],10],[[40,8],10],[[41,8],10],0,[[]],[[]],[[]],[[]],[[]],[[]],[42,41],[[]],[42,41],0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,[[],[[3,[43,2]]]],0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],0,[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[44,44],[45,45],[46,46],[[]],[[]],[[]],0,0,0,0,0,[[44,44],7],[[45,45],7],[[46,46],7],[[44,8],10],[[45,8],10],[[46,8],10],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],0,[[],[[3,[47,2]]]],0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],4],[[],4],[[],4],[[],4],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[48,48],[49,49],[50,50],[51,51],[52,52],[53,53],[54,54],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[48,48],7],[[49,49],7],[[50,50],7],[[51,51],7],[[52,52],7],[[53,53],7],[[54,54],7],[[48,8],10],[[49,8],10],[[50,8],10],[[51,8],10],[[52,8],10],[[53,8],10],[[54,8],10],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[],[[3,[55,2]]]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[56,56],[57,57],[[]],[[]],[[56,56],7],[[57,57],7],0,[[56,8],10],[[57,8],10],[[]],[[]],[[]],0,0,[[]],[[]],[[]],[[],[[3,[58,2]]]],0,0,[[]],[[]],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],4],[[],4],[[],4],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[59,59],[60,60],[61,61],[62,62],[63,63],[64,64],[65,65],[66,66],[67,67],[68,68],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,[[59,59],7],[[60,60],7],[[61,61],7],[[62,62],7],[[63,63],7],[[64,64],7],[[65,65],7],[[66,66],7],[[67,67],7],[[68,68],7],0,[[59,8],10],[[60,8],10],[[61,8],10],[[62,8],10],[[63,8],10],[[64,8],10],[[65,8],10],[[66,8],10],[[67,8],10],[[68,8],10],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,[[],[[3,[69,2]]]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],0,[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[71,[70]],72]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[71,[70]],72],7],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[71,[70]],72]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[73,74],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[73,75],[73,76],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,[75,75],[77,77],[76,76],[78,78],[73,73],[79,79],[80,80],[81,81],[82,82],[83,83],[84,84],[85,85],[86,86],[87,87],[88,88],[89,89],[90,90],[91,91],[92,92],[93,93],[94,94],[95,95],[96,96],[97,97],[98,98],[99,99],[100,100],[101,101],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],75],[[],77],[[],76],[[],78],[[],73],[[],79],[[],80],[[],81],[[],82],[[],83],[[],84],[[],85],[[],86],[[],87],[[],88],[[],89],[[],90],[[],91],[[],92],[[],93],[[],94],[[],95],[[],96],[[],97],[[],98],[[],99],[[],100],[[],101],[73,78],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[75,8],10],[[77,8],10],[[76,8],10],[[78,8],10],[[73,8],10],[[79,8],10],[[80,8],10],[[81,8],10],[[82,8],10],[[83,8],10],[[84,8],10],[[85,8],10],[[86,8],10],[[87,8],10],[[88,8],10],[[89,8],10],[[90,8],10],[[91,8],10],[[92,8],10],[[93,8],10],[[94,8],10],[[95,8],10],[[96,8],10],[[97,8],10],[[98,8],10],[[99,8],10],[[100,8],10],[[101,8],10],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],[[3,[102,2]]]],0,0,0,[73,77],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[103,[[71,[104]]]],[103,[[71,[104]]]],[103,[[71,[105]]]],[103,[[71,[105]]]],[42,106],[42,107],[42,108],[42,109],[42,110],[42,111],[42,112],[42,113],[42,114],[42,41],[42,115],[42,116],[42,117],[42,118],[42,119],[42,120],[42,121],[42,122],[42,123],[42,124],[42,125],[42,126],[42,127],[42,128],[42,129],[42,130],[42,131],[42,132],[42,133],[42,134],[42,135],[42,136],[42,137],[42,138],[42,139],[42,140],[42,141],[42,142],[42,143],[42,144],[42,145],[42,146],[103,[[71,[147]]]],[103,[[71,[70]]]],[103,[[71,[148]]]],[103,[[71,[105]]]],[103,[[71,[149]]]],[103,[[71,[150]]]],[42,113],[42,118],[42,128],[42,140],[42,115],[42,141],[42,135],[42,132],[42,143],[42,142],[42,120],[42,119],[42,108],[42,121],[42,131],[42,106],[42,107],[42,125],[42,111],[42,112],[42,145],[42,129],[42,114],[42,110],[42,139],[42,133],[42,146],[42,136],[42,109],[42,137],[42,127],[42,41],[42,130],[42,124],[42,123],[42,134],[42,122],[42,126],[42,116],[42,138],[42,144],[42,117],[103,[[71,[147]]]],[103,[[71,[150]]]],[103,[[71,[149]]]],[103,[[71,[70]]]],[103,[[71,[148]]]],[103,[[71,[105]]]],[103,[[71,[147]]]],[103,[[71,[147]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[42,42],[145,145],[114,114],[133,133],[115,115],[135,135],[137,137],[111,111],[120,120],[118,118],[132,132],[144,144],[136,136],[106,106],[109,109],[134,134],[112,112],[113,113],[142,142],[124,124],[139,139],[146,146],[107,107],[131,131],[119,119],[108,108],[130,130],[122,122],[117,117],[128,128],[141,141],[129,129],[151,151],[152,152],[153,153],[154,154],[155,155],[156,156],[157,157],[158,158],[159,159],[160,160],[161,161],[162,162],[163,163],[164,164],[165,165],[166,166],[167,167],[168,168],[169,169],[170,170],[171,171],[172,172],[173,173],[174,174],[175,175],[176,176],[177,177],[178,178],[179,179],[180,180],[181,181],[182,182],[183,183],[143,143],[184,184],[185,185],[186,186],[187,187],[188,188],[189,189],[190,190],[191,191],[192,192],[193,193],[194,194],[195,195],[196,196],[197,197],[198,198],[199,199],[200,200],[201,201],[202,202],[203,203],[204,204],[205,205],[206,206],[207,207],[208,208],[209,209],[210,210],[211,211],[212,212],[213,213],[214,214],[215,215],[216,216],[217,217],[103,103],[218,218],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],103],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[145,145],7],[[114,114],7],[[133,133],7],[[115,115],7],[[135,135],7],[[137,137],7],[[111,111],7],[[120,120],7],[[118,118],7],[[132,132],7],[[144,144],7],[[136,136],7],[[106,106],7],[[109,109],7],[[134,134],7],[[112,112],7],[[113,113],7],[[142,142],7],[[124,124],7],[[139,139],7],[[146,146],7],[[107,107],7],[[131,131],7],[[119,119],7],[[108,108],7],[[130,130],7],[[122,122],7],[[117,117],7],[[128,128],7],[[141,141],7],[[129,129],7],[[151,151],7],[[152,152],7],[[153,153],7],[[154,154],7],[[155,155],7],[[156,156],7],[[157,157],7],[[158,158],7],[[159,159],7],[[160,160],7],[[161,161],7],[[162,162],7],[[163,163],7],[[164,164],7],[[165,165],7],[[166,166],7],[[167,167],7],[[168,168],7],[[169,169],7],[[170,170],7],[[171,171],7],[[172,172],7],[[173,173],7],[[174,174],7],[[175,175],7],[[176,176],7],[[177,177],7],[[178,178],7],[[179,179],7],[[180,180],7],[[181,181],7],[[182,182],7],[[183,183],7],[[143,143],7],[[184,184],7],[[185,185],7],[[186,186],7],[[187,187],7],[[188,188],7],[[189,189],7],[[190,190],7],[[191,191],7],[[192,192],7],[[193,193],7],[[194,194],7],[[195,195],7],[[196,196],7],[[197,197],7],[[198,198],7],[[199,199],7],[[200,200],7],[[201,201],7],[[202,202],7],[[203,203],7],[[204,204],7],[[205,205],7],[[206,206],7],[[207,207],7],[[208,208],7],[[209,209],7],[[210,210],7],[[211,211],7],[[212,212],7],[[213,213],7],[[214,214],7],[[217,217],7],[[103,103],7],[[218,218],7],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[42,8],10],[[145,8],10],[[114,8],10],[[133,8],10],[[115,8],10],[[135,8],10],[[137,8],10],[[111,8],10],[[120,8],10],[[118,8],10],[[132,8],10],[[144,8],10],[[136,8],10],[[106,8],10],[[109,8],10],[[134,8],10],[[112,8],10],[[113,8],10],[[142,8],10],[[124,8],10],[[139,8],10],[[146,8],10],[[107,8],10],[[131,8],10],[[119,8],10],[[108,8],10],[[130,8],10],[[122,8],10],[[117,8],10],[[128,8],10],[[141,8],10],[[129,8],10],[[151,8],10],[[152,8],10],[[153,8],10],[[154,8],10],[[155,8],10],[[156,8],10],[[157,8],10],[[158,8],10],[[159,8],10],[[160,8],10],[[161,8],10],[[162,8],10],[[163,8],10],[[164,8],10],[[165,8],10],[[166,8],10],[[167,8],10],[[168,8],10],[[169,8],10],[[170,8],10],[[171,8],10],[[172,8],10],[[173,8],10],[[174,8],10],[[175,8],10],[[176,8],10],[[177,8],10],[[178,8],10],[[179,8],10],[[180,8],10],[[181,8],10],[[182,8],10],[[183,8],10],[[143,8],10],[[184,8],10],[[185,8],10],[[186,8],10],[[187,8],10],[[188,8],10],[[189,8],10],[[190,8],10],[[191,8],10],[[192,8],10],[[193,8],10],[[194,8],10],[[195,8],10],[[196,8],10],[[197,8],10],[[198,8],10],[[199,8],10],[[200,8],10],[[201,8],10],[[202,8],10],[[203,8],10],[[204,8],10],[[205,8],10],[[206,8],10],[[207,8],10],[[208,8],10],[[209,8],10],[[210,8],10],[[211,8],10],[[212,8],10],[[213,8],10],[[214,8],10],[[217,8],10],[[103,8],10],[[218,8],10],0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[145,42],[129,42],[116,42],[136,42],[126,42],[143,42],[139,42],[107,42],[142,42],[125,42],[125,42],[143,42],[109,42],[138,42],[132,42],[126,42],[121,42],[138,42],[110,42],[106,42],[41,42],[111,42],[108,42],[144,42],[106,42],[124,42],[117,42],[107,42],[120,42],[140,42],[122,42],[119,42],[118,42],[146,42],[132,42],[133,42],[144,42],[141,42],[137,42],[113,42],[115,42],[115,42],[116,42],[134,42],[127,42],[140,42],[117,42],[119,42],[109,42],[124,42],[128,42],[123,42],[142,42],[112,42],[128,42],[118,42],[135,42],[110,42],[141,42],[146,42],[[]],[112,42],[139,42],[114,42],[129,42],[137,42],[130,42],[122,42],[131,42],[108,42],[131,42],[123,42],[127,42],[121,42],[136,42],[111,42],[41,42],[133,42],[114,42],[113,42],[135,42],[145,42],[130,42],[120,42],[134,42],[42,145],[42,145],[[]],[42,114],[[]],[42,114],[42,133],[42,133],[[]],[[]],[42,115],[42,115],[[]],[42,135],[42,135],[[]],[42,137],[42,137],[42,111],[42,111],[[]],[42,120],[42,120],[[]],[42,118],[42,118],[[]],[42,132],[42,132],[[]],[[]],[42,144],[42,144],[[]],[42,136],[42,136],[42,106],[[]],[42,106],[42,109],[42,109],[[]],[42,134],[[]],[42,134],[42,112],[[]],[42,112],[[]],[42,113],[42,113],[42,142],[[]],[42,142],[42,124],[42,124],[[]],[42,139],[[]],[42,139],[42,146],[[]],[42,146],[42,107],[[]],[42,107],[42,131],[[]],[42,131],[42,119],[[]],[42,119],[42,108],[[]],[42,108],[42,130],[[]],[42,130],[[]],[42,122],[42,122],[42,117],[[]],[42,117],[42,128],[[]],[42,128],[42,141],[42,141],[[]],[[]],[42,129],[42,129],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[42,143],[[]],[42,143],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[219,[70]]],103],[[[219,[147]]],103],[[[219,[148]]],103],[[[219,[150]]],103],[[[219,[149]]],103],[[[219,[105]]],103],[[]],0,0,0,0,0,0,[[103,220],104],[[103,220],105],0,[[103,220],147],[42,74],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],103],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],[[3,[221,2]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[103,220,104]],[[103,220,105]],[[103,220,147]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[3,[222,2]]]],[[],3],[[],3],[[],3],[[],3],[[],4],[[],4],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[3,[223,2]]]],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[224,224],[225,225],[226,226],[227,227],[228,228],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[224,8],10],[[225,8],10],[[226,8],10],[[227,8],10],[[228,8],10],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,[[],[[3,[229,2]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],0,0,0,0,[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[230,230],[231,231],[232,232],[233,233],[234,234],[235,235],[236,236],[237,237],[238,238],[239,239],[240,240],[241,241],[116,116],[110,110],[121,121],[127,127],[138,138],[125,125],[123,123],[126,126],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[230,230],7],[[231,231],7],[[232,232],7],[[233,233],7],[[234,234],7],[[235,235],7],[[236,236],7],[[237,237],7],[[238,238],7],[[239,239],7],[[240,240],7],[[241,241],7],[[116,116],7],[[110,110],7],[[121,121],7],[[127,127],7],[[138,138],7],[[125,125],7],[[123,123],7],[[126,126],7],[[230,8],10],[[231,8],10],[[232,8],10],[[233,8],10],[[234,8],10],[[235,8],10],[[236,8],10],[[237,8],10],[[238,8],10],[[239,8],10],[[240,8],10],[[241,8],10],[[116,8],10],[[110,8],10],[[121,8],10],[[127,8],10],[[138,8],10],[[125,8],10],[[123,8],10],[[126,8],10],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[42,116],[42,116],[[]],[42,110],[42,110],[42,121],[[]],[42,121],[[]],[42,127],[42,127],[42,138],[[]],[42,138],[42,125],[[]],[42,125],[42,123],[[]],[42,123],[42,126],[[]],[42,126],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],[[3,[242,2]]]],[[],[[3,[243,2]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],0,0,0,0,0,0,0,0,[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,[244,244],[245,245],[246,246],[247,247],[248,248],[249,249],[250,250],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,[[244,244],7],[[245,245],7],[[246,246],7],[[247,247],7],[[248,248],7],[[249,249],7],[[250,250],7],0,0,0,0,0,0,0,[[244,8],10],[[245,8],10],[[246,8],10],[[247,8],10],[[248,8],10],[[249,8],10],[[250,8],10],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[],[[3,[251,2]]]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,[252,252],[253,253],[254,254],[255,255],[256,256],[257,257],[258,258],[259,259],[260,260],[261,261],[262,262],[263,263],[264,264],[265,265],[266,266],[267,267],[268,268],[269,269],[270,270],[271,271],[272,272],[273,273],[274,274],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,[[252,252],7],[[253,253],7],[[254,254],7],[[255,255],7],[[256,256],7],[[257,257],7],[[258,258],7],[[259,259],7],[[260,260],7],[[261,261],7],[[262,262],7],[[263,263],7],[[264,264],7],[[265,265],7],[[266,266],7],[[267,267],7],[[268,268],7],[[269,269],7],[[270,270],7],[[271,271],7],[[272,272],7],[[273,273],7],[[274,274],7],0,[[252,8],10],[[253,8],10],[[254,8],10],[[255,8],10],[[256,8],10],[[257,8],10],[[258,8],10],[[259,8],10],[[260,8],10],[[261,8],10],[[262,8],10],[[263,8],10],[[264,8],10],[[265,8],10],[[266,8],10],[[267,8],10],[[268,8],10],[[269,8],10],[[270,8],10],[[271,8],10],[[272,8],10],[[273,8],10],[[274,8],10],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,[[],[[3,[275,2]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],0,[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[276,276],[277,277],[[]],[[]],0,0,[[276,276],7],[[277,277],7],[[276,8],10],[[277,8],10],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[],[[3,[278,2]]]],0,0,0,0,0,0,0,[[]],[[]],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],4],[[],4],[[],4],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[279,279],[140,140],[[]],[[]],0,[[279,279],7],[[140,140],7],0,[[279,8],10],[[140,8],10],0,[[]],[[]],[[]],[42,140],[42,140],0,[[]],[[]],[[]],0,0,[[],[[3,[280,2]]]],0,0,0,0,0,0,0,[[]],[[]],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],0,[[],4],[[],4],[[],4],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[3,[281,2]]]],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[],[[3,[282,2]]]],[[],3],[[],3],[[],4]],"c":[],"p":[[3,"Xext"],[3,"OpenError"],[4,"Result"],[3,"TypeId"],[4,"OpenErrorKind"],[15,"str"],[15,"bool"],[3,"Formatter"],[3,"Error"],[6,"Result"],[8,"Hasher"],[3,"String"],[3,"Demand"],[3,"Glx"],[3,"XSyncAlarmError"],[3,"XSyncCounterError"],[3,"XSyncValue"],[3,"XSyncTrigger"],[3,"XSyncWaitCondition"],[3,"XSyncAlarmAttributes"],[3,"XSyncCounterNotifyEvent"],[3,"XSyncAlarmNotifyEvent"],[3,"XSyncSystemCounter"],[3,"Xext"],[3,"_XcursorAnimate"],[3,"_XcursorChunkHeader"],[3,"_XcursorComment"],[3,"_XcursorComments"],[3,"_XcursorCursors"],[3,"_XcursorFile"],[3,"_XcursorFileHeader"],[3,"_XcursorFileToc"],[3,"_XcursorImage"],[3,"_XcursorImages"],[3,"Xcursor"],[3,"XF86VidModeGamma"],[3,"XF86VidModeModeInfo"],[3,"XF86VidModeModeLine"],[3,"XF86VidModeMonitor"],[3,"XF86VidModeSyncRange"],[3,"XF86VidModeNotifyEvent"],[19,"XEvent"],[3,"Xf86vmode"],[3,"XFixesSelectionNotifyEvent"],[3,"XFixesCursorNotifyEvent"],[3,"XFixesCursorImage"],[3,"Xlib"],[3,"XftFont"],[3,"XftColor"],[3,"XftCharSpec"],[3,"XftCharFontSpec"],[3,"XftFontSet"],[3,"XftGlyphSpec"],[3,"XftGlyphFontSpec"],[3,"Xft"],[3,"XineramaScreenInfo"],[3,"XPanoramiXInfo"],[3,"Xlib"],[3,"XDevice"],[3,"XDeviceControl"],[3,"XDeviceInfo"],[3,"XDeviceState"],[3,"XDeviceTimeCoord"],[3,"XExtensionVersion"],[3,"XFeedbackControl"],[3,"XFeedbackState"],[3,"XInputClass"],[3,"XInputClassInfo"],[3,"XInput"],[6,"c_uchar"],[15,"slice"],[15,"i32"],[3,"XIAnyHierarchyChangeInfo"],[6,"c_int"],[3,"XIAddMasterInfo"],[3,"XIAttachSlaveInfo"],[3,"XIRemoveMasterInfo"],[3,"XIDetachSlaveInfo"],[3,"XIModifierState"],[3,"XIButtonState"],[3,"XIValuatorState"],[3,"XIEventMask"],[3,"XIAnyClassInfo"],[3,"XIButtonClassInfo"],[3,"XIKeyClassInfo"],[3,"XIValuatorClassInfo"],[3,"XIScrollClassInfo"],[3,"XITouchClassInfo"],[3,"XIDeviceInfo"],[3,"XIGrabModifiers"],[3,"XIBarrierReleasePointerInfo"],[3,"XIEvent"],[3,"XIHierarchyInfo"],[3,"XIHierarchyEvent"],[3,"XIDeviceChangedEvent"],[3,"XIDeviceEvent"],[3,"XIRawEvent"],[3,"XIEnterEvent"],[3,"XIPropertyEvent"],[3,"XITouchOwnershipEvent"],[3,"XIBarrierEvent"],[3,"XInput2"],[3,"ClientMessageData"],[6,"c_char"],[6,"c_long"],[3,"XExposeEvent"],[3,"XMotionEvent"],[3,"XReparentEvent"],[3,"XFocusChangeEvent"],[3,"XRRNotifyEvent"],[3,"XConfigureEvent"],[3,"XGravityEvent"],[3,"XKeyEvent"],[3,"XButtonEvent"],[3,"XCirculateRequestEvent"],[3,"XRRScreenChangeNotifyEvent"],[3,"XSelectionEvent"],[3,"XCreateWindowEvent"],[3,"XPropertyEvent"],[3,"XConfigureRequestEvent"],[3,"XRROutputChangeNotifyEvent"],[3,"XSelectionClearEvent"],[3,"XRRProviderPropertyNotifyEvent"],[3,"XMapEvent"],[3,"XRRProviderChangeNotifyEvent"],[3,"XRRResourceChangeNotifyEvent"],[3,"XRRCrtcChangeNotifyEvent"],[3,"XSelectionRequestEvent"],[3,"XVisibilityEvent"],[3,"XResizeRequestEvent"],[3,"XNoExposeEvent"],[3,"XCrossingEvent"],[3,"XCirculateEvent"],[3,"XGraphicsExposeEvent"],[3,"XClientMessageEvent"],[3,"XErrorEvent"],[3,"XColormapEvent"],[3,"XRROutputPropertyNotifyEvent"],[3,"XMappingEvent"],[3,"XScreenSaverNotifyEvent"],[3,"XUnmapEvent"],[3,"XKeymapEvent"],[3,"XGenericEventCookie"],[3,"XDestroyWindowEvent"],[3,"XAnyEvent"],[3,"XMapRequestEvent"],[6,"c_short"],[6,"c_ushort"],[6,"c_ulong"],[6,"c_schar"],[3,"_XkbDesc"],[3,"_XkbKeyAliasRec"],[3,"_XkbKeyNameRec"],[3,"_XkbNamesRec"],[3,"_XkbStateRec"],[3,"XkbAnyEvent"],[3,"XkbNewKeyboardNotifyEvent"],[3,"_XkbMapNotifyEvent"],[3,"XkbStateNotifyEvent"],[3,"_XkbControlsNotifyEvent"],[3,"XkbIndicatorNotifyEvent"],[3,"_XkbNamesNotifyEvent"],[3,"XkbCompatMapNotifyEvent"],[3,"XkbBellNotifyEvent"],[3,"XkbActionMessageEvent"],[3,"XkbAccessXNotifyEvent"],[3,"_XkbExtensionDeviceNotifyEvent"],[3,"XkbEvent"],[3,"Depth"],[3,"Screen"],[3,"ScreenFormat"],[3,"Visual"],[3,"XArc"],[3,"XChar2b"],[3,"XCharStruct"],[3,"XClassHint"],[3,"XColor"],[3,"XComposeStatus"],[3,"XExtCodes"],[3,"XFontProp"],[3,"XFontSetExtents"],[3,"XFontStruct"],[3,"XGCValues"],[3,"XHostAddress"],[3,"XServerInterpretedAddress"],[3,"XIconSize"],[3,"XImage"],[3,"XKeyboardControl"],[3,"XKeyboardState"],[3,"XmbTextItem"],[3,"XModifierKeymap"],[3,"XOMCharSetList"],[3,"XPixmapFormatValues"],[3,"XPoint"],[3,"XRectangle"],[3,"XrmOptionDescRec"],[3,"XrmValue"],[3,"XSegment"],[3,"XSetWindowAttributes"],[3,"XSizeHints"],[3,"XStandardColormap"],[3,"XTextItem"],[3,"XTextItem16"],[3,"XTextProperty"],[3,"XTimeCoord"],[3,"XVisualInfo"],[3,"XwcTextItem"],[3,"XWindowAttributes"],[3,"XWindowChanges"],[3,"XWMHints"],[4,"XIMCaretDirection"],[4,"XIMCaretStyle"],[3,"XIMPreeditDrawCallbackStruct"],[3,"XIMPreeditCaretCallbackStruct"],[19,"XIMTextString"],[3,"XIMText"],[3,"AspectRatio"],[3,"ImageFns"],[15,"array"],[15,"usize"],[3,"Xlib"],[3,"Xlib_xcb"],[3,"Xmu"],[3,"XPresentNotify"],[3,"XPresentEvent"],[3,"XPresentIdleNotifyEvent"],[3,"XPresentCompleteNotifyEvent"],[3,"XPresentConfigureNotifyEvent"],[3,"Xpresent"],[3,"XRRScreenSize"],[3,"XRRModeInfo"],[3,"XRRScreenResources"],[3,"XRROutputInfo"],[3,"XRRPropertyInfo"],[3,"XRRCrtcInfo"],[3,"XRRCrtcGamma"],[3,"XRRCrtcTransformAttributes"],[3,"XRRPanning"],[3,"XRRProviderResources"],[3,"XRRProviderInfo"],[3,"XRRMonitorInfo"],[3,"Xrandr"],[3,"Xrandr_2_2_0"],[3,"XRecordClientInfo"],[3,"XRecordExtRange"],[3,"XRecordInterceptData"],[3,"XRecordRange"],[3,"XRecordRange8"],[3,"XRecordRange16"],[3,"XRecordState"],[3,"Xf86vmode"],[3,"_XAnimCursor"],[3,"_XCircle"],[3,"_XConicalGradient"],[3,"_XFilters"],[3,"_XGlyphElt8"],[3,"_XGlyphElt16"],[3,"_XGlyphElt32"],[3,"_XGlyphInfo"],[3,"_XIndexValue"],[3,"_XLinearGradient"],[3,"_XLineFixed"],[3,"_XPointDouble"],[3,"_XPointFixed"],[3,"_XRadialGradient"],[3,"XRenderColor"],[3,"XRenderDirectFormat"],[3,"XRenderPictFormat"],[3,"_XRenderPictureAttributes"],[3,"_XSpanFix"],[3,"_XTrap"],[3,"_XTrapezoid"],[3,"_XTriangle"],[3,"_XTransform"],[3,"Xrender"],[3,"XShmCompletionEvent"],[3,"XShmSegmentInfo"],[3,"Xext"],[3,"XScreenSaverInfo"],[3,"Xss"],[3,"Xt"],[3,"Xf86vmode"],[3,"__GLXcontextRec"],[3,"__GLXFBConfigRec"],[4,"FcEndian"],[4,"FcResult"],[4,"FT_FaceRec"],[4,"FcCharSet"],[4,"FcPattern"],[4,"XftFontInfo"],[4,"XftDraw"],[4,"XftPattern"],[4,"_XAnyClassinfo"],[3,"_XkbControls"],[4,"_XDisplay"],[4,"xError"],[4,"xEvent"],[4,"_XGC"],[4,"_XIC"],[4,"_XIM"],[4,"_XRegion"],[4,"_XOC"],[4,"_XOM"],[4,"_XrmHashBucketRec"],[3,"_XcmsCCC"],[3,"XcmsColor"],[3,"_XcmsColorSpace"],[3,"_XcmsFunctionSet"],[3,"_XkbAction"],[3,"_XkbBounds"],[3,"_XkbChanges"],[3,"_XkbClientMapRec"],[3,"_XkbColor"],[3,"_XkbComponentList"],[3,"_XkbComponentNames"],[3,"_XkbControlsChanges"],[3,"_XkbControlsNotify"],[3,"_XkbDeviceChanges"],[3,"_XkbDeviceInfo"],[3,"_XkbDeviceLedInfo"],[3,"_XkbDoodad"],[3,"_XkbExtensionDeviceNotify"],[3,"_XkbGeometry"],[3,"_XkbGeometrySizes"],[3,"_XkbIndicatorMapRec"],[3,"_XkbKey"],[3,"_XkbKeyType"],[3,"_XkbMapChanges"],[3,"_XkbMods"],[3,"_XkbNameChanges"],[3,"_XkbNamesNotify"],[3,"_XkbOutline"],[3,"_XkbOverlay"],[3,"_XkbOverlayKey"],[3,"_XkbOverlayRow"],[3,"_XkbProperty"],[3,"_XkbRow"],[3,"_XkbSection"],[3,"_XkbServerMapRec"],[3,"_XkbShape"],[3,"_XkbSymInterpretRec"],[3,"_XkbCompatMapRec"],[3,"_XkbIndicatorRec"],[4,"XkbKbdDpyStateRec"],[3,"XExtData"],[3,"XIMCallback"],[3,"XICCallback"],[4,"XEventQueueOwner"],[3,"_AtomRec"],[3,"_XmuArea"],[3,"_XmuDisplayQueue"],[3,"_XmuDisplayQueueEntry"],[3,"_XmuScanline"],[3,"_XmuSegment"],[3,"_XmuWidgetNode"],[3,"XRRScreenConfiguration"],[3,"Arg"],[3,"SubstitutionRec"],[3,"_TranslationData"],[3,"_WidgetClassRec"],[3,"_WidgetRec"],[3,"_XtActionsRec"],[3,"_XtAppStruct"],[3,"_XtCallbackRec"],[3,"_XtCheckpointTokenRec"],[3,"XtConvertArgRec"],[3,"_XtResource"],[3,"XtWidgetGeometry"]]},\
"xcursor":{"doc":"A crate to load cursor themes, and parse XCursor files.","t":"DLLLLLLLLLLLALLLLDLLLLMLLLLLMLFMMMLLLLLMMM","n":["CursorTheme","borrow","borrow_mut","clone","clone_into","eq","equivalent","fmt","from","into","load","load_icon","parser","to_owned","try_from","try_into","type_id","Image","borrow","borrow_mut","clone","clone_into","delay","eq","equivalent","fmt","fmt","from","height","into","parse_xcursor","pixels_argb","pixels_rgba","size","to_owned","to_string","try_from","try_into","type_id","width","xhot","yhot"],"q":[[0,"xcursor"],[17,"xcursor::parser"]],"d":["A cursor theme.","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Search for a theme with the given name in the given search …","Try to load an icon from the theme. If the icon is not …","A module implementing XCursor file parsing.","","","","","A struct representing an image. Pixels are in ARGB format, …","","","","","The amount of time (in milliseconds) that this image …","","","","","Returns the argument unchanged.","The actual height of the image. Doesn’t need to match …","Calls <code>U::from(self)</code>.","Parse an XCursor file into its images.","A slice containing the pixels’ bytes, in ARGB format.","A slice containing the pixels’ bytes, in RGBA format …","The nominal size of the image.","","","","","","The actual width of the image. Doesn’t need to match <code>size</code>…","The X coordinate of the hotspot pixel (the pixel where the …","The Y coordinate of the hotspot pixel (the pixel where the …"],"i":[0,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,0,10,10,10,10,10,10,10,10,10,10,10,10,0,10,10,10,10,10,10,10,10,10,10,10],"f":[0,[[]],[[]],[1,1],[[]],[[1,1],2],[[],2],[[1,3],4],[[]],[[]],[5,1],[[1,5],[[7,[6]]]],0,[[]],[[],8],[[],8],[[],9],0,[[]],[[]],[10,10],[[]],0,[[10,10],2],[[],2],[[10,3],4],[[10,3],4],[[]],0,[[]],[[[12,[11]]],[[7,[[13,[10]]]]]],0,0,0,[[]],[[],14],[[],8],[[],8],[[],9],0,0,0],"c":[],"p":[[3,"CursorTheme"],[15,"bool"],[3,"Formatter"],[6,"Result"],[15,"str"],[3,"PathBuf"],[4,"Option"],[4,"Result"],[3,"TypeId"],[3,"Image"],[15,"u8"],[15,"slice"],[3,"Vec"],[3,"String"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
