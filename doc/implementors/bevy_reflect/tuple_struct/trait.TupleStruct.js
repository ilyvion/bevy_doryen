(function() {var implementors = {
"bevy_ecs":[["impl&lt;S&gt; <a class=\"trait\" href=\"bevy_reflect/tuple_struct/trait.TupleStruct.html\" title=\"trait bevy_reflect::tuple_struct::TupleStruct\">TupleStruct</a> for <a class=\"struct\" href=\"bevy_ecs/schedule/struct.NextState.html\" title=\"struct bevy_ecs::schedule::NextState\">NextState</a>&lt;S&gt;<span class=\"where fmt-newline\">where\n    <a class=\"enum\" href=\"https://doc.rust-lang.org/1.74.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;S&gt;: <a class=\"trait\" href=\"bevy_reflect/from_reflect/trait.FromReflect.html\" title=\"trait bevy_reflect::from_reflect::FromReflect\">FromReflect</a> + <a class=\"trait\" href=\"bevy_reflect/type_path/trait.TypePath.html\" title=\"trait bevy_reflect::type_path::TypePath\">TypePath</a>,\n    S: <a class=\"trait\" href=\"bevy_reflect/type_path/trait.TypePath.html\" title=\"trait bevy_reflect::type_path::TypePath\">TypePath</a> + <a class=\"trait\" href=\"bevy_ecs/schedule/trait.States.html\" title=\"trait bevy_ecs::schedule::States\">States</a>,</span>"],["impl&lt;S&gt; <a class=\"trait\" href=\"bevy_reflect/tuple_struct/trait.TupleStruct.html\" title=\"trait bevy_reflect::tuple_struct::TupleStruct\">TupleStruct</a> for <a class=\"struct\" href=\"bevy_ecs/schedule/struct.State.html\" title=\"struct bevy_ecs::schedule::State\">State</a>&lt;S&gt;<span class=\"where fmt-newline\">where\n    S: <a class=\"trait\" href=\"bevy_reflect/from_reflect/trait.FromReflect.html\" title=\"trait bevy_reflect::from_reflect::FromReflect\">FromReflect</a> + <a class=\"trait\" href=\"bevy_reflect/type_path/trait.TypePath.html\" title=\"trait bevy_reflect::type_path::TypePath\">TypePath</a> + <a class=\"trait\" href=\"bevy_ecs/schedule/trait.States.html\" title=\"trait bevy_ecs::schedule::States\">States</a>,</span>"]],
"bevy_reflect":[]
};if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()