searchState.loadedDescShard("uni_gl", 0, "Passed to getProgramParameter to get the number of …\nPassed to getProgramParamter to get the number of uniforms …\nPassed to getParameter to get the range of available …\nPassed to getParameter to get the current size of a point …\nPassed to depthFunction or stencilFunction to specify …\nPassed to depthFunction or stencilFunction to specify …\nto store vertex attributes\nPassed to getParameter to get the array buffer binding.\nPassed to getProgramParameter after calling attachShader …\nConstants passed to …\nPassed to cullFace to specify that only back faces should …\nPassed to enable/disable to turn on/off blending. Can also …\nPassed to getParameter to return a the current blend color.\nPassed to getParameter to get the current destination …\nPassed to getParameter to get the current destination RGB …\nConstants passed to WebGLRenderingContext.blendEquation() …\nPassed to getParameter to get the current RGB blend …\nPassed to getParameter to get the current alpha blend …\nConstants passed to WebGLRenderingContext.blendFunc() or …\nPassed to getParameter to get the current source alpha …\nPassed to getParameter to get the current destination RGB …\nPassed to bindBuffer or bufferData to specify the type of …\nConstants passed to WebGLRenderingContext.hint()\nPassed to frontFace to specify the front face of a polygon …\nPassed to frontFace to specify the front face of a polygon …\nPassed to clear to clear the current color buffer.\nPassed to getShaderParamter to get the status of the …\nPassed to blendFunc or blendFuncSeparate to specify a …\nPassed to blendFunc or blendFuncSeparate to specify a …\nReturned from getError.\nPassed to enable/disable to turn on/off culling. Can also …\nPassed to getParameter to get the current value of …\nConstants passed to WebGLRenderingContext.cullFace().\nPassed to getVertexAttrib to read back the current vertex …\nPassed to getShaderParamter to determine if a shader was …\nPassed to clear to clear the current depth buffer.\nPassed to getParameter to determine the current depth …\nPassed to getParameter to get the current depth function. …\nPassed to getParameter to return a length-2 array of …\nConstants passed to WebGLRenderingContext.depthFunc().\nPassed to enable/disable to turn on/off the depth test. …\nPassed to getParameter to determine if the depth write …\nPassed to enable/disable to turn on/off dithering. Can …\nThere is no preference for this behavior.\nPassed to blendFunc or blendFuncSeparate to multiply a …\nPassed to blendFunc or blendFuncSeparate to multiply a …\nPassed to bufferData as a hint about whether the contents …\nto store vertex array indices\nPassed to getParameter to get the current element array …\nPassed to depthFunction or stencilFunction to specify …\nPassed to depthFunction or stencilFunction to specify …\nConstants returned from WebGLRenderingContext.getError().\nThe most efficient behavior should be used.\nPassed to createShader to define a fragment shader.\nPassed to cullFace to specify that only front faces should …\nPassed to cullFace to specify that front and back faces …\nPassed to getParameter to determine the current value of …\nConstants passed to WebGLRenderingContext.frontFace().\nPassed to blendEquation or blendEquationSeparate to set an …\nPassed to blendEquation or blendEquationSeparate to …\nPassed to blendEquation or blendEquationSeparate to …\nuni-gl internal OpenGL context.\nHint for the quality of filtering when generating mipmap …\nPassed to depthFunction or stencilFunction to specify …\nPassed to depthFunction or stencilFunction to specify …\nPassed to depthFunction or stencilFunction to specify …\nPassed to depthFunction or stencilFunction to specify …\nConstants passed to WebGLRenderingContext.hint()\nwhether current OpenGL context is OpenGL ES (Embedded …\nReturned from getError.\nReturned from getError.\nReturned from getError.\nPassed to depthFunction or stencilFunction to specify …\nPassed to depthFunction or stencilFunction to specify …\nPassed to depthFunction or stencilFunction to specify …\nPassed to depthFunction or stencilFunction to specify …\nPassed to drawElements or drawArrays to draw lines. Each …\nPassed to drawElements or drawArrays to draw a connected …\nPassed to getParameter to get the current lineWidth (set …\nPassed to drawElements or drawArrays to draw lines. Each …\nPassed to getProgramParameter after calling linkProgram to …\nImplementation dependent number of maximum texture units. …\nThe maximum number of entries possible in the vertex …\nPassed to depthFunction or stencilFunction to specify …\nPassed to depthFunction or stencilFunction to specify …\nThe most correct or the highest quality option should be …\nReturned from getError.\nPassed to depthFunction or stencilFunction to specify …\nPassed to depthFunction or stencilFunction to specify …\nPassed to blendFunc or blendFuncSeparate to turn on a …\nPassed to blendFunc or blendFuncSeparate to specify one …\nPassed to blendFunc or blendFuncSeparate to specify one …\nPassed to blendFunc or blendFuncSeparate to multiply a …\nPassed to blendFunc or blendFuncSeparate to multiply a …\nPassed to blendFunc or blendFuncSeparate to multiply a …\nPassed to blendFunc or blendFuncSeparate to multiply a …\nReturned from getError.\nPacking of pixel data into memory. Can be 1, 2, 4, 8 …\nConstants passed to WebGLRenderingContext.getParameter() …\nConstants passed to WebGLRenderingContext.hint()\nPassed to drawElements or drawArrays to draw single points.\nPassed to enable/disable to turn on/off the polygon …\nPassed to drawElements or drawArrays to draw primitives.\nA DXT1-compressed image in an RGB image format.\nA DXT1-compressed image in an RGB image format with a …\nA DXT3-compressed image in an RGBA image format. Compared …\nA DXT5-compressed image in an RGBA image format. It also …\nPassed to enable/disable to turn on/off the alpha to …\nPassed to enable/disable to turn on/off the sample …\nReturns an Int32Array with four elements for the current …\nPassed to enable/disable to turn on/off the scissor test. …\nConstants passed to WebGLRenderingContext.createShader()\nConstants passed to WebGLRenderingContext.createShader()\nPassed to getBufferParameter to get a buffer’s size.\nPassed to blendFunc or blendFuncSeparate to multiply a …\nPassed to blendFunc or blendFuncSeparate to multiply a …\nPassed to blendFunc or blendFuncSeparate to multiply a …\nPassed to bufferData as a hint about whether the contents …\nPassed to clear to clear the current stencil buffer.\nConstants passed to WebGLRenderingContext.stencilOp().\nPassed to getParameter to get the value the stencil will …\nPassed to getParameter to get the current stencil fail …\nPassed to getParameter to get the current stencil …\nPassed to getParameter to get the current stencil fail …\nPassed to getParameter to get the current stencil fail …\nPassed to getParameter to get the reference value used for …\nConstants passed to WebGLRenderingContext.stencilFunc().\nPassed to enable/disable to turn on/off the stencil test. …\nPassed to bufferData as a hint about whether the contents …\nWebGLRenderingContext.texImage2D() “target” parameter\nWebGLRenderingContext.texParameterfi or …\nWebGLRenderingContext.texParameterfi “param” parameter\nWebGLRenderingContext.texParameterfi “param” parameter\nWebGLRenderingContext.texParameterfi “pname” parameter\nWebGLRenderingContext.texParameterfi “param” parameter\nWebGL 2.0 only\nPassed to drawElements or drawArrays to draw a connected …\nPassed to drawElements or drawArrays to draw a connected …\nPassed to drawElements or drawArrays to draw triangles. …\nConstants passed to WebGLRenderingContext.hint()\nUnpacking of pixel data from memory Can be 1, 2, 4, 8 …\nPassed to getBufferParameter to get the hint for the …\nPassed to getProgramParameter after calling …\nPassed to createShader to define a vertex shader\nConstants passed to …\nReturns an Int32Array with four elements for the current …\nPassed to blendFunc or blendFuncSeparate to turn off a …\nselect active texture unit\nattach a shader to a program. A program must have two …\nassociate a generic vertex attribute index with a named …\nbind a buffer to current state.\nbind a framebuffer to the current state\nbind a named 2D texture to a texturing target\nbind a named cube map texture to a texturing target\nbind a vertex array object to current state\nset the blend color\nset the RGB alpha blend equation\nspecify pixel arithmetic for RGB and alpha components …\nfills a buffer with data.\nupdate a subset of a buffer\nclear buffers to preset values\nspecify clear values for the color buffers\nspecify the clear value for the depth buffer\ncompile a shader\nspecify a two-dimensional texture image in a compressed …\ncreate a new OpenGL buffer\ncreate a new framebuffer\ncreate a program\ncreate a new shader.\ncreate a new texture object\ncreate a vertex array object\nspecify whether front- or back-facing polygons can be …\ndelete an existing buffer\ndestroy a framebuffer\ndestroy a texture object\ndestroy a vertex array object\nspecify the value used for depth buffer comparisons\nenable or disable writing into the depth buffer\ndisable GL capabilities.\nrender primitives from array data\nspecify which color buffers are to be drawn into\nrender primitives from indexed array data\nenable GL capabilities.\nenable a generic vertex attribute array\nattach a texture to a framebuffer\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\ngenerate mipmaps for current 2D texture\ngenerate mipmaps for current cube map texture\nreturn the location of an attribute variable\nreturn informations about current program\nreturn the location of a uniform variable\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nwhether this context is a WebGL 2.0 context\nlink a program\nset pixel storage modes\nread a block of pixels from the frame buffer\nopenGL internal reference\nset or replace the source code in a shader\nspecify a two-dimensional texture image\nset texture float parameters\nset texture integer parameters\nupdate a part of a two-dimensional texture subimage\nthis buffer is not bound to the current state anymore.\nunbind a framebuffer\ncurrent 2D texture is not bound to current state anymore\ncurrent cube map texture is not bound to current state …\ncurrent vertex array object is not bound to the current …\nspecify the value of a float uniform variable for the …\nspecify the value of an int uniform variable for the …\nspecify the value of a vec2 uniform variable for the …\nspecify the value of a vec3 uniform variable for the …\nspecify the value of a vec4 uniform variable for the …\nspecify the value of a mat2 uniform variable for the …\nspecify the value of a mat3 uniform variable for the …\nspecify the value of a mat4 uniform variable for the …\nbind a program to the current state.\ndefine an array of generic vertex attribute data\nset the viewport\nan OpenGL buffer created with <code>GLContext::create_buffer</code>.\nan OpenGL Framebuffer created with …\nan OpenGL shader created with <code>GLContext::create_shader</code>.\nThe OpenGL rendering context. This is the struct providing …\nan OpenGL shader created with <code>GLContext::create_shader</code>\nan OpenGL program created with <code>GLContext::create_program</code>.\nthe reference to a uniform (global GLSL variable) inside a …\nan OpenGL vertex array object created with …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\ncreate an OpenGL context.\nUtility function to print messages to stdout (native) or …")