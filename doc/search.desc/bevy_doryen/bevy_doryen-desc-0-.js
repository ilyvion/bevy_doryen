searchState.loadedDescShard("bevy_doryen", 0, "bevy_doryen is a Bevy plugin that lets you use Bevy with …\nRepresents any given button on a mouse.\nSet the console size to match the window size …\nCall the given function when the resize event is …\nEmitting this event causes bevy_doryen to return …\nThe Bevy Doryen plugin.\nDoryenPlugin settings.\nRuns first in the schedule. This is run by the <code>MainRender</code> …\nThis resource contains the values given by <code>fps</code> and …\nProvides access to the input events handled by the Doryen …\nAn iterator visiting all keys in arbitrary order.\nRuns last in the schedule. This is run by the <code>MainRender</code> …\nRepresents the left button on a mouse.\nThe schedule that contains the render logic that is …\nDefines the schedules to be run for the <code>Render</code> schedule, …\nRepresents the middle button on a mouse.\nRepresents buttons on a mouse.\nDo nothing when the window is resized. This is the default …\nThe schedule that contains logic that must run after <code>Render</code>…\nThe schedule that contains logic that must run before …\nThe schedule that contains render logic.\nInitializes the <code>Render</code> schedule, sub schedules, and …\nHow the <code>DoryenPlugin</code> reacts to the resize event from …\nResized event object. Whenever Doryen’s <code>resize</code> method is …\nRepresents the right button on a mouse.\nProvides access to the root console of the Doryen engine.\nWhen you want to change Doryen’s font path, emit an …\nThe <code>AppOptions</code> passed to the <code>DoryenApp</code>.\nThe value given by <code>average_fps</code> on the current update tick.\nWhether the window close button has been activated.\nRe-export of the Doryen library types.\nThe value given by <code>fps</code> on the current update tick.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the current status of the given key (true if …\nReturns true if the given key was pressed since the last …\nReturns true if the given key was released since the last …\nReturns an iterator over all the keys that were pressed …\nReturns an iterator over all the keys that were released …\nThe labels to run for the <code>MainRender</code> schedule (in the …\nReturns the current status of the given mouse button (true …\nWhich mouse buttons to request input data for from Doryen …\nReturns true if the given mouse button was pressed since …\nReturns true if the given mouse button was released since …\nReturns the current mouse position in console cells …\nConstructs a new <code>SetFontPath</code>\nConstructs a new <code>Capture</code>\nThe new height of the Doryen game window.\nThe new width of the Doryen game window.\nCommon imports\nThe previous height of the Doryen game window.\nThe previous width of the Doryen game window.\nWhat to do when the Doryen window is resized.\nA system that runs the “main render schedule”\nCharacters typed since last update.\nThis is the game application. It handles the creation of …\nSave a screenshot. parameter = file path. The file name …\nThis contains the data for a console (including the one …\nThis is the complete doryen-rs API provided to you by <code>App</code> …\nThis is the trait you must implement to update and render …\nend the program\nThis provides a common way to load files for both native …\nAn easy way to load PNG images and blit them on the console\nProvides information about user input. Possible values for …\nAn iterator visiting all keys in arbitrary order.\nWhat is returned by the <code>Engine::update</code> function\nfill an area with values\nset the character at a specific position (doesn’t change …\nreturn the average framerate since the start of the game\nset the background color at a specific position\nblit (draw) a console onto another one You can use …\nblit an image on a console\nblit an image on the console, using the subcell characters …\nblit an image on a console. See <code>Image::blit_2x</code>\nblit a region of this console onto another one. see …\nblit an image on a console\nfor fast reading of the characters values\nfor fast reading of the background colors\nfor fast reading of the characters colors\nfor fast writing of the characters values\nfor fast writing of the background colors\nfor fast writing of the characters colors\ncan change all properties of a console cell at once\nreturn true if the file is ready in memory\nfill the whole console with values\nWhether the window close button was clicked\nreturn the root console that you can use to draw things on …\nthe console height in characters. Default is 45\nthe console width in characters. Default is 80\nthe font to use. See <code>DoryenApi::set_font_path</code>. Default is …\nset the character color at a specific position\nreturn the current framerate\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nNative only. Might not work on every platforms. Default is …\nget the ascii code of a cell (if x,y inside the console)\nget the background color of a cell (if x,y inside the …\nretrieve the file content\nget the foreground color of a cell (if x,y inside the …\nreturn the current screen size\nReturns the image’s height in pixels or 0 if the image …\nCalled before the first game loop for one time …\nreturn the input API to check user mouse and keyboard input\nIntercepts clicks on the window close button. Can be …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nreturn the current status of a key (true if pressed)\nreturn true if a key was pressed since last update.\nreturn true if a key was released since last update.\nreturn an iterator over all the keys that were pressed …\nreturn an iterator over all the keys that were released …\nrequest to load a file. returns an id you can use with …\nLimit the number of frames per second to lower CPU …\nreturn the current status of a mouse button (true if …\nreturn true if a mouse button was pressed since last …\nreturn true if a mouse button was released since last …\nreturn the current mouse position in console cells …\ncreate a new offscreen console that you can blit on …\nCreate an image and load a PNG file. On the web platform, …\nCreate an empty image.\nget the color of a specific pixel inside the image\nwrite a string. If the string reaches the border of the …\nwrite a multi-color string. Foreground color is defined by …\nsets the color of a specific pixel inside the image\ndraw a rectangle, possibly filling it with a character.\nassociate a name with a color for this console. The color …\nThis is called before drawing the console on the screen. …\nWhether the game window can be resized. Default is true.\nThis is called when the size of the game window has …\nresizes the console\nthe game window height in pixels\nthe game window width in pixels\nreplace the current font by a new one. Put your font in …\nWhether the mouse cursor should be visible in the game …\ncharacters typed since last update\ncompute the length of a string containing color codes. …\nIf the image has already been loaded, return its size, …\nCheck if the image has been loaded. Since there’s no …\nset the character at a specific position (no boundary …\nset the background color at a specific position (no …\nset the character color at a specific position (no …\nget the ascii code of a cell (no boundary check)\nget the background color of a cell (no boundary check)\nget the foreground color of a cell (no boundary check)\nThis is called 60 times per second and is independant of …\nwhether framerate are limited by the screen frequency. On …\nReturns the image’s width in pixels or 0 if the image …\nthe title of the game window (only in native mode)")