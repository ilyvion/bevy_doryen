searchState.loadedDescShard("wayland_client", 0, "Client-side Wayland connector\nAnonymous interface\nEnum of possible argument in an event\nVec\nA handle to a proxy that has been attached to an event …\nEnum representing the possible reasons why connecting to …\nHolder of global dispatch-related data\nA connection to a wayland server\nSet of events associated to this interface\nAn event queue for protocol messages\nRawFd\nAn event filter\nfloat\nAn error that occurred trying to bind a global\nEvent provided to the user callback of GlobalManager\nA trait for implementation of the global advertisement\nAn utility to manage global objects\ni32\nThe description of a wayland interface\nThe FD provided in <code>WAYLAND_SOCKET</code> was invalid\nThe provided socket name is invalid\nWire representation of this MessageGroup\nA main handle to a proxy\nThe wrapper type for ObjectMap allowing the mapping of …\nA group of messages\nThe requested global was missing\nName of this interface\nA new global was created\nid of a newly created wayland object\nAny needed library was found, but the listening socket of …\nAn empty enum representing a MessageGroup with no messages\nThe library was compiled with the <code>dlopen</code> feature, and the …\nid of a wayland object\nA protocol error\nAn handle to a wayland proxy\nThis type only exists for type-level compatibility with …\nA token representing this event queue\nAn generic event\nA guard over a read intention.\nA global was removed\nSet of requests associated to this interface\nCString\nu32\nA wrapper for user data, able to store any type, and …\nMaximum supported version of this interface\nThe global advertised by the server has a lower version …\nThe <code>XDG_RUNTIME_DIR</code> variable is not set while it should be\nErase the actual type of this proxy\nArguments of the message\nBuild a C representation of this message\nAssign this object to given filter\nAttach this proxy to the event queue represented by this …\nPointer to the C representation of this interface\nGet a raw pointer to the underlying wayland object\nCancel the read\nRetrieve the child <code>Object</code> associated with this message if …\nThe error code associated with the error\nAttempt to connect to a wayland server using the contents …\nAttempt to connect to a wayland server socket with given …\nCreate a new event queue associated with this wayland …\nAttempt to recover the typed variant of an anonymous proxy\nAttempt to recover the typed variant of an anonymous proxy\nCreate a non-attached handle from this one\nDispatches events from the internal buffer.\nDispatches pending events from the internal buffer.\nAccess the <code>Display</code> of the connection\nCheck if the other proxy refers to the same underlying …\nA global was advertised but its version was lower than the …\nA global was advertised but its version was lower than the …\nGenerate an enum joining several objects events\nNon-blocking write to the server\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate a <code>Proxy</code> instance from a C pointer\nCreate a <code>Main</code> instance from a C pointer\nCreate a Display and from an external display\nAttempt to use an already connected unix socket on given …\nConstruct a message from its raw representation\nConstruct a message of this group from its C representation\nAccess the dispatch data knowing its type\nAttempt to access the wrapped user data\nUnusable method only existing for type-level compatibility\nRetrieve the file descriptor associated with the wayland …\nRetrieve the <code>wl_display</code> pointer\nUnusable method only existing for type-level compatibility\nUnusable method only existing for type-level compatibility\nConvenience macro to create a <code>GlobalManager</code> callback\nRetrieve the object id of this wayland object\nInstantiate a global with a specific version\nInstantiate a global from a version range\nInterface of the associated object\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nTurn this message into its raw representation\nCheck if the object associated with this proxy is still …\nWhether this message is a destructor\nCheck whether this proxy is managed by the library or not\nRetrieve the list of currently known globals\nThe message sent by the server describing the error\nName of the event\nCreate a new filter from given closure\nCreate a new UserData instance\nCreate a global manager handling a registry\nA new global of given interface has been instantiated and …\nCreate a global manager handling a registry with a callback\nThe id of the object that caused the error\nThe interface of the object that caused the error\nThe opcode of this message\nOpcode of the event\nPrepare an concurrent read\nRetrieve the last protocol error if any occured\nShorthand for assigning a closure to an object\nRead events\nReborrows this <code>DispatchData</code> to create a new one with the …\nSend a message to this filter\nSend a request creating an object through this object\nSets the UserData to a given value\nSets the UserData to a given threadsafe value\nThe minimal object version for which this message exists\nSynchronous roundtrip\nC-associated types\nCreate a new token associated with this event queue\nAccess the UserData associated to this object\nRetrieve the interface version of this wayland object …\nWrap a mutable reference\nId of the new global\nId of the removed global\nInterface of the new global\nInterface of the removed global\nMaximum supported version of the new global\ncontent for a wl_surface\ncallback object\nthe compositor singleton\ndata transfer device\ndata transfer interface\noffer to transfer data\noffer to transfer data\ncore global object\nkeyboard input device\ncompositor output region\npointer input device\nregion interface\nglobal registry object\ngroup of input devices\ncreate desktop-style surfaces\ndesktop-style metadata interface\nshared memory support\na shared memory pool\nsub-surface compositing\nsub-surface interface to a wl_surface\nan onscreen surface\ntouchscreen input device\ndestroy a buffer\nThe minimal object version supporting this event\nThe minimal object version supporting this request\ncompositor releases buffer\ndestroy a buffer\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nC-representation of the messages of this interface, for …\nC representation of this interface, for interop\nC-representation of the messages of this interface, for …\ndone event\nThe minimal object version supporting this event\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nC-representation of the messages of this interface, for …\nC representation of this interface, for interop\ncreate new region\ncreate new surface\nThe minimal object version supporting this request\nThe minimal object version supporting this request\ncreate new region\ncreate new surface\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nC representation of this interface, for interop\nC-representation of the messages of this interface, for …\nintroduce a new wl_data_offer\nend drag-and-drop session successfully\nThe minimal object version supporting this event\nThe minimal object version supporting this event\nThe minimal object version supporting this event\nThe minimal object version supporting this event\nThe minimal object version supporting this event\nThe minimal object version supporting this event\ninitiate drag-and-drop session\nend drag-and-drop session\ndrag-and-drop session motion\nThe minimal object version supporting this request\nThe minimal object version supporting this request\nThe minimal object version supporting this request\ndestroy data device\ngiven wl_surface has another role\nadvertise new selection\ncopy data to the selection\nstart drag-and-drop operation\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\ndestroy data device\ncopy data to the selection\nstart drag-and-drop operation\nC-representation of the messages of this interface, for …\nC representation of this interface, for interop\nC-representation of the messages of this interface, for …\nask action\ncopy action\ncreate a new data source\ndrag and drop actions\ncreate a new data device\nmove action\nno action\nThe minimal object version supporting this request\nThe minimal object version supporting this request\nReturns the set containing all flags.\nReturns the intersection between the two sets of flags.\nDisables all flags disabled in the set.\nReturns the union of the two sets of flags.\nAdds the set of flags.\nReturns the raw value of the flags currently stored.\nReturns the left flags, but with all the right flags …\nToggles the set of flags.\nReturns the complement of this set of flags.\nReturns <code>true</code> if all of the flags in <code>other</code> are contained …\ncreate a new data source\nReturns the difference between the flags in <code>self</code> and <code>other</code>.\nReturns an empty set of flags.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, preserving all …\ncreate a new data device\nInserts the specified flags in-place.\nReturns the intersection between the flags in <code>self</code> and …\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if all flags are currently set.\nReturns <code>true</code> if no flags are currently stored.\nReturns the complement of this set of flags.\nRemoves the specified flags in-place.\nInserts or removes the specified flags depending on the …\nReturns the set difference of the two sets of flags.\nDisables all flags enabled in the set.\nReturns the symmetric difference between the flags in <code>self</code> …\nToggles the specified flags in-place.\nReturns the union of between the flags in <code>self</code> and <code>other</code>.\nC representation of this interface, for interop\nC-representation of the messages of this interface, for …\naccept one of the offered mime types\nnotify the selected action\ndestroy data offer\nThe minimal object version supporting this event\nThe minimal object version supporting this event\nThe minimal object version supporting this event\nthe offer will no longer be used\naction argument has an invalid value\naction mask contains invalid values\nfinish request was called untimely\noffer doesn’t accept this request\nadvertise offered mime type\nThe minimal object version supporting this request\nThe minimal object version supporting this request\nThe minimal object version supporting this request\nThe minimal object version supporting this request\nThe minimal object version supporting this request\nrequest that the data is transferred\nset the available/preferred drag-and-drop actions\nnotify the source-side available actions\naccept one of the offered mime types\ndestroy data offer\nthe offer will no longer be used\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nrequest that the data is transferred\nset the available/preferred drag-and-drop actions\nC-representation of the messages of this interface, for …\nC representation of this interface, for interop\nC-representation of the messages of this interface, for …\nnotify the selected action\nselection was cancelled\ndestroy the data source\nthe drag-and-drop operation physically finished\nthe drag-and-drop operation concluded\nThe minimal object version supporting this event\nThe minimal object version supporting this event\nThe minimal object version supporting this event\nThe minimal object version supporting this event\nThe minimal object version supporting this event\nThe minimal object version supporting this event\naction mask contains invalid values\nsource doesn’t accept this request\nadd an offered mime type\nThe minimal object version supporting this request\nThe minimal object version supporting this request\nThe minimal object version supporting this request\nsend the data\nset the available drag-and-drop actions\na target accepts an offered mime type\ndestroy the data source\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nadd an offered mime type\nset the available drag-and-drop actions\nC-representation of the messages of this interface, for …\nC representation of this interface, for interop\nC-representation of the messages of this interface, for …\nacknowledge object ID deletion\nThe minimal object version supporting this event\nThe minimal object version supporting this event\nglobal error values\nfatal error event\nget global registry object\nimplementation error in compositor\nmethod doesn’t exist on the specified interface or …\nserver couldn’t find object\nserver is out of memory\nThe minimal object version supporting this request\nThe minimal object version supporting this request\nasynchronous roundtrip\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nget global registry object\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nasynchronous roundtrip\nC-representation of the messages of this interface, for …\nC representation of this interface, for interop\nC-representation of the messages of this interface, for …\nThe minimal object version supporting this event\nThe minimal object version supporting this event\nThe minimal object version supporting this event\nThe minimal object version supporting this event\nThe minimal object version supporting this event\nThe minimal object version supporting this event\nenter event\nkey event\nphysical key state\nkeyboard mapping\nkeyboard mapping format\nleave event\nmodifier and group state\nno keymap; client must understand how to interpret the raw …\nkey is pressed\nThe minimal object version supporting this request\nrelease the keyboard object\nkey is not pressed\nrepeat rate and delay\nlibxkbcommon compatible; to determine the xkb keycode, …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nrelease the keyboard object\nC-representation of the messages of this interface, for …\nC representation of this interface, for interop\nC-representation of the messages of this interface, for …\nindicates this is the current mode\nhuman-readable description of this output\nsent all information about output\nThe minimal object version supporting this event\nThe minimal object version supporting this event\nThe minimal object version supporting this event\nThe minimal object version supporting this event\nThe minimal object version supporting this event\nThe minimal object version supporting this event\n180 degree flip around a vertical axis\nflip and rotate 180 degrees counter-clockwise\nflip and rotate 270 degrees counter-clockwise\nflip and rotate 90 degrees counter-clockwise\nproperties of the output\nhorizontal BGR\nhorizontal RGB\nmode information\nadvertise available modes for the output\nname of this output\nno geometry\nno transform\nindicates this is the preferred mode\nThe minimal object version supporting this request\nrelease the output object\noutput scaling properties\nsubpixel geometry information\ntransform from framebuffer to output\nunknown geometry\nvertical BGR\nvertical RGB\n180 degrees counter-clockwise\n270 degrees counter-clockwise\n90 degrees counter-clockwise\nReturns the set containing all flags.\nReturns the intersection between the two sets of flags.\nDisables all flags disabled in the set.\nReturns the union of the two sets of flags.\nAdds the set of flags.\nReturns the raw value of the flags currently stored.\nReturns the left flags, but with all the right flags …\nToggles the set of flags.\nReturns the complement of this set of flags.\nReturns <code>true</code> if all of the flags in <code>other</code> are contained …\nReturns the difference between the flags in <code>self</code> and <code>other</code>.\nReturns an empty set of flags.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, preserving all …\nInserts the specified flags in-place.\nReturns the intersection between the flags in <code>self</code> and …\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if all flags are currently set.\nReturns <code>true</code> if no flags are currently stored.\nReturns the complement of this set of flags.\nrelease the output object\nRemoves the specified flags in-place.\nInserts or removes the specified flags depending on the …\nReturns the set difference of the two sets of flags.\nDisables all flags enabled in the set.\nReturns the symmetric difference between the flags in <code>self</code> …\nToggles the specified flags in-place.\nReturns the union of between the flags in <code>self</code> and <code>other</code>.\nC-representation of the messages of this interface, for …\nC representation of this interface, for interop\nC-representation of the messages of this interface, for …\naxis types\naxis event\naxis click event\naxis source types\naxis source event\naxis stop event\npointer button event\nphysical button state\ncontinuous coordinate space\nThe minimal object version supporting this event\nThe minimal object version supporting this event\nThe minimal object version supporting this event\nThe minimal object version supporting this event\nThe minimal object version supporting this event\nThe minimal object version supporting this event\nThe minimal object version supporting this event\nThe minimal object version supporting this event\nThe minimal object version supporting this event\nenter event\nfinger on a touch surface\nend of a pointer event sequence\nhorizontal axis\nleave event\npointer motion event\nthe button is pressed\nThe minimal object version supporting this request\nThe minimal object version supporting this request\nrelease the pointer object\nthe button is not pressed\ngiven wl_surface has another role\nset the pointer surface\nvertical axis\na physical wheel rotation\na physical wheel tilt\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nrelease the pointer object\nset the pointer surface\nC-representation of the messages of this interface, for …\nC representation of this interface, for interop\nC-representation of the messages of this interface, for …\nadd rectangle to region\ndestroy region\nThe minimal object version supporting this request\nThe minimal object version supporting this request\nThe minimal object version supporting this request\nsubtract rectangle from region\nadd rectangle to region\ndestroy region\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nsubtract rectangle from region\nC representation of this interface, for interop\nC-representation of the messages of this interface, for …\nbind an object to the display\nThe minimal object version supporting this event\nThe minimal object version supporting this event\nannounce global object\nannounce removal of global object\nThe minimal object version supporting this request\nbind an object to the display\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nC-representation of the messages of this interface, for …\nC representation of this interface, for interop\nC-representation of the messages of this interface, for …\nseat capabilities changed\nseat capability bitmask\nThe minimal object version supporting this event\nThe minimal object version supporting this event\nwl_seat error values\nreturn keyboard object\nreturn pointer object\nreturn touch object\nthe seat has one or more keyboards\nget_pointer, get_keyboard or get_touch called on seat …\nunique identifier for this seat\nthe seat has pointer devices\nThe minimal object version supporting this request\nThe minimal object version supporting this request\nThe minimal object version supporting this request\nThe minimal object version supporting this request\nrelease the seat object\nthe seat has touch devices\nReturns the set containing all flags.\nReturns the intersection between the two sets of flags.\nDisables all flags disabled in the set.\nReturns the union of the two sets of flags.\nAdds the set of flags.\nReturns the raw value of the flags currently stored.\nReturns the left flags, but with all the right flags …\nToggles the set of flags.\nReturns the complement of this set of flags.\nReturns <code>true</code> if all of the flags in <code>other</code> are contained …\nReturns the difference between the flags in <code>self</code> and <code>other</code>.\nReturns an empty set of flags.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, preserving all …\nreturn keyboard object\nreturn pointer object\nreturn touch object\nInserts the specified flags in-place.\nReturns the intersection between the flags in <code>self</code> and …\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if all flags are currently set.\nReturns <code>true</code> if no flags are currently stored.\nReturns the complement of this set of flags.\nrelease the seat object\nRemoves the specified flags in-place.\nInserts or removes the specified flags depending on the …\nReturns the set difference of the two sets of flags.\nDisables all flags enabled in the set.\nReturns the symmetric difference between the flags in <code>self</code> …\nToggles the specified flags in-place.\nReturns the union of between the flags in <code>self</code> and <code>other</code>.\nC-representation of the messages of this interface, for …\nC representation of this interface, for interop\nC-representation of the messages of this interface, for …\ncreate a shell surface from a surface\nThe minimal object version supporting this request\ngiven wl_surface has another role\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\ncreate a shell surface from a surface\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nC representation of this interface, for interop\nC-representation of the messages of this interface, for …\nbottom edge\nbottom and left edges\nbottom and right edges\nsuggest resize\nno preference, apply default policy\nswitch output mode to the smallest mode that can fit the …\nThe minimal object version supporting this event\nThe minimal object version supporting this event\nThe minimal object version supporting this event\nno upscaling, center on output and add black borders to …\ndifferent method to set the surface fullscreen\ndo not set keyboard focus\nleft edge\nstart an interactive move\nno edge\nping client\nrespond to a ping event\npopup interaction is done\nThe minimal object version supporting this request\nThe minimal object version supporting this request\nThe minimal object version supporting this request\nThe minimal object version supporting this request\nThe minimal object version supporting this request\nThe minimal object version supporting this request\nThe minimal object version supporting this request\nThe minimal object version supporting this request\nThe minimal object version supporting this request\nThe minimal object version supporting this request\nedge values for resizing\nstart an interactive resize\nright edge\nscale, preserve the surface’s aspect ratio and center on …\nset surface class\nmake the surface a fullscreen surface\nmake the surface a maximized surface\nmake the surface a popup surface\nset surface title\nmake the surface a toplevel surface\nmake the surface a transient surface\ntop edge\ntop and left edges\ntop and right edges\ndetails of transient behaviour\nstart an interactive move\nReturns the set containing all flags.\nReturns the set containing all flags.\nReturns the intersection between the two sets of flags.\nReturns the intersection between the two sets of flags.\nDisables all flags disabled in the set.\nDisables all flags disabled in the set.\nReturns the union of the two sets of flags.\nReturns the union of the two sets of flags.\nAdds the set of flags.\nAdds the set of flags.\nReturns the raw value of the flags currently stored.\nReturns the raw value of the flags currently stored.\nReturns the left flags, but with all the right flags …\nReturns the left flags, but with all the right flags …\nToggles the set of flags.\nToggles the set of flags.\nReturns the complement of this set of flags.\nReturns the complement of this set of flags.\nReturns <code>true</code> if all of the flags in <code>other</code> are contained …\nReturns <code>true</code> if all of the flags in <code>other</code> are contained …\nReturns the difference between the flags in <code>self</code> and <code>other</code>.\nReturns the difference between the flags in <code>self</code> and <code>other</code>.\nReturns an empty set of flags.\nReturns an empty set of flags.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, preserving all …\nConvert from underlying bit representation, preserving all …\nInserts the specified flags in-place.\nInserts the specified flags in-place.\nReturns the intersection between the flags in <code>self</code> and …\nReturns the intersection between the flags in <code>self</code> and …\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if all flags are currently set.\nReturns <code>true</code> if all flags are currently set.\nReturns <code>true</code> if no flags are currently stored.\nReturns <code>true</code> if no flags are currently stored.\nReturns the complement of this set of flags.\nReturns the complement of this set of flags.\nrespond to a ping event\nRemoves the specified flags in-place.\nRemoves the specified flags in-place.\nstart an interactive resize\nInserts or removes the specified flags depending on the …\nInserts or removes the specified flags depending on the …\nset surface class\nmake the surface a fullscreen surface\nmake the surface a maximized surface\nmake the surface a popup surface\nset surface title\nmake the surface a toplevel surface\nmake the surface a transient surface\nReturns the set difference of the two sets of flags.\nReturns the set difference of the two sets of flags.\nDisables all flags enabled in the set.\nDisables all flags enabled in the set.\nReturns the symmetric difference between the flags in <code>self</code> …\nReturns the symmetric difference between the flags in <code>self</code> …\nToggles the specified flags in-place.\nToggles the specified flags in-place.\nReturns the union of between the flags in <code>self</code> and <code>other</code>.\nReturns the union of between the flags in <code>self</code> and <code>other</code>.\nC-representation of the messages of this interface, for …\nC representation of this interface, for interop\nC-representation of the messages of this interface, for …\n16-bit ABGR 1555 format, [15:0] A:B:G:R 1:5:5:5 little …\n[63:0] A:B:G:R 16:16:16:16 little endian\n[63:0] A:B:G:R 16:16:16:16 little endian\n32-bit ABGR format, [31:0] A:B:G:R 2:10:10:10 little endian\n16-bit ABGR format, [15:0] A:B:G:R 4:4:4:4 little endian\n32-bit ABGR format, [31:0] A:B:G:R 8:8:8:8 little endian\n16-bit ARGB 1555 format, [15:0] A:R:G:B 1:5:5:5 little …\n[63:0] A:R:G:B 16:16:16:16 little endian\n[63:0] A:R:G:B 16:16:16:16 little endian\n32-bit ARGB format, [31:0] A:R:G:B 2:10:10:10 little endian\n16-bit ARGB format, [15:0] A:R:G:B 4:4:4:4 little endian\n32-bit ARGB format, [31:0] A:R:G:B 8:8:8:8 little endian\n[63:0] A:x:B:x:G:x:R:x 10:6:10:6:10:6:10:6 little endian\npacked AYCbCr format, [31:0] A:Y:Cb:Cr 8:8:8:8 little …\n8-bit BGR format, [7:0] B:G:R 2:3:3\n16-bit BGR 565 format, [15:0] B:G:R 5:6:5 little endian\n24-bit BGR format, [23:0] B:G:R little endian\n32-bit BGRA format, [31:0] B:G:R:A 10:10:10:2 little endian\n16-bit BGRA format, [15:0] B:G:R:A 4:4:4:4 little endian\n16-bit BGRA 5551 format, [15:0] B:G:R:A 5:5:5:1 little …\n32-bit BGRA format, [31:0] B:G:R:A 8:8:8:8 little endian\n32-bit BGRx format, [31:0] B:G:R:x 10:10:10:2 little endian\n16-bit BGRx format, [15:0] B:G:R:x 4:4:4:4 little endian\n16-bit BGRx 5551 format, [15:0] B:G:R:x 5:5:5:1 little …\n32-bit BGRx format, [31:0] B:G:R:x 8:8:8:8 little endian\n8-bit color index format, [7:0] C\ncreate a shm pool\nThe minimal object version supporting this event\nwl_shm error values\npixel formats\npixel format description\n[31:0] G:R 16:16 little endian\n[15:0] G:R 8:8 little endian\nmmapping the file descriptor failed\nbuffer format is not known\ninvalid size or stride during pool or buffer creation\n2 plane YCbCr Cr:Cb format, 2x2 subsampled Cr:Cb plane\n2x2 subsampled Cr:Cb plane\n2 plane YCbCr Cr:Cb format, 2x1 subsampled Cr:Cb plane\n2 plane YCbCr Cb:Cr format, 2x2 subsampled Cb:Cr plane\nnon-subsampled Cr:Cb plane\nnon-subsampled Cb:Cr plane\n2 plane YCbCr Cb:Cr format, 2x1 subsampled Cb:Cr plane\n2x2 subsampled Cr:Cb plane 10 bits per channel\n2x2 subsampled Cr:Cb plane 12 bits per channel\n2x2 subsampled Cr:Cb plane 16 bits per channel\n2x1 subsampled Cr:Cb plane, 10 bit per channel\n[15:0] R little endian\n[7:0] R\nThe minimal object version supporting this request\n[31:0] R:G 16:16 little endian\n[15:0] R:G 8:8 little endian\n8-bit RGB format, [7:0] R:G:B 3:3:2\n16-bit RGB 565 format, [15:0] R:G:B 5:6:5 little endian\n24-bit RGB format, [23:0] R:G:B little endian\n32-bit RGBA format, [31:0] R:G:B:A 10:10:10:2 little endian\n16-bit RBGA format, [15:0] R:G:B:A 4:4:4:4 little endian\n16-bit RGBA 5551 format, [15:0] R:G:B:A 5:5:5:1 little …\n32-bit RGBA format, [31:0] R:G:B:A 8:8:8:8 little endian\n32-bit RGBx format, [31:0] R:G:B:x 10:10:10:2 little endian\n16-bit RGBx format, [15:0] R:G:B:x 4:4:4:4 little endian\n16-bit RGBx 5551 format, [15:0] R:G:B:x 5:5:5:1 little …\n32-bit RGBx format, [31:0] R:G:B:x 8:8:8:8 little endian\npacked YCbCr format, [31:0] Y1:Cr0:Y0:Cb0 8:8:8:8 little …\nY followed by U then V, 10:10:10. Non-linear modifier only\n[23:0] Cr:Cb:Y 8:8:8 little endian\npacked YCbCr format, [31:0] Y1:Cb0:Y0:Cr0 8:8:8:8 little …\n[63:0] X3:X2:Y3:0:Cr0:0:Y2:0:X1:X0:Y1:0:Cb0:0:Y0:0 …\n[63:0] X3:X2:Y3:Cr0:Y2:X1:X0:Y1:Cb0:Y0 …\n16-bit xBGR 1555 format, [15:0] x:B:G:R 1:5:5:5 little …\n[63:0] x:B:G:R 16:16:16:16 little endian\n[63:0] x:B:G:R 16:16:16:16 little endian\n32-bit xBGR format, [31:0] x:B:G:R 2:10:10:10 little endian\n16-bit xBGR format, [15:0] x:B:G:R 4:4:4:4 little endian\n32-bit xBGR format, [31:0] x:B:G:R 8:8:8:8 little endian\n16-bit xRGB format, [15:0] x:R:G:B 1:5:5:5 little endian\n[63:0] x:R:G:B 16:16:16:16 little endian\n[63:0] x:R:G:B 16:16:16:16 little endian\n32-bit xRGB format, [31:0] x:R:G:B 2:10:10:10 little endian\n16-bit xRGB format, [15:0] x:R:G:B 4:4:4:4 little endian\n32-bit RGB format, [31:0] x:R:G:B 8:8:8:8 little endian\n[63:0] X:0:Cr:0:Y:0:Cb:0 12:4:12:4:12:4:12:4 little endian\n[63:0] X:Cr:Y:Cb 16:16:16:16 little endian\n[31:0] X:Cr:Y:Cb 2:10:10:10 little endian\n[31:0] X:Y:Cb:Cr 8:8:8:8 little endian\n[63:0] A3:A2:Y3:0:Cr0:0:Y2:0:A1:A0:Y1:0:Cb0:0:Y0:0 …\n[63:0] A3:A2:Y3:Cr0:Y2:A1:A0:Y1:Cb0:Y0 …\n[63:0] Cr0:0:Y1:0:Cb0:0:Y0:0 10:6:10:6:10:6:10:6 little …\n[63:0] Cr0:0:Y1:0:Cb0:0:Y0:0 12:4:12:4:12:4:12:4 little …\n[63:0] Cr0:Y1:Cb0:Y0 16:16:16:16 little endian per 2 Y …\n[31:0] A:Cr:Y:Cb 2:10:10:10 little endian\n[63:0] A:0:Cr:0:Y:0:Cb:0 12:4:12:4:12:4:12:4 little endian\n[63:0] A:Cr:Y:Cb 16:16:16:16 little endian\n3 plane YCbCr format, 4x4 subsampled Cb (1) and Cr (2) …\n3 plane YCbCr format, 4x1 subsampled Cb (1) and Cr (2) …\n3 plane YCbCr format, 2x2 subsampled Cb (1) and Cr (2) …\n3 plane YCbCr format, 2x1 subsampled Cb (1) and Cr (2) …\n3 plane YCbCr format, non-subsampled Cb (1) and Cr (2) …\npacked YCbCr format, [31:0] Cr0:Y1:Cb0:Y0 8:8:8:8 little …\n3 plane YCbCr format, 4x4 subsampled Cr (1) and Cb (2) …\n3 plane YCbCr format, 4x1 subsampled Cr (1) and Cb (2) …\n3 plane YCbCr format, 2x2 subsampled Cr (1) and Cb (2) …\n3 plane YCbCr format, 2x1 subsampled Cr (1) and Cb (2) …\n3 plane YCbCr format, non-subsampled Cr (1) and Cb (2) …\npacked YCbCr format, [31:0] Cb0:Y1:Cr0:Y0 8:8:8:8 little …\ncreate a shm pool\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nC-representation of the messages of this interface, for …\nC representation of this interface, for interop\nC-representation of the messages of this interface, for …\ncreate a buffer from the pool\ndestroy the pool\nThe minimal object version supporting this request\nThe minimal object version supporting this request\nThe minimal object version supporting this request\nchange the size of the pool mapping\ncreate a buffer from the pool\ndestroy the pool\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nchange the size of the pool mapping\nC representation of this interface, for interop\nC-representation of the messages of this interface, for …\nthe to-be sub-surface is invalid\nunbind from the subcompositor interface\ngive a surface the role sub-surface\nThe minimal object version supporting this request\nThe minimal object version supporting this request\nunbind from the subcompositor interface\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\ngive a surface the role sub-surface\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nC representation of this interface, for interop\nC-representation of the messages of this interface, for …\nwl_surface is not a sibling or the parent\nremove sub-surface interface\nrestack the sub-surface\nrestack the sub-surface\nThe minimal object version supporting this request\nThe minimal object version supporting this request\nThe minimal object version supporting this request\nThe minimal object version supporting this request\nThe minimal object version supporting this request\nThe minimal object version supporting this request\nset sub-surface to desynchronized mode\nreposition the sub-surface\nset sub-surface to synchronized mode\nremove sub-surface interface\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nrestack the sub-surface\nrestack the sub-surface\nset sub-surface to desynchronized mode\nreposition the sub-surface\nset sub-surface to synchronized mode\nC representation of this interface, for interop\nC-representation of the messages of this interface, for …\nset the surface contents\ncommit pending surface state\nmark part of the surface damaged\nmark part of the surface damaged using buffer coordinates\ndelete surface\nThe minimal object version supporting this event\nThe minimal object version supporting this event\nsurface enters an output\nwl_surface error values\nrequest a frame throttling hint\nbuffer offset is invalid\nbuffer scale value is invalid\nbuffer size is invalid\nbuffer transform value is invalid\nsurface leaves an output\nset the surface contents offset\nThe minimal object version supporting this request\nThe minimal object version supporting this request\nThe minimal object version supporting this request\nThe minimal object version supporting this request\nThe minimal object version supporting this request\nThe minimal object version supporting this request\nThe minimal object version supporting this request\nThe minimal object version supporting this request\nThe minimal object version supporting this request\nThe minimal object version supporting this request\nThe minimal object version supporting this request\nsets the buffer scaling factor\nsets the buffer transformation\nset input region\nset opaque region\nset the surface contents\ncommit pending surface state\nmark part of the surface damaged\nmark part of the surface damaged using buffer coordinates\ndelete surface\nrequest a frame throttling hint\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nset the surface contents offset\nsets the buffer scaling factor\nsets the buffer transformation\nset input region\nset opaque region\nC-representation of the messages of this interface, for …\nC representation of this interface, for interop\nC-representation of the messages of this interface, for …\ntouch session cancelled\ntouch down event and beginning of a touch sequence\nThe minimal object version supporting this event\nThe minimal object version supporting this event\nThe minimal object version supporting this event\nThe minimal object version supporting this event\nThe minimal object version supporting this event\nThe minimal object version supporting this event\nThe minimal object version supporting this event\nend of touch frame event\nupdate of touch point coordinates\nupdate orientation of touch point\nThe minimal object version supporting this request\nrelease the touch object\nupdate shape of touch point\nend of a touch event sequence\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nrelease the touch object\nC-representation of the messages of this interface, for …\nC representation of this interface, for interop\nC-representation of the messages of this interface, for …\nBindings to the client library <code>libwayland-client.so</code>\nVarious types and functions that are used by both the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.")