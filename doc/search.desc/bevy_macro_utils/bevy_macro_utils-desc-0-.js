searchState.loadedDescShard("bevy_macro_utils", 0, "A collection of helper types and functions for working on …\nThe path to the <code>Cargo.toml</code> file for the Bevy project.\nA single named value, representable as a string.\nDerive a label trait\nFinds an identifier that will not conflict with the …\nThis module contains unit structs that should be used …\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a literal boolean from the provided expression as a …\nGet a literal string from the provided expression.\nReturns the path for the crate with the given name.\nReturns the path for the crate with the given name.\nGet the fields of a data structure if that structure is a …\nAttempt to get a subcrate path under Bevy by name\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAttempt to retrieve the path of a particular package in …\nAttempt to parse provided path as a syntax tree node.\nAttempt to parse the provided path as a syntax tree node\nFully Qualified (FQ) short name for <code>core::any::Any</code>\nFully Qualified (FQ) short name for <code>Box</code>\nFully Qualified (FQ) short name for <code>Clone</code>\nFully Qualified (FQ) short name for <code>Default</code>\nFully Qualified (FQ) short name for <code>Option</code>\nFully Qualified (FQ) short name for <code>Result</code>\nFully Qualified (FQ) short name for <code>Send</code>\nFully Qualified (FQ) short name for <code>Sync</code>\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.")