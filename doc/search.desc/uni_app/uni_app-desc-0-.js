searchState.loadedDescShard("uni_app", 0, "game window configuration\nwindow event types\ntext input events\nwindow close button was pressed and […\na file has been dropped on the game window. Get it with …\nkeyboard press\nkeyboard release\nmouse button press\nmouse cursor position in pixels from the window top-left\nmouse button release\nwindow resize\nkeyboard and mouse events\nReturns the argument unchanged.\nReturns the argument unchanged.\nfilesystem api\nstart in full screen (native target only)\nstart the program without actually creating a window, for …\nwhether clicking on the window close button exits the …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nwhether user can resize the window (native target only)\nwhether the mouse cursor is visible while in the window\nthe window/canvas size in pixels\nmain application struct\nthe window title (only visible on native target)\nsync frames with screen frequency (can only be disabled on …\ndata associated with a key press event Possible values for …\ndata associated with a key release event Possible values …\ndata associated with a mouse button press/release event\nwhether an alt key is pressed\nwhether an alt key is pressed\nthe button number (0=left, 1=middle, 2=right, …)\nscancode : top left letter is “KeyQ” even on an azerty …\nscancode : top left letter is “KeyQ” even on an azerty …\nwhether a control key is pressed\nwhether a control key is pressed\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nvirtual key code : top left letter is “KeyQ” on …\nvirtual key code : top left letter is “KeyQ” on …\nwhether a shift key is pressed\nwhether a shift key is pressed\nA socket address could not be bound because the address is …\nA nonexistent interface was requested or the requested …\nAn entity already exists, often a file.\nProgram argument list too long.\nThe operation failed because a pipe was closed.\nThe connection was aborted (terminated) by the remote …\nThe connection was refused by the remote server.\nThe connection was reset by the remote server.\nCross-device or cross-filesystem (hard) link or rename.\nDeadlock (avoided).\nA non-empty directory was specified where an empty …\nExecutable file is busy.\nsynchronous (native) / asynchronous (web) file API\nthe root filesystem API\nFile larger than allowed or supported.\nLoop in the filesystem or IO subsystem; often, too many …\nFilesystem quota was exceeded.\nThe remote host is not reachable.\nThis operation was interrupted.\nData not valid for the operation were encountered.\nA filename was invalid.\nA parameter was incorrect.\nThe filesystem object is, unexpectedly, a directory.\nThe system’s networking is down.\nThe network containing the remote host is not reachable.\nA filesystem object is, unexpectedly, not a directory.\nThe network operation failed because it was not connected …\nAn entity was not found, often a file.\nSeek on unseekable file.\nA custom error that does not fall under any other I/O …\nAn operation could not be completed, because it failed to …\nThe operation lacked the necessary privileges to complete.\nThe filesystem or storage medium is read-only, but a write …\nResource is busy.\nStale network file handle.\nThe underlying storage (typically, a filesystem) is full.\nThe I/O operation’s timeout expired, causing it to be …\nToo many (hard) links to the same filesystem object.\nAn error returned when an operation could not be completed …\nThis operation is unsupported on this platform.\nThe operation needs to block to complete, but the blocking …\nAn error returned when an operation could not be completed …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nreturn true if the file has been loaded On native target, …\nopen a file. For a file to be accessible from both native …\nOnce the file has been loaded (see <code>File::is_ready</code>), …\nOnce the file has been loaded (see <code>File::is_ready</code>), …\nthe main application struct\nreturn the opengl context for this window\nexit current process (close the game window). On web …\nReturns the argument unchanged.\nreturn the command line / URL parameters\nreturn the screen resolution in physical pixels\nreturns the HiDPI factor for current screen\nCalls <code>U::from(self)</code>.\ncreate a new game window\nreturn the time since the start of the program in seconds\nprint a message on standard output (native) or js console …\nstart the game loop, calling provided callback every frame\nactivate or deactivate fullscreen. only works on native …")