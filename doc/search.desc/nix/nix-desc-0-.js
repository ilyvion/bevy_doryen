searchState.loadedDescShard("nix", 0, "Rust friendly bindings to the various *nix system …\nContains the error value\nNix’s main error type.\nCommon trait used to represent file system paths by many …\nContains the success value\nNix Result Type\nIs the path empty?\nLength of the path in bytes\nMostly platform-specific functionality\nSafe wrappers around functions found in libc “unistd.h”…\nExecute a function with this path as a <code>CStr</code>.\nThe sentinel value indicates that a function failed and …\nBackwards compatibility hack for Nix &lt;= 0.21.0 users\nConvert this <code>Error</code> to an <code>Errno</code>.\nReturns the platform-specific value of errno\nReturns the argument unchanged.\nCreate a nix Error from a given errno\nCalls <code>U::from(self)</code>.\nCreate a new invalid argument error (<code>EINVAL</code>)\nReturns <code>Ok(value)</code> if it does not contain the sentinel …\nRemoves byte range from a file without leaving a hole.\nIncreases file space by inserting a hole within the file …\nFile size is not changed.\nDeallocates space by creating a hole.\nShared file data extants are made private to the file.\nZeroes space in specified byte range.\nThe file descriptor will automatically be closed during a …\nThe size of the file cannot be increased.\nPrevents further calls to <code>fcntl()</code> with <code>F_ADD_SEALS</code>.\nThe file cannot be reduced in size.\nThe file contents cannot be modified.\nMode argument flags for fallocate determining operation …\nAdditional configuration flags for <code>fcntl</code>’s <code>F_SETFD</code>.\nConfiguration options for opened files.\nMask for the access mode of the file.\nOpen the file in append-only mode.\nGenerate a signal when input or output becomes possible.\nCloses the file descriptor once an <code>execve</code> call is made.\nCreate the file if it does not exist.\nTry to minimize cache effects of the I/O for this file.\nIf the specified path isn’t a directory, fail.\nImplicitly follow each <code>write()</code> with an <code>fdatasync()</code>.\nError out if a file was not created.\nSame as <code>O_SYNC</code>.\nAllow files whose sizes can’t be represented in an <code>off_t</code> …\nSame as <code>O_NONBLOCK</code>.\nDo not update the file last access time during <code>read(2)</code>s.\nDon’t attach the device as the process’ controlling …\n<code>open()</code> will fail if the given path is a symbolic link.\nWhen possible, open the file in nonblocking mode.\nObtain a file descriptor for low-level access.\nOnly allow reading.\nAllow both reading and writing.\nSimilar to <code>O_DSYNC</code> but applies to <code>read</code>s instead.\nImplicitly follow each <code>write()</code> with an <code>fsync()</code>.\nCreate an unnamed temporary file.\nTruncate an existing regular file to 0 length if it allows …\nOnly allow writing.\nAdditional flags for file sealing, which allows for …\nReturns the set containing all flags.\nReturns the set containing all flags.\nReturns the set containing all flags.\nReturns the set containing all flags.\nReturns the set containing all flags.\nReturns the set containing all flags.\nReturns the intersection between the two sets of flags.\nReturns the intersection between the two sets of flags.\nReturns the intersection between the two sets of flags.\nReturns the intersection between the two sets of flags.\nReturns the intersection between the two sets of flags.\nReturns the intersection between the two sets of flags.\nDisables all flags disabled in the set.\nDisables all flags disabled in the set.\nDisables all flags disabled in the set.\nDisables all flags disabled in the set.\nDisables all flags disabled in the set.\nDisables all flags disabled in the set.\nReturns the union of the two sets of flags.\nReturns the union of the two sets of flags.\nReturns the union of the two sets of flags.\nReturns the union of the two sets of flags.\nReturns the union of the two sets of flags.\nReturns the union of the two sets of flags.\nAdds the set of flags.\nAdds the set of flags.\nAdds the set of flags.\nAdds the set of flags.\nAdds the set of flags.\nAdds the set of flags.\nReturns the raw value of the flags currently stored.\nReturns the raw value of the flags currently stored.\nReturns the raw value of the flags currently stored.\nReturns the raw value of the flags currently stored.\nReturns the raw value of the flags currently stored.\nReturns the raw value of the flags currently stored.\nReturns the left flags, but with all the right flags …\nReturns the left flags, but with all the right flags …\nReturns the left flags, but with all the right flags …\nReturns the left flags, but with all the right flags …\nReturns the left flags, but with all the right flags …\nReturns the left flags, but with all the right flags …\nToggles the set of flags.\nToggles the set of flags.\nToggles the set of flags.\nToggles the set of flags.\nToggles the set of flags.\nToggles the set of flags.\nReturns the complement of this set of flags.\nReturns the complement of this set of flags.\nReturns the complement of this set of flags.\nReturns the complement of this set of flags.\nReturns the complement of this set of flags.\nReturns the complement of this set of flags.\nReturns <code>true</code> if all of the flags in <code>other</code> are contained …\nReturns <code>true</code> if all of the flags in <code>other</code> are contained …\nReturns <code>true</code> if all of the flags in <code>other</code> are contained …\nReturns <code>true</code> if all of the flags in <code>other</code> are contained …\nReturns <code>true</code> if all of the flags in <code>other</code> are contained …\nReturns <code>true</code> if all of the flags in <code>other</code> are contained …\nReturns the difference between the flags in <code>self</code> and <code>other</code>.\nReturns the difference between the flags in <code>self</code> and <code>other</code>.\nReturns the difference between the flags in <code>self</code> and <code>other</code>.\nReturns the difference between the flags in <code>self</code> and <code>other</code>.\nReturns the difference between the flags in <code>self</code> and <code>other</code>.\nReturns the difference between the flags in <code>self</code> and <code>other</code>.\nReturns an empty set of flags.\nReturns an empty set of flags.\nReturns an empty set of flags.\nReturns an empty set of flags.\nReturns an empty set of flags.\nReturns an empty set of flags.\nManipulates file space.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, preserving all …\nConvert from underlying bit representation, preserving all …\nConvert from underlying bit representation, preserving all …\nConvert from underlying bit representation, preserving all …\nConvert from underlying bit representation, preserving all …\nConvert from underlying bit representation, preserving all …\nInserts the specified flags in-place.\nInserts the specified flags in-place.\nInserts the specified flags in-place.\nInserts the specified flags in-place.\nInserts the specified flags in-place.\nInserts the specified flags in-place.\nReturns the intersection between the flags in <code>self</code> and …\nReturns the intersection between the flags in <code>self</code> and …\nReturns the intersection between the flags in <code>self</code> and …\nReturns the intersection between the flags in <code>self</code> and …\nReturns the intersection between the flags in <code>self</code> and …\nReturns the intersection between the flags in <code>self</code> and …\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if all flags are currently set.\nReturns <code>true</code> if all flags are currently set.\nReturns <code>true</code> if all flags are currently set.\nReturns <code>true</code> if all flags are currently set.\nReturns <code>true</code> if all flags are currently set.\nReturns <code>true</code> if all flags are currently set.\nReturns <code>true</code> if no flags are currently stored.\nReturns <code>true</code> if no flags are currently stored.\nReturns <code>true</code> if no flags are currently stored.\nReturns <code>true</code> if no flags are currently stored.\nReturns <code>true</code> if no flags are currently stored.\nReturns <code>true</code> if no flags are currently stored.\nReturns the complement of this set of flags.\nReturns the complement of this set of flags.\nReturns the complement of this set of flags.\nReturns the complement of this set of flags.\nReturns the complement of this set of flags.\nReturns the complement of this set of flags.\nRemoves the specified flags in-place.\nRemoves the specified flags in-place.\nRemoves the specified flags in-place.\nRemoves the specified flags in-place.\nRemoves the specified flags in-place.\nRemoves the specified flags in-place.\nInserts or removes the specified flags depending on the …\nInserts or removes the specified flags depending on the …\nInserts or removes the specified flags depending on the …\nInserts or removes the specified flags depending on the …\nInserts or removes the specified flags depending on the …\nInserts or removes the specified flags depending on the …\nReturns the set difference of the two sets of flags.\nReturns the set difference of the two sets of flags.\nReturns the set difference of the two sets of flags.\nReturns the set difference of the two sets of flags.\nReturns the set difference of the two sets of flags.\nReturns the set difference of the two sets of flags.\nDisables all flags enabled in the set.\nDisables all flags enabled in the set.\nDisables all flags enabled in the set.\nDisables all flags enabled in the set.\nDisables all flags enabled in the set.\nDisables all flags enabled in the set.\nReturns the symmetric difference between the flags in <code>self</code> …\nReturns the symmetric difference between the flags in <code>self</code> …\nReturns the symmetric difference between the flags in <code>self</code> …\nReturns the symmetric difference between the flags in <code>self</code> …\nReturns the symmetric difference between the flags in <code>self</code> …\nReturns the symmetric difference between the flags in <code>self</code> …\nToggles the specified flags in-place.\nToggles the specified flags in-place.\nToggles the specified flags in-place.\nToggles the specified flags in-place.\nToggles the specified flags in-place.\nToggles the specified flags in-place.\nReturns the union of between the flags in <code>self</code> and <code>other</code>.\nReturns the union of between the flags in <code>self</code> and <code>other</code>.\nReturns the union of between the flags in <code>self</code> and <code>other</code>.\nReturns the union of between the flags in <code>self</code> and <code>other</code>.\nReturns the union of between the flags in <code>self</code> and <code>other</code>.\nReturns the union of between the flags in <code>self</code> and <code>other</code>.\nInterfaces for managing memory-backed files.\nOperating system signals.\nInterface for the <code>signalfd</code> syscall.\nSocket interface functions\nGet filesystem statistics, non-portably\nGet filesystem statistics\nTimer API via signals.\nTimer API via file descriptors.\nWait for a process to change status\nReturns the set containing all flags.\nReturns the set containing all flags.\nReturns the intersection between the two sets of flags.\nReturns the intersection between the two sets of flags.\nDisables all flags disabled in the set.\nDisables all flags disabled in the set.\nReturns the union of the two sets of flags.\nReturns the union of the two sets of flags.\nAdds the set of flags.\nAdds the set of flags.\nReturns the raw value of the flags currently stored.\nReturns the raw value of the flags currently stored.\nReturns the left flags, but with all the right flags …\nReturns the left flags, but with all the right flags …\nToggles the set of flags.\nToggles the set of flags.\nReturns the complement of this set of flags.\nReturns the complement of this set of flags.\nReturns <code>true</code> if all of the flags in <code>other</code> are contained …\nReturns <code>true</code> if all of the flags in <code>other</code> are contained …\nReturns the difference between the flags in <code>self</code> and <code>other</code>.\nReturns the difference between the flags in <code>self</code> and <code>other</code>.\nReturns an empty set of flags.\nReturns an empty set of flags.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, preserving all …\nConvert from underlying bit representation, preserving all …\nInserts the specified flags in-place.\nInserts the specified flags in-place.\nReturns the intersection between the flags in <code>self</code> and …\nReturns the intersection between the flags in <code>self</code> and …\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if all flags are currently set.\nReturns <code>true</code> if all flags are currently set.\nReturns <code>true</code> if no flags are currently stored.\nReturns <code>true</code> if no flags are currently stored.\nReturns the complement of this set of flags.\nReturns the complement of this set of flags.\nRemoves the specified flags in-place.\nRemoves the specified flags in-place.\nInserts or removes the specified flags depending on the …\nInserts or removes the specified flags depending on the …\nReturns the set difference of the two sets of flags.\nReturns the set difference of the two sets of flags.\nDisables all flags enabled in the set.\nDisables all flags enabled in the set.\nReturns the symmetric difference between the flags in <code>self</code> …\nReturns the symmetric difference between the flags in <code>self</code> …\nToggles the specified flags in-place.\nToggles the specified flags in-place.\nReturns the union of between the flags in <code>self</code> and <code>other</code>.\nReturns the union of between the flags in <code>self</code> and <code>other</code>.\nReturns the set containing all flags.\nReturns the intersection between the two sets of flags.\nDisables all flags disabled in the set.\nReturns the union of the two sets of flags.\nAdds the set of flags.\nReturns the raw value of the flags currently stored.\nReturns the left flags, but with all the right flags …\nToggles the set of flags.\nReturns the complement of this set of flags.\nReturns <code>true</code> if all of the flags in <code>other</code> are contained …\nReturns the difference between the flags in <code>self</code> and <code>other</code>.\nReturns an empty set of flags.\nReturns the argument unchanged.\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, preserving all …\nInserts the specified flags in-place.\nReturns the intersection between the flags in <code>self</code> and …\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if all flags are currently set.\nReturns <code>true</code> if no flags are currently stored.\nReturns the complement of this set of flags.\nRemoves the specified flags in-place.\nInserts or removes the specified flags depending on the …\nReturns the set difference of the two sets of flags.\nDisables all flags enabled in the set.\nReturns the symmetric difference between the flags in <code>self</code> …\nToggles the specified flags in-place.\nReturns the union of between the flags in <code>self</code> and <code>other</code>.\nAllow sealing operations on this file.\nSet the close-on-exec (<code>FD_CLOEXEC</code>) flag on the new file …\nOptions that change the behavior of <code>memfd_create</code>.\nReturns the set containing all flags.\nReturns the intersection between the two sets of flags.\nDisables all flags disabled in the set.\nReturns the union of the two sets of flags.\nAdds the set of flags.\nReturns the raw value of the flags currently stored.\nReturns the left flags, but with all the right flags …\nToggles the set of flags.\nReturns the complement of this set of flags.\nReturns <code>true</code> if all of the flags in <code>other</code> are contained …\nReturns the difference between the flags in <code>self</code> and <code>other</code>.\nReturns an empty set of flags.\nReturns the argument unchanged.\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, preserving all …\nInserts the specified flags in-place.\nReturns the intersection between the flags in <code>self</code> and …\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if all flags are currently set.\nReturns <code>true</code> if no flags are currently stored.\nCreates an anonymous file that lives in memory, and return …\nReturns the complement of this set of flags.\nRemoves the specified flags in-place.\nInserts or removes the specified flags depending on the …\nReturns the set difference of the two sets of flags.\nDisables all flags enabled in the set.\nReturns the symmetric difference between the flags in <code>self</code> …\nToggles the specified flags in-place.\nReturns the union of between the flags in <code>self</code> and <code>other</code>.\nUse the given signal-catching function, which takes in the …\nWhen catching a <code>Signal::SIGCHLD</code> signal, the signal will be …\nWhen catching a <code>Signal::SIGCHLD</code> signal, the system will not\nFurther occurrences of the delivered signal are not masked …\nThe system will deliver the signal to the process on a …\nThe handler is reset back to the default at the moment the …\nRequests that certain system calls restart if interrupted …\nThis flag is controlled internally by Nix.\nAbort\nAlarm clock\nBus error\nTo parent on child stop or exit\nContinue a stopped process\nFloating point exception\nHangup\nIllegal instruction (not reset when caught)\nInterrupt\nInput/output possible signal\nAlias for <code>SIGABRT</code>\nKill (cannot be caught or ignored)\nWrite on a pipe with no one to read it\nAlias for <code>SIGIO</code>\nProfiling time alarm\nPower failure imminent.\nQuit\nSegmentation violation\nStack fault (obsolete)\nSendable stop signal not from tty\nBad system call\nSoftware termination signal from kill\nTrace trap (not reset when caught)\nStop signal from tty\nTo readers pgrp upon background tty read\nLike TTIN if (tp-&gt;t_local&amp;LTOSTOP)\nAlias for <code>SIGSYS</code>\nUrgent condition on IO channel\nUser defined signal 1\nUser defined signal 2\nVirtual time alarm\nWindow size changes\nExceeded CPU time limit\nExceeded file size limit\nThe new mask is the union of the current mask and the …\nThe current mask is replaced by the specified set.\nThe new mask is the intersection of the current mask and …\nControls the behavior of a <code>SigAction</code>\nAction to take on receipt of a signal. Corresponds to …\nUse the given signal-catching function, which takes in the …\nDefault signal handling.\nUsed to request asynchronous notification of the …\nA signal handler.\nRequest that the signal be ignored.\nSpecifies a set of <code>Signal</code>s that may be blocked, waited …\nIterator for a <code>SigSet</code>.\nNo notification will be delivered\nSpecifies the notification method used by a <code>SigEvent</code>\nNotify by delivering a signal to the process.\nNotify by delivering a signal to a thread.\nSpecifies how certain functions should manipulate a signal …\nTypes of operating system signals\nIterate through all signals defined by this operating …\nAdd the specified signal to the set.\nReturns the set containing all flags.\nInitialize to include all signals.\nReturns a mutable pointer to the <code>sigevent</code> wrapped by <code>self</code>\nReturns name of signal.\nReturns the intersection between the two sets of flags.\nDisables all flags disabled in the set.\nReturns the union of the two sets of flags.\nAdds the set of flags.\nReturns the raw value of the flags currently stored.\nReturns the left flags, but with all the right flags …\nToggles the set of flags.\nRemove all signals from this set.\nReturns the complement of this set of flags.\nReturns <code>true</code> if all of the flags in <code>other</code> are contained …\nReturn whether this set includes the specified signal.\nReturns the difference between the flags in <code>self</code> and <code>other</code>.\nReturns an empty set of flags.\nInitialize to include nothing.\nReturns the flags set on the action.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, preserving all …\nConverts a <code>libc::sigset_t</code> object to a <code>SigSet</code> without …\nReturns the action’s handler.\nInserts the specified flags in-place.\nReturns the intersection between the flags in <code>self</code> and …\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if all flags are currently set.\nReturns <code>true</code> if no flags are currently stored.\nReturns an iterator that yields the signals contained in …\nIterate through all signals defined by this OS\nSend a signal to a process\nSend a signal to a process group\nReturns the set of signals that are blocked during …\nCreates a new action.\n<strong>Note:</strong> this constructor does not allow the user to set the …\nReturns the complement of this set of flags.\nManages the signal mask (set of blocked signals) for the …\nSend a signal to the current thread\nRemoves the specified flags in-place.\nRemove the specified signal from this set.\nInserts or removes the specified flags depending on the …\nChanges the action taken by a process on receipt of a …\nReturn a copy of the inner structure\nSignal management (see signal(3p))\nExamine and change blocked signals.\nReturns the set difference of the two sets of flags.\nDisables all flags enabled in the set.\nReturns the symmetric difference between the flags in <code>self</code> …\nAdds the set of signals to the signal mask for the calling …\nGets the currently blocked (masked) set of signals for the …\nSets the set of signals as the signal mask for the calling …\nSets the set of signals as the signal mask, and returns …\nRemoves the set of signals from the signal mask for the …\nToggles the specified flags in-place.\nIdentifies a thread for <code>SigevNotify::SigevThreadId</code>\nReturns the union of between the flags in <code>self</code> and <code>other</code>.\nSuspends execution of the calling thread until one of the …\nWill be present in the <code>si_value</code> field of the …\nWill be present in the <code>si_value</code> field of the …\nSignal to deliver\nSignal to send\nLWP ID of the thread to notify\nA helper struct for creating, reading and closing a …\nReturns the set containing all flags.\nReturns the intersection between the two sets of flags.\nDisables all flags disabled in the set.\nReturns the union of the two sets of flags.\nAdds the set of flags.\nReturns the raw value of the flags currently stored.\nReturns the left flags, but with all the right flags …\nToggles the set of flags.\nReturns the complement of this set of flags.\nReturns <code>true</code> if all of the flags in <code>other</code> are contained …\nReturns the difference between the flags in <code>self</code> and <code>other</code>.\nReturns an empty set of flags.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, preserving all …\nInserts the specified flags in-place.\nReturns the intersection between the flags in <code>self</code> and …\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if all flags are currently set.\nReturns <code>true</code> if no flags are currently stored.\nReturns the complement of this set of flags.\nRemoves the specified flags in-place.\nInserts or removes the specified flags depending on the …\nCreates a new file descriptor for reading signals.\nReturns the set difference of the two sets of flags.\nDisables all flags enabled in the set.\nReturns the symmetric difference between the flags in <code>self</code> …\nToggles the specified flags in-place.\nReturns the union of between the flags in <code>self</code> and <code>other</code>.\nThese constants specify the protocol family to be used in …\nInterface to kernel crypto API\nSocket address for the Linux kernel crypto API\nAppleTalk\nAccess to raw ATM PVCs\nAccess to ATM Switched Virtual Circuits\nAmateur radio AX.25 protocol\nBluetooth low-level socket protocol\nFurther receptions and transmissions will be disallowed.\nCan’t be used for creating sockets; mostly used for …\nEricsson’s Communication CPU to Application CPU …\nController Area Network automotive bus protocol\nSupports datagrams (connectionless, unreliable messages of …\nDECet protocol sockets.\nAcorn Econet protocol\nNon-DIX type protocol number defined for the Ethernet IEEE …\nRepresents a socket option that can be retrieved.\nInfiniBand native addressing \nIEEE 802.15.4 WPAN (wireless personal area network) raw …\nIPv4 Internet protocols (see <code>ip(7)</code>)\nIPv6 Internet protocols (see <code>ipv6(7)</code>)\nIPX - Novell protocols\nSocket interface over IrDA\nNew “modular ISDN” driver interface protocol\nIUCV (inter-user communication vehicle) z/VM protocol for …\nKey management protocol.\nLogical link control (IEEE 802.2 LLC) protocol\nSet the <code>close-on-exec</code> flag for the file descriptor …\nReceive flags: Control Data was discarded (buffer too …\nEnables nonblocking operation; if the operation would …\nTerminates a record (when this notion is supported, as for …\nThis flag specifies that queued errors should be received …\nRequests not to send <code>SIGPIPE</code> errors when the other end …\nSends or requests out-of-band data on sockets that support …\nPeeks at an incoming message. The data is treated as …\nFor raw (<code>Packet</code>), Internet datagram (since Linux …\nReceive operation blocks until the full amount of data can …\nMultiprotocol Label Switching\nFlags for send/recv and their relatives\nReserved for “802.2LLC project”; never used.\nAX.25 packet layer protocol. (see netrom(4))\nKernel user interface device (see <code>netlink(7)</code>)\nAddress for the Linux kernel user interface device.\nAuditing (ref)\nNetlink interface to request information about ciphers …\nDECnet routing messages (ref)\nAccess to FIB lookup from user space (ref)\nTransport IPv6 packets from netfilter to user space.  Used …\nOpen-iSCSI (ref)\nKernel messages to user space (ref)\nNetfilter subsystem (ref)\nInfiniband RDMA (ref)\nReceives routing and link updates and may be used to …\nSCSI Transports (ref)\nSELinux event notifications. (ref)\nQuery information about sockets of various protocol …\nReserved for user-mode socket protocols (ref)\nNear field communication\nLow level packet interface (see <code>packet(7)</code>)\nNokia cellular modem IPC/RPC interface\nGeneric PPP transport layer, for setting up L2 tunnels …\nProvides raw network protocol access.\nProvides a reliable datagram layer that does not guarantee …\nReliable Datagram Sockets (RDS) protocol\nFurther receptions will be disallowed.\nRATS (Radio Amateur Telecommunications Society) Open …\nRx, Andrew File System remote procedure call protocol\nSet close-on-exec on the new descriptor\nSet non-blocking mode on the new socket\nReport hardware timestamps as generated by …\nCollect receiving timestamps as reported by hardware\nCollect receiving timestamps as reported by software\nReport any software timestamps when available.\nCollect transmiting timestamps as reported by hardware\nCollect transmiting timestamps as reported by software\nThis was a short-lived (between Linux 2.1.30 and …\nProvides a sequenced, reliable, two-way connection- based …\nRepresents a socket option that can be set.\nIBM SNA\nRepresents a socket address\nAdditional socket options\nConstants used in <code>socket</code> and <code>socketpair</code> to specify the …\nThese constants are used to specify the communication …\nAnything that, in C, can be cast back and forth to <code>sockaddr</code>…\nA container for any sockaddr type\nProvides sequenced, reliable, two-way, connection- based …\nTCP protocol (ip(7))\nConfiguration flags for <code>SO_TIMESTAMPING</code> interface\nTIPC, “cluster domain sockets” protocol\nUDP protocol (ip(7))\nLocal communication (see <code>unix(7)</code>)\nA wrapper around <code>sockaddr_un</code>.\nUnix credentials of the sending process.\nUnspecified address family, (see <code>getaddrinfo(3)</code>)\nVMWare VSockets protocol for hypervisor-guest interaction.\nSocket address for VMWare VSockets protocol\nLegacy protocol for wide area network (WAN) connectivity …\nFurther  transmissions will be disallowed.\nITU-T X.25 / ISO-8208 protocol (see <code>x25(7)</code>)\nAccept a connection on a socket\nAccept a connection on a socket\nReturn the socket’s cipher name, for example <code>sha1</code>.\nReturn the socket’s cipher type, for example <code>hash</code> or <code>aead</code>…\nReturns the set containing all flags.\nReturns the set containing all flags.\nReturns the set containing all flags.\nIf this address represents an abstract socket, return its …\nSafely and falliably downcast to an immutable reference\nSafely and falliably downcast to a mutable reference\nConversion from nix’s SockAddr type to the underlying …\nReturns a mutable pointer to the raw <code>sockaddr_un</code> struct\nSafely and falliably downcast to an immutable reference\nSafely and falliably downcast to a mutable reference\nReturns a raw pointer to the inner structure.  Useful for …\nReturns a raw pointer to the inner structure.  Useful for …\nReturns a pointer to the raw <code>sockaddr_un</code> struct\nDowncast to an immutable <code>[UnixAddr]</code> reference.\nDowncast to a mutable <code>[UnixAddr]</code> reference.\nSafely and falliably downcast to an immutable reference\nSafely and falliably downcast to a mutable reference\nBind a name to a socket\nReturns the intersection between the two sets of flags.\nReturns the intersection between the two sets of flags.\nReturns the intersection between the two sets of flags.\nDisables all flags disabled in the set.\nDisables all flags disabled in the set.\nDisables all flags disabled in the set.\nReturns the union of the two sets of flags.\nReturns the union of the two sets of flags.\nReturns the union of the two sets of flags.\nAdds the set of flags.\nAdds the set of flags.\nAdds the set of flags.\nReturns the raw value of the flags currently stored.\nReturns the raw value of the flags currently stored.\nReturns the raw value of the flags currently stored.\nReturns the left flags, but with all the right flags …\nReturns the left flags, but with all the right flags …\nReturns the left flags, but with all the right flags …\nToggles the set of flags.\nToggles the set of flags.\nToggles the set of flags.\nContext Identifier (CID)\nReturns the complement of this set of flags.\nReturns the complement of this set of flags.\nReturns the complement of this set of flags.\nInitiate a connection on a socket\nReturns <code>true</code> if all of the flags in <code>other</code> are contained …\nReturns <code>true</code> if all of the flags in <code>other</code> are contained …\nReturns <code>true</code> if all of the flags in <code>other</code> are contained …\nReturns the difference between the flags in <code>self</code> and <code>other</code>.\nReturns the difference between the flags in <code>self</code> and <code>other</code>.\nReturns the difference between the flags in <code>self</code> and <code>other</code>.\nReturns an empty set of flags.\nReturns an empty set of flags.\nReturns an empty set of flags.\nReturn the address family of this socket\nReturn the address family of this socket\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, preserving all …\nConvert from underlying bit representation, preserving all …\nConvert from underlying bit representation, preserving all …\nCreate a new <code>AddressFamily</code> from an integer value retrieved …\nUnsafe constructor from a variable length source\nLook up the value of this socket option on the given …\nGet the address of the peer connected to the socket <code>fd</code>.\nGet the current address to which the socket <code>fd</code> is bound.\nGet the current value for the requested socket option\nReturns the group identifier\nReturn the socket’s multicast groups mask\nInserts the specified flags in-place.\nInserts the specified flags in-place.\nInserts the specified flags in-place.\nReturns the intersection between the flags in <code>self</code> and …\nReturns the intersection between the flags in <code>self</code> and …\nReturns the intersection between the flags in <code>self</code> and …\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if all flags are currently set.\nReturns <code>true</code> if all flags are currently set.\nReturns <code>true</code> if all flags are currently set.\nReturns <code>true</code> if no flags are currently stored.\nReturns <code>true</code> if no flags are currently stored.\nReturns <code>true</code> if no flags are currently stored.\nReturn the length of valid data in the sockaddr structure.\nReturn the length of valid data in the sockaddr structure.\nListen for connections on a socket\nCreate a new sockaddr_un representing a filesystem path.\nConstruct a new socket address from its port ID and …\nConstruct an <code>AF_ALG</code> socket from its cipher name and type.\nConstruct a <code>VsockAddr</code> from its raw fields.\nCreates a new instance with the credentials of the current …\nCreate a new <code>sockaddr_un</code> representing an address in the “…\nReturns the complement of this set of flags.\nReturns the complement of this set of flags.\nReturns the complement of this set of flags.\nIf this address represents a filesystem path, return that …\nReturns the addrlen of this socket - …\nReturn the socket’s port ID.\nReturns the process identifier\nPort number\nReceive data from a connection-oriented socket. Returns …\nReceive data from a connectionless or connection-oriented …\nRemoves the specified flags in-place.\nRemoves the specified flags in-place.\nRemoves the specified flags in-place.\nSend data to a connection-oriented socket. Returns the …\nSend a message to a socket\nSet the value of this socket option on the given socket.\nInserts or removes the specified flags depending on the …\nInserts or removes the specified flags depending on the …\nInserts or removes the specified flags depending on the …\nSets the value for the requested socket option\nShut down part of a full-duplex connection.\nReturn the available space in the structure\nReturn the available space in the structure\nReturn the appropriate <code>SockAddr</code> type from a …\nCreate an endpoint for communication\nCreate a pair of connected sockets\nSocket options as used by <code>setsockopt</code> and <code>getsockopt</code>.\nReturns the set difference of the two sets of flags.\nReturns the set difference of the two sets of flags.\nReturns the set difference of the two sets of flags.\nDisables all flags enabled in the set.\nDisables all flags enabled in the set.\nDisables all flags enabled in the set.\nReturns the symmetric difference between the flags in <code>self</code> …\nReturns the symmetric difference between the flags in <code>self</code> …\nReturns the symmetric difference between the flags in <code>self</code> …\nToggles the specified flags in-place.\nToggles the specified flags in-place.\nToggles the specified flags in-place.\nReturns the user identifier\nReturns the union of between the flags in <code>self</code> and <code>other</code>.\nReturns the union of between the flags in <code>self</code> and <code>other</code>.\nReturns the union of between the flags in <code>self</code> and <code>other</code>.\nReturns a value indicating whether or not this socket has …\nBind this socket to a particular device like “eth0”.\nSet or get the broadcast flag.\nSet or get the don’t route flag.\nEnable extended reliable error message passing.\nSet or retrieve the current time-to-live field that is …\nSet “don’t fragment packet” flag on the IPv6 packet.\nControl receiving of asynchronous error options.\nSet the unicast hop limit for the socket.\nEnable sending of keep-alive messages on …\nWhen enabled,  a close(2) or shutdown(2) will not return …\nSet the mark for each packet sent through this socket …\nIf this option is enabled, out-of-band data is directly …\nEnable or disable the receiving of the <code>SCM_CREDENTIALS</code> …\nReturn the credentials of the foreign process connected to …\nSets or gets the maximum socket receive buffer in bytes.\nUsing this socket option, a privileged (<code>CAP_NET_ADMIN</code>) …\nSpecify the receiving timeout until reporting an error.\nEnable or disable the receiving of the <code>SO_TIMESTAMP</code> …\nEnable or disable the receiving of the <code>SO_TIMESTAMPNS</code> …\nEnables local address reuse\nPermits multiple AF_INET or AF_INET6 sockets to be bound …\nIndicates that an unsigned 32-bit value ancillary message …\nSpecify the sending timeout until reporting an error.\nSets or gets the maximum socket send buffer in bytes.\nUsing this socket option, a privileged (<code>CAP_NET_ADMIN</code>)  …\nGets the socket type as an integer.\nGet and clear the pending socket error.\nThe maximum segment size for outgoing TCP packets.\nSpecifies exact type of timestamping information collected …\nConfigures the behavior of time-based transmission of …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nFlags for <code>fchmodat</code> function.\n“File mode / permissions” flags.\n“File type” flags for <code>mknod</code> and related functions.\nFlags for <code>utimensat</code> function.\nReturns the set containing all flags.\nReturns the set containing all flags.\nReturns the intersection between the two sets of flags.\nReturns the intersection between the two sets of flags.\nDisables all flags disabled in the set.\nDisables all flags disabled in the set.\nReturns the union of the two sets of flags.\nReturns the union of the two sets of flags.\nAdds the set of flags.\nAdds the set of flags.\nReturns the raw value of the flags currently stored.\nReturns the raw value of the flags currently stored.\nReturns the left flags, but with all the right flags …\nReturns the left flags, but with all the right flags …\nToggles the set of flags.\nToggles the set of flags.\nReturns the complement of this set of flags.\nReturns the complement of this set of flags.\nReturns <code>true</code> if all of the flags in <code>other</code> are contained …\nReturns <code>true</code> if all of the flags in <code>other</code> are contained …\nReturns the difference between the flags in <code>self</code> and <code>other</code>.\nReturns the difference between the flags in <code>self</code> and <code>other</code>.\nReturns an empty set of flags.\nReturns an empty set of flags.\nChange the file permission bits of the file specified by a …\nChange the file permission bits.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, preserving all …\nConvert from underlying bit representation, preserving all …\nChange the access and modification times of the file …\nInserts the specified flags in-place.\nInserts the specified flags in-place.\nReturns the intersection between the flags in <code>self</code> and …\nReturns the intersection between the flags in <code>self</code> and …\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if all flags are currently set.\nReturns <code>true</code> if all flags are currently set.\nReturns <code>true</code> if no flags are currently stored.\nReturns <code>true</code> if no flags are currently stored.\nChange the access and modification times of a file without …\nCreate a special or ordinary file, by pathname.\nCreate a special or ordinary file, relative to a given …\nReturns the complement of this set of flags.\nReturns the complement of this set of flags.\nRemoves the specified flags in-place.\nRemoves the specified flags in-place.\nInserts or removes the specified flags depending on the …\nInserts or removes the specified flags depending on the …\nReturns the set difference of the two sets of flags.\nReturns the set difference of the two sets of flags.\nDisables all flags enabled in the set.\nDisables all flags enabled in the set.\nReturns the symmetric difference between the flags in <code>self</code> …\nReturns the symmetric difference between the flags in <code>self</code> …\nToggles the specified flags in-place.\nToggles the specified flags in-place.\nReturns the union of between the flags in <code>self</code> and <code>other</code>.\nReturns the union of between the flags in <code>self</code> and <code>other</code>.\nChange the access and modification times of a file.\nChange the access and modification times of a file.\nDescribes the file system type as known by the operating …\nDescribes a mounted file system\nSize of a block\nTotal data blocks in filesystem\nFree blocks available to unprivileged user\nFree blocks in filesystem\nTotal file nodes in filesystem\nFree file nodes in filesystem\nFilesystem ID\nMagic code defining system type\nReturns the argument unchanged.\nReturns the argument unchanged.\nIdentifies a mounted file system\nDescribes a mounted file system.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMaximum length of filenames\nOptimal transfer block size\nDescribes a mounted file system.\nFile system mount Flags\nAppend-only file\nImmutable file\nAllow mandatory locks on the filesystem\nDo not update access times on files\nDo not interpret character or block-special devices\nDo not update access times on files\nDo not allow execution of binaries on the filesystem\nDo not allow the set-uid bits to have an effect\nRead Only\nUpdate access time relative to modify/change time\nAll IO should be done synchronously\nWrite on file/directory/symlink\nWrapper around the POSIX <code>statvfs</code> struct\nReturns the set containing all flags.\nReturns the intersection between the two sets of flags.\nDisables all flags disabled in the set.\nReturns the union of the two sets of flags.\nAdds the set of flags.\nReturns the raw value of the flags currently stored.\nReturns the left flags, but with all the right flags …\nToggles the set of flags.\nget the file system block size\nGet the number of blocks.\nGet the number of free blocks for unprivileged users\nGet the number of free blocks in the file system\nReturns the complement of this set of flags.\nReturns <code>true</code> if all of the flags in <code>other</code> are contained …\nReturns the difference between the flags in <code>self</code> and <code>other</code>.\nReturns an empty set of flags.\nGet the total number of file inodes\nGet the number of free file inodes for unprivileged users\nGet the number of free file inodes\nGet the file system id\nGet the mount flags\nGet the fundamental file system block size\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, preserving all …\nReturn a <code>Statvfs</code> object with information about <code>fd</code>\nInserts the specified flags in-place.\nReturns the intersection between the flags in <code>self</code> and …\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if all flags are currently set.\nReturns <code>true</code> if no flags are currently stored.\nGet the maximum filename length\nReturns the complement of this set of flags.\nRemoves the specified flags in-place.\nInserts or removes the specified flags depending on the …\nReturn a <code>Statvfs</code> object with information about the <code>path</code>\nReturns the set difference of the two sets of flags.\nDisables all flags enabled in the set.\nReturns the symmetric difference between the flags in <code>self</code> …\nToggles the specified flags in-place.\nReturns the union of between the flags in <code>self</code> and <code>other</code>.\nSystem info structure returned by <code>sysinfo</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the load average tuple.\nCurrent number of processes.\nReturns the total amount of installed RAM in Bytes.\nReturns the amount of completely unused RAM in Bytes.\nReturns the amount of unused swap memory in Bytes.\nReturns the amount of swap memory in Bytes.\nReturns system information.\nReturns the time since system boot.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMakes a new <code>TimeSpec</code> with given number of microseconds.\nMakes a new <code>TimeVal</code> with given number of microseconds.\nMakes a new <code>TimeSpec</code> with given number of nanoseconds.\nMakes a new <code>TimeVal</code> with given number of nanoseconds.  …\nConstruct a new <code>TimeSpec</code> from its components\nConstruct a new <code>TimeVal</code> from its components\nAn enumeration allowing the definition of the expiration …\nAlarm will trigger every specified interval of time.\nAlarm will trigger after a specified delay and then every …\nAlarm will trigger once after the time given in <code>TimeSpec</code>\nA Unix signal per-process timer.\nFlags that are used for arming the timer.\nReturns the argument unchanged.\nGet the parameters for the alarm currently set, if any.\nCalls <code>U::from(self)</code>.\nCreates a new timer based on the clock defined by <code>clockid</code>. …\nReturn the number of timers that have overrun\nSet a new alarm on the timer.\nLike <code>CLOCK_MONOTONIC</code>, except that <code>CLOCK_BOOTTIME</code> includes …\nLike <code>CLOCK_BOOTTIME</code>, but will wake the system if it is …\nA non-settable monotonically increasing clock.\nA settable system-wide real-time clock.\nLike <code>CLOCK_REALTIME</code>, but will wake the system if it is …\nThe type of the clock used to mark the progress of the …\nAn enumeration allowing the definition of the expiration …\nAlarm will trigger every specified interval of time.\nAlarm will trigger after a specified delay and then every …\nAlarm will trigger once after the time given in <code>TimeSpec</code>\nSet the <code>FD_CLOEXEC</code> flag on the file descriptor.\nSet the <code>O_NONBLOCK</code> flag on the open file description …\nA timerfd instance. This is also a file descriptor, you …\nAdditional flags to change the behaviour of the file …\nFlags that are used for arming the timer.\nReturns the set containing all flags.\nReturns the set containing all flags.\nReturns the intersection between the two sets of flags.\nReturns the intersection between the two sets of flags.\nDisables all flags disabled in the set.\nDisables all flags disabled in the set.\nReturns the union of the two sets of flags.\nReturns the union of the two sets of flags.\nAdds the set of flags.\nAdds the set of flags.\nReturns the raw value of the flags currently stored.\nReturns the raw value of the flags currently stored.\nReturns the left flags, but with all the right flags …\nReturns the left flags, but with all the right flags …\nToggles the set of flags.\nToggles the set of flags.\nReturns the complement of this set of flags.\nReturns the complement of this set of flags.\nReturns <code>true</code> if all of the flags in <code>other</code> are contained …\nReturns <code>true</code> if all of the flags in <code>other</code> are contained …\nReturns the difference between the flags in <code>self</code> and <code>other</code>.\nReturns the difference between the flags in <code>self</code> and <code>other</code>.\nReturns an empty set of flags.\nReturns an empty set of flags.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, preserving all …\nConvert from underlying bit representation, preserving all …\nGet the parameters for the alarm currently set, if any.\nInserts the specified flags in-place.\nInserts the specified flags in-place.\nReturns the intersection between the flags in <code>self</code> and …\nReturns the intersection between the flags in <code>self</code> and …\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if all flags are currently set.\nReturns <code>true</code> if all flags are currently set.\nReturns <code>true</code> if no flags are currently stored.\nReturns <code>true</code> if no flags are currently stored.\nCreates a new timer based on the clock defined by <code>clockid</code>. …\nReturns the complement of this set of flags.\nReturns the complement of this set of flags.\nRemoves the specified flags in-place.\nRemoves the specified flags in-place.\nInserts or removes the specified flags depending on the …\nSets a new alarm on the timer.\nInserts or removes the specified flags depending on the …\nReturns the set difference of the two sets of flags.\nReturns the set difference of the two sets of flags.\nDisables all flags enabled in the set.\nDisables all flags enabled in the set.\nReturns the symmetric difference between the flags in <code>self</code> …\nReturns the symmetric difference between the flags in <code>self</code> …\nToggles the specified flags in-place.\nToggles the specified flags in-place.\nReturns the union of between the flags in <code>self</code> and <code>other</code>.\nReturns the union of between the flags in <code>self</code> and <code>other</code>.\nRemove the alarm if any is set.\nWait for the configured alarm to expire.\nWait for any child\nThe process was previously stopped but has resumed …\nThe process exited normally (as with <code>exit()</code> or returning …\nThe ID argument for <code>waitid</code>\nWait for the child whose process group ID matches the …\nWait for the child referred to by the given PID file …\nWait for the child whose process ID matches the given PID\nThe traced process was stopped by a <code>PTRACE_EVENT_*</code> event. …\nThe traced process was stopped by execution of a system …\nThe process was killed by the given signal. The third field\nThere are currently no state changes to report in any …\nThe process is alive, but was stopped by the given signal. …\nReport the status of selected processes that have …\nReport the status of selected processes which have …\nDo not block when there are no processes wishing to report …\nDon’t reap, just poll status.\nAn alias for WUNTRACED.\nReport the status of selected processes which are stopped …\nControls the behavior of <code>waitpid</code>.\nPossible return values from <code>wait()</code> or <code>waitpid()</code>.\nWait on all children, regardless of type\nWait for “clone” children only.\nDon’t wait on children of other threads in this group\nReturns the set containing all flags.\nReturns the intersection between the two sets of flags.\nDisables all flags disabled in the set.\nReturns the union of the two sets of flags.\nAdds the set of flags.\nReturns the raw value of the flags currently stored.\nReturns the left flags, but with all the right flags …\nToggles the set of flags.\nReturns the complement of this set of flags.\nReturns <code>true</code> if all of the flags in <code>other</code> are contained …\nReturns the difference between the flags in <code>self</code> and <code>other</code>.\nReturns an empty set of flags.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, preserving all …\nConvert a raw <code>wstatus</code> as returned by <code>waitpid</code>/<code>wait</code> into a …\nInserts the specified flags in-place.\nReturns the intersection between the flags in <code>self</code> and …\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if all flags are currently set.\nReturns <code>true</code> if no flags are currently stored.\nReturns the complement of this set of flags.\nExtracts the PID from the WaitStatus unless it equals …\nRemoves the specified flags in-place.\nInserts or removes the specified flags depending on the …\nReturns the set difference of the two sets of flags.\nDisables all flags enabled in the set.\nReturns the symmetric difference between the flags in <code>self</code> …\nToggles the specified flags in-place.\nReturns the union of between the flags in <code>self</code> and <code>other</code>.\nWait for any child process to change status or a signal is …\nWait for a process to change status\nWait for a process to change status\nClock identifier\nGets the raw <code>clockid_t</code> wrapped by <code>self</code>\nGet the clock id of the specified process id, (see …\nGet the resolution of the specified clock, (see …\nGet the time of the specified clock, (see clock_gettime(2)…\nSet the time of the specified clock, (see clock_settime(2)…\nReturns the argument unchanged.\nCreates <code>ClockId</code> from raw <code>clockid_t</code>\nCalls <code>U::from(self)</code>.\nReturns the current time on the clock id\nReturns <code>ClockId</code> of a <code>pid</code> CPU-time clock\nReturns resolution of the clock id\nSets time to <code>timespec</code> on the clock id\nOptions for access()\nTest for existence of file.\nRepresents the successful result of calling <code>fork</code>\nFlags for <code>linkat</code> function.\nProcess identifier\nTest for read permission.\nSpecify an offset relative to the current file location.\nSpecify an offset relative to the next location in the …\nSpecify an offset relative to the end of the file.\nSpecify an offset relative to the next hole in the file …\nSpecify an offset relative to the start of the file.\nFlags for <code>unlinkat</code> function.\nTest for write permission.\nDirective that tells <code>lseek</code> and <code>lseek64</code> what the offset is …\nTest for execute (search) permission.\nChecks the file named by <code>path</code> for accessibility according …\nAlarm signal scheduling.\nReturns the set containing all flags.\nGet the raw <code>pid_t</code> wrapped by <code>self</code>.\nReturns the intersection between the two sets of flags.\nDisables all flags disabled in the set.\nReturns the union of the two sets of flags.\nAdds the set of flags.\nReturns the raw value of the flags currently stored.\nReturns the left flags, but with all the right flags …\nToggles the set of flags.\nChange the current working directory of the calling …\nClose a raw file descriptor\nReturns the complement of this set of flags.\nReturns <code>true</code> if all of the flags in <code>other</code> are contained …\nDaemonize this process by detaching from the controlling …\nReturns the difference between the flags in <code>self</code> and <code>other</code>.\nCreate a copy of the specified file descriptor (see dup(2)…\nCreate a copy of the specified file descriptor using the …\nCreate a new copy of the specified file descriptor using …\nReturns an empty set of flags.\nReplace the current process image with a new one (see …\nReplace the current process image with a new one (see …\nExecute program relative to a directory file descriptor …\nReplace the current process image with a new one and …\nReplace the current process image with a new one and …\nChecks the file named by <code>path</code> for accessibility according …\nChange the current working directory of the process to the …\nSynchronize the data of a file\nReplace the current process image with a new one (see …\nCreate a new child process duplicating the parent process (…\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, preserving all …\nCreates <code>Pid</code> from raw <code>pid_t</code>.\nSynchronize changes to a file\nTruncate a file to a specified length\nReturns the current directory as a <code>PathBuf</code>\nGet the group id of the calling process (see getpgrp(3)).\nGet the pid of this process (see getpid(2)).\nGet the pid of this processes’ parent (see getpid(2)).\nGet the process group ID of a session leader getsid(2).\nGet the caller’s thread ID (see gettid(2).\nInserts the specified flags in-place.\nReturns the intersection between the flags in <code>self</code> and …\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if all flags are currently set.\nReturn <code>true</code> if this is the child process of the <code>fork()</code>\nReturns <code>true</code> if no flags are currently stored.\nReturns <code>true</code> if this is the parent process of the <code>fork()</code>\nLink one file to another file\nMove the read/write file offset.\nCreates new directory <code>path</code> with access rights <code>mode</code>.  (see …\nCreates new fifo special file (named pipe) with path <code>path</code> …\nCreates new fifo special file (named pipe) with path <code>path</code> …\nCreates a regular file which persists even after process …\nReturns the complement of this set of flags.\nReturns PID of parent of calling process\nSuspend the thread until a signal is received.\nCreate an interprocess channel.\nLike <code>pipe</code>, but allows setting certain file descriptor …\nRead from a raw file descriptor.\nRemoves the specified flags in-place.\nInserts or removes the specified flags depending on the …\nSet a process group ID (see setpgid(2)).\nCreate new session and set process group id (see setsid(2)…\nSuspend execution for an interval of time\nReturns the set difference of the two sets of flags.\nDisables all flags enabled in the set.\nCreates a symbolic link at <code>path2</code> which points to <code>path1</code>.\nReturns the symmetric difference between the flags in <code>self</code> …\nCommit filesystem caches to disk\nReturns PID of calling process\nToggles the specified flags in-place.\nTruncate a file to a specified length\nReturns the union of between the flags in <code>self</code> and <code>other</code>.\nRemove a directory entry\nRemove a directory entry\nWrite to a raw file descriptor.\nCancel an previously set alarm signal.\nSchedule an alarm signal.")