name: build

on:
    push:
        branches: [master]
        paths-ignore:
            - "README.md"
            - "CHANGELOG.md"
            - ".gitignore"
    pull_request:
        branches: [master]
        paths-ignore:
            - "README.md"
            - "CHANGELOG.md"
            - ".gitignore"

env:
    CARGO_TERM_COLOR: always

jobs:
    test:
        name: Test
        runs-on: ${{ matrix.config.os }}
        strategy:
            fail-fast: false
            matrix:
                config:
                    - { os: "ubuntu-latest", toolchain: "stable" }
                    - { os: "ubuntu-latest", toolchain: "beta" }
                    - { os: "ubuntu-latest", toolchain: "nightly" }
                    - { os: "windows-latest", toolchain: "stable" }
                    - { os: "macOS-latest", toolchain: "stable" }
        steps:
            - uses: actions/checkout@v2
              with:
                  submodules: true

            - name: Install Rust
              uses: dtolnay/rust-toolchain@master
              with:
                  toolchain: ${{ matrix.config.toolchain }}

            - name: Cargo build
              run: cargo build --all-features
              continue-on-error: ${{ matrix.config.toolchain == 'nightly' }}

            - name: Cargo test
              run: cargo test --all-features
              continue-on-error: ${{ matrix.config.toolchain == 'nightly' }}

    style:
        name: Check Style
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2
              with:
                  submodules: true

            - name: Install Rust
              uses: dtolnay/rust-toolchain@stable
              with:
                  components: clippy, rustfmt

            - name: Run cargo fmt
              run: cargo fmt --all -- --check

            - name: Run cargo clippy
              run: cargo clippy --all-features

    tarpaulin:
        name: Report coverage
        runs-on: ubuntu-latest
        if: github.event_name != 'pull_request'
        container:
            image: xd009642/tarpaulin:develop-nightly
            options: --security-opt seccomp=unconfined

        steps:
            - name: Checkout repository
              uses: actions/checkout@v2

            - name: Generate code coverage
              run: |
                  cargo +nightly tarpaulin --verbose --all-features --workspace --timeout 120 --out Xml

            - name: Upload coverage
              uses: codecov/codecov-action@v3
              with:
                  token: ${{ secrets.CODECOV_TOKEN }}
                  fail_ci_if_error: true

    deploy_docs_and_examples:
        name: Deploy documentation and examples
        runs-on: ubuntu-latest
        needs: test
        if: github.ref == 'refs/heads/master' && github.event_name != 'pull_request'
        steps:
            - name: Checkout
              uses: actions/checkout@v3

            - name: Install Rust
              uses: dtolnay/rust-toolchain@stable

            - name: Build documentation
              run: cargo doc --all-features

            - name: Finalize documentation
              run: |
                  echo "<meta http-equiv=\"refresh\" content=\"0; url=doc/bevy_doryen\">" > target/doc/index.html
                  touch target/.nojekyll

            - name: Install trunk
              uses: jetli/trunk-action@v0.4.0
              with:
                  # Optional version of trunk to install(eg. 'v0.16.0', 'latest')
                  version: "latest"

            - name: Build examples
              run: cd example_runner; trunk build --release; cd ..

            - name: Copy examples into target
              run: mv -R example_runner/dist target/examples

            - name: Deploy
              uses: JamesIves/github-pages-deploy-action@v4
              with:
                  folder: target
